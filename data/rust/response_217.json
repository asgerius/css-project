[{"tags": ["module", "rust"], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 8925336, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-zgxWesHlQDY/AAAAAAAAAAI/AAAAAAAAaBc/zivyqp-Usn0/photo.jpg?sz=128", "display_name": "Filip Krawczyk", "link": "https://stackoverflow.com/users/8925336/filip-krawczyk"}, "edited": false, "score": 1, "creation_date": 1551916586, "post_id": 55033999, "comment_id": 96820531, "body": "I thought that <code>mod</code> was for importing. Thanks for clearing things up and through explanation! Have a nice day!"}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 8, "last_activity_date": 1551916349, "creation_date": 1551916349, "answer_id": 55033999, "question_id": 55033685, "link": "https://stackoverflow.com/questions/55033685/rust-cant-import-1-module-from-2-files/55033999#55033999", "title": "Rust: Can&#39;t import 1 module from 2 files", "body": "<p>You seem to be mixing up declaring a module (<code>mod &lt;name&gt;</code>) and importing a module (<code>use &lt;name&gt;</code>). The <code>mod</code> keyword is used to declare a new module, either in another file, or with curly braces immediately following the keyword. You can then import the module with <code>use</code>.</p>\n\n<p>When using <code>mod</code> to declare a module in another file, it looks in specific locations. For example, when you use the following statement in <code>main.rs</code>, <code>mod.rs</code>, or <code>lib.rs</code>...</p>\n\n<pre><code>mod abc;\n</code></pre>\n\n<p>...the compiler will search for contents of the module in <code>./abc.rs</code> and <code>abc/mod.rs</code>. However, if I have the same statement in a different file, like <code>def.rs</code>, it will instead check in <code>def/abc.rs</code> and <code>def/abc/mod.rs</code>. This is why your code isn't compiling.</p>\n\n<p>To fix this, declare the module in your main file, and then import it elsewhere. This is what the code would look like:</p>\n\n<pre><code>// in main.rs\nmod args_parser;\nmod trim;\nuse args_parser::...; // use whatever you need in main\n\n// in trim.rs\nuse crate::args_parser::...; // use whatever you need in trim - note the crate:: prefix\n</code></pre>\n"}], "owner": {"reputation": 75, "user_id": 8925336, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-zgxWesHlQDY/AAAAAAAAAAI/AAAAAAAAaBc/zivyqp-Usn0/photo.jpg?sz=128", "display_name": "Filip Krawczyk", "link": "https://stackoverflow.com/users/8925336/filip-krawczyk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 522, "favorite_count": 0, "accepted_answer_id": 55033999, "answer_count": 1, "score": 5, "last_activity_date": 1551916349, "creation_date": 1551914071, "question_id": 55033685, "link": "https://stackoverflow.com/questions/55033685/rust-cant-import-1-module-from-2-files", "title": "Rust: Can&#39;t import 1 module from 2 files", "body": "<p>This is my file structure:</p>\n\n<pre><code>src/\n\u251c\u2500\u2500 main.rs\n\u251c\u2500\u2500 args_parser.rs\n\u2514\u2500\u2500 trim.rs\n</code></pre>\n\n<p>In <code>args_parser.rs</code> I have enum <code>Args</code> that I want to use in <code>main.rs</code> and in <code>trim.rs</code>, but when trying to run <code>trim.rs</code> with <code>mod args_parser;</code> at the beginning it spits out this error message:</p>\n\n<pre><code>error[E0583]: file not found for module `args_parser`\n --&gt; src/trim.rs:1:5\n  |\n1 | mod args_parser;\n  |     ^^^^^^^^^^^\n  |\n  = help: name the file either trim/args_parser.rs or trim/args_parser/mod.rs inside the directory \"src\"\n</code></pre>\n\n<p>It seems like it expects trim.rs to import only files that are from this module, but in Rust by example (<a href=\"https://doc.rust-lang.org/rust-by-example/mod/split.html\" rel=\"noreferrer\">https://doc.rust-lang.org/rust-by-example/mod/split.html</a>) it says \"This declaration will look for a file named <code>my.rs</code> or <code>my/mod.rs</code>\".</p>\n\n<p>Is there any way I can import this file from <code>main.rs</code> and from <code>trim.rs</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551913608, "post_id": 55033113, "comment_id": 96819709, "body": "Your <code>Alphabets</code> enum variants each wrap around a <code>LitratureX</code> value, so what should the value of that be for your default implementation? Should it be a Literature1 with <code>Region::None</code> for <code>Seek</code> and <code>Write</code>?"}, {"owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551925200, "post_id": 55033113, "comment_id": 96822459, "body": "Yes , thats correct"}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551921930, "post_id": 55033667, "comment_id": 96821719, "body": "Or you could just derive <code>Default</code>"}, {"owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "edited": false, "score": 0, "creation_date": 1551925110, "post_id": 55033667, "comment_id": 96822437, "body": "@loganfsmyth Rather than Hardcoding the last item as ::A2 Im  looking for a dynamic way to get the last item  Thanks"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1551969184, "post_id": 55033667, "comment_id": 96842841, "body": "@mcarton Unfortunately that would require <code>CountryId</code> to implement <code>Default</code> because of <a href=\"https://github.com/rust-lang/rust/issues/26925\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/26925</a>."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "edited": false, "score": 2, "creation_date": 1551969262, "post_id": 55033667, "comment_id": 96842901, "body": "@co2f2e Would something like <a href=\"https://github.com/idanarye/rust-smart-default\" rel=\"nofollow noreferrer\">github.com/idanarye/rust-smart-default</a> work? There&#39;s nothing special about the last variant of an enum, so it&#39;s it&#39;s not something that would be built in."}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 1, "last_activity_date": 1551913972, "creation_date": 1551913972, "answer_id": 55033667, "question_id": 55033113, "link": "https://stackoverflow.com/questions/55033113/return-the-last-element-of-an-enum-as-default-in-rust/55033667#55033667", "title": "Return the last element of an enum as Default in Rust", "body": "<p>I'm assuming that you essentially want default values all the way down, where each region defaults to <code>Region::None</code>. In that context, it would make the most sense to define <code>Default</code> on each nested type, e.g.</p>\n\n<p>Default for <code>Region</code></p>\n\n<pre><code>impl&lt;CountryId&gt; Default for Region&lt;CountryId&gt; {\n    fn default() -&gt; Self {\n        Region::None\n    }\n}\n</code></pre>\n\n<p>Default for <code>Litrature1</code></p>\n\n<pre><code>impl&lt;CountryId&gt; Default for Litrature1&lt;CountryId&gt; {\n    fn default() -&gt; Self {\n        Litrature1 {\n            Seek: Default::default(),\n            Write: Default::default(),\n        }\n    }\n}\n</code></pre>\n\n<p>Default for <code>Litrature2</code></p>\n\n<pre><code>impl&lt;CountryId&gt; Default for Litrature2&lt;CountryId&gt; {\n    fn default() -&gt; Self {\n        Litrature2 {\n            Seek: Default::default(),\n            Write: Default::default(),\n            Work: Default::default(),\n        }\n    }\n}\n</code></pre>\n\n<p>Default for <code>Alphabets</code></p>\n\n<pre><code>impl&lt;CountryId&gt; Default for Alphabets&lt;CountryId&gt; {\n    fn default() -&gt; Self {\n        Alphabets::A2(Default::default())\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=db4096d994bcb9cb4ffeca40937fedac\" rel=\"nofollow noreferrer\">On the Rust playground</a>)</p>\n"}], "owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 251, "favorite_count": 0, "accepted_answer_id": 55033667, "answer_count": 1, "score": 0, "last_activity_date": 1551942143, "creation_date": 1551910911, "last_edit_date": 1551942143, "question_id": 55033113, "link": "https://stackoverflow.com/questions/55033113/return-the-last-element-of-an-enum-as-default-in-rust", "title": "Return the last element of an enum as Default in Rust", "body": "<p>I have a rust implementation as follows and in default implementation, for the enum, I need to return the last element and I need to achieve it without hardcoding it.</p>\n\n<pre><code>#[cfg_attr(feature = \"std\", derive(Debug))]\n#[derive(Clone,  PartialEq, Eq)]\npub enum Region&lt;CountryId&gt; {\n    None,\n    Category(CountryId),\n}\n\n#[cfg_attr(feature = \"std\", derive(Debug))]\n#[derive(Clone, PartialEq, Eq)]\npub struct Litrature1&lt;CountryId&gt; {\n    pub Seek: Region&lt;CountryId&gt;,\n    pub Write: Region&lt;CountryId&gt;,\n}\n\n#[cfg_attr(feature = \"std\", derive(Debug))]\n#[derive(Clone, PartialEq, Eq)]\npub struct Litrature2&lt;CountryId&gt; {\n    pub Seek: Region&lt;CountryId&gt;,\n    pub Write: Region&lt;CountryId&gt;,\n    pub Work: Region&lt;CountryId&gt;,\n}\n\n#[cfg_attr(feature = \"std\", derive(Debug))]\n#[derive(Clone,  PartialEq, Eq)]\npub enum Alphabets&lt;CountryId&gt; {\n    A1(Litrature1&lt;CountryId&gt;),\n    A2(Litrature1&lt;CountryId&gt;)\n}\n\n\nimpl&lt;CountryId&gt; Default for Alphabets&lt;CountryId&gt; {\n    fn default() -&gt; Self {\n        // How to return the last element of the enum as default?\n        Alphabets&lt;CountryId&gt;::A2\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8a723decb142119f88ebbce72bf9297b\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I am uncertain how to make this work</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1551934363, "post_id": 55033033, "comment_id": 96824548, "body": "Here you can find <a href=\"https://doc.rust-lang.org/nightly/edition-guide/rust-2018/module-system/index.html\" rel=\"nofollow noreferrer\">Rust 2018 Module System Documentation</a>"}, {"owner": {"reputation": 4978, "user_id": 650228, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7974f6c6e7dd479c4155cc122a461fce?s=128&d=identicon&r=PG", "display_name": "kittylyst", "link": "https://stackoverflow.com/users/650228/kittylyst"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1551978728, "post_id": 55033033, "comment_id": 96848701, "body": "I read it. Several times. Like so much of Rust&#39;s documentation, it&#39;s next-to-useless for an experienced programmer. Hence asking here."}], "answers": [{"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1552236007, "post_id": 55075497, "comment_id": 96924557, "body": "it is unlikely that you should be needing so many crates to share code among multiple files. If you update the question to include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> of the problem, we ought to identify a better solution."}], "tags": [], "owner": {"reputation": 4978, "user_id": 650228, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7974f6c6e7dd479c4155cc122a461fce?s=128&d=identicon&r=PG", "display_name": "kittylyst", "link": "https://stackoverflow.com/users/650228/kittylyst"}, "is_accepted": false, "score": -1, "last_activity_date": 1552120724, "creation_date": 1552120724, "answer_id": 55075497, "question_id": 55033033, "link": "https://stackoverflow.com/questions/55033033/multiple-rust-files-need-to-use-the-same-structs-and-functions/55075497#55075497", "title": "Multiple rust files need to use the same structs and functions", "body": "<p>Answering my own question as this is not covered in the docs.</p>\n\n<p>There appears to be no easy way to do this directly. Instead, the dependency graph that is described in the question is an indication that actually the project needs more structure and to be composed of multiple crates.</p>\n\n<p>In this case, a workable structure looks something like the following:</p>\n\n<ul>\n<li>klass_parser.rs should be its own crate</li>\n<li>Majority of lib.rs should move into a new crate (called something like vm)</li>\n<li>runtime.rs should become a third separate crate</li>\n<li>Remainder of lib.rs should move into main.rs</li>\n<li>lib.rs should disappear completely</li>\n</ul>\n"}], "owner": {"reputation": 4978, "user_id": 650228, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7974f6c6e7dd479c4155cc122a461fce?s=128&d=identicon&r=PG", "display_name": "kittylyst", "link": "https://stackoverflow.com/users/650228/kittylyst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 124, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1552120724, "creation_date": 1551910469, "question_id": 55033033, "link": "https://stackoverflow.com/questions/55033033/multiple-rust-files-need-to-use-the-same-structs-and-functions", "title": "Multiple rust files need to use the same structs and functions", "body": "<p>I have a function file_to_bytes() in lib.rs which I need to call from both lib.rs and runtime.rs (and tests.rs, but it's OK from there).</p>\n\n<p>I also have a file klass_parser.rs that contains a struct OtKlassParser that needs to be used in both lib.rs and runtime.rs.</p>\n\n<p>I can't seem to arrange the mod and use declarations correctly - what's the canonical way to do this, and what section of the documentation covers this case?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 0, "creation_date": 1551949020, "post_id": 55032618, "comment_id": 96830337, "body": "Note that your code does work if you fix the deref implementation (see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=987a22ee51938deac9c917aa6907b29d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>)"}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 0, "creation_date": 1551954562, "post_id": 55032618, "comment_id": 96833898, "body": "you can derive Debug for ErrorMessage, but Display should still be implemented manually"}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "reply_to_user": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 0, "creation_date": 1551981388, "post_id": 55032618, "comment_id": 96850117, "body": "@aochagavia Thanks for the correction! I&#39;ve fixed the deref definition and updated my sandbox examples. Unfortunately that still doesn&#39;t let me get rid of the <code>impl Debug</code> and <code>impl Display</code> blocks."}, {"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 0, "creation_date": 1552385659, "post_id": 55032618, "comment_id": 96979416, "body": "You cannot inherit trait implementations, but for common traits you can use the <a href=\"https://jeltef.github.io/derive_more/derive_more/\" rel=\"nofollow noreferrer\">derive_more</a> crate. Does this answer your question? If yes, I can post it as an answer."}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "reply_to_user": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 0, "creation_date": 1552776612, "post_id": 55032618, "comment_id": 97141575, "body": "@aochagavia Thanks for the suggestion, that&#39;s good to know! but it&#39;s not quite what I&#39;m looking for."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "edited": false, "score": 0, "creation_date": 1552964114, "post_id": 55232637, "comment_id": 97199894, "body": "The delegation RFC is super-relevant, thanks for linking!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1552961157, "creation_date": 1552961157, "answer_id": 55232637, "question_id": 55032618, "link": "https://stackoverflow.com/questions/55032618/can-i-use-dereftarget-other-to-inherit-trait-implementations-from-other/55232637#55232637", "title": "Can I use Deref&lt;Target = Other&gt; to inherit trait implementations from Other?", "body": "<blockquote>\n  <p>Is there any way to use <code>Deref</code>, <code>DerefMut</code>, or something similar to allow dereferenced values to satisfy trait bounds for the original values.</p>\n</blockquote>\n\n<p>No. An outer type that dereferences to an inner type does not itself implement the traits that the inner type does.</p>\n\n<blockquote>\n  <p>as an alternative to manually writing <code>impl</code> blocks to delegate each of them.</p>\n</blockquote>\n\n<p>Your best bet may be to create one or more macros. I'm personally holding out hope for <a href=\"https://github.com/rust-lang/rfcs/pull/2393\" rel=\"nofollow noreferrer\">first-class delegation support</a>.</p>\n"}], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 382, "favorite_count": 2, "accepted_answer_id": 55232637, "answer_count": 1, "score": 3, "last_activity_date": 1552961157, "creation_date": 1551908491, "last_edit_date": 1552960926, "question_id": 55032618, "link": "https://stackoverflow.com/questions/55032618/can-i-use-dereftarget-other-to-inherit-trait-implementations-from-other", "title": "Can I use Deref&lt;Target = Other&gt; to inherit trait implementations from Other?", "body": "<p>I have a <code>String</code> <a href=\"https://doc.rust-lang.org/rust-by-example/generics/new_types.html\" rel=\"nofollow noreferrer\">newtype</a> <code>ErrorMessage</code> that I'm using for errors in a prototype crate. (I know that this is a bad practice. I will construct a proper set of distinct error types before publication.)</p>\n\n<p>I need <code>ErrorMessage</code> to implement the <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\"><code>Error</code></a> trait, which is (practically) empty but  requires that it also implement the <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html\" rel=\"nofollow noreferrer\"><code>Display</code></a> and <a href=\"https://doc.rust-lang.org/std/fmt/trait.Debug.html\" rel=\"nofollow noreferrer\"><code>Debug</code></a> traits, which I have done.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct ErrorMessage(pub String);\nimpl std::error::Error for ErrorMessage {}\nimpl std::fmt::Display for ErrorMessage {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {\n        self.0.fmt(f)\n    }\n}\nimpl std::fmt::Debug for ErrorMessage {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {\n        self.0.fmt(f)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=acdecf727b3eece1743bc8c07c711ea3\" rel=\"nofollow noreferrer\">This works fine</a>. However, I recently came across <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code></a> and was wondering if it could automatically delegate trait implementations to the implementations for <code>String</code> from <code>self.0</code>. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl std::ops::Deref for ErrorMessage {\n    type Target = str;\n\n    fn deref(&amp;self) -&gt; &amp;str {\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>This allows me to call methods like <code>.to_string()</code> on an <code>ErrorMessage</code>, and <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/deref-coercions.html\" rel=\"nofollow noreferrer\">deref coercion</a> will let it use my <code>Deref</code> implementation to automatically find the <code>fmt</code> and <code>to_string</code> implementations on <code>self.0</code>/<code>*self</code>.</p>\n\n<p>However, <code>ErrorMessage</code> <em>itself</em> isn't actually <code>Display</code> or <code>Debug</code>. If I try to <code>println!</code> or <code>format!</code> an instance directly I get an error, and <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b4ff80a14657fec248edfd7545dedec0\" rel=\"nofollow noreferrer\">it doesn't satisfy the bounds for <code>Error</code></a>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() -&gt; Result&lt;(), ErrorMessage&gt; {\n    Err(ErrorMessage(\"hello world\".to_string()))\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `ErrorMessage` doesn't implement `std::fmt::Display`\n --&gt; src/main.rs:2:6\n  |\n2 | impl std::error::Error for ErrorMessage {}\n  |      ^^^^^^^^^^^^^^^^^ `ErrorMessage` cannot be formatted with the default formatter\n  |\n  = help: the trait `std::fmt::Display` is not implemented for `ErrorMessage`\n</code></pre>\n\n<p>Is there any way to use <code>Deref</code>, <code>DerefMut</code>, or something similar to allow dereferenced values to satisfy trait bounds for the original values. I'm looking for something automatic, as an alternative to manually writing <code>impl</code> blocks to delegate each of them.</p>\n"}, {"tags": ["enums", "rust", "comparison"], "comments": [{"owner": {"reputation": 2858, "user_id": 4070218, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/VNOHi.gif?s=128&g=1", "display_name": "jonny", "link": "https://stackoverflow.com/users/4070218/jonny"}, "edited": false, "score": 0, "creation_date": 1551979296, "post_id": 55032236, "comment_id": 96849020, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/36297412/how-to-implement-partialeq-for-an-enum\">How to implement PartialEq for an enum?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 784, "user_id": 2648947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/1KZNZ.jpg?s=128&g=1", "display_name": "SS_Rebelious", "link": "https://stackoverflow.com/users/2648947/ss-rebelious"}, "is_accepted": true, "score": 3, "last_activity_date": 1551909049, "creation_date": 1551909049, "answer_id": 55032729, "question_id": 55032236, "link": "https://stackoverflow.com/questions/55032236/compare-nested-enum-variants-in-rust/55032729#55032729", "title": "Compare nested enum variants in Rust", "body": "<p>Found suitable solution in <a href=\"https://stackoverflow.com/questions/36297412/how-to-implement-partialeq-for-an-enum\">this answer</a>. Use <code>#[derive(PartialEq)]</code> for the enums to compare them with <code>==</code>: <code>enum_1 == enum_2</code>.</p>\n\n<pre><code>#[derive(PartialEq)]\nenum Attribute {\n  Strength,\n  Agility,\n  Intellect,\n}\n\n#[derive(PartialEq)]\nenum Parameter {\n    Health,\n    Mana,\n}\n\n#[derive(PartialEq)]\nenum BuffTarget {\n    Attribute(Attribute),\n    Parameter(Parameter),\n}\n\nlet type_1 = BuffTarget::Attribute(Attribute::Strength));\nlet type_2 = BuffTarget::Attribute(Attribute::Intellect));\n\nassert_eq!((type_1 == type_2), false);\n</code></pre>\n"}], "owner": {"reputation": 784, "user_id": 2648947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/1KZNZ.jpg?s=128&g=1", "display_name": "SS_Rebelious", "link": "https://stackoverflow.com/users/2648947/ss-rebelious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1621, "favorite_count": 0, "accepted_answer_id": 55032729, "answer_count": 1, "score": 2, "last_activity_date": 1551909049, "creation_date": 1551906828, "question_id": 55032236, "link": "https://stackoverflow.com/questions/55032236/compare-nested-enum-variants-in-rust", "title": "Compare nested enum variants in Rust", "body": "<p>Learning Rust I happen to need to compare variants inside nested enums. Considering following enums how do I compare actual variants of instantinated <code>BuffTurget</code>?</p>\n\n<pre><code>enum Attribute {\n  Strength,\n  Agility,\n  Intellect,\n}\n\nenum Parameter {\n    Health,\n    Mana,\n}\n\nenum BuffTarget {\n    Attribute(Attribute),\n    Parameter(Parameter),\n}\n</code></pre>\n\n<p>Searching the web led me to the `discriminant and <a href=\"https://stackoverflow.com/questions/32554285/compare-enums-only-by-variant-not-value\">particularly</a> to comparison function like this:</p>\n\n<pre><code>fn variant_eq&lt;T&gt;(a: &amp;T, b: &amp;T) -&gt; bool {\n    std::mem::discriminant(a) == std::mem::discriminant(b)\n}\n</code></pre>\n\n<p>Unfortunately this function is not working in my case:</p>\n\n<pre><code>#[test]\nfn variant_check_is_working() {\n    let str = BuffTarget::Attribute(Attribute::Strength);\n    let int = BuffTarget::Attribute(Attribute::Intellect);\n    assert_eq!(variant_eq(&amp;str, &amp;int), false);\n}\n\n// Output:\n\n// thread 'tests::variant_check' panicked at 'assertion failed: `(left == right)`\n// left: `true`,\n// right: `false`', src/lib.rs:11:9\n</code></pre>\n\n<p>Ideally I would like my code to be something like this, using <code>if let</code>:</p>\n\n<pre><code>let type_1 = get_variant(BuffTarget::Attribute(Attribute::Strength));\nlet type_2 = get_variant(BuffTarget::Attribute(Attribute::Intellect));\n\nif let type_1 = type_2 {  \n    println!(\"Damn it!\") \n} else { println!(\"Success!!!\") }\n</code></pre>\n"}, {"tags": ["rust", "type-conversion", "traits"], "comments": [{"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 1, "creation_date": 1551925346, "post_id": 55031527, "comment_id": 96822497, "body": "This might be an XY problem, but it&#39;s hard to tell without more info. You might rather want a enum with each type, or a set of methods in the trait that describe what you can do with it."}, {"owner": {"reputation": 2858, "user_id": 4070218, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/VNOHi.gif?s=128&g=1", "display_name": "jonny", "link": "https://stackoverflow.com/users/4070218/jonny"}, "edited": false, "score": 0, "creation_date": 1551978873, "post_id": 55031527, "comment_id": 96848788, "body": "I would suggest, if at all possible, simplifying your data representation. Is there a reason why you&#39;re using trait objects specifically? Or could it be better solved with a simple enum? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=01909cd5c2579cbba7484cdb21f685fa\" rel=\"nofollow noreferrer\">Here&#39;s a playground link with an alternative implementation</a>"}, {"owner": {"reputation": 11, "user_id": 6650591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a96d07394e37f624adcd0e0af844248a?s=128&d=identicon&r=PG&f=1", "display_name": "R Vorster", "link": "https://stackoverflow.com/users/6650591/r-vorster"}, "reply_to_user": {"reputation": 2858, "user_id": 4070218, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/VNOHi.gif?s=128&g=1", "display_name": "jonny", "link": "https://stackoverflow.com/users/4070218/jonny"}, "edited": false, "score": 0, "creation_date": 1552037059, "post_id": 55031527, "comment_id": 96868574, "body": "Thank you @jonny, I did indeed go with an enum. It seemed like a more cumbersome solution at first, but now that I&#39;ve implemented it it greatly simplifies the code."}, {"owner": {"reputation": 11, "user_id": 6650591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a96d07394e37f624adcd0e0af844248a?s=128&d=identicon&r=PG&f=1", "display_name": "R Vorster", "link": "https://stackoverflow.com/users/6650591/r-vorster"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1552037113, "post_id": 55031527, "comment_id": 96868601, "body": "@apemanzilla, this does work for me, although in the end I went with an entirely different approach. I will mark the question as a duplicate. Thank you!"}], "owner": {"reputation": 11, "user_id": 6650591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a96d07394e37f624adcd0e0af844248a?s=128&d=identicon&r=PG&f=1", "display_name": "R Vorster", "link": "https://stackoverflow.com/users/6650591/r-vorster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 41, "favorite_count": 0, "closed_date": 1552037118, "answer_count": 0, "score": 1, "last_activity_date": 1551976346, "creation_date": 1551903527, "last_edit_date": 1551976346, "question_id": 55031527, "link": "https://stackoverflow.com/questions/55031527/retrieving-generic-struct-from-trait-object", "closed_reason": "Duplicate", "title": "Retrieving generic struct from trait object", "body": "<p>I'm currently working on a data processing project for which I have to store a set of samples with a certain timestamp along with data of different types. There is then a channel struct holding a vector of these samples. I wish to isolate the generic sample from the channel given that I want to hold these channels in a hashmap where I can later retrieve data from a channel by some channel ID. </p>\n\n<p>Given that I wish to isolate the generic sample, I opted for this channel struct to hold a vector of trait objects. Everything seemed to work fine and I managed to fill these channels with my data, but I can't find any way of actually retrieving the data from those samples again.</p>\n\n<p>This is an outline of the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait SampleContainer: Debug {}\nimpl&lt;T: Debug&gt; SampleContainer for Sample&lt;T&gt; {}\n\n#[derive(Debug)]\nstruct Sample&lt;T&gt; {\n    time: u64,\n    data: T\n}\n\n#[derive(Debug)]\nstruct Channel {\n    // There would be some channel configuration struct here\n    samples: Vec&lt;Box&lt;SampleContainer&gt;&gt;\n}\n\nfn main() {\n    let new_sample = Box::new(Sample::&lt;u8&gt; {time: 0, data: 10});\n    let another_new_sample = Box::new(Sample::&lt;u8&gt; {time: 1, data: 11});\n\n    let mut sample_list: Vec&lt;Box&lt;SampleContainer&gt;&gt; = Vec::new();\n    sample_list.push(new_sample);\n    sample_list.push(another_new_sample);\n\n    let mut channel_list: HashMap&lt;u16, Channel&gt; = HashMap::new();\n    let new_channel = Channel {samples: sample_list};\n\n    channel_list.insert(1, new_channel);\n\n    // This prints what I would expect: [Sample { time: 0, data: 10 }, Sample { time: 1, data: 11 }]\n    println!(\"{:?}\", channel_list[&amp;1].samples);\n}\n</code></pre>\n\n<p>How would I access the underlying sample data in my channels? Or am I going about this wrong entirely? </p>\n\n<p>I look forward to receiving any input!</p>\n"}, {"tags": ["rust", "rust-rocket", "rust-chrono"], "comments": [{"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1551897720, "post_id": 55029850, "comment_id": 96812737, "body": "What have you tried? It looks like you need to implement <code>FromParam</code> for <code>DateTime</code>, but this isn&#39;t possible due to the orphan rule, so you&#39;ll need a wrapper type."}, {"owner": {"reputation": 303, "user_id": 569052, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/W5Ab2.png?s=128&g=1", "display_name": "pandark", "link": "https://stackoverflow.com/users/569052/pandark"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1551908544, "post_id": 55029850, "comment_id": 96817761, "body": "Well, I guess I tried that\u2026 and it failed, probably for the reason that you said :D (although I&#39;m not sure what the &quot;orphan rule&quot; is)"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 1, "creation_date": 1551915681, "post_id": 55029850, "comment_id": 96820305, "body": "To avoid conflicts, Rust doesn&#39;t allow you to implement a trait where both the trait and the type it&#39;s implemented for are from another crate (otherwise, you could have multiple crates implementing the same trait for the same type and have a conflict). To get around this, you could create a wrapper type (e.g. <code>struct MyDate(chrono::DateTime)</code>) and implement the trait for that. Then, you can use your wrapper as a parameter for the function, and just extract the value in the body of the function."}], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 0, "last_activity_date": 1551945460, "creation_date": 1551945460, "answer_id": 55038731, "question_id": 55029850, "link": "https://stackoverflow.com/questions/55029850/how-to-use-a-date-in-the-url-with-rocket-rs/55038731#55038731", "title": "How to use a date in the url with Rocket.rs?", "body": "<p><code>NaiveDate</code> can be represented as \"number of days since January 1, 1\" with type <code>i32</code>. There are methods <code>self.num_days_from_ce()</code> and <code>from_num_days_from_ce()</code>. I believe this is the most convenient way. <a href=\"https://docs.rs/chrono/0.4.6/chrono/naive/struct.NaiveDate.html#method.from_num_days_from_ce\" rel=\"nofollow noreferrer\">Documentation</a></p>\n"}, {"tags": [], "owner": {"reputation": 2520, "user_id": 2963111, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/IDwfr.jpg?s=128&g=1", "display_name": "harvzor", "link": "https://stackoverflow.com/users/2963111/harvzor"}, "is_accepted": false, "score": 1, "last_activity_date": 1607042563, "creation_date": 1607042563, "answer_id": 65136340, "question_id": 55029850, "link": "https://stackoverflow.com/questions/55029850/how-to-use-a-date-in-the-url-with-rocket-rs/65136340#65136340", "title": "How to use a date in the url with Rocket.rs?", "body": "<p>Kinda sucks that we have to do this ourselves.</p>\n<p>Maybe in the future, there will be a library provided which gives us interop between Rocket and other libraries.</p>\n<pre><code>use chrono::NaiveDate;\nuse chrono::NaiveTime;\nuse chrono::NaiveDateTime;\n\n// https://stackoverflow.com/questions/25413201/how-do-i-implement-a-trait-i-dont-own-for-a-type-i-dont-own\n// https://github.com/SergioBenitez/Rocket/issues/602#issuecomment-380497269\npub struct NaiveDateForm(NaiveDate);\npub struct NaiveTimeForm(NaiveTime);\npub struct NaiveDateTimeForm(NaiveDateTime);\n\nimpl&lt;'v&gt; FromFormValue&lt;'v&gt; for NaiveDateForm {\n    type Error = &amp;'v RawStr;\n\n    fn from_form_value(form_value: &amp;'v RawStr) -&gt; Result&lt;NaiveDateForm, &amp;'v RawStr&gt; {\n        let decoded = form_value.url_decode().map_err(|_| form_value)?;\n        if let Ok(date) = NaiveDate::parse_from_str(&amp;decoded, &quot;%Y-%m-%d&quot;) {\n            return Ok(NaiveDateForm(date));\n        }\n        Err(form_value)\n    }\n}\n\nimpl&lt;'v&gt; FromFormValue&lt;'v&gt; for NaiveTimeForm {\n    type Error = &amp;'v RawStr;\n\n    fn from_form_value(form_value: &amp;'v RawStr) -&gt; Result&lt;Self, Self::Error&gt; {\n        let decoded = form_value.url_decode().map_err(|_| form_value)?;\n        if let Ok(time) = NaiveTime::parse_from_str(&amp;decoded, &quot;%H:%M:%S%.3f&quot;) {\n            // if time.nanosecond() &gt;= 1_000_000_000 {\n            //     return Err(form_value);\n            // }\n            return Ok(NaiveTimeForm(time));\n        }\n        if let Ok(time) = NaiveTime::parse_from_str(&amp;decoded, &quot;%H:%M&quot;) {\n            return Ok(NaiveTimeForm(time));\n        }\n        Err(form_value)\n    }\n}\n\nimpl&lt;'v&gt; FromFormValue&lt;'v&gt; for NaiveDateTimeForm {\n    type Error = &amp;'v RawStr;\n\n    fn from_form_value(form_value: &amp;'v RawStr) -&gt; Result&lt;NaiveDateTimeForm, &amp;'v RawStr&gt; {\n        let decoded = form_value.url_decode().map_err(|_| form_value)?;\n        if decoded.len() &lt; &quot;0000-00-00T00:00&quot;.len() {\n            return Err(form_value)\n        }\n        let date = NaiveDateForm::from_form_value(RawStr::from_str(&amp;decoded[..&quot;0000-00-00&quot;.len()]))\n            .map_err(|_| form_value)?;\n        let time = NaiveTimeForm::from_form_value(RawStr::from_str(&amp;decoded[&quot;0000-00-00T&quot;.len()..]))\n            .map_err(|_| form_value)?;\n        Ok(NaiveDateTimeForm(NaiveDateTime::new(*date, *time)))\n    }\n}\n\nimpl Deref for NaiveDateForm {\n    type Target = NaiveDate;\n    fn deref(&amp;self) -&gt; &amp;NaiveDate {\n        &amp;self.0\n    }\n}\n\nimpl Deref for NaiveTimeForm {\n    type Target = NaiveTime;\n    fn deref(&amp;self) -&gt; &amp;NaiveTime {\n        &amp;self.0\n    }\n}\n\nimpl Deref for NaiveDateTimeForm {\n    type Target = NaiveDateTime;\n    fn deref(&amp;self) -&gt; &amp;NaiveDateTime {\n        &amp;self.0\n    }\n}\n</code></pre>\n<p>You should then be able to do:</p>\n<pre><code>#[get(&quot;/hello/&lt;name&gt;/&lt;age&gt;&quot;)]\nfn hello(name: String, age: NaiveDateTimeForm) -&gt; String {\n    // Deref back to chrono::NaiveDatetime\n    let date_time = *age;\n\n    // write some code to figure out their age\n}\n</code></pre>\n<p>My dependencies:</p>\n<pre><code>chrono = { version = &quot;0.4.19&quot;, features = [&quot;serde&quot;] }\nrocket = &quot;0.4.2&quot;\n</code></pre>\n<p>This implementation is mostly stolen from <a href=\"https://github.com/chronotope/chrono/pull/362/files\" rel=\"nofollow noreferrer\">https://github.com/chronotope/chrono/pull/362/files</a> where someone made a PR to try to get this stuff already into Chrono.</p>\n<p>Probably rather than <code>age</code>, you should have <code>birthday</code> so you can calculate their age.</p>\n"}], "owner": {"reputation": 303, "user_id": 569052, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/W5Ab2.png?s=128&g=1", "display_name": "pandark", "link": "https://stackoverflow.com/users/569052/pandark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 259, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1607042636, "creation_date": 1551896671, "last_edit_date": 1607042636, "question_id": 55029850, "link": "https://stackoverflow.com/questions/55029850/how-to-use-a-date-in-the-url-with-rocket-rs", "title": "How to use a date in the url with Rocket.rs?", "body": "<p>How would you alter the example from Rocket's website to take a date rather than an age/<code>u8</code>?</p>\n\n<p>The example from the website:</p>\n\n<pre><code>#![feature(proc_macro_hygiene, decl_macro)]\n\n#[macro_use] extern crate rocket;\n\n#[get(\"/hello/&lt;name&gt;/&lt;age&gt;\")]\nfn hello(name: String, age: u8) -&gt; String {\n    format!(\"Hello, {} year old named {}!\", age, name)\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![hello]).launch();\n}\n</code></pre>\n\n<p>I'd like to have more or less the same output (Hello, 58 year old named John!) but have something like this</p>\n\n<pre><code>#[get(\"/hello/&lt;name&gt;/&lt;birthdate&gt;\")]\n</code></pre>\n\n<p>instead of that</p>\n\n<pre><code>#[get(\"/hello/&lt;name&gt;/&lt;age&gt;\")]\n</code></pre>\n\n<p>I think the right struct is <a href=\"https://docs.rs/chrono/0.4.6/chrono/struct.DateTime.html\" rel=\"nofollow noreferrer\">chrono::DateTime</a> and that somehow <a href=\"https://api.rocket.rs/v0.4/rocket/request/trait.FromParam.html\" rel=\"nofollow noreferrer\">rocket::request::FromParam</a> is involved but I'm a bit lost from there.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 8, "last_activity_date": 1551896540, "creation_date": 1551896540, "answer_id": 55029824, "question_id": 55029638, "link": "https://stackoverflow.com/questions/55029638/what-is-the-default-optimization-level-if-i-use-the-cargo-build-release-comma/55029824#55029824", "title": "What is the default optimization level, if I use the cargo build --release command?", "body": "<p>According to <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-profile-sections\" rel=\"noreferrer\">the cargo manual</a>, the default level for release builds is <code>-O3</code>.</p>\n\n<pre><code># The release profile, used for `cargo build --release` (and the dependencies\n# for `cargo test --release`,  including the local library or binary).\n[profile.release]\nopt-level = 3\ndebug = false\nrpath = false\nlto = false\ndebug-assertions = false\ncodegen-units = 16\npanic = 'unwind'\nincremental = false\noverflow-checks = false\n</code></pre>\n"}], "owner": {"reputation": 130, "user_id": 5892800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65881d263e53ce335ba460d3bf5b5b48?s=128&d=identicon&r=PG&f=1", "display_name": "Bence L&#225;szl&#243;", "link": "https://stackoverflow.com/users/5892800/bence-l%c3%a1szl%c3%b3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3120, "favorite_count": 0, "accepted_answer_id": 55029824, "answer_count": 1, "score": 4, "last_activity_date": 1551896540, "creation_date": 1551895833, "question_id": 55029638, "link": "https://stackoverflow.com/questions/55029638/what-is-the-default-optimization-level-if-i-use-the-cargo-build-release-comma", "title": "What is the default optimization level, if I use the cargo build --release command?", "body": "<p><a href=\"https://doc.rust-lang.org/rustc/codegen-options/index.html\" rel=\"nofollow noreferrer\">The rustc compiler has 4 optimization level</a>, <a href=\"https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html\" rel=\"nofollow noreferrer\">just like gcc.</a> </p>\n\n<pre><code>opt-level    \nThis flag lets you control the optimization level.\n\n0: no optimizations\n1: basic optimizations\n2: some optimizations\n3: all optimizations\ns: optimize for binary size\nz: optimize for binary size, but also turn off loop vectorization.\n</code></pre>\n\n<p>If I make a build with Cargo and its <code>--release</code> option, which optimization level is used?</p>\n\n<pre><code>cargo build --release\nFinished release [optimized] target(s) in 0.75s\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2577, "user_id": 3512709, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/sA5RZ.jpg?s=128&g=1", "display_name": "Adam", "link": "https://stackoverflow.com/users/3512709/adam"}, "edited": false, "score": 0, "creation_date": 1551908844, "post_id": 55029412, "comment_id": 96817902, "body": "Thanks for the detailed answer! Is there any performance penalties for passing by value rather than passing by reference? i.e. will example #1 be slower than example #2?"}, {"owner": {"reputation": 2577, "user_id": 3512709, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/sA5RZ.jpg?s=128&g=1", "display_name": "Adam", "link": "https://stackoverflow.com/users/3512709/adam"}, "edited": false, "score": 0, "creation_date": 1551912632, "post_id": 55029412, "comment_id": 96819340, "body": "To answer my own question, the borrowed solution is nearly an order of magnitude faster: 32 ns/iter vs 121 ns/iter.  <a href=\"https://gist.github.com/adam-hanna/5e303bcfcb24606665da587b83af6bdd\" rel=\"nofollow noreferrer\">gist.github.com/adam-hanna/5e303bcfcb24606665da587b83af6bdd</a>"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "reply_to_user": {"reputation": 2577, "user_id": 3512709, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/sA5RZ.jpg?s=128&g=1", "display_name": "Adam", "link": "https://stackoverflow.com/users/3512709/adam"}, "edited": false, "score": 1, "creation_date": 1551915898, "post_id": 55029412, "comment_id": 96820346, "body": "@Adam you&#39;ve already figured it out but I&#39;ll explain a bit more about performance. Passing something by value is generally slower, as it may involve moving a large number of bytes within memory to the scope of the function, whereas references are very small. Additionally, my first example not only moves data into the function, but also within the function: In the <code>for</code> loop, items are moved out of the original vector and then into the output vector (or just dropped if they don&#39;t meet the condition)."}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 1, "last_activity_date": 1551895250, "last_edit_date": 1551895250, "creation_date": 1551894920, "answer_id": 55029412, "question_id": 55029248, "link": "https://stackoverflow.com/questions/55029248/avoiding-cannot-move-out-of-borrowed-content-without-the-use-of-to-vec/55029412#55029412", "title": "Avoiding &quot;cannot move out of borrowed content&quot; without the use of &quot;to_vec&quot;?", "body": "<p>The error is showing up because you're trying to move ownership of one of the vectors in the input vector to the output vector, which is not allowed since you've borrowed the input vector immutably. <code>to_vec()</code> creates a copy, which is why it works when you use it.</p>\n\n<p>The solution depends on what you're trying to do. If you don't need the original input (you only want the matched ones), you can simply pass the input by value rather than by reference, which will allow you to consume the vector and move items to the output. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4928ae284cd270dd218e15b6141d48c3\" rel=\"nofollow noreferrer\">Here's an example of this</a>.</p>\n\n<p>If you do need the original input, but you don't want to copy the vectors with <code>to_vec()</code>, you may want to use references in the output, as demonstrated by <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c50a025b0f5668191e9d7ca6e98b4157\" rel=\"nofollow noreferrer\">this example</a>. Note that the function now returns a vector of references to vectors, rather than a vector of owned vectors.</p>\n\n<p>For other cases, there are other options. If you need the data to be owned by multiple items for some reason, you could try <code>Rc&lt;T&gt;</code> or <code>Arc&lt;T&gt;</code> for reference-counted smart pointers, which can be cloned to provide immutable access to the same data by multiple owners.</p>\n"}], "owner": {"reputation": 2577, "user_id": 3512709, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/sA5RZ.jpg?s=128&g=1", "display_name": "Adam", "link": "https://stackoverflow.com/users/3512709/adam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 55029412, "answer_count": 1, "score": 1, "last_activity_date": 1551895250, "creation_date": 1551894308, "question_id": 55029248, "link": "https://stackoverflow.com/questions/55029248/avoiding-cannot-move-out-of-borrowed-content-without-the-use-of-to-vec", "title": "Avoiding &quot;cannot move out of borrowed content&quot; without the use of &quot;to_vec&quot;?", "body": "<p>I'm learning rust and have a simple program, shown below. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c4e06a6d2ced9c7b449ef7eb648de474\" rel=\"nofollow noreferrer\">Playground link</a>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\npub struct Foo {\n    bar: String,\n}\n\npub fn gather_foos&lt;'a&gt;(data: &amp;'a Vec&lt;Vec&lt;&amp;'a Foo&gt;&gt;) -&gt; Vec&lt;Vec&lt;&amp;'a Foo&gt;&gt; {\n    let mut ret: Vec&lt;Vec&lt;&amp;Foo&gt;&gt; = Vec::new();\n\n    for i in 0..data.len() {\n        if meets_requirements(&amp;data[i]) {\n            ret.push(data[i].to_vec());\n        }\n    }\n\n    return ret\n}\n\nfn meets_requirements&lt;'a&gt;(_data: &amp;'a Vec&lt;&amp;'a Foo&gt;) -&gt; bool {\n    true\n}\n\nfn main() {\n    let foo = Foo{\n        bar: String::from(\"bar\"),\n    };\n    let v1 = vec![&amp;foo, &amp;foo, &amp;foo];\n    let v2 = vec![&amp;foo, &amp;foo];\n    let data = vec![v1, v2];\n\n    println!(\"{:?}\", gather_foos(&amp;data));\n}\n</code></pre>\n\n<p>The program simply loops through an array of arrays of a struct, checks if the array of structs meets some requirement and returns an array of arrays that meets said requirement.</p>\n\n<p>I'm sure there's a more efficient way of doing this without the need to call <code>to_vec()</code>, which I had to implement in order to avoid the error <code>cannot move out of borrowed content</code>, but I'm not sure what that solution is.</p>\n\n<p>I'm learning about <code>Box&lt;T&gt;</code> now and think it might provide a solution to my needs? Thanks for any help!!</p>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1551946175, "creation_date": 1551946175, "answer_id": 55038899, "question_id": 55028887, "link": "https://stackoverflow.com/questions/55028887/how-can-i-fix-resource-temporarily-unavailable-error-in-rust/55038899#55038899", "title": "How can I fix Resource temporarily unavailable error in Rust?", "body": "<p>Your issue isn't related to Rust (or Actix). Your problem is that some other program is already listening on the same port that you are trying to bind to. You need to identify which program it is, for example with:</p>\n\n<pre><code>sudo netstat -an --program | grep $PORT\n</code></pre>\n\n<p>(replacing <code>$PORT</code> with your port number), then kill that program or use another port.</p>\n"}], "owner": {"reputation": 469, "user_id": 11161211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7d255d12b02e2999b61b9eed3d89dbd?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/11161211/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1266, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1551946175, "creation_date": 1551893070, "last_edit_date": 1551893545, "question_id": 55028887, "link": "https://stackoverflow.com/questions/55028887/how-can-i-fix-resource-temporarily-unavailable-error-in-rust", "title": "How can I fix Resource temporarily unavailable error in Rust?", "body": "<p>Here's an error log:</p>\n\n<pre><code>note: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n        thread 'arbiter:724dcce3-b3b3-4523-8b02-3b2e9fa035dd:actix-net-worker-62' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 11, kind: WouldBlock, message: \"Resource temporarily unavailable\" }', src/libcore/result.rs:997:5\n</code></pre>\n\n<p>Here's my server setup:</p>\n\n<pre><code>let _ = server::new(move || {\n        App::with_state()\n            // Enable logger\n            .middleware(middleware::Logger::default())\n            .resource(\"/default\", |r| HttpResponse::Ok)\n    })\n    .bind(&amp;localhost_port)\n    .unwrap_or_else(|_| panic!(\"Can not bind to {}\", &amp;localhost_port))\n    .start();\n</code></pre>\n\n<p>I did look at another <a href=\"https://github.com/actix\" rel=\"nofollow noreferrer\">actix</a> example which <a href=\"https://github.com/actix/examples/blob/master/basics/src/main.rs#L137\" rel=\"nofollow noreferrer\">includes</a>:</p>\n\n<pre><code>.shutdown_timeout(0)    // &lt;- Set shutdown timeout to 0 seconds (default 60s)\n</code></pre>\n\n<p>but don't think it fix the issue for me.</p>\n\n<p>Locally it runs OK, but this errors shows up when I execute a binary on Ubuntu <code>16.04</code>.</p>\n\n<p>Here's a related question: <a href=\"https://stackoverflow.com/a/14370767\">https://stackoverflow.com/a/14370767</a> that suggests to set a <code>setting a send timeout with the SO_SNDTIMEO socket option</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1551866323, "post_id": 55020057, "comment_id": 96793941, "body": "You should read again the book about generics and traits. Generic structures get monomorphized, that means that <code>GraphNode&lt;i32&gt;</code> is a whole different type from <code>GraphNode&lt;u32&gt;</code>, for example."}, {"owner": {"reputation": 350, "user_id": 1078927, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/63928b05bae11b832bd9d231cc669d70?s=128&d=identicon&r=PG", "display_name": "\u015awistak35", "link": "https://stackoverflow.com/users/1078927/%c5%9awistak35"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551866483, "post_id": 55020057, "comment_id": 96794035, "body": "Oh well! Now that makes sense, thanks. If there&#39;s some idiomatic rust pattern to achieve what I want then it would be nice to know, but I will also think about it on my own."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551867050, "post_id": 55020057, "comment_id": 96794391, "body": "I&#39;m not sure to understand what you want"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1551875415, "post_id": 55020057, "comment_id": 96799505, "body": "I think that this is a duplicate of <a href=\"https://stackoverflow.com/q/28044231/3650362\">What does \u201cSized is not implemented\u201d mean?</a> <code>dyn IVertex</code> is unsized, so to be able to have a <code>GraphNode&lt;dyn IVertex&gt;</code>, you have to add a <code>?Sized</code> bound to <code>T</code>.  See also <a href=\"https://stackoverflow.com/q/50650070/3650362\">What does \u201cdyn\u201d mean in a type?</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1551888990, "post_id": 55020057, "comment_id": 96807857, "body": "@\u015awistak35 Did you make a typo? Did you intend to use a trait object or just want another generic argument <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=134b30c7f4d227557622559574244663\" rel=\"nofollow noreferrer\">like this</a>?"}], "owner": {"reputation": 350, "user_id": 1078927, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/63928b05bae11b832bd9d231cc669d70?s=128&d=identicon&r=PG", "display_name": "\u015awistak35", "link": "https://stackoverflow.com/users/1078927/%c5%9awistak35"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1552922196, "creation_date": 1551865823, "last_edit_date": 1552922196, "question_id": 55020057, "link": "https://stackoverflow.com/questions/55020057/sized-is-not-implemented-error-in-data-type-with-generic", "title": "Sized is not implemented error in data type with generic", "body": "<p>I'm experimenting with Rust and I cannot understand something about data types with generics.</p>\n\n<p>Why does the following work:</p>\n\n<pre><code>trait IVertex {\n}\n\nstruct GraphNode {\n  datum: Box&lt;IVertex&gt;,\n  edges: Vec&lt;Rc&lt;RefCell&lt;GraphNode&gt;&gt;&gt;,\n}\n\nstruct Graph {\n    nodes: HashMap&lt;i32, Rc&lt;RefCell&lt;GraphNode&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>but this doesn't:</p>\n\n<pre><code>trait IVertex {\n}\n\nstruct GraphNode&lt;T: IVertex&gt; {\n    datum: Box&lt;T&gt;,\n    edges: Vec&lt;Rc&lt;RefCell&lt;GraphNode&lt;T&gt;&gt;&gt;&gt;,\n}\n\nstruct Graph {\n    nodes: HashMap&lt;i32, Rc&lt;RefCell&lt;GraphNode&lt;IVertex&gt;&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>The second one is raising the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn IVertex + 'static)` cannot be known at compilation time\n  --&gt; src/main.rs:16:5\n   |\n16 |     nodes: HashMap&lt;i32, Rc&lt;RefCell&lt;GraphNode&lt;IVertex&gt;&gt;&gt;&gt;,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `(dyn IVertex + 'static)`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\nnote: required by `GraphNode`\n</code></pre>\n\n<p>Of course the compiler can't know the size of the data type which is implementing <code>IVertex</code>. But if the values are wrapped in <code>Box</code> and <code>RefCell</code>, shouldn't it be ok? Because the pointer size is always the same?</p>\n\n<p>The reason why I'm coming up with such a design is that I also have the following trait:</p>\n\n<pre><code>trait ISpecializedVertex : IVertex {\n}\n</code></pre>\n\n<p>And I want to have another data structure, which is able to hold references to <code>GraphNode</code>, but only the ones containing <code>ISpecializedVertex</code>. Therefore I've added a generic in <code>GraphNode</code>.</p>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 870071, "user_id": 17034, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Cii6b.png?s=128&g=1", "display_name": "Hans Passant", "link": "https://stackoverflow.com/users/17034/hans-passant"}, "edited": false, "score": 0, "creation_date": 1551860916, "post_id": 55018040, "comment_id": 96790796, "body": "The error tells you that window_class.class.lpszClassName is not valid.  I don&#39;t know enough about lifetime in Rust, but class_name.as_ptr() looks pretty fishy.   You&#39;d better store that string in WindowClass."}, {"owner": {"reputation": 61, "user_id": 9409599, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72dd86ac627d94a440a9c572d37dc18a?s=128&d=identicon&r=PG&f=1", "display_name": "Mithnar", "link": "https://stackoverflow.com/users/9409599/mithnar"}, "reply_to_user": {"reputation": 870071, "user_id": 17034, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Cii6b.png?s=128&g=1", "display_name": "Hans Passant", "link": "https://stackoverflow.com/users/17034/hans-passant"}, "edited": false, "score": 0, "creation_date": 1551861924, "post_id": 55018040, "comment_id": 96791369, "body": "Well, now that you mention this, it is obvious, thank you :) The Problem was the let class_name = class_name.as_win32_string(); going out of scope and dropping the value.  I&#39;m not sure why it works on the first call though (as the value should&#39;ve been already dropped aswell), I need to investigate some more."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1551862561, "post_id": 55018040, "comment_id": 96791704, "body": "It&#39;s undefined behavior. The fact that it works on the first call is just a bit of bad luck."}], "owner": {"reputation": 61, "user_id": 9409599, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72dd86ac627d94a440a9c572d37dc18a?s=128&d=identicon&r=PG&f=1", "display_name": "Mithnar", "link": "https://stackoverflow.com/users/9409599/mithnar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 268, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1551858570, "creation_date": 1551858570, "question_id": 55018040, "link": "https://stackoverflow.com/questions/55018040/winapi-with-rust-createwindowexw-fails-the-second-time-it-is-called-with-the-sa", "title": "WinAPI with Rust: CreateWindowExW fails the second time it is called with the same WNDCLASSEXW", "body": "<p>I feel like I'm doing something wrong on the rust side. While learning the WinAPI, I tried creating a second window with the same WNDCLASSEXW, but that call fails with Error 1407 (ERROR_CANNOT_FIND_WND_CLASS).</p>\n\n<p>As I was pretty sure that it should work conceptually, I rewrote \"the same\" (probably not the same) program in c++: it works!</p>\n\n<p>What am I doing wrong here?</p>\n\n<p>Small(ish) examples that show the explained behaviour:</p>\n\n<p>C++:</p>\n\n<pre><code>class WindowClass{\npublic:\n    WindowClass(WNDCLASSEXW wndclass, HMODULE hmodule){\n        _wndclass = wndclass;\n        _hmodule = hmodule;\n    }\n\n    WNDCLASSEXW _wndclass;\n    HMODULE _hmodule;\n};\n\nclass Window{\npublic:\n    Window(LPCWSTR title, WindowClass&amp; window_class){\n        auto hwnd = CreateWindowExW(\n            0,\n            window_class._wndclass.lpszClassName,\n            title,\n            WS_OVERLAPPEDWINDOW,\n            CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,\n            nullptr,\n            nullptr,\n            window_class._hmodule,\n            nullptr);\n\n    if ( hwnd == nullptr ) {\n        std::cout &lt;&lt; \"Error CreateWindowExW \" &lt;&lt; GetLastError() &lt;&lt; std::endl;\n    }\n\n    _handle = hwnd;\n}\n\nvoid show(){\n    ShowWindow(_handle, SW_SHOWDEFAULT);\n}\n\nstatic WindowClass create_window_class(LPCWSTR class_name){\n    auto hmodule = GetModuleHandleW(nullptr);\n\n    WNDCLASSEXW wndclass = {};\n    wndclass.cbSize = sizeof(WNDCLASSEXW);\n    wndclass.style = CS_OWNDC | CS_HREDRAW | CS_VREDRAW;\n    wndclass.lpfnWndProc = DefWindowProcW;\n    wndclass.hInstance = hmodule;\n    wndclass.lpszClassName = class_name;\n\n    if ( RegisterClassExW(&amp;wndclass) == 0 ) {\n        std::cout &lt;&lt; \"Error RegisterClassExW: \" &lt;&lt; GetLastError() &lt;&lt; std::endl;\n    }\n\n    return WindowClass{wndclass, hmodule};\n}\n\nprivate:\n    HWND _handle;\n};\n\nint main(){\n    auto window_class = Window::create_window_class(L\"windowclass\");\n    Window window1(L\"Window1\", window_class);\n    window1.show();\n    Window window2(L\"Window2\", window_class);\n    window2.show();\n    auto foo = 0;\n    std::cin &gt;&gt; foo;\n}\n</code></pre>\n\n<p>Rust:</p>\n\n<pre><code>trait Win32String{\n    fn as_win32_string(&amp;self) -&gt; Vec&lt;u16&gt;;\n}\n\nimpl Win32String for str{\n    fn as_win32_string(&amp;self) -&gt; Vec&lt;u16&gt; {\n        OsStr::new( self ).encode_wide().chain( once( 0 ) ).collect()\n    }\n}\n\npub struct Window{\n    pub handle: HWND\n}\n\nimpl Window{\n    pub fn create_window_class(class_name: &amp;str, styles: u32) -&gt; Result&lt;WindowClass, Error&gt;{\n        let class_name = class_name.as_win32_string();\n        let hmodule = unsafe{\n            GetModuleHandleW( null_mut())\n        };\n\n        let wnd_class = WNDCLASSEXW {\n            cbSize: mem::size_of::&lt;WNDCLASSEXW&gt;() as u32,\n            style : styles,\n            lpfnWndProc : Some( DefWindowProcW ),\n            hInstance : hmodule,\n            lpszClassName : class_name.as_ptr(),\n            cbClsExtra : 0,\n            cbWndExtra : 0,\n            hIcon: null_mut(),\n            hCursor: null_mut(),\n            hbrBackground: null_mut(),\n            lpszMenuName: null_mut(),\n            hIconSm: null_mut(),\n        };\n\n        if unsafe { RegisterClassExW(&amp;wnd_class) } == 0 { // &lt;-- This fails the second time\n            return Err(Error::last_os_error());\n        } else {\n            return Ok(WindowClass{ class: wnd_class, hmodule})\n        }\n    }\n\n    pub fn new(title: &amp;str, window_class: &amp;WindowClass) -&gt; Result&lt;Window, Error&gt;{\n        let title = title.as_win32_string();\n\n        let hwnd = unsafe { CreateWindowExW(\n            0,\n            window_class.class.lpszClassName,\n            title.as_ptr(),\n            WS_OVERLAPPEDWINDOW,\n            CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,\n            null_mut(),\n            null_mut(),\n            window_class.hmodule as *mut _,\n            null_mut()\n        )};\n\n        if hwnd == null_mut() { return Err(Error::last_os_error()); }\n\n        Ok(Window{handle: hwnd})\n    }\n\n    pub fn show(&amp;self) -&gt; bool {\n        unsafe {\n            let ret = ShowWindow(self.handle, SW_SHOWDEFAULT);\n            ret != 0\n        }\n    }\n}\n\n\npub struct WindowClass{\n    class: WNDCLASSEXW,\n    hmodule: HMODULE\n}\n\n\nfn main() {\n    let window_class = Window::create_window_class(\n        \"windowclass\",\n        CS_OWNDC | CS_HREDRAW |CS_VREDRAW\n    ).unwrap();\n    let window = Window::new(\"Window1\", &amp;window_class).unwrap();\n    window.show();\n    let window2 = Window::new(\"Window2\", &amp;window_class).unwrap();\n    window2.show();\n}\n</code></pre>\n"}, {"tags": ["rust", "jwt"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1551858013, "post_id": 55017698, "comment_id": 96789301, "body": "Can you check that your code is complete. Three things: What is <code>MsOAuthPayload</code>? What is the <code>der</code> variable? Should <code>x5c_cert</code> be used somewhere?"}, {"owner": {"reputation": 70, "user_id": 1516620, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4f330f531ed94d63d00f63c20ed8def0?s=128&d=identicon&r=PG", "display_name": "Kyle Baldwin", "link": "https://stackoverflow.com/users/1516620/kyle-baldwin"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1552016707, "post_id": 55017698, "comment_id": 96861850, "body": "Minimal Example posted above and here: <a href=\"https://pastebin.com/RqqRaKkU\" rel=\"nofollow noreferrer\">pastebin.com/RqqRaKkU</a>"}], "owner": {"reputation": 70, "user_id": 1516620, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4f330f531ed94d63d00f63c20ed8def0?s=128&d=identicon&r=PG", "display_name": "Kyle Baldwin", "link": "https://stackoverflow.com/users/1516620/kyle-baldwin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 267, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1552016687, "creation_date": 1551857103, "last_edit_date": 1552016687, "question_id": 55017698, "link": "https://stackoverflow.com/questions/55017698/using-x5c-cert-to-verify-jwt", "title": "Using x5c cert to verify JWT", "body": "<p>I'm having a hard time authenticating a token using a x5c. (MS OAuth/Azure) Using jsonwebtoken in Rust. </p>\n\n<p>Below is the code...</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Trying to isolate the problem by only checking the signature. \nlet validation_config = jsonwebtoken::Validation {\n    algorithms: vec![jsonwebtoken::Algorithm::RS256],\n    leeway: 0,\n    validate_exp: false,\n    validate_iat: false,\n    validate_nbf: false,\n    aud: None,\n    iss: None,\n    sub: None\n};\nlet token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIn...\";\nlet x5c_cert = \"MIIDBTCCAe2gAwIBAgIQKOfEJNDyDplBSXKYcM...\"; \n\nlet raw_der = base64::decode_config(der, base64::STANDARD).unwrap();\nlet d = jsonwebtoken::decode::&lt;MsOAuthPayload&gt;(&amp;token, &amp;raw_der, &amp;validation_config);\n</code></pre>\n\n<p>The above always returns InvalidSignature.</p>\n\n<ul>\n<li>RS265 is the correct algo.</li>\n<li>The cert is correct. I tried it on jwt.io by adding a BEGIN/END cert and it validates fine.</li>\n<li>I used openssl to convert the BEGIN/END pem to DER and the bytes match up from the base 64 decode.</li>\n<li>The key URL is: <a href=\"https://login.microsoftonline.com/common/discovery/v2.0/keys\" rel=\"nofollow noreferrer\">https://login.microsoftonline.com/common/discovery/v2.0/keys</a> but my specific tenant returns the same keys.</li>\n</ul>\n\n<p>Anyone have some insight on what I'm doing wrong here?</p>\n\n<p>Thanks</p>\n\n<p>EDIT: Minimal working example here. <a href=\"https://pastebin.com/RqqRaKkU\" rel=\"nofollow noreferrer\">https://pastebin.com/RqqRaKkU</a></p>\n"}, {"tags": ["rust", "macros", "rules"], "answers": [{"comments": [{"owner": {"reputation": 110, "user_id": 5489560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/890fe81a3f06a02f6a73fb45c3a38002?s=128&d=identicon&r=PG&f=1", "display_name": "Gagan Jakhotiya", "link": "https://stackoverflow.com/users/5489560/gagan-jakhotiya"}, "edited": false, "score": 0, "creation_date": 1551856473, "post_id": 55017005, "comment_id": 96788613, "body": "Thanks! That clears my doubt. The idea with <code>f_list</code> was to have something like this:   macro_rules! f_list {     ($fname: ident, Vec&lt;$ftype: ty&gt;) =&gt; {         #[serde(default)]         pub $fname: Vec&lt;$ftype&gt;,     }     ($fname: ident, $ftype: ty) =&gt; {         pub $fname: $ftype,     } }"}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 2, "last_activity_date": 1551855363, "last_edit_date": 1551855363, "creation_date": 1551854196, "answer_id": 55017005, "question_id": 55016180, "link": "https://stackoverflow.com/questions/55016180/rust-recursive-macro-not-working-for-generating-struct/55017005#55017005", "title": "Rust recursive macro not working for generating struct", "body": "<p>When writing declarative macros (<code>macro_rules!</code>), it's important to understand that the output of a macro must be a pattern, a statement, an expression, an item or an <code>impl</code>. Effectively, you should think of the output as something that can stand alone, syntactically speaking.</p>\n\n<p>In your code, the macro <code>f_list</code>, if it worked, would output code like</p>\n\n<pre><code>name1: type1,\nname2: type2,\nname3: type3,\n</code></pre>\n\n<p>While this could be part of a declaration for a struct, it is not itself something that can stand alone.</p>\n\n<p>Why is the error in the other macro then? <code>mk_str</code> successfully expands to</p>\n\n<pre><code>#[derive(Debug, Clone)]\npub struct Yo {\n    f_list!(name, String)\n}\n</code></pre>\n\n<p>However, the parser doesn't expect a macro inside of a struct declaration. The inside of a struct isn't a pattern, a statement, an expression, an item or an <code>impl</code>. Thus, when it sees the <code>!</code>, it gives up and reports an error.</p>\n\n<p>How can you fix this? In this particular example, <code>f_list</code> is fairly redundant. You could simply replace <code>f_list!($fname, $ftype)</code> with <code>pub $fname: $ftype,</code> in <code>mk_str</code> and it'll work as written. If this doesn't work for your goal, take a look at <a href=\"http://danielkeep.github.io/tlborm/book/\" rel=\"nofollow noreferrer\"><em>The Little Book of Rust Macros</em></a>. It has some patterns for doing very complicated things with macros. Most of the information in this answer came from the section <a href=\"https://danielkeep.github.io/tlborm/book/mbe-syn-macros-in-the-ast.html\" rel=\"nofollow noreferrer\">\"Macros in the AST\"</a>.</p>\n"}], "owner": {"reputation": 110, "user_id": 5489560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/890fe81a3f06a02f6a73fb45c3a38002?s=128&d=identicon&r=PG&f=1", "display_name": "Gagan Jakhotiya", "link": "https://stackoverflow.com/users/5489560/gagan-jakhotiya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 396, "favorite_count": 0, "accepted_answer_id": 55017005, "answer_count": 1, "score": 3, "last_activity_date": 1551855363, "creation_date": 1551850325, "question_id": 55016180, "link": "https://stackoverflow.com/questions/55016180/rust-recursive-macro-not-working-for-generating-struct", "title": "Rust recursive macro not working for generating struct", "body": "<p>I am trying to write a macro that generates a struct in Rust. This macro will add different Serde attributes to struct fields based on the type of field. This is the final goal.</p>\n\n<p>For now, I'm simply trying to write a macro that uses another macro for generating a recursive code.</p>\n\n<p>This is what the code looks like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! f_list {\n    ($fname: ident, $ftype: ty) =&gt; {\n        pub $fname: $ftype,\n    }\n}\n\nmacro_rules! mk_str {\n    ($sname: ident; $($fname: ident: $ftype: ty,)+) =&gt; {\n        #[derive(Debug, Clone)]\n        pub struct $sname {\n            $(\n                f_list!($fname, $ftype)\n            )+\n        }\n    }\n}\n\nmk_str! {\n    Yo;\n    name: String,\n}\n\nfn main() {\n    println!(\"{:?}\", Yo { name: \"yo\".to_string() })\n}\n</code></pre>\n\n<p>This code on running gives below error, which I'm not able to understand.</p>\n\n<pre><code>error: expected `:`, found `!`\n  --&gt; src/main.rs:12:23\n   |\n12 |                   f_list!($fname, $ftype);\n   |                         ^ expected `:`\n</code></pre>\n\n<p>What's wrong here?</p>\n\n<p>Here's a playground <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=31addd4e0de153c292204e42c1723376\" rel=\"nofollow noreferrer\">link</a></p>\n"}, {"tags": ["concurrency", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1551837565, "post_id": 55013731, "comment_id": 96783157, "body": "Are you looking for something out of the box? Seems like you could make a wrapper type around <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> that only exposed read operations, and then only send that wrapper to the reading threads, that way they never have direct access to the <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> and thus no way to get write access."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1551841742, "post_id": 55013731, "comment_id": 96784164, "body": "Anything you can do in C, you can do in Rust the same way -- with raw pointers and unsafe code. I think you should clarify whether you&#39;re looking for a safe solution or an <code>unsafe</code>-using wrapper. I don&#39;t think a solution using only safe code exists (but I could be wrong)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1551841862, "post_id": 55013731, "comment_id": 96784185, "body": "Also, how should access between the single writing thread and the multiple reading threads be synchronized? A mutex, or is it synchronized in some other way?"}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1551867247, "post_id": 55013731, "comment_id": 96794532, "body": "I&#39;m imagining a situation where one thread has a mutable ref to a value and another has an immutable ref. I guess this is not possible with Arc/Mutex but then I might need static lifetime and how do I make sure concurrent read/writes don&#39;t happen."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1551874103, "post_id": 55013731, "comment_id": 96798762, "body": "Mutable references are unique, so it&#39;s not possible to have a <code>&amp;mut T</code> in one thread and a <code>&amp;T</code> in another thread; you have to use something like a <code>Mutex</code> or an <code>UnsafeCell</code>. Bear in mind, reading and mutating a value at the same time is <i>also</i> illegal in C, so whatever C code you are imagining is incorrect if it doesn&#39;t feature some form of synchronization."}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1551878946, "post_id": 55013731, "comment_id": 96801518, "body": "Yes my mistake. A Mutex though gives the ability for both threads to mutate at will."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552246510, "post_id": 55013731, "comment_id": 96927798, "body": "<b>How</b> would you do this in C?"}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1551865740, "post_id": 55016668, "comment_id": 96793560, "body": "Interesting! What stops someone from accessing the inner mutable_arc directly though?"}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1551865827, "post_id": 55016668, "comment_id": 96793609, "body": "Ah my bad it&#39;s private. So outside the crate should be fine but inside the crate we&#39;ll still have access."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1551868352, "post_id": 55016668, "comment_id": 96795290, "body": "@NikosKostoulas yes but you should put such kind of wrapper utils outside already for the correct modularity."}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1551869295, "post_id": 55016668, "comment_id": 96795856, "body": "A separate module under the same crate should be fine I guess!"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1551870153, "post_id": 55016668, "comment_id": 96796379, "body": "@NikosKostoulas did not tried to seperate it in my side but I think it should work. If the answer is solved your issue please, mark it as accepted so it will be easier to find solution for later looking users."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1551873916, "post_id": 55016668, "comment_id": 96798661, "body": "I see what you are going for, but secret tokens are <b>not</b> the way to enforce an API. Use the type system! For instance, you could have two types: <code>WriterArc&lt;T&gt;</code>, which does not implement <code>Clone</code> but exposes both <code>get</code> and <code>set</code> methods, and <code>ReaderArc&lt;T&gt;</code>, which implements <code>Clone</code> but only exposes <code>get</code>. Presto, compile time guarantee. No futzing about with getters and setters for secret keys, ew."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1551939480, "post_id": 55016668, "comment_id": 96826035, "body": "@trentcl, Could you please provide this as an another answer. I am not feeling that kind of confident . So I can look and learn from your answer too ^-^"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 0, "last_activity_date": 1551852627, "creation_date": 1551852627, "answer_id": 55016668, "question_id": 55013731, "link": "https://stackoverflow.com/questions/55013731/is-it-possible-to-allow-only-exactly-one-thread-to-mutate-shared-data/55016668#55016668", "title": "Is it possible to allow only exactly one thread to mutate shared data?", "body": "<p>You can create a wrapper around <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> and set the values via setter method with the key which is provided by the creator of the arc.</p>\n\n<pre><code>use std::sync::Arc;\nuse std::sync::Mutex;\nuse std::thread;\n\n#[derive(Clone)]\npub struct CustomArc&lt;T&gt; {\n    mutable_arc: Arc&lt;Mutex&lt;T&gt;&gt;,\n    mutator_key: String,\n}\n\n#[derive(Clone)]\nstruct MyStruct {\n    inner_val: i32,\n}\n\nimpl MyStruct {\n    fn set_val(&amp;mut self, val: i32) {\n        self.inner_val = val;\n    }\n\n    fn get_val(&amp;mut self) -&gt; i32 {\n        self.inner_val.clone()\n    }\n}\n\nimpl CustomArc&lt;MyStruct&gt; {\n    fn new(val: MyStruct, mutator_key: String) -&gt; CustomArc&lt;MyStruct&gt; {\n        CustomArc {\n            mutable_arc: Arc::new(Mutex::new(val)),\n            mutator_key,\n        }\n    }\n\n    fn set_inner_val(&amp;mut self, value: i32, mutator_key: String) -&gt; Result&lt;(), SetError&gt; {\n        if mutator_key == self.mutator_key {\n            self.mutable_arc.lock().unwrap().set_val(value);\n            return Ok(());\n        }\n\n        Err(SetError::CouldNotSet)\n    }\n\n    fn get_inner_val(&amp;self) -&gt; i32 {\n        self.mutable_arc.lock().unwrap().get_val()\n    }\n}\n\nenum SetError {\n    CouldNotSet,\n}\n\nfn main() {\n    let my_struct = MyStruct { inner_val: 3 };\n\n    let custom_arc = CustomArc::new(my_struct, \"OwnerKey\".to_string());\n    let mut custom_arc1 = custom_arc.clone();\n    let mut custom_arc2 = custom_arc.clone();\n    let mut custom_arc3 = custom_arc.clone();\n\n    thread::spawn(move || {\n        println!(\n            \"Thread1 -&gt; Current Value: {:?}\",\n            custom_arc1.get_inner_val()\n        );\n        if let Err(_err) = custom_arc1.set_inner_val(4, \"AnotherKey\".to_string()) {\n            println!(\"Could not write in thread1\");\n        }\n        println!(\"Thread1 -&gt; Value: {:?}\", custom_arc1.get_inner_val());\n    });\n\n    thread::sleep_ms(500);\n\n    thread::spawn(move || {\n        println!(\n            \"Thread2 -&gt; Current Value: {:?}\",\n            custom_arc2.get_inner_val()\n        );\n        if let Err(_err) = custom_arc2.set_inner_val(5, \"OwnerKey\".to_string()) {\n            println!(\"Could not write in thread2\");\n        }\n        println!(\"Thread2 -&gt; Value: {:?}\", custom_arc2.get_inner_val());\n    });\n\n    thread::sleep_ms(500);\n\n    thread::spawn(move || {\n        println!(\n            \"Thread3 -&gt; Current Value: {:?}\",\n            custom_arc3.get_inner_val()\n        );\n        if let Err(_err) = custom_arc3.set_inner_val(6, \"SomeKey\".to_string()) {\n            println!(\"Could not write in thread3\");\n        }\n        println!(\"Thread3 -&gt; Value: {:?}\", custom_arc3.get_inner_val());\n    });\n\n    thread::sleep_ms(500);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=faac97b3d9f1316b3e8bb2165945ffd9\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Since your <code>CustomArc</code> is public and the <code>mutable_arc</code> field is private, you should access them via setter and getters from outside of the crate. The owner(possible another threads) of the <code>mutator_key</code> has right to mutate the inner data.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 1, "last_activity_date": 1552245684, "creation_date": 1552245684, "answer_id": 55091444, "question_id": 55013731, "link": "https://stackoverflow.com/questions/55013731/is-it-possible-to-allow-only-exactly-one-thread-to-mutate-shared-data/55091444#55091444", "title": "Is it possible to allow only exactly one thread to mutate shared data?", "body": "<p>You can use the type system to wrap an <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> in a way that disallows mutation except by one privileged owner. Here's an example:</p>\n\n<pre><code>use std::sync::Arc;\nuse std::sync::Mutex;\n\npub struct Writer&lt;T&gt;(Arc&lt;Mutex&lt;T&gt;&gt;);\n\nimpl&lt;T&gt; Writer&lt;T&gt; {\n    pub fn new(value: T) -&gt; Self {\n        Writer(Arc::new(Mutex::new(value)))\n    }\n\n    pub fn reader(&amp;self) -&gt; Reader&lt;T&gt; {\n        Reader(Arc::clone(&amp;self.0))\n    }\n\n    pub fn set(&amp;self, value: T) {\n        *self.0.lock().unwrap() = value;\n    }\n\n    pub fn get(&amp;self) -&gt; T\n    where\n        T: Clone,\n    {\n        self.0.lock().unwrap().clone()\n    }\n}\n\npub struct Reader&lt;T&gt;(Arc&lt;Mutex&lt;T&gt;&gt;);\n\n// derive(Clone) uses incorrect bounds, so we must implement Clone manually\n// (see https://stackoverflow.com/q/39415052/3650362)\nimpl&lt;T&gt; Clone for Reader&lt;T&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        Reader(Arc::clone(&amp;self.0))\n    }\n}\n\nimpl&lt;T&gt; Reader&lt;T&gt; {\n    pub fn get(&amp;self) -&gt; T\n    where\n        T: Clone,\n    {\n        self.0.lock().unwrap().clone()\n    }\n}\n</code></pre>\n\n<p>If you put this code in a <code>mod</code>ule, Rust's privacy controls will prove that no user can duplicate a <code>Writer</code> or turn a <code>Reader</code> into a <code>Writer</code> except through the use of <code>unsafe</code>. Therefore you can clone and send <code>Reader</code>s to as many threads as you like, but send the <code>Writer</code> only to the particular thread that should have write access.</p>\n\n<p>There are many possible variations on this design; for instance, you could use <code>RwLock</code> instead of <code>Mutex</code> to let multiple readers access the value simultaneously while it's not being written to.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=81c50481960fa6e7d5288a16a7d035fb\" rel=\"nofollow noreferrer\">Playground</a> (based on Akiner Alkan's example)</p>\n\n<blockquote>\n  <p>Something like that would be possible in say C</p>\n</blockquote>\n\n<p>Note that just as in Rust, if you want to do this <em>safely</em> in C, you need some kind of synchronization (a mutex or similar). Rust insists that you be explicit about how to avoid data races. C is different in that it will just assume you know what you're doing and then punish you savagely for writing races. In Rust the idiomatic approach is to use the safe abstractions provided by the standard library. However, if you have some other means of synchronization and can prove that <code>Mutex</code> is unnecessary overhead, you can always just write things in the C way -- raw pointers are essentially the same in both Rust (within an <code>unsafe</code> block) and C.</p>\n"}], "owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 202, "favorite_count": 0, "accepted_answer_id": 55091444, "answer_count": 2, "score": 1, "last_activity_date": 1552246496, "creation_date": 1551832406, "last_edit_date": 1552246496, "question_id": 55013731, "link": "https://stackoverflow.com/questions/55013731/is-it-possible-to-allow-only-exactly-one-thread-to-mutate-shared-data", "title": "Is it possible to allow only exactly one thread to mutate shared data?", "body": "<p>Is there any way to share data between threads (with <code>Arc</code>) but only allow a single thread to be able to mutate that data?</p>\n\n<p>Something like that would be possible in C but I can't see how to do this in Rust.</p>\n\n<p><code>Arc&lt;Mutex&lt;T&gt;&gt;</code> allows all threads to mutate, while <code>Arc&lt;T&gt;</code> allows none.</p>\n"}, {"tags": ["enums", "rust", "traits"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 6, "creation_date": 1551819240, "post_id": 55011280, "comment_id": 96777543, "body": "Doesn&#39;t make sense to me. A trait derivation is a compile-time property of a type. A variant is a runtime property of a particular object. Sounds like an <a href=\"https://en.wikipedia.org/wiki/XY_problem\" rel=\"nofollow noreferrer\">XY problem</a>. Perhaps you should describe the behavior you&#39;re trying to achieve from this."}, {"owner": {"reputation": 96, "user_id": 3994578, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d5922a999655ca3a0cab7ef739a23fd?s=128&d=identicon&r=PG", "display_name": "vgar", "link": "https://stackoverflow.com/users/3994578/vgar"}, "edited": false, "score": 0, "creation_date": 1551819351, "post_id": 55011280, "comment_id": 96777588, "body": "You use PartialEq or Eq when you want to compare two objects, let&#39;s say you want to check <code>MyEnum::VariantA == MyEnum::VariantB</code>."}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1551820096, "post_id": 55011280, "comment_id": 96777904, "body": "The variants are types from other crates. Not all of them implement the PartialEq trait. But I&#39;m happy to use it whenever it is there; and I would prefer to keep it as a single Enum."}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1551820150, "post_id": 55011280, "comment_id": 96777928, "body": "In that case your best option is probably to manually implement <code>PartialEq</code> (<code>impl PartialEq for MyEnum</code>) such that it returns <code>false</code> whenever one of the unsupported variants is used as an operand."}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1551820226, "post_id": 55011280, "comment_id": 96777983, "body": "@apemanzilla Yes that would be my last option. You can actually get the generated code from Rust and remove the problematic ones. But you&#39;ll have to redo it every time you update the enum with more variants."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1551861005, "creation_date": 1551861005, "answer_id": 55018620, "question_id": 55011280, "link": "https://stackoverflow.com/questions/55011280/derive-a-trait-for-particular-variants/55018620#55018620", "title": "Derive a Trait for particular variants", "body": "<blockquote>\n  <p>What I want to do, is derive the trait but only to particular variants and not the whole enum. Is that possible? (or does it even make sense?).</p>\n</blockquote>\n\n<p>This doesn't really make sense.</p>\n\n<p>Traits are implemented for <em>types</em>. An enum is a type and its variants are its values. Your question is equivalent to asking if you could implement a trait for some <code>String</code>s but not others.</p>\n\n<p>If it is acceptable for unsupported variants to always return <code>false</code>, similar to how <code>f32</code>'s <code>PartialEq</code> implementation returns <code>false</code> whenever you compare a <code>NaN</code> value, then you can write that impl by hand:</p>\n\n<pre><code>impl PartialEq for MyEnum {\n    fn eq(&amp;self, other: &amp;MyEnum) -&gt; bool {\n        use MyEnum::*;\n        match (self, other) {\n            // VariantA and VariantB are supported\n            (VariantA(value), VariantA(other_value)) =&gt; value == other_value,\n            (VariantB(value), VariantB(other_value)) =&gt; value == other_value,\n            // Any other combinations of variants end up here\n            _ =&gt; false,\n        }\n    }\n}\n</code></pre>\n\n<p>Note that you must <em>not</em> implement <code>Eq</code> this way, since implementations of <code>Eq</code> may be assumed to be <em>total</em>, which this is not. </p>\n"}, {"tags": [], "owner": {"reputation": 61, "user_id": 9409599, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72dd86ac627d94a440a9c572d37dc18a?s=128&d=identicon&r=PG&f=1", "display_name": "Mithnar", "link": "https://stackoverflow.com/users/9409599/mithnar"}, "is_accepted": false, "score": 6, "last_activity_date": 1551861324, "creation_date": 1551861324, "answer_id": 55018714, "question_id": 55011280, "link": "https://stackoverflow.com/questions/55011280/derive-a-trait-for-particular-variants/55018714#55018714", "title": "Derive a Trait for particular variants", "body": "<p>Assuming you have a setup like:</p>\n\n<pre><code>#[derive(PartialEq)]\nstruct VarB{\n    pub value: u32,\n}\n\n#[derive(PartialEq)]\nenum MyEnum{\n    VarA(VarA),\n    VarB(VarB)\n}\n</code></pre>\n\n<p>VarA comes from a different crate and you can't compile due to it not having derived PartialEq (or any other external trait).</p>\n\n<p>You can solve that with the newtype pattern (assuming you have access to the relevent fields / accessors)</p>\n\n<pre><code>struct MyVarA(VarA);\n\nimpl PartialEq for MyVarA{\n    fn eq(&amp;self, other: &amp;MyVarA) -&gt; bool {\n        self.0.value == other.0.value\n    }\n\n    fn ne(&amp;self, other: &amp;MyVarA) -&gt; bool {\n        self.0.value != other.0.value\n    }\n}\n\n#[derive(PartialEq)]\nstruct VarB{\n    value: u32,\n}\n\n#[derive(PartialEq)]\nenum MyEnum{\n    VarA(MyVarA),\n    VarB(VarB)\n}\n</code></pre>\n\n<p>further informations:\n<a href=\"https://doc.rust-lang.org/rust-by-example/generics/new_types.html\" rel=\"noreferrer\">https://doc.rust-lang.org/rust-by-example/generics/new_types.html</a></p>\n"}], "owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1551864859, "creation_date": 1551818711, "last_edit_date": 1551864859, "question_id": 55011280, "link": "https://stackoverflow.com/questions/55011280/derive-a-trait-for-particular-variants", "title": "Derive a Trait for particular variants", "body": "<p>Let's say I have the following Enum</p>\n\n<pre><code>enum MyEnum {\n  VariantA,\n  VariantB,\n  VariantC,\n}\n</code></pre>\n\n<p>I can derive the PartialEq trait for the whole enum by doing so</p>\n\n<pre><code>#[derive(PartialEq)]\nenum MyEnum {\n  VariantA,\n  VariantB,\n  VariantC,\n}\n</code></pre>\n\n<p>What I want to do, is derive the trait but only to particular variants and not the whole enum. Is that possible? (or does it even make sense?).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1551818642, "post_id": 55010980, "comment_id": 96777260, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/26368288/how-do-i-stop-iteration-and-return-an-error-when-iteratormap-returns-a-result\">How do I stop iteration and return an error when Iterator::map returns a Result::Err?</a>"}, {"owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1551819725, "post_id": 55010980, "comment_id": 96777754, "body": "Not really, because I&#39;m chaining other functions after the <code>?</code> operator."}, {"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 2, "creation_date": 1551820309, "post_id": 55010980, "comment_id": 96778020, "body": "I don&#39;t agree it is a duplicate (though definitely related).  For one thing, the <code>?</code> operator didn&#39;t exist when that other question was posted and answered.  Plus, from a fairly quick look I&#39;m struggling to see how to apply the ideas from the other question to this one easily.  I think the community could benefit from having this question answered anew."}], "answers": [{"comments": [{"owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "edited": false, "score": 0, "creation_date": 1551821028, "post_id": 55011757, "comment_id": 96778369, "body": "Great, that&#39;s the beauty I knew somehow existed but couldn&#39;t really figure it out. Thanks!"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "reply_to_user": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "edited": false, "score": 0, "creation_date": 1551821178, "post_id": 55011757, "comment_id": 96778438, "body": "@Le\u015bnyRumcajs Glad to help!"}, {"owner": {"reputation": 7946, "user_id": 1391064, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/5c6373affda1bb4debb75a9ef8d0b79a?s=128&d=identicon&r=PG", "display_name": "Jon", "link": "https://stackoverflow.com/users/1391064/jon"}, "edited": false, "score": 0, "creation_date": 1580761236, "post_id": 55011757, "comment_id": 106196545, "body": "How would you do this if you&#39;re using <code>for_each</code> instead of <code>map</code> and therefore aren&#39;t collecting the results?"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1580768132, "post_id": 55011757, "comment_id": 106199258, "body": "In that case I&#39;d use a regular for loop, since they work with any iterator"}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 5, "last_activity_date": 1551821293, "last_edit_date": 1551821293, "creation_date": 1551820772, "answer_id": 55011757, "question_id": 55010980, "link": "https://stackoverflow.com/questions/55010980/using-inside-closure/55011757#55011757", "title": "Using ? inside closure", "body": "<p>The issue here is that the closure itself is a function, so using <code>?</code> will return from the closure instead of the outer function. This can still be used to implement the function the way you want, however:</p>\n\n<pre><code>use std::collections::BTreeMap;\n\nfn parse_kv(data: &amp;str) -&gt; Option&lt;BTreeMap&lt;String, String&gt;&gt; {\n    data.split('&amp;')\n        .map(|kv| kv.split('='))\n        .map(|mut kv| Some((kv.next()?.into(), kv.next()?.into())))\n        .collect()\n}\n\n#[test]\nfn parse_kv_test() {\n    let result = parse_kv(\"test1=1&amp;test2=2\").unwrap();\n    assert_eq!(result[\"test1\"], \"1\");\n    assert_eq!(result[\"test2\"], \"2\");\n\n    let result2 = parse_kv(\"test1=1&amp;test2\");\n    assert_eq!(result2, None);\n}\n</code></pre>\n\n<p>There are a couple points to note here: First, the question marks and <code>Some(...)</code> in the second <code>map</code> invocation mean you have an iterator of <code>Option&lt;(String, String)&gt;</code> - type inference figures this out for you.</p>\n\n<p>The next point of note is that <code>collect()</code> can automatically convert <code>Iterator&lt;Option&lt;T&gt;&gt;</code> into <code>Option&lt;Collection&lt;T&gt;&gt;</code> (same with <code>Result</code> - <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\">relevant documentation here</a>). I added a test demonstrating that this works.</p>\n\n<p>One other thing to be aware of is that using <code>collect</code> in this way still allows short-circuiting. Once the first <code>None</code> is yielded by the iterator, <code>collect</code> will immediately return with <code>None</code>, rather than continuing to process each element. </p>\n"}], "owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 55011757, "answer_count": 1, "score": 1, "last_activity_date": 1551821293, "creation_date": 1551817467, "question_id": 55010980, "link": "https://stackoverflow.com/questions/55010980/using-inside-closure", "title": "Using ? inside closure", "body": "<p>I've got this simple parsing function</p>\n\n<pre><code>use std::collections::BTreeMap;\n\nfn parse_kv(data: &amp;str) -&gt; BTreeMap&lt;String, String&gt; {\n    data.split('&amp;')\n        .map(|kv| kv.split('='))\n        .map(|mut kv| (kv.next().unwrap().into(), kv.next().unwrap().into()))\n        .collect()\n}\n\n#[test]\nfn parse_kv_test() {\n    let result = parse_kv(\"test1=1&amp;test2=2\");\n    assert_eq!(result[\"test1\"], \"1\");\n    assert_eq!(result[\"test2\"], \"2\");\n}\n\n</code></pre>\n\n<p>It works fine and all, but I want to have Option or Result return type like so:</p>\n\n<pre><code>fn parse_kv(data: &amp;str) -&gt; Option&lt;BTreeMap&lt;String, String&gt;&gt;\n</code></pre>\n\n<p>This implementation:</p>\n\n<pre><code>fn parse_kv(data: &amp;str) -&gt; Option&lt;BTreeMap&lt;String, String&gt;&gt; {\n    Some(data.split('&amp;')\n        .map(|kv| kv.split('='))\n        .map(|mut kv| (kv.next()?.into(), kv.next()?.into()))\n        .collect())\n}\n</code></pre>\n\n<p>Unfortunately gives the following error:</p>\n\n<pre><code>error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n  --&gt; src/ecb_cut_paste.rs:23:24\n   |\n23 |         .map(|mut kv| (kv.next()?.into(), kv.next()?.into()))\n   |                        ^^^^^^^^^^ cannot use the `?` operator in a function that returns `(_, _)`\n   |\n   = help: the trait `std::ops::Try` is not implemented for `(_, _)`\n   = note: required by `std::ops::Try::from_error`\n</code></pre>\n\n<p>Is it somehow possible to use <code>?</code> operator inside closure to return <code>None</code> from such function? If not, how would I need to handle idiomatically such case?</p>\n"}, {"tags": ["rust", "comments", "nom"], "answers": [{"tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": false, "score": 8, "last_activity_date": 1551814223, "creation_date": 1551814223, "answer_id": 55010191, "question_id": 55009665, "link": "https://stackoverflow.com/questions/55009665/how-do-i-make-a-nom-whitespace-parser-that-also-skips-line-oriented-comments/55010191#55010191", "title": "How do I make a nom whitespace parser that also skips line-oriented comments?", "body": "<p>That's a tricky issue; I had it as well when writing a Python parser.</p>\n\n<p>Here is how I ended up implementing \"line break optionally preceded by a comment\":</p>\n\n<pre><code>named!(pub newline&lt;StrSpan, ()&gt;,\n  map!(\n    many1!(\n      tuple!(\n        spaces_nonl,\n        opt!(preceded!(char!('#'), many0!(none_of!(\"\\n\")))),\n        char!('\\n')\n      )\n    ),\n    |_| ()\n  )\n);\n\nnamed!(pub spaces_nl&lt;StrSpan, ()&gt;,\n  map!(many0!(alt!(one_of!(\" \\t\\x0c\") =&gt; { |_|() } | escaped_newline | newline)), |_| ())\n);\nnamed!(pub spaces_nonl&lt;StrSpan, ()&gt;,\n  map!(many0!(alt!(one_of!(\" \\t\\x0c\") =&gt; { |_| () }|escaped_newline)), |_| ())\n);\n</code></pre>\n\n<p>Which you can then use to rewrite <code>ws!</code> to use this new function (I copy-pasted the code from nom and replaced the name of the argument of <code>sep!</code>):</p>\n\n<pre><code>/// Like `ws!()`, but ignores comments as well\nmacro_rules! ws_comm (\n  ($i:expr, $($args:tt)*) =&gt; (\n    {\n      use nom::Convert;\n      use nom::Err;\n\n      match sep!($i, spaces_nl, $($args)*) {\n        Err(e) =&gt; Err(e),\n        Ok((i1,o))    =&gt; {\n          match spaces_nl(i1) {\n            Err(e) =&gt; Err(Err::convert(e)),\n            Ok((i2,_))    =&gt; Ok((i2, o))\n          }\n        }\n      }\n    }\n  )\n);\n</code></pre>\n\n<p>Related code, in case you are curious: <a href=\"https://github.com/ProgVal/rust-python-parser/blob/1e03122f030e183096d7d3271907106678036f56/src/helpers.rs\" rel=\"noreferrer\">https://github.com/ProgVal/rust-python-parser/blob/1e03122f030e183096d7d3271907106678036f56/src/helpers.rs</a></p>\n"}], "owner": {"reputation": 13169, "user_id": 967945, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/47244a17f72cee237f57f4c4b9613ea1?s=128&d=identicon&r=PG", "display_name": "Dan Hulme", "link": "https://stackoverflow.com/users/967945/dan-hulme"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1080, "favorite_count": 0, "answer_count": 1, "score": 6, "last_activity_date": 1551814223, "creation_date": 1551812040, "question_id": 55009665, "link": "https://stackoverflow.com/questions/55009665/how-do-i-make-a-nom-whitespace-parser-that-also-skips-line-oriented-comments", "title": "How do I make a nom whitespace parser that also skips line-oriented comments?", "body": "<p>I'm writing a parser for a text-based format in nom 4.2.2, and I'm using <a href=\"https://docs.rs/nom/4.2.2/nom/whitespace/index.html\" rel=\"noreferrer\">the whitespace facility</a> to skip whitespace. I have to use a custom parser because this format treats some unusual characters as whitespace. Following the example on that page, I've made one using <code>eat_separator</code>.</p>\n\n<p>How do I efficiently extend my space parser to also consume line comments from <code>#</code> to end-of-line? These comments can appear anywhere except within strings. I always want to throw away the contents of the comment: there's nothing like pre-processor directives.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1551821617, "post_id": 55010014, "comment_id": 96778602, "body": "Are you sure that the smart pointers (<code>Rc</code>, <code>Arc</code>, etc) have the same size as <code>&amp;T</code>? They all have additional state beyond that of just the encapsulated data."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1551822256, "post_id": 55010014, "comment_id": 96778864, "body": "@apemanzilla Yeah, I would have believed that at first but they oddly do have the same size. Look at the edit I posted."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 1, "creation_date": 1551822789, "post_id": 55010014, "comment_id": 96779090, "body": "@apemanzilla <code>Rc</code> and <code>Arc</code> store the refcount inside the &quot;box&quot;, in-line with the <code>T</code>. They don&#39;t have separate data pointer and refcount pointer like you might find inside a C++ <code>shared_ptr</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1551881323, "post_id": 55010014, "comment_id": 96802973, "body": "Note: Your 3 special cases are generally known as <i>dynamically sized types</i>. There is no guarantee made on the layout of DSTs, and there have been proposals in the past to have <code>&amp;(Add +Sub)</code> for example being represented as two v-ptrs + one data-ptr."}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 5, "last_activity_date": 1551822204, "last_edit_date": 1551822204, "creation_date": 1551813500, "answer_id": 55010014, "question_id": 55009498, "link": "https://stackoverflow.com/questions/55009498/what-exactly-is-allocated-to-the-stack-of-a-function-when-it-has-a-reference-to/55010014#55010014", "title": "What exactly is allocated to the stack of a function when it has a reference to a variable as its parameter?", "body": "<p>Internally, a reference, ie <code>&amp;'a T</code> is basically just a pointer. The difference is that you have the memory safety guaranteed by <code>Rust</code>'s static compilation rules. As in, the rules you just read about in that chapter. When you pass a parameter to, say a function with a signature like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct UnitBar(i32);\nfn foo(data: &amp;UnitBar);\n</code></pre>\n\n<p>and you call it like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct UnitBar(i32);\nfn main() {\n    let bar = UnitBar(0); //Sizeof bar is sizeof i32\n    foo(&amp;bar);\n}\n</code></pre>\n\n<p>Rust will allocate a <code>UnitBar</code> which is 4 bytes in this case. Then, it will allocate a pointer to <code>bar</code>, which is the same size as the native pointers in the computer, or more idiomatically the same size as a <code>usize</code> in rust. Note here that there is no difference between a pointer and a reference <strong>at the memory level</strong>. At the static compilation level, or in your code, there are static compile-time checks to make sure that your code follows rust's rules. From here, the <code>data</code> parameter in <code>fn foo</code> will be represented as a pointer in memory. This <strong>will not</strong> copy the data that it's pointing to every time that it is passed on to another function or scope. </p>\n\n<p>Although not guaranteed to look like this, as the compiler can move things around in memory to produce more efficient programs, this is pretty much how it works. </p>\n\n<hr>\n\n<p>As a side note, there are 3 special cases:</p>\n\n<ol>\n<li>The case of the slice. <code>&amp;[T]</code> will take two \"pointer lengths\" to store. Why? Because a <code>&amp;[T]</code> is a special type, where it contains a <code>*const T</code> and a <code>usize</code>. It is the c equivalent of this:</li>\n</ol>\n\n<pre><code>struct SliceReference {\n    *const T data;\n    size_t length;\n}\n</code></pre>\n\n<ol start=\"2\">\n<li>The other (similar case) is a <code>&amp;str</code>. This is essentially a <code>&amp;[u8]</code>, so it also follows the memory model above, but instead assures you that all the characters it contains, ie, the configuration of bytes stored inside of it, are UTF-8.</li>\n<li>This is the last case, where there are trait objects. Ie, <code>&amp;dyn std::fmt::Debug</code>. The size of this is again, two <code>usize</code>s or two <code>size_t</code>s for the c/c++ programmers. There is the first pointer which points to the data, and the second one points to the vtable where the function signatures for each of its respective functions are stored.</li>\n</ol>\n\n<p>Note that <em>all</em> of the above counts towards things which are essentially the same as a <code>&amp;T</code> in memory:</p>\n\n<pre><code>Option&lt;&amp;T&gt;     -|\nBox&lt;T&gt;          |\nRc&lt;T&gt;           - These all have the same size as `&amp;T`\nArc&lt;Mutex&lt;T&gt;&gt;   |\nstruct Foo(&amp;T) -|\n</code></pre>\n\n<hr>\n\n<p>As an edit, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ebde405703cb267f97243516cb896743\" rel=\"nofollow noreferrer\">here</a> is proof that these are all the same size.</p>\n"}], "owner": {"reputation": 205, "user_id": 7816353, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-S3tHJJ35of8/AAAAAAAAAAI/AAAAAAAAAm0/us_9hLFEMvc/photo.jpg?sz=128", "display_name": "ayush prashar", "link": "https://stackoverflow.com/users/7816353/ayush-prashar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 55010014, "answer_count": 1, "score": 2, "last_activity_date": 1551822204, "creation_date": 1551811373, "question_id": 55009498, "link": "https://stackoverflow.com/questions/55009498/what-exactly-is-allocated-to-the-stack-of-a-function-when-it-has-a-reference-to", "title": "What exactly is allocated to the stack of a function when it has a reference to a variable as its parameter?", "body": "<p>We read in <a href=\"https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">Ownership</a> how a function keeps its parameter data in the stack. That may be a value in case of primitive type or a pointer to the data residing on the heap. Now how is the parameter represented in the stack when it is a reference to something?</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-diesel"], "comments": [{"owner": {"reputation": 117699, "user_id": 62576, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/15264f7bf48e10ce32dfa4865a13763c?s=128&d=identicon&r=PG", "display_name": "Ken White", "link": "https://stackoverflow.com/users/62576/ken-white"}, "edited": false, "score": 1, "creation_date": 1551792759, "post_id": 55003832, "comment_id": 96763232, "body": "This seems pretty clear to me (the only relevant part of the text you provided): <code>LINK : fatal error LNK1181: cannot open input file &#39;libpq.lib&#39;</code>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551793750, "post_id": 55003832, "comment_id": 96763828, "body": "@DarthBoiethios I don&#39;t think so. He doesn&#39;t care about the source, he wants to install the library to link against it."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1551793878, "post_id": 55003832, "comment_id": 96763905, "body": "@mcarton The answer answers to this question as well. It points to the right place: <a href=\"https://www.postgresql.org/download/\" rel=\"nofollow noreferrer\">postgresql.org/download</a>"}, {"owner": {"reputation": 43, "user_id": 6453832, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-mxDJEGA-8mA/AAAAAAAAAAI/AAAAAAAAACM/FWWXJGY6_IQ/photo.jpg?sz=128", "display_name": "Jordi", "link": "https://stackoverflow.com/users/6453832/jordi"}, "edited": false, "score": 0, "creation_date": 1551799493, "post_id": 55003832, "comment_id": 96767475, "body": "Thanks for the answers all. It is finally working :)"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1551809155, "post_id": 55003832, "comment_id": 96772932, "body": "@Jordi You should add an answer to your question in the case that it is solved."}, {"owner": {"reputation": 4283, "user_id": 2445111, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/Lxwtc.jpg?s=128&g=1", "display_name": "Amit Bisht", "link": "https://stackoverflow.com/users/2445111/amit-bisht"}, "edited": false, "score": 0, "creation_date": 1587968319, "post_id": 55003832, "comment_id": 108707362, "body": "Follow <a href=\"https://stackoverflow.com/a/61452780/2445111\">stackoverflow.com/a/61452780/2445111</a>"}], "owner": {"reputation": 43, "user_id": 6453832, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-mxDJEGA-8mA/AAAAAAAAAAI/AAAAAAAAACM/FWWXJGY6_IQ/photo.jpg?sz=128", "display_name": "Jordi", "link": "https://stackoverflow.com/users/6453832/jordi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 795, "favorite_count": 1, "closed_date": 1551813916, "answer_count": 0, "score": 2, "last_activity_date": 1559760787, "creation_date": 1551791952, "last_edit_date": 1559760787, "question_id": 55003832, "link": "https://stackoverflow.com/questions/55003832/diesel-error-linking-with-link-exe-failed-exit-code-1181", "closed_reason": "Duplicate", "title": "Diesel: error: linking with link.exe failed: exit code: 1181", "body": "<p>I'm following the getting started guide from diesel.\nWhen I run the command:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo install diesel_cli --no-default-features --features postgres\n</code></pre>\n\n<p>I get the following error code in the console:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `link.exe` failed: exit code: 1181\n  |\n  = note: \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.15.26726\\\\bin\\\\HostX64\\\\x64\\\\link.exe\" \"/NOLOGO\" \"/NXCOMPAT\" \"/LIBPATH:C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.0.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.1.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.10.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.11.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.12.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.13.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.14.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.15.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.2.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.3.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.4.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.5.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.6.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.7.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.8.rcgu.o\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.diesel.4pcin0zm-cgu.9.rcgu.o\" \"/OUT:C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.exe\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\diesel-87279b2b4b74ae82.2bqnk8wbiae8n3v4.rcgu.o\" \"/OPT:REF,ICF\" \"/DEBUG\" \"/NATVIS:C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\etc\\\\intrinsic.natvis\" \"/NATVIS:C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\etc\\\\liballoc.natvis\" \"/NATVIS:C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\etc\\\\libcore.natvis\" \"/LIBPATH:C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\" \"/LIBPATH:C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\liburl-b64f84303e939a3f.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libpercent_encoding-23fac7e093db0f71.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libidna-5944515c97602a6a.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libunicode_normalization-7a9d0823b3f11544.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libsmallvec-14d4053d84cd21b3.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libunicode_bidi-4008be4fc388326f.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libmatches-320bc884c21663fb.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libtoml-f85431370f7f385b.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libtempfile-767577fe85091a00.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libremove_dir_all-c488a5eae09b9ebb.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand-86e5afa33828c4a1.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_xorshift-8622f27e1e9197cd.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_pcg-8dbeda0c4f3b7d2b.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_hc-e6102018254d879a.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_chacha-dc84463836ed258a.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_isaac-9188f30cdc5e15d8.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_core-f07cb7b1b0b60fee.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_os-a23315aa194e3b44.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_jitter-85e3830323c53a43.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librand_core-853b99e69ab8db62.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libserde-0dd3b858bbefaf98.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libmigrations_internals-6301ed5c861b2190.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libdotenv-00c4c2b0f2c087f7.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libregex-668ce2794b29e860.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libutf8_ranges-88183c0ee1dcf4d7.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libregex_syntax-0be042da05d053db.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libucd_util-04bf0fab4a236a8d.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libthread_local-b643acffb6065cc8.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\liblazy_static-3b7ae74eb03e33d1.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libaho_corasick-044c0b72a757450f.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libmemchr-4ce9863493aff37b.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\liberror_chain-a321aee4aa5c5be3.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libbacktrace-b8cdfb0a0ffbcc44.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\librustc_demangle-1cb99dd12862d25f.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libcfg_if-57c0e3818a765d4f.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libdiesel-ef1ac8a682289af4.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libpq_sys-5ce560e23705af94.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libbyteorder-19c8e4d8048834d9.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libclap-36165c4345255a02.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libvec_map-6d0f0d01ffe2ad76.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libtextwrap-07de25c8f4e38a9d.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libunicode_width-64ba826635c87de4.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libstrsim-8b1806549b4cae5b.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libbitflags-6e93f175a0fbb26d.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libatty-328d5b3b2d6e35e1.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libchrono-c394c3953acfbc39.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libnum_integer-da1aff2c27bf5717.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libnum_traits-ea73256244b717c8.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libtime-04cc238e462a1c62.rlib\" \"C:\\\\Users\\\\Jordi\\\\AppData\\\\Local\\\\Temp\\\\cargo-installJZmLkX\\\\release\\\\deps\\\\libwinapi-45cc9c4241b74afd.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libstd-355141c685117d44.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libpanic_unwind-e62c2b969cf89e92.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libbacktrace_sys-ef5b66f3d14e54b9.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libunwind-7ac4b867b11af3dc.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\librustc_demangle-cf8d5d8130e6b38b.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\liblibc-fe5ef317ab783bf0.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\liballoc-de85e762a19070b0.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\librustc_std_workspace_core-54075683d9af2f09.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libcore-6c8bc4c414dd9168.rlib\" \"C:\\\\Users\\\\Jordi\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libcompiler_builtins-c1c73ddc384ca756.rlib\" \"libpq.lib\" \"advapi32.lib\" \"credui.lib\" \"dbghelp.lib\" \"gdi32.lib\" \"kernel32.lib\" \"msimg32.lib\" \"opengl32.lib\" \"secur32.lib\" \"setupapi.lib\" \"user32.lib\" \"winspool.lib\" \"advapi32.lib\" \"ws2_32.lib\" \"userenv.lib\" \"msvcrt.lib\"\n  = note: LINK : fatal error LNK1181: cannot open input file 'libpq.lib'\n\n\nerror: aborting due to previous error\n\nerror: failed to compile `diesel_cli v1.4.0`, intermediate artifacts can be found at `C:\\Users\\Jordi\\AppData\\Local\\Temp\\cargo-installJZmLkX`\n\nCaused by:\n  Could not compile `diesel_cli`.\n</code></pre>\n\n<p>Does somebody have a solution for my problem?</p>\n"}, {"tags": ["rust", "llvm"], "comments": [{"owner": {"reputation": 147, "user_id": 9314483, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/185735ee8db2a425cc9ff72a69fbca49?s=128&d=identicon&r=PG&f=1", "display_name": "l.k", "link": "https://stackoverflow.com/users/9314483/l-k"}, "edited": false, "score": 0, "creation_date": 1555891160, "post_id": 54999851, "comment_id": 98245847, "body": "It might be enlightening to extract the LLVM IR for the  c++ intrinsic?  (fire the c++ example through <code>clang -S -emit-llvm</code>)"}, {"owner": {"reputation": 5875, "user_id": 2702398, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/87402651ed56717034035915b95c1ae0?s=128&d=identicon&r=PG&f=1", "display_name": "oakad", "link": "https://stackoverflow.com/users/2702398/oakad"}, "edited": false, "score": 0, "creation_date": 1578222853, "post_id": 54999851, "comment_id": 105362685, "body": "<code>backtrace</code> in Rust (if I&#39;m not mistaken) simply calls a C library (which happens to be a forked extract of <code>libgcc_eh</code> machinery) . Suppose, you can do the same."}, {"owner": {"reputation": 307, "user_id": 12728276, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-lr6Le1QH3ts/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-gbIdBwsgOv2TU0VhEnJsqF6Y9C6Q/mo/photo.jpg?sz=128", "display_name": "Jin-oh Kang", "link": "https://stackoverflow.com/users/12728276/jin-oh-kang"}, "edited": false, "score": 0, "creation_date": 1579767313, "post_id": 54999851, "comment_id": 105878447, "body": "Although not the return <i>address</i>, you may be interested in <a href=\"https://github.com/rust-lang/rust/issues/47809\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/47809</a>"}, {"owner": {"reputation": 307, "user_id": 12728276, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-lr6Le1QH3ts/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-gbIdBwsgOv2TU0VhEnJsqF6Y9C6Q/mo/photo.jpg?sz=128", "display_name": "Jin-oh Kang", "link": "https://stackoverflow.com/users/12728276/jin-oh-kang"}, "edited": false, "score": 0, "creation_date": 1579767569, "post_id": 54999851, "comment_id": 105878571, "body": "For this kind of project, I suppose a close instrumentation (that is, a &quot;plugin&quot; for rustc) is more suitable for this purpose. Debug symbols and/or compiler intermediates are still required for the return address to be useful, and it&#39;s not like you&#39;re going to change it or get the location of it (llvm.addressofreturnaddress) on the stack."}], "answers": [{"comments": [{"owner": {"reputation": 347, "user_id": 11152786, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a52b7bb7de9b651558d3e376d2d1a152?s=128&d=identicon&r=PG&f=1", "display_name": "Elia Geretto", "link": "https://stackoverflow.com/users/11152786/elia-geretto"}, "edited": false, "score": 0, "creation_date": 1582214975, "post_id": 60288510, "comment_id": 106708575, "body": "This feature does not appear to be stable yet, but it&#39;s a perfect solution if one is using Rust nightly I guess. This is the issue the compiler is pointing me to when trying what you proposed: <a href=\"https://github.com/rust-lang/rust/issues/29602\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/29602</a>"}, {"owner": {"reputation": 1119, "user_id": 11714860, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e6Xo3.png?s=128&g=1", "display_name": "Sapphire_Brick", "link": "https://stackoverflow.com/users/11714860/sapphire-brick"}, "edited": false, "score": 0, "creation_date": 1616369404, "post_id": 60288510, "comment_id": 117973543, "body": "Can unstable features be removed, or just changed?"}], "tags": [], "owner": {"reputation": 207, "user_id": 1485708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80993d784d810d391c31f18901577c07?s=128&d=identicon&r=PG", "display_name": "Maurice Kayser", "link": "https://stackoverflow.com/users/1485708/maurice-kayser"}, "is_accepted": false, "score": 2, "last_activity_date": 1582057097, "last_edit_date": 1582057097, "creation_date": 1582055763, "answer_id": 60288510, "question_id": 54999851, "link": "https://stackoverflow.com/questions/54999851/how-do-i-get-the-return-address-of-a-function/60288510#60288510", "title": "How do I get the return address of a function?", "body": "<p>I could not find any official documentation about this, but found out by <a href=\"https://github.com/rust-lang/rust/issues/60854\" rel=\"nofollow noreferrer\">asking in the <code>rust-lang</code> repository</a>: You can link against LLVM intrinsics, like <code>llvm.returnaddress</code>, with only a few lines of code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern {\n    #[link_name = \"llvm.returnaddress\"]\n    fn return_address() -&gt; *const u8;\n}\n\nfn foo() {\n    println!(\"I was called by {:X}\", return_address());\n}\n</code></pre>\n\n<p>The LLVM intrinsic <code>llvm.addressofreturnaddress</code> might also be interesting.</p>\n"}], "owner": {"reputation": 347, "user_id": 11152786, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a52b7bb7de9b651558d3e376d2d1a152?s=128&d=identicon&r=PG&f=1", "display_name": "Elia Geretto", "link": "https://stackoverflow.com/users/11152786/elia-geretto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1393, "favorite_count": 4, "answer_count": 1, "score": 28, "last_activity_date": 1582057097, "creation_date": 1551779336, "last_edit_date": 1556007503, "question_id": 54999851, "link": "https://stackoverflow.com/questions/54999851/how-do-i-get-the-return-address-of-a-function", "title": "How do I get the return address of a function?", "body": "<p>I am writing a Rust library containing an implementation of the callbacks for LLVM <a href=\"https://clang.llvm.org/docs/SanitizerCoverage.html\" rel=\"noreferrer\">SanitizerCoverage</a>. These callbacks can be used to trace the execution of an instrumented program.</p>\n\n<p>A common way to produce a trace is to print the address of each executed basic block. However, in order to do that, it is necessary to retrieve the address of the <code>call</code> instruction that invoked the callback. The C++ examples provided by LLVM rely on the compiler intrinsic <code>__builtin_return_address(0)</code> in order to obtain this information.</p>\n\n<pre><code>extern \"C\" void __sanitizer_cov_trace_pc_guard(uint32_t *guard) {\n  if (!*guard) return;\n  void *PC = __builtin_return_address(0);\n  printf(\"guard: %p %x PC %p\\n\", guard, *guard, PC);\n}\n</code></pre>\n\n<p>I am trying to reproduce the same function in Rust but, apparently, there is no equivalent to <code>__builtin_return_address</code>. The only reference I found is from an <a href=\"https://doc.rust-lang.org/1.7.0/core/intrinsics/fn.return_address.html\" rel=\"noreferrer\">old version</a> of Rust, but the function described is not available anymore. The function is the following:</p>\n\n<p><code>pub unsafe extern \"rust-intrinsic\" fn return_address() -&gt; *const u8</code></p>\n\n<p>My current hacky solution involves having a C file in my crate that contains the following function:</p>\n\n<pre><code>void* get_return_address() {\n  return __builtin_return_address(1);\n}\n</code></pre>\n\n<p>If I call it from a Rust function, I am able to obtain the return address of the Rust function itself. This solution, however, requires the compilation of my Rust code with <code>-C force-frame-pointers=yes</code> for it to work, since the C compiler intrinsic relies on the presence of frame pointers.</p>\n\n<p>Concluding, is there a more straightforward way of getting the return address of the current function in Rust?</p>\n\n<p><strong>edit:</strong> The removal of the <code>return_address</code> intrinsic is discussed in <a href=\"https://github.com/rust-lang/rust/issues/34227\" rel=\"noreferrer\">this</a> GitHub issue.</p>\n\n<p><strong>edit 2:</strong> Further testing showed that the <a href=\"https://crates.io/crates/backtrace\" rel=\"noreferrer\"><code>backtrace</code></a> crate is able to correctly extract the return address of the current function, thus avoiding the hack I described before. Credit goes to <a href=\"https://twitter.com/H2CO3_iOS/status/1102890010565595136\" rel=\"noreferrer\">this</a> tweet.</p>\n\n<p>The problem with this solution is the overhead that is generated creating a full backtrace when only the return address of the current function is needed. In addition, the crate is using C libraries to extract the backtrace; this looks like something that should be done in pure Rust.</p>\n\n<p><strong>edit 3:</strong> The compiler intrinsic <code>__builtin_return_address(0)</code> generates a call to the LLVM intrinsic <code>llvm.returnaddress</code>. The corresponding documentation can be found <a href=\"https://llvm.org/docs/LangRef.html#llvm-returnaddress-intrinsic\" rel=\"noreferrer\">here</a>.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1551781541, "post_id": 54999158, "comment_id": 96756561, "body": "Have you looked at the doc for <code>PhantomData</code>, and especially <a href=\"https://doc.rust-lang.org/stable/std/marker/struct.PhantomData.html#unused-type-parameters\" rel=\"nofollow noreferrer\">this paragraph</a>?"}, {"owner": {"reputation": 231, "user_id": 8053554, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y1zuB.png?s=128&g=1", "display_name": "Kristoffer Sj&#246;&#246;", "link": "https://stackoverflow.com/users/8053554/kristoffer-sj%c3%b6%c3%b6"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1551786725, "post_id": 54999158, "comment_id": 96759674, "body": "Thanks for the pointer @jmb, that does indeed work. I&#39;m still unsure why it&#39;s needed, and whether this is the accepted way to do what I&#39;m trying to do. This is after all an example from the Book, so a nice unambiguous answer would be nice if it exists!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1551795351, "post_id": 54999158, "comment_id": 96764780, "body": "<a href=\"https://stackoverflow.com/questions/50671177/specify-fn-trait-bound-on-struct-definition-without-fixing-one-of-the-fn-par\">Specify <code>Fn</code> trait bound on struct definition without fixing one of the <code>Fn</code> parameters</a> may help you. (disclosure: I wrote the accepted answer)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1551796730, "post_id": 54999158, "comment_id": 96765638, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/50671177/specify-fn-trait-bound-on-struct-definition-without-fixing-one-of-the-fn-par\">Specify `Fn` trait bound on struct definition without fixing one of the `Fn` parameters</a>"}], "owner": {"reputation": 231, "user_id": 8053554, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y1zuB.png?s=128&g=1", "display_name": "Kristoffer Sj&#246;&#246;", "link": "https://stackoverflow.com/users/8053554/kristoffer-sj%c3%b6%c3%b6"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1551795182, "creation_date": 1551777130, "question_id": 54999158, "link": "https://stackoverflow.com/questions/54999158/why-can-i-not-make-an-input-argument-generic", "title": "Why can I not make an input argument generic", "body": "<p>I'm following along with the Rust Programming Language <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/</a> and in Chapter 13 on closures I'm trying to make the example code use generics.</p>\n\n<p>I can make the output value generic as follows:</p>\n\n<pre><code>struct Cacher&lt;T, V&gt; \n    where T: Fn(u32) -&gt; V\n{\n    calculation: T,\n    value: Option&lt;V&gt;,\n}\n\nimpl &lt;T, V&gt; Cacher&lt;T, V&gt;\n    where T: Fn(u32) -&gt; V\n{\n    fn new(calculation: T) -&gt; Cacher&lt;T, V&gt; {\n        Cacher {\n            calculation,\n            value: None,\n        }\n    }\n}\n\nimpl &lt;T&gt; Cacher&lt;T, u32&gt;\n    where T: Fn(u32) -&gt; u32\n{\n    fn value(&amp;mut self, arg: u32) -&gt; u32 {\n        match self.value {\n            Some(v) =&gt; v,\n            None =&gt; {\n                let v = (self.calculation)(arg);\n                self.value = Some(v);\n                v\n            },\n        }\n    }\n}\n\n</code></pre>\n\n<p>but when I try to make the input generic:</p>\n\n<pre><code>struct Cacher&lt;T, I, V&gt; \n    where T: Fn(I) -&gt; V\n{\n    calculation: T,\n    value: Option&lt;V&gt;,\n}\n\nimpl &lt;T, I, V&gt; Cacher&lt;T, I, V&gt;\n    where T: Fn(I) -&gt; V\n{\n    fn new(calculation: T) -&gt; Cacher&lt;T, I, V&gt; {\n        Cacher {\n            calculation,\n            value: None,\n        }\n    }\n}\n\nimpl &lt;T&gt; Cacher&lt;T, u32, u32&gt;\n    where T: Fn(u32) -&gt; u32\n{\n    fn value(&amp;mut self, arg: u32) -&gt; u32 {\n        match self.value {\n            Some(v) =&gt; v,\n            None =&gt; {\n                let v = (self.calculation)(arg);\n                self.value = Some(v);\n                v\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>... I get E0392 <code>parameter 'I' is never used</code>.</p>\n\n<p>I can sort of understand that <code>I</code> is not really part of defining the struct <code>Cacher</code> but I haven't figured out the proper way to tell the compiler that \"<code>T</code> is any closure that takes one parameter and returns a <code>V</code>\".\nI've seen some discussions that seem to relate to this, mentioning e.g. <code>PhantomData</code> but I don't quite follow them. Can somebody explain in simple terms? :)</p>\n"}, {"tags": ["data-structures", "rust"], "comments": [{"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 5, "creation_date": 1551770557, "post_id": 54997231, "comment_id": 96750851, "body": "Check out <a href=\"https://github.com/sfackler/rust-phf\" rel=\"nofollow noreferrer\">rust-phf</a> for maps generated at compile time."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1551888954, "post_id": 54997231, "comment_id": 96807832, "body": "This question could benefit from a code sample, showing what you have and how you use it; I have no idea what to make of the &quot;function pointers&quot; comment, it seems unrelated to the issue... which makes me think I didn&#39;t understand the issue to start with."}, {"owner": {"reputation": 630, "user_id": 3750874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a602fad35669d9e179ff7446a56781da?s=128&d=identicon&r=PG&f=1", "display_name": "Algorithmic Canary", "link": "https://stackoverflow.com/users/3750874/algorithmic-canary"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551983615, "post_id": 54997231, "comment_id": 96851152, "body": "@MatthieuM. Code samples added. If you need more clarification, I am happy to add it."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1551985023, "creation_date": 1551985023, "answer_id": 55050967, "question_id": 54997231, "link": "https://stackoverflow.com/questions/54997231/idiomatic-way-to-create-static-iterable-collection-of-named-structs/55050967#55050967", "title": "Idiomatic way to create static iterable collection of named structs?", "body": "<p>Looking at:</p>\n\n<pre><code>fn main() {\n    let mut foos = [Foo::new(4.0, add), Foo::new(2.0, subtract)];\n\n    for foo in &amp;mut foos {\n       common_behaviour(foo.data);\n       foo.data = (foo.special)(foo.data);\n    }\n}\n</code></pre>\n\n<p>I see a <a href=\"https://en.wikipedia.org/wiki/Command_pattern\" rel=\"nofollow noreferrer\">Command Pattern</a> struggling to emerge, and Rust is <em>great</em> at expressing this pattern, thanks to <code>enum</code>:</p>\n\n<pre><code>enum Foo {\n    Add(f64),\n    Sub(f64),\n}\n\nimpl Foo {\n    fn apply(&amp;mut self) {\n        match self {\n            Foo::Add(x) =&gt; {\n                Self::common(*x);\n                *x += 1.0;\n            },\n            Foo::Sub(x) =&gt; {\n                Self::common(*x);\n                *x -= 1.0;\n            },\n        }\n    }\n\n    fn common(x: f64) {\n        print!(\"{}\", x);\n    }\n}\n</code></pre>\n\n<p>And your example becomes:</p>\n\n<pre><code>fn main() {\n    let mut foos = [Foo::Add(4.0), Foo::Sub(2.0)];\n\n    for foo in &amp;mut foos {\n       foo.apply();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 630, "user_id": 3750874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a602fad35669d9e179ff7446a56781da?s=128&d=identicon&r=PG&f=1", "display_name": "Algorithmic Canary", "link": "https://stackoverflow.com/users/3750874/algorithmic-canary"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 55050967, "answer_count": 1, "score": 2, "last_activity_date": 1593120512, "creation_date": 1551769808, "last_edit_date": 1593120512, "question_id": 54997231, "link": "https://stackoverflow.com/questions/54997231/idiomatic-way-to-create-static-iterable-collection-of-named-structs", "title": "Idiomatic way to create static iterable collection of named structs?", "body": "<p>What is the idiomatic way to create static iterable collection of named structs? I have <code>n</code> instances of a struct, where <code>n</code> is known at compile time and is less than 20. I would like to be able to iterate over all the entries and also be able to refer to each entry by a name instead of an index. All the data is known at compile time.</p>\n<p>I could use an array or enum, along with hand written constants which map the labels to indexes; but this seems finicky.</p>\n<pre><code>fn common_behaviour(x: f64) {\n   print!(&quot;{}&quot;, x);\n}\n\nconst ADD: usize = 0;\nconst SUBTRACT: usize = 1;\n\nfn main () {\n    let mut foos: [f64; 2] = [0.0; 2];\n    foos[ADD] = 4.0;\n    foos[SUBTRACT] = 2.0;\n\n    for foo in &amp;foos {\n       common_behaviour(*foo);\n    }\n    foos[ADD] += 1.0;\n    foos[SUBTRACT] -= 1.0;\n}\n\n</code></pre>\n<p>Alternatively, I could just pay the performance cost and use a HashMap as the hashing overhead might not actually matter that much, but this seems suboptimal as well.</p>\n<p>Perhaps, I could refactor my code to use function pointers instead special casing the different special cases.</p>\n<pre><code>fn common_behaviour(x: f64) {\n   print!(&quot;{}&quot;, x);\n}\n\nfn add(x: f64) -&gt; f64 {\n    x + 1.0\n}\n\nfn subtract(x: f64) -&gt; f64 {\n    x - 1.0\n}\n\nstruct Foo {\n   data: f64,\n   special: fn(f64) -&gt; f64\n}\n\nimpl Foo {\n    fn new(data: f64, special: fn(f64) -&gt; f64) -&gt; Foo {\n        Foo { data, special }\n    }\n}\n\nfn main() {\n    let mut foos = [Foo::new(4.0, add), Foo::new(2.0, subtract)];\n\n    for foo in &amp;mut foos {\n       common_behaviour(foo.data);\n       foo.data = (foo.special)(foo.data);\n    }\n}\n</code></pre>\n<p>What is most idiomatic way to handle this situation?</p>\n"}, {"tags": ["reference", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1551764544, "post_id": 54995720, "comment_id": 96748539, "body": "Have you read through <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">The Rust book</a>?  Given your example, it seems like you should make a point of revisiting Rust&#39;s concept of ownership. You&#39;d most likely want your function to at least be <code>fn index2d(&amp;self, x: usize, y: usize) -&gt; &amp;Vec&lt;u8&gt;</code>."}, {"owner": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551765295, "post_id": 54995720, "comment_id": 96748819, "body": "No real issue here, I was just confused. I changed it to be <code>pub fn index2d(self, x: usize, y: usize) -&gt; [u8; 3] { let c = &amp;self.pyxels[y*WIDTH+x]; *c }</code>"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551766572, "post_id": 54995720, "comment_id": 96749248, "body": "I don&#39;t believe that would work with the specific code sample you&#39;ve shown. You&#39;ve also forgotten the <code>&amp;</code> on <code>&amp;self</code> still."}, {"owner": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551768710, "post_id": 54995720, "comment_id": 96750019, "body": "It compiles and runs, though I&#39;m sure it could be improved."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551803166, "post_id": 54995720, "comment_id": 96769747, "body": "You haven&#39;t given enough code to actually attempt compiling something, so it is impossible to say. If your return type is really <code>Vec&lt;u8&gt;</code> though, I don&#39;t think it&#39;s possible for <code>*c</code> to actually work. Please include a full <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> on <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a>."}, {"owner": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551849944, "post_id": 54995720, "comment_id": 96786137, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3cd493e930f979622b925a0e5bc5acc\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>  Here you go, since you asked. As you can see, I&#39;ve opted not to do what I had before."}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "edited": false, "score": 0, "creation_date": 1551765399, "post_id": 54996100, "comment_id": 96748855, "body": "I think I get it. So when I pass something to a function, it literally needs that type, because some things will operate on references, and others will need the owned type. Otherwise crazy bananas stuff starts happening."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551803322, "post_id": 54996100, "comment_id": 96769850, "body": "If a function expects a reference, you&#39;d use the <code>&amp;</code> operator to make a reference version of the value."}], "tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 4, "last_activity_date": 1551764415, "creation_date": 1551764415, "answer_id": 54996100, "question_id": 54995720, "link": "https://stackoverflow.com/questions/54995720/rust-how-can-a-reference-be-a-type/54996100#54996100", "title": "Rust: How can a reference be a type?", "body": "<blockquote>\n  <p>If I make a reference to something, I'm not creating a new type.</p>\n</blockquote>\n\n<p>If by <em>\"creating a new type\"</em>, you mean <em>\"creating an object of a different type\"</em>, then yes, that's exactly what you're doing. A reference to a thing is not that thing. It's similar to the difference between having a house, and having a slip of paper with the address of a house written on it.</p>\n\n<p>Though the syntax of Rust often makes access to an object through a reference look identical to direct access to that object.</p>\n\n<pre><code>let v: Vec&lt;u8&gt; = Vec::new();\nlet vr = &amp;v;\n\nassert_eq!(v.len(), rv.len());\n</code></pre>\n\n<p>So perhaps that is why you are confused?</p>\n"}], "owner": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "accepted_answer_id": 54996100, "answer_count": 1, "score": -4, "last_activity_date": 1551764415, "creation_date": 1551762234, "question_id": 54995720, "link": "https://stackoverflow.com/questions/54995720/rust-how-can-a-reference-be-a-type", "title": "Rust: How can a reference be a type?", "body": "<p>So what I am asking is, what is the difference between the return types, &amp;std::vec::Vec and std::vec::Vec? Just curious. If I make a reference to something, I'm not creating a new type. It still retains its data and structure and so retains its type. But for some reason I get this error:</p>\n\n<pre><code>   error[E0308]: mismatched types\n   --&gt; src/cam.rs:170:3\n    |\n168 |     pub fn index2d(self, x: usize, y: usize) -&gt; Vec&lt;u8&gt; {\n    |                                                 ------- expected `std::vec::Vec&lt;u8&gt;` because of return type\n169 |         let c = &amp;self.pyxels[y*WIDTH+x];\n170 |         c\n    |         ^\n    |         |\n    |         expected struct `std::vec::Vec`, found reference\n    |         help: try using a conversion method: `c.to_vec()`\n    |\n    = note: expected type `std::vec::Vec&lt;u8&gt;`\n               found type `&amp;std::vec::Vec&lt;u8&gt;`\n                           ^ (umm excuse me?)\n</code></pre>\n\n<p>That one little symbol (&amp;) really seems to make all the difference and I have no clue why.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1551771091, "post_id": 54994236, "comment_id": 96751092, "body": "Given your constraints, and without more details, I can only think of two options. Option one is to store Values directly in the cache and only give out references (maybe involving some cell type, etc.). This won&#39;t be suitable if you&#39;re sure you need to return Value directly. The other option is to store a hash of all seen Values, and simply hope that you don&#39;t get any collisions. If you need the value calculations to be absolutely correct, this isn&#39;t ideal."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551889101, "post_id": 54994236, "comment_id": 96807923, "body": "How many values do you intend to store? A linear search through the vector is going to be expensive, it seems to me you should have some kind of <code>Set</code> or <code>Map</code>."}], "answers": [{"tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": false, "score": 3, "last_activity_date": 1551775084, "last_edit_date": 1551775084, "creation_date": 1551774754, "answer_id": 54998441, "question_id": 54994236, "link": "https://stackoverflow.com/questions/54994236/caching-memoization-vs-object-lifetime/54998441#54998441", "title": "Caching/memoization vs object lifetime", "body": "<p>If you need to keep the same value at different points in the program it's easiest to copy or clone it.</p>\n\n<p>However, if cloning is not an option because it is too expensive wrap the values in an <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a>. That is a reference counted smart pointer which allows shared ownership of its content. It is relatively cheap to clone without duplicating the contained value.</p>\n\n<p>Note that simply storing <code>Rc&lt;Value&gt;</code> in <code>seen_values</code> will keep all values alive at least as long as the value builder lives. You can avoid that by storing <a href=\"https://doc.rust-lang.org/std/rc/struct.Weak.html\" rel=\"nofollow noreferrer\"><code>Weak</code></a> references.</p>\n\n<pre><code>use std::rc::{Rc, Weak};\n\n#[derive(PartialEq)]\nstruct Value {}\n\nstruct ValueBuilder {\n    seen_values: Vec&lt;Weak&lt;Value&gt;&gt;,\n}\n\nimpl ValueBuilder {\n    pub fn do_things_with_value(&amp;mut self, v: &amp;Rc&lt;Value&gt;) {\n        if self\n            .seen_values\n            .iter()\n            .any(|x| x.upgrade().as_ref() == Some(v))\n        {\n            return;\n        }\n        self.seen_values.push(Rc::downgrade(v))\n        // expensive computations\n    }\n\n    pub fn make_value(&amp;self) -&gt; Rc&lt;Value&gt; {\n        Rc::new(Value {})\n    }\n\n    pub fn f(&amp;mut self) -&gt; Rc&lt;Value&gt; {\n        let v = self.make_value();\n        self.do_things_with_value(&amp;v);\n        v\n    }\n\n    pub fn g(&amp;mut self) -&gt; Rc&lt;Value&gt; {\n        let v = self.f();\n        self.do_things_with_value(&amp;v);\n        v\n    }\n}\n</code></pre>\n\n<p>While a <code>Rc&lt;Value&gt;</code> is in use by the chain of functions <code>do_things()</code> will remember the value and skip computations. If a value becomes unused (all references dropped) and is later created again, <code>do_things()</code> will repeat the computations.</p>\n"}], "owner": {"reputation": 41, "user_id": 11115852, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d8f8ee36bbbea34df64b97d0c76fd6b?s=128&d=identicon&r=PG&f=1", "display_name": "mmw22", "link": "https://stackoverflow.com/users/11115852/mmw22"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1551775084, "creation_date": 1551750296, "question_id": 54994236, "link": "https://stackoverflow.com/questions/54994236/caching-memoization-vs-object-lifetime", "title": "Caching/memoization vs object lifetime", "body": "<p>My program is structured as a series of function calls building up the resulting value - each function returns (moves) the returned value to it's caller. This is a simplified version:</p>\n\n<pre><code>struct Value {}\n\nstruct ValueBuilder {}\n\nimpl ValueBuilder {\n\n    pub fn do_things_with_value(&amp;mut self, v : &amp;Value) {\n        // expensive computations\n    }\n\n    pub fn make_value(&amp;self) -&gt; Value {\n        Value {}\n    }\n\n    pub fn f(&amp;mut self) -&gt; Value {\n        let v = self.make_value();\n        self.do_things_with_value(&amp;v);\n        v\n    }\n\n    pub fn g(&amp;mut self) -&gt; Value {\n        let v = self.f();\n        self.do_things_with_value(&amp;v);\n        v\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1cd128fbeb4a691424de9feda87f22a8\" rel=\"nofollow noreferrer\">play.rust-lang version</a></p>\n\n<p>Imagine that there are many more functions similar to f and g, both between them and above. You can see that <code>do_things_with_value</code> is called twice with the same value. I would like to cache/memoize this call so that in the example below \"expensive computations\" are performed only once. This is my (obviously incorrect) attempt:</p>\n\n<pre><code>#[derive(PartialEq)]\nstruct Value {}\n\nstruct ValueBuilder&lt;'a&gt; {\n    seen_values: Vec&lt;&amp;'a Value&gt;,\n}\n\nimpl&lt;'a&gt; ValueBuilder&lt;'a&gt; {\n    pub fn do_things_with_value(&amp;mut self, v: &amp;'a Value) {\n        if self.seen_values.iter().any(|x| **x == *v) {\n            return;\n        }\n        self.seen_values.push(v)\n        // expensive computations\n    }\n\n    pub fn make_value(&amp;self) -&gt; Value {\n        Value {}\n    }\n\n    pub fn f(&amp;mut self) -&gt; Value {\n        let v = self.make_value();\n        self.do_things_with_value(&amp;v); // error: `v` does not live long enough\n        v\n    }\n\n    pub fn g(&amp;mut self) -&gt; Value {\n        let v = self.f();\n        self.do_things_with_value(&amp;v);\n        v\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=682497802f301806a3a78f7e038c3c9d\" rel=\"nofollow noreferrer\">play.rust-lang version</a></p>\n\n<p>I understand why the compiler is doing it - while in this case it happens that v is not dropped between two calls to <code>do_things_with_value</code>, there is no guarantee that it will not be dropped, and dereferencing it would crash the program. </p>\n\n<p>What is a better way to structure this program? Let's assume that:</p>\n\n<ul>\n<li>cloning and storing <code>Values</code> is expensive, and we can't afford <code>seen_values</code> keeping a copy of everything we've ever seen </li>\n<li>we also can't refactor the code / <code>Value</code> object to carry additional data (i.e. a bool indicating whether we did expensive computations with this value). It needs to rely on comparing the values using <code>PartialEq</code></li>\n</ul>\n"}, {"tags": ["rust", "spawn", "borrow-checker", "receiver"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551743645, "post_id": 54993331, "comment_id": 96743853, "body": "In the first case, if you call <code>foo(None)</code>, it starts a thread, enters the loop, fails the test, breaks the loop, stops the thread. Why even start a thread then? Are you sure you don&#39;t want <code>Receiver&lt;Option&lt;usize&gt;&gt;</code>? This would seem to make more sense."}, {"owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551743922, "post_id": 54993331, "comment_id": 96743918, "body": "@mcarton I posted a trimmed down thread. The <code>&#47;&#47;Does work</code> comment represents a significant amount of work that isn&#39;t shown. If a new <code>usize</code> is passed in the thread will adjust some parameters and redo the work."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1551748788, "post_id": 54993498, "comment_id": 96744955, "body": "or just <code>&amp;rx</code>, don&#39;t we have duplicate for this ?"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1551744348, "creation_date": 1551744348, "answer_id": 54993498, "question_id": 54993331, "link": "https://stackoverflow.com/questions/54993331/optionreceiver-moved-in-previous-loop-iteration/54993498#54993498", "title": "Option&lt;Receiver&gt; Moved in Previous Loop Iteration", "body": "<p>When you write <code>if let Some(r) = rx</code>, you consume <code>rx</code>, making it unavailable for later.</p>\n\n<p>You can use <code>as_ref()</code> to get a reference to the inner object instead, leaving <code>rx</code> usable:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo(rx: Option&lt;Receiver&lt;usize&gt;&gt;) {\n    thread::spawn(move || {\n        loop {\n            do_some_work();\n            if let Some(r) = rx.as_ref() {\n                match r.recv() {\n                    Ok(x) =&gt; {}\n                    Err(_) =&gt; panic!(\"Oh no!\"),\n                }\n            } else {\n                break; //Die\n            }\n        }\n    });\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8003544aff36cdec00953aaadb70f3f2\" rel=\"noreferrer\">link to playground</a>)</p>\n"}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 871, "favorite_count": 0, "accepted_answer_id": 54993498, "answer_count": 1, "score": 2, "last_activity_date": 1551744481, "creation_date": 1551743179, "last_edit_date": 1551744481, "question_id": 54993331, "link": "https://stackoverflow.com/questions/54993331/optionreceiver-moved-in-previous-loop-iteration", "title": "Option&lt;Receiver&gt; Moved in Previous Loop Iteration", "body": "<p>I'm spawning a thread that does some work. Sometimes I want this thread to die after the work is finished, other times I want it to wait for more work to do. To do this I pass in an <code>Option&lt;Receiver&lt;T&gt;&gt;</code>. If <code>Option&lt;Receiver&lt;T&gt;&gt;</code> is <code>None</code> the thread should die, else it should wait to receive more work.</p>\n\n<pre><code>fn foo(rx: Option&lt;Receiver&lt;usize&gt;&gt;) {\n    thread::spawn(move || {\n        loop {\n            do_some_work();\n            if let Some(r) = rx {\n                match r.recv() {\n                    Ok(x)  =&gt; {}\n                    Err(_) =&gt; panic!(\"Oh no!\"),\n                }\n            } else {\n                break; //Die\n            }\n        }\n    });\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=daf93b80174e754b2202ef7c02ef993a\" rel=\"nofollow noreferrer\">link to playground</a>)</p>\n\n<p>The compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value\n  --&gt; src/lib.rs:10:25\n   |\n10 |             if let Some(r) = rx {\n   |                         ^ value moved here, in previous iteration of loop\n   |\n   = note: move occurs because value has type `std::sync::mpsc::Receiver&lt;usize&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>However if the <code>Receiver</code> is not enclosed in an <code>Option</code> everything is fine.</p>\n\n<pre><code>fn foo(rx: Receiver&lt;usize&gt;) {\n    thread::spawn(move || {\n        loop {\n            do_some_work();\n            match rx.recv() {\n                Ok(x)  =&gt; {}\n                Err(_) =&gt; panic!(\"Oh no!\"),\n            }\n        }\n    });\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 5, "creation_date": 1551737872, "post_id": 54992166, "comment_id": 96742191, "body": "There are likely multiple ways to achieve your goal. It might be worth narrowing the problem down to a specific concern. Have you considered <a href=\"https://doc.rust-lang.org/std/process/index.html\" rel=\"nofollow noreferrer\">spawning processes</a>?"}, {"owner": {"reputation": 29, "user_id": 11150690, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PFaJmpIiMa4/AAAAAAAAAAI/AAAAAAAACr4/-TF7rR-_DxI/photo.jpg?sz=128", "display_name": "Bernard Wong", "link": "https://stackoverflow.com/users/11150690/bernard-wong"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552229867, "post_id": 54992166, "comment_id": 96922641, "body": "@E_net4 Sorry but let me elaborate more. Consider a node in a blockchain, it listens for incoming connection while connecting other node&#39;s listener. I&#39;ve now changed both TCP listener and connector stream into  a lib and what you&#39;ve suggests is spawning processes, but I was told it is unrecommended because you can&#39;t share variables among processes so I want to try 2 threads ( one for listening connection, another for connecting another node&#39;s listener ) but I can&#39;t manage to do that."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552230125, "post_id": 54992166, "comment_id": 96922721, "body": "Please <a href=\"https://stackoverflow.com/posts/54992166/edit\">edit</a> your question to contain all those details, including those attempts at solving the problems."}], "owner": {"reputation": 29, "user_id": 11150690, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PFaJmpIiMa4/AAAAAAAAAAI/AAAAAAAACr4/-TF7rR-_DxI/photo.jpg?sz=128", "display_name": "Bernard Wong", "link": "https://stackoverflow.com/users/11150690/bernard-wong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 98, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1551803286, "creation_date": 1551736596, "last_edit_date": 1551803286, "question_id": 54992166, "link": "https://stackoverflow.com/questions/54992166/in-rust-cargo-can-i-run-two-main-in-a-single-execution", "title": "In Rust cargo, can I run two main in a single execution?", "body": "<p>I am new to Rust and I only know basics of it so bear with me. I am currently working on a school project and I have a cargo project \"server\" for listening TCP and another cargo project \"client\" for connecting to the \"server\". Both of them only have a \"main.rs\" in their src folder. I want to have a cargo project representing a node which itself is a server listening for connections and also a client which connects to another node's server creating a decentralized network. Should I make the \"server\" and \"client\" a module or a library to extern instead?</p>\n"}, {"tags": ["rust", "rust-warp"], "answers": [{"tags": [], "owner": {"reputation": 151, "user_id": 9475736, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a40bb61cfdd2205f8e1c0a339d08167a?s=128&d=identicon&r=PG", "display_name": "moondaddi", "link": "https://stackoverflow.com/users/9475736/moondaddi"}, "is_accepted": false, "score": 5, "last_activity_date": 1557469520, "last_edit_date": 1557469520, "creation_date": 1551751449, "answer_id": 54994388, "question_id": 54988438, "link": "https://stackoverflow.com/questions/54988438/how-to-check-the-authorization-header-using-warp/54994388#54994388", "title": "How to check the authorization header using Warp?", "body": "<p>I've found the <a href=\"https://github.com/seanmonstar/warp/issues/177#issuecomment-469497434\" rel=\"nofollow noreferrer\">solution</a> in github issues of Warp.</p>\n\n<p>here is a small snippet.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let context_extractor = warp::any().and(\n    warp::header::&lt;String&gt;(\"authorization\")\n        .map(|token: String| -&gt; Context {\n            let token_data = match verify_jwt(token) {\n                Ok(t) =&gt; t,\n                Err(_) =&gt; return Context { user_id: 0 },\n            };\n\n            Context {\n                user_id: token_data.claims.user_id,\n            }\n        })\n        .or(warp::any().map(|| Context { user_id: 0 }))\n        .unify(),\n);\n</code></pre>\n"}], "owner": {"reputation": 151, "user_id": 9475736, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a40bb61cfdd2205f8e1c0a339d08167a?s=128&d=identicon&r=PG", "display_name": "moondaddi", "link": "https://stackoverflow.com/users/9475736/moondaddi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1755, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1557501422, "creation_date": 1551720207, "last_edit_date": 1557501422, "question_id": 54988438, "link": "https://stackoverflow.com/questions/54988438/how-to-check-the-authorization-header-using-warp", "title": "How to check the authorization header using Warp?", "body": "<p>I'm building a graphql api with Rust and Warp. I've looked through the docs, but I have still not figured out how to chain the filters, especially for checking the <code>authorization</code> in request header.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let context_extractor = warp::any()\n    // this code rejects all request which doesn't contain the authorization in header\n    // I'd like to make to check if authorization in header\n    .and(warp::header::&lt;String&gt;(\"authorization\"))\n    .map(|token: String| -&gt; Context {\n        let token_data = match verify_jwt(token) {\n            Ok(t) =&gt; t,\n            Err(_) =&gt; return Context { user_id: 0 },\n        };\n\n        Context {\n            user_id: token_data.claims.user_id,\n        }\n    });\n\nlet handle_request = move |context: Context,\n                           request: juniper::http::GraphQLRequest|\n      -&gt; Result&lt;Vec&lt;u8&gt;, serde_json::Error&gt; {\n    serde_json::to_vec(&amp;request.execute(&amp;schema, &amp;context))\n};\n\nwarp::post2()\n    .and(warp::path(path.into()))\n    .and(context_extractor)\n    .and(warp::body::json())\n    .map(handle_request)\n    .map(build_response)\n    .boxed()\n</code></pre>\n\n<p>This is my part of code. It works fine, but there is one problem. I've set up one route <code>context_extractor</code> with <code>.and(warp::header::&lt;String&gt;(\"authorization\")</code>, then it rejects all requests which doesn't contain <code>authorization</code> in header.</p>\n\n<p>How can I make </p>\n\n<ol>\n<li><p>if request header has a <code>authorization</code> in header, then return <code>Context</code> with the proper <code>user_id</code></p></li>\n<li><p>if not, return <code>Context</code> with <code>user_id: 0</code>?</p></li>\n</ol>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1551709476, "post_id": 54984969, "comment_id": 96728153, "body": "In <code>items: Vec&lt;&amp;&#39;a Item&gt;</code>, you are not specifying the lifetime parameter <code>&#39;a</code> in <code>Item</code>. The compiler won&#39;t be making any assumptions here, so you still need to specify it. Relevant questions: <a href=\"https://stackoverflow.com/q/31609137/1233251\">stackoverflow.com/q/31609137/1233251</a> and <a href=\"https://stackoverflow.com/q/43712228/1233251\">stackoverflow.com/q/43712228/1233251</a>"}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 11148652, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72121033a2d3d4ad27af60a2dc0356db?s=128&d=identicon&r=PG&f=1", "display_name": "Gilles", "link": "https://stackoverflow.com/users/11148652/gilles"}, "edited": false, "score": 0, "creation_date": 1551771860, "post_id": 54985773, "comment_id": 96751437, "body": "Thanks, that&#39;s helping a lot !  It&#39;s also highlighting that holdings refs in &quot;container&quot; struct is a bad idea, I should organize my code to own the things in my structs directly, not refs.  So, in my example, I should reverse the logic that &quot;Item&quot; contains a ref to &quot;Owner&quot;, instead I should make my struct &quot;Owner&quot; like this :  <code>pub struct Owner {     pub name: String,     pub items: Vec&lt;Item&gt;, }</code>  And avoid all the lifetimes complexity."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1551711321, "creation_date": 1551711321, "answer_id": 54985773, "question_id": 54984969, "link": "https://stackoverflow.com/questions/54984969/rust-lifetime-in-vect-convoluted-syntax/54985773#54985773", "title": "Rust lifetime in Vec&lt;&amp;T&gt; : convoluted syntax", "body": "<p>There are two lifetimes that you need to specify:</p>\n\n<ul>\n<li>Your vector contains reference to items.</li>\n<li>Each item contains a reference to its owner.</li>\n</ul>\n\n<p>You need to specify how long each type of reference lives. If you write <code>Vec&lt;&amp;'a Item&lt;'b&gt;&gt;</code>, the first lifetime (<code>'a</code>) specifies how long references to items live, and the second lifetime (<code>'b</code>) specifies how long the references to owners live.</p>\n\n<p>When you write <code>Vec&lt;Item&lt;'a&gt;&gt;</code>, the compiler doesn't know how long the items live.</p>\n\n<p>When you write <code>Vec&lt;&amp;a Item&gt;</code>, the compiler doesn't know how long the owners live.</p>\n\n<p>When you use the same lifetime for both spots (<code>Vec&lt;&amp;'a Item&lt;'a&gt;&gt;</code>), you are telling the compiler that both lifetimes are the same, which means that items must live exactly as long as their owners. This may be overly restrictive, depending on your use case it might be better to tell the compiler that items may not live longer than their owners:</p>\n\n<pre><code>pub struct Shelf&lt;'a, 'b: 'a&gt; {\n    items: Vec&lt;&amp;'b Item&lt;'a&gt;&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 11148652, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72121033a2d3d4ad27af60a2dc0356db?s=128&d=identicon&r=PG&f=1", "display_name": "Gilles", "link": "https://stackoverflow.com/users/11148652/gilles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 760, "favorite_count": 0, "accepted_answer_id": 54985773, "answer_count": 1, "score": 1, "last_activity_date": 1551736134, "creation_date": 1551708615, "last_edit_date": 1551736134, "question_id": 54984969, "link": "https://stackoverflow.com/questions/54984969/rust-lifetime-in-vect-convoluted-syntax", "title": "Rust lifetime in Vec&lt;&amp;T&gt; : convoluted syntax", "body": "<p>I'm learning Rust with the official book. I've come across a weird syntax in my program:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Shelf&lt;'a&gt; {\n    items: Vec&lt;&amp;'a Item&lt;'a&gt;&gt;, // =&gt; working as expected\n    //items: Vec&lt;Item&lt;'a&gt;&gt;, // =&gt; not working\n    //items: Vec&lt;&amp;'a Item&gt;, // =&gt; not working\n}\n</code></pre>\n\n<p>Item is a struct that contains references to other types too:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Item&lt;'a&gt; {\n    owner: &amp;'a Owner,\n    name: String,\n    avg_rating: u32,\n    status: ItemStatus,\n}\n\npub struct Owner {\n    pub name: String,\n}\n</code></pre>\n\n<p>It seems to me that the syntax <code>items: Vec&lt;&amp;'a Item&lt;'a&gt;&gt;</code> is weird and I don't think I'm doing right... What I want is a <code>Vec</code> that contains references to <code>Item</code>s, and that <code>Vec</code> is valid as long as the references to <code>Item</code>s it contains are themselves valid. Shouldn't it be <code>items: Vec&lt;&amp;'a Item&gt;</code> instead?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 567, "user_id": 1841522, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/6ff57a3d6d4a75506502049fbe63c11c?s=128&d=identicon&r=PG", "display_name": "Kevin Martin Jose", "link": "https://stackoverflow.com/users/1841522/kevin-martin-jose"}, "edited": false, "score": 0, "creation_date": 1551716989, "post_id": 54983474, "comment_id": 96732750, "body": "Thanks for the detailed answer. However, what does <code>&amp;&amp;0</code> <i>mean</i> ? For eg, <code>&amp;0</code> points to the address in memory of an integer literal (I think). Which means that no 2 literals should have the same address. However, <code>assert_eq!(&amp;0, &amp;0);</code> works. But why? Due to auto-dereferencing assert_eq ends up comparing the values instead of the address?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 567, "user_id": 1841522, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/6ff57a3d6d4a75506502049fbe63c11c?s=128&d=identicon&r=PG", "display_name": "Kevin Martin Jose", "link": "https://stackoverflow.com/users/1841522/kevin-martin-jose"}, "edited": false, "score": 0, "creation_date": 1551718075, "post_id": 54983474, "comment_id": 96733366, "body": "@KevinMartinJose: The compiler is allowed, at its discretion, to merge equivalent literals together. Therefore, whether the address of <code>0</code> matches the address of <code>0</code> is not something you can rely on. Actually, you could even have the address of <code>&quot;Hello&quot;</code> matching the address of <code>&quot;Hello, World&quot;</code> as one is the prefix of the other. As for <code>&amp;&amp;0</code>, formally it&#39;s a reference to a reference which would be implemented as a pointer to a local variable containing the pointer to the literal 0."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 567, "user_id": 1841522, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/6ff57a3d6d4a75506502049fbe63c11c?s=128&d=identicon&r=PG", "display_name": "Kevin Martin Jose", "link": "https://stackoverflow.com/users/1841522/kevin-martin-jose"}, "edited": false, "score": 2, "creation_date": 1551718450, "post_id": 54983474, "comment_id": 96733585, "body": "@KevinMartinJose: <code>assert_eq!(&amp;0, &amp;0)</code> is different, though. Look at the documentation for <code>Eq</code> and <code>PartialEq</code>, and you&#39;ll notice an implementation of <code>impl Eq for &amp;A where A: Eq</code>, which peels away the layers of references as long as there is the same number on each side. To compare raw pointers, you need to ask for raw pointers: <code>assert_eq!(&amp;0 as *const _, &amp;0 as *const _);</code>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1551703152, "creation_date": 1551703152, "answer_id": 54983474, "question_id": 54982977, "link": "https://stackoverflow.com/questions/54982977/why-do-i-need-a-double-ampersand-when-getting-values-from-a-hashmap/54983474#54983474", "title": "Why do I need a double ampersand when getting values from a HashMap?", "body": "<p>If you look at the signature of <code>insert</code> and <code>get</code> you will realize that they handle things differently.</p>\n\n<p>Starting from a <code>HashMap&lt;K, V&gt;</code>:</p>\n\n<ul>\n<li><code>fn insert(&amp;mut self, k: K, v: V) -&gt; Option&lt;V&gt;</code>.</li>\n<li><code>fn get(&amp;self, k: &amp;K) -&gt; Option&lt;&amp;V&gt;</code> (simplified).</li>\n</ul>\n\n<p>As you can see, <code>insert</code> takes <strong>ownership</strong>, handling <strong>values</strong>, while <code>get</code> takes and returns a <strong>reference</strong>.</p>\n\n<p>Therefore, if you <code>insert</code> <code>&amp;1</code>, you <code>get</code> <code>Some(&amp;&amp;1)</code> back: one more layer of reference.</p>\n\n<hr>\n\n<p>The question, then, is why is there no error from <code>.get(&amp;0)</code>: isn't it lacking a level of reference?</p>\n\n<p>Well, I cheated and simplified the signature of get, <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"noreferrer\">the exact signature</a> is:</p>\n\n<pre><code>pub fn get&lt;Q: ?Sized&gt;(&amp;self, k: &amp;Q) -&gt; Option&lt;&amp;V&gt; where\n    K: Borrow&lt;Q&gt;,\n    Q: Hash + Eq, \n</code></pre>\n\n<p>And it turns out that <code>&amp;T</code> implements <code>Borrow&lt;T&gt;</code>, so you can call get with <code>&amp;K</code> for <code>&amp;&amp;K</code>.</p>\n\n<hr>\n\n<p>If you manage to get the compiler to give you the type of the <code>HashMap</code>, it's a bit easier:</p>\n\n<pre><code>assert_eq!(map, ());\n</code></pre>\n\n<p>Results in:</p>\n\n<pre><code>error[E0308]: mismatched types\n --&gt; src/main.rs:9:5\n  |\n9 |     assert_eq!(map, ());\n  |     ^^^^^^^^^^^^^^^^^^^^ expected struct `std::collections::HashMap`, found ()\n  |\n  = note: expected type `std::collections::HashMap&lt;&amp;{integer}, &amp;{integer}&gt;`\n             found type `()`\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>Which shows you what type the compiler figured out for <code>K</code> and <code>V</code>, and indeed it will be <code>&amp;{integer}</code>, since you pass <code>&amp;0</code> to <code>insert</code> which takes key and value by value.</p>\n\n<hr>\n\n<p>As for the issue of lifetimes:</p>\n\n<ol>\n<li>Not all checks are done in a single pass. In particular, borrowing/lifetime checks are generally done <em>after</em> type checking.</li>\n<li>Literals have the <code>'static</code> lifetime, just  like <code>\"Hello\"</code> has the <code>&amp;'static str</code> type.</li>\n</ol>\n\n<p>The compiler automatically reserves memory somewhere in the program for literals, and will \"borrow\" them as necessary. This means that creating a reference to a literal integer is perfectly fine: <code>&amp;0i32</code> has type <code>&amp;'static i32</code>.</p>\n"}], "owner": {"reputation": 567, "user_id": 1841522, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/6ff57a3d6d4a75506502049fbe63c11c?s=128&d=identicon&r=PG", "display_name": "Kevin Martin Jose", "link": "https://stackoverflow.com/users/1841522/kevin-martin-jose"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 668, "favorite_count": 0, "accepted_answer_id": 54983474, "answer_count": 1, "score": 3, "last_activity_date": 1593118212, "creation_date": 1551701412, "last_edit_date": 1593118212, "question_id": 54982977, "link": "https://stackoverflow.com/questions/54982977/why-do-i-need-a-double-ampersand-when-getting-values-from-a-hashmap", "title": "Why do I need a double ampersand when getting values from a HashMap?", "body": "<p>I'm having some trouble with references in rust. I have the following code that does not compile:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map = HashMap::new();\n\n    map.insert(&amp;0, &amp;0);\n    map.insert(&amp;1, &amp;1);\n\n    assert_eq!(map.get(&amp;0), Some(&amp;0));\n}\n</code></pre>\n\n<p>The compilation error I get is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; rust_doubt.rs:9:5\n  |\n9 |     assert_eq!(map.get(&amp;0), Some(&amp;0));\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected &amp;{integer}, found integral variable\n  |\n  = note: expected type `std::option::Option&lt;&amp;&amp;{integer}&gt;`\n             found type `std::option::Option&lt;&amp;{integer}&gt;`\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Sure enough, if I change the line:</p>\n\n<p><code>assert_eq!(map.get(&amp;0), Some(&amp;0));</code> to <code>assert_eq!(map.get(&amp;0), Some(&amp;&amp;0));</code> (double ampersand) the code compiles</p>\n\n<h3>Questions:</h3>\n\n<ol>\n<li><code>map.insert(&amp;0, &amp;0)</code> inserts pointers to two integer literals into the map. I'm not sure how this is even possible since I have not used a variable anywhere. How can I have a reference to a literal? I was expecting the compiler to make me do this: </li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a = 0;\nlet b = 0\nmap.insert(&amp;a, &amp;b);\n</code></pre>\n\n<p>In other words, what does <code>&amp;0</code> even mean? Does it allocate memory for the literal and return a reference to it? If so, then am I correct in assuming that no two <code>&amp;0</code>s would point to the same memory?</p>\n\n<ol start=\"2\">\n<li>Why do I have to do <code>Some(&amp;&amp;0)</code> instead of just <code>Some(&amp;0)</code>? What does <code>&amp;&amp;0</code> even mean? I understand that <code>**ptr</code> means dereferencing a variable twice to get the underlying value. But I can't quite imagine the reverse - how can you \"refer\" an integer literal twice?</li>\n</ol>\n"}, {"tags": ["rust", "rust-actix", "rust-diesel"], "comments": [{"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 4, "creation_date": 1551680097, "post_id": 54975936, "comment_id": 96713672, "body": "<code>T:Trait</code>  does not give you <code>Option&lt;T&gt;:Trait</code> automatically."}, {"owner": {"reputation": 563, "user_id": 3366443, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/68857b02d2a34389d07fba497e41e7ba?s=128&d=identicon&r=PG&f=1", "display_name": "rykeeboy", "link": "https://stackoverflow.com/users/3366443/rykeeboy"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 1, "creation_date": 1551705751, "post_id": 54975936, "comment_id": 96726038, "body": "This was just a dumb mistake on my part. I forgot to wrap the returned value in Some in the case where len == 1, so user_res was having its type coerced to Vec&lt;Option&lt;User&gt;&gt; instead of Vec&lt;User&gt;"}], "owner": {"reputation": 563, "user_id": 3366443, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/68857b02d2a34389d07fba497e41e7ba?s=128&d=identicon&r=PG&f=1", "display_name": "rykeeboy", "link": "https://stackoverflow.com/users/3366443/rykeeboy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 297, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1551667222, "creation_date": 1551667222, "question_id": 54975936, "link": "https://stackoverflow.com/questions/54975936/trouble-understanding-e0277", "title": "Trouble understanding E0277", "body": "<p>I am having trouble understanding why I am running into error E0277. \nI have the following code:</p>\n\n<pre><code>#[derive(Queryable, Identifiable, Serialize, Deserialize)]\npub struct User {\n    pub id: i32,\n    pub email: String,\n    pub password: String,\n    pub first_name: String,\n    pub last_name: String,\n}\n\n\nstruct UserForEmail {\n    email: String,\n}\n\nimpl Message for UserForEmail {\n    type Result = Result&lt;Option&lt;User&gt;, Error&gt;;\n}\n\nimpl Handler&lt;UserForEmail&gt; for DbExecutor {\n    type Result = Result&lt;Option&lt;User&gt;, Error&gt;;\n\n    fn handle(&amp;mut self, msg: UserForEmail, _ctx: &amp;mut Self::Context) -&gt; Self::Result {\n        let conn = self.connection_pool.get()?;\n\n        let user_res = users.filter(email.eq(&amp;msg.email)).load(&amp;conn)?;\n\n        match user_res.len() {\n            0 =&gt; Ok(None),\n            1 =&gt; Ok(user_res[0]),\n            _ =&gt; Err(format_err!(\"Found more than one user for email\")), // TODO make this an actual error\n        }\n    }\n}\n</code></pre>\n\n<p>and when I try to compile I get the following error:</p>\n\n<pre><code>error[E0277]: the trait bound `std::option::Option&lt;domain::user::User&gt;: diesel::Queryable&lt;(diesel::sql_types::Integer, diesel::sql_types::Text, diesel::sql_types::Text, diesel::sql_types::Text, diesel::sql_types::Text), diesel::pg::Pg&gt;` is not satisfied\n  --&gt; src/domain/user.rs:60:59\n   |\n60 |         let user_res = users.filter(email.eq(&amp;msg.email)).load(&amp;conn)?;\n   |                                                           ^^^^ the trait `diesel::Queryable&lt;(diesel::sql_types::Integer, diesel::sql_types::Text, diesel::sql_types::Text, diesel::sql_types::Text, diesel::sql_types::Text), diesel::pg::Pg&gt;` is not implemented for `std::option::Option&lt;domain::user::User&gt;`\n   |\n   = help: the following implementations were found:\n             &lt;std::option::Option&lt;T&gt; as diesel::Queryable&lt;diesel::sql_types::Nullable&lt;ST&gt;, DB&gt;&gt;\n   = note: required because of the requirements on the impl of `diesel::query_dsl::LoadQuery&lt;diesel::r2d2::PooledConnection&lt;diesel::r2d2::ConnectionManager&lt;diesel::PgConnection&gt;&gt;, std::option::Option&lt;domain::user::User&gt;&gt;` for `diesel::query_builder::SelectStatement&lt;schema::users::table, diesel::query_builder::select_clause::DefaultSelectClause, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause&lt;diesel::expression::operators::Eq&lt;schema::users::columns::email, diesel::expression::bound::Bound&lt;diesel::sql_types::Text, &amp;std::string::String&gt;&gt;&gt;&gt;`\n</code></pre>\n\n<p>I don't understand why <code>diesel::Queryable</code> needs to be implemented for <code>Option&lt;User&gt;</code> in this case. If I switch the Result type of the message to be <code>Result&lt;User, Error&gt;</code> then the problem goes away</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "edited": false, "score": 0, "creation_date": 1557966103, "post_id": 54974605, "comment_id": 98946945, "body": "I&#39;m unwilling to post this as an answer, because I can&#39;t test it - but does <code>[target.&#39;cfg(all())&#39;.libfoo]</code> work? <code>all()</code> is truthy when the bracket contents are empty."}], "owner": {"reputation": 21653, "user_id": 100335, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/e470fa78a9b8022d24b2780c5ffc33fe?s=128&d=identicon&r=PG", "display_name": "kpozin", "link": "https://stackoverflow.com/users/100335/kpozin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1551653503, "creation_date": 1551653503, "question_id": 54974605, "link": "https://stackoverflow.com/questions/54974605/compactly-override-a-build-script-for-all-targets", "title": "Compactly override a build script for all targets", "body": "<p>Expanding on an <a href=\"https://stackoverflow.com/a/54801479/\">earlier question</a> about <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#overriding-build-scripts\" rel=\"nofollow noreferrer\">overriding build scripts with custom libraries</a>...</p>\n\n<p>I have multiple build targets, and might have more in the future:</p>\n\n<p><code>.cargo/config</code>:</p>\n\n<pre><code>[target.x86_64-unknown-linux-gnu.libfoo]\nrustc-link-lib = [\"libfoo\"]\n\n[target.x86_64-apple-darwin.libfoo]\nrustc-link-lib = [\"libfoo\"]\n\n# ...\n</code></pre>\n\n<p>Say I am overriding the library \"libfoo\" with the same prebuilt library for all targets. How would I avoid having to list out <code>[target.&lt;machine-vendor-os&gt;.libfoo]</code> tables for all current and future targets? Is there a <code>cfg(...)</code> expression that would achieve this?</p>\n"}, {"tags": ["linked-list", "rust", "binary-tree", "type-punning"], "comments": [{"owner": {"reputation": 2858, "user_id": 4070218, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/VNOHi.gif?s=128&g=1", "display_name": "jonny", "link": "https://stackoverflow.com/users/4070218/jonny"}, "edited": false, "score": 0, "creation_date": 1551660167, "post_id": 54973814, "comment_id": 96709593, "body": "Sounds like a job for <a href=\"https://doc.rust-lang.org/std/mem/fn.transmute.html\" rel=\"nofollow noreferrer\"><code>mem::transmute</code></a>, which is however, as you suspected, wildly unsafe."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1551662418, "post_id": 54973814, "comment_id": 96709947, "body": "I&#39;m not exactly familiar with this pattern, could you please expand what you&#39;re trying to achieve with this? <a href=\"https://doc.rust-lang.org/std/mem/fn.transmute.html\" rel=\"nofollow noreferrer\"><code>std::mem::transmute</code></a> will do what you&#39;re attempting to achieve, but it is unsafe, so perhaps providing an explanation of what you&#39;re trying to do will potentially reveal a better way of achieving it."}, {"owner": {"reputation": 61, "user_id": 10458563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/beffb70905dcc44a5e9305b9879c97b4?s=128&d=identicon&r=PG&f=1", "display_name": "Benji Z.", "link": "https://stackoverflow.com/users/10458563/benji-z"}, "edited": false, "score": 0, "creation_date": 1551883459, "post_id": 54973814, "comment_id": 96804308, "body": "I am trying to convert a binary tree into a linked list in place, which means without consuming extra memory to build up the linked list."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 7, "last_activity_date": 1551705052, "creation_date": 1551705052, "answer_id": 54984012, "question_id": 54973814, "link": "https://stackoverflow.com/questions/54973814/is-it-possible-to-associate-memory-from-one-struct-with-another-in-rust/54984012#54984012", "title": "Is it possible to associate memory from one struct with another in Rust?", "body": "<blockquote>\n  <p>But How can I do such a thing in Rust? Is it even possible without using unsafe code? Till now I have my tree</p>\n</blockquote>\n\n<p>To do the same thing <em>directly</em>, you'll need to use unsafe code. The function <code>std::mem::transmute</code> does exactly what you want. The problem is that the layout of a struct in Rust is not guaranteed, so the following would usually be Undefined Behaviour:</p>\n\n<pre><code>use std::mem;\nlet list_link: Option&lt;Box&lt;ListNode&lt;_&gt;&gt;&gt; = unsafe { mem::transmute(tree_node) };\n</code></pre>\n\n<p>However, you can make it safe by forcing the layout of the structs to be predictable, using  the <code>C</code> representation:</p>\n\n<pre><code>#[repr(C)]\nstruct TreeNode&lt;'a, T&gt; {\n    left_child: BinaryTreeLink&lt;'a, T&gt;,\n    right_child: BinaryTreeLink&lt;'a, T&gt;,\n    data : &amp;'a T,\n}\n\n#[repr(C)]\nstruct ListNode&lt;'a, T&gt; {\n    before: ListLink&lt;'a, T&gt;,\n    after: ListLink&lt;'a, T&gt;,\n    data : &amp;'a T,\n}\n</code></pre>\n\n<p>You will also need to apply <code>#[repr(C)]</code> to the definitions of the internal types, <code>ListLink</code> and <code>BinaryTreeLink</code>.</p>\n\n<hr>\n\n<p>But what about avoiding unsafe code altogether? If you write conversion functions, that <em>consume</em> the original data, the optimiser <em>should</em> be able to turn it into a no-op because it knows that no other code could be referencing that memory.</p>\n\n<pre><code>&lt;'a, T&gt; impl From&lt;ListNode&lt;'a, T&gt;&gt; for TreeNode&lt;'a, T&gt; {\n     fn from(other: ListNode&lt;'a, T&gt;) -&gt; ListNode&lt;'a, T&gt;&gt; {\n         ListNode {\n             before: other.left_child,\n             after: other.right_child,\n             data: other.data,\n         }\n     }\n}\n</code></pre>\n\n<p>You should definitely benchmark this to make sure, but the optimiser has all the information that it needs to make this into a no-op, and it is very likely that it will.</p>\n"}], "owner": {"reputation": 61, "user_id": 10458563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/beffb70905dcc44a5e9305b9879c97b4?s=128&d=identicon&r=PG&f=1", "display_name": "Benji Z.", "link": "https://stackoverflow.com/users/10458563/benji-z"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 348, "favorite_count": 0, "accepted_answer_id": 54984012, "answer_count": 1, "score": 3, "last_activity_date": 1551705134, "creation_date": 1551647751, "last_edit_date": 1551705134, "question_id": 54973814, "link": "https://stackoverflow.com/questions/54973814/is-it-possible-to-associate-memory-from-one-struct-with-another-in-rust", "title": "Is it possible to associate memory from one struct with another in Rust?", "body": "<p>I know that in Rust a compiler does not guarantee you to get your struct data in the order you declare them, in order to save memory (I also believe some C code optimizer are doing the same thing). Assume now I have a binary tree and want to convert it to a double linked list. In C I would declare two structs:</p>\n\n<pre><code>typedef struct tree{\n    void* left_child;\n    void* right_child;\n    void* data;\n}tree_t;\n</code></pre>\n\n<p>for the tree, and:</p>\n\n<pre><code>typedef struct list{\n    void* before;\n    void* after;\n    void* data;\n}list_t;\n</code></pre>\n\n<p>for the linked list. If I now want to convert the tree to a list I can do this in place, I just associate the memory of the tree with the list struct and change the pointers:</p>\n\n<pre><code>tree_t mytree;\n/*fill tree*/\nlist_t *list_p;\nlist_p = (list_t)&amp;mytree;\n/*change pointers accordingly*/\n</code></pre>\n\n<p>But How can I do such a thing in Rust? Is it even possible without using <code>unsafe</code> code?\nTill now I have my tree:</p>\n\n<pre><code>struct TreeNode&lt;'a, T&gt; {\n    left_child: BinaryTreeLink&lt;'a, T&gt;,\n    right_child: BinaryTreeLink&lt;'a, T&gt;,\n    data : &amp;'a T,\n}\n\ntype BinaryTreeLink&lt;'a, T&gt; = Option&lt;Box&lt;TreeNode&lt;'a, T&gt;&gt;&gt;;\n</code></pre>\n\n<p>and the list would be:</p>\n\n<pre><code>struct ListNode&lt;'a, T&gt; {\n    before: ListLink&lt;'a, T&gt;,\n    after: ListLink&lt;'a, T&gt;,\n    data : &amp;'a T,\n}\n\ntype ListLink&lt;'a, T&gt; = Option&lt;Box&lt;ListNode&lt;'a, T&gt;&gt;&gt;;\n</code></pre>\n\n<p>But how can I now convert them efficiently in place?</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1551636188, "post_id": 54971024, "comment_id": 96703216, "body": "You are trying to start a never ending thread that uses <code>self</code> every second. What do you expect it to do when <code>self</code> gets destroyed? There is a perfectly good reason why Rust is forbidding this."}, {"owner": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551638469, "post_id": 54971024, "comment_id": 96704000, "body": "How about using a <code>local_self</code> inside the thread? but my define seems not correct..."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1551638874, "post_id": 54971024, "comment_id": 96704123, "body": "The type of<code>self</code> is <code>&amp;mut Self</code>, so the type of <code>&amp;mut self</code> is <code>&amp;mut &amp;mut Self</code>. The error message should make this obvious, so please always include it in your question. Fixing the problem with the type won&#39;t fix the lifetime issue @mcarton mentioned, though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551645724, "post_id": 54971024, "comment_id": 96706160, "body": "<code>if (*local_self).acti == true</code> \u2014 this is doubly redundant. Just use <code>if local_self.acti</code>. Likewise for <code>local_self.time_tick()</code> and <code>local_self.print_time()</code>."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1551641363, "creation_date": 1551641363, "answer_id": 54972822, "question_id": 54971024, "link": "https://stackoverflow.com/questions/54971024/accessing-a-method-of-self-inside-a-thread-in-rust/54972822#54972822", "title": "Accessing a method of self inside a thread in Rust", "body": "<p>You can't pass a closure that captures a mutable reference to <a href=\"https://doc.rust-lang.org/stable/std/thread/fn.spawn.html\" rel=\"nofollow noreferrer\"><code>thread::spawn</code></a>. <code>thread::spawn</code> needs the function to be <code>'static</code>, which means that either it captures no borrows, or that all borrows are <code>'static</code>. That's because the thread can continue running after the referent has been dropped.</p>\n\n<p>If you don't need to use <code>self</code> in the original thread after calling <code>start</code>, then you can just pass <code>self</code> by value.</p>\n\n<pre><code>pub fn start(self) {\n    self.acti = true;\n    thread::spawn(move || {\n        loop {\n            thread::sleep(Duration::from_secs(1));\n            if self.acti == true { self.time_tick(); }    \n            self.print_time();\n        }\n    });\n}\n</code></pre>\n\n<p>Otherwise, you'll need to use <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a> to get the two threads to share ownership of <code>Self</code>, as well as <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a> or <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>RwLock</code></a> to synchronize reads and writes across threads.</p>\n\n<pre><code>// note: this is not a method anymore;\n// invoke as `HMSTimer::start(arc.clone());`\npub fn start(this: Arc&lt;Mutex&lt;Self&gt;&gt;) {\n    this.lock().expect(\"mutex is poisoned\").acti = true;\n    thread::spawn(move || {\n        loop {\n            thread::sleep(Duration::from_secs(1));\n            let lock = this.lock().expect(\"mutex is poisoned\");\n            if lock.acti == true { lock.time_tick(); }    \n            lock.print_time();\n            // `lock` is dropped here, unlocking the mutex\n        }\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 3199, "user_id": 2828227, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/CEPMO.jpg?s=128&g=1", "display_name": "Casper", "link": "https://stackoverflow.com/users/2828227/casper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1471, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1551645595, "creation_date": 1551630477, "last_edit_date": 1551645595, "question_id": 54971024, "link": "https://stackoverflow.com/questions/54971024/accessing-a-method-of-self-inside-a-thread-in-rust", "title": "Accessing a method of self inside a thread in Rust", "body": "<p>I want to propagate the <code>self</code> struct object into a thread and then call its <code>time_tick()</code> method for increasing the HMS time.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn start(&amp;mut self) {\n    self.acti = true;   // the time tick is activated now...\n    thread::spawn(move || {\n        let local_self: *mut Self = self;   // this self live in the thread\n        loop {\n            thread::sleep(Duration::from_secs(1));  // wait for 1 sec\n            if (*local_self).acti == true { (*local_self).time_tick(); }    \n            (*local_self).print_time();  // for debug\n        }\n    });\n}\n</code></pre>\n\n<p>I get the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/hmstimer/mod.rs:42:17\n   |\n42 |           thread::spawn(move || {\n   |  _______________________^\n43 | |             let local_self: *mut Self = self;   // this self live in the thread\n44 | |             loop {\n45 | |                 thread::sleep(Duration::from_secs(1));    // wait for 1 sec\n...  |\n48 | |             }\n49 | |         });\n   | |_________^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 40:2...\n  --&gt; src/hmstimer/mod.rs:40:2\n   |\n40 |       pub fn start(&amp;mut self) {\n   |  _____^\n41 | |         self.acti = true;    // the time tick is activated now...\n42 | |         thread::spawn(move || {\n43 | |             let local_self: *mut Self = self;   // this self live in the thread\n...  |\n49 | |         });\n50 | |     }\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;mut hmstimer::HMSTimer\n              found &amp;mut hmstimer::HMSTimer\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `[closure@src/hmstimer/mod.rs:42:17: 49:7 self:&amp;mut hmstimer::HMSTimer]` will meet its required lifetime bounds\n</code></pre>\n\n<p>But it seems that the about method is inappropriate. What is the best practice for doing the task?</p>\n"}, {"tags": ["rust", "flatbuffers"], "comments": [{"owner": {"reputation": 13, "user_id": 11091076, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Py0dDW2FYHc/AAAAAAAAAAI/AAAAAAAAAAA/ccHmdfR0llI/photo.jpg?sz=128", "display_name": "Chuanlei Ni", "link": "https://stackoverflow.com/users/11091076/chuanlei-ni"}, "edited": false, "score": 0, "creation_date": 1551630409, "post_id": 54970856, "comment_id": 96701270, "body": "and if I call <code>finish</code> on a <code>FlatBufferBuilder</code> object, I also need to pass a <code>WIPOffset</code> argument.  I do not know what it is, and it is not needed in other languages such as c++"}, {"owner": {"reputation": 4578, "user_id": 17419, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JU9iE.jpg?s=128&g=1", "display_name": "Aardappel", "link": "https://stackoverflow.com/users/17419/aardappel"}, "edited": false, "score": 0, "creation_date": 1551658333, "post_id": 54970856, "comment_id": 96709274, "body": "WIPOffset is similar to Offset&lt;&gt; in C++, you should get it from any calls that create tables, there is like a <code>CreatePlasmaContainsRequest</code> or similar. Sorry not super familiar with the Rust API."}], "owner": {"reputation": 13, "user_id": 11091076, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Py0dDW2FYHc/AAAAAAAAAAI/AAAAAAAAAAA/ccHmdfR0llI/photo.jpg?sz=128", "display_name": "Chuanlei Ni", "link": "https://stackoverflow.com/users/11091076/chuanlei-ni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1551645338, "creation_date": 1551629450, "last_edit_date": 1551645338, "question_id": 54970856, "link": "https://stackoverflow.com/questions/54970856/how-can-i-construct-a-plasmacontainsrequest-if-i-dont-know-how-to-get-a-wipoffs", "title": "How can I construct a PlasmaContainsRequest if I don&#39;t know how to get a WIPOffset object?", "body": "<p>How can I construct a <code>PlasmaContainsRequest</code> object, since I don't know how to get a <code>WIPOffset</code> object to construct a <code>PlasmaContainsRequestArgs</code> object?</p>\n\n<p>I used <code>flatc</code> 1.10.0 to generate this Rust code:</p>\n\n<pre><code>impl&lt;'a&gt; PlasmaContainsRequest&lt;'a&gt; {\n    #[inline]\n    pub fn init_from_table(table: flatbuffers::Table&lt;'a&gt;) -&gt; Self {\n        PlasmaContainsRequest { _tab: table }\n    }\n    #[allow(unused_mut)]\n    pub fn create&lt;'bldr: 'args, 'args: 'mut_bldr, 'mut_bldr&gt;(\n        _fbb: &amp;'mut_bldr mut flatbuffers::FlatBufferBuilder&lt;'bldr&gt;,\n        args: &amp;'args PlasmaContainsRequestArgs&lt;'args&gt;,\n    ) -&gt; flatbuffers::WIPOffset&lt;PlasmaContainsRequest&lt;'bldr&gt;&gt; {\n        let mut builder = PlasmaContainsRequestBuilder::new(_fbb);\n        if let Some(x) = args.object_id {\n            builder.add_object_id(x);\n        }\n        builder.finish()\n    }\n\n    pub const VT_OBJECT_ID: flatbuffers::VOffsetT = 4;\n\n    #[inline]\n    pub fn object_id(&amp;self) -&gt; Option&lt;&amp;'a str&gt; {\n        self._tab\n            .get::&lt;flatbuffers::ForwardsUOffset&lt;&amp;str&gt;&gt;(PlasmaContainsRequest::VT_OBJECT_ID, None)\n    }\n}\n\npub struct PlasmaContainsRequestArgs&lt;'a&gt; {\n    pub object_id: Option&lt;flatbuffers::WIPOffset&lt;&amp;'a str&gt;&gt;,\n}\nimpl&lt;'a&gt; Default for PlasmaContainsRequestArgs&lt;'a&gt; {\n    #[inline]\n    fn default() -&gt; Self {\n        PlasmaContainsRequestArgs { object_id: None }\n    }\n}\n</code></pre>\n"}, {"tags": ["serialization", "rust", "lifetime", "serde"], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 2, "last_activity_date": 1551644742, "last_edit_date": 1551644742, "creation_date": 1551624833, "answer_id": 54970111, "question_id": 54969421, "link": "https://stackoverflow.com/questions/54969421/how-to-create-a-trait-with-a-method-that-requires-the-implementors-to-implement/54970111#54970111", "title": "How to create a trait with a method that requires the implementors to implement serde::Deserialize", "body": "<p>Replace <code>Deserialize</code> with <a href=\"https://docs.serde.rs/serde/de/trait.DeserializeOwned.html\" rel=\"nofollow noreferrer\"><code>DeserializeOwned</code></a> - this allows you to get rid of the explicit lifetime <code>'de</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait FromTomlFile\nwhere\n    Self: Sized + serde::de::DeserializeOwned,\n// etc\n</code></pre>\n"}], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "closed_date": 1551644677, "accepted_answer_id": 54970111, "answer_count": 1, "score": 1, "last_activity_date": 1551644742, "creation_date": 1551620455, "last_edit_date": 1551620971, "question_id": 54969421, "link": "https://stackoverflow.com/questions/54969421/how-to-create-a-trait-with-a-method-that-requires-the-implementors-to-implement", "closed_reason": "Duplicate", "title": "How to create a trait with a method that requires the implementors to implement serde::Deserialize", "body": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6e2e6db8a9312f415adf3b942796f45f\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>I have a few structs that are deserialized from TOML files using <code>from_path()</code> methods. To prevent copied code I tried to create a trait with generic methods to do this that I could just implement like this</p>\n\n<pre><code>impl FromTomlFile for MyStruct {}\n</code></pre>\n\n<p>Unfortunately because of the lifetime parameter on <code>serde::Deserialize</code> this is not as simple as I thought it would be.</p>\n\n<pre><code>use serde;\nuse serde_derive::Deserialize; // 1.0.88\nuse std::fs;\nuse std::path::Path;\nuse toml; // 0.4.10\n\n#[derive(Deserialize)]\nstruct A {}\n\ntrait FromTomlFile&lt;'de&gt;\nwhere\n    Self: Sized + serde::Deserialize&lt;'de&gt;,\n{\n    fn from_path&lt;P: AsRef&lt;Path&gt;&gt;(path: P) -&gt; Result&lt;Self, toml::de::Error&gt; {\n        toml::from_str(&amp;String::from_utf8_lossy(&amp;fs::read(&amp;path).unwrap()))\n    }\n}\n\nimpl FromTomlFile for A {} // &lt;-- doesn't work\n</code></pre>\n\n<p>How can I get this to work?</p>\n"}, {"tags": ["mysql", "macos", "rust", "linker-errors"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 9920939, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XIltC.png?s=128&g=1", "display_name": "beepboop", "link": "https://stackoverflow.com/users/9920939/beepboop"}, "edited": false, "score": 1, "creation_date": 1551633089, "post_id": 54969859, "comment_id": 96702153, "body": "Thank you, that&#39;s really helpful! Running  <code>RUSTFLAGS=&quot;-L&#47;usr&#47;local&#47;opt&#47;mysql-client&#47;lib&quot; cargo install diesel_cli</code> did the trick"}, {"owner": {"reputation": 23728, "user_id": 299399, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1907f4968c4c5b5fedb8f7cba422a032?s=128&d=identicon&r=PG", "display_name": "Frank Osterfeld", "link": "https://stackoverflow.com/users/299399/frank-osterfeld"}, "edited": false, "score": 1, "creation_date": 1577800342, "post_id": 54969859, "comment_id": 105258826, "body": "Passing <code>-I</code> gives me <code>error: Unrecognized option: &#39;I&#39;</code> (rustc/cargo 1.40.0), but passing <code>-L</code> suffices to make it build."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 9, "last_activity_date": 1551644612, "last_edit_date": 1551644612, "creation_date": 1551623368, "answer_id": 54969859, "question_id": 54969208, "link": "https://stackoverflow.com/questions/54969208/how-to-link-mysql-client-installed-from-homebrew-with-diesel-cli/54969859#54969859", "title": "How to link mysql-client installed from Homebrew with diesel-cli?", "body": "<p>Cargo ignores <code>LDFLAGS</code> and <code>CPPFLAGS</code>, you should set <code>RUSTFLAGS</code> instead. Something like this untested invocation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>RUSTFLAGS=\"-L/your_lib -I/your_include\" cargo install diesel_cli\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-reads\" rel=\"noreferrer\">Relevant documentation</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 145, "user_id": 8874957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMxdN.png?s=128&g=1", "display_name": "the duck", "link": "https://stackoverflow.com/users/8874957/the-duck"}, "is_accepted": false, "score": 2, "last_activity_date": 1552120630, "creation_date": 1552120630, "answer_id": 55075488, "question_id": 54969208, "link": "https://stackoverflow.com/questions/54969208/how-to-link-mysql-client-installed-from-homebrew-with-diesel-cli/55075488#55075488", "title": "How to link mysql-client installed from Homebrew with diesel-cli?", "body": "<p>On my side, I did not make it work with a mysql-client only. I had to install mysql with </p>\n\n<pre><code>brew install mysql\n</code></pre>\n\n<p>In the end, what matters is that you have a version of the mysqlclient dynamic lib.</p>\n\n<p>Mines where installed here :</p>\n\n<pre><code>/usr/local/lib/libmysqlclient.21.dylib\n/usr/local/Cellar/mysql/8.0.15/lib/libmysqlclient.21.dylib\n</code></pre>\n\n<p>And it worked.</p>\n"}], "owner": {"reputation": 13, "user_id": 9920939, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XIltC.png?s=128&g=1", "display_name": "beepboop", "link": "https://stackoverflow.com/users/9920939/beepboop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1546, "favorite_count": 1, "accepted_answer_id": 54969859, "answer_count": 2, "score": 1, "last_activity_date": 1552120630, "creation_date": 1551618919, "last_edit_date": 1551644549, "question_id": 54969208, "link": "https://stackoverflow.com/questions/54969208/how-to-link-mysql-client-installed-from-homebrew-with-diesel-cli", "title": "How to link mysql-client installed from Homebrew with diesel-cli?", "body": "<p>I have been trying to install the Rust Diesel CLI tool using <code>cargo install diesel_cli</code>, but the installation fails with a linking error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ld: library not found for -lmysqlclient\n clang: error: linker command failed with exit code 1 \n(use -v to see invocation)\n</code></pre>\n\n<p>I installed the MySQL client using Homebrew: <code>brew install mysql-client</code>. During installation I got the following warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mysql-client is keg-only, which means it was not symlinked into /usr/local,\nbecause conflicts with mysql.\nIf you need to have mysql-client first in your PATH run:\n  echo 'export PATH=\"/usr/local/opt/mysql-client/bin:$PATH\"' &gt;&gt; ~/.bash_profile\nFor compilers to find mysql-client you may need to set:\n  export LDFLAGS=\"-L/usr/local/opt/mysql-client/lib\"\n  export CPPFLAGS=\"-I/usr/local/opt/mysql-client/include\u201d\n</code></pre>\n\n<p>I set the <code>PATH</code> and flags as in that warning message, but I still get the above linking error when trying to install the diesel-cli tool. I am  unfamiliar with how to do linking in Rust - are there extra steps I need to do here to link mysqlclient directly? </p>\n"}, {"tags": ["rust", "slice"], "answers": [{"tags": [], "owner": {"reputation": 393, "user_id": 4607066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b780e369b4fea45427deffd7f622e457?s=128&d=identicon&r=PG", "display_name": "ChosunOne", "link": "https://stackoverflow.com/users/4607066/chosunone"}, "is_accepted": true, "score": 0, "last_activity_date": 1551652130, "last_edit_date": 1551652130, "creation_date": 1551614152, "answer_id": 54968526, "question_id": 54968221, "link": "https://stackoverflow.com/questions/54968221/managing-multiple-slices-of-the-same-section-of-memory/54968526#54968526", "title": "Managing multiple slices of the same section of memory", "body": "<p>Modifying <code>make_smaller_slice</code> to return a reference to a slice instead of a vector resolves the issue.  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Split&lt;'a&gt; {\n    pub first_half: &amp;'a [&amp;'a [u8]],\n    pub second_half: &amp;'a [&amp;'a [u8]]\n}\n\nimpl&lt;'a&gt; Split&lt;'a&gt; {\n    pub fn new(first_half: &amp;'a [&amp;'a [u8]], second_half: &amp;'a [&amp;'a [u8]]) -&gt; Split&lt;'a&gt; {\n        Self {\n            first_half,\n            second_half\n        }\n    }\n}\n\nfn make_smaller_slice&lt;'a&gt;(slice: &amp;'a [&amp;'a [u8]]) -&gt; &amp;'a[&amp;'a [u8]] {\n    let mut start_bound = 0;\n    for i in 0..slice.len() {\n        if true {\n            start_bound = i;\n        } \n    }\n\n    &amp;slice[start_bound..]\n}\n\nfn main() {\n    let mut original_data = Vec::with_capacity(100);\n    for i in 0..100 {\n        original_data.push(vec![i]);\n    }\n    let original_slice = original_data.iter().map(|x| x.as_slice()).collect::&lt;Vec&lt;_&gt;&gt;();\n    let mut split_queue = vec![];\n    split_queue.push(Split::new(&amp;original_slice[0..50], &amp;original_slice[50..100]));\n    loop {\n        let split = split_queue.remove(0);\n        let first_half = split.first_half.split_at(split.first_half.len() / 2);\n\n        let processed_first_half_0 = make_smaller_slice(&amp;first_half.0);\n        let processed_first_half_1 = make_smaller_slice(&amp;first_half.1);\n\n        let first_split = Split::new(&amp;processed_first_half_0, &amp;processed_first_half_1);\n        split_queue.insert(0, first_split);\n    }\n}\n</code></pre>\n\n<p>Credit to _TheDust_ from Reddit for this.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551645808, "post_id": 54969656, "comment_id": 96706179, "body": "This does not answer the OP&#39;s question &quot;[how to] manag[e] multiple slices of the same section of memory&quot;."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": -1, "last_activity_date": 1551645542, "last_edit_date": 1551645542, "creation_date": 1551622058, "answer_id": 54969656, "question_id": 54968221, "link": "https://stackoverflow.com/questions/54968221/managing-multiple-slices-of-the-same-section-of-memory/54969656#54969656", "title": "Managing multiple slices of the same section of memory", "body": "<p>There is potential issue in your code. In these 2 lines:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let split = split_queue.remove(0);\nsplit_queue.insert(0, first_split);\n</code></pre>\n\n<p>this works in time proportional to the length of <code>split_queue</code>. You might want to replace <code>Vec</code> with <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.VecDeque.html\" rel=\"nofollow noreferrer\"><code>VecDeque</code></a> and its constant-time methods <code>pop_front</code> and <code>push_front</code>.</p>\n"}], "owner": {"reputation": 393, "user_id": 4607066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b780e369b4fea45427deffd7f622e457?s=128&d=identicon&r=PG", "display_name": "ChosunOne", "link": "https://stackoverflow.com/users/4607066/chosunone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 54968526, "answer_count": 2, "score": 0, "last_activity_date": 1551652130, "creation_date": 1551611644, "last_edit_date": 1551645475, "question_id": 54968221, "link": "https://stackoverflow.com/questions/54968221/managing-multiple-slices-of-the-same-section-of-memory", "title": "Managing multiple slices of the same section of memory", "body": "<p>I've been banging my head against the wall trying to figure out how to manage multiple slices of the same larger slice. My primary motivation for doing this is I have some large slice that I start with, and gradually work with smaller and smaller subslices until the subslice contains only one element.</p>\n\n<p>From a high level perspective, it isn't obvious to me why this can't be done, as I don't need to move or mutate the original slice. I only need multiple views of the slice with the same lifetime as the original slice.</p>\n\n<p>To illustrate, refer to this diagram:</p>\n\n<p><a href=\"https://i.stack.imgur.com/5cwtT.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/5cwtT.png\" alt=\"Memory Model\"></a></p>\n\n<p>The original slice is in green, and each layer down represents slices of smaller and smaller size until only one element is in the slice. What I want is to ensure that the lifetime of the elements of each slice to \"reach through\" to the original slice, and not depend on the lifetime of the slice above it. I am using these slices inside of a while loop, and storing each of the slices in a queue that lasts for the duration of the loop.</p>\n\n<p>The problem I'm running into is that the slices don't \"live long enough\", though I don't quite understand why that's the case.</p>\n\n<p>Since each of the slices only reference the original slice, would it be possible to store these slices as \"owned slices\" in the queue rather than new vectors? Is there even a difference in performance? Would it be better to just store the indexes of the slice bounds in a queue for later? Any and all help is appreciated, thank you.</p>\n\n<p>Here is some code that precisely demonstrates the issue:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Split&lt;'a&gt; {\n    pub first_half: &amp;'a [&amp;'a [u8]],\n    pub second_half: &amp;'a [&amp;'a [u8]],\n}\n\nimpl&lt;'a&gt; Split&lt;'a&gt; {\n    pub fn new(first_half: &amp;'a [&amp;'a [u8]], second_half: &amp;'a [&amp;'a [u8]]) -&gt; Split&lt;'a&gt; {\n        Self {\n            first_half,\n            second_half,\n        }\n    }\n}\n\nfn make_smaller_slice&lt;'a&gt;(slice: &amp;'a [&amp;'a [u8]]) -&gt; Vec&lt;&amp;'a [u8]&gt; {\n    let mut smaller_slice = Vec::with_capacity(slice.len());\n    for elem in slice {\n        if true {\n            smaller_slice.push(*elem)\n        }\n    }\n\n    smaller_slice\n}\n\nfn main() {\n    let mut original_data = Vec::with_capacity(100);\n    for i in 0..100 {\n        original_data.push(vec![i]);\n    }\n    let original_slice = original_data\n        .iter()\n        .map(|x| x.as_slice())\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n    let mut split_queue = vec![];\n    split_queue.push(Split::new(&amp;original_slice[0..50], &amp;original_slice[50..100]));\n    loop {\n        let split = split_queue.remove(0);\n        let first_half = split.first_half.split_at(split.first_half.len() / 2);\n\n        let processed_first_half_0 = make_smaller_slice(&amp;first_half.0);\n        let processed_first_half_1 = make_smaller_slice(&amp;first_half.1);\n\n        let first_split = Split::new(&amp;processed_first_half_0, &amp;processed_first_half_1);\n        split_queue.insert(0, first_split);\n    }\n}\n</code></pre>\n\n<p>And the resulting errors: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `processed_first_half_0` does not live long enough\n  --&gt; src/main.rs:44:38\n   |\n38 |         let split = split_queue.remove(0);\n   |                     ----------- borrow used here, in later iteration of loop\n...\n44 |         let first_split = Split::new(&amp;processed_first_half_0, &amp;processed_first_half_1);\n   |                                      ^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n45 |         split_queue.insert(0, first_split);\n46 |     }\n   |     - `processed_first_half_0` dropped here while still borrowed\n\nerror[E0597]: `processed_first_half_1` does not live long enough\n  --&gt; src/main.rs:44:63\n   |\n38 |         let split = split_queue.remove(0);\n   |                     ----------- borrow used here, in later iteration of loop\n...\n44 |         let first_split = Split::new(&amp;processed_first_half_0, &amp;processed_first_half_1);\n   |                                                               ^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n45 |         split_queue.insert(0, first_split);\n46 |     }\n   |     - `processed_first_half_1` dropped here while still borrowed\n</code></pre>\n"}, {"tags": ["rust", "rust-macros", "rust-decl-macros"], "comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1551623829, "post_id": 54967522, "comment_id": 96699425, "body": "You can&#39;t control the order of expansion. IIRC, somebody once suggested a syntax based on how many <code>!</code> you used, i.e. <code>!!x</code> gets resolved before <code>!f2</code>, but this idea did not find much support. I like your idea of a macro-based quine btw :)"}, {"owner": {"reputation": 195, "user_id": 8484805, "user_type": "registered", "profile_image": "https://graph.facebook.com/1646240402077569/picture?type=large", "display_name": "Jon Nimrod", "link": "https://stackoverflow.com/users/8484805/jon-nimrod"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1551633758, "post_id": 54967522, "comment_id": 96702395, "body": "I see, that&#39;s unfortunate! I managed to do it but without stringify!, so it&#39;s pretty unreadable unfortunately."}, {"owner": {"reputation": 21716, "user_id": 2401769, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/wkEbw.jpg?s=128&g=1", "display_name": "Matias Cicero", "link": "https://stackoverflow.com/users/2401769/matias-cicero"}, "edited": false, "score": 1, "creation_date": 1601921922, "post_id": 54967522, "comment_id": 113550798, "body": "@JonNimrod Please would you care to provide your workaround solution for this issue is documented and can be useful for others in the same situation?"}], "owner": {"reputation": 195, "user_id": 8484805, "user_type": "registered", "profile_image": "https://graph.facebook.com/1646240402077569/picture?type=large", "display_name": "Jon Nimrod", "link": "https://stackoverflow.com/users/8484805/jon-nimrod"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 189, "favorite_count": 1, "answer_count": 0, "score": 4, "last_activity_date": 1551719038, "creation_date": 1551606278, "last_edit_date": 1551719038, "question_id": 54967522, "link": "https://stackoverflow.com/questions/54967522/how-to-make-a-macro-expand-before-stringifying-it-in-rust", "title": "How to make a macro expand before stringifying it in Rust?", "body": "<p>I'm trying to write a quine in Rust using only macros.\nIn order to do that, I'm embedding the <code>main</code> function into macro <code>f1</code>, and trying to embed a literal representation of <code>f1</code> in <code>f2</code> with <code>stringify!</code>.</p>\n\n<p>Here is my code so far:</p>\n\n<pre><code>macro_rules!f1{()=&gt;(fn main(){println!(\"macro_rules!{}\\nmacro_rules!f2{{($x:expr)=&gt;(stringify!($x))}}\\nf1!();\",f2!(f1));})}\nmacro_rules!f2{($x:expr)=&gt;(stringify!($x))}\nf1!();\n</code></pre>\n\n<p>The output is, unsurprisingly:</p>\n\n<pre><code>macro_rules!f1\nmacro_rules!f2{($x:expr)=&gt;(stringify!($x))}\nf1!();\n</code></pre>\n\n<p>What I need is for <code>f1</code> to expand before being stringified in order for the program to be quine. How can I do that?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551583417, "post_id": 54965252, "comment_id": 96691176, "body": "It is preferred to post separate questions instead of combining your questions into one. That way, it helps the people answering your question as well as others hunting for one of your questions."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1551584320, "last_edit_date": 1551584320, "creation_date": 1551583683, "answer_id": 54965295, "question_id": 54965252, "link": "https://stackoverflow.com/questions/54965252/what-is-the-syntax-to-import-only-a-single-method-of-a-type/54965295#54965295", "title": "What is the syntax to import only a single method of a type?", "body": "<p>There is no way to only import a method of a type. Note that <code>Duration::seconds</code> isn't a method \u2014 it's an <a href=\"https://doc.rust-lang.org/book/ch05-03-method-syntax.html#associated-functions\" rel=\"nofollow noreferrer\"><em>associated function</em></a>. You can't directly import these either.</p>\n\n<p>If you <em>really</em> wanted something like this, I see two options:</p>\n\n<ol>\n<li><p>New delegating function</p>\n\n<pre><code>fn seconds(x: i64) -&gt; chrono::Duration {\n    chrono::Duration::seconds(x)\n}\n</code></pre>\n\n<p>This is simple and obvious.</p></li>\n<li><p>Static function pointer</p>\n\n<p>You <em>could</em> bind <code>Duration::seconds</code> to a static function pointer:</p>\n\n<pre><code>static seconds: fn(i64) -&gt; chrono::Duration = chrono::Duration::seconds;\n</code></pre>\n\n<p>This will create warnings because statics should have uppercase names. I wouldn't do such a thing.</p></li>\n</ol>\n\n<hr>\n\n<p>Please re-read <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>'s chapter titled <a href=\"https://doc.rust-lang.org/book/ch07-02-modules-and-use-to-control-scope-and-privacy.html\" rel=\"nofollow noreferrer\">The Module System to Control Scope and Privacy</a>. You had to read over many sections before you got to the syntax for the <a href=\"https://doc.rust-lang.org/book/ch07-02-modules-and-use-to-control-scope-and-privacy.html#bringing-all-public-definitions-into-scope-with-the-glob-operator\" rel=\"nofollow noreferrer\">glob operator</a>. Those sections answer your first question:</p>\n\n<pre><code>use chrono::Duration; \n</code></pre>\n\n<p>You type the names of the <a href=\"https://doc.rust-lang.org/reference/items.html\" rel=\"nofollow noreferrer\"><em>items</em></a> you wish to import. Importable items include:</p>\n\n<ul>\n<li>a module</li>\n<li>a function</li>\n<li>a type alias</li>\n<li>a struct</li>\n<li>an enumeration</li>\n<li>a union</li>\n<li>a constant</li>\n<li>a static</li>\n<li>a trait</li>\n</ul>\n"}], "owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1551584320, "creation_date": 1551583049, "last_edit_date": 1551583394, "question_id": 54965252, "link": "https://stackoverflow.com/questions/54965252/what-is-the-syntax-to-import-only-a-single-method-of-a-type", "title": "What is the syntax to import only a single method of a type?", "body": "<p>How could I pull out only <code>Duration</code> instead of <code>*</code>? Is it possible to pull out only <code>seconds</code>?</p>\n\n<pre><code>use chrono::*; \n\n// Returns a Utc DateTime one billion seconds after start.\npub fn after(start: DateTime&lt;Utc&gt;) -&gt; DateTime&lt;Utc&gt; {\n    start + Duration::seconds(1000000000)\n}\n</code></pre>\n"}, {"tags": ["stream", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1551573397, "post_id": 54963851, "comment_id": 96689603, "body": "Just because the Playground doesn&#39;t have a crate doesn&#39;t mean that you shouldn&#39;t provide a MCVE."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1586180611, "last_edit_date": 1586180611, "creation_date": 1551574033, "answer_id": 54964546, "question_id": 54963851, "link": "https://stackoverflow.com/questions/54963851/how-can-i-efficiently-extract-the-first-element-of-a-futuresstream-in-a-blocki/54964546#54964546", "title": "How can I efficiently extract the first element of a futures::Stream in a blocking manner?", "body": "<p>To extract the first element of a <code>futures::Stream</code> in a blocking manner, you should convert the <code>Stream</code> to an iterator by calling <a href=\"https://docs.rs/futures/0.3.4/futures/executor/fn.block_on_stream.html\" rel=\"nofollow noreferrer\"><code>executor::block_on_stream</code></a> and then call <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><code>Iterator::next</code></a>. </p>\n\n<pre><code>use futures::{executor, stream, Stream}; // 0.3.4\nuse std::iter;\n\nfn example() -&gt; impl Stream&lt;Item = i32&gt; {\n    stream::iter(iter::repeat(42))\n}\n\nfn main() {\n    let v = executor::block_on_stream(example()).next();\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>If you are using Tokio, you can convert the <code>Stream</code> into a <code>Future</code> with <a href=\"https://docs.rs/futures/0.3.4/futures/stream/trait.StreamExt.html#method.into_future\" rel=\"nofollow noreferrer\"><code>StreamExt::into_future</code></a> and annotate a function with <a href=\"https://docs.rs/tokio/0.2.16/tokio/attr.main.html\" rel=\"nofollow noreferrer\"><code>#[tokio::main]</code></a>:</p>\n\n<pre><code>use futures::{stream, Stream, StreamExt}; // 0.3.4\nuse std::iter;\nuse tokio; // 0.2.13\n\nfn example() -&gt; impl Stream&lt;Item = i32&gt; {\n    stream::iter(iter::repeat(42))\n}\n\n#[tokio::main]\nasync fn just_one() -&gt; Option&lt;i32&gt; {\n    let (i, _stream) = example().into_future().await;\n    i\n}\n\nfn main() {\n    println!(\"{:?}\", just_one());\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/42928432/155423\">How to select between a future and stream in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 927, "favorite_count": 0, "accepted_answer_id": 54964546, "answer_count": 1, "score": -1, "last_activity_date": 1586180611, "creation_date": 1551567335, "last_edit_date": 1551573589, "question_id": 54963851, "link": "https://stackoverflow.com/questions/54963851/how-can-i-efficiently-extract-the-first-element-of-a-futuresstream-in-a-blocki", "title": "How can I efficiently extract the first element of a futures::Stream in a blocking manner?", "body": "<p>I've got the following method:</p>\n\n<pre><code>pub fn load_names(&amp;self, req: &amp;super::MagicQueryType) -&gt; ::grpcio::Result&lt;::grpcio::ClientSStreamReceiver&lt;String&gt;&gt; {\n</code></pre>\n\n<p>My goal is to get the very first element of <a href=\"https://docs.rs/grpcio/0.4.4/grpcio/struct.ClientSStreamReceiver.html\" rel=\"nofollow noreferrer\"><code>grpcio::ClientSStreamReceiver</code></a>; I don't care about the other names: </p>\n\n<pre><code>let name: String = load_names(query)?.wait().nth(0)?;\n</code></pre>\n\n<p>It seems inefficient to call <code>wait()</code> before <code>nth(0)</code> as I believe <code>wait()</code> blocks the stream until it receives all the elements.</p>\n\n<p>How can I write a more efficient solution (i.e., <code>nth(0).wait()</code>) without triggering build errors? Rust's build errors for <code>futures::stream::Stream</code> look extremely confusing to me.</p>\n\n<p>The <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust playground</a> doesn't support <code>grpcio = \"0.4.4\"</code> so I cannot provide a link. </p>\n"}, {"tags": ["winapi", "rust", "c-strings"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551557988, "post_id": 54962557, "comment_id": 96686112, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/44709780/155423\">Calling the GetUserName WinAPI function with a mutable string doesn&#39;t populate the string</a> and <a href=\"https://stackoverflow.com/q/39550856/155423\">What is the right way to allocate data to pass to an FFI call?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/54962557/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551558034, "post_id": 54962557, "comment_id": 96686126, "body": "TL;DR: <code>let ptr = &amp;mut 0;</code> is completely and totally wrong. You never allocate any space to store the string in; this is a pointer to an <code>i32</code> which is 4 bytes long."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551558411, "post_id": 54962557, "comment_id": 96686235, "body": "You might as well switch to <code>GetWindowTextW</code> to handle non-ASCII names as well."}, {"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551558631, "post_id": 54962557, "comment_id": 96686310, "body": "Thanks your tips. I did&#39;t notice the allocation. After I change the<code>ptr</code> to <code>let name = Vec::with_capacity(1024); let ptr = name.as_ptr();</code>, it works."}, {"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551558670, "post_id": 54962557, "comment_id": 96686325, "body": "@Shepmaster Thanks ^ ^, this question can be closed."}, {"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551564241, "post_id": 54962557, "comment_id": 96687742, "body": "@Shepmaster I got some problems when I switch to <code>GetWindowTextW</code>. It takes a <code>u16 ptr</code>, I can&#39;t get the text from <code>CStr::from_ptr(ptr)</code>. Could you help me?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551574495, "post_id": 54962557, "comment_id": 96689816, "body": "<a href=\"https://stackoverflow.com/a/48587087/155423\">Convert it to a slice and use <code>OsString</code></a>"}], "owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 311, "favorite_count": 0, "closed_date": 1551558691, "answer_count": 0, "score": 0, "last_activity_date": 1551558701, "creation_date": 1551557389, "last_edit_date": 1551558195, "question_id": 54962557, "link": "https://stackoverflow.com/questions/54962557/how-to-convert-a-windows-api-c-string-pointer-into-a-string", "closed_reason": "Duplicate", "title": "How to convert a Windows API C string pointer into a string?", "body": "<p>I'm trying to get the names of all the windows using </p>\n\n<ul>\n<li><a href=\"https://github.com/retep998/winapi-rs\" rel=\"nofollow noreferrer\">winapi</a>\n\n<ul>\n<li><a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-enumwindows\" rel=\"nofollow noreferrer\"><code>EnumWindows</code></a>\n\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms633498(v=vs.85).aspx\" rel=\"nofollow noreferrer\"><code>EnumWindowsProc</code></a></li>\n</ul></li>\n<li><a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-getwindowtexta\" rel=\"nofollow noreferrer\"><code>GetWindowText</code></a></li>\n</ul></li>\n</ul>\n\n<pre><code>extern crate winapi;\n\n// --- std ---\nuse std::ffi::CStr;\n// --- external ---\nuse winapi::{\n    shared::{minwindef::LPARAM, windef::HWND__},\n    um::winuser::{EnumWindows, GetWindowTextA},\n};\n\nfn find_window() {\n    extern \"system\" fn enum_windows_proc(hwnd: *mut HWND__, _l_param: LPARAM) -&gt; i32 {\n        let ptr = &amp;mut 0;\n\n        unsafe {\n            GetWindowTextA(hwnd, ptr as *mut i8, 1024);\n            println!(\"hwnd: {:?}, name: {:?}\", hwnd, CStr::from_ptr(ptr));\n        }\n\n        1\n    }\n\n    unsafe {\n        EnumWindows(Some(enum_windows_proc), 0);\n    }\n}\n\nfn main() {\n    find_window();\n}\n</code></pre>\n\n<p>I found some solutions:</p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/questions/28649311/what-is-the-proper-way-to-go-from-a-string-to-a-const-i8\">What is the proper way to go from a String to a *const i8?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/24145823/how-do-i-convert-a-c-string-into-a-rust-string-and-back-via-ffi\">How do I convert a C string into a Rust string and back via FFI?</a></p></li>\n</ul>\n\n<p>But I get something like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>hwnd: 0x100d6, name: \"\"\nhwnd: 0x10250, name: \"B \\xa3\\xd6T\\xf7\\x7f\\x00\\x00\\x03\\x00\\x00\\x00\"\nhwnd: 0x10260, name: \"\"\nhwnd: 0x1028a, name: \"N \\xa3\\xd6T\\xf7\\x7f\\x00\\x00\\x03\\x00\\x00\\x00\\x00\"\nhwnd: 0x10288, name: \"\"\nhwnd: 0x706f8, name: \"T \\xa3\\xd6T\\xf7\\x7f\"\nhwnd: 0x1011c, name: \"\"\nhwnd: 0x10510, name: \"W \\xa3\\xd6T\\xf7\"\nhwnd: 0x2037c, name: \"\"\nhwnd: 0x30742, name: \"C \\xa3\\xd6T\\xf7\\x7f\\x00\\x00\\x03\\x00\\x00\\x00\\x00\\x00\"\nhwnd: 0x12019c, name: \"M \\xa3\\xd6T\\xf7\\x7f\\x00\\x00\\x03\\x00\\x00\\x00\\x00\"\nhwnd: 0x90754, name: \"C \\xa3\\xd6T\\xf7\\x7f\\x00\\x00\\x03\\x00\\x00\\x00\\x00\\x00\"\nhwnd: 0x1004e4, name: \"M \\xa3\\xd6T\\xf7\\x7f\\x00\\x00\\x03\\x00\\x00\\x00\\x00\"\n</code></pre>\n\n<p>Obviously, all the names are wrong. \nHow could I get the string from <code>ptr</code>?</p>\n"}, {"tags": ["methods", "rust", "borrow-checker", "mutability"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1551554983, "post_id": 54962020, "comment_id": 96685292, "body": "The easiest solution in this particular case is to derive <code>Copy</code> for <code>Vec2</code>, and accept <code>other</code> by value rather than by reference."}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 7, "last_activity_date": 1551555860, "last_edit_date": 1551555860, "creation_date": 1551555194, "answer_id": 54962266, "question_id": 54962020, "link": "https://stackoverflow.com/questions/54962020/how-can-i-use-an-object-as-a-parameter-of-its-own-method-in-rust/54962266#54962266", "title": "How can I use an object as a parameter of its own method in Rust?", "body": "<p>I think you understand this already, but the reason that what you have now doesn't work is that a value cannot be mutably borrowed at the same time as an immutable borrow. To perform the method as is, you would need both the mutable borrow (in the form of <code>&amp;mut self</code>) and the immutable borrow (in the form of <code>other: &amp;Vec2</code>) <em>at the same time</em>. Since your method should work for any two members of <code>Vec2</code>, you'll always have two separate borrows: the compiler can't deduce that a single borrow would work for the case of multiplying the vector by itself.</p>\n\n<p>As for your question, you have several options, depending on the details of what you're trying to do.</p>\n\n<h1>Option 1: cloning</h1>\n\n<p>Simply add <code>#[derive(Clone)]</code> to your definition of <code>Vec2</code> and you'll be able to clone an element of that type using the <code>clone</code> method.</p>\n\n<pre><code>#[derive(Clone)]\nstruct Vec2 {\n    x: f32,\n    y: f32,\n}\n\nimpl Vec2 {\n    fn multiply(&amp;mut self, other: &amp;Vec2) {\n        self.x *= other.x;\n        self.y *= other.y;\n    }\n}\n\nfn main() {\n    let mut vec = Vec2 { x: 2.0, y: 2.3 };\n    vec.multiply(&amp;vec.clone());\n}\n</code></pre>\n\n<h1>Option 2: copying</h1>\n\n<p>If your type is this simple (just two floats), then you could reasonably also derive <code>Copy</code>. Then elements of the type are simply copied when fed to functions, rather than needing a reference. That means that we should change the signature of <code>Vec2::multiply</code> to take <code>other</code> as simply <code>Vec2</code>, rather than <code>&amp;Vec2</code> (this isn't strictly necessary, but taking a pointer is usually less efficient for <code>Copy</code> types).</p>\n\n<pre><code>#[derive(Copy, Clone)]\nstruct Vec2 {\n    x: f32,\n    y: f32,\n}\n\nimpl Vec2 {\n    fn multiply(&amp;mut self, other: Vec2) {\n        self.x *= other.x;\n        self.y *= other.y;\n    }\n}\n\nfn main() {\n    let mut vec = Vec2 { x: 2.0, y: 2.3 };\n    vec.multiply(vec);\n}\n</code></pre>\n\n<h1>Option 3: a dedicated method</h1>\n\n<p>You could have a separate method called <code>multiply_self</code> or <code>square</code> (depending on your semantics) that just takes <code>&amp;mut self</code>. This might be your best bet in the general case of modifying a struct using itself.</p>\n\n<pre><code>struct Vec2 {\n    x: f32,\n    y: f32,\n}\n\nimpl Vec2 {\n    fn multiply_self(&amp;mut self) {\n        self.x *= self.x;\n        self.y *= self.y;\n    }\n}\n\nfn main() {\n    let mut vec = Vec2 { x: 2.0, y: 2.3 };\n    vec.multiply_self();\n}\n</code></pre>\n\n<h1>Option 4: return a new value</h1>\n\n<p>You could have a method that doesn't take <code>self</code> mutably and instead returns a new <code>Vec2</code>. Then you could do <code>vec = vec.multiply(&amp;vec)</code>.</p>\n\n<pre><code>struct Vec2 {\n    x: f32,\n    y: f32,\n}\n\nimpl Vec2 {\n    fn multiply(&amp;self, other: &amp;Vec2) -&gt; Vec2 {\n        Vec2 {\n            x: self.x * other.x,\n            y: self.y * other.y,\n        }\n    }\n}\n\nfn main() {\n    let mut vec = Vec2 { x: 2.0, y: 2.3 };\n    vec = vec.multiply(&amp;vec)\n}\n</code></pre>\n\n<p>There are probably lots of other ways to do this, but this is what comes to mind in this simple case. If you share more details about what your trying to do in general, I might be able to come up with more.</p>\n"}], "owner": {"reputation": 88, "user_id": 6878447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/402477633a9bdc129430365e15061bdb?s=128&d=identicon&r=PG&f=1", "display_name": "Knokko", "link": "https://stackoverflow.com/users/6878447/knokko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 54962266, "answer_count": 1, "score": 2, "last_activity_date": 1551558796, "creation_date": 1551553574, "last_edit_date": 1551558796, "question_id": 54962020, "link": "https://stackoverflow.com/questions/54962020/how-can-i-use-an-object-as-a-parameter-of-its-own-method-in-rust", "title": "How can I use an object as a parameter of its own method in Rust?", "body": "<p>I wrote the following code for a simple struct in Rust. This is just an example, it doesn't have much real logic:</p>\n\n<pre><code>struct Vec2 {\n    x: f32,\n    y: f32,\n}\n\nimpl Vec2 {\n    fn multiply(&amp;mut self, other: &amp;Vec2) {\n        self.x *= other.x;\n        self.y *= other.y;\n    }\n}\n</code></pre>\n\n<p>I can create simple vectors and multiply a vector with another vector, but I encountered a problem when I tried to multiply a vector with itself: The compiler complains that I can't borrow that vector as mutable because it is also borrowed as immutable.</p>\n\n<pre><code>fn main() {\n    let mut vec = Vec2 { x: 2.0, y: 2.3 };\n    vec.multiply(&amp;vec);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `vec` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:15:5\n   |\n15 |     vec.multiply(&amp;vec);\n   |     ^^^^--------^----^\n   |     |   |        |\n   |     |   |        immutable borrow occurs here\n   |     |   immutable borrow later used by call\n   |     mutable borrow occurs here\n</code></pre>\n\n<p>This makes sense, but what would be the correct way to multiply such a vector with itself? And more importantly: for the general case where I need to modify a struct with its own method with that same struct as parameter.</p>\n"}, {"tags": ["rust", "compile-time"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1551537998, "post_id": 54959438, "comment_id": 96680679, "body": "Except for changing the type of <code>x</code> and <code>y</code> to <code>&amp;str</code> and avoid a useless construction of a <code>String</code>, I&#39;m not sure there is much to optimize at compile time here."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551542185, "post_id": 54959438, "comment_id": 96681905, "body": "So you want a function of your version for each version of <code>x</code> ? I doubt that this is what I will call partial application."}, {"owner": {"reputation": 23688, "user_id": 1256041, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/NJUNN.jpg?s=128&g=1", "display_name": "sdgfsdh", "link": "https://stackoverflow.com/users/1256041/sdgfsdh"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551543195, "post_id": 54959438, "comment_id": 96682191, "body": "@Stargateur Yes that is correct. sorry if I used the wrong terminology!"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1551543624, "post_id": 54959438, "comment_id": 96682314, "body": "Are you sure this is a performance bottleneck in your code? I would be very surprised if it was. Anyway, if it indeed is, I suggest simply marking <code>foo()</code> as <code>#[inline(always)]</code> and use normal closures. The compiler would probably inline the function even without the attribute, so there isn&#39;t anything to worry about, but if the attribute puts your mind at ease then just go ahead an add it. :)"}, {"owner": {"reputation": 23688, "user_id": 1256041, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/NJUNN.jpg?s=128&g=1", "display_name": "sdgfsdh", "link": "https://stackoverflow.com/users/1256041/sdgfsdh"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1551544997, "post_id": 54959438, "comment_id": 96682698, "body": "@SvenMarnach I am asking to learn, not because this is a bottle-neck in a particular piece of code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551551781, "post_id": 54959438, "comment_id": 96684418, "body": "<i>How can I write this for maximum efficiency</i> \u2014 why do you believe that what you have written <b>isn&#39;t</b> maximally efficient?"}, {"owner": {"reputation": 23688, "user_id": 1256041, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/NJUNN.jpg?s=128&g=1", "display_name": "sdgfsdh", "link": "https://stackoverflow.com/users/1256041/sdgfsdh"}, "edited": false, "score": 1, "creation_date": 1551552555, "post_id": 54959438, "comment_id": 96684641, "body": "Well I don&#39;t know, that&#39;s why I am asking."}], "answers": [{"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": false, "score": 2, "last_activity_date": 1551551702, "last_edit_date": 1551551702, "creation_date": 1551538098, "answer_id": 54959735, "question_id": 54959438, "link": "https://stackoverflow.com/questions/54959438/partial-application-at-compile-time-in-rust/54959735#54959735", "title": "Partial application at compile-time in Rust?", "body": "<p>I was able to do it in nightly using a const function returning closure:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(const_fn)]\n\nfn foo(x: String, y: String) -&gt; String {\n    x + &amp;y\n}\n\nconst fn foo_applied(x: String) -&gt; impl Fn(String) -&gt; String {\n    move |y| foo(x.clone(), y)\n}\n\nfn main() {\n    let foo_1 = foo_applied(\"1 \".into());\n    println!(\"{}\", foo_1(\"2\".into()));\n    let foo_2 = foo_applied(\"2 \".into());\n    println!(\"{}\", foo_2(\"1\".into()));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=f3c75484fcaa1e8b8d6394f2b7aa36db\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 5, "last_activity_date": 1610734741, "last_edit_date": 1610734741, "creation_date": 1551576114, "answer_id": 54964720, "question_id": 54959438, "link": "https://stackoverflow.com/questions/54959438/partial-application-at-compile-time-in-rust/54964720#54964720", "title": "Partial application at compile-time in Rust?", "body": "<p>Note that your function <code>foo</code> currently requires two heap-allocated strings unnecessarily. Here is another version, which is more versatile and efficient (although YMMV as I will describe next):</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;T&gt;(x: T, y: &amp;str) -&gt; String\nwhere\n    T: Into&lt;String&gt;,\n{\n    x.into() + y\n}\n\nassert_eq!(foo(&quot;mobile &quot;, &quot;phones&quot;), &quot;mobile phones&quot;);\n</code></pre>\n<p>Concatenation will almost always require a memory allocation somewhere, but this one can take heap-allocated strings as well as arbitrary string slices.\nIt can also avoid a reallocation if the capacity of <code>x</code> is large enough, although this is not very likely to be the case, considering that <code>x</code> is obtained from a string known at compile time. <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.insert_str\" rel=\"nofollow noreferrer\"><code>String::insert_str</code></a> would have allowed us to revert the position of the type parameter, but an insertion at the front of the string has an O(n) cost. Knowing the first operand of a string concatenation <em>a priori</em> is not very beneficial to the compiler in terms of what optimizations it can employ.</p>\n<hr />\n<p>Let us assume that we still want to perform a partial function at compile time. This seems to be another use case where <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md\" rel=\"nofollow noreferrer\">const generics</a> would shine. With this feature, one could indeed monomorphize this function over a <code>&amp;'static str</code>. As of <code>nightly-2021-01-14</code>, the feature is unstable, but the code below <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=c8e535b6749b5dae0b1b4c3d61ee04c4\" rel=\"nofollow noreferrer\">compiles and works as intended</a>.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(const_generics)]\n\nfn foo&lt;const X: &amp;'static str&gt;(y: &amp;str) -&gt; String {\n    X.to_string() + y\n}\n\nlet s = &quot;string&quot;.to_string();\nprintln!(&quot;{}&quot;, foo::&lt;&quot;I am &quot;&gt;(&amp;s));\n</code></pre>\n<p>Alas, const generics applied to string slices are still unstable, and not quite ready for this yet. Albeit less ergonomic, we can instead replicate the effect of instancing one function for each string literal with rule-based macros:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! define_foo {\n    ($fname: ident, $x: literal) =&gt; {\n        fn $fname (y: &amp;str) -&gt; String {\n            $x.to_string() + y\n        }\n    }\n}\n</code></pre>\n<p>Using:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>define_foo!(bar, &quot;Conan &quot;);\n\nassert_eq!(bar(&quot;Os\u00edris&quot;), &quot;Conan Os\u00edris&quot;);    \n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40006219/1233251\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30154541/1233251\">How do I concatenate strings?</a></li>\n</ul>\n"}], "owner": {"reputation": 23688, "user_id": 1256041, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/NJUNN.jpg?s=128&g=1", "display_name": "sdgfsdh", "link": "https://stackoverflow.com/users/1256041/sdgfsdh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 301, "favorite_count": 0, "accepted_answer_id": 54964720, "answer_count": 2, "score": 0, "last_activity_date": 1610734741, "creation_date": 1551536173, "last_edit_date": 1551557230, "question_id": 54959438, "link": "https://stackoverflow.com/questions/54959438/partial-application-at-compile-time-in-rust", "title": "Partial application at compile-time in Rust?", "body": "<p>I have a function that takes two parameters (let's say two strings): </p>\n\n<pre><code>fn foo(x: String, y: String) -&gt; String {\n    x + y\n}\n</code></pre>\n\n<p>I always know <code>x</code> at compile-time, but I do not know <code>y</code> until run-time. </p>\n\n<p>How can I write this for maximum efficiency, without copy-pasting the function for each <code>x</code>? </p>\n"}, {"tags": ["rust", "crash", "flatbuffers", "panic"], "comments": [{"owner": {"reputation": 1079, "user_id": 773606, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/46450075026d77d935353ebb2ed23bf2?s=128&d=identicon&r=PG", "display_name": "frp", "link": "https://stackoverflow.com/users/773606/frp"}, "edited": false, "score": 0, "creation_date": 1551535052, "post_id": 54959248, "comment_id": 96679907, "body": "Can you share more details or a code snippet?"}, {"owner": {"reputation": 41, "user_id": 7110470, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2438e1f392881ce560b2605fbd790cc?s=128&d=identicon&r=PG&f=1", "display_name": "Tripton", "link": "https://stackoverflow.com/users/7110470/tripton"}, "reply_to_user": {"reputation": 1079, "user_id": 773606, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/46450075026d77d935353ebb2ed23bf2?s=128&d=identicon&r=PG", "display_name": "frp", "link": "https://stackoverflow.com/users/773606/frp"}, "edited": false, "score": 0, "creation_date": 1551535529, "post_id": 54959248, "comment_id": 96680029, "body": "@frp Sure i added a minimal example"}], "answers": [{"comments": [{"owner": {"reputation": 4578, "user_id": 17419, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JU9iE.jpg?s=128&g=1", "display_name": "Aardappel", "link": "https://stackoverflow.com/users/17419/aardappel"}, "edited": false, "score": 3, "creation_date": 1551540063, "post_id": 54959569, "comment_id": 96681275, "body": "The panic is by design.. the FlatBuffers format is entirely structured over offsets, bounds-checking them all (and worse, making every field accessor possibly return an error) is too much overhead. Instead, much like the C++ implementation, Rust will eventually have a &quot;Verifier&quot; that can check untrusted buffers ahead of time. For now, catching the panic is a crude way of doing the same."}, {"owner": {"reputation": 41, "user_id": 7110470, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2438e1f392881ce560b2605fbd790cc?s=128&d=identicon&r=PG&f=1", "display_name": "Tripton", "link": "https://stackoverflow.com/users/7110470/tripton"}, "edited": false, "score": 0, "creation_date": 1551546063, "post_id": 54959569, "comment_id": 96683003, "body": "Thank you very much! catch_unwind was the thing I was looking for!:)"}], "tags": [], "owner": {"reputation": 1079, "user_id": 773606, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/46450075026d77d935353ebb2ed23bf2?s=128&d=identicon&r=PG", "display_name": "frp", "link": "https://stackoverflow.com/users/773606/frp"}, "is_accepted": true, "score": 2, "last_activity_date": 1551552032, "last_edit_date": 1551552032, "creation_date": 1551537102, "answer_id": 54959569, "question_id": 54959248, "link": "https://stackoverflow.com/questions/54959248/how-to-check-check-if-a-flatbuffer-is-valid-or-handle-an-error-correctly/54959569#54959569", "title": "How to check check if a Flatbuffer is valid or handle an error correctly?", "body": "<p>The code for <a href=\"https://docs.rs/flatbuffers/0.5.0/src/flatbuffers/table.rs.html#59-61\" rel=\"nofollow noreferrer\"><code>get_root</code></a>:</p>\n\n<pre><code>#[inline]\npub fn get_root&lt;'a, T: Follow&lt;'a&gt; + 'a&gt;(data: &amp;'a [u8]) -&gt; T::Inner {\n    &lt;ForwardsUOffset&lt;T&gt;&gt;::follow(data, 0)\n}\n</code></pre>\n\n<p>The implementation for <code>Follow</code> for <a href=\"https://docs.rs/flatbuffers/0.5.0/src/flatbuffers/primitives.rs.html#159\" rel=\"nofollow noreferrer\"><code>ForwardsUOffset</code></a>:</p>\n\n<pre><code>impl&lt;'a, T: Follow&lt;'a&gt;&gt; Follow&lt;'a&gt; for ForwardsUOffset&lt;T&gt; {\n    type Inner = T::Inner;\n    #[inline(always)]\n    fn follow(buf: &amp;'a [u8], loc: usize) -&gt; Self::Inner {\n        let slice = &amp;buf[loc..loc + SIZE_UOFFSET];\n        let off = read_scalar::&lt;u32&gt;(slice) as usize;\n        T::follow(buf, loc + off)\n    }\n}\n</code></pre>\n\n<p>This implementation does not do any bounds checking, interprets the first 4 bytes as an offset, and just calls <code>follow</code> on the part of the buffer pointed to by offset. I don't know what <code>T</code> is in your context, but if the file is smaller than 4 bytes, this code will panic with an index out of range. If it is not, a similar situation can happen in the implementation of <code>T::follow</code>, since there's no bounds checking in any of the <code>follow</code> implementations that I've seen, and <code>follow</code> returns a naked value, not <code>Result</code>.</p>\n\n<p>You have two options here:</p>\n\n<ul>\n<li>Report the bug to the Flatbuffers developers, and get them to handle the corrupted files better.</li>\n<li>Handle the panic yourself using <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\"><code>std::panic::catch_unwind</code></a>.</li>\n</ul>\n\n<p>Disclaimer: I work at Google, but I don't work on anything related to Flatbuffers.</p>\n"}], "owner": {"reputation": 41, "user_id": 7110470, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2438e1f392881ce560b2605fbd790cc?s=128&d=identicon&r=PG&f=1", "display_name": "Tripton", "link": "https://stackoverflow.com/users/7110470/tripton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 445, "favorite_count": 0, "accepted_answer_id": 54959569, "answer_count": 1, "score": 0, "last_activity_date": 1551552032, "creation_date": 1551534781, "last_edit_date": 1551551855, "question_id": 54959248, "link": "https://stackoverflow.com/questions/54959248/how-to-check-check-if-a-flatbuffer-is-valid-or-handle-an-error-correctly", "title": "How to check check if a Flatbuffer is valid or handle an error correctly?", "body": "<p>I\u2018m using Rust and Flatbuffers to load files. When I try to load a file which is not a valid flatbuffer file, my program panics with an index out of range. How can I show a error to the user and not crash?</p>\n\n<p>Small Example:</p>\n\n<pre><code>file_content_as_u8 // This is my &amp;[u8] where I have loaded the file content.\n// &amp;[u8] to fltabuffer where get_root_as_file is generated by flatbuffer\nlet file_content = get_root_as_file(file_content_as_u8);\n// Try to read data field from flatbuffer\nlet data = file_content.data();\n// If file_content_as_u8 wasn't a valid flatbuffer file file_content.data()\n// results in a panic with an index out of range\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 64746, "user_id": 157957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MBRE7.jpg?s=128&g=1", "display_name": "IMSoP", "link": "https://stackoverflow.com/users/157957/imsop"}, "edited": false, "score": 2, "creation_date": 1551525739, "post_id": 54957905, "comment_id": 96677472, "body": "Hi, please include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> in the text of the question itself, so people can read the question without clicking an extra link, and so that the question will still be useful to future readers if the link breaks."}, {"owner": {"reputation": 63, "user_id": 9436580, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Satoshi Gekkouga", "link": "https://stackoverflow.com/users/9436580/satoshi-gekkouga"}, "reply_to_user": {"reputation": 64746, "user_id": 157957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MBRE7.jpg?s=128&g=1", "display_name": "IMSoP", "link": "https://stackoverflow.com/users/157957/imsop"}, "edited": false, "score": 0, "creation_date": 1551531314, "post_id": 54957905, "comment_id": 96678927, "body": "I will keep this in mind next time I ask a question thank you"}], "answers": [{"comments": [{"owner": {"reputation": 340, "user_id": 652278, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bbc401e0db6b59e8152fba482308e02?s=128&d=identicon&r=PG", "display_name": "sdht0", "link": "https://stackoverflow.com/users/652278/sdht0"}, "edited": false, "score": 0, "creation_date": 1551584346, "post_id": 54957935, "comment_id": 96691280, "body": "Adding to your answer, this does not happen for primitive types because they are marked as <code>Copy</code> (<a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/marker/trait.Copy.html</a>) and any complex type marked as <code>Copy</code> will behave similarly."}], "tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": true, "score": 4, "last_activity_date": 1551528916, "last_edit_date": 1551528916, "creation_date": 1551525696, "answer_id": 54957935, "question_id": 54957905, "link": "https://stackoverflow.com/questions/54957905/implicit-borrowing-in-rust/54957935#54957935", "title": "Implicit borrowing in Rust", "body": "<p>Assignments move values in this case. Basically, <code>let stuff = a[0]</code> attempts to move the value at the <code>0</code>th index of vector <code>a</code>, which would leave this index somehow undefined, which isn't allowed in Rust. The expression <code>a[0]</code> borrows the value at index zero, because it's syntactic sugar for <code>*a.index(0)</code>, where <code>index</code> <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\">returns the borrowed value</a>.</p>\n\n<p>This is discussed in the Rust book and in <a href=\"https://doc.rust-lang.org/rust-by-example/scope/move.html\" rel=\"nofollow noreferrer\">Rust by example</a> in more detail.</p>\n"}], "owner": {"reputation": 63, "user_id": 9436580, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Satoshi Gekkouga", "link": "https://stackoverflow.com/users/9436580/satoshi-gekkouga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 299, "favorite_count": 0, "accepted_answer_id": 54957935, "answer_count": 1, "score": 2, "last_activity_date": 1551529951, "creation_date": 1551525438, "last_edit_date": 1551529951, "question_id": 54957905, "link": "https://stackoverflow.com/questions/54957905/implicit-borrowing-in-rust", "title": "Implicit borrowing in Rust", "body": "<p>Below is a code snippet (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2100589fe50a79163a586615b661f072\" rel=\"nofollow noreferrer\">playground</a>) that I tried to run:</p>\n\n<pre><code>fn main() {\n    let a = vec![\"hello\".to_string(), \"world\".to_string()];\n    let b = vec![10, 20, 30];\n\n    let c = a[0];\n    let d = b[0];\n\n    println!(\"{:?}\", c);\n    println!(\"{:?}\", d);\n}\n</code></pre>\n\n<p>The error says that \"values can't be moved out of borrowed content\":</p>\n\n<pre><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:5:13\n  |\n5 |     let c = a[0];\n  |             ^^^^\n  |             |\n  |             cannot move out of borrowed content\n  |             help: consider borrowing here: `&amp;a[0]`\n</code></pre>\n\n<p>But I don't see any explicit borrowing being done. Where exactly is the borrowing done? And what is borrowed? And <strong>what is the borrowed content mentioned in the error?</strong></p>\n\n<p>This doesn't happen with primitive types like floats, chars etc. Maybe because values are copied rather than being moved, which is possible only in case of primitives (data structures whose values are completely stored in stack rather than in heap).</p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551518896, "post_id": 54956898, "comment_id": 96675865, "body": "what do you think ?"}, {"owner": {"reputation": 63, "user_id": 9436580, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Satoshi Gekkouga", "link": "https://stackoverflow.com/users/9436580/satoshi-gekkouga"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1551519929, "post_id": 54956898, "comment_id": 96676082, "body": "I think that the struct parts of the inner vectors are stored in the heap"}], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 9436580, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Satoshi Gekkouga", "link": "https://stackoverflow.com/users/9436580/satoshi-gekkouga"}, "edited": false, "score": 0, "creation_date": 1551656168, "post_id": 54958828, "comment_id": 96708855, "body": "What do you mean by the &quot;self referential&quot; ones?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 63, "user_id": 9436580, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Satoshi Gekkouga", "link": "https://stackoverflow.com/users/9436580/satoshi-gekkouga"}, "edited": false, "score": 1, "creation_date": 1551659301, "post_id": 54958828, "comment_id": 96709444, "body": "@Satoshi Values that contain a reference to themselves or part of themselves are &quot;self-referential&quot;. These values cannot be moved because moving one to a different memory location could invalidate the reference. <a href=\"https://stackoverflow.com/q/32300132/3650362\">This question</a> has more information."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1551551440, "last_edit_date": 1551551440, "creation_date": 1551531971, "answer_id": 54958828, "question_id": 54956898, "link": "https://stackoverflow.com/questions/54956898/what-is-the-memory-layout-of-a-vector-of-vectors/54958828#54958828", "title": "What is the memory layout of a vector of vectors?", "body": "<p>It is not true that a <code>Vec</code> (the struct containing pointer, length and capacity) is <em>always</em> stored on the stack. You can move any type (excluding self-referential ones, which can't be moved) from the stack to the heap, by putting it in a <code>Box</code>, <code>Vec</code> or other heap-using smart pointer. Just consider a straightforward type like <code>i64</code>: it might be stored on the stack (or in a register if the compiler so chooses), but if you write <code>vec![7i64]</code>, you have an <code>i64</code> stored on the heap and the only thing left on the stack is the <code>Vec</code> itself (a pointer plus length and capacity).</p>\n\n<p>With this analogy, it's not hard to see that the same applies for <code>String</code>: it <em>can</em> be on the stack, but you can put it on the heap by creating a <code>Vec&lt;String&gt;</code>. Therefore, if you have a <code>Vec&lt;String&gt;</code> with length 100, there are <em>101</em> independent heap allocations: one owned by the <code>Vec</code> and one owned by each of the <code>String</code>s.</p>\n\n<h2>See also</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/43641728/if-i-make-a-struct-and-put-it-in-a-vector-does-it-reside-on-the-heap-or-the-sta\">If I make a struct and put it in a vector, does it reside on the heap or the stack?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/31374179/what-is-the-memory-layout-of-a-vector-of-arrays\">What is the memory layout of a vector of arrays?</a></li>\n</ul>\n"}], "owner": {"reputation": 63, "user_id": 9436580, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Satoshi Gekkouga", "link": "https://stackoverflow.com/users/9436580/satoshi-gekkouga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "accepted_answer_id": 54958828, "answer_count": 1, "score": 0, "last_activity_date": 1551551440, "creation_date": 1551517597, "last_edit_date": 1551551404, "question_id": 54956898, "link": "https://stackoverflow.com/questions/54956898/what-is-the-memory-layout-of-a-vector-of-vectors", "title": "What is the memory layout of a vector of vectors?", "body": "<p>I know that some part of the vector (the actual data) is stored in the heap, while some data (a struct containing the length, capacity and pointer to the actual data in heap) is stored on the stack.</p>\n\n<p>What about a vector of vectors (i.e the elements of the vector are other vectors, e.g. a vector of strings)? What parts of this outer container vector are stored in the heap and on thee stack? What about the individual inner elements?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1551502794, "post_id": 54955254, "comment_id": 96673033, "body": "even better: <code>let do_thing = if let (Some(x), Some(t)) = (y, u) {     false } else {     true };</code>"}, {"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 2, "creation_date": 1551532225, "post_id": 54955254, "comment_id": 96679170, "body": "worth mentioning that the first option <i>won&#39;t</i> provide short-circuiting, but OP might not care about that"}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 4, "last_activity_date": 1551501105, "creation_date": 1551501105, "answer_id": 54955254, "question_id": 54955148, "link": "https://stackoverflow.com/questions/54955148/how-can-i-collapse-nested-if-let-statements-which-all-run-the-same-code-in-t/54955254#54955254", "title": "How can I &quot;collapse&quot; nested `if let` statements which all run the same code in their `else` clauses?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>if let (Some(x), Some(t)) = (y, u) {\n    do_thing = false;\n} else {\n    do_thing = true;\n}\n</code></pre>\n\n<p>if you don't need values then you can write  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if y.is_some() &amp;&amp; u.is_some() { ... }\n</code></pre>\n"}], "owner": {"reputation": 457, "user_id": 3109210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c2477b0d52eeb1db5ab13e178658438?s=128&d=identicon&r=PG", "display_name": "CoolOppo", "link": "https://stackoverflow.com/users/3109210/cooloppo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 1, "accepted_answer_id": 54955254, "answer_count": 1, "score": 0, "last_activity_date": 1551501105, "creation_date": 1551499803, "question_id": 54955148, "link": "https://stackoverflow.com/questions/54955148/how-can-i-collapse-nested-if-let-statements-which-all-run-the-same-code-in-t", "title": "How can I &quot;collapse&quot; nested `if let` statements which all run the same code in their `else` clauses?", "body": "<p>Here's a simple example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if let Some(x) = y {\n    if let Some(t) = u {\n        do_thing = false;\n    } else {\n        do_thing = true;\n    }\n} else {\n    do_thing = true;\n}\n</code></pre>\n\n<p>I would think that you could just have something like...</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if let Some(x) = y &amp;&amp; let Some(t) = u {\n    do_thing = false;\n} else {\n    do_thing = true;\n}\n</code></pre>\n\n<p>...but that doesn't seem to work. Is there a clean solution to this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1551494712, "post_id": 54954443, "comment_id": 96671928, "body": "Not sure if this is actually a great solution, and not doing a write-up, but <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8a3c25aae053abaf315d23f268ba5f4c\" rel=\"nofollow noreferrer\">this</a> should help you see cells in use, for now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551496371, "post_id": 54954443, "comment_id": 96672161, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a993c9b7325d54d278c84e4e934dceda\" rel=\"nofollow noreferrer\">The duplicates applied to your situation</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551561452, "post_id": 54954443, "comment_id": 96687077, "body": "So you followed <a href=\"https://stackoverflow.com/a/34748519/155423\">this answer</a>?"}, {"owner": {"reputation": 130, "user_id": 6896986, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ar-MGiUNfQ4/AAAAAAAAAAI/AAAAAAAAGqk/4IU8_uBqwi4/photo.jpg?sz=128", "display_name": "robot_rover", "link": "https://stackoverflow.com/users/6896986/robot-rover"}, "edited": false, "score": 1, "creation_date": 1551561556, "post_id": 54954443, "comment_id": 96687099, "body": "Yes I followed that, using your previous comment as a guide."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551561570, "post_id": 54954443, "comment_id": 96687102, "body": "<i>the relationships between classes can sometimes be cyclic</i> \u2014 this is a problem in the real JVM, presumably. You can often &quot;fix&quot; such a problem using <a href=\"https://doc.rust-lang.org/std/rc/struct.Weak.html\" rel=\"nofollow noreferrer\"><code>Weak</code></a>; potentially having a heuristic for which item will be the &quot;parent&quot;, such as sorting them."}, {"owner": {"reputation": 130, "user_id": 6896986, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ar-MGiUNfQ4/AAAAAAAAAAI/AAAAAAAAGqk/4IU8_uBqwi4/photo.jpg?sz=128", "display_name": "robot_rover", "link": "https://stackoverflow.com/users/6896986/robot-rover"}, "edited": false, "score": 0, "creation_date": 1551561780, "post_id": 54954443, "comment_id": 96687143, "body": "The chain of inheritance cannot be cyclic, but if class A has a method .toB() that returns B and B has a method .toA(), then they will have references to each other in their constant pools. I suppose I could have used Weak, and had the one Strong Rc&lt;&gt; reference been stored in the HashMap, but this seemed simpler."}], "owner": {"reputation": 130, "user_id": 6896986, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ar-MGiUNfQ4/AAAAAAAAAAI/AAAAAAAAGqk/4IU8_uBqwi4/photo.jpg?sz=128", "display_name": "robot_rover", "link": "https://stackoverflow.com/users/6896986/robot-rover"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 624, "favorite_count": 0, "closed_date": 1551495455, "answer_count": 0, "score": 1, "last_activity_date": 1551561322, "creation_date": 1551490668, "last_edit_date": 1551561322, "question_id": 54954443, "link": "https://stackoverflow.com/questions/54954443/how-to-give-hashmap-entries-references-to-each-other", "closed_reason": "Duplicate", "title": "How to give Hashmap entries references to each other?", "body": "<p>I am trying to implement the JVM in Rust as a fun project but I am struggling with an issue involving references. When classes are loaded from class files, their references to other classes are represented as Strings. After the loading phase, a JVM should link classes with actual references to each other. I cannot figure out how to do this with Rust's references. Here is a stripped down version of what I am trying to achieve. (an MCV example)</p>\n\n<pre><code>use ClassRef::{Symbolic, Static};\nuse std::collections::HashMap;\n\nfn main() {\n    let mut loader = ClassLoader { classes: HashMap::new() };\n    loader.load_class(\"java/lang/String\", \"java/lang/Object\");\n    // java.lang.Object is the only class without a direct superclass\n    loader.load_class(\"java/lang/Object\", \"\");\n    loader.link_classes();\n}\n\nstruct ClassLoader&lt;'a&gt; {\n    classes: HashMap&lt;String, Class&lt;'a&gt;&gt;\n}\n\nimpl&lt;'a&gt; ClassLoader&lt;'a&gt; {\n    pub fn load_class(&amp;mut self, name: &amp;str, super_name: &amp;str) {\n        self.classes.insert(name.to_owned(), Class::new(name, super_name));\n    }\n\n    pub fn link_classes(&amp;mut self) {\n        // Issue 1: Editing the stored class requires a mutable borrow\n        for (name, class) in self.classes.iter_mut() {\n            // Issue 2: I am not allowed to move this value to itself\n            class.super_class = match class.super_class {\n                // Issue 3: Storing a reference to another value in the map\n                Symbolic(ref super_name) =&gt; Static(self.classes.get(super_name)),\n                a =&gt; a\n            }\n        }\n    }\n}\n\nstruct Class&lt;'a&gt; {\n    super_class: ClassRef&lt;'a&gt;,\n    name: String\n}\n\nimpl&lt;'a&gt; Class&lt;'a&gt; {\n    pub fn new(name: &amp;str, super_name: &amp;str) -&gt; Self {\n        Class {\n            name: name.to_owned(),\n            super_class: Symbolic(super_name.to_owned())\n        }\n    }\n}\n\nenum ClassRef&lt;'a&gt; {\n    Symbolic(String),\n    Static(Option&lt;&amp;'a Class&lt;'a&gt;&gt;)\n}\n</code></pre>\n\n<p>Currently, there are three issues with the process that I am unable to solve.</p>\n\n<p>First, when I iterate through the list of loaded classes, I need to be able to change the field <code>Class#super_class</code>, so I need a mutable iterator. This means that I have a mutable borrow on <code>self.classes</code>. I also need an immutable borrow on <code>self.classes</code> during the iteration to look up a reference to the superclass. The way I feel like this should be solved is having a way of proving to the compiler that I am not mutating the map itself, but only a key. I feel like it has to do with <code>std::cell::Cell</code> as shown in <a href=\"https://doc.rust-lang.org/1.5.0/book/choosing-your-guarantees.html\" rel=\"nofollow noreferrer\">Choosing your Guarantees</a>, but the examples seem so simple I don't know how to correlate it to what I am trying to do here.</p>\n\n<p>Second, I need the previous value of <code>Class#super_class</code> in order to calculate the new one. Essentially, I am moving the previous value out, changing it, and then moving it back in. I feel like this could be solved with some sort of higher order Map function to work on the value in place, but once again I'm not sure.</p>\n\n<p>Third, when I give one class a reference to another class, there is no way of proving to the compiler that the other class won't be removed from the hashmap, causing the reference to point to deallocated memory. When classes are loaded, one class name will always point to the same class and classes are never unloaded, so I know that the value will always be there. The way I think this should be solved is with a Hashmap implementation which doesn't allow values to be overwritten or removed. I tried to poke around for such a thing but I couldn't find it.</p>\n\n<h2>EDIT: Solution</h2>\n\n<p>The duplicates linked were certainly helpful, but I ended up not using reference counting pointers (<code>Rc&lt;&gt;</code>) because the relationships between classes can sometimes be cyclic, so trying to drop the ClassLoader would end up leaking memory. The solution I settled on is using an immutable reference to a \n<a href=\"https://crates.io/crates/typed-arena\" rel=\"nofollow noreferrer\"><code>Typed-Arena</code></a> allocator. This allocator is an insertion only allocator which ensures the references it distributes are valid for the entire life of the reference to the allocator, as long as said reference is immutable. I then used the hashmap to store the references. That way everything is dropped when I drop the ClassLoader. Hopefully anyone that trying to implement a relationship similar to this finds the following code helpful.</p>\n\n<pre><code>extern crate typed_arena;\n\nuse ClassRef::{Symbolic, Static};\nuse std::collections::HashMap;\nuse std::cell::RefCell;\nuse core::borrow::BorrowMut;\nuse typed_arena::Arena;\n\nfn main() {\n    let mut loader = ClassLoader { class_map: HashMap::new(), classes: &amp;Arena::new() };\n    loader.load_class(\"java/lang/String\", \"java/lang/Object\");\n    // java.lang.Object is the only class without a direct superclass\n    loader.load_class(\"java/lang/Object\", \"\");\n    loader.link_classes();\n}\n\nstruct ClassLoader&lt;'a&gt; {\n    classes: &amp;'a Arena&lt;RefCell&lt;Class&lt;'a&gt;&gt;&gt;,\n    class_map: HashMap&lt;String, &amp;'a RefCell&lt;Class&lt;'a&gt;&gt;&gt;\n}\n\nimpl&lt;'a&gt; ClassLoader&lt;'a&gt; {\n    pub fn load_class(&amp;mut self, name: &amp;str, super_name: &amp;str) {\n        let super_opt = if super_name.len() &gt; 0 {\n            Some(super_name)\n        } else {\n            None\n        };\n        let class = Class::new(name, super_opt);\n        let class_ref = self.classes.alloc(RefCell::new(class));\n        self.class_map.insert(name.to_owned(), class_ref);\n    }\n\n    pub fn link_classes(&amp;mut self) {\n        for (_name, class_ref) in &amp;self.class_map {\n            let mut class = (*class_ref).borrow_mut();\n            if let Some(Symbolic(super_name)) = &amp;class.super_class {\n                let super_class = self.class_map.get(super_name);\n                let super_class = super_class.map(|c| Static(c.clone()));\n                *class.super_class.borrow_mut() = super_class;\n            }\n        }\n    }\n}\n\nstruct Class&lt;'a&gt; {\n    super_class: Option&lt;ClassRef&lt;'a&gt;&gt;,\n    name: String\n}\n\nimpl&lt;'a&gt; Class&lt;'a&gt; {\n    pub fn new(name: &amp;str, super_name: Option&lt;&amp;str&gt;) -&gt; Self {\n        Class {\n            name: name.to_owned(),\n            super_class: super_name.map(|name| Symbolic(name.to_owned()))\n        }\n    }\n}\n\nenum ClassRef&lt;'a&gt; {\n    Symbolic(String),\n    Static(&amp;'a RefCell&lt;Class&lt;'a&gt;&gt;)\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551497980, "post_id": 54953782, "comment_id": 96672359, "body": "<i>I can&#39;t cast the generic like I can with a primitive</i> \u2014 Use <code>From</code> / <code>Into</code> / <code>num::NumCast</code> / <code>num::ToPrimitive</code> for this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551498091, "post_id": 54953782, "comment_id": 96672379, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=879c1df96542567250ac5b31fe6376b3\" rel=\"nofollow noreferrer\">The duplicates applied to your situation.</a>"}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551498783, "post_id": 54953782, "comment_id": 96672474, "body": "@Shepmaster, this is super helpful. Thank you!"}], "owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "closed_date": 1551497346, "answer_count": 0, "score": 2, "last_activity_date": 1551497400, "creation_date": 1551483679, "last_edit_date": 1551497240, "question_id": 54953782, "link": "https://stackoverflow.com/questions/54953782/idiomatic-way-to-define-functionality-for-all-primitive-integer-types", "closed_reason": "Duplicate", "title": "Idiomatic way to define functionality for all primitive integer types", "body": "<p>I have a function defined for <code>i64</code> that returns an iterator over the number's digits. </p>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=50d20a4a02442549a2e2381e369d428e\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<pre><code>fn digits_of(num: i64) -&gt; impl Iterator&lt;Item = u8&gt; {\n    let num = num.abs();\n    let nth_digit = move |exp| (num / 10_i64.pow(exp) % 10) as u8;\n    let largest_exponent = (num as f64).log10() as u32;\n    (0..=largest_exponent).into_iter().map(nth_digit).rev()\n}\n\nfn main() {\n    for digit in digits_of(-8675309) {\n        println!(\"{}\", digit);\n    }\n}\n</code></pre>\n\n<p>I would like to somehow generalize this for all of the primitive integer types, but I cannot think of a good way to do this.</p>\n\n<p>One solution would be to manually implement the function for every primitive, which would work, but would be a lot of copy-and-pasting.</p>\n\n<p>Another (undesirable) solution would be to implement it only twice for <code>i128</code> and <code>u128</code>, where I could always cast a smaller type and invoke it the following way:</p>\n\n<pre><code>fn main() {\n    let x: u8 = 10;\n    for digit in digits_of(x as u128) {\n        println!(\"{}\", digit);\n    }\n}\n</code></pre>\n\n<p>I have tried to implement it using generics, where <code>T: Integer + Div + Rem</code> etc., but I can't cast the generic like I can with a primitive: <code>num as f64</code></p>\n\n<p>My inclination is that this may be possible with <code>macro_rules!</code> (perhaps using <code>expr</code> and <code>ty</code>), but I am quite new to macros in Rust. Any guidance would be appreciated.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 2, "creation_date": 1551492388, "post_id": 54953571, "comment_id": 96671595, "body": "I&#39;m not greatly familiar with Rust&#39;s macros, but <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/macros/macro-changes.html#macro_rules-style-macros\" rel=\"nofollow noreferrer\">it appears</a> that <code>#[macro_use]</code> was required in Rust 2015 to inform the compiler that you were using macros defined inside the crate."}], "answers": [{"comments": [{"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "edited": false, "score": 2, "creation_date": 1588763459, "post_id": 54954792, "comment_id": 109021816, "body": "I tried using 1use serde_derive;` instead of <code>#[macro_use] extern crate serde_derive;</code> but it failed!"}, {"owner": {"reputation": 3531, "user_id": 1174521, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9a6bc053ffba8996e41c0bbb9a9ce36a?s=128&d=identicon&r=PG", "display_name": "jbg", "link": "https://stackoverflow.com/users/1174521/jbg"}, "reply_to_user": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "edited": false, "score": 1, "creation_date": 1606882142, "post_id": 54954792, "comment_id": 115094882, "body": "@HasanAYousef <code>use serde_derive;</code> is a no-op, like any <code>use</code> statement that doesn&#39;t have a <code>::</code> in it. You probably wanted <code>use serde_derive::{Deserialize, Serialize};</code> or similar."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1551495275, "creation_date": 1551495275, "answer_id": 54954792, "question_id": 54953571, "link": "https://stackoverflow.com/questions/54953571/what-does-macro-use-before-an-extern-crate-statement-mean/54954792#54954792", "title": "What does #[macro_use] before an extern crate statement mean?", "body": "<p>It means to import (\"use\") the macros from the crate.</p>\n\n<p>As of <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1300-2018-10-25\" rel=\"noreferrer\">Rust 1.30</a>, this syntax is no longer generally needed and you can use the standard <code>use</code> keyword instead.</p>\n\n<p>Review the <a href=\"https://doc.rust-lang.org/1.29.0/book/first-edition/macros.html?highlight=macro_use#scoping-and-macro-importexport\" rel=\"noreferrer\">macros chapter from the first edition of <em>The Rust Programming Language</em></a> for more detail.</p>\n"}], "owner": {"reputation": 23688, "user_id": 1256041, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/NJUNN.jpg?s=128&g=1", "display_name": "sdgfsdh", "link": "https://stackoverflow.com/users/1256041/sdgfsdh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3042, "favorite_count": 1, "accepted_answer_id": 54954792, "answer_count": 1, "score": 14, "last_activity_date": 1551495275, "creation_date": 1551482031, "last_edit_date": 1551483409, "question_id": 54953571, "link": "https://stackoverflow.com/questions/54953571/what-does-macro-use-before-an-extern-crate-statement-mean", "title": "What does #[macro_use] before an extern crate statement mean?", "body": "<p>In Rust, I sometimes see <code>#[macro_use]</code> before an <code>extern crate</code> statement:</p>\n\n<pre><code>#[macro_use]\nextern crate gotham_derive;\n</code></pre>\n\n<p>What does this do compared to not having <code>#[macro_use]</code>?</p>\n\n<pre><code>extern crate gotham_derive;\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1551503843, "post_id": 54951980, "comment_id": 96673213, "body": "use a scope if you don&#39;t use NLL, <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=f2754b8bb3c0e02d357cd4fdbcb03d5a\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551552260, "post_id": 54951980, "comment_id": 96684564, "body": "The code you&#39;ve provided <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fc4a7c9b6200933f4b615ad6e5667145\" rel=\"nofollow noreferrer\">compiles as-is</a>. Upgrade your Rust version and switch to Rust 2018."}, {"owner": {"reputation": 19030, "user_id": 69746, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8bb00903daaba6a14c238611b21ab677?s=128&d=identicon&r=PG", "display_name": "Xolve", "link": "https://stackoverflow.com/users/69746/xolve"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551562002, "post_id": 54951980, "comment_id": 96687201, "body": "@Stargateur Can you please post this as answer so that I can mark it as accepted answer."}, {"owner": {"reputation": 19030, "user_id": 69746, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8bb00903daaba6a14c238611b21ab677?s=128&d=identicon&r=PG", "display_name": "Xolve", "link": "https://stackoverflow.com/users/69746/xolve"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551562154, "post_id": 54951980, "comment_id": 96687248, "body": "As posted by @Stargateur the sniappet clearly explains how lexical lifetimes can help to understand use of each variable clearly.  Non Lexical Lifetimes (NLL) does help to write code easier but the scoping here seems a better idea and more idiomatic IMHO."}], "answers": [{"comments": [{"owner": {"reputation": 1079, "user_id": 773606, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/46450075026d77d935353ebb2ed23bf2?s=128&d=identicon&r=PG", "display_name": "frp", "link": "https://stackoverflow.com/users/773606/frp"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551526801, "post_id": 54952562, "comment_id": 96677744, "body": "Updated. IMHO this is pointless for the values of i32 though."}, {"owner": {"reputation": 19030, "user_id": 69746, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8bb00903daaba6a14c238611b21ab677?s=128&d=identicon&r=PG", "display_name": "Xolve", "link": "https://stackoverflow.com/users/69746/xolve"}, "edited": false, "score": 0, "creation_date": 1551562139, "post_id": 54952562, "comment_id": 96687245, "body": "De-referencing with <code>*</code> operator is same as <code>clone()</code> which doesn&#39;t answer the question.  Code snippet posted by @Stargateur actually solves it."}], "tags": [], "owner": {"reputation": 1079, "user_id": 773606, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/46450075026d77d935353ebb2ed23bf2?s=128&d=identicon&r=PG", "display_name": "frp", "link": "https://stackoverflow.com/users/773606/frp"}, "is_accepted": true, "score": 2, "last_activity_date": 1551552354, "last_edit_date": 1551552354, "creation_date": 1551475757, "answer_id": 54952562, "question_id": 54951980, "link": "https://stackoverflow.com/questions/54951980/get-value-from-map-and-modify-map-in-same-scope/54952562#54952562", "title": "Get value from map and modify map in same scope", "body": "<p><a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow noreferrer\"><code>HashMap::get()</code></a> returns <code>Option&lt;&amp;V&gt;</code>, which you unwrap, getting <code>&amp;V</code>, so you end up with <code>prev</code> being an immutable reference that points inside <code>map</code>. That's why you have an immutable borrow of <code>map</code>. The type of <code>prev</code> is <code>&amp;i32</code>.</p>\n\n<p>To solve your problem, you can dereference that reference:</p>\n\n<pre><code>let prev = *map.get(&amp;(x - 1)).unwrap();\n</code></pre>\n\n<p>In this case, the type of prev is <code>i32</code>, and it is just a value on the stack. It does not point inside <code>map</code> => you don't borrow <code>map</code> immutably so you can borrow <code>map</code> mutably in the next line.</p>\n\n<p>Your original code works just fine if you enable Rust 2018 edition, because of <a href=\"https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html#non-lexical-lifetimes\" rel=\"nofollow noreferrer\">non-lexical lifetimes support</a>.</p>\n\n<p>Note that <code>HashMap</code> is not sorted, so the output lines are produced in arbitrary order. If you need sorting, you can consider using <code>BTreeMap</code>.</p>\n\n<p>If you don't want to use either <code>Copy</code> (via <code>*</code>) or <code>Clone</code> at all, and don't want to switch to Rust 2018, you can do the following:</p>\n\n<pre><code>let value_to_insert = {\n    let prev = map.get(&amp;(x - 1)).unwrap();\n    (prev + 1) * 10\n}\nmap.insert(x, value_to_insert)\n</code></pre>\n\n<p>This is pretty much the same thing non-lexical lifetimes would do for you automatically in Rust 2018.</p>\n"}], "owner": {"reputation": 19030, "user_id": 69746, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8bb00903daaba6a14c238611b21ab677?s=128&d=identicon&r=PG", "display_name": "Xolve", "link": "https://stackoverflow.com/users/69746/xolve"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "closed_date": 1551552486, "accepted_answer_id": 54952562, "answer_count": 1, "score": 1, "last_activity_date": 1551552561, "creation_date": 1551472713, "last_edit_date": 1551552240, "question_id": 54951980, "link": "https://stackoverflow.com/questions/54951980/get-value-from-map-and-modify-map-in-same-scope", "closed_reason": "Duplicate", "title": "Get value from map and modify map in same scope", "body": "<p>Here is a simple program which looks up previous value in <code>map</code> and puts a new value into it. It won't compile as the first lookup immutably borrows <code>map</code> and <code>insert</code> wants to mutably borrow <code>map</code>.</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map: HashMap&lt;i32, i32&gt; = HashMap::new();\n    map.insert(0, 0);\n\n    (1..5).for_each(|x| {\n        let prev = map.get(&amp;(x - 1)).unwrap();\n        map.insert(x, (prev + 1) * 10);\n    });\n\n    map.iter().for_each(|(k, v)| println!(\"{} -&gt; {}\", k, v));\n}\n</code></pre>\n\n<p>The problem can be solved by using <code>clone()</code> on to get <code>prev</code> as</p>\n\n<pre><code>let prev = map.get(&amp;(x - 1)).unwrap().clone();\n</code></pre>\n\n<p>and get the output as:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0 -&gt; 0\n1 -&gt; 10\n2 -&gt; 110\n3 -&gt; 1110\n4 -&gt; 11110\n</code></pre>\n\n<p>What can I do to not use <code>clone()</code> here?</p>\n"}, {"tags": ["sockets", "rust", "udp"], "comments": [{"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1551477263, "post_id": 54951699, "comment_id": 96668235, "body": "The only person who closes sockets is you, the application. If you had connected the socket you would get an ICMP_UNREACH error when <i>sending</i>, but you get nothing on receive."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551482868, "post_id": 54951699, "comment_id": 96669919, "body": "Also, UDP is not a connected protocol."}], "owner": {"reputation": 349, "user_id": 1207186, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/187a40b082e62fb3892ff8d24e70d850?s=128&d=identicon&r=PG", "display_name": "maufl", "link": "https://stackoverflow.com/users/1207186/maufl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1551471446, "creation_date": 1551471446, "question_id": 54951699, "link": "https://stackoverflow.com/questions/54951699/bound-udp-socket-not-closed-when-network-becomes-unavailable", "title": "Bound UDP socket not closed when network becomes unavailable", "body": "<p>On Linux, I open an UDP socket and bind it to an address that is currently available. I then listen in a loop for new packets. Then I disable wifi, the interface goes down and the network address is removed from the interface. I would expect the receive call to return an error but this is not the case.</p>\n\n<p>Is this expected behaviour? Is there a way to receive an error from a call to receive when the address the socket is bound to disappears?</p>\n\n<p>Example code in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::net::UdpSocket;\n\nfn main() {\n    let mut socket = UdpSocket::bind(\"192.168.2.43:64041\").expect(\"Unable to open socket\");\n    loop {\n        let mut buf = [0u8; 1500];\n        match socket.recv_from(&amp;mut buf) {\n            Ok((n, _addr)) =&gt; println!(\"Received {} bytes\", n),\n            Err(err) =&gt; println!(\"Error receiving bytes: {}\", err)\n        }\n    }\n}\n\n</code></pre>\n"}, {"tags": ["rust", "rpc", "capnproto"], "answers": [{"tags": [], "owner": {"reputation": 156, "user_id": 4024861, "user_type": "registered", "profile_image": "https://graph.facebook.com/3501547/picture?type=large", "display_name": "David Renshaw", "link": "https://stackoverflow.com/users/4024861/david-renshaw"}, "is_accepted": true, "score": 1, "last_activity_date": 1551498399, "last_edit_date": 1551498399, "creation_date": 1551496789, "answer_id": 54954912, "question_id": 54950431, "link": "https://stackoverflow.com/questions/54950431/how-to-set-the-capn-proto-rpc-message-traversal-limit/54954912#54954912", "title": "How to set the Cap&#39;n Proto RPC message traversal limit?", "body": "<p>You can set it when you construct the <a href=\"https://docs.capnproto-rust.org/capnp_rpc/twoparty/struct.VatNetwork.html\" rel=\"nofollow noreferrer\"><code>VatNetwork</code></a>:</p>\n\n<pre><code>pub fn new&lt;U&gt;(\n    input_stream: T,\n    output_stream: U,\n    side: Side,\n    receive_options: ReaderOptions,\n) -&gt; VatNetwork&lt;T&gt;\nwhere\n    U: Write + 'static,\n</code></pre>\n\n<p><a href=\"https://github.com/capnproto/capnproto-rust/issues/124#issuecomment-468877758\" rel=\"nofollow noreferrer\">https://github.com/capnproto/capnproto-rust/issues/124#issuecomment-468877758</a></p>\n"}], "owner": {"reputation": 353, "user_id": 4522084, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ccc498c02064892dab4d728d460a741b?s=128&d=identicon&r=PG&f=1", "display_name": "pdiffley", "link": "https://stackoverflow.com/users/4522084/pdiffley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 0, "accepted_answer_id": 54954912, "answer_count": 1, "score": 1, "last_activity_date": 1551498399, "creation_date": 1551465313, "last_edit_date": 1551498341, "question_id": 54950431, "link": "https://stackoverflow.com/questions/54950431/how-to-set-the-capn-proto-rpc-message-traversal-limit", "title": "How to set the Cap&#39;n Proto RPC message traversal limit?", "body": "<p>I need to send an RPC with the Rust Cap'n Proto API that exceeds the default message traversal limit. When I try to send the message, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>remote exception: &lt;class \\'capnp.lib.capnp.KjException\n\\'&gt;:capnp/arena.c++:130: failed: Exceeded message traversal limit.\nSee capnp::ReaderOptions.\n</code></pre>\n\n<p>If I were reading a message using <a href=\"https://docs.capnproto-rust.org/capnp/serialize/fn.read_message.html\" rel=\"nofollow noreferrer\"><code>capnp::serialize::read_message</code></a>, I could provide a <a href=\"https://docs.capnproto-rust.org/capnp/message/struct.ReaderOptions.html\" rel=\"nofollow noreferrer\"><code>ReaderOptions</code></a> struct specifying a new traversal limit.</p>\n\n<p>However, I am making and sending a request like in the <a href=\"https://github.com/capnproto/capnproto-rust/blob/master/capnp-rpc/examples/calculator/client.rs#L125\" rel=\"nofollow noreferrer\">calculator example</a> instead of reading a message directly. How can I set the traversal limit for my request message? </p>\n"}, {"tags": ["rust", "polymorphism", "traits", "trait-objects"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1551461714, "post_id": 54949289, "comment_id": 96662133, "body": "Both <code>&amp;T</code> and <code>Box&lt;T&gt;</code> implement <code>Deref</code> with <code>Target = T</code>. Is that what you are after? It&#39;s a bit unclear because you didn&#39;t provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551462469, "post_id": 54949289, "comment_id": 96662460, "body": "I have slightly improved the <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=67fc2cbe2c9f4c8476219497a580da8c\" rel=\"nofollow noreferrer\">Playground</a> example from @Stargateur"}, {"owner": {"reputation": 6440, "user_id": 592392, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3e43ec1d988a64c88e1f7e8a47ac6c1e?s=128&d=identicon&r=PG", "display_name": "jolivier", "link": "https://stackoverflow.com/users/592392/jolivier"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551462716, "post_id": 54949289, "comment_id": 96662562, "body": "ok I added a mcve based on @Stargateur with the question naming and an attempt at Deref"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1551463159, "post_id": 54949289, "comment_id": 96662748, "body": "It&#39;s because <code>Listener</code> is a trait. The box is actually a trait object <code>Box&lt;dyn Listener&gt;</code>, while the other is a regular type parameter."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551464238, "post_id": 54949289, "comment_id": 96663182, "body": "I don&#39;t thank you can because in one you try to use a static dispatch function with a dynamic dispatch data. But I probably miss something"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551471214, "post_id": 54949289, "comment_id": 96666081, "body": "<i><code>Listener</code> is not implemented by <code>Box&lt;dyn Listener&gt;</code></i> \u2014 Why don&#39;t you implement it then?"}, {"owner": {"reputation": 6440, "user_id": 592392, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3e43ec1d988a64c88e1f7e8a47ac6c1e?s=128&d=identicon&r=PG", "display_name": "jolivier", "link": "https://stackoverflow.com/users/592392/jolivier"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551536363, "post_id": 54949289, "comment_id": 96680241, "body": "@Shepmaster well for me this is the point of <code>Deref</code> implemented by <code>Box</code>, but I guess the <code>dyn</code> prevents this"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1551482506, "post_id": 54953108, "comment_id": 96669824, "body": "I think I finally understand what is the use of <code>?Sized</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551482655, "post_id": 54953108, "comment_id": 96669871, "body": "is this mean <code>f</code> use dynamic dispatch ? Or as it&#39;s generic, the dynamic dispatch is only when <code>f</code> is used with <code>box</code> ?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551532446, "post_id": 54953108, "comment_id": 96679226, "body": "@Stargateur It will use dynamic dispatch for the boxed trait object, but not for the known type. Remember that <code>f</code> will get monomorphised for each possible <code>T</code>."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1551625501, "last_edit_date": 1551625501, "creation_date": 1551478917, "answer_id": 54953108, "question_id": 54949289, "link": "https://stackoverflow.com/questions/54949289/factorize-methods-taking-boxt-and-t-as-argument/54953108#54953108", "title": "Factorize methods taking &amp;Box&lt;T&gt; and &amp;T as argument", "body": "<p><code>Listener</code> is a trait, so <code>Box&lt;Listener&gt;</code> is <em>really</em> a trait object, <code>Box&lt;dyn Listener&gt;</code> - it is unfortunate that the <code>dyn</code> keyword is currently optional. Both <code>Box&lt;dyn Listener&gt;</code> and <code>&amp;Mouse</code> implement <code>Deref</code>, with an associated <code>Target</code> type that implements <code>Listener</code>. In the case of <code>&amp;Mouse</code> the deref <code>Target</code> is <code>Mouse</code>, but in the case of <code>Box&lt;dyn Listener&gt;</code> it is an unknown object, <code>dyn Listener</code> of <em>unknown</em> size. </p>\n\n<p>To capture all of that information, you can write <code>f</code> like this:</p>\n\n<pre><code>fn f&lt;T, L&gt;(_listener: &amp;T)\nwhere\n    T: Deref&lt;Target = L&gt;,\n    L: Listener + ?Sized\n{\n}\n</code></pre>\n\n<p>And call it from each function like this:</p>\n\n<pre><code>fn fbox(listener: &amp;Box&lt;dyn Listener&gt;) {\n    f(listener);\n}\n\nfn fref&lt;L&gt;(listener: &amp;L)\nwhere\n    L: Listener\n{\n    f(&amp;listener);\n}\n</code></pre>\n\n<hr>\n\n<p>Another, perhaps simpler way of looking at this is to forgo the <code>Deref</code> constraint and just use normal references. Use <code>Box::as_ref</code> to turn a <code>Box</code> in to a reference in order to call it. The <code>?Sized</code> un-constraint is still needed for the trait object case, and still works since the value is always behind a pointer:</p>\n\n<pre><code>fn fbox(listener: &amp;Box&lt;dyn Listener&gt;) {\n    f(listener.as_ref());\n}\n\nfn fref&lt;L&gt;(listener: &amp;L) where L: Listener {\n    f(listener);\n}\n\nfn f&lt;L&gt;(_listener: &amp;L)\nwhere\n    L: Listener + ?Sized\n{\n}\n</code></pre>\n"}], "owner": {"reputation": 6440, "user_id": 592392, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3e43ec1d988a64c88e1f7e8a47ac6c1e?s=128&d=identicon&r=PG", "display_name": "jolivier", "link": "https://stackoverflow.com/users/592392/jolivier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 54953108, "answer_count": 1, "score": 2, "last_activity_date": 1551625501, "creation_date": 1551460017, "last_edit_date": 1551532484, "question_id": 54949289, "link": "https://stackoverflow.com/questions/54949289/factorize-methods-taking-boxt-and-t-as-argument", "title": "Factorize methods taking &amp;Box&lt;T&gt; and &amp;T as argument", "body": "<p>I have a method that I need to call with a trait parameter (let's call it <code>Listener</code>). The reason is that sometimes I have previously stored this trait parameter into a parent structure so it is inside a <code>Box</code>, and sometimes not.</p>\n\n<p>So I have the two methods :</p>\n\n<ul>\n<li><code>fref&lt;T&gt;(t: &amp;T) where T: Listener</code></li>\n<li><code>fbox(t: &amp;Box&lt;dyn Listener&gt;)</code></li>\n</ul>\n\n<p>and I would like both of them to call <code>f(t: ??)</code>. For now I duplicated the code in <code>fref</code> and <code>fbox</code> which works but is not good. So I am looking for a signature of <code>f</code> that would make it callable from <code>fref</code> and <code>fbox</code> to factorize my code. I was hoping one of the traits implemented by <code>Box</code> would be equivalent to a <code>&amp;</code> (or at least find a common ground somewhere).</p>\n\n<p>I tried the following:</p>\n\n<ul>\n<li>Writing <code>f&lt;T&gt;(t: &amp;T) where T: Listener</code> but then I can't call from  <code>fbox</code> (<code>Listener</code> is not implemented by <code>Box&lt;dyn Listener&gt;</code>). </li>\n<li><p>Then changing the call from within <code>fbox</code> to <code>f(&amp;*t)</code> to unbox my <code>Box&lt;Listener&gt;</code> but since <code>t</code> is not <code>Size</code>d I can't.</p></li>\n<li><p>Writing <code>f&lt;T&gt;(t: &amp;T) where T: std::borrow::Borrow&lt;Listener&gt;</code> but then I can't call from <code>fref</code> (<code>Borrow</code> is not implemented by <code>Listener</code>)</p></li>\n<li>Same with <code>AsRef&lt;Listener&gt;</code></li>\n<li>Last attempt with <code>Deref</code> <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b155a09c2440e7b4160c1ffdf5dee471\" rel=\"nofollow noreferrer\">playground</a>:</li>\n</ul>\n\n<pre><code>trait Listener {}\nstruct Mouse {}\nimpl Listener for Mouse {}\n\nfn fbox(t: &amp;Box&lt;Listener&gt;) {\n    f(t);\n}\n\nfn fref&lt;T&gt;(t: &amp;T)\nwhere\n    T: Listener,\n{\n    f(t);\n}\n\nfn f&lt;T&gt;(_t: &amp;T)\nwhere\n    T: std::ops::Deref&lt;Target = Listener&gt;,\n{\n\n}\n\nfn create_listener() -&gt; impl Listener {\n    Mouse {}\n}\n\nfn main() {\n    let mouse = create_listener();\n    let box_mouse: Box&lt;Listener&gt; = Box::new(Mouse {});\n\n    fref(&amp;mouse);\n    fbox(&amp;box_mouse);\n}\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1551458432, "post_id": 54948806, "comment_id": 96660534, "body": "It would be nice if you were a little more precise on <i>what</i> seems confusing to you. The use of <code>||</code>, the absence of <code>return</code>, the fact that <code>needle</code> is not explicitly captured (so how does it whether to capture by reference or value), ..."}, {"owner": {"reputation": 59, "user_id": 2904956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb5382b137146b381dd13740d165d1f2?s=128&d=identicon&r=PG", "display_name": "Pat Shaughnessy", "link": "https://stackoverflow.com/users/2904956/pat-shaughnessy"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551458578, "post_id": 54948806, "comment_id": 96660608, "body": "Sorry: What confuses me is the use of |&amp;s| in the closure parameter, and while also needing to use *s inside the closure."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551458580, "post_id": 54948806, "comment_id": 96660611, "body": "<code>find(|&amp;s| s == &amp;needle)</code> looks fine to me"}, {"owner": {"reputation": 59, "user_id": 2904956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb5382b137146b381dd13740d165d1f2?s=128&d=identicon&r=PG", "display_name": "Pat Shaughnessy", "link": "https://stackoverflow.com/users/2904956/pat-shaughnessy"}, "edited": false, "score": 0, "creation_date": 1551459075, "post_id": 54948806, "comment_id": 96660853, "body": "Ah interesting I didn&#39;t think of that. Thank you. Is &amp;needle what Matthieu meant by capturing by reference?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1551460313, "post_id": 54948806, "comment_id": 96661482, "body": "I think <code>if haystack.contains(&amp;needle)</code> is more idiomatic for <code>Vec</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551470531, "post_id": 54948806, "comment_id": 96665833, "body": "This is <b>specifically</b> called out in <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\" rel=\"nofollow noreferrer\">the documentation for the method you are using</a>: <i>Because <code>find()</code> takes a reference, and many iterators iterate over references, this leads to a possibly confusing situation where the argument is a double reference. You can see this effect in the examples below, with <code>&amp;&amp;x</code>.</i>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551470237, "post_id": 54950949, "comment_id": 96665732, "body": "<i>&amp;s is the opposite of taking argument by reference</i> \u2014 no, it&#39;s not. It still takes an argument by reference, it just immediately dereferences it. <code>foo(bar: &amp;String)</code> and <code>foo(bar: String)</code> are opposites in this dimension."}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 4, "last_activity_date": 1551471490, "last_edit_date": 1551471490, "creation_date": 1551467691, "answer_id": 54950949, "question_id": 54948806, "link": "https://stackoverflow.com/questions/54948806/why-does-find-take-a-parameter-by-reference-and-then-dereference-it/54950949#54950949", "title": "Why does `find` take a parameter by reference and then dereference it?", "body": "<p>It is idiomatic. Some people might have different preference for what exactly is dereferenced when, and/or use <code>.as_str()</code> instead of dereferencing, but in general it's OK.</p>\n\n<hr>\n\n<p>In your case <code>.iter()</code> iterates over <code>String</code>s by reference, so it gives <code>&amp;String</code> elements.</p>\n\n<p>Then <code>.find()</code> gives you access to each iterated the element by reference <em>again</em>, so you end up with a <code>&amp;&amp;String</code> argument. Even though that reference of reference isn't ideal in this particular case, <code>.find()</code> is a generic function that has to consistently work with any type, so it just blindly makes a reference.</p>\n\n<hr>\n\n<p>In arguments <code>&amp;s</code> is the <em>opposite</em> of taking a reference. The closure argument syntax is:</p>\n\n<pre><code>|pattern: type|\n</code></pre>\n\n<p>and the type is optional. So what you're left with is the <em>pattern</em>.</p>\n\n<p>Your closure is then:</p>\n\n<pre><code>|pattern: &amp;&amp;String|\n</code></pre>\n\n<p>and with your pattern:</p>\n\n<pre><code>|&amp;s: &amp;&amp;String| \n</code></pre>\n\n<p>matches one level of <code>&amp;</code>, so you end up with <code>s</code> being <code>&amp;String</code>.</p>\n\n<p>And then you want to compare <code>s</code> of type <code>&amp;String</code> with a <code>String</code>. To compare equal types, you dereference <code>&amp;String</code> to <code>String</code> with <code>*s</code>.</p>\n"}], "owner": {"reputation": 59, "user_id": 2904956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb5382b137146b381dd13740d165d1f2?s=128&d=identicon&r=PG", "display_name": "Pat Shaughnessy", "link": "https://stackoverflow.com/users/2904956/pat-shaughnessy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 343, "favorite_count": 0, "closed_date": 1551470552, "answer_count": 1, "score": 1, "last_activity_date": 1551471490, "creation_date": 1551458203, "last_edit_date": 1551470602, "question_id": 54948806, "link": "https://stackoverflow.com/questions/54948806/why-does-find-take-a-parameter-by-reference-and-then-dereference-it", "closed_reason": "Duplicate", "title": "Why does `find` take a parameter by reference and then dereference it?", "body": "<p>In the following snippet, I do not understand why the closure takes its parameter <code>s</code> by reference (<code>&amp;s</code>), then dereferences it (<code>*s</code>):</p>\n\n<pre><code>fn main() {\n    let needle = \"list\".to_string();\n    let haystack = [\n       \"some\".to_string(), \n        \"long\".to_string(),\n        \"list\".to_string(),\n        \"of\".to_string(),\n        \"strings\".to_string(),\n    ].to_vec();\n\n    if let Some(str) = haystack.iter().find(|&amp;s| *s == needle) {\n        println!(\"{}\", needle);\n    } else {\n        println!(\"Nothing there...\");\n    }\n}\n</code></pre>\n\n<p>Am I missing something obvious?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1551453526, "post_id": 54947328, "comment_id": 96657783, "body": "What is <code>get_objs_as_json</code>? Writing a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> will make it easier for someone to answer your question."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1551454411, "post_id": 54947328, "comment_id": 96658301, "body": "You can store hastable of traits like <a href=\"https://stackoverflow.com/questions/49711479/how-can-i-create-hashable-trait-objects-trait-objects-with-generic-method-para\">here</a> if that is what you need"}], "owner": {"reputation": 19, "user_id": 2740264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0fef3d7ff70be8460dc5a1f1cf0c9b75?s=128&d=identicon&r=PG&f=1", "display_name": "Ishtar", "link": "https://stackoverflow.com/users/2740264/ishtar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1551463223, "creation_date": 1551452934, "last_edit_date": 1551463223, "question_id": 54947328, "link": "https://stackoverflow.com/questions/54947328/how-to-match-a-string-to-generic-function-type-parameters", "title": "How to match a string to generic function type parameters?", "body": "<p>I need to call a generic method in the content of a <code>String</code> which is coming from a FFI caller, not from a static <code>&amp;str</code> in the code:</p>\n\n<pre><code>match endpoint.as_ref() {\n    \"documents\" =&gt; get_objs_as_json::&lt;Document, JsonDocument&gt;(db_url, sql),\n    \"theme_links\" =&gt; get_objs_as_json::&lt;ThemeLink, JsonThemeLink&gt;(db_url, sql),\n    \"dressing_links\" =&gt; get_objs_as_json::&lt;DressingLink, JsonDressingLink&gt;(db_url, sql),\n    \"dressing_configurations\" =&gt; {\n        get_objs_as_json::&lt;DressingConfiguration, JsonDressingConfiguration&gt;(db_url, sql)\n    }\n    &amp;_ =&gt; Err(BackendError::InvalidArgument(endpoint)),\n}\n</code></pre>\n\n<p>It's working, but really ugly, and I need to do this for each generic methods I have\u2026</p>\n\n<p>I tried to make an hashmap like <code>endpoint =&gt; (InputStruct, OutputStruct)</code> but I can't store and use the types like that.</p>\n\n<p>Perhaps I can do that with a macro, but I don't know how to convert the string parameter into types in the macro.</p>\n\n<p><strong>EDIT</strong>\nOk, trying to reformulate.\nI have a generic method who get data in my database from on struct type, then convert it to some other struct. But my caller doesn't know the name of the structs, so I\u00a0need a wrapper to convert an arbitrary string to a couple of types.\nThe idea here is to replace (as in a C macro, even if I know that Rust macros  are different)</p>\n\n<pre><code>get_and_convert(\"documents\", params)\n</code></pre>\n\n<p>by</p>\n\n<pre><code>get_and_convert&lt;Document, JsonDocument&gt;(params)\n</code></pre>\n\n<p>That because the \"documents\"  parameter come from FFI, the caller don't know the rust internal and can't call the generic method.</p>\n\n<p>as in :</p>\n\n<pre><code>pub struct Document {\n    pub a: i32,\n}\n\npub struct JsonDocument {\n    pub a: i32,\n}\n\nimpl JsonDocument {\n    pub fn to_json(&amp;self) -&gt; String {\n        // \u2026\n    }\n}\n\nimpl From&lt;Document&gt; for JsonDocument {\n    fn from(input: Input) -&gt; Self {\n        Output {\n            a: input.a\n        }\n    }\n}\n\npub fn get_and_convert&lt;I, O&gt;(db_params: String) -&gt; String {\n    let input = get_data(db_params);\n    let output = input.into();\n    output.to_json()\n}\n</code></pre>\n\n<p>So I\u00a0tried something like that (I'm new to macros so the code is very wrong, read it more like a pseudo-code) :</p>\n\n<pre><code>macro_rules! get_types {\n    (\"documents\") =&gt; {\n        (Document, JsonDocument)\n    };\n    (\"themes\") =&gt; {\n        (Theme, JsonTheme)\n    };\n}\n\nmacro_rules! get_objs {\n    ($x:expr, $y:expr, $params:expr) =&gt; {\n        get_and_convert::&lt;$x, $y&gt;($params)\n    };\n}\n</code></pre>\n\n<p>used like :</p>\n\n<pre><code>pub fn testmacro(args: String) {\n    let (input_type, output_type) = get_types!(\"documents\");\n    let result = get_objs!(input_type, output_type, args);\n}\n</code></pre>\n"}, {"tags": ["assembly", "rust", "compiler-construction", "x86-64", "jit"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1551457592, "post_id": 54947302, "comment_id": 96660084, "body": "I like the question, but it seems really broad. You may get better feedback in r/compilers and r/programminglanguages, which are subreddits with people sharing interests in those domains."}, {"owner": {"reputation": 9461, "user_id": 8422330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c0f90445d03447c587d1e595d531f69?s=128&d=identicon&r=PG&f=1", "display_name": "prl", "link": "https://stackoverflow.com/users/8422330/prl"}, "edited": false, "score": 1, "creation_date": 1551457606, "post_id": 54947302, "comment_id": 96660093, "body": "Is the Rust code below 4G? If so, you can use the MAP_32BIT flag."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551457701, "post_id": 54947302, "comment_id": 96660139, "body": "Onto the actual question: what are those intrinsics used for? It seems very strange to me to have intrinsics that are both performance critical YET should not be inlined. Hiding performance critical bits behind an opaque function pointer seems rather counter-intuitive: could give an example of a couple intrinsics that would help tailoring recommendations?"}, {"owner": {"reputation": 9461, "user_id": 8422330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c0f90445d03447c587d1e595d531f69?s=128&d=identicon&r=PG&f=1", "display_name": "prl", "link": "https://stackoverflow.com/users/8422330/prl"}, "edited": false, "score": 0, "creation_date": 1551458369, "post_id": 54947302, "comment_id": 96660493, "body": "The best choice is the answer given in the final question you linked: call through a register. If a call is frequent enough to be in thepredictor, it\u2019s as fast as any other type of call; if not, it\u2019s not much slower. Calling through memory ((3) or (5)) is worse."}, {"owner": {"reputation": 9461, "user_id": 8422330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c0f90445d03447c587d1e595d531f69?s=128&d=identicon&r=PG&f=1", "display_name": "prl", "link": "https://stackoverflow.com/users/8422330/prl"}, "edited": false, "score": 0, "creation_date": 1551458714, "post_id": 54947302, "comment_id": 96660670, "body": "(6) doesn\u2019t work at all. You can\u2019t call using a segment register except by using a far call that loads cs, which is extremely slow. Not to mention putting an unexpected value in cs. Plus requiring OS support."}, {"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551459483, "post_id": 54947302, "comment_id": 96661046, "body": "@MatthieuM. Yeah I was afraid of that. I see the one close for too broad. I can definitely see how it would be. Perhaps because I dumped all my thoughts out. My worry was if I just flat out asked &quot;how should I do this?&quot; then it would seem like I wanted others to do my research for me. The thrust of the question is: &quot;I&#39;ve thought about this a lot, but what do JITs usually do in this scenario? And if it&#39;s one of the methods enumerated, how do I overcome the technical hurdles?&quot; Perhaps that got lost? I&#39;ll certainly post to those subs. If you have any thoughts on how to narrow, I&#39;m all ears :)"}, {"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "reply_to_user": {"reputation": 9461, "user_id": 8422330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c0f90445d03447c587d1e595d531f69?s=128&d=identicon&r=PG&f=1", "display_name": "prl", "link": "https://stackoverflow.com/users/8422330/prl"}, "edited": false, "score": 1, "creation_date": 1551460693, "post_id": 54947302, "comment_id": 96661653, "body": "@prl Ohhhh! <code>MAP_32BIT</code> will do it! That definitely guarantees a relative <code>call</code> can be used. Unfortunately, this won&#39;t work on BSDs, but it looks like <a href=\"https://github.com/LuaJIT/LuaJIT/blob/b025b01c5b9d23f6218c7d72b7aafa3f1ab1e08a/src/lj_alloc.c#L199-L251\" rel=\"nofollow noreferrer\">luajit has a way to handle this</a>. Will investigate. Thanks :D"}, {"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551460991, "post_id": 54947302, "comment_id": 96661788, "body": "@MatthieuM. Perhaps I overstated their performance criticality. They&#39;re I/O which I&#39;ve implemented in rust to allow for easier testing (being able to stub out without changing the emitted code). I suspect their implementations are fairly large so inlining may be a little ridiculous. Further, it would then require me to comply (and work around) the internal rust ABI (which as far as I can tell isn&#39;t something I can rely on being stable?). Also because of the stubbing, they&#39;re generic, so I&#39;d have to sort out how to copy their implementations at runtime; seems like a tall order. Or not?"}, {"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "reply_to_user": {"reputation": 9461, "user_id": 8422330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c0f90445d03447c587d1e595d531f69?s=128&d=identicon&r=PG&f=1", "display_name": "prl", "link": "https://stackoverflow.com/users/8422330/prl"}, "edited": false, "score": 0, "creation_date": 1551461055, "post_id": 54947302, "comment_id": 96661810, "body": "@prl Your feedback about indirect calling and through memory is also helpful thanks! I also wasn&#39;t very sure about the segment stuff, but thanks for clearing it up!"}, {"owner": {"reputation": 26917, "user_id": 1892179, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/umfON.jpg?s=128&g=1", "display_name": "Theodoros Chatzigiannakis", "link": "https://stackoverflow.com/users/1892179/theodoros-chatzigiannakis"}, "edited": false, "score": 3, "creation_date": 1551461435, "post_id": 54947302, "comment_id": 96661994, "body": "@BaileyParker Oh please don&#39;t be discouraged by a close vote. It&#39;s amazing to have questions like this!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551462009, "post_id": 54947302, "comment_id": 96662276, "body": "@BaileyParker: If it&#39;s I/O then I think (3) becomes perfectly reasonable given the overhead of context switching and I/O. If there&#39;s a large number of intrinsics, though, it may negatively affect start-up time."}, {"owner": {"reputation": 9461, "user_id": 8422330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c0f90445d03447c587d1e595d531f69?s=128&d=identicon&r=PG&f=1", "display_name": "prl", "link": "https://stackoverflow.com/users/8422330/prl"}, "edited": false, "score": 0, "creation_date": 1551462802, "post_id": 54947302, "comment_id": 96662600, "body": "Now that you\u2019ve added that the called functions are large and for I/O, any of solutions 3, 4, or 5 are fine. Any performance cost is negligible compared to a system call to do I/O. Do whichever is most convenient for the code."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1551582839, "post_id": 54947302, "comment_id": 96691098, "body": "I have to agree both that this is an interesting set of questions, and that they are entirely unsuited for Stack Overflow :( The Rust-specific numbered questions could each be a Q&amp;A post on their own (and I think they would be valuable to have). Questions about whether something is &quot;worth it&quot; or whether there exists &quot;a better approach&quot; probably can&#39;t easily be made on-topic, though. In addition to Reddit, maybe you should consider users.rust-lang.org. Parts of your question may also be right for Software Engineering SE if edited (read the rules to see what that site expects)."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1555036789, "post_id": 54947302, "comment_id": 97977217, "body": "Updated my answer on <a href=\"//stackoverflow.com/q/19552158\">Call an absolute pointer in x86 machine code</a> (which you already linked) to mention <code>MAP_32BIT</code> explicitly.  That&#39;s one thing I had in mind, but I guess I kind of said it backwards for a JIT context (I previously said &quot;pick your absolute addresses...&quot;, but normally in JIT you&#39;re picking the code location and then trying to reach existing code.)  And not everyone knows about MAP_32BIT, or giving <code>mmap</code> a non-NULL hint near your existing code if it&#39;s not in the low 2GB (i.e. from a PIE executable)."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1555058381, "post_id": 54947302, "comment_id": 97984322, "body": "@trentcl: I disagree; this basically boils down to &quot;how to I efficiently call ahead-of-time compiled functions from JITed code?&quot; with some ideas thrown around to evaluate and comment on.  A question with some existing ideas is more fun than if that was literally all there was, because then there&#39;s more to talk about. :)  Asking them separately would be an XY problem.  x86 performance questions are very much on topic on SO.  Anyway, I spent maybe longer than I intended writing an answer here (it&#39;s under half the 30k char limit though. Anyway I could have made it much shorter. :P)"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1555062234, "post_id": 54947302, "comment_id": 97986462, "body": "@MatthieuM.: Disagree on too broad.  The question seemed clear and answerable to me.  The ideas proposed in the question made it clear the OP would be able to understand an interesting answer, and didn&#39;t need hand-holding through what bytes to emit in order to make it work at all."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 9461, "user_id": 8422330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c0f90445d03447c587d1e595d531f69?s=128&d=identicon&r=PG&f=1", "display_name": "prl", "link": "https://stackoverflow.com/users/8422330/prl"}, "edited": false, "score": 0, "creation_date": 1555062593, "post_id": 54947302, "comment_id": 97986649, "body": "@prl: besides performance, the other showstopper for <code>call far</code> is that there&#39;s <a href=\"https://www.felixcloutier.com/x86/call\" rel=\"nofollow noreferrer\">no encoding for absolute <i>direct</i> <code>call far ptr16:64</code></a> (with the address as an immediate), only for <code>ptr16:32</code> in 32-bit mode.  Memory-indirect <code>call [m16:64]</code> is OP&#39;s option 5 <code>call [mem]</code> but worse. You don&#39;t need &quot;OS support&quot;, though; your JITer can read its own CS and use that value.  AFAIK, it&#39;s always allowed to set CS to the current selector in all mainstream OSes.  Hard to imagine how it could break unless the GDT/LDT entry became invalid since entering user-space."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 2, "creation_date": 1555071496, "post_id": 54947302, "comment_id": 97991423, "body": "@PeterCordes: I will note that I did NOT vote to close, and actually upvoted the question. I do notice it&#39;s closed now (for 30 minutes), and this means that I can vote to re-open... though I think the question should be reworded. The list of questions at the end is probably what is prompting the close =&gt; too many question marks = too broad. A single question: &quot;How to emit calls to intrisincs efficiently in JIT code?&quot;, which lists known approaches and their drawbacks/unknowns without &quot;questions&quot; would aim for the same goal, but be formulated in a way less likely to attract downvotes."}, {"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "edited": false, "score": 1, "creation_date": 1555093959, "post_id": 54947302, "comment_id": 98003873, "body": "I appreciate all the feedback and debate from everyone. Just dropping my perspective on this in: Peter hit my intention right on the nose. That was the core question (he also phrased it a lot better than I did). I always feel it necessary to substantiate my questions with my prior research/thought to demonstrate that I have indeed done it and am not just &quot;gimme teh codez&quot;-ing. But the point is well received that my phrasing/formatting could have drawn &quot;too broad&quot; claims. I will reformat to combat this. Thanks everyone! :)"}], "answers": [{"comments": [{"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "edited": false, "score": 1, "creation_date": 1555093414, "post_id": 55647422, "comment_id": 98003664, "body": "Wow! Thank you so much Peter! This is fantastic! You answered questions I didn&#39;t even know I had! If I could still bounty this question, I would absolutely do it and award it to you! I&#39;m going to go back and read this a bunch more times and re-consult your sources. Thank you for all your effort :)"}], "tags": [], "owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "is_accepted": true, "score": 5, "last_activity_date": 1555062691, "last_edit_date": 1592644375, "creation_date": 1555057514, "answer_id": 55647422, "question_id": 54947302, "link": "https://stackoverflow.com/questions/54947302/handling-calls-to-potentially-far-away-ahead-of-time-compiled-functions-from-j/55647422#55647422", "title": "Handling calls to (potentially) far away ahead-of-time compiled functions from JITed code", "body": "<p><strong>Summary</strong>: try to allocate memory near your static code.  But for calls that can't reach with <code>rel32</code>, fall back to <code>call qword [rel pointer]</code> or inline <code>mov r64,imm64</code> / <code>call r64</code>.</p>\n<p>Your mechanism 5. is probably best for performance if you can't make 2. work, but 4. is easy and should be fine.  Direct <code>call rel32</code> needs some branch prediction, too, but it's definitely still better.</p>\n<hr />\n<p>Terminology:  &quot;intrinsic functions&quot; should probably be &quot;helper&quot; functions.  &quot;Intrinsic&quot; usually means either language built-in (e.g. Fortran meaning) or &quot;not a real <em>function</em>, just something that inlines to a machine instruction&quot; (C/C++ / <a href=\"https://doc.rust-lang.org/std/intrinsics/index.html\" rel=\"nofollow noreferrer\">Rust</a> meaning, like for SIMD, or stuff like <code>_mm_popcnt_u32()</code>, <code>_pdep_u32()</code>, or <code>_mm_mfence()</code>).  Your Rust functions are going to compile to real functions that exist in machine code that you're going to call with <code>call</code> instructions.</p>\n<hr />\n<p>Yes, allocating your JIT buffers within +-2GiB of your target functions is obviously ideal, allowing rel32 direct calls.</p>\n<p><strong>The most straightforward would be to use a large static array in the BSS (which the linker will place within 2GiB of your code) and carve your allocations out of that</strong>.  (Use <code>mprotect</code> (POSIX) or <code>VirtualProtect</code> (Windows) to make it executable).</p>\n<p>Most OSes (Linux included) do lazy allocation for the BSS (COW mapping to the zero page, only allocating physical page frames to back that allocation when it's written, just like mmap without <code>MAP_POPULATE</code>), so it only wastes virtual address space to have a 512MiB array in the BSS that you only use the bottom 10kB of.</p>\n<p>Don't make it larger than or close to 2GiB, though, because that will push other things in the BSS too far away.  The default &quot;small&quot; code model (as described in the x86-64 System V ABI) puts all static addresses within 2GiB of each other for RIP-relative data addressing and rel32 call/jmp.</p>\n<p>Downside: you'd have to write at least a simple memory allocator yourself, instead of working with whole pages with mmap/munmap.  But that's easy if you don't need to free anything.  Maybe just generate code starting at an address, and update a pointer once you get to the end and discover how long your code block is.  (But that's not multi-threaded...)  For safety, remember to check when you get to the end of this buffer and abort, or fall back to <code>mmap</code>.</p>\n<hr />\n<p><strong>If your absolute target addresses are in the low 2GiB of virtual address space, use <code>mmap(MAP_32BIT)</code> on Linux</strong>.  (e.g. if your Rust code is compiled into a non-PIE executable for x86-64 Linux.  But that won't be the case for PIE executables (<a href=\"https://stackoverflow.com/questions/43367427/32-bit-absolute-addresses-no-longer-allowed-in-x86-64-linux\">common these days</a>), or for targets in shared libraries.  You can detect this at run-time by checking the address of one of your helper functions.)</p>\n<p>In general (if <code>MAP_32BIT</code> isn't helpful/available), your best bet is probably <strong><code>mmap</code> <em>without</em> <code>MAP_FIXED</code>, but <em>with</em> a non-NULL hint address that you think is free.</strong></p>\n<p>Linux 4.17 introduced <a href=\"http://man7.org/linux/man-pages/man2/mmap.2.html\" rel=\"nofollow noreferrer\"><code>MAP_FIXED_NOREPLACE</code></a> which would let you easily search for a nearby unused region (e.g. step by 64MB and retry if you get <code>EEXIST</code>, then remember that address to avoid searching next time).  Otherwise you could parse <code>/proc/self/maps</code> once at startup to find some unmapped space near the mapping that contains the address of one of your helper functions.  The will be close together.</p>\n<blockquote>\n<p>Note that older kernels which do not recognize the <code>MAP_FIXED_NOREPLACE</code> flag will typically (upon detecting a collision with a  preexisting  mapping) fall back to a &quot;non-MAP_FIXED&quot; type of behavior: they will return an address that is different from the requested address.</p>\n</blockquote>\n<p>In the next higher or lower free page(s) would be ideal for having a non-sparse memory map so the page table doesn't need too many different top-level page directories.  (HW page tables are a radix tree.)  And once you find a spot that works, make future allocations contiguous with that.  If you end up using a lot of space there, the kernel can opportunistically use a 2MB hugepage, and having your pages contiguous again means they share the same parent page directory in the HW page tables so iTLB misses triggering page walks may be <em>slightly</em> cheaper (if those higher levels stay hot in data caches, or even cached inside the pagewalk hardware itself).  And for efficient for the kernel to track as one larger mapping.  Of course, using more of an already-allocated page is even better, if there's room.  Better code density on a page level helps the instruction TLB, and possibly also within a DRAM page (but that's not necessarily the same size as a virtual memory page).</p>\n<hr />\n<p>Then as you do code-gen for each call, <strong>just <em>check</em> whether the target is in range for a <code>call rel32</code></strong> with <code>off == (off as i32) as i64</code><br />\nelse fall back to 10-byte <code>mov r64,imm64</code> / <code>call r64</code>.   (rustcc will compile that to <code>movsxd</code>/<code>cmp</code>, so checking every time only has trivial cost for JIT compile times.)</p>\n<p>(Or 5-byte <code>mov r32,imm32</code> if possible.  OSes that don't support <code>MAP_32BIT</code> might still have the target addresses down there.  Check for that with <code>target == (target as u32) as u64</code>.  The 3rd <code>mov</code>-immediate encoding, 7-byte <code>mov r/m64, sign_extended_imm32</code> is probably not interesting unless you're JITing kernel code for a kernel mapped in the high 2GiB of virtual address space.)</p>\n<p>The beauty of checking and using a direct call whenever possible is that it decouples code-gen from any knowledge about allocating nearby pages or where the addresses come from, and just opportunistically makes good code.  (You might record a counter or log once so you / your users at least notice if your nearby allocation mechanism is failing, because the perf diff won't typically be easily measurable.)</p>\n<hr />\n<h3>Alternatives to mov-imm / call reg</h3>\n<p><code>mov r64,imm64</code> is a 10-byte instruction that's a bit large to fetch/decode, and for the uop-cache to store.  And may take an extra cycle to read from the uop cache on SnB-family according to Agner Fog's microarch pdf (<a href=\"https://agner.org/optimize\" rel=\"nofollow noreferrer\">https://agner.org/optimize</a>).  But modern CPUs have pretty good bandwidth for code-fetch, and robust front-ends.</p>\n<p>If profiling finds that front-end bottlenecks are a big problem in your code, or large code size is causing eviction of other valuable code from L1 I-cache, I'd go with option 5.</p>\n<p>BTW, if any of your functions are variadic, x86-64 System V requires that you pass AL=number of XMM args, you could use <code>r11</code> for the function pointer.  It's call-clobbered and not used for arg-passing.  But RAX (or other &quot;legacy&quot; register) will save a REX prefix on the <code>call</code>.</p>\n<hr />\n<blockquote>\n<ol>\n<li>Allocate Rust functions near where <code>mmap</code> will allocate</li>\n</ol>\n</blockquote>\n<p>No, I don't think there's any mechanism to get your statically compiled functions near where <code>mmap</code> might happen to put new pages.</p>\n<p><code>mmap</code> has more than 4GB of free virtual address space to pick from.  You don't know ahead of time where it's going to allocate.  (Although I think Linux at least does keep some amount of locality, to optimize the HW page tables.)</p>\n<p>You in theory could <em>copy</em> the machine code of your Rust functions, but they probably reference <em>other</em> static code/data with RIP-relative addressing modes.</p>\n<hr />\n<blockquote>\n<ol start=\"3\">\n<li><code>call rel32</code> to stubs that use <code>mov</code>/<code>jmp reg</code></li>\n</ol>\n<p>This seems like it would be detrimental to performance (perhaps interfering with RAS/jump address prediction).</p>\n</blockquote>\n<p>The perf downside is only from having 2 total call/jump instructions for the front-end to get past before it can feed the back-end with useful instructions.  It's not great; 5. is much better.</p>\n<p><strong>This is basically how the PLT works for calls to shared-library functions on Unix/Linux, and will perform the same</strong>.  Calling through a PLT (Procedure Linking Table) stub function is almost exactly like this.  So the performance impacts have been well-studied and compared with other ways of doing things.  We know that dynamic library calls aren't a performance disaster.</p>\n<p><a href=\"https://stackoverflow.com/questions/47025995/asterisk-before-an-address-and-push-instructions-where-is-it-being-pushed-to\">Asterisk before an address and push instructions, where is it being pushed to?</a> shows AT&amp;T disassembly of one, or single-step a C program like <code>main(){puts(&quot;hello&quot;); puts(&quot;world&quot;);}</code> if you're curious.  (On the first call, it pushes an arg and jumps to a lazy dynamic linker function; on subsequent calls the indirect jump target is the address of the function in the shared library.)</p>\n<p><a href=\"https://stackoverflow.com/questions/43048932/why-does-the-plt-exist-in-addition-to-the-got-instead-of-just-using-the-got\">Why does the PLT exist in addition to the GOT, instead of just using the GOT?</a> explains more.  The <code>jmp</code> whose address is updated by lazy linking is <code>jmp qword [xxx@GOTPLT]</code>.  (And yes, the PLT really does use a memory-indirect <code>jmp</code> here, even on i386 where a <code>jmp rel32</code> that gets rewritten would work.  IDK if GNU/Linux ever historically used to rewrite the offset in a <code>jmp rel32</code>.)</p>\n<p><strong>The <code>jmp</code> is just a standard tailcall, and does <em>not</em> unbalance the Return-Address predictor Stack</strong>.  The eventual <code>ret</code> in the target function will return to the instruction after the original <code>call</code>, i.e. to the address that <code>call</code> pushed onto the call stack and onto the microarchitectural RAS.  Only if you used a push / ret (like a &quot;retpoline&quot; for Spectre mitigation) would you unbalance the RAS.</p>\n<p>But the code in <a href=\"https://stackoverflow.com/questions/29797866/jumps-for-a-jit-x86-64/29809246#29809246\">Jumps for a JIT (x86_64)</a> that you linked is unfortunately terrible (see my comment under it).  It <em>will</em> break the RAS for future returns.  You'd think it would only break it for this one with the call (to get a return address to be adjusted) should balance out the push/ret, but actually <code>call +0</code> is a special case that doesn't go on the RAS in most CPUs: <a href=\"http://blog.stuffedcow.net/2018/04/ras-microbenchmarks\" rel=\"nofollow noreferrer\">http://blog.stuffedcow.net/2018/04/ras-microbenchmarks</a>.  (calling over a <code>nop</code> could change that I guess, but the whole thing is totally insane vs. <code>call rax</code> unless it's trying to defend against Spectre exploits.)  Normally on x86-64, you use a RIP-relative LEA to get a nearby address into a register, not <code>call/pop</code>.</p>\n<hr />\n<blockquote>\n<ol start=\"4\">\n<li>inline <code>mov r64, imm64</code> / <code>call reg</code></li>\n</ol>\n</blockquote>\n<p>This is probably better than 3; The front-end cost of larger code-size is probably lower than the cost of calling through a stub that uses <code>jmp</code>.</p>\n<p><strong>But this is also probably good enough</strong>, especially if your alloc-within-2GiB methods work well enough most of the time on most of the targets you care about.</p>\n<p>There may be cases where it's slower than 5. though.  Branch prediction hides the latency of fetching and checking the function pointer from memory, assuming that it predicts well.  (And usually it will, or else it runs so infrequently that it's not performance relevant.)</p>\n<hr />\n<blockquote>\n<ol start=\"5\">\n<li><code>call qword [rel nearby_func_ptr]</code></li>\n</ol>\n</blockquote>\n<p><strong>This is how <code>gcc -fno-plt</code> compiles calls to shared-library functions on Linux (<code>call [rip + symbol@GOTPCREL]</code>), and how Windows DLL function calls are normally done.</strong>  (This is like one of the suggestions in <a href=\"http://www.macieira.org/blog/2012/01/sorry-state-of-dynamic-libraries-on-linux/\" rel=\"nofollow noreferrer\">http://www.macieira.org/blog/2012/01/sorry-state-of-dynamic-libraries-on-linux/</a>)</p>\n<p><code>call [RIP-relative]</code> is 6 bytes, only 1 byte larger than <code>call rel32</code>, so it has a negligible impact on code-size vs. calling a stub.  Fun fact: you will sometimes see <code>addr32 call rel32</code> in machine code (the address size prefix has no effect except for padding).  This comes from a linker relaxing a <code>call [RIP + symbol@GOTPCREL]</code> to a <code>call rel32</code> if the symbol with non-hidden ELF visibility was found in another <code>.o</code> during linking, not a different shared object after all.</p>\n<p>For shared library calls, this is usually better than PLT stubs, with the only downside being slower program startup because it requires early binding (non-lazy dynamic linking).  This isn't an issue for you; the target address is known ahead of code-gen time.</p>\n<p><a href=\"https://gcc.gnu.org/ml/gcc-patches/2015-05/msg00225.html\" rel=\"nofollow noreferrer\">The patch author tested its performance</a> vs. a traditional PLT on some unknown x86-64 hardware. Clang is maybe a worst-case scenario for shared library calls, because it makes <em>many</em> calls to small LLVM functions that don't take much time, and it's long running so early-binding startup overhead is negligible.  After using <code>gcc</code> and <code>gcc -fno-plt</code> to compile clang, the time for <code>clang -O2 -g</code> to compile tramp3d goes from 41.6s (PLT) to 36.8s (-fno-plt).  <code>clang --help</code> becomes slightly slower.</p>\n<p>(x86-64 PLT stubs use <code>jmp qword [symbol@GOTPLT]</code>, not <code>mov r64,imm64</code>/<code>jmp</code> though.  A memory-indirect <code>jmp</code> is only a single uop on modern Intel CPUs, so it's cheaper on a correct prediction, but maybe slower on an incorrect prediction, especially if the GOTPLT entry misses in cache.  If it's used frequently, it will typically predict correctly, though.  But anyway a 10-byte <code>movabs</code> and a 2-byte <code>jmp</code> can fetch as a block (if it fits in a 16-byte aligned fetch block), and decode in a single cycle, so 3. is not totally unreasonable.  But this is better.)</p>\n<p><strong>When allocating space for your pointers, remember that they're fetched as data, into L1d cache</strong>, and with a dTLB entry not iTLB.  <strong>Don't interleave them with code, that would waste space in the I-cache</strong> on this data, and waste space in D-cache on lines that contain one pointer and mostly code.  Group your pointers together in a separate 64-byte chunk from code so the line doesn't need to be in both L1I and L1D.  It's fine if they're in the same <em>page</em> as some code; they're read-only so won't cause self-modifying-code pipeline nukes.</p>\n"}], "owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 618, "favorite_count": 4, "accepted_answer_id": 55647422, "answer_count": 1, "score": 14, "last_activity_date": 1565659531, "creation_date": 1551452823, "last_edit_date": 1555095350, "question_id": 54947302, "link": "https://stackoverflow.com/questions/54947302/handling-calls-to-potentially-far-away-ahead-of-time-compiled-functions-from-j", "title": "Handling calls to (potentially) far away ahead-of-time compiled functions from JITed code", "body": "<p>This question was put on hold as too broad, presumably because of the research I included in an effort to \"show my work\" instead of asking a low effort question. To remedy this, allow me to summarize the entire question in a single sentence (credit to @PeterCordes for this phrase):</p>\n\n<blockquote>\n  <p>How do I efficiently call (x86-64) ahead-of-time compiled functions (that I control, may be further than 2GB away) from JITed code (that I am generating)?</p>\n</blockquote>\n\n<p>This alone, I suspect, would be put on hold as \"too broad.\" In particular, it lacks a \"what have you tried.\" So, I felt the need to add additional information showing my research/thinking and what I have tried. Below is a somewhat stream of consciousness of this.</p>\n\n<p><strong>Note that none of the questions posed below here are ones I expect to be answered; they are more rhetorical.</strong> Their purpose is to demonstrate why I can't answer the above question (despite my research, I lack the experience in this area to make definitive statements such as @PeterCordes's \"branch prediction hides the latency of fetching and checking the function pointer from memory, assuming that it predicts well.\"). Also note that the Rust component is largely irrelevant here as this is an assembly issue. My reasoning for including it was the ahead-of-time compiled functions are written in Rust, so I was unsure if there was something that Rust did (or instructed LLVM to do) that could be advantageous in this situation. It is totally acceptable for an answer to not consider Rust at all; in fact, I expect this will be the case.</p>\n\n<p>Think of the following as scratch work on the back of a math exam:</p>\n\n<hr>\n\n<p><em>Note:</em> I muddled the term intrinsics here. As pointed out in the comments, \"ahead-of-time compiled functions\" is a better description. Below I'll abbreviate that <em>AOTC</em> functions.</p>\n\n<p>I'm writing a JIT in Rust (although Rust is only relevant to a bit of my question, the bulk of it relates to JIT conventions). I have <em>AOTC</em> functions that I've implemented in Rust that I need to be able to <code>call</code> from code emitted by my JIT. My JIT <code>mmap(_, _, PROT_EXEC, MAP_ANONYMOUS | MAP_SHARED)</code>s some pages for the jitted code. I have the addresses of my <em>AOTC</em> functions, but unfortunately they are much further away than a 32-bit offset. I'm trying to decide now how to emit calls to these <em>AOTC</em> functions. I've considered the following options (these are not questions to be answered, just demonstrating why I can't answer the core question of this SO thread myself):</p>\n\n<ol>\n<li><p>(Rust specific) Somehow make Rust place the <em>AOTC</em> functions close to (maybe on?) the heap so that the <code>call</code>s will be within a 32-bit offset. It's unclear that that is possible with Rust (There is a way to specify <a href=\"https://doc.rust-lang.org/1.5.0/book/advanced-linking.html\" rel=\"noreferrer\">custom linker args</a>, but I can't tell to what those are applied and if I could target a single function for relocation. And even if I could where do I put it?). It also seems like this could fail if the heap is large enough.</p></li>\n<li><p>(Rust specific) Allocate my JIT pages closer to the <em>AOTC</em> functions. This could be achieved with <code>mmap(_, _, PROT_EXEC, MAP_FIXED)</code>, but I'm unsure how to pick an address that wouldn't clobbering existing Rust code (and keeping within arch restrictions--is there a sane way to get those restrictions?).</p></li>\n<li><p>Create stubs within the JIT pages that handle the absolute jump (code below), then <code>call</code> the stubs. This has the benefit of the (initial) call site in the JITted code being a nice small relative call. But it feels wrong to have to jump through something. This seems like it would be detrimental to performance (perhaps interfering with RAS/jump address prediction). Additionally, it seems like this jump would be slower since its address is indirect and it depends on the <code>mov</code> for that address.</p></li>\n</ol>\n\n\n\n<pre><code>mov rax, {ABSOLUTE_AOTC_FUNCTION_ADDRESS}\njmp rax\n</code></pre>\n\n<ol start=\"4\">\n<li><p>The reverse of (3), just inlining the above at each intrinsic call site in the JITed code. This resolves the indirection issue, but makes the JITted code larger (perhaps this has instruction cache and decoding consequences). It still has the issue that the jump is indirect and depends on the <code>mov</code>.</p></li>\n<li><p>Place the addresses of the <em>AOTC</em> functions on a PROT_READ (only) page near the JIT pages. Make all the call sites near, absolute indirect calls (code below). This removes the second level of indirection from (2). But the encoding of this instruction is unfortunately large (6 bytes), so it has the same issues as (4). Additionally, now instead of depending on a register, jumps unnecessarily (insofar as the address is known at JIT time) depend on memory, which certainly has performance implications (despite perhaps this page being cached?).</p></li>\n</ol>\n\n\n\n<pre><code>aotc_function_address:\n    .quad 0xDEADBEEF\n\n# Then at the call site\ncall qword ptr [rip+aotc_function_address]\n</code></pre>\n\n<ol start=\"6\">\n<li><p><strike> Futz with a segment register to place it closer to the <em>AOTC</em> functions so that calls can be made relative to that segment register. The encoding of such a call is long (so maybe this has decoding pipeline issues), but other than that this largely avoids lots of the tricky bits of everything before it. But, maybe calling relative to a non-<code>cs</code> segment performs poorly. Or maybe such futzing is not wise (messes with the Rust runtime, for example).</strike> (as pointed out by @prl, this doesn't work without a far call, which is terrible for performance)</p></li>\n<li><p>Not really a solution, but I could make the compiler 32-bit and not have this problem at all. That's not really a great solution and it also would prevent me from using the extended general purpose registers (of which I utilize all).</p></li>\n</ol>\n\n<p>All of the options presented have drawbacks. Briefly, 1 and 2 are the only ones that don't seem to have performance impacts, but it's unclear if there is a non-hacky way to achieve them (or any way at all for that matter). 3-5 are independent of Rust, but have obvious performance drawbacks.</p>\n\n<p>Given this stream of consciousness, I arrived at the following rhetorical question (which don't need explicit answers) to demonstrate that I lack the knowledge to answer the core question of this SO thread by myself. <strong>I have struck them to make it abundantly clear that I am not posing all of these are part of my question.</strong></p>\n\n<p><strike></p>\n\n<ol>\n<li><p>For approach (1), is it possible to force Rust to link certain <code>extern \"C\"</code> functions at a specific address (near the heap)? How should I choose such an address (at compile time)? Is it safe to assume that any address returned by <code>mmap</code> (or allocated by Rust) will be within a 32 bit offset of this location?</p></li>\n<li><p>For approach (2), how can I find a suitable place to place the JIT pages (such that it doesn't clobber existing Rust code)?</p></li>\n</ol>\n\n<p><strong>And some JIT (non-Rust) specific questions:</strong></p>\n\n<ol>\n<li><p>For approach (3), will the stubs hamper performance enough that I should care? What about the indirect <code>jmp</code>? I know this somewhat resembles linker stubs, except as I understand linker stubs are at least only resolved once (so they don't need to be indirect?). Do any JITs employ this technique?</p></li>\n<li><p>For approach (4), if the indirect call in 3 is okay, is inlining the calls worth it? If JITs typically employ approach (3/4) is this option better?</p></li>\n<li><p>For approach (5), is the dependence of the jump on memory (given that the address is known at compile time) bad? Would that make it less performant that (3) or (4)? Do any JITs employ this technique?</p></li>\n<li><p>For approach (6), is such futzing unwise? (Rust specific) Is there a segment register available (not used by the runtime or ABI) for this purpose? Will calls relative to a non-<code>cs</code> segment be as performant as those relative to <code>cs</code>?</p></li>\n<li><p>And <strong>finally (and most importantly)</strong>, is there a better approach (perhaps employed more commonly by JITs) that I'm missing here?</p></li>\n</ol>\n\n<p></strike></p>\n\n<p>I can't implement (1) or (2) without my Rust questions having answers. I could, of course, implement and benchmark 3-5 (perhaps 6, although it would be nice to know about the segment register futzing beforehand), but given that these are vastly different approaches, I was hoping there was existing literature about this that I couldn't find, because I didn't know the right terms to google for (I'm also currently working on those benchmarks). Alternatively maybe someone who's delved into JIT internals can share their experience or what they've commonly seen?</p>\n\n<p>I am aware of this question: <a href=\"https://stackoverflow.com/q/29797866/568785\">Jumps for a JIT (x86_64)</a>. It differs from mine because it is talking about stringing together basic blocks (and the accepted solution is way too many instructions for a frequently called intrinsic). I am also aware of <a href=\"https://stackoverflow.com/questions/19552158/call-an-absolute-pointer-in-x86-machine-code\">Call an absolute pointer in x86 machine code</a>, which while it discusses similar topics to mine, is different, because I am not assuming that absolute jumps are necessary (approaches 1-2 would avoid them, for example).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1551442523, "post_id": 54943698, "comment_id": 96651555, "body": "<code>badsort</code> calls itself on a <code>Vec&lt;Vec&lt;T&gt;&gt;</code>, which is going to call itself on a <code>Vec&lt;Vec&lt;Vec&lt;Vec&lt;T&gt;&gt;&gt;&gt;</code> which is going to call itself etc etc"}, {"owner": {"reputation": 171, "user_id": 982285, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2788481a6b5033b81f5299bf41c3b712?s=128&d=identicon&r=PG", "display_name": "dutchie", "link": "https://stackoverflow.com/users/982285/dutchie"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551444605, "post_id": 54943698, "comment_id": 96652755, "body": "@mcarton Yes, obviously we&#39;re going to hit recursion limits pretty fast once the list is non-trivial. I suppose the compiler isn&#39;t smart enough (or isn&#39;t smart enough early enough) to figure out that if we never call <code>badsort</code> with <code>k</code> larger than some small value, it doesn&#39;t need to generate that many type specialisations."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1551445080, "post_id": 54943698, "comment_id": 96653035, "body": "That&#39;s not how static typing works, the compiler doesn&#39;t care about the value of the parameter <code>k</code> to resolve the types in your function."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551455913, "post_id": 54943698, "comment_id": 96659167, "body": "Somewhat similar to <a href=\"https://stackoverflow.com/a/54617718/147192\">stackoverflow.com/a/54617718/147192</a> =&gt; static typing doesn&#39;t care about &quot;which branch&quot;, first the types must line up, and here you have infinite types/functions being instantiated."}, {"owner": {"reputation": 171, "user_id": 982285, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2788481a6b5033b81f5299bf41c3b712?s=128&d=identicon&r=PG", "display_name": "dutchie", "link": "https://stackoverflow.com/users/982285/dutchie"}, "edited": false, "score": 0, "creation_date": 1551459945, "post_id": 54943698, "comment_id": 96661292, "body": "Ah right, of course. I originally saw this implemented in Haskell, where it works fine, hence my confusion on why this might be something to do with the monomorphisation. I suppose more consideration and thought is required: an interesting learning opportunity!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1551462076, "post_id": 54943698, "comment_id": 96662297, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25296195/why-are-recursive-struct-types-illegal-in-rust\">Why are recursive struct types illegal in Rust?</a>"}], "owner": {"reputation": 171, "user_id": 982285, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2788481a6b5033b81f5299bf41c3b712?s=128&d=identicon&r=PG", "display_name": "dutchie", "link": "https://stackoverflow.com/users/982285/dutchie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 169, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1551444362, "creation_date": 1551439607, "last_edit_date": 1551444362, "question_id": 54943698, "link": "https://stackoverflow.com/questions/54943698/recursion-limit-when-instantiating-unused-rust-type", "title": "Recursion limit when instantiating (unused?) Rust type", "body": "<p>I implemented <a href=\"https://sites.math.northwestern.edu/~mlerma/papers/inefficient_algorithms.pdf\" rel=\"nofollow noreferrer\">worstsort</a> in Rust:</p>\n\n<pre><code>fn bubblesort&lt;T: PartialOrd&gt;(l: &amp;mut [T]) {\n    for i in 1..l.len() {\n        for j in 0..l.len() - i {\n            if l[j + 1] &lt; l[j] {\n                l.swap(j + 1, j);\n            }\n        }\n    }\n}\n\nfn permutations&lt;T: Clone&gt;(l: &amp;[T]) -&gt; Vec&lt;Vec&lt;T&gt;&gt; {\n    if l.len() &lt;= 1 {\n        return vec![l.to_vec()];\n    }\n\n    let mut res = Vec::new();\n    for i in 0..l.len() {\n        let mut lcopy = l.to_vec();\n        lcopy.remove(i);\n        let p = permutations(&amp;lcopy);\n        for perm in p {\n            let mut fullperm = vec![l[i].clone()];\n            fullperm.extend(perm);\n            res.push(fullperm);\n        }\n    }\n    res\n}\n\npub fn badsort&lt;T: PartialOrd + Clone&gt;(k: usize, l: &amp;mut [T]) {\n    if k == 0 {\n        bubblesort(l);\n    } else {\n        let mut p = permutations(l);\n        badsort(k - 1, &amp;mut p);\n        l.clone_from_slice(&amp;p[0]);\n    }\n}\n\npub fn worstsort&lt;T, F&gt;(l: &amp;mut [T], f: F)\nwhere\n    T: PartialOrd + Clone,\n    F: FnOnce(usize) -&gt; usize,\n{\n    badsort(f(l.len()), l);\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    #[test]\n    fn badsort_zero() {\n        let mut unsorted = vec![8, 3, 5];\n        badsort(0, &amp;mut unsorted);\n        assert_eq!(unsorted, vec![3, 5, 8]);\n    }\n    #[test]\n    fn worstsort_id() {\n        let mut unsorted = vec![8, 3, 5];\n        worstsort(&amp;mut unsorted, |n| n);\n        assert_eq!(unsorted, vec![3, 5, 8]);\n    }\n}\n</code></pre>\n\n<p>It compiles and checks fine, until I tried to write tests that actually calling the <code>worstsort</code> and <code>badsort</code> functions, and <code>cargo test</code> gives an error:</p>\n\n<pre><code>error: reached the recursion limit while instantiating `badsort::&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;i32&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n</code></pre>\n\n<p>I get this error even when calling <code>badsort(0, l)</code>, which should just be bubblesort, with no recursive calls whatsoever. My assumption is that rustc is trying to generate monomorphised versions of <code>badsort</code> for every possible <code>usize</code> (I swapped the type to <code>u8</code> and got the same error), but I don't understand why: it errors whatever the argument is, even when it doesn't recursively call itself at all!  I tried setting the recursion limit all the way up to <code>#![recursion_limit=\"1024\"]</code>, but it still hits this limit and fails, even with <code>u8</code>.</p>\n\n<p>Is my guess correct? Is there a way to get this (admittedly perverse) code to compile and run at all?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1551434709, "post_id": 54942045, "comment_id": 96647396, "body": "You can answer your first question by looking at the error."}, {"owner": {"reputation": 2012, "user_id": 5987669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be176d2b1a1b2a5d648abdb75dc1b15?s=128&d=identicon&r=PG&f=1", "display_name": "Locke", "link": "https://stackoverflow.com/users/5987669/locke"}, "edited": false, "score": 0, "creation_date": 1551435191, "post_id": 54942045, "comment_id": 96647645, "body": "<code>usize</code> implements <code>copy</code> so when you call <code>f.a.len()</code> you get a new usize. The borrow only lasts for the duration of the call to the length function. However, when you create the immutable iterator (you should be using <code>iter_mut</code>), you are borrowing <code>f</code> to use in the iterator. When it attempts to borrow f again to get the length of b, it finds it is already being borrowed it errors."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1551435946, "post_id": 54942045, "comment_id": 96648010, "body": "In loop A you just get the length value and loop with that value. But with iter() function you iterate over vector&#39;s iterator . This is the main difference"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551444942, "post_id": 54942045, "comment_id": 96652947, "body": "A <code>Vec</code> is not an array."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1551444171, "last_edit_date": 1551444171, "creation_date": 1551438146, "answer_id": 54943301, "question_id": 54942045, "link": "https://stackoverflow.com/questions/54942045/accessing-two-vectors-in-a-struct-locked-by-a-mutex/54943301#54943301", "title": "Accessing two vectors in a struct locked by a mutex", "body": "<p>You can access to two vector in a struct like following:</p>\n\n<pre><code>use std::mem;\n\n#[derive(Debug)]\npub struct TwoArrays {\n    pub a: Vec&lt;i32&gt;,\n    pub b: Vec&lt;i32&gt;,\n}\n\nfn add_arrays(mut foo: TwoArrays) {\n    let a = foo.a.clone();\n    let mut b = foo.b.clone();\n\n    for i in a.iter() {\n        let mut index = 0;\n        for _j in b.iter_mut() {\n            let mut new_value = i.clone() + foo.b[index as usize].clone();\n            mem::swap(&amp;mut foo.b[index as usize], &amp;mut new_value);\n            index = index + 1;\n        }\n    }\n\n    println!(\"Arrays A: {:?}\", &amp;foo.a);\n    println!(\"Arrays A: {:?}\", &amp;foo.b);\n}\n\nfn main() {\n    let a = vec![1i32, 2i32, 3i32];\n    let b = vec![4i32, 5i32, 6i32];\n    let two_arrays = TwoArrays { a, b };\n    // let foo = Arc::new(Mutex::new(two_arrays));\n\n    add_arrays(two_arrays);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=51fc01e27e179456ca9938e3789a54d3\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<blockquote>\n  <p>Why is there an immutable borrow for f?</p>\n</blockquote>\n\n<p>Because you tried to iterate it with <code>iter()</code> not the <code>iter_mut()</code></p>\n\n<blockquote>\n  <p>And why does this not happen when I pass TwoArrays directly? It only happens when I pass it in as an <code>Arc&lt;Mutex&lt;TwoArrays&gt;&gt;</code></p>\n</blockquote>\n\n<p>You can pass it as naked struct without the need of <code>Arc&lt;Mutex&lt;&gt;&gt;</code> with the sample code.</p>\n\n<p>If you insist on using <code>Arc&lt;Mutex&lt;&gt;&gt;</code> to pass the same object around with an atomic reference you can change the function signature to the following:</p>\n\n<pre><code>fn add_arrays(mut foo: Arc&lt;Mutex&lt;TwoArrays&gt;&gt;)\n</code></pre>\n\n<p>And you need to <code>lock()</code> and get that reference from the <code>Arc</code> with following:</p>\n\n<pre><code>let foo = foo.lock().unwrap();\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72f6866da162d1124931a65bae1ed78d\" rel=\"nofollow noreferrer\">Playground With Arc Usage</a></p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1551444839, "last_edit_date": 1551444839, "creation_date": 1551443665, "answer_id": 54944797, "question_id": 54942045, "link": "https://stackoverflow.com/questions/54942045/accessing-two-vectors-in-a-struct-locked-by-a-mutex/54944797#54944797", "title": "Accessing two vectors in a struct locked by a mutex", "body": "<p>When you unwrap the <code>LockResult</code> you get a <code>MutexGuard</code>, and <strong>not</strong> directly a <code>TwoArrays</code>. You can use it as if it was a <code>TwoArrays</code> because it implements <code>Deref</code> and <code>DerefMut</code>.</p>\n\n<p>When you try to write 2 loops, you try to use both <code>deref</code> and <code>deref_mut</code> at once: that's impossible:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct TwoArrays {\n    pub a: Vec&lt;i32&gt;,\n    pub b: Vec&lt;i32&gt;,\n}\n\nfn add_arrays(mut foo: Arc&lt;Mutex&lt;TwoArrays&gt;&gt;) {\n    let mut f = foo.lock().unwrap();\n\n    //Loop B: does not compile\n    for i in f.a.iter() {\n          //  ^~~~~~~~~~~~~~~~~~~ Implicit call to `deref` here.\n        for j in 0..f.b.len() {\n          //         ^~~~~~~~~~~~ Another implicit call to `deref` here.\n            f.b[j] += i;\n          // ^~~~~~~~~~~~~~~~~~~~ Implicit call to `deref_mut` here.\n        }\n    }\n}\n</code></pre>\n\n<p>If you <code>deref_mut</code> once before doing the loops, everything works fine:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{sync::{Arc, Mutex}, ops::DerefMut};\n\npub struct TwoArrays {\n    pub a: Vec&lt;i32&gt;,\n    pub b: Vec&lt;i32&gt;,\n}\n\nfn add_arrays(foo: &amp;mut Arc&lt;Mutex&lt;TwoArrays&gt;&gt;) {\n    let mut mutex_guard = foo.lock().unwrap();\n    let real_two_arrays = mutex_guard.deref_mut();\n\n    for i in &amp;mut real_two_arrays.a {\n        for j in &amp;real_two_arrays.b {\n            *i += *j;\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 783, "user_id": 141678, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c6ac9c37080005ec9bb4798589705bb9?s=128&d=identicon&r=PG", "display_name": "Jonas Meyer", "link": "https://stackoverflow.com/users/141678/jonas-meyer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "closed_date": 1551444784, "accepted_answer_id": 54944797, "answer_count": 2, "score": 4, "last_activity_date": 1551444920, "creation_date": 1551433982, "last_edit_date": 1551444920, "question_id": 54942045, "link": "https://stackoverflow.com/questions/54942045/accessing-two-vectors-in-a-struct-locked-by-a-mutex", "closed_reason": "Duplicate", "title": "Accessing two vectors in a struct locked by a mutex", "body": "<p>I have a struct with two vectors that is passed through a function while in a <code>Arc&lt;Mutex&lt;TwoArrays&gt;&gt;</code>.</p>\n\n<pre><code>pub struct TwoArrays {\n    pub a: Vec&lt;i32&gt;,\n    pub b: Vec&lt;i32&gt;,\n}\n\nfn add_arrays(mut foo: Arc&lt;Mutex&lt;TwoArrays&gt;&gt;) {\n    let mut f = foo.lock().unwrap();\n    //Loop A: compiles\n    for i in 0..f.a.len() {\n        for j in 0..f.b.len() {\n            f.b[j] += f.a[i];\n        }\n    }\n    //Loop B: does not compile\n    for i in f.a.iter() {\n        for j in 0..f.b.len() {\n            f.b[j] += i;\n        }\n    }\n}\n</code></pre>\n\n<p>When I make a loop that uses an iterator, with another loop writing inside(Loop B), the compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `f` as mutable because it is also borrowed as immutable\n</code></pre>\n\n<p>Loop A Compiles.</p>\n\n<ul>\n<li>Why is there a immutable borrow on f? </li>\n<li>Can I make it only borrow each array individually? That is, a mutable borrow of <code>f.b</code> and a immutable borrow of <code>f.a</code>?</li>\n<li>Why does this not happen when I pass <code>TwoArrays</code> directly? It only happens when I pass it in as an <code>Arc&lt;Mutex&lt;TwoArrays&gt;&gt;</code></li>\n</ul>\n"}, {"tags": ["rust", "set", "setter"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1551412448, "post_id": 54937650, "comment_id": 96639157, "body": "I&#39;m not sure what your question is, but <code>self.bar = val;</code> would have worked fine."}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1551412618, "post_id": 54937650, "comment_id": 96639190, "body": "Ah, you are correct. I am curious though, because I thought that &quot;bar&quot; is immutable?"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1551412697, "post_id": 54937650, "comment_id": 96639199, "body": "bar&#39;s mutability is inherited from the object which it is a member of, in this case, <code>*self</code>."}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1551412710, "post_id": 54937650, "comment_id": 96639204, "body": "Does a struct&#39;s mutability inherent to all its members? This experiment seems to imply so."}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1551412735, "post_id": 54937650, "comment_id": 96639213, "body": "Ah, perfect. Thank you"}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1551412805, "post_id": 54937650, "comment_id": 96639228, "body": "With that said, is there ever a reason to declare a struct&#39;s inner-member as mutable if all you have to do is declare an initiated struct as mutable?"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1551412866, "post_id": 54937650, "comment_id": 96639241, "body": "There is no concept of a mutable member. All members inherit the mutability of the object of which they are a part."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1551443502, "post_id": 54937650, "comment_id": 96652115, "body": "There is <i>kind of</i> a concept of a mutable member: <code>UnsafeCell</code>. You can use <code>UnsafeCell</code> (or something based on it, like <code>Cell</code>, <code>RefCell</code>, atomics, or <code>Mutex</code>) to have a member of a struct that is mutable even with only a shared reference to the struct. But that route <i>does</i> make mutating the member more syntactically complicated."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1551468398, "post_id": 54937650, "comment_id": 96664955, "body": "While the answer is fine, I don&#39;t think this question is a good fit for Stack Overflow, which favors questions with clear-cut answers and not so much open-ended discussions. A discussion forum like users.rust-lang.org is where I would usually suggest posting something like this. If you can rewrite your question to <i>be</i> more of a question -- like &quot;how do I set a member of a struct?&quot; -- then SO would be more appropriate."}], "answers": [{"tags": [], "owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "is_accepted": false, "score": 3, "last_activity_date": 1551413226, "creation_date": 1551413226, "answer_id": 54937800, "question_id": 54937650, "link": "https://stackoverflow.com/questions/54937650/on-rust-setters/54937800#54937800", "title": "On Rust Setters", "body": "<p>Mutability is inherited from the parent object, in this case \"my_person\", because it was declared as \"mut\". As such, as Benjamin Lindley pointed, all you have to do is replace:</p>\n\n<pre><code>*(&amp;mut self.bar) = val;\n</code></pre>\n\n<p>with:</p>\n\n<pre><code>self.bar = val;\n</code></pre>\n\n<p>Lesson: mutability propagates from the parent object downwards into the structure if the object is declared mutable</p>\n"}], "owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 332, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1551731257, "creation_date": 1551411974, "last_edit_date": 1551731257, "question_id": 54937650, "link": "https://stackoverflow.com/questions/54937650/on-rust-setters", "title": "On Rust Setters", "body": "<p>I have looked on Stack Overflow for ways to set values within a declared mutable struct. The answers did not look straightforward, and for me, strayed too far away from simplicity that I enjoy. I eventually found out from tinkering around that this code works as desired:</p>\n\n<pre><code>struct FooStruct {\n    bar: i32,\n}\n\nimpl FooStruct {\n\n    fn set(&amp;mut self, val: i32){\n        //*self.first_name_mut() = val;\n        *(&amp;mut self.bar) = val;\n    }\n\n}\n\nfn main() {\n    let mut k = 45;\n    let mut my_person = FooStruct { bar: 2};\n\n    println!(\"Fn: {}\", my_person.bar);\n    my_person.set(k);\n    println!(\"Fn: {}\", my_person.bar); //value is printed as 45\n    k = 33; // set k-value\n    println!(\"Fn: {}\", my_person.bar); //the value in the struct remains as 45, unchanged\n}\n</code></pre>\n\n<p>Notice how simple it is to implement a setter:</p>\n\n<pre><code>*(&amp;mut self.bar) = val;\n</code></pre>\n\n<p>My question is: is there a catch to this simplicity of setting a value? People have went as far as creating macros for getting/setting, so I'm wondering why this method isn't used. I'm coming from Java-land, where setting is a mindless deal (this.value = input); upon arrival where rustaceans live, I expected OOP-like features to be a nuisance to implement.</p>\n\n<p>While I hope this post helps people implement a setter, I also want an experienced user to explain what the line of code above is doing as well as any pitfalls that I have not (possibly yet) seen.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "is_accepted": true, "score": 4, "last_activity_date": 1551414964, "creation_date": 1551414964, "answer_id": 54938004, "question_id": 54937415, "link": "https://stackoverflow.com/questions/54937415/apply-attribute-to-macro-expansion/54938004#54938004", "title": "Apply attribute to macro expansion", "body": "<blockquote>\n  <p>Is there any practical workaround for this limitation?</p>\n</blockquote>\n\n<p>Yes. By allowing the macro itself to accept attributes through the <a href=\"https://doc.rust-lang.org/nightly/reference/macros-by-example.html\" rel=\"nofollow noreferrer\"><code>meta</code> macro fragment</a> you can work around the problem like so:</p>\n\n<pre><code>#![cfg(test)]\n\nmacro_rules! my_test {\n    ($(#[$m:meta])* // This accepts `#[foo] #[bar(..)] ..`\n     $name:ident) =&gt; {\n       $(#[$m])* // This expands the attributes.\n       #[test]\n       fn $name() {\n         assert_eq!(6, 3 + 3);\n       }\n    };\n}\n\nmy_test!(good_test_a);\n\nmy_test!(good_test_b);\n\n// You can pass in `#[ignore]` or any series of attributes you wish:\nmy_test!(#[ignore] bad_test_a);\n\nmy_test!(#[ignore] bad_test_b);\n</code></pre>\n\n<p>Running this, we get:</p>\n\n<pre><code>running 4 tests\ntest bad_test_a ... ignored\ntest bad_test_b ... ignored\ntest good_test_a ... ok\ntest good_test_b ... ok\n\ntest result: ok. 2 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out\n</code></pre>\n"}], "owner": {"reputation": 21653, "user_id": 100335, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/e470fa78a9b8022d24b2780c5ffc33fe?s=128&d=identicon&r=PG", "display_name": "kpozin", "link": "https://stackoverflow.com/users/100335/kpozin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 1, "accepted_answer_id": 54938004, "answer_count": 1, "score": 2, "last_activity_date": 1551414964, "creation_date": 1551409967, "question_id": 54937415, "link": "https://stackoverflow.com/questions/54937415/apply-attribute-to-macro-expansion", "title": "Apply attribute to macro expansion", "body": "<p>I'm using macros to generate tests. Imagine a simple definition like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! my_test {\n    ($name:ident) =&gt; {\n       #[test]\n       fn $name() {\n         assert_eq!(6, 3 + 3);\n       }\n    };\n}\n</code></pre>\n\n<p>I would like to disable some of the tests I generated this way:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>my_test!(good_test_a);\n\nmy_test!(good_test_b);\n\n#[ignore]\nmy_test!(bad_test_a);\n\n#[ignore]\nmy_test!(bad_test_b);\n</code></pre>\n\n<p>However, according to <a href=\"https://github.com/rust-lang/rust/issues/57679#issuecomment-455127560\" rel=\"nofollow noreferrer\">this GitHub issue</a>,</p>\n\n<blockquote>\n  <p>attributes applied to macro calls are eliminated during expansion of the macro.</p>\n</blockquote>\n\n<p>And indeed, all of the tests run; none is ignored. (See <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=48e8ab795db10ffa45daac8cea08eac6\" rel=\"nofollow noreferrer\">Rust Playground</a>.)</p>\n\n<p>Is there any practical workaround for this limitation? Is there perhaps some other way of invoking the macro that would allow the <code>#[ignore]</code> attribute to be applied to its expansion?</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 1, "creation_date": 1551409354, "post_id": 54936793, "comment_id": 96638643, "body": "Yes, you got me. I came from functional languages where iterators didn&#39;t have nearly this level of noise. But, Rust has many niceties to balance out, so I&#39;m still hanging in there."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1551405137, "last_edit_date": 1551405137, "creation_date": 1551404575, "answer_id": 54936793, "question_id": 54936304, "link": "https://stackoverflow.com/questions/54936304/finding-most-frequently-occurring-string-in-a-structure-in-rust/54936793#54936793", "title": "Finding most frequently occurring string in a structure in Rust?", "body": "<p>You didn't read <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.group_by\" rel=\"noreferrer\">the documentation for a function you are using</a>. This is <em>not</em> a good idea.</p>\n\n<blockquote>\n  <p>This type implements <code>IntoIterator</code> (it is <strong>not</strong> an iterator itself),\n  because the group iterators need to borrow from this value. It should\n  be stored in a local variable or temporary and iterated.</p>\n</blockquote>\n\n<hr>\n\n<p>Personally, I'd just use a <code>BTreeMap</code> or <code>HashMap</code>:</p>\n\n<pre><code>let mut counts = BTreeMap::new();\nfor word in edges.iter().flat_map(|x| &amp;x.1) {\n    *counts.entry(word).or_insert(0) += 1;\n}\n\nlet max = counts.into_iter().max_by_key(|&amp;(_, count)| count);\n\nprintln!(\"{:?}\", max);\n</code></pre>\n\n<p>If you <em>really</em> wanted to use the iterators, it could look something like this:</p>\n\n<pre><code>let groups = edges\n    .iter()\n    .flat_map(|x| &amp;x.1)\n    .sorted()\n    .group_by(|&amp;x| x);\n\nlet max = groups\n    .into_iter()\n    .map(|(key, group)| (key, group.count()))\n    .max_by_key(|&amp;(_, count)| count);\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 397, "favorite_count": 0, "accepted_answer_id": 54936793, "answer_count": 1, "score": 5, "last_activity_date": 1551405137, "creation_date": 1551400239, "last_edit_date": 1551404222, "question_id": 54936304, "link": "https://stackoverflow.com/questions/54936304/finding-most-frequently-occurring-string-in-a-structure-in-rust", "title": "Finding most frequently occurring string in a structure in Rust?", "body": "<p>I'm looking for the string which occurs most frequently in the second part of the tuple of <code>Vec&lt;(String, Vec&lt;String&gt;)&gt;</code>:</p>\n\n<pre><code>use itertools::Itertools; // 0.8.0\n\nfn main() {\n    let edges: Vec&lt;(String, Vec&lt;String&gt;)&gt; = vec![];\n\n    let x = edges\n        .iter()\n        .flat_map(|x| &amp;x.1)\n        .map(|x| &amp;x[..])\n        .sorted()\n        .group_by(|x| x)\n        .max_by_key(|x| x.len());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a1fa8cb8a8cc334e594d2b3eb5da3e92\" rel=\"noreferrer\">Playground</a></p>\n\n<p>This:</p>\n\n<ul>\n<li>takes the iterator</li>\n<li>flat-maps to the second part of the tuple</li>\n<li>turns elements into a <code>&amp;str</code></li>\n<li>sorts it (via itertools)</li>\n<li>groups it by string (via itertools)</li>\n<li>find the group with the highest count</li>\n</ul>\n\n<p>This supposedly gives me the group with the most frequently occurring string, except it doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `max_by_key` found for type `itertools::groupbylazy::GroupBy&lt;&amp;&amp;str, std::vec::IntoIter&lt;&amp;str&gt;, [closure@src/lib.rs:9:19: 9:24]&gt;` in the current scope\n  --&gt; src/lib.rs:10:10\n   |\n10 |         .max_by_key(|x| x.len());\n   |          ^^^^^^^^^^\n   |\n   = note: the method `max_by_key` exists but the following trait bounds were not satisfied:\n           `&amp;mut itertools::groupbylazy::GroupBy&lt;&amp;&amp;str, std::vec::IntoIter&lt;&amp;str&gt;, [closure@src/lib.rs:9:19: 9:24]&gt; : std::iter::Iterator`\n</code></pre>\n\n<p>I'm totally lost in these types.</p>\n"}, {"tags": ["reference", "rust", "mutability"], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 10296080, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L7WfP.png?s=128&g=1", "display_name": "rustacean_in_training", "link": "https://stackoverflow.com/users/10296080/rustacean-in-training"}, "edited": false, "score": 0, "creation_date": 1551380471, "post_id": 54932196, "comment_id": 96629491, "body": "I figured it out a few minutes later, but this makes it more clear. Thank you so much."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1551379521, "last_edit_date": 1551379521, "creation_date": 1551379126, "answer_id": 54932196, "question_id": 54931890, "link": "https://stackoverflow.com/questions/54931890/what-is-causing-this-cannot-borrow-as-mutable-exception/54932196#54932196", "title": "What is causing this &quot;cannot borrow as mutable&quot; exception?", "body": "<p>The variable <code>input</code> itself is not mutable, it just contains a mutable reference, which is why you can't make a mutable reference to it. </p>\n\n<p>However, since it is already a mutable reference, you can pass it directly to <code>read_line</code>, without referencing it again:</p>\n\n<pre><code>fn shell(input: &amp;mut String, version: &amp;String) {\n    match io::stdin().read_line(input) {\n        // already a &amp;mut ref:  ^^^^^\n</code></pre>\n\n<p>You <em>could</em> make the variable mutable, and re-borrow it:</p>\n\n<pre><code>fn shell(mut input: &amp;mut String, version: &amp;String) {\n    //   ^^^\n    match io::stdin().read_line(&amp;mut input) {\n</code></pre>\n\n<p>But this shouldn't be necessary. It only works because of Rust's auto-deref rules, which allows for things like <code>&amp;&amp;&amp;&amp;&amp;&amp;T</code> to be treated as <code>&amp;T</code> in some situations. This is there for convenience because a lot of generic functions return references to their inputs and it would get messy having to dereference everything.</p>\n"}], "owner": {"reputation": 3, "user_id": 10296080, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L7WfP.png?s=128&g=1", "display_name": "rustacean_in_training", "link": "https://stackoverflow.com/users/10296080/rustacean-in-training"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 54932196, "answer_count": 1, "score": 0, "last_activity_date": 1551379860, "creation_date": 1551377856, "last_edit_date": 1551379860, "question_id": 54931890, "link": "https://stackoverflow.com/questions/54931890/what-is-causing-this-cannot-borrow-as-mutable-exception", "title": "What is causing this &quot;cannot borrow as mutable&quot; exception?", "body": "<p>Why is this exception being thrown, and how I can fix it? This is a piece of code that I am working on to get user input. I want to eventually use enums instead of if else statements, but I don't understand how to implement enums well enough yet.</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let version = String::from(\"0.0.1\");\n    let mut input = String::new();\n\n    shell(&amp;mut input, &amp;version);\n}\n\nfn shell(input: &amp;mut String, version: &amp;String) {\n    match io::stdin().read_line(&amp;mut input) {\n        Ok(b) =&gt; {\n            if &amp;input.trim() == &amp;\"ver\" {\n                println!(\"{}\", &amp;version);\n            } else {\n                println!(\"Command '{}' Not Recognized\", &amp;input);\n                shell(&amp;mut input, &amp;version);\n            }\n        }\n        Err(err) =&gt; panic!(\"incorrect\"),\n    }\n}\n</code></pre>\n"}, {"tags": ["string", "rust", "rust-macros", "rust-decl-macros"], "answers": [{"comments": [{"owner": {"reputation": 167, "user_id": 2048881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/922727fa433d528e9e65795ad73975ea?s=128&d=identicon&r=PG", "display_name": "AerosolSP", "link": "https://stackoverflow.com/users/2048881/aerosolsp"}, "edited": false, "score": 0, "creation_date": 1551375138, "post_id": 54931155, "comment_id": 96626799, "body": "That&#39;s what I was looking for. The issue I was having was I couldn&#39;t figure out how to make it evaluate to &quot;Hello world!&quot; without creating new variables, which you can&#39;t do. Bravo Mr. Hall, and much appreciated."}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "reply_to_user": {"reputation": 167, "user_id": 2048881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/922727fa433d528e9e65795ad73975ea?s=128&d=identicon&r=PG", "display_name": "AerosolSP", "link": "https://stackoverflow.com/users/2048881/aerosolsp"}, "edited": false, "score": 1, "creation_date": 1551375562, "post_id": 54931155, "comment_id": 96627009, "body": "@AerosolSP there is no reason you can&#39;t create new variables. The branch of the macro has to just be a single expression (i.e. if you create a variable and do something with it, the whole expression must be enclosed in braces):   <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=06545da95b31cb540a58a4b21af23d7b\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>  Think about how the vec! macro works. It has to create a new vector: <a href=\"https://doc.rust-lang.org/1.7.0/book/macros.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.7.0/book/macros.html</a>"}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "edited": false, "score": 1, "creation_date": 1551375611, "post_id": 54931155, "comment_id": 96627028, "body": "That being said, using the format! macro is still a much cleaner solution. I just want to make sure you don&#39;t think that you can&#39;t create a variable in a macro."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "edited": false, "score": 0, "creation_date": 1551375737, "post_id": 54931155, "comment_id": 96627109, "body": "@ObliqueMotion I think the confusion might be from the fact that you can&#39;t create a variable in a macro that you then use <i>outside</i> of the macro."}, {"owner": {"reputation": 167, "user_id": 2048881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/922727fa433d528e9e65795ad73975ea?s=128&d=identicon&r=PG", "display_name": "AerosolSP", "link": "https://stackoverflow.com/users/2048881/aerosolsp"}, "reply_to_user": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "edited": false, "score": 0, "creation_date": 1551376012, "post_id": 54931155, "comment_id": 96627260, "body": "@ObliqueMotion thanks a lot for that clarification. I thought the Rustlings course would be a bit more thorough, but I&#39;m beginning to realize I should&#39;ve gone through the book first!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1551374855, "creation_date": 1551374855, "answer_id": 54931155, "question_id": 54930966, "link": "https://stackoverflow.com/questions/54930966/how-to-return-a-new-string-from-a-declarative-macro/54931155#54931155", "title": "How to return a new String from a declarative macro?", "body": "<p><code>println!</code> will print to the <code>stdout</code>. Instead, you just want to format the string and return it from the macro. Use <code>format!</code> instead, and drop the <code>;</code> so that it will return the expression instead of <code>()</code>:</p>\n\n<pre><code>macro_rules! my_macro {\n    ($val:expr) =&gt; {\n        format!(\"Hello {}\", $val)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 167, "user_id": 2048881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/922727fa433d528e9e65795ad73975ea?s=128&d=identicon&r=PG", "display_name": "AerosolSP", "link": "https://stackoverflow.com/users/2048881/aerosolsp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 676, "favorite_count": 0, "accepted_answer_id": 54931155, "answer_count": 1, "score": 3, "last_activity_date": 1551375550, "creation_date": 1551374071, "last_edit_date": 1551375550, "question_id": 54930966, "link": "https://stackoverflow.com/questions/54930966/how-to-return-a-new-string-from-a-declarative-macro", "title": "How to return a new String from a declarative macro?", "body": "<p>So here I am, trucking along with Rustlings, until I get broadsided with test 4.</p>\n\n<p>It wants me to write a macro that will satisfy the following code:</p>\n\n<pre><code>fn main() {\n    if my_macro!(\"world!\") != \"Hello world!\" {\n        panic!(\"Oh no! Wrong output!\");\n    }\n}\n</code></pre>\n\n<p>So, I wrote this:</p>\n\n<pre><code>macro_rules! my_macro {\n    ($val:expr) =&gt; {\n        println!(\"Hello {}\", $val);\n    }\n}\n</code></pre>\n\n<p>And Rustlings spat this out:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; exercises/test4.rs:15:31\n   |\n15 |     if my_macro!(\"world!\") != \"Hello world!\" {\n   |                               ^^^^^^^^^^^^^^ expected (), found reference\n   |\n   = note: expected type `()`\n              found type `&amp;'static str`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n</code></pre>\n\n<p>Which, you know. I get. I understand what the problem is, but I don't understand how to write a macro that will satisfy the code. I can change the code I'm testing against, but that's not what the test wants me to do. I'm only to write a macro. I'm stumped. I also don't understand how encapsulating the macro in a module is meant to help, but the test says it's a test on modules as well as macros.</p>\n"}, {"tags": ["generics", "rust", "closures", "traits"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551369408, "post_id": 54929200, "comment_id": 96623756, "body": "because <code>!</code> is not implemented for T ?"}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1551369948, "post_id": 54929200, "comment_id": 96624095, "body": "I don&#39;t think that&#39;s the reason. Replacing <code>!x</code> with <code>x | true</code> removes need for annotation and <code>BitOr</code> is not implemented for <code>T</code> either."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1551371275, "post_id": 54929200, "comment_id": 96624844, "body": "You are already setting <code>x</code>&#39;s type implicitly by doing this.  <code>x\u00a0| true</code>, check the <code>BitOr</code>&#39;s defintion type of <code>x</code> is the same with right operand&#39;s type."}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 0, "creation_date": 1551372084, "post_id": 54929200, "comment_id": 96625266, "body": "Right operand is <code>Self</code> by default, but it can be any type, it&#39;s even written explicitly in  <a href=\"https://doc.rust-lang.org/std/ops/trait.BitOr.html\" rel=\"nofollow noreferrer\">docs</a>. Output type may be none of input types as well."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1551373887, "post_id": 54929200, "comment_id": 96626223, "body": "Your bar function expects closure which needs to return bool and there is only single BitOr&lt;T&gt; implementation for bool which T is a bool ."}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 0, "creation_date": 1551374157, "post_id": 54929200, "comment_id": 96626358, "body": "I&#39;ve added a struct, which implements <code>BitOr&lt;bool, Output = bool&gt;</code> and it still compiles with no annotation when closure is <code>|x| x | true</code>: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c97ad3393c74b3b293d7f80c367b98df\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1551385323, "post_id": 54929200, "comment_id": 96631751, "body": "@CodeSandwich I realized that your bar fn also uses Foo&lt;bool, i was considering it as Foo&lt;T, so BitOr should act like that already, but i added some other options which works, it gets interesting please check :  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fd399a15e9401b56aad814b24f02b081\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1551398673, "post_id": 54929200, "comment_id": 96636442, "body": "@&#214;merErden Good one! I&#39;ve got a feeling that this question will end up as a Rust issue."}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 2, "creation_date": 1551399164, "post_id": 54929200, "comment_id": 96636558, "body": "Interestingly <code>|x| !&amp;x</code> works, but <code>|x| !*&amp;x</code> doesn&#39;t."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1551428551, "post_id": 54929200, "comment_id": 96644205, "body": "Given this discussion, it seems to me that you are hitting a limitation of the type inference algorithm used, rather than a fundamental language rule."}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 2, "creation_date": 1551435747, "post_id": 54929200, "comment_id": 96647907, "body": "I&#39;ve created a Rust <a href=\"https://github.com/rust-lang/rust/issues/58834\" rel=\"nofollow noreferrer\">issue</a>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1551450730, "post_id": 54929200, "comment_id": 96656262, "body": "Related (if not a duplicate): <a href=\"https://stackoverflow.com/questions/54884862/how-does-the-type-deduction-work-in-this-docopt-example/54885365#54885365\" title=\"how does the type deduction work in this docopt example\">stackoverflow.com/questions/54884862/&hellip;</a>"}], "owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 352, "favorite_count": 1, "answer_count": 0, "score": 20, "last_activity_date": 1551451631, "creation_date": 1551368044, "last_edit_date": 1551398903, "question_id": 54929200, "link": "https://stackoverflow.com/questions/54929200/how-do-closures-infer-their-type-based-on-the-trait-theyre-required-to-implemen", "title": "How do closures infer their type based on the trait they&#39;re required to implement?", "body": "<p>I'm writing a function that accepts different trait implementors. One of them is a closure. Some closures need an argument type annotation and some don't, depending on their bodies.</p>\n\n<p>Example (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=44b8a784348d488df9f1bd3201f045a8\" rel=\"noreferrer\">playground</a>):</p>\n\n<pre><code>fn main() {\n    bar(|x| x);\n    bar(|x: bool| !x); // Why is the annotation needed?\n}\n\ntrait Foo&lt;T&gt; {\n    type Output;\n}\n\nimpl&lt;F: Fn(T) -&gt; O, T, O&gt; Foo&lt;T&gt; for F {\n    type Output = O;\n}\n\nfn bar(_: impl Foo&lt;bool, Output = bool&gt;) {}\n</code></pre>\n\n<ul>\n<li><p>Why do some closures infer the argument type and others need annotation?</p></li>\n<li><p>Is it possible to redesign trait or function to never require annotation?</p></li>\n</ul>\n\n<p>My (invalid) reasoning is that inference is the same for both closures:</p>\n\n<ol>\n<li><code>bar</code> needs <code>Foo&lt;bool, Output = bool&gt;</code></li>\n<li>Only <code>Fn(bool) -&gt; bool</code> implements <code>Foo&lt;bool, Output = bool&gt;</code></li>\n<li>The closure must be <code>|bool| -&gt; bool</code></li>\n</ol>\n\n<p>The fact that negation (<code>Not</code> trait) detaches the input type from the output type should not matter, but it seems to somehow be a crucial element.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1551366370, "post_id": 54926005, "comment_id": 96621815, "body": "I like this question; it means that you have exactly the right mindset with regard to lifetimes :)"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1551359278, "creation_date": 1551359278, "answer_id": 54926490, "question_id": 54926005, "link": "https://stackoverflow.com/questions/54926005/is-there-a-way-to-choose-the-lesser-of-two-lifetimes/54926490#54926490", "title": "Is there a way to choose the lesser of two lifetimes?", "body": "<p>This is what the compiler does <strong>automatically</strong> when you have a single unified lifetime:</p>\n\n<pre><code>fn minimum&lt;'a&gt;(x: &amp;'a mut i32, y: &amp;'a mut i32) -&gt; &amp;'a mut i32 {\n    if x &lt; y { x } else { y }\n}\n</code></pre>\n\n<p>This is the only memory safe option as the implementation of the function might choose either reference.</p>\n\n<p>There is no \"maximum\" equivalent because to use it would not guarantee memory safety.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29861388/155423\">When is it useful to define multiple lifetimes in a struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44709632/155423\">Why would you ever use the same lifetimes for references in a struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/45092638/155423\">How can I port C++ code that uses the ternary operator to Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 557, "user_id": 6092128, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b27efed6963e85eed7bbd5d338c2ef79?s=128&d=identicon&r=PG&f=1", "display_name": "aaalex88", "link": "https://stackoverflow.com/users/6092128/aaalex88"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 54926490, "answer_count": 1, "score": 12, "last_activity_date": 1551409679, "creation_date": 1551357695, "last_edit_date": 1551409679, "question_id": 54926005, "link": "https://stackoverflow.com/questions/54926005/is-there-a-way-to-choose-the-lesser-of-two-lifetimes", "title": "Is there a way to choose the lesser of two lifetimes?", "body": "<p>I mean something like:</p>\n\n<pre><code>fn minimum&lt;'a, 'b&gt;(x: &amp;'a mut i32, y: &amp;'b mut i32) -&gt; &amp;'min(a, b) mut i32 {\n    (x &lt; y) ? x : y\n}\n</code></pre>\n\n<p>We don't know which reference will be chosen at lifetime, but the compiler knows in which scope both references are still valid and the returned reference can be used safely.</p>\n\n<p>A workaround that one can mention:</p>\n\n<pre><code>fn minimum&lt;'a, 'b&gt; where 'b: 'a (x: &amp;'a i32, y: 'b i32) -&gt; &amp;'a i32 {\n    (x &lt; y) ? x : y\n}\n</code></pre>\n\n<p>isn't really the solution, because when calling a function we must handle both cases: when <code>'a: 'b</code> and <code>'b: 'a</code></p>\n"}, {"tags": ["error-handling", "rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551360561, "post_id": 54921250, "comment_id": 96618206, "body": "For example, your code uses undefined types and methods that we don&#39;t know the signature of. Your error message doesn&#39;t even correspond to the code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551445943, "post_id": 54921250, "comment_id": 96653514, "body": "Why have you used <code>map(... write_all)</code> when the code below uses <code>and_then</code>? You can&#39;t arbitrarily change what methods you call and expect it to work. When using <code>and_then</code>, the success value of the future is <code>(TcpStream, Vec&lt;u8&gt;)</code>."}, {"owner": {"reputation": 163, "user_id": 7250342, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4b1bc78fff9c3dfd2275dbf623c22f8?s=128&d=identicon&r=PG&f=1", "display_name": "mdfitumi", "link": "https://stackoverflow.com/users/7250342/mdfitumi"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551509926, "post_id": 54921250, "comment_id": 96674164, "body": "I don&#39;t know why, but without casting to          <code>serialize_addr(remote_addr).map_err(|_| io::Error::from(io::ErrorKind::AddrNotAvailable))</code> I couldn&#39;t use <code>.and_then</code> instead of <code>.map</code>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1551386478, "creation_date": 1551386478, "answer_id": 54933930, "question_id": 54921250, "link": "https://stackoverflow.com/questions/54921250/how-can-i-use-the-question-mark-operator-to-handle-errors-in-tokio-futures/54933930#54933930", "title": "How can I use the question mark operator to handle errors in Tokio futures?", "body": "<p>TL;DR: you don't use the <code>?</code> operator.</p>\n\n<hr>\n\n<p>Since <strong>you didn't provide one</strong>, here is a <a href=\"/help/mcve\">MCVE</a> of your problem. Note that we <em>have no idea</em> what the error type is of your <code>serialize_addr</code> function, so I had to pick something:</p>\n\n<pre><code>use futures::Future;\nuse std::{io, net::SocketAddr};\nuse tokio::{io::write_all, net::TcpStream};\n\nfn serialize_addr() -&gt; Result&lt;Vec&lt;u8&gt;, Box&lt;dyn std::error::Error&gt;&gt; {\n    Ok(vec![])\n}\n\npub fn handle_client(addr: &amp;SocketAddr) -&gt; impl Future&lt;Item = (), Error = io::Error&gt; {\n    TcpStream::connect(addr).and_then(|stream| {\n        let addr = serialize_addr()?;\n        write_all(stream, addr).then(|_result| Ok(()))\n    })\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n  --&gt; src/lib.rs:11:20\n   |\n11 |         let addr = serialize_addr()?;\n   |                    ^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `futures::future::then::Then&lt;tokio_io::io::write_all::WriteAll&lt;tokio_tcp::stream::TcpStream, std::vec::Vec&lt;u8&gt;&gt;, std::result::Result&lt;(), std::io::Error&gt;, [closure@src/lib.rs:12:38: 14:10]&gt;`\n   |\n   = help: the trait `std::ops::Try` is not implemented for `futures::future::then::Then&lt;tokio_io::io::write_all::WriteAll&lt;tokio_tcp::stream::TcpStream, std::vec::Vec&lt;u8&gt;&gt;, std::result::Result&lt;(), std::io::Error&gt;, [closure@src/lib.rs:12:38: 14:10]&gt;`\n   = note: required by `std::ops::Try::from_error`\n</code></pre>\n\n<p>As the error message states:</p>\n\n<blockquote>\n  <p>the <code>?</code> operator can only be used in a function that returns <code>Result</code> or <code>Option</code> (or another type that implements <code>std::ops::Try</code>)</p>\n</blockquote>\n\n<p>and</p>\n\n<blockquote>\n  <p>cannot use the <code>?</code> operator in a function that returns <code>Then&lt;WriteAll&lt;TcpStream, Vec&lt;u8&gt;&gt;, Result&lt;(), io::Error&gt;, [closure]&gt;</code></p>\n</blockquote>\n\n<p>Instead, leverage the fact that <code>Result</code> can be treated as a future and let it participate in the chain of functions.</p>\n\n<p>Additionally, just like everywhere else in Rust, you need to have a unified error type. I've chosen <code>Box&lt;dyn Error&gt;</code> for simplicity. This can be achieved using <a href=\"https://docs.rs/futures/0.1.25/futures/future/trait.Future.html#method.map_err\" rel=\"nofollow noreferrer\"><code>map_err</code></a> and <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html#tymethod.into\" rel=\"nofollow noreferrer\"><code>Into::into</code></a></p>\n\n<pre><code>use futures::Future;\nuse std::net::SocketAddr;\nuse tokio::{io::write_all, net::TcpStream};\n\ntype Error = Box&lt;dyn std::error::Error&gt;;\n\nfn serialize_addr() -&gt; Result&lt;Vec&lt;u8&gt;, Error&gt; {\n    Ok(vec![])\n}\n\npub fn handle_client(addr: &amp;SocketAddr) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n    TcpStream::connect(addr)\n        .map_err(Into::into)\n        .and_then(|stream| serialize_addr().map(|addr| (stream, addr)))\n        .and_then(|(stream, addr)| write_all(stream, addr).map_err(Into::into))\n        .then(|_result| Ok(()))\n}\n</code></pre>\n\n<p>In the future, <code>async</code> / <code>await</code> syntax will make this easier to follow.</p>\n"}, {"tags": [], "owner": {"reputation": 163, "user_id": 7250342, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4b1bc78fff9c3dfd2275dbf623c22f8?s=128&d=identicon&r=PG&f=1", "display_name": "mdfitumi", "link": "https://stackoverflow.com/users/7250342/mdfitumi"}, "is_accepted": false, "score": 0, "last_activity_date": 1551588475, "creation_date": 1551588475, "answer_id": 54965647, "question_id": 54921250, "link": "https://stackoverflow.com/questions/54921250/how-can-i-use-the-question-mark-operator-to-handle-errors-in-tokio-futures/54965647#54965647", "title": "How can I use the question mark operator to handle errors in Tokio futures?", "body": "<p>Solution for the two streams:</p>\n\n<pre><code>fn handle_client(addr: &amp;SocketAddr) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n    TcpStream::connect(addr)\n        .map_err(Into::into)\n        .and_then(|remote_stream| {\n            remote_stream\n                .local_addr()\n                .map(|remote_addr| (remote_stream, remote_addr))\n        })\n        .map_err(Into::into)\n        .and_then(|(remote_stream, remote_addr)| {\n            TcpStream::connect(&amp;\"\".parse().unwrap())\n                .map(move |proxy_stream| (remote_stream, proxy_stream, remote_addr))\n        })\n        .and_then(|(remote_stream, proxy_stream, remote_addr)| {\n            serialize_addr(remote_addr)\n                .map(|info| (remote_stream, proxy_stream, info))\n                .map_err(|_| io::Error::from(io::ErrorKind::AddrNotAvailable))\n        })\n        .and_then(|(remote_stream, proxy_stream, info)| {\n            write_all(proxy_stream, info).map(|proxy_stream| (remote_stream, proxy_stream.0))\n        })\n        .and_then(|(remote_stream, proxy_stream)| {\n            // working with streams\n        })\n        .then(|_result| Ok(()))\n}\n</code></pre>\n"}], "owner": {"reputation": 163, "user_id": 7250342, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4b1bc78fff9c3dfd2275dbf623c22f8?s=128&d=identicon&r=PG&f=1", "display_name": "mdfitumi", "link": "https://stackoverflow.com/users/7250342/mdfitumi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3363, "favorite_count": 0, "answer_count": 2, "score": 5, "last_activity_date": 1551588475, "creation_date": 1551342297, "last_edit_date": 1551588448, "question_id": 54921250, "link": "https://stackoverflow.com/questions/54921250/how-can-i-use-the-question-mark-operator-to-handle-errors-in-tokio-futures", "title": "How can I use the question mark operator to handle errors in Tokio futures?", "body": "<p>I have a client handling a <code>Future</code> that does some stuff. Is it possible to use <code>impl Future&lt;Item = (), Error = io::Error&gt;</code> as a return type and make better error handling?</p>\n\n<pre><code>pub fn handle_client(client: Client) -&gt; impl Future&lt;Item = (), Error = io::Error&gt; {\n    let magic = client.header.magic;\n    let stream_client = TcpStream::connect(&amp;client.addr).and_then(|stream| {\n        let addr: Vec&lt;u8&gt; = serialize_addr(stream.local_addr()?, magic)?;\n        write_all(stream, addr).then(|result| {\n            // some code\n            Ok(())\n        })\n    });\n    stream_client\n}\n</code></pre>\n\n<p>I cannot keep the <code>io::Error</code> type through all nested closures/futures. The compiler throws the error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n   --&gt; src/client.rs:134:29\n    |\n134 |         let addr: Vec&lt;u8&gt; = serialize_addr(stream.local_addr()?, magic)?;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `futures::future::then::Then&lt;tokio_io::io::write_all::WriteAll&lt;tokio_tcp::stream::TcpStream, std::vec::Vec&lt;u8&gt;&gt;, std::result::Result&lt;(), std::io::Error&gt;, [closure@src/client.rs:135:38: 138:10]&gt;`\n    |\n    = help: the trait `std::ops::Try` is not implemented for `futures::future::then::Then&lt;tokio_io::io::write_all::WriteAll&lt;tokio_tcp::stream::TcpStream, std::vec::Vec&lt;u8&gt;&gt;, std::result::Result&lt;(), std::io::Error&gt;, [closure@src/client.rs:135:38: 138:10]&gt;`\n    = note: required by `std::ops::Try::from_error`\n</code></pre>\n\n<p>I made chaining map/and_then error handling, but problem is I don't know how to get <code>TcpStream</code> inside final <code>.then</code> closure. The only place I found <code>TcpStream</code> is inside WriteAll struct, however it's private. Besides, write_all consumes stream</p>\n\n<pre><code>use futures::Future;\nuse std::{io, net::SocketAddr};\nuse tokio::{\n    io::{write_all, AsyncRead, AsyncWrite},\n    net::TcpStream,\n};\n\ntype Error = Box&lt;dyn std::error::Error&gt;;\n\nfn serialize_addr(addr: SocketAddr) -&gt; Result&lt;Vec&lt;u8&gt;, Error&gt; {\n    Ok(vec![])\n}\n\nfn handle_client(addr: &amp;SocketAddr) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n    TcpStream::connect(addr)\n        .map_err(Into::into)\n        .and_then(|stream| stream.local_addr().map(|stream_addr| (stream, stream_addr)))\n        .map_err(Into::into)\n        .and_then(|(stream, stream_addr)| serialize_addr(stream_addr).map(|info| (stream, info)))\n        .map(|(stream, info)| write_all(stream, info))\n        .then(|result| {\n            let result = result.unwrap();\n            let stream = match result.state {\n                Writing { a } =&gt; a,\n                _ =&gt; panic!(\"cannot get stream\"),\n            };\n            // some code\n            Ok(())\n        })\n}\n\nfn main() {\n    let addr = \"127.0.0.1:8900\".parse().unwrap();\n    handle_client(&amp;addr);\n}\n</code></pre>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1551337585, "post_id": 54920059, "comment_id": 96605554, "body": "<i>&quot;pass it as a value&quot;</i> you have to think more of <i>moving it</i> and it does not make sense to move a value just for checking if it contains something. That&#39;s why it is passed as reference."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551359762, "post_id": 54920059, "comment_id": 96617740, "body": "Please <b>search</b> for your error message before asking about it."}], "answers": [{"comments": [{"owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "edited": false, "score": 0, "creation_date": 1551337998, "post_id": 54920179, "comment_id": 96605730, "body": "Thanks. I did not notice this. But I still don&#39;t get the relation between the error message when I do pass it by value."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1551341930, "post_id": 54920179, "comment_id": 96607387, "body": "If you look at the <a href=\"https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html#impl-Pattern%3C%27a%3E-5\" rel=\"nofollow noreferrer\">docs for Pattern</a> you will see that the last documented impl is for <code>FnMut (char) -&gt; bool</code>, which might explain why the compiler chose to show that specific type. It would probably have been better if the compiler had said <code>impl Pattern&lt;&#39;_&gt;</code>"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1551342225, "last_edit_date": 1551342225, "creation_date": 1551337634, "answer_id": 54920179, "question_id": 54920059, "link": "https://stackoverflow.com/questions/54920059/strcontains-works-with-references-but-not-with-the-actual-value/54920179#54920179", "title": "str::contains works with references but not with the actual value", "body": "<p>Because <code>Pattern</code> is implemented for <code>&amp;'a String</code> but not for <code>String</code></p>\n\n<p><a href=\"https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html#impl-Pattern%3C%27a%3E-2\" rel=\"nofollow noreferrer\"><code>impl&lt;'a, 'b&gt; Pattern&lt;'a&gt; for &amp;'b String</code></a></p>\n\n<blockquote>\n  <p>But I still don't get the relation between the error message when I do pass it by value</p>\n</blockquote>\n\n<p>Answered by <a href=\"https://stackoverflow.com/users/5397009/jmb\">Jmb</a></p>\n\n<blockquote>\n  <p>If you look at the docs for Pattern you will see that the last documented impl is for <a href=\"https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html#impl-Pattern%3C%27a%3E-5\" rel=\"nofollow noreferrer\">FnMut (char) -> bool</a>, which might explain why the compiler chose to show that specific type. It would probably have been better if the compiler had said impl Pattern&lt;'_></p>\n</blockquote>\n"}], "owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "closed_date": 1551359728, "accepted_answer_id": 54920179, "answer_count": 1, "score": 0, "last_activity_date": 1551359745, "creation_date": 1551337057, "last_edit_date": 1551359690, "question_id": 54920059, "link": "https://stackoverflow.com/questions/54920059/strcontains-works-with-references-but-not-with-the-actual-value", "closed_reason": "Duplicate", "title": "str::contains works with references but not with the actual value", "body": "<p>Consider a function that searches for a pattern in a huge string of lines and returns the lines on which matches are found:</p>\n\n<pre><code>fn search_insensitive&lt;'a&gt;(query: &amp;str, content: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n    let lowercase_query = query.to_lowercase();\n    let mut matches: Vec&lt;&amp;str&gt; = Vec::new();\n    for line in content.lines() {\n        let lowercase_line = line.to_lowercase();\n        if lowercase_line.contains(&amp;lowercase_query) {\n            matches.push(line)\n        }\n    }\n    matches\n}\n</code></pre>\n\n<p>The question I have is around the line <code>if lowercase_line.contains(&amp;lowercase_query)</code>. Why is <code>lowercase_query</code> passed as a reference here? If I pass it as a value instead I get the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: expected a `std::ops::FnMut&lt;(char,)&gt;` closure, found `std::string::String`\n --&gt; src/lib.rs:6:27\n  |\n6 |         if lowercase_line.contains(lowercase_query) {\n  |                           ^^^^^^^^ expected an `FnMut&lt;(char,)&gt;` closure, found `std::string::String`\n  |\n  = help: the trait `std::ops::FnMut&lt;(char,)&gt;` is not implemented for `std::string::String`\n  = note: required because of the requirements on the impl of `std::str::pattern::Pattern&lt;'_&gt;` for `std::string::String`\n</code></pre>\n\n<p>I checked the definition of the <code>contains</code> function:</p>\n\n<pre><code>pub fn contains&lt;'a, P: Pattern&lt;'a&gt;&gt;(&amp;'a self, pat: P) -&gt; bool {\n    pat.is_contained_in(self)\n}\n</code></pre>\n\n<p>I don't see anywhere the need for <code>contains</code> to take a reference. Can someone explain this?</p>\n"}, {"tags": ["rust", "rust-macros"], "owner": {"reputation": 2012, "user_id": 5987669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be176d2b1a1b2a5d648abdb75dc1b15?s=128&d=identicon&r=PG&f=1", "display_name": "Locke", "link": "https://stackoverflow.com/users/5987669/locke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1551360149, "creation_date": 1551326612, "last_edit_date": 1551360149, "question_id": 54918230, "link": "https://stackoverflow.com/questions/54918230/triggering-macro-expansion-in-build-rs", "title": "Triggering macro expansion in build.rs", "body": "<p>I want to create a macro using the crate <a href=\"https://crates.io/crates/cpp\" rel=\"nofollow noreferrer\">cpp</a>, however this crate has issues with macro expansion.</p>\n\n<h3>Context</h3>\n\n<p>The crate works by taking <code>cpp!{ ... }</code> macros of inline C code, compiling their contents as functions, and replacing the macro call with the resulting function. This is triggered by calling <code>cpp_build::build(\"src/lib.rs\")</code> in the <code>build.rs</code>.</p>\n\n<h3>Issue</h3>\n\n<p>As stated by the crate's authors, the <code>cpp!</code> macro is compiled before macro expansion can occur. This means it will attempt to interpret the arguments of the macro as-is and expand inside of the macro declaration.</p>\n\n<p>Is there a way I can trigger the expansion of specific macros or files inside of the <code>build.rs</code> before I call the <code>cpp_build</code> function?</p>\n"}, {"tags": ["logging", "rust", "backtrace", "panic"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 2, "last_activity_date": 1551334622, "creation_date": 1551334622, "answer_id": 54919521, "question_id": 54917373, "link": "https://stackoverflow.com/questions/54917373/retrieving-backtrace-from-a-panic-in-hook-in-rust/54919521#54919521", "title": "Retrieving backtrace from a panic in hook in Rust?", "body": "<p>You can use the <a href=\"https://crates.io/crates/backtrace\" rel=\"nofollow noreferrer\">backtrace crate</a> to generate a backtrace of your current stack.</p>\n\n<p>This is the exact same crate as rust uses internally when you use <code>RUST_BACKTRACE=1</code> when a panic occurs.</p>\n\n<p>The simplest example (taken from the docs) is just calling <code>backtrace::Backtrac</code>:</p>\n\n<pre><code>use backtrace::Backtrace;\n\nfn main() {\n    println!(\"{:?}\", Backtrace::new());\n}\n</code></pre>\n\n<p>which will return (in my example)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>stack backtrace:\n   0: playground::main::h990b23e2761eee55 (0x564800753fb1)\n             at src/main.rs:4\n   1: std::rt::lang_start::{{closure}}::hd025ca578a744b4f (0x564800753d3f)\n             at /rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/rt.rs:74\n   2: std::rt::lang_start_internal::{{closure}}::hdfc28107b5be47c9 (0x564800789f92)\n             at src/libstd/rt.rs:59\n      std::panicking::try::do_call::h69790245ac2d03fe\n             at src/libstd/panicking.rs:310\n   3: __rust_maybe_catch_panic (0x564800797409)\n             at src/libpanic_unwind/lib.rs:102\n   4: std::panicking::try::h9c1cbc5599e1efbf (0x56480078a963)\n             at src/libstd/panicking.rs:289\n      std::panic::catch_unwind::h0562757d03ff60b3\n             at src/libstd/panic.rs:398\n      std::rt::lang_start_internal::h540c897fe52ba9c5\n             at src/libstd/rt.rs:58\n   5: std::rt::lang_start::h78189d3d761bfa86 (0x564800753d18)\n             at /rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/rt.rs:74\n   6: main (0x5648007540b9)\n   7: __libc_start_main (0x7fdab1a23b96)\n   8: _start (0x564800753be9)\n   9: &lt;unknown&gt; (0x0)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551360087, "post_id": 54925587, "comment_id": 96617931, "body": "I thought about providing this answer, but the idea of doing complicated logic in a panic handler feels very dicey..."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 7, "last_activity_date": 1551356329, "last_edit_date": 1592644375, "creation_date": 1551356329, "answer_id": 54925587, "question_id": 54917373, "link": "https://stackoverflow.com/questions/54917373/retrieving-backtrace-from-a-panic-in-hook-in-rust/54925587#54925587", "title": "Retrieving backtrace from a panic in hook in Rust?", "body": "<p><code>PanicInfo</code> does not contain a backtrace, but you can capture it yourself in the panic hook.</p>\n<p>From the <a href=\"https://doc.rust-lang.org/std/panic/fn.set_hook.html\" rel=\"nofollow noreferrer\"><code>set_hook</code></a> documentation:</p>\n<blockquote>\n<p>Registers a custom panic hook, replacing any that was previously registered.</p>\n<p>The panic hook is invoked when a thread panics, but before the panic runtime is invoked. As such, the hook will run with both the aborting and unwinding runtimes. The default hook prints a message to standard error and generates a backtrace if requested, but this behavior can be customized with the <code>set_hook</code> and <code>take_hook</code> functions.</p>\n</blockquote>\n<p>Since the panic hook runs <strong>before unwinding</strong>, you can capture the backtrace yourself in the panic hook using the <a href=\"https://crates.io/crates/backtrace\" rel=\"nofollow noreferrer\"><code>backtrace</code></a> crate already mentioned by @hellow:</p>\n<pre><code>panic::set_hook(Box::new(|panic_info| {\n    let backtrace = Backtrace::new();\n    //  Do something with backtrace and panic_info.\n}));\n</code></pre>\n"}], "owner": {"reputation": 123, "user_id": 3351678, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eWTLd.jpg?s=128&g=1", "display_name": "KUNIMI Taiyoh", "link": "https://stackoverflow.com/users/3351678/kunimi-taiyoh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1854, "favorite_count": 0, "answer_count": 2, "score": 6, "last_activity_date": 1551356329, "creation_date": 1551320047, "question_id": 54917373, "link": "https://stackoverflow.com/questions/54917373/retrieving-backtrace-from-a-panic-in-hook-in-rust", "title": "Retrieving backtrace from a panic in hook in Rust?", "body": "<p>My application needs to send logs to fluentd as JSON format through stdout.<br>\nWhile I'm trying to handle <em>panics</em> and arrange a <code>&amp;std::panic::PanicInfo</code> as a JSON with <code>std::panic::set_hook</code>, I could not find a way to retrieve <em>backtrace</em> from a <code>&amp;PanicInfo</code>.  </p>\n\n<p>Is there a way to retrieve a backtrace from a panic in a custom hook?</p>\n"}]