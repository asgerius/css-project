[{"tags": ["memory", "rust", "unsafe", "unsafe-pointers"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1545253453, "post_id": 53859055, "comment_id": 94566044, "body": "&quot;I think this code should make a segmentation fault but it does not.&quot;, undefined behavior is undefined."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1545255727, "post_id": 53859055, "comment_id": 94566987, "body": "Please also read <a href=\"https://stackoverflow.com/a/6445794/279627\">Stack Oveflow&#39;s canonical answer to this question</a>."}], "answers": [{"comments": [{"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "edited": false, "score": 2, "creation_date": 1545253877, "post_id": 53859124, "comment_id": 94566233, "body": "Don&#39;t forget nasal demons"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1545290864, "post_id": 53859124, "comment_id": 94575695, "body": "\u201c<i>A segmentation fault <b>generally</b> occurs when you access memory outside the chunk that your process has</i>\u201d: You can leave out the \u201cgenerally\u201d since that is the exact definition of a segfault. Other conditions can cause the program to crash, but those are not segmentation faults."}, {"owner": {"reputation": 1119, "user_id": 11714860, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e6Xo3.png?s=128&g=1", "display_name": "Sapphire_Brick", "link": "https://stackoverflow.com/users/11714860/sapphire-brick"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1604984012, "post_id": 53859124, "comment_id": 114507083, "body": "@Jmb Not true! <code>raise(11);</code> will raise a segmentation fault."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1545320258, "last_edit_date": 1545320258, "creation_date": 1545253456, "answer_id": 53859124, "question_id": 53859055, "link": "https://stackoverflow.com/questions/53859055/why-is-there-no-segfault-when-accessing-a-variable-that-has-gone-out-of-scope-us/53859124#53859124", "title": "Why is there no segfault when accessing a variable that has gone out of scope using unsafe Rust?", "body": "<p>This isn't unique to Rust. See:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/15871423/155423\">Why doesn&#39;t the following code produce a segmentation fault?</a></li>\n<li><a href=\"https://stackoverflow.com/q/1239938/155423\">Accessing an array out of bounds gives no error, why?</a></li>\n<li><a href=\"https://stackoverflow.com/q/6441218/155423\">Can a local variable&#39;s memory be accessed outside its scope?</a></li>\n</ul>\n\n<p>TL;DR: you have <em>lied</em> to the compiler. Your <code>unsafe</code> block does <strong>not</strong> uphold the requirements of safe code. This means you have created <em>undefined behavior</em> and the program is allowed to do whatever it wants. That could mean:</p>\n\n<ul>\n<li>it crashes (such as via a segfault)</li>\n<li>it runs perfectly</li>\n<li>it erases your hard drive</li>\n<li>it empties your bank account</li>\n<li>it generates <a href=\"http://www.catb.org/jargon/html/N/nasal-demons.html\" rel=\"nofollow noreferrer\">nasal demons</a></li>\n<li>it <a href=\"https://www.reddit.com/r/rust/comments/362mx2/can_rust_eat_laundry_at_10/\" rel=\"nofollow noreferrer\">eats your laundry</a></li>\n<li>etc.</li>\n</ul>\n\n<p>Segfaults are <strong>never</strong> a guaranteed outcome. A <a href=\"https://stackoverflow.com/q/2346806/155423\">segmentation fault</a> occurs when you access memory that is outside of the chunk of memory your thread/process has. The memory of the stack is well inside of that chunk, so it's unlikely to trigger the case.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31307454/155423\">Why doesn&#39;t this Rust program crash?</a></li>\n</ul>\n"}], "owner": {"reputation": 35, "user_id": 8159521, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7fBTA.png?s=128&g=1", "display_name": "Turtle Turtleston", "link": "https://stackoverflow.com/users/8159521/turtle-turtleston"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 236, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1545320258, "creation_date": 1545253103, "last_edit_date": 1545253575, "question_id": 53859055, "link": "https://stackoverflow.com/questions/53859055/why-is-there-no-segfault-when-accessing-a-variable-that-has-gone-out-of-scope-us", "title": "Why is there no segfault when accessing a variable that has gone out of scope using unsafe Rust?", "body": "<p>I came across this strange phenomenon while playing with unsafe Rust. I think this code should make a segmentation fault but it does not. Am I missing something?\nI tried to set a pointer to a variable with a shorter lifetime and then dereference it.</p>\n\n<pre><code>// function that sets a pointer to a variable with a shorter lifetime\nunsafe fn what(p: &amp;mut *const i32) {\n    let a = 2;\n    *p = &amp;a;\n    //let addr = *p;    // I will talk about this later\n    println!(\"inside: {}\", **p);\n}\n\nfn main() {\n    let mut p: *const i32 = 0 as *const i32;\n    unsafe {\n        what(&amp;mut p);\n\n        // I thought this line would make a segfault because 'a' goes out of scope at the end of the function making the address invalid\n        println!(\"segfault? {}\", *p);\n\n        // Even more unsettling: I can increment the address and still dereference it.\n        p = ((p as usize) + 1) as *const i32;\n        println!(\"I'm definitely missing something: {}\", *p);\n    }\n}\n</code></pre>\n\n<p>This program outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>inside: 2\nsegfault? {random number around 20000. probably uninitialized memory but why?}\nI'm definitely missing something: {uninitialized memory}\n</code></pre>\n\n<p>If I uncomment the line</p>\n\n<pre><code>let addr = *p;\n</code></pre>\n\n<p>the second row becomes</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>segfault? 2\n</code></pre>\n\n<p>Why is there no segfault? Can the compiler extend the lifetime of <code>a</code> or the address <code>p</code> points at for safety? Am I missing some basic information about pointers in Rust?</p>\n"}, {"tags": ["windows", "rust", "registry", "registrykey"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545217499, "post_id": 53849336, "comment_id": 94547229, "body": "Maybe an AntiVirus program problem? Try to disable yours and try again"}, {"owner": {"reputation": 383, "user_id": 7090217, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fa6f84366f0ecf5164229bd38e03eb7f?s=128&d=identicon&r=PG&f=1", "display_name": "codexy", "link": "https://stackoverflow.com/users/7090217/codexy"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545220568, "post_id": 53849336, "comment_id": 94548786, "body": "@hellow, it&#39;s not Antivirus problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545242683, "post_id": 53849336, "comment_id": 94561543, "body": "<code>let r_uac_status: String = if u_uac_status == &quot;1&quot; { &quot;Enable&quot; } else { &quot;Disable&quot; }.into()</code>; is shorter, more efficient, and doesn&#39;t require mutability."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545242866, "post_id": 53849336, "comment_id": 94561617, "body": "@codexy please <a href=\"https://stackoverflow.com/posts/53849336/edit\">edit</a> your question to show how you know it&#39;s not antivirus."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1545292393, "creation_date": 1545292393, "answer_id": 53864478, "question_id": 53849336, "link": "https://stackoverflow.com/questions/53849336/reading-a-registry-key-results-in-the-file-type-being-saved-or-retrieved-has-be/53864478#53864478", "title": "Reading a registry key results in &quot;The file type being saved or retrieved has been blocked&quot; error", "body": "<p>You're trying to read a <code>String</code>, but the registry contains an integer value. Try with:</p>\n\n<pre><code>let r_uac_status = subkey.get_value::&lt;u32, _&gt;(\"EnableLUA\")\n   .map (|u_uac_status|\n         if u_uac_status == 1 { \"Enable\" } else { \"Disable\" })\n   .expect(\"Failed to read\");\n</code></pre>\n\n<p>Note: you don't even need administrator rights to read the value.</p>\n"}], "owner": {"reputation": 383, "user_id": 7090217, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fa6f84366f0ecf5164229bd38e03eb7f?s=128&d=identicon&r=PG&f=1", "display_name": "codexy", "link": "https://stackoverflow.com/users/7090217/codexy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 0, "accepted_answer_id": 53864478, "answer_count": 1, "score": 0, "last_activity_date": 1545292393, "creation_date": 1545215663, "last_edit_date": 1545242759, "question_id": 53849336, "link": "https://stackoverflow.com/questions/53849336/reading-a-registry-key-results-in-the-file-type-being-saved-or-retrieved-has-be", "title": "Reading a registry key results in &quot;The file type being saved or retrieved has been blocked&quot; error", "body": "<p>I'm trying to read a registry key value and it fails even when I run app as an Administrator:</p>\n\n<pre><code>extern crate winreg;\n\nuse winreg::enums::{HKEY_LOCAL_MACHINE, KEY_READ};\n\nfn main() {\n    let hklm = winreg::RegKey::predef(HKEY_LOCAL_MACHINE);\n    let subkey = hklm\n        .open_subkey_with_flags(\n            r#\"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\"#,\n            KEY_READ,\n        )\n        .expect(\"Failed to open subkey\");\n    let u_uac_status: String = subkey.get_value(\"EnableLUA\").expect(\"Failed to read\");\n    let mut r_uac_status: String = String::new();\n    if u_uac_status == \"1\" {\n        r_uac_status = String::from(\"Enable\");\n    } else {\n        r_uac_status = String::from(\"Disable\");\n    }\n    println!(\"UAC status: {}\", r_uac_status);\n}\n</code></pre>\n\n<p>The error I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'Failed to read: Os { code: 222, kind: Other, message: \"The file type being saved or retrieved has been blocked.\" }', libcore\\result.rs:1009:5\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\nerror: process didn't exit successfully  (exit code: 101)\n</code></pre>\n"}, {"tags": ["excel", "vba", "dll", "rust", "stdcall"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545208775, "post_id": 53847369, "comment_id": 94542261, "body": "Are you sure that your bit-ness is correct, e.g. 64-Bit excel and 64-Bit rust toolchain target?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1545209143, "post_id": 53847369, "comment_id": 94542427, "body": "@ljedrz I think <code>cdylib</code> would be even more correct ^^ <a href=\"https://doc.rust-lang.org/reference/linkage.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/linkage.html</a>"}, {"owner": {"reputation": 124, "user_id": 10792244, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be8f3e8c6d471f9114038f20a72006b?s=128&d=identicon&r=PG&f=1", "display_name": "A. Soikkeli", "link": "https://stackoverflow.com/users/10792244/a-soikkeli"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545211211, "post_id": 53847369, "comment_id": 94543522, "body": "Fixed the type to dylib (have tried dylib, lib, cdylib, staticlib...). Sorry, but this is exactly what I was talking about in the end. My post represents the latest thing I have tried. There are just so many moving parts in this equation that we have to draw multidimensional matrix to represent all the possible combinations I should try. Replicating the situation on other computer is not hard since no dependencies is needed or anything."}, {"owner": {"reputation": 124, "user_id": 10792244, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be8f3e8c6d471f9114038f20a72006b?s=128&d=identicon&r=PG&f=1", "display_name": "A. Soikkeli", "link": "https://stackoverflow.com/users/10792244/a-soikkeli"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1545211675, "post_id": 53847369, "comment_id": 94543780, "body": "And @hellow: yes, I&#39;m using stable-x86_64-pc-windows-msvc."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1545212682, "post_id": 53847369, "comment_id": 94544415, "body": "I have to say: <i>&quot;Works for me&quot;</i> if I use <code>cdylib</code> and the correct target... There is something wrong with your setup. Please triple check that the path is correct (use a simpler one, e.g. <code>D:\\lib.dll</code>) and use <code>rustc --crate-type=cdylib --target=x86_64-pc-windows-msvc</code> (and verify that you are running a 64-bit Excel by looking at the task manager!)"}, {"owner": {"reputation": 124, "user_id": 10792244, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be8f3e8c6d471f9114038f20a72006b?s=128&d=identicon&r=PG&f=1", "display_name": "A. Soikkeli", "link": "https://stackoverflow.com/users/10792244/a-soikkeli"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545217383, "post_id": 53847369, "comment_id": 94547178, "body": "Thanks @hellow for confirmation, now I know where to look. This was very helpful."}, {"owner": {"reputation": 124, "user_id": 10792244, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be8f3e8c6d471f9114038f20a72006b?s=128&d=identicon&r=PG&f=1", "display_name": "A. Soikkeli", "link": "https://stackoverflow.com/users/10792244/a-soikkeli"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545219926, "post_id": 53847369, "comment_id": 94548447, "body": "@hellow I could kiss your legs. When I tried to explicitly use --target flag, rustc was telling me that &quot;target may not be installed&quot; even though it was there and it was default as well. Then I saw that I had Rust Nightly installed in Settings-&gt;Apps&amp;Features. I was wondering if that was messing my setup somehow and uninstalled that. Now everything works like a charm when using cdylib. Couldn&#39;t be happier to finally see this working!"}, {"owner": {"reputation": 14311, "user_id": 5085211, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/eEZjd.png?s=128&g=1", "display_name": "fuglede", "link": "https://stackoverflow.com/users/5085211/fuglede"}, "edited": false, "score": 0, "creation_date": 1591691133, "post_id": 53847369, "comment_id": 110143731, "body": "Excel will tell you that the &quot;path is not found&quot; under several circumstances, including ones where the path is totally fine. I generally find that using Windows Event Logs, or a tool like procmon, to debug Excel is more efficient in those situations."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1545224137, "post_id": 53850612, "comment_id": 94550710, "body": "I don&#39;t get what do mean by &quot;settings -&gt; Apps &amp; features&quot;. There is no such option neither in rust, nor in rustup. I think you are using some kind of gui, but it doesn&#39;t have anything to do with rust itself.."}, {"owner": {"reputation": 124, "user_id": 10792244, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be8f3e8c6d471f9114038f20a72006b?s=128&d=identicon&r=PG&f=1", "display_name": "A. Soikkeli", "link": "https://stackoverflow.com/users/10792244/a-soikkeli"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545311799, "post_id": 53850612, "comment_id": 94585764, "body": "Ok, I edited the answer a bit to be more explicit. I had some kind of manually installed Rust Nightly package in Apps &amp; features and thus I had two separate installations (one via rustup + manual App). I can&#39;t recall in what point did I install that, but uninstalling that solved the problem. Did this explain the problem?"}, {"owner": {"reputation": 124, "user_id": 10792244, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be8f3e8c6d471f9114038f20a72006b?s=128&d=identicon&r=PG&f=1", "display_name": "A. Soikkeli", "link": "https://stackoverflow.com/users/10792244/a-soikkeli"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1545312880, "post_id": 53850612, "comment_id": 94586414, "body": "I must have used some old installers from time before rustup. For example from here you can still find links to Rust 1.0 Windows installers that still work: <a href=\"https://doc.rust-lang.org/1.0.0/book/installing-rust.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.0.0/book/installing-rust.html</a>"}], "tags": [], "owner": {"reputation": 124, "user_id": 10792244, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be8f3e8c6d471f9114038f20a72006b?s=128&d=identicon&r=PG&f=1", "display_name": "A. Soikkeli", "link": "https://stackoverflow.com/users/10792244/a-soikkeli"}, "is_accepted": true, "score": 1, "last_activity_date": 1545311520, "last_edit_date": 1545311520, "creation_date": 1545220182, "answer_id": 53850612, "question_id": 53847369, "link": "https://stackoverflow.com/questions/53847369/calling-functions-from-rust-dll-with-excel-vba/53850612#53850612", "title": "Calling functions from Rust DLL with Excel VBA", "body": "<p>I had Rust some old explicitly installed Nightly in Settings -> Apps &amp; features (of Windows 10), which was messing my setup somehow. After uninstalling Nightly, everything works.</p>\n"}], "owner": {"reputation": 124, "user_id": 10792244, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be8f3e8c6d471f9114038f20a72006b?s=128&d=identicon&r=PG&f=1", "display_name": "A. Soikkeli", "link": "https://stackoverflow.com/users/10792244/a-soikkeli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 920, "favorite_count": 0, "accepted_answer_id": 53850612, "answer_count": 1, "score": 3, "last_activity_date": 1545311520, "creation_date": 1545208637, "last_edit_date": 1545220108, "question_id": 53847369, "link": "https://stackoverflow.com/questions/53847369/calling-functions-from-rust-dll-with-excel-vba", "title": "Calling functions from Rust DLL with Excel VBA", "body": "<p>I'm trying to create a Rust DLL and call those functions from 64bit Excel (Windows 10 and Office 365).</p>\n\n<p>Currently my lib.rs looks like this:</p>\n\n<pre><code>#[no_mangle]\npub extern \"stdcall\" fn square(x: f64) -&gt; f64 {\n    {x * x}\n}\n</code></pre>\n\n<p>I'm compiling with command:</p>\n\n<pre><code>rustc --crate-type=cdylib lib.rs\n</code></pre>\n\n<p>My VBA code looks like this:</p>\n\n<pre><code>Private Declare PtrSafe Function square Lib \"C:\\Users\\user\\rust\\excelfunctions\\src\\lib.dll\" (ByVal x As Double) As Double\n\nSub testsquare()\n    MsgBox square(10)\nEnd Sub\n</code></pre>\n\n<p>Excel is \"helping\" me to debug this by giving always the same error:</p>\n\n<pre><code>Run-time error '48':\n\nFile not found. C:\\Users\\user\\rust\\excelfunctions\\src\\lib.dll\n</code></pre>\n\n<p>I've obviously checked that the file is there and I can see the function with DLL Export Viewer. If I replace the file with C library, I can make the function work. I've managed to make this work with Haskell as well, so I know Excel is talking with the outside world, it's just not saying anything more specific when giving the error message.</p>\n\n<p>I've spent a lot of time with this and tried all possible combinations I could come up with. I would highly appreciate if the person who answers this would first double check that the proposed solution really works in his/her machine, so we don't end up with a very long ping pong of questions and \"no\" answers (been there already). It's just not possible to list here all the possible variations I have already tried.</p>\n\n<p>EDIT: I had Rust Nightly installed in Settings -> Apps &amp; features, which was messing my setup somehow. After uninstalling Nightly, everything works!</p>\n"}, {"tags": ["windows", "rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 2, "creation_date": 1545206461, "post_id": 53846395, "comment_id": 94541252, "body": "This isn&#39;t a broad question. This is a very specific, narrow question."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1545207414, "post_id": 53846395, "comment_id": 94541635, "body": "Sorry @SebastianRedl but &quot;How do I do X&quot; with no effort is not a good question."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1545212549, "post_id": 53846395, "comment_id": 94544345, "body": "@hellow <a href=\"https://meta.stackoverflow.com/questions/253069/whats-the-appropriate-new-current-close-reason-for-how-do-i-do-x\" title=\"whats the appropriate new current close reason for how do i do x\">meta.stackoverflow.com/questions/253069/&hellip;</a> - I don&#39;t know what side of this debate you fall on, but this question isn&#39;t too broad, so it&#39;s not closable. You may downvote it if you feel more research effort should have been made (or shown to have been made), but voting as too broad is wrong. (As an aside, googling &quot;how do I add manifest to rust application&quot; brings up the RFC thread I linked, which might help, but would definitely be intimidating to a newcomer)."}, {"owner": {"reputation": 135, "user_id": 6624054, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209038135182012/picture?type=large", "display_name": "Tomislav Nekic", "link": "https://stackoverflow.com/users/6624054/tomislav-nekic"}, "edited": false, "score": 0, "creation_date": 1545213642, "post_id": 53846395, "comment_id": 94544998, "body": "the question is specific, I did google it and try to find an answer... I also found that link, but did not find solution reading it .. I&#39;m very new to rust and I really do not see the problem with asking here for additional help .. now I&#39;m prevented by stackoverflow to ask additional questions and get help, but ok"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1545216205, "post_id": 53846395, "comment_id": 94546505, "body": "@TomislavNekic but why didn&#39;t you include the RFC in your question then? That would have showed us/me that you did deal with the question and not blindly run to SO."}, {"owner": {"reputation": 135, "user_id": 6624054, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209038135182012/picture?type=large", "display_name": "Tomislav Nekic", "link": "https://stackoverflow.com/users/6624054/tomislav-nekic"}, "edited": false, "score": 0, "creation_date": 1545218991, "post_id": 53846395, "comment_id": 94547984, "body": "sorry, I was not aware that I need to prove that I tried to solve it."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545229047, "post_id": 53846395, "comment_id": 94553598, "body": "@hellow I think this question &amp; answer is still useful and shouldn&#39;t be closed."}], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 1, "last_activity_date": 1545242530, "last_edit_date": 1545242530, "creation_date": 1545206910, "answer_id": 53846958, "question_id": 53846395, "link": "https://stackoverflow.com/questions/53846395/how-do-i-set-the-windows-execution-level-to-ask-user-for-administrator-privilege/53846958#53846958", "title": "How do I set the Windows execution level to ask user for administrator privileges for a Rust program?", "body": "<p>There is an <a href=\"https://github.com/rust-lang/rfcs/issues/721\" rel=\"nofollow noreferrer\">open RFC #721 for manifest support in Rust</a>.</p>\n\n<p>Aside from discussing ways to add native support, the posts contain links to various workarounds using linker switches or other tools. There is currently no nice way to pass linker switches; you have to put a <code>rustflags</code> option into a <a href=\"https://doc.rust-lang.org/cargo/reference/config.html\" rel=\"nofollow noreferrer\">Cargo config file</a> and pass the arguments through to <code>rustc</code> like this: <code>[\"-C\", \"link-args=/exoticlinkerswitch\"]</code>. This is obviously not very portable.</p>\n\n<p>For tools, you can <a href=\"https://msdn.microsoft.com/en-us/library/bb756929.aspx\" rel=\"nofollow noreferrer\">use <code>mt.exe</code> from the Windows SDK to add a manifest to your program after it has been compiled</a>.</p>\n\n<p>Note that Cargo does not currently have a way to execute post-build steps automatically. However, there is a Cargo extension, <code>cargo-make</code> that supports such build processes. You can install it via <code>cargo install cargo-make</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 406, "user_id": 1151237, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ubYi8.jpg?s=128&g=1", "display_name": "Bill Effin Murray", "link": "https://stackoverflow.com/users/1151237/bill-effin-murray"}, "edited": false, "score": 1, "creation_date": 1595178272, "post_id": 60452361, "comment_id": 111378137, "body": "I appreciate modern answers to retro questions, thanks."}], "tags": [], "owner": {"reputation": 192, "user_id": 3268398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ccde2b797d336430ddc588b02a6cb9a6?s=128&d=identicon&r=PG", "display_name": "silvioprog", "link": "https://stackoverflow.com/users/3268398/silvioprog"}, "is_accepted": false, "score": 3, "last_activity_date": 1582895090, "creation_date": 1582895090, "answer_id": 60452361, "question_id": 53846395, "link": "https://stackoverflow.com/questions/53846395/how-do-i-set-the-windows-execution-level-to-ask-user-for-administrator-privilege/60452361#60452361", "title": "How do I set the Windows execution level to ask user for administrator privileges for a Rust program?", "body": "<p>Too late, but answering anyway. :-)</p>\n\n<p>Please take a look at the <a href=\"https://crates.io/crates/winres\" rel=\"nofollow noreferrer\"><code>winres</code></a> library. It contains the following example:</p>\n\n<blockquote>\n  <p>The following manifest will brand the exe as requesting administrator\n  privileges. Thus, everytime it is executed, a Windows UAC dialog will\n  appear.</p>\n\n<pre><code>let mut res = winres::WindowsResource::new();\nres.set_manifest(r#\"\n&lt;assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\"&gt;\n&lt;trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v3\"&gt;\n    &lt;security&gt;\n        &lt;requestedPrivileges&gt;\n            &lt;requestedExecutionLevel level=\"requireAdministrator\" uiAccess=\"false\" /&gt;\n        &lt;/requestedPrivileges&gt;\n    &lt;/security&gt;\n&lt;/trustInfo&gt;\n&lt;/assembly&gt;\n\"#);\n</code></pre>\n</blockquote>\n\n<p>The full example is documented and available <a href=\"https://docs.rs/winres/0.1.11/winres/struct.WindowsResource.html#example-1\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>I have been using this library in a project that contains an icon and requires admin privileges, its <code>build.rs</code> using <code>winres</code> is hosted <a href=\"https://github.com/risoflora/fiscalidade_server/blob/e0a4e1b7a75ed0e172c48f88282d3bc2b4c15e6d/build.rs\" rel=\"nofollow noreferrer\">here</a>. See the generated executable: <a href=\"https://i.stack.imgur.com/ISvU5.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ISvU5.png\" alt=\"enter image description here\"></a></p>\n\n<p>HTH</p>\n"}], "owner": {"reputation": 135, "user_id": 6624054, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209038135182012/picture?type=large", "display_name": "Tomislav Nekic", "link": "https://stackoverflow.com/users/6624054/tomislav-nekic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 740, "favorite_count": 0, "accepted_answer_id": 53846958, "answer_count": 2, "score": 2, "last_activity_date": 1582895090, "creation_date": 1545204214, "last_edit_date": 1545242375, "question_id": 53846395, "link": "https://stackoverflow.com/questions/53846395/how-do-i-set-the-windows-execution-level-to-ask-user-for-administrator-privilege", "title": "How do I set the Windows execution level to ask user for administrator privileges for a Rust program?", "body": "<p>I'm writing a Windows CLI app and I need to run it as administrator. In C# I would add this line to app.manifest:</p>\n\n<pre><code>&lt;requestedExecutionLevel level=\"requireAdministrator\" uiAccess=\"false\" /&gt; \n</code></pre>\n\n<p>How I do that in Rust?</p>\n"}, {"tags": ["rust", "iterator", "range"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545178888, "post_id": 53842907, "comment_id": 94534029, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/53842907/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Namely, <code>verse</code> is missing. Please remove it if it&#39;s irrelevant or provide it if it&#39;s needed. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545178988, "post_id": 53842907, "comment_id": 94534047, "body": "Taking a guess at what <code>verse</code> might be, I see <code>IN LOOP</code> printed, so be sure to provide how you are calling the function, too."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545179107, "post_id": 53842907, "comment_id": 94534071, "body": "Taking a wild shot in the dark, I believe your question may answered by the answers of <a href=\"https://stackoverflow.com/q/42545548/155423\">How can I iterate over a backwards range?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/53842907/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545179338, "post_id": 53842907, "comment_id": 94534112, "body": "Maybe not even a shot in the dark, seeing as how the duplicate uses the exact same function names and arguments as you do."}, {"owner": {"reputation": 434, "user_id": 521078, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/86ada4317834df7fcafcc4893e415edb?s=128&d=identicon&r=PG", "display_name": "George Griffin", "link": "https://stackoverflow.com/users/521078/george-griffin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545179366, "post_id": 53842907, "comment_id": 94534115, "body": "That question actually does answer my question. I created a minimal example that  demonstrates the problem. Should I update my question to reflect that, or should we just mark as already answered?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545179624, "post_id": 53842907, "comment_id": 94534165, "body": "Both are good. The MCVE will help other people who find this question via search engines to tell if it matches their case and the duplicate will answer it."}], "owner": {"reputation": 434, "user_id": 521078, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/86ada4317834df7fcafcc4893e415edb?s=128&d=identicon&r=PG", "display_name": "George Griffin", "link": "https://stackoverflow.com/users/521078/george-griffin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1545179557, "answer_count": 0, "score": 1, "last_activity_date": 1545228923, "creation_date": 1545178443, "last_edit_date": 1545228923, "question_id": 53842907, "link": "https://stackoverflow.com/questions/53842907/why-can-i-not-create-a-range-bounded-by-variables", "closed_reason": "Duplicate", "title": "Why can I not create a range bounded by variables?", "body": "<p>I am working through some of the <a href=\"https://exercism.io/\" rel=\"nofollow noreferrer\">Exercism</a> exercises. I am running into an issue when I try to use variables as the bounds for a range. The code I am working on is as follows:</p>\n\n<pre><code>pub fn test(start: i32, end: i32) {\n    println!(\"{}-{}\", start, end);\n    for n in start..end {\n        println!(\"IN LOOP: {}\", n);\n    }\n}\n\nfn main() {\n    test(7, 5);\n}\n</code></pre>\n\n<p>The issue happens when I try to call this function with any set of <code>start</code> and <code>end</code> params. I can see the output from the first <code>println!</code> call, but the \"IN LOOP\" print never runs. If I replace this line <code>for n in (start..end)</code> with something like <code>for n in (3..0)</code> it runs successfully. I am very curious why it seems like I cannot create a range bounded by variables.</p>\n\n<p>The example is available on <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=34815891c5181691d8e3f7e4d9df0c10\" rel=\"nofollow noreferrer\">The rust playground</a></p>\n"}, {"tags": ["rust", "type-conversion", "binary-data"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1545172969, "post_id": 53841510, "comment_id": 94532476, "body": "What should happen if the bytes aren&#39;t valid UTF8?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1545170283, "creation_date": 1545170283, "answer_id": 53841704, "question_id": 53841510, "link": "https://stackoverflow.com/questions/53841510/how-can-i-convert-a-bytesbytes-to-a-str-without-making-any-copies/53841704#53841704", "title": "How can I convert a bytes::Bytes to a &amp;str without making any copies?", "body": "<p><a href=\"https://docs.rs/bytes/0.4.11/bytes/struct.Bytes.html#impl-Deref\" rel=\"noreferrer\"><code>Bytes</code> dereferences to <code>[u8]</code></a>, so you can use any existing mechanism to convert <code>&amp;[u8]</code> to a string.</p>\n\n<pre><code>use bytes::Bytes; // 0.4.10\nuse std::str;\n\nfn example(b: &amp;Bytes) -&gt; Result&lt;&amp;str, str::Utf8Error&gt; {\n    str::from_utf8(b)\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/19076719/155423\">How do I convert a Vector of bytes (u8) to a string</a></li>\n</ul>\n\n<blockquote>\n  <p>I've tried <code>&amp;body.into()</code></p>\n</blockquote>\n\n<p><code>From</code> and <code>Into</code> are only for infallible conversions. Not all arbitrary chunks of data are valid UTF-8.</p>\n"}], "owner": {"reputation": 56759, "user_id": 392949, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/ef7a66dcbb260f54c3d06b0490b844bf?s=128&d=identicon&r=PG", "display_name": "JoshAdel", "link": "https://stackoverflow.com/users/392949/joshadel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1227, "favorite_count": 0, "accepted_answer_id": 53841704, "answer_count": 1, "score": 1, "last_activity_date": 1545228858, "creation_date": 1545169333, "last_edit_date": 1545228858, "question_id": 53841510, "link": "https://stackoverflow.com/questions/53841510/how-can-i-convert-a-bytesbytes-to-a-str-without-making-any-copies", "title": "How can I convert a bytes::Bytes to a &amp;str without making any copies?", "body": "<p>I have a <a href=\"https://docs.rs/bytes/0.4.11/bytes/\" rel=\"nofollow noreferrer\"><code>bytes::Bytes</code></a> (in this case its the body of a request in actix-web) and another function that expects a string slice argument: <code>foo: &amp;str</code>. What is the proper way to convert the <code>bytes::Bytes</code> to <code>&amp;str</code> so that no copy is made? I've tried <code>&amp;body.into()</code> but I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `std::convert::From&lt;bytes::bytes::Bytes&gt;` is not implemented for `str`\n</code></pre>\n\n<p>Here are the basic function signatures:</p>\n\n<pre><code>pub fn parse_body(data: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    // Do stuff\n    // ....\n    Ok(\"xyz\")\n}\n\nfn consume_data(req: HttpRequest&lt;AppState&gt;, body: bytes::Bytes) -&gt; HttpResponse {\n    let foo = parse_body(&amp;body);\n    // Do stuff\n    HttpResponse::Ok().into()\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime", "borrow-checker", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 5, "last_activity_date": 1545146317, "creation_date": 1545146317, "answer_id": 53836088, "question_id": 53835730, "link": "https://stackoverflow.com/questions/53835730/swapping-two-local-references-leads-to-lifetime-error/53836088#53836088", "title": "Swapping two local references leads to lifetime error", "body": "<p>It is helpful to compile this program with the latest stable toolchain on the 2018 Edition, since it improves the error message a bit:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `y_owned` does not live long enough\n --&gt; src/lib.rs:4:17\n  |\n1 | pub fn foo&lt;T: Copy&gt;(mut x: &amp;T) {\n  |                            - let's call the lifetime of this reference `'1`\n...\n4 |     let mut y = &amp;y_owned;\n  |                 ^^^^^^^^\n  |                 |\n  |                 borrowed value does not live long enough\n  |                 assignment requires that `y_owned` is borrowed for `'1`\n...\n9 | }\n  | - `y_owned` dropped here while still borrowed\n</code></pre>\n\n<p>What happens is:</p>\n\n<ul>\n<li>the input <code>x</code> is a reference with the arbitrary lifetime <code>'1</code> established by the caller.</li>\n<li>The variable <code>y</code> is a reference created locally, and as such it has lifetime \"shorter\" than <code>'1</code>.</li>\n</ul>\n\n<p>As such, you cannot pass the reference in <code>y</code> to <code>x</code>, even if it may seem safe to, because <code>x</code> expects something that lives at least for the lifetime indicated by the caller.</p>\n\n<p>One possible solution is to create a second copy of the value behind x, and borrow that locally.</p>\n\n<pre><code>pub fn foo&lt;T: Copy&gt;(x: &amp;T) {\n    let mut x = &amp;*x;\n    let mut y = &amp;*x;\n    for _ in 0..10 {\n        do_work(x, y);\n        std::mem::swap(&amp;mut x, &amp;mut y);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 8, "last_activity_date": 1545149775, "last_edit_date": 1545149775, "creation_date": 1545146473, "answer_id": 53836146, "question_id": 53835730, "link": "https://stackoverflow.com/questions/53835730/swapping-two-local-references-leads-to-lifetime-error/53836146#53836146", "title": "Swapping two local references leads to lifetime error", "body": "<blockquote>\n  <p>Obviously, <code>x</code> and <code>y</code> have different lifetimes, but why should compiler require <code>y</code> to live as long as <code>x</code>?</p>\n</blockquote>\n\n<p>Because of the signature of <a href=\"https://doc.rust-lang.org/std/mem/fn.swap.html\" rel=\"nofollow noreferrer\"><code>std::mem::swap</code></a>:</p>\n\n<pre><code>pub fn swap&lt;T&gt;(x: &amp;mut T, y: &amp;mut T)\n</code></pre>\n\n<p><code>T</code> is the type of the argument to <code>foo</code>, which is a reference of some lifetime <em>chosen by the caller of <code>foo</code></em>. In the 2018 edition of Rust, the latest compiler gives a slightly more detailed error message in which it calls this lifetime <code>'1</code>. Calling <code>std::mem::swap</code> requires the type of <code>x</code>, <code>&amp;'1 T</code>, to be the same as the type of <code>y</code>, but it can't shrink the lifetime of <code>x</code> to match that of <code>y</code> because the lifetime of <code>x</code> is chosen by the <em>caller</em>, not by <code>foo</code> itself. <a href=\"https://stackoverflow.com/a/53836464/3650362\">Vikram's answer</a> goes into more detail on why the lifetime cannot be shrunk in this case.</p>\n\n<blockquote>\n  <p>I am essentially only modifying references locally inside foo and referenced objects are guaranteed to exist</p>\n</blockquote>\n\n<p>This is true, but it doesn't give you any freedom with respect to the lifetime of <code>x</code> inside <code>foo</code>. To make <code>foo</code> compile, you have to give the compiler another degree of freedom by making a new borrow of which the compiler can choose the lifetime. This version will compile (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d567a51b557d2ab617c25d2139c8d306\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>pub fn foo&lt;T: Copy&gt;(x: &amp;T) {\n    let mut x = &amp;*x;\n    ...\n}\n</code></pre>\n\n<p>This is called <em>reborrowing</em>, and it happens implicitly in some cases, <a href=\"https://stackoverflow.com/questions/32154387/why-is-the-mutable-reference-not-moved-here\">for example, to the receiver of a method call that takes <code>&amp;mut self</code></a>. It does not happen implicitly in the case you presented because <code>swap</code> is not a method.</p>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 3, "last_activity_date": 1545146516, "creation_date": 1545146516, "answer_id": 53836163, "question_id": 53835730, "link": "https://stackoverflow.com/questions/53835730/swapping-two-local-references-leads-to-lifetime-error/53836163#53836163", "title": "Swapping two local references leads to lifetime error", "body": "<p>The lifetime information of a reference is part of its type. Since Rust is a statically typed language, the lifetime of a reference variable can't dynamically change at runtime.</p>\n\n<p>The lifetime of the reference <code>x</code> is specified by the caller, and it must be longer than everything that is created inside the function. The lifetime of <code>y</code> is the lifetime of a variable local to the funciton, and as such is shorter than the lifetime of <code>x</code>. Since the two lifetimes don't match, you can't swap the variables, since you can't dynamically change the type of a variable, and the lifetime is part of its type.</p>\n"}, {"tags": [], "owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "is_accepted": false, "score": 4, "last_activity_date": 1545154185, "last_edit_date": 1545154185, "creation_date": 1545147634, "answer_id": 53836464, "question_id": 53835730, "link": "https://stackoverflow.com/questions/53835730/swapping-two-local-references-leads-to-lifetime-error/53836464#53836464", "title": "Swapping two local references leads to lifetime error", "body": "<p>Mutable references are invariant over the type they refer to. If you have <code>&amp;'a mut T</code>, then it is invariant over <code>T</code>. The signature of <code>swap()</code> expects same types with same lifetimes on both the input arguments. i.e they both are mutable references to <code>T</code>.</p>\n\n<p>Let's look at your problem:</p>\n\n<p>The argument to <code>foo()</code> is <code>&amp;T</code> and with lifetimes it will be <code>foo&lt;'a, T: Copy&gt;(mut x: &amp;'a T)</code> and this lifetime is given by the caller. Within the function you have a local variable <code>y_owned</code> and you take a reference to it with some local lifetime. So at this point we have <code>&amp;'a T</code> which is the input argument with lifetime set by the caller and <code>&amp;'local y_owned</code>  with some local lifetime. All good!</p>\n\n<p>Next, you call <code>swap()</code> and pass to it, mutable references (<code>&amp;mut &amp;T</code> and <code>&amp;mut &amp;y_owned</code>) to the aforementioned references. Now, here's the catch; Since they are mutable references and as mentioned they are invariant over what they point to;  <code>x</code> which is <code>&amp;'a T</code> will not shrink down to the scope of the function call , as a result <code>y</code> which is <code>&amp;'local y_owned</code> will also now be expected to be <code>&amp;'a y_owned</code>, which is not possible, since <code>'a</code> goes beyond <code>y_owned</code>, hence it complains that <code>y_owned</code> does not live long enough.</p>\n\n<p>For more, please refer <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">this</a></p>\n"}], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 440, "favorite_count": 0, "accepted_answer_id": 53836146, "answer_count": 4, "score": 7, "last_activity_date": 1545228662, "creation_date": 1545145017, "last_edit_date": 1545228662, "question_id": 53835730, "link": "https://stackoverflow.com/questions/53835730/swapping-two-local-references-leads-to-lifetime-error", "title": "Swapping two local references leads to lifetime error", "body": "<p>I have two variables of type <code>&amp;T</code>, <code>x</code> and <code>y</code>, which I swap locally inside a function:</p>\n\n<pre><code>pub fn foo&lt;T: Copy&gt;(mut x: &amp;T) {\n    let y_owned = *x;\n    let mut y = &amp;y_owned;\n    for _ in 0..10 {\n        do_work(x, y);\n        std::mem::swap(&amp;mut x, &amp;mut y);\n    }\n}\n\nfn do_work&lt;T&gt;(_x: &amp;T, _y: &amp;T) {}\n</code></pre>\n\n<p>This code fails to compile, giving the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `y_owned` does not live long enough\n --&gt; src/lib.rs:3:22\n  |\n3 |         let mut y = &amp;y_owned;\n  |                      ^^^^^^^ borrowed value does not live long enough\n...\n8 |     }\n  |     - borrowed value only lives until here\n  |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 1:5...\n --&gt; src/lib.rs:1:5\n  |\n1 | /     pub fn foo&lt;T: Copy&gt;(mut x: &amp;T) {\n2 | |         let y_owned = *x;\n3 | |         let mut y = &amp;y_owned;\n4 | |         for _ in 0..10 {\n... |\n7 | |         }\n8 | |     }\n  | |_____^\n</code></pre>\n\n<p>I fail to see why it shouldn't work. <code>x</code> and <code>y</code> have different lifetimes, but why should the compiler require <code>y</code> to live as long as <code>x</code>? I am  only modifying references locally inside <code>foo</code> and referenced objects are guaranteed to exist. Once <code>foo</code> returns, it doesn't matter if these <code>x</code> and <code>y</code> even existed, does it?</p>\n\n<p>For larger context, I am implementing mergesort and want to swap the primary and auxiliary (temporary) arrays this way.</p>\n"}, {"tags": ["rust", "simd"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1545134516, "post_id": 53831502, "comment_id": 94513307, "body": "Could be related: <a href=\"https://github.com/rust-lang/rust/issues/50154\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/50154</a> or <a href=\"https://github.com/rust-lang/rust/issues/56950\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/56950</a>"}, {"owner": {"reputation": 228, "user_id": 172537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/261e58ba9b45f42274c2b907171ab709?s=128&d=identicon&r=PG", "display_name": "kali", "link": "https://stackoverflow.com/users/172537/kali"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545134690, "post_id": 53831502, "comment_id": 94513399, "body": "I just filed the second actually. But yeah, good call."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545134926, "post_id": 53831502, "comment_id": 94513535, "body": "Can confirm, I also get different (wrong) results for <code>_mm256_fmadd_ps</code> in release builds."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1545137819, "post_id": 53831502, "comment_id": 94515130, "body": "Looks like UB to me. You can&#39;t use vendor intrinsics unless the code is compiled with the corresponding CPU features."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545140198, "post_id": 53831502, "comment_id": 94516511, "body": "I can confirm, if you enable the feature flag it will no longer panic..."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1545182540, "post_id": 53831502, "comment_id": 94534726, "body": "@kali Did I answer your question? If so, please mark it as the answer. If not, what else would you like to know?"}, {"owner": {"reputation": 228, "user_id": 172537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/261e58ba9b45f42274c2b907171ab709?s=128&d=identicon&r=PG", "display_name": "kali", "link": "https://stackoverflow.com/users/172537/kali"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1545293456, "post_id": 53831502, "comment_id": 94576724, "body": "Yeah @BurntSushi5, I actually just needed the &quot;you forgot the feature markers&quot; nodge, so the hint on the github issue were enough. But thanks for the extensive anwser, it will certainly help someone else at some point."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545146208, "post_id": 53834813, "comment_id": 94520079, "body": "<i>your code exhibits undefined behavior, and thus, the result is <b>technically legal</i></b> \u2014 did you mean... illegal?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1545146713, "post_id": 53834813, "comment_id": 94520377, "body": "@Shepmaster pretty much legal. In the face of UB, the Rust program could even purchase bed sheets from IKEA and eat them."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545148124, "post_id": 53834813, "comment_id": 94521204, "body": "@Shepmaster Hah, yeah, E_net4 has it right. Since its UB, any result is technically &quot;legal.&quot;"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1545333931, "post_id": 53834813, "comment_id": 94596969, "body": "For all watching: I spoke to Alex Crichton, and he believes this isn&#39;t UB, but is actually a compiler bug. See edit in answer above. Note though that the rest of my answer still applies---if you&#39;re using vendor intrinsics, then you need to tell the compiler to build your code using those features. You could otherwise be subject to performance bugs or runtime errors like SIGILL."}], "tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": true, "score": 11, "last_activity_date": 1545333835, "last_edit_date": 1545333835, "creation_date": 1545142018, "answer_id": 53834813, "question_id": 53831502, "link": "https://stackoverflow.com/questions/53831502/simd-code-works-in-debug-but-does-not-in-release/53834813#53834813", "title": "SIMD code works in Debug, but does not in Release", "body": "<p>I can indeed confirm that this code causes the assert to trip in release mode:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run --release\n    Finished release [optimized] target(s) in 0.00s\n     Running `target/release/so53831502`\nar: __m256(2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nbr: __m256(-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0)\nabr: __m256(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nabr: __m256(-1.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0)\nab: [-1.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0]\nthread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1.0`,\n right: `-2.0`', src/main.rs:24:9\n</code></pre>\n\n<p>This appears to be a compiler bug, see <a href=\"https://github.com/rust-lang/rust/issues/50154\" rel=\"nofollow noreferrer\">here</a> and <a href=\"https://reviews.llvm.org/D53554\" rel=\"nofollow noreferrer\">here</a>. In particular, you are calling routines like <a href=\"https://doc.rust-lang.org/core/arch/x86_64/fn._mm256_set1_ps.html\" rel=\"nofollow noreferrer\"><code>_mm256_set1_ps</code></a> and <a href=\"https://doc.rust-lang.org/core/arch/x86_64/fn._mm256_fmadd_ps.html\" rel=\"nofollow noreferrer\"><code>_mm256_fmadd_ps</code></a>, which require the CPU features <code>avx</code> and <code>fma</code> respectively, but neither your code nor your compilation command indicate to the compiler that such features should be used.</p>\n\n<p>One way of fixing this is to tell the compiler to compile the entire program with both the <code>avx</code> and <code>fma</code> features enabled, like so:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ RUSTFLAGS=\"-C target-feature=+avx,+fma\" cargo run --release\n   Compiling so53831502 v0.1.0 (/tmp/so53831502)\n    Finished release [optimized] target(s) in 0.36s\n     Running `target/release/so53831502`\nar: __m256(2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nbr: __m256(-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0)\nabr: __m256(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nabr: __m256(-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nab: [-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n</code></pre>\n\n<p>Another approach that achieves the same result is to tell the compiler to use all available CPU features on your CPU:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ RUSTFLAGS=\"-C target-cpu=native\" cargo run --release\n   Compiling so53831502 v0.1.0 (/tmp/so53831502)\n    Finished release [optimized] target(s) in 0.34s\n     Running `target/release/so53831502`\nar: __m256(2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nbr: __m256(-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0)\nabr: __m256(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nabr: __m256(-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nab: [-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n</code></pre>\n\n<p>However, both of these compilation commands produce binaries that can only run on CPUs that support the <code>avx</code> and <code>fma</code> features. If that's not a problem for you, then this is a fine solution. If you would instead like to build portable binaries, then you can perform CPU feature detection at runtime, and compile certain functions with specific CPU features enabled. It is then your responsibility to guarantee that said functions are only invoked when the corresponding CPU feature is enabled and available. This process is documented as part of the <a href=\"https://doc.rust-lang.org/std/arch/index.html#dynamic-cpu-feature-detection\" rel=\"nofollow noreferrer\">dynamic CPU feature detection</a> section of the <code>std::arch</code> docs.</p>\n\n<p>Here's an example that uses runtime CPU feature detection:</p>\n\n<pre><code>use std::arch::x86_64::*;\nuse std::process;\n\nfn main() {\n    if is_x86_feature_detected!(\"avx\") &amp;&amp; is_x86_feature_detected!(\"fma\") {\n        // SAFETY: This is safe because we're guaranteed to support the\n        // necessary CPU features.\n        unsafe { doit(); }\n    } else {\n        eprintln!(\"unsupported CPU\");\n        process::exit(1);\n    }\n}\n\n#[target_feature(enable = \"avx,fma\")]\nunsafe fn doit() {\n    let a = vec![2.0f32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\n    let b = -1.0f32;\n\n    let ar = _mm256_loadu_ps(a.as_ptr());\n    println!(\"ar: {:?}\", ar);\n\n    let br = _mm256_set1_ps(b);\n    println!(\"br: {:?}\", br);\n\n    let mut abr = _mm256_setzero_ps();\n    println!(\"abr: {:?}\", abr);\n\n    abr = _mm256_fmadd_ps(ar, br, abr);\n    println!(\"abr: {:?}\", abr);\n\n    let mut ab = [0.0; 8];\n    _mm256_storeu_ps(ab.as_mut_ptr(), abr);\n    println!(\"ab: {:?}\", ab);\n\n    assert_eq!(ab[0], -2.0f32);\n}\n</code></pre>\n\n<p>To run it, you no longer need to set any compilation flags:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run --release\n   Compiling so53831502 v0.1.0 (/tmp/so53831502)\n    Finished release [optimized] target(s) in 0.29s\n     Running `target/release/so53831502`\nar: __m256(2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nbr: __m256(-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0)\nabr: __m256(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nabr: __m256(-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\nab: [-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n</code></pre>\n\n<p>If you run the resulting binary on a CPU that doesn't support either <code>avx</code> or <code>fma</code>, then the program should exit with an error message: <code>unsupported CPU</code>.</p>\n\n<p>In general, I think the docs for <code>std::arch</code> could be improved. In particular, the key boundary at which you need to split your code is dependent upon whether your vector types appear in your function signature. That is, the <code>doit</code> routine does not require anything beyond the standard x86 (or x86_64) function ABI to call, and is thus safe to call from functions that don't otherwise support <code>avx</code> or <code>fma</code>. However, internally, the function has been told to compile its code using additional instruction set extensions based on the given CPU features. This is achieved via the <code>target_feature</code> attribute. If you, for example, supplied an incorrect target feature:</p>\n\n<pre><code>#[target_feature(enable = \"ssse3\")]\nunsafe fn doit() {\n    // ...\n}\n</code></pre>\n\n<p>then the program exhibits the same behavior as your initial program.</p>\n"}], "owner": {"reputation": 228, "user_id": 172537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/261e58ba9b45f42274c2b907171ab709?s=128&d=identicon&r=PG", "display_name": "kali", "link": "https://stackoverflow.com/users/172537/kali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 296, "favorite_count": 0, "accepted_answer_id": 53834813, "answer_count": 1, "score": 9, "last_activity_date": 1545333835, "creation_date": 1545130666, "last_edit_date": 1545140800, "question_id": 53831502, "link": "https://stackoverflow.com/questions/53831502/simd-code-works-in-debug-but-does-not-in-release", "title": "SIMD code works in Debug, but does not in Release", "body": "<p>This code works in debug mode, but panics because of the assert in release mode.</p>\n\n<pre><code>use std::arch::x86_64::*;\n\nfn main() {\n    unsafe {\n        let a = vec![2.0f32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\n        let b = -1.0f32;\n\n        let ar = _mm256_loadu_ps(a.as_ptr());\n        println!(\"ar: {:?}\", ar);\n\n        let br = _mm256_set1_ps(b);\n        println!(\"br: {:?}\", br);\n\n        let mut abr = _mm256_setzero_ps();\n        println!(\"abr: {:?}\", abr);\n\n        abr = _mm256_fmadd_ps(ar, br, abr);\n        println!(\"abr: {:?}\", abr);\n\n        let mut ab = [0.0; 8];\n        _mm256_storeu_ps(ab.as_mut_ptr(), abr);\n        println!(\"ab: {:?}\", ab);\n\n        assert_eq!(ab[0], -2.0f32);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a13b1ac0d287cba6230c2515f1ff87e0\" rel=\"noreferrer\">Playground</a>)</p>\n"}, {"tags": ["rust", "graphql", "rust-tokio", "juniper"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545150858, "post_id": 53837272, "comment_id": 94522781, "body": "By your wording, it appears you are a participant in the Juniper project. If so, it&#39;s good to directly state such connections."}, {"owner": {"reputation": 11, "user_id": 10804934, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Zu8fQeQZb2o/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcZ2oeev8kF6cBpje-RiV6vQbM9fMg/mo/photo.jpg?sz=128", "display_name": "Kevin Combriat", "link": "https://stackoverflow.com/users/10804934/kevin-combriat"}, "edited": false, "score": 0, "creation_date": 1545181621, "post_id": 53837272, "comment_id": 94534578, "body": "Thank you very much for your answer, I will take a look at the rayon crate."}, {"owner": {"reputation": 7268, "user_id": 28645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5f51a8aed80f7259d7653ff6845257d5?s=128&d=identicon&r=PG", "display_name": "Marcus Griep", "link": "https://stackoverflow.com/users/28645/marcus-griep"}, "edited": false, "score": 0, "creation_date": 1548274811, "post_id": 53837272, "comment_id": 95487480, "body": "Nope, not a participant, but I do actively use the project."}], "tags": [], "owner": {"reputation": 7268, "user_id": 28645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5f51a8aed80f7259d7653ff6845257d5?s=128&d=identicon&r=PG", "display_name": "Marcus Griep", "link": "https://stackoverflow.com/users/28645/marcus-griep"}, "is_accepted": false, "score": 0, "last_activity_date": 1545150816, "last_edit_date": 1545150816, "creation_date": 1545150343, "answer_id": 53837272, "question_id": 53828783, "link": "https://stackoverflow.com/questions/53828783/is-it-possible-to-perform-any-kind-of-parallel-computations-in-a-graphql-object/53837272#53837272", "title": "Is it possible to perform any kind of parallel computations in a GraphQL Object field using Tokio and Juniper?", "body": "<p>Juniper is not yet set up to handle parallel resolution of fields, and has no integration with any async frameworks like Tokio. Instead, you can do some of that yourself, under the covers. If you have an iterator of the requests you need to make, you can farm them out to a thread pool by using the Rayon crate, which exposes a function <a href=\"https://docs.rs/rayon/1.0.3/rayon/iter/trait.IntoParallelRefIterator.html#tymethod.par_iter\" rel=\"nofollow noreferrer\"><code>.par_iter()</code></a> that can automatically parallelize the work.</p>\n\n<p>I too am interested in moving Juniper onto an async model, but that work likely won't begin until after async/await lands in stable.</p>\n"}], "owner": {"reputation": 11, "user_id": 10804934, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Zu8fQeQZb2o/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcZ2oeev8kF6cBpje-RiV6vQbM9fMg/mo/photo.jpg?sz=128", "display_name": "Kevin Combriat", "link": "https://stackoverflow.com/users/10804934/kevin-combriat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 200, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1545150816, "creation_date": 1545120818, "last_edit_date": 1545150299, "question_id": 53828783, "link": "https://stackoverflow.com/questions/53828783/is-it-possible-to-perform-any-kind-of-parallel-computations-in-a-graphql-object", "title": "Is it possible to perform any kind of parallel computations in a GraphQL Object field using Tokio and Juniper?", "body": "<p>This question <em>might</em> be closely related to <a href=\"https://github.com/graphql-rust/juniper/issues/2\" rel=\"nofollow noreferrer\">this GitHub issue</a>.</p>\n\n<p>I have a GraphQL server written in Rust using Juniper. This server needs to perform some HTTP requests in order to build and send back the data required by the clients.</p>\n\n<p>Some fields may need up to ~15 HTTP requests, at most (essentially collections). To run theses requests sequentially might take time, and I was considering using Tokio + Futures to run them in parallel. It <em>seems</em> to be technically doable, but so far I have no clue on how to actually implement such a solution, and couldn't find any example using Juniper and Tokio, until I found the GitHub issue mentioned earlier...</p>\n\n<p>Something like the following:</p>\n\n<pre><code>graphql_object(Whatever: MyContext |&amp;self| {\n    field parallel_requests(&amp;executor) -&gt; ??? {\n        multiple_parallel_http_requests()\n    }\n}\n</code></pre>\n\n<p>Where <code>???</code> is <code>FieldResult&lt;Vec&lt;AnyResource&gt;&gt;</code>(?). And if so, how?</p>\n"}, {"tags": ["csv", "character-encoding", "rust", "windows-1252"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1545134843, "post_id": 53826986, "comment_id": 94513478, "body": "@LinkerStorm Could you please explain why your last code snippet is insufficient to solve your problem? Byte records give you raw access to the bytes in a somewhat encoding asgnostic way. (The only requirement is that the encoding be ASCII compatible, which I believe Windows-1252 is.)"}], "answers": [{"comments": [{"owner": {"reputation": 101, "user_id": 1627974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96e287624c123902c27850cab816c8b8?s=128&d=identicon&r=PG", "display_name": "Linker Storm", "link": "https://stackoverflow.com/users/1627974/linker-storm"}, "edited": false, "score": 1, "creation_date": 1545153034, "post_id": 53833111, "comment_id": 94524032, "body": "Thanks @BurnSushi5, you&#39;ve got the point : my goal is to get the data in Rust string datatype. And you&#39;ve answered my question, many thanks !"}, {"owner": {"reputation": 349, "user_id": 6923661, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/prVyE.jpg?s=128&g=1", "display_name": "max", "link": "https://stackoverflow.com/users/6923661/max"}, "edited": false, "score": 1, "creation_date": 1598264258, "post_id": 53833111, "comment_id": 112391491, "body": "It&#39;s amazing how some people make such an out-sized contribution. This would be the umpteenth time BurntSushi saved me from drowning in Rust. Thanks Andrew! :)"}], "tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": true, "score": 17, "last_activity_date": 1545136753, "last_edit_date": 1545136753, "creation_date": 1545136403, "answer_id": 53833111, "question_id": 53826986, "link": "https://stackoverflow.com/questions/53826986/how-to-read-a-non-utf8-encoded-csv-file/53833111#53833111", "title": "How to read a non-UTF8 encoded csv file?", "body": "<p>I suspect this question is under specified. In particular, it's not clear why your use of the <a href=\"https://docs.rs/csv/1.0.5/csv/struct.ByteRecord.html\" rel=\"noreferrer\"><code>ByteRecord</code></a> API is insufficient. In the csv crate, byte records specifically exists for exactly cases like this, where your CSV data isn't strictly UTF-8, but is in an alternative encoding such as Windows-1252 that is ASCII compatible. (An ASCII compatible encoding is an encoding in which ASCII is a subset. Windows-1252 and UTF-8 are both ASCII compatible. UTF-16 is not.) Your code sample above shows that you're using byte records, but doesn't explain why this is insufficient.</p>\n\n<p>With that said, if your goal is to get your data into Rust's string data type (<code>String</code>/<code>&amp;str</code>), then your <em>only option</em> is to transcode the contents of your CSV data from Windows-1252 to UTF-8. This is necessary because Rust's string data type uses UTF-8 for its in-memory representation. You cannot have a Rust <code>String</code>/<code>&amp;str</code> that is Windows-1252 encoded because Windows-1252 is not a subset of UTF-8.</p>\n\n<p>Other comments have recommended the use of the <code>encoding</code> crate. However, I would instead recommend the use of <a href=\"https://docs.rs/encoding_rs/0.8.13/encoding_rs/\" rel=\"noreferrer\"><code>encoding_rs</code></a>, if your use case aligns with the same use cases solved by the <a href=\"https://encoding.spec.whatwg.org/\" rel=\"noreferrer\">Encoding Standard</a>, which is specifically geared towards the web. Fortunately, I believe such an alignment exists.</p>\n\n<p>In order to satisfy your criteria for reading CSV data in a streaming fashion without first loading the entire contents into memory, you need to use a wrapper around the <code>encoding_rs</code> crate that implements streaming decoding for you. The <a href=\"https://docs.rs/encoding_rs_io/0.1.3/encoding_rs_io/\" rel=\"noreferrer\"><code>encoding_rs_io</code></a> crate provides this for you. (It's used inside of <a href=\"https://github.com/BurntSushi/ripgrep\" rel=\"noreferrer\">ripgrep</a> to do fast streaming decoding before searching UTF-8.)</p>\n\n<p>Here is an example program that puts all of the above together, using Rust 2018:</p>\n\n<pre><code>use std::fs::File;\nuse std::process;\n\nuse encoding_rs::WINDOWS_1252;\nuse encoding_rs_io::DecodeReaderBytesBuilder;\n\nfn main() {\n    if let Err(err) = try_main() {\n        eprintln!(\"{}\", err);\n        process::exit(1);\n    }\n}\n\nfn try_main() -&gt; csv::Result&lt;()&gt; {\n    let file = File::open(\"test.csv\")?;\n    let transcoded = DecodeReaderBytesBuilder::new()\n        .encoding(Some(WINDOWS_1252))\n        .build(file);\n    let mut rdr = csv::ReaderBuilder::new()\n        .delimiter(b';')\n        .from_reader(transcoded);\n    for result in rdr.records() {\n        let r = result?;\n        println!(\"{:?}\", r);\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>with the <code>Cargo.toml</code>:</p>\n\n<pre><code>[package]\nname = \"so53826986\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\ncsv = \"1\"\nencoding_rs = \"0.8.13\"\nencoding_rs_io = \"0.1.3\"\n</code></pre>\n\n<p>And the output:</p>\n\n<pre><code>$ cargo run --release\n   Compiling so53826986 v0.1.0 (/tmp/so53826986)\n    Finished release [optimized] target(s) in 0.63s\n     Running `target/release/so53826986`\nStringRecord([\"Caf\u00e9\", \"au\", \"lait\"])\n</code></pre>\n\n<p>In particular, if you swap out <code>rdr.records()</code> for <code>rdr.byte_records()</code>, then we can see more clearly what happened:</p>\n\n<pre><code>$ cargo run --release\n   Compiling so53826986 v0.1.0 (/tmp/so53826986)\n    Finished release [optimized] target(s) in 0.61s\n     Running `target/release/so53826986`\nByteRecord([\"Caf\\\\xc3\\\\xa9\", \"au\", \"lait\"])\n</code></pre>\n\n<p>Namely, your input contained <code>Caf\\xE9</code>, but the byte record now contains <code>Caf\\xC3\\xA9</code>. This is a result of translating the Windows-1252 codepoint value of <code>233</code> (encoded as its literal byte, <code>\\xE9</code>) to <code>U+00E9 LATIN SMALL LETTER E WITH ACUTE</code>, which is UTF-8 encoded as <code>\\xC3\\xA9</code>.</p>\n"}], "owner": {"reputation": 101, "user_id": 1627974, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96e287624c123902c27850cab816c8b8?s=128&d=identicon&r=PG", "display_name": "Linker Storm", "link": "https://stackoverflow.com/users/1627974/linker-storm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2456, "favorite_count": 0, "accepted_answer_id": 53833111, "answer_count": 1, "score": 4, "last_activity_date": 1545141251, "creation_date": 1545111661, "last_edit_date": 1545141251, "question_id": 53826986, "link": "https://stackoverflow.com/questions/53826986/how-to-read-a-non-utf8-encoded-csv-file", "title": "How to read a non-UTF8 encoded csv file?", "body": "<p>With the <a href=\"https://docs.rs/crate/csv/1.0.5\" rel=\"nofollow noreferrer\">csv</a> crate and the latest Rust version 1.31.0, I would want to read CSV files with ANSI (Windows 1252) encoding, as easily as in UTF-8.</p>\n\n<p>Things I have tried (with no luck), after reading the whole file in a <code>Vec&lt;u8&gt;</code>:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"nofollow noreferrer\"><code>CString</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/ffi/struct.OsString.html\" rel=\"nofollow noreferrer\"><code>OsString</code></a></li>\n</ul>\n\n<p>Indeed, in my company, we have a lot of CSV files, ANSI encoded.</p>\n\n<p>Also, I would want, if possible, not to load the entire file in a <code>Vec&lt;u8&gt;</code> but a reading line by line (<code>CRLF</code> ending), as many of the files are big (50 Mb or more\u2026).</p>\n\n<p>In the file <em>Cargo.toml</em>, I have this dependency:</p>\n\n<pre><code>[dependencies]\ncsv = \"1\"\n</code></pre>\n\n<p><em>test.csv</em> consist of the following content saved as Windows-1252 encoding:</p>\n\n<pre><code>Caf\u00e9;au;lait\nCaf\u00e9;au;lait\n</code></pre>\n\n<p>The code in <em>main.rs</em> file:</p>\n\n<pre><code>extern crate csv;\n\nuse std::error::Error;\nuse std::fs::File;\nuse std::io::BufReader;\nuse std::path::Path;\nuse std::process;\n\nfn example() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let file_name = r\"test.csv\";\n    let file_handle = File::open(Path::new(file_name))?;\n    let reader = BufReader::new(file_handle);\n\n    let mut rdr = csv::ReaderBuilder::new()\n        .delimiter(b';')\n        .from_reader(reader);\n\n    // println!(\"ANSI\");\n    // for result in rdr.byte_records() {\n    //    let record = result?;\n    //    println!(\"{:?}\", record);\n    // }\n\n    println!(\"UTF-8\");\n    for result in rdr.records() {\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = example() {\n        println!(\"error running example: {}\", err);\n        process::exit(1);\n    }\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>UTF-8\nerror running example: CSV parse error: record 0 (line 1, field: 0, byte: 0): invalid utf-8: invalid UTF-8 in field 0 near byte index 3\nerror: process didn't exit successfully: `target\\debug\\test-csv.exe` (exit code: 1)\n</code></pre>\n\n<p>When using <code>rdr.byte_records()</code> (uncommenting the relevant part of code), the output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ANSI\nByteRecord([\"Caf\\\\xe9\", \"au\", \"lait\"])\n</code></pre>\n"}, {"tags": ["list", "data-structures", "rust"], "comments": [{"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 3, "creation_date": 1545111978, "post_id": 53826941, "comment_id": 94502590, "body": "A forward-link-only list could be implemented as a <code>struct List&lt;T&gt; { head: T, tail: Option&lt;Box&lt;List&lt;T&gt;&gt;&gt; }</code>. There are several ways to do it. See also <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\"><i>Learning Rust With Entirely Too Many Linked Lists</i></a>."}, {"owner": {"reputation": 953, "user_id": 608958, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/920c3fee71480a12e35d5084f44d8638?s=128&d=identicon&r=PG", "display_name": "rincewind", "link": "https://stackoverflow.com/users/608958/rincewind"}, "reply_to_user": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1545113167, "post_id": 53826941, "comment_id": 94502927, "body": "I don&#39;t think that given an iterator you can delete an element from a forward list."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1545123491, "post_id": 53826941, "comment_id": 94507181, "body": "@rincewind: Actually you can. The trick is to make the iterator contain a pointer to the node <i>before</i> the data it refers to. It makes the code a bit more complex, but you can delete using it."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1545140998, "post_id": 53826941, "comment_id": 94517034, "body": "The Rust implementation of some data structures is much more convenient, and sometimes more efficient, if you use some <code>unsafe</code> code, and there is nothing wrong with that. I believe implementing an LRU cache where both lookup and insertion are O(1) is such a case. I suggest looking into the implementation of the <a href=\"https://github.com/contain-rs/lru-cache\" rel=\"nofollow noreferrer\"><code>lru-cache</code></a> crate, which is based on <a href=\"https://github.com/contain-rs/linked-hash-map\" rel=\"nofollow noreferrer\"><code>linked-hash-map</code></a>,"}, {"owner": {"reputation": 953, "user_id": 608958, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/920c3fee71480a12e35d5084f44d8638?s=128&d=identicon&r=PG", "display_name": "rincewind", "link": "https://stackoverflow.com/users/608958/rincewind"}, "edited": false, "score": 1, "creation_date": 1545149215, "post_id": 53826941, "comment_id": 94521844, "body": "Curious why the question is downvoted?"}], "owner": {"reputation": 953, "user_id": 608958, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/920c3fee71480a12e35d5084f44d8638?s=128&d=identicon&r=PG", "display_name": "rincewind", "link": "https://stackoverflow.com/users/608958/rincewind"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1545145821, "creation_date": 1545111329, "last_edit_date": 1545145821, "question_id": 53826941, "link": "https://stackoverflow.com/questions/53826941/how-to-model-a-list-where-removing-an-item-leaves-existing-iterators-in-a-valid", "title": "How to model a list where removing an item leaves existing iterators in a valid state?", "body": "<p>I am implementing a solution to the <a href=\"https://leetcode.com/problems/lru-cache/\" rel=\"nofollow noreferrer\">LeetCode LRU Cache problem</a>.\nIn C++, I would have a list of (key, value) tuples and an <code>unordered_map</code> from the key to the list iterator. The crucial property of <code>std::list</code> here is that when you remove a list element at a given list iterator, all other iterators remain valid.</p>\n\n<p>How to implement this in Rust? Rust iterators are very unlike C++ iterators - more like the proposed ranges in C++, perhaps?</p>\n"}, {"tags": ["file", "rust", "binaryfiles"], "comments": [{"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 2, "creation_date": 1545108554, "post_id": 53826371, "comment_id": 94501721, "body": "Can you share the sample code you are currently using to write &amp; read the file? What makes you think the file is not &quot;binary&quot;?"}, {"owner": {"reputation": 91, "user_id": 10804208, "user_type": "registered", "profile_image": "https://graph.facebook.com/2049227995120319/picture?type=large", "display_name": "Yen Chun Lee", "link": "https://stackoverflow.com/users/10804208/yen-chun-lee"}, "reply_to_user": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1545111281, "post_id": 53826371, "comment_id": 94502372, "body": "@harmic hi thank you for response. I add some code in my question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545146032, "post_id": 53826371, "comment_id": 94519961, "body": "Welcome to Stack Overflow! Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>file_write</code> and <code>table_index_name</code> instead, please."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545146137, "post_id": 53827079, "comment_id": 94520030, "body": "Why the unnecessary curly braces inside of <code>main</code>?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 7, "creation_date": 1545149190, "post_id": 53827079, "comment_id": 94521830, "body": "@Shepmaster The first pair of braces makes sure the file is closed before it&#39;s opened and read again. This is not strictly needed, since the code is using unbuffered I/O, so you would be able to read the file contents back even before the file is closed. However, this is kind of beside the point for this question, so I think the version including the braces is less confusing."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": false, "score": 20, "last_activity_date": 1545146116, "last_edit_date": 1545146116, "creation_date": 1545112299, "answer_id": 53827079, "question_id": 53826371, "link": "https://stackoverflow.com/questions/53826371/how-to-create-a-binary-file-with-rust/53827079#53827079", "title": "How to create a binary file with Rust?", "body": "<p>Rust's <code>std::fs::File</code> does not have a concept of opening files in text or binary mode. All files are opened as \"binary\" files, and no translation of characters such as line feed and carriage return is performed.</p>\n\n<p>Your problem stems from using the <a href=\"https://doc.rust-lang.org/core/macro.write.html\" rel=\"noreferrer\"><code>write!</code></a> macro. This macro is for formatting data into printable format, and should not be used if you want to write binary data. In fact the <a href=\"https://doc.rust-lang.org/std/fmt/trait.Binary.html\" rel=\"noreferrer\"><code>{:b}</code> format specifier</a> you have used will convert the value into a printable binary string of ASCII <code>1</code> and <code>0</code> characters.</p>\n\n<p>Instead, use the functions provided by trait <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html\" rel=\"noreferrer\"><code>std::io::Write</code></a>. This trait is implemented directly by <code>File</code>, or you can use a <code>BufWriter</code> for potentially better performance.</p>\n\n<p>For example: here I am using <code>write_all</code> to write a slice of <code>u8</code> to a file, then using <code>read_to_end</code> to read the same file back into a <code>Vec</code>.</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    {\n        let mut file = File::create(\"test\")?;\n        // Write a slice of bytes to the file\n        file.write_all(&amp;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])?;\n    }\n\n    {\n        let mut file = File::open(\"test\")?;\n        // read the same file back into a Vec of bytes\n        let mut buffer = Vec::&lt;u8&gt;::new();\n        file.read_to_end(&amp;mut buffer)?;\n        println!(\"{:?}\", buffer);\n    }\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 10804208, "user_type": "registered", "profile_image": "https://graph.facebook.com/2049227995120319/picture?type=large", "display_name": "Yen Chun Lee", "link": "https://stackoverflow.com/users/10804208/yen-chun-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9387, "favorite_count": 0, "answer_count": 1, "score": 8, "last_activity_date": 1545228560, "creation_date": 1545107047, "last_edit_date": 1545228560, "question_id": 53826371, "link": "https://stackoverflow.com/questions/53826371/how-to-create-a-binary-file-with-rust", "title": "How to create a binary file with Rust?", "body": "<p>I can write binary code to file with Rust. However, when I create a file, the file created is a text file, not binary.\nI can create a binary file with C++ like this:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>ofstream is(\"1.in\", ofstream::binary | ofstream::out | ofstream:: trunc);\n</code></pre>\n\n<p>How about in Rust? This is my attempt:</p>\n\n<pre><code>struct IndexDataStructureInt {\n    row: u32,\n    key_value: u32,\n}\n\nlet mut index_arr: Vec&lt;IndexDataStructureInt&gt; = Vec::new();\n// doing something push 100 IndexDataStructureInt to index_arr\nlet mut fileWrite = File::create(tableIndexName).unwrap();\nfor i in 0..index_arr.len() {\n    write!(\n        fileWrite,\n        \"{:b}{:b}\",\n        index_arr[i].row, index_arr[i].key_value\n    );\n}\n</code></pre>\n\n<p>After running this code, it writes 200 u32 integer binary number to the file <code>tableIndexName</code>. However, the file size is not 800bytes. It is about 4KB.</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545082734, "post_id": 53823252, "comment_id": 94495453, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545082825, "post_id": 53823252, "comment_id": 94495490, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/53823252/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. For example: <code>no function or associated item named `new` found for type</code>. We don&#39;t know what version of Itertools you are using. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1545083017, "post_id": 53823252, "comment_id": 94495558, "body": "You are asking for performance improvements, but you haven&#39;t provided any code that measures the performance or shown what your testing methodology is. You state &quot;hundreds of structs&quot; but don&#39;t provide a way to construct these values, forcing any answerer to do <i>a lot</i> of work to even attempt to solve the problem. You haven&#39;t provided your environment information (CPU/memory, operating system, Rust version, etc.) or what restrictions / requirements the program has (will it always run on a particular CPU, etc.)."}], "answers": [{"comments": [{"owner": {"reputation": 193, "user_id": 5160246, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Gtf-KeKKxJc/AAAAAAAAAAI/AAAAAAAABOA/YhZoCc76iG4/photo.jpg?sz=128", "display_name": "Danny Meyer", "link": "https://stackoverflow.com/users/5160246/danny-meyer"}, "edited": false, "score": 0, "creation_date": 1545167307, "post_id": 53825685, "comment_id": 94530451, "body": "I&#39;ll improve the question, but in the short-term, this did improve performance by 2x so I&#39;ve accepted the answer. Thank you Veedrac."}], "tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": true, "score": 1, "last_activity_date": 1545100719, "creation_date": 1545100719, "answer_id": 53825685, "question_id": 53823252, "link": "https://stackoverflow.com/questions/53823252/what-is-a-faster-way-to-perform-element-wise-summation-of-different-length-vecto/53825685#53825685", "title": "What is a faster way to perform element-wise summation of different length vectors?", "body": "<p><code>sum_vec</code>\u00a0would be much faster if you extracted the branch out of the loop and stopped making new vectors.</p>\n\n<pre><code>fn sum_vec(a: &amp;mut Vec&lt;f64&gt;, b: &amp;[f64]) {\n    if a.len() &lt; b.len() {\n        a.resize(b.len(), 0.0);\n    }\n\n    for (ai, bi) in a.iter_mut().zip(b) {\n        *ai += *bi;\n    }\n}\n</code></pre>\n\n<p>or somesuch</p>\n\n<p>Extracting the <code>resize</code> such that you only ever resize once to the maximum length would be even faster, and sorting <code>vec_wav</code> by length (longest first) should improve branch prediction and cache locality.</p>\n"}], "owner": {"reputation": 193, "user_id": 5160246, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Gtf-KeKKxJc/AAAAAAAAAAI/AAAAAAAABOA/YhZoCc76iG4/photo.jpg?sz=128", "display_name": "Danny Meyer", "link": "https://stackoverflow.com/users/5160246/danny-meyer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 363, "favorite_count": 0, "accepted_answer_id": 53825685, "answer_count": 1, "score": -1, "last_activity_date": 1545100719, "creation_date": 1545082193, "last_edit_date": 1545082645, "question_id": 53823252, "link": "https://stackoverflow.com/questions/53823252/what-is-a-faster-way-to-perform-element-wise-summation-of-different-length-vecto", "title": "What is a faster way to perform element-wise summation of different length vectors?", "body": "<p>I'm trying to find a faster way to sum hundreds of these structs, each with a different length:</p>\n\n<pre><code>pub struct StereoWaveform {\n    pub l_buffer: Vec&lt;f64&gt;,\n    pub r_buffer: Vec&lt;f64&gt;,\n}\n</code></pre>\n\n<p>I'm currently doing it like this:</p>\n\n<pre><code>fn sum_all_waveforms(vec_wav: Vec&lt;StereoWaveform&gt;) -&gt; StereoWaveform {\n    let mut result = StereoWaveform::new(0);\n    for wav in vec_wav {\n        result.l_buffer = sum_vec(&amp;result.l_buffer, wav.l_buffer);\n        result.r_buffer = sum_vec(&amp;result.r_buffer, wav.r_buffer)\n    }\n\n    result\n}\n\nfn sum_vec(a: &amp;Vec&lt;f64&gt;, b: Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt; {\n    let vec_len = std::cmp::max(a.len(), b.len());\n    let mut acc: Vec&lt;f64&gt; = vec![0.0; vec_len];\n    for (i, e) in a.iter().zip_longest(&amp;b).enumerate() {\n        match e {\n            itertools::EitherOrBoth::Both(v1, v2) =&gt; acc[i] = v1 + v2,\n            itertools::EitherOrBoth::Left(e) =&gt; acc[i] = *e,\n            itertools::EitherOrBoth::Right(e) =&gt; acc[i] = *e,\n        }\n    }\n\n    acc\n}\n</code></pre>\n\n<p>I'm already using <a href=\"https://github.com/rayon-rs/rayon\" rel=\"nofollow noreferrer\">Rayon</a> in the project, so it would be nice to find a  solution using that. </p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545062939, "post_id": 53818465, "comment_id": 94486301, "body": "You should file an issue for them to fix the docs."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545063789, "post_id": 53818465, "comment_id": 94486779, "body": "@Shepmaster There is already an open issue, see my answer :)"}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 2, "last_activity_date": 1545116446, "last_edit_date": 1545116446, "creation_date": 1545062627, "answer_id": 53818854, "question_id": 53818465, "link": "https://stackoverflow.com/questions/53818465/the-example-from-the-chaining-computations-section-of-the-tokio-docs-does-not/53818854#53818854", "title": "The example from the &quot;chaining computations&quot; section of the Tokio docs does not compile: &quot;expected struct `std::io::Error`, found ()&quot;", "body": "<p><a href=\"https://docs.rs/tokio/0.1.13/tokio/runtime/fn.run.html\" rel=\"nofollow noreferrer\"><code>Tokio::run</code></a> has the following signature:</p>\n\n<pre><code>pub fn run&lt;F&gt;(future: F)\nwhere\n    F: Future&lt;Item = (), Error = ()&gt; + Send + 'static, \n</code></pre>\n\n<p>which means that it accepts a <code>Future</code> which accepts a <code>()</code> as <code>Item</code> and has <code>()</code> as the error type.</p>\n\n<p>On the other hand, your <code>HelloWorld</code> impl has </p>\n\n<pre><code>type Item = ();\ntype Error = io::Error;\n</code></pre>\n\n<p>which means they are not compatible, you have to convert the <code>io::Error</code> to <code>()</code> somehow.</p>\n\n<p>I would suggest using <code>map_err</code></p>\n\n<pre><code>tokio::run(hello_world.map_err(|e| Err(e).unwrap()))\n</code></pre>\n\n<p>to handle the error in case something bad happens. You could of course make better error handling, but this will work.</p>\n\n<hr>\n\n<p>Interestingly enough, I have JavaScript disabled in my browser and therefore I see the comments in the Rustdoc on the webpage:</p>\n\n<pre><code>fn main() {\n    let addr = \"127.0.0.1:1234\".parse().unwrap();\n    let connect_future = TcpStream::connect(&amp;addr);\n    let hello_world = HelloWorld::Connecting(connect_future);\n# let hello_world = futures::future::ok::&lt;(), ()&gt;(());\n\n    // Run it\n    tokio::run(hello_world)\n}\n</code></pre>\n\n<p>The <code>#</code> means that Rustdoc should not print that line, but should execute it while testing. <s>I think this is a mistake/oversight and there is also an <a href=\"https://github.com/tokio-rs/website/issues/254\" rel=\"nofollow noreferrer\">open issue</a> and a <a href=\"https://github.com/tokio-rs/website/pull/269\" rel=\"nofollow noreferrer\">fix pending</a>.</s> PR has been merged, webpage has been updated.</p>\n"}], "owner": {"reputation": 15, "user_id": 3858337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2caf9cafb34f3df5211bc6ce50ca5e27?s=128&d=identicon&r=PG", "display_name": "mailto1587", "link": "https://stackoverflow.com/users/3858337/mailto1587"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 215, "favorite_count": 0, "accepted_answer_id": 53818854, "answer_count": 1, "score": 1, "last_activity_date": 1545116446, "creation_date": 1545061253, "last_edit_date": 1545062831, "question_id": 53818465, "link": "https://stackoverflow.com/questions/53818465/the-example-from-the-chaining-computations-section-of-the-tokio-docs-does-not", "title": "The example from the &quot;chaining computations&quot; section of the Tokio docs does not compile: &quot;expected struct `std::io::Error`, found ()&quot;", "body": "<p>I am learning <a href=\"https://tokio.rs\" rel=\"nofollow noreferrer\">Tokio</a>. I read <a href=\"https://tokio.rs/docs/futures/getting_asynchronous/\" rel=\"nofollow noreferrer\">Getting asynchronous</a> from the official docs, but the source code from the <em>Chaining computations</em> section cannot be compiled under the latest Rust version (Rust 2018, v1.31):</p>\n\n<pre><code>extern crate tokio;\nextern crate bytes;\n#[macro_use]\nextern crate futures;\n\nuse tokio::io::AsyncWrite;\nuse tokio::net::{TcpStream, tcp::ConnectFuture};\nuse bytes::{Bytes, Buf};\nuse futures::{Future, Async, Poll};\nuse std::io::{self, Cursor};\n\n// HelloWorld has two states, namely waiting to connect to the socket\n// and already connected to the socket\nenum HelloWorld {\n    Connecting(ConnectFuture),\n    Connected(TcpStream, Cursor&lt;Bytes&gt;),\n}\n\nimpl Future for HelloWorld {\n    type Item = ();\n    type Error = io::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;(), io::Error&gt; {\n        use self::HelloWorld::*;\n\n        loop {\n            let socket = match *self {\n                Connecting(ref mut f) =&gt; {\n                    try_ready!(f.poll())\n                }\n                Connected(ref mut socket, ref mut data) =&gt; {\n                    // Keep trying to write the buffer to the socket as long as the\n                    // buffer has more bytes it available for consumption\n                    while data.has_remaining() {\n                        try_ready!(socket.write_buf(data));\n                    }\n\n                    return Ok(Async::Ready(()));\n                }\n            };\n\n            let data = Cursor::new(Bytes::from_static(b\"hello world\"));\n            *self = Connected(socket, data);\n        }\n    }\n}\n\nfn main() {\n    let addr = \"127.0.0.1:1234\".parse().unwrap();\n    let connect_future = TcpStream::connect(&amp;addr);\n    let hello_world = HelloWorld::Connecting(connect_future);\n\n    // Run it\n    tokio::run(hello_world)\n}\n</code></pre>\n\n<p>The compiler outputs error messages:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;HelloWorld as futures::Future&gt;::Error == ()`\n  --&gt; src\\main.rs:54:5\n   |\n54 |     tokio::run(hello_world)\n   |     ^^^^^^^^^^ expected struct `std::io::Error`, found ()\n   |\n   = note: expected type `std::io::Error`\n              found type `()`\n   = note: required by `tokio::run`\n</code></pre>\n\n<p>Is the problem caused by the version of my Rust compiler? How do I fix it?</p>\n"}, {"tags": ["unit-testing", "rust", "cross-compiling", "rust-cargo"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1545047539, "post_id": 53814290, "comment_id": 94477491, "body": "Does is work with x86_64-linux-android? For me it&#39;s not possible to run i686-linux-android on x86_64 host natively neither."}, {"owner": {"reputation": 206, "user_id": 1013428, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/576d91518a939b203ace26c7d640de14?s=128&d=identicon&r=PG", "display_name": "Zellius", "link": "https://stackoverflow.com/users/1013428/zellius"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1545049194, "post_id": 53814290, "comment_id": 94478345, "body": "Well, I&#39;m not sure about that. But after I found this <a href=\"https://stackoverflow.com/a/44953448/1013428\">answer</a> I started thinking that it is possible to use cargo test for that. Especially for CI use cases. Typical cargo build works fine and output *.so library works with my Android app on x86 emulator."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1545049417, "post_id": 53814290, "comment_id": 94478469, "body": "Using an emulator for a x86 target requires hardware support. At least on travis-ci it&#39;s not working."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1545049503, "post_id": 53814290, "comment_id": 94478522, "body": "Even libc <a href=\"https://github.com/rust-lang/libc/blob/ed8309bc03ba32c9f407d1800ad6d51ade19cdb0/.travis.yml#L34\" rel=\"nofollow noreferrer\">does not test</a> <i>i686-linux-android</i> because of this. See <a href=\"https://github.com/rust-lang/libc/issues/826\" rel=\"nofollow noreferrer\">#826</a> and <a href=\"https://github.com/rust-lang/libc/pull/825\" rel=\"nofollow noreferrer\">#825</a> for more info on that. Esp. <a href=\"https://github.com/rust-lang/libc/pull/825#issuecomment-340078268\" rel=\"nofollow noreferrer\">this linked comment</a> in the former."}, {"owner": {"reputation": 206, "user_id": 1013428, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/576d91518a939b203ace26c7d640de14?s=128&d=identicon&r=PG", "display_name": "Zellius", "link": "https://stackoverflow.com/users/1013428/zellius"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1545054807, "post_id": 53814290, "comment_id": 94481527, "body": "I didn&#39;t know about that. Thanks! But for now I&#39;m trying to run test on my local x86 emulator. And I found my silly mistake :-/"}], "answers": [{"tags": [], "owner": {"reputation": 206, "user_id": 1013428, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/576d91518a939b203ace26c7d640de14?s=128&d=identicon&r=PG", "display_name": "Zellius", "link": "https://stackoverflow.com/users/1013428/zellius"}, "is_accepted": false, "score": 0, "last_activity_date": 1545054648, "creation_date": 1545054648, "answer_id": 53816612, "question_id": 53814290, "link": "https://stackoverflow.com/questions/53814290/cant-run-unit-tests-with-i686-linux-android-target/53816612#53816612", "title": "Can&#39;t run unit tests with i686-linux-android target", "body": "<p>As usually mistake was small and silly.</p>\n\n<p>In my case I should fix path to the runner script.</p>\n\n<p><strong>My project structure:</strong></p>\n\n<ul>\n<li><p>/.cargo</p>\n\n<ul>\n<li>config</li>\n</ul></li>\n<li><p>ndk</p></li>\n<li><p>android_runner.sh</p></li>\n<li><p>other files and dirs</p></li>\n</ul>\n\n<p><strong>/android_test/.cargo/config</strong></p>\n\n<pre><code>[target.i686-linux-android]\nar = \"./ndk/x86/bin/i686-linux-android-ar\"\nlinker = \"./ndk/x86/bin/i686-linux-android-clang\"\n# change android_runner.sh to ./android_runner.sh\nrunner = [\"./android_runner.sh\"]\n</code></pre>\n\n<p>Also I fix the script. Now I extract binary file name from the path (e.g. <em>/home/zellius/Projects/android_test/target/i686-linux-android/debug/deps/<strong>android_test-a71bf7c418798cd7</em></strong>) and push it somewhere on the device. Without that adb will try to push it to the much longer directory.</p>\n\n<blockquote>\n  <p>/data/local/tmp//home/zellius/Projects/android_test/target/i686-linux-android/debug/deps/<strong>android_test-a71bf7c418798cd7*</strong></p>\n</blockquote>\n\n<p><strong>/android_test/android_runner.sh</strong></p>\n\n<pre><code>#!/bin/sh\n\ntest_file_name=$(basename -- \"$1\")\nadb push \"$1\" \"/data/local/tmp/$test_file_name\"\nadb shell \"/data/local/tmp/$test_file_name\"\n</code></pre>\n\n<p>Now I can run test on my local x86 emulator via <strong>cargo test --target i686-linux-android</strong>.</p>\n\n<p>Maybe there is a better way to do this but for now it works for my case.</p>\n"}], "owner": {"reputation": 206, "user_id": 1013428, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/576d91518a939b203ace26c7d640de14?s=128&d=identicon&r=PG", "display_name": "Zellius", "link": "https://stackoverflow.com/users/1013428/zellius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 141, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1545228375, "creation_date": 1545046026, "last_edit_date": 1545228375, "question_id": 53814290, "link": "https://stackoverflow.com/questions/53814290/cant-run-unit-tests-with-i686-linux-android-target", "title": "Can&#39;t run unit tests with i686-linux-android target", "body": "<p>I run Rust (toolchain stable-x86_64-unknown-linux-gnu) on Linux local machine. My library builds and run fine with my Android app. But I can't run any unit tests if I specify <strong>i686-linux-android</strong> target.</p>\n\n<p>I can reproduce it on the empty project.</p>\n\n<p>I created the new rust project</p>\n\n<pre><code>cargo new android_test --lib\n</code></pre>\n\n<p>Set Android NDK <em>ar</em> and <em>linker</em> via <strong>/android_test/.cargo/config</strong></p>\n\n<pre><code>[target.i686-linux-android]\nar = \"ndk/x86/bin/i686-linux-android-ar\"\nlinker = \"ndk/x86/bin/i686-linux-android-clang\"\n</code></pre>\n\n<p>Simple test will success.</p>\n\n<pre><code>cargo test\n</code></pre>\n\n<p>But it will fail if I set the target triple.</p>\n\n<pre><code>cargo test --target i686-linux-android\n</code></pre>\n\n<blockquote>\n  <p>Running\n  target/i686-linux-android/debug/deps/android_test-a71bf7c418798cd7\n  error: could not execute process\n  <code>/home/zellius/Projects/android_test/target/i686-linux-android/debug/deps/android_test-a71bf7c418798cd7</code>\n  (never executed) Caused by:   No such file or directory (os error 2)</p>\n</blockquote>\n\n<p>Unit tests will run and pass if I push <strong>android_test-a71bf7c418798cd7</strong> file to my Android emulator manually via adb.</p>\n\n<p>I tried to create custom runner. But result is the same.</p>\n\n<p><strong>android_runner.sh</strong></p>\n\n<pre><code>#!/bin/sh\n\nset -e\nadb push \"$1\" \"/data/local/tmp/$1\"\nadb shell \"/data/local/tmp/$1\"\n</code></pre>\n\n<p><strong>/android_test/.cargo/config</strong></p>\n\n<pre><code>[target.i686-linux-android]\nar = \"ndk/x86/bin/i686-linux-android-ar\"\nlinker = \"ndk/x86/bin/i686-linux-android-clang\"\nrunner = [\"android_runner.sh\"]\n</code></pre>\n\n<p>Am I missing something? Can I use cargo test to run tests on the emulator? Or should I just use a script for this purpose?</p>\n"}, {"tags": ["file", "file-io", "rust", "filesystems"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545063272, "post_id": 53812498, "comment_id": 94486492, "body": "Also, create a vector of 2.5 GO is not reasonable. Use a smaller buffer. 2^8 to 2^16, is way better."}], "answers": [{"comments": [{"owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "edited": false, "score": 0, "creation_date": 1545056685, "post_id": 53812974, "comment_id": 94482618, "body": "Thanks. That&#39;s even better. No <code>BufWriter</code> needed after all. :)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "edited": false, "score": 0, "creation_date": 1545059322, "post_id": 53812974, "comment_id": 94484136, "body": "@TobiasHermann: For performance reasons, a <code>BufWriter</code> is still likely to be preferable. Try benchmarking both."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545076199, "post_id": 53812974, "comment_id": 94492800, "body": "I don&#39;t think, posix specifically matter, just the doc of rust write is enough. &quot;Write a buffer into this object, returning how many bytes were written.&quot;, <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.write\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nightly/std/io/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545116360, "post_id": 53812974, "comment_id": 94504091, "body": "@Stargateur you&#39;re right, but the manpage explains why only 2147479552 bytes were written."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 6, "last_activity_date": 1545062294, "last_edit_date": 1545062294, "creation_date": 1545041471, "answer_id": 53812974, "question_id": 53812498, "link": "https://stackoverflow.com/questions/53812498/how-to-write-files-larger-than-2-gb/53812974#53812974", "title": "How to write files larger than 2 GB?", "body": "<p>Rusts <code>write</code> relies on the underlying OS to write the bytes.</p>\n\n<p>For Linux systems the <a href=\"http://man7.org/linux/man-pages/man2/write.2.html\" rel=\"nofollow noreferrer\">write syscall</a> will be used.</p>\n\n<blockquote>\n  <p>According to POSIX.1, if <code>count</code> is greater than <code>SSIZE_MAX</code>, the result is implementation-defined; see NOTES for the upper limit on Linux.</p>\n</blockquote>\n\n<p>Notes:</p>\n\n<blockquote>\n  <p>On Linux, <code>write()</code> (and similar system calls) will transfer at most <code>0x7ffff000</code> (2,147,479,552) bytes, returning the number of bytes actually transferred.  (This is true on both 32-bit and 64-bit systems.)</p>\n</blockquote>\n\n<p>So there the magic number is coming from.</p>\n\n<p>To circumvent your problem, use <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\" rel=\"nofollow noreferrer\"><code>write_all</code></a> instead of <code>write</code>, which will make sure, that all bytes are written.</p>\n\n<p>As a note: If you run the program under Windows, the will run just fine.</p>\n"}], "owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 193, "favorite_count": 1, "accepted_answer_id": 53812974, "answer_count": 1, "score": 3, "last_activity_date": 1545229383, "creation_date": 1545039726, "last_edit_date": 1545229383, "question_id": 53812498, "link": "https://stackoverflow.com/questions/53812498/how-to-write-files-larger-than-2-gb", "title": "How to write files larger than 2 GB?", "body": "<p>The following code:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::Write;\n\nfn main() {\n    let encoded: Vec&lt;u8&gt; = vec![0; 2500000000];\n    let mut buffer = File::create(\"file.bin\").unwrap();\n    let written_bytes = buffer.write(&amp;encoded).unwrap();\n    assert_eq!(written_bytes, encoded.len());\n}\n</code></pre>\n\n<p>errors with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2147479552`,\n right: `2500000000`', src/main.rs:8:5\n</code></pre>\n\n<p>So there seems to be a limit of <code>2^31 - 4096</code> bytes.</p>\n\n<p>How can I get around this? I'd like to write a larger file. :)</p>\n"}, {"tags": ["functional-programming", "rust", "iterator", "currying"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1544997551, "post_id": 53806635, "comment_id": 94462334, "body": "What you want to do is &quot;currying&quot; or &quot;partial function application&quot;, that is not directly supported in Rust. Writing a lambda is actually the idiomatic way to do that."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1544997683, "post_id": 53806635, "comment_id": 94462363, "body": "What you suggest is actually quite dangerous, as you could forget to write any number of arguments in a function call and it will compile anyway. You&#39;ll need to add warnings about: &quot;warning: partial function call, this code does nothing!&quot;. And diagnostics would get a lot messier."}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1544999679, "post_id": 53806635, "comment_id": 94462783, "body": "Interesting. @rodrigo I don&#39;t understand why &quot;you could forget to write any number of arguments in a function call and it will compile anyway.&quot; Why can it not be restricted to ONLY the single, last argument in a parameter list?   Why would there be no way to check &quot;compiler error: you are missing more than one argument in this function call.&quot;  Handling the single case where only the very last argument can be left out does not seem dangerous to me, and it would automatically cover the case of a single-argument function, which is already supported."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 3, "creation_date": 1544999916, "post_id": 53806635, "comment_id": 94462830, "body": "Imagine a function <code>fn foo(a: i32, b: i32) {...}</code>, then you call it <code>fn main() { foo(4); }</code>, with your proposal, this code would be legal but do nothing. Writing a lambda such as <code>|x| foo(4, x)</code> when it is really needed is far more reasonable, IMHO. Also you can as easily write <code>|x| foo(x, 4)</code> or any other variation with any number of arguments without compromising the rest of the language."}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1545001077, "post_id": 53806635, "comment_id": 94463033, "body": "Okay, I see your point. Allowing that syntax would create a lot of extra work."}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1545001287, "post_id": 53806635, "comment_id": 94463079, "body": "In the interest of exploring possibilities, do you think one could make a macro that would work like this: <code>.filter(apply!(has_repeated_letter, 3))</code> which would take a function to apply to a list of arguments, the last of which being in the iterator. I&#39;m not saying this would necessarily be good practice. It would obviously be cleaner at this point to make a closure. I just haven&#39;t played with macros much and I&#39;m wondering if it is possible."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 2, "creation_date": 1545001528, "post_id": 53806635, "comment_id": 94463120, "body": "Sure you can write a macro that takes those arguments and expands to a lambda, but then, what is the advantage of <code>apply!(has_repeated_letter, 3)</code> over <code>|x| has_repeated_letter(3, x)</code>?"}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1545002305, "post_id": 53806635, "comment_id": 94463260, "body": "Certainly no advantage at all! I think that answers all of my curiosities. Thank you!"}, {"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 2, "creation_date": 1545004322, "post_id": 53806635, "comment_id": 94463591, "body": "Could you not change the has_repeated_letter to return a closure like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=af818d3815293947feec82e35ed2a17b\" rel=\"nofollow noreferrer\">this</a>"}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "edited": false, "score": 0, "creation_date": 1545006280, "post_id": 53806635, "comment_id": 94463873, "body": "Lukazoid, that is a brilliant idea! Thank you for suggesting that. That really opens my mind to new possibilities. I&#39;m not sure if returning a closure like that is necessarily more readable or more approachable than just creating the closure inline, but it does achieve the syntax I was looking for. I really appreciate the comment."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545010371, "post_id": 53806635, "comment_id": 94464523, "body": "For your next question, please consider reducing the amount of fluff. Your question basically boils down to &quot;I can do this [one argument example], how can I do this [two argument example]&quot; The amount of background (the Advent of Code is basically completely irrelevant to the question) will make this question much harder for <i>other</i> people to read it to know if it&#39;s relevant to them when they have a potential duplicate."}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "edited": false, "score": 0, "creation_date": 1545013533, "post_id": 53806635, "comment_id": 94465051, "body": "Shepmaster, you are welcome to trim down the question to a form that you feel is more succinct. I agree with you. I may have time to do it later. You may do a better job than I will. Thanks for your answer."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1545011660, "last_edit_date": 1545011660, "creation_date": 1545010875, "answer_id": 53808061, "question_id": 53806635, "link": "https://stackoverflow.com/questions/53806635/how-to-invoke-a-multi-argument-function-without-creating-a-closure/53808061#53808061", "title": "How to invoke a multi-argument function without creating a closure?", "body": "<p>No, you cannot pass a function with multiple arguments as an implicit closure.</p>\n\n<p>In certain cases, you can choose to use <a href=\"https://en.wikipedia.org/wiki/Currying\" rel=\"nofollow noreferrer\">currying</a> to reduce the <em>arity</em> of a function. For example, here we reduce the <code>add</code> function from 2 arguments to one:</p>\n\n<pre><code>fn add(a: i32, b: i32) -&gt; i32 {\n    a + b\n}\n\nfn curry&lt;A1, A2, R&gt;(f: impl FnOnce(A1, A2) -&gt; R, a1: A1) -&gt; impl FnOnce(A2) -&gt; R {\n    move |a2| f(a1, a2)\n}\n\nfn main() {\n    let a = Some(1);\n    a.map(curry(add, 2));\n}\n</code></pre>\n\n<p>However, I agree with the comments that this isn't a benefit:</p>\n\n<ol>\n<li><p>It's not any less typing:</p>\n\n<pre><code>a.map(curry(add, 2));\na.map(|v| add(v, 2));\n</code></pre></li>\n<li><p>The <code>curry</code> function is extremely limited: it chooses to use <code>FnOnce</code>, but <code>Fn</code> and <code>FnMut</code> also have use cases. It only applies to a function with two arguments. </p></li>\n</ol>\n\n<p>However, <a href=\"https://github.com/shepmaster/fuzzy-pickles\" rel=\"nofollow noreferrer\">I have used</a> this higher-order function trick in other projects, where the amount of code that is added is much greater.</p>\n"}], "owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 386, "favorite_count": 0, "accepted_answer_id": 53808061, "answer_count": 1, "score": 3, "last_activity_date": 1545229416, "creation_date": 1544995725, "last_edit_date": 1545229416, "question_id": 53806635, "link": "https://stackoverflow.com/questions/53806635/how-to-invoke-a-multi-argument-function-without-creating-a-closure", "title": "How to invoke a multi-argument function without creating a closure?", "body": "<p>I came across this while doing the <a href=\"https://adventofcode.com/2018/day/2\" rel=\"nofollow noreferrer\">2018 Advent of Code (Day 2, Part 1)</a> solution in Rust. </p>\n\n<p><strong>The problem to solve:</strong> </p>\n\n<p>Take the count of strings that have exactly two of the same letter, multiplied by the count of strings that have exactly three of the same letter. </p>\n\n<p><strong>INPUT</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>abcdega \nhihklmh \nabqasbb\naaaabcd\n</code></pre>\n\n\n\n<ul>\n<li>The first string <code>abcdega</code> has <code>a</code> repeated twice. </li>\n<li>The second string <code>hihklmh</code> has <code>h</code> repeated three times.</li>\n<li>The third string <code>abqasbb</code> has <code>a</code> repeated twice, and <code>b</code> repeated three times, so it counts for both.</li>\n<li>The fourth string <code>aaaabcd</code> contains a letter repeated <code>4</code> times (not <code>2</code>, or <code>3</code>) so it does not count.</li>\n</ul>\n\n<p>So the result should be:</p>\n\n<p><code>2</code> strings that contained a double letter (first and third) multiplied by <code>2</code> strings that contained a triple letter (second and third) <code>= 4</code></p>\n\n<p><strong>The Question</strong>:</p>\n\n<pre><code>const PUZZLE_INPUT: &amp;str = \n\"\nabcdega\nhihklmh\nabqasbb\naaaabcd\n\";\n\nfn letter_counts(id: &amp;str) -&gt; [u8;26] {\n    id.chars().map(|c| c as u8).fold([0;26], |mut counts, c| { \n        counts[usize::from(c - b'a')] += 1;\n        counts \n    })\n}\n\nfn has_repeated_letter(n: u8, letter_counts: &amp;[u8;26]) -&gt; bool {\n    letter_counts.iter().any(|&amp;count| count == n)\n}\n\nfn main() {\n    let ids_iter = PUZZLE_INPUT.lines().map(letter_counts);\n    let num_ids_with_double = ids_iter.clone().filter(|id| has_repeated_letter(2, id)).count();\n    let num_ids_with_triple = ids_iter.filter(|id| has_repeated_letter(3, id)).count();\n    println!(\"{}\", num_ids_with_double * num_ids_with_triple);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b1bc0879ddda011ffd6e335eab61b844\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>Consider line <code>21</code>. The function <code>letter_counts</code> takes only one argument, so I can use the syntax: <code>.map(letter_counts)</code> on elements that match the type of the expected argument. This is really nice to me! I love that I don't have to create a closure: <code>.map(|id| letter_counts(id))</code>. I find both to be readable, but the former version without the closure is much cleaner to me. </p>\n\n<p>Now consider lines <code>22</code> and <code>23</code>. Here, I have to use the syntax: <code>.filter(|id| has_repeated_letter(3, id))</code> because the <code>has_repeated_letter</code> function takes two arguments. I would really like to do <code>.filter(has_repeated_letter(3))</code> instead.</p>\n\n<p>Sure, I could make the function take a tuple instead, map to a tuple and consume only a single argument... but that seems like a terrible solution. I'd rather just create the closure. </p>\n\n<p>Leaving out the <strong>only</strong> argument is something that Rust lets you do. Why would it be any harder for the compiler to let you leave out the <strong>last</strong> argument, provided that it has all of the other <code>n-1</code> arguments for a function that takes <code>n</code> arguments. </p>\n\n<p>I feel like this would make the syntax a lot cleaner, and it would fit in a lot better with the idiomatic functional style that Rust prefers. </p>\n\n<p>I am certainly no expert in compilers, but implementing this behavior seems like it would be straightforward. If my thinking is incorrect, I would love to know more about why that is so. </p>\n"}, {"tags": ["rust", "traits", "associated-types", "rust-actix"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544986514, "post_id": 53805212, "comment_id": 94459354, "body": "FYI <code>Client</code> is not object safe, because <code>Actor</code> has a <code>Self: Sized</code> bound, so you can&#39;t use it like that, irrespective of this issue."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544987892, "post_id": 53805212, "comment_id": 94459775, "body": "This is not really about trait inheritance. You would run into the same problem if there was only one trait involved. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=21c118974988b2d63b2c9dff873f5489\" rel=\"nofollow noreferrer\">See playground</a>"}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1544988311, "post_id": 53805548, "comment_id": 94459885, "body": "<code>&lt;Context = Context&lt;Actor&gt;</code> will provide the same error again you need  to define Concrete Context like &lt;Context = Context&lt;MyActor&gt;. But this kills the generic approach"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1544988950, "post_id": 53805548, "comment_id": 94460080, "body": "Ah thanks, that was a typo. But yes, this whole approach to polymorphism will not work."}, {"owner": {"reputation": 3352, "user_id": 5152338, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QbPE.png?s=128&g=1", "display_name": "jdno", "link": "https://stackoverflow.com/users/5152338/jdno"}, "edited": false, "score": 0, "creation_date": 1544989778, "post_id": 53805548, "comment_id": 94460301, "body": "@PeterHall Thanks for the explanation. I remember reading this section of the book, but it didn&#39;t really click until now. I have the feeling that actix is maybe a bit too much for the beginning. I&#39;ll go with a simpler approach, until I have more experience with Rust. Thanks for your help!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1544988961, "last_edit_date": 1544988961, "creation_date": 1544987246, "answer_id": 53805548, "question_id": 53805212, "link": "https://stackoverflow.com/questions/53805212/specifying-associated-type-in-trait-that-inherits-from-another-trait/53805548#53805548", "title": "Specifying associated type in trait that inherits from another trait", "body": "<p>The signatures for all methods of all items in a collection must be identical, so that you can use them interchangeably. This means that the associated types of each item must be the same too.</p>\n\n<p>You can get rid of this error by providing a concrete type for the <code>Context</code> associated type:</p>\n\n<pre><code>Vec&lt;Box&lt;dyn Client&lt;Context = Context&lt;MyActor&gt;&gt;&gt;&gt;\n</code></pre>\n\n<p>However, the code still won't work because <code>Actor</code> has a bound of <code>Self: Sized</code>, which means <a href=\"https://doc.rust-lang.org/book/ch17-02-trait-objects.html#object-safety-is-required-for-trait-objects\" rel=\"nofollow noreferrer\">it can't be made into a trait object</a>, so neither can your trait which extends it.</p>\n"}, {"comments": [{"owner": {"reputation": 3352, "user_id": 5152338, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QbPE.png?s=128&g=1", "display_name": "jdno", "link": "https://stackoverflow.com/users/5152338/jdno"}, "edited": false, "score": 0, "creation_date": 1544995753, "post_id": 53806316, "comment_id": 94461890, "body": "Thanks for the detailed explanation. This is an interesting approach that might come in handy in the future."}, {"owner": {"reputation": 1238, "user_id": 759901, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/56175c4faa3db6d594ed7a0688b0c296?s=128&d=identicon&r=PG", "display_name": "leshow", "link": "https://stackoverflow.com/users/759901/leshow"}, "edited": false, "score": 0, "creation_date": 1582336740, "post_id": 53806316, "comment_id": 106754103, "body": "It should be noted this only works if you have methods on <code>Client</code> that don&#39;t rely on any types like <code>Context</code> or anything in <code>Actor</code>. You can pretty much only take <code>&amp;self</code> by reference and call a method."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 3, "last_activity_date": 1544993037, "creation_date": 1544993037, "answer_id": 53806316, "question_id": 53805212, "link": "https://stackoverflow.com/questions/53805212/specifying-associated-type-in-trait-that-inherits-from-another-trait/53806316#53806316", "title": "Specifying associated type in trait that inherits from another trait", "body": "<p>As long as i understand from your code your main goal is add all Client/Actors in a collection and call it's common behavior when its needed.But due to Object Safety its not possible so we can do it with a little hack( creating trait which mimics Client, i named it as <strong>ClientProxy</strong>).</p>\n\n<blockquote>\n  <p>I have a trait of my own that defines the interface for the\n  third-party integrations. Let's call it Client. I want each client to\n  behave like an actor.</p>\n\n<pre><code>pub trait Client: Actor {}\n</code></pre>\n</blockquote>\n\n<p>Yes this works like that, actually this means If some struct has an implementation of Client it needs to have Actor's implementation too. </p>\n\n<p>Consider we have two Context <strong>MyActor</strong> and <strong>OtherActor</strong> and their Client/Actor implementations. And we have a behavior in Client ( behave_like_client(&amp;self) ).</p>\n\n<pre><code>pub trait Client: Actor {\n    fn behave_like_a_client(&amp;self);\n}\n\nstruct MyActor {\n    count: usize,\n} \n\nimpl Actor for MyActor {\n    type Context = Context&lt;Self&gt;;\n}\nimpl Client for MyActor {\n    fn behave_like_client(&amp;self) {\n        println!(\"I am MyActor as Client, and my count is {}\", self.count);\n    }\n}\n\nstruct OtherActor {\n    count: usize,\n}\n\nimpl Actor for OtherActor {\n    type Context = Context&lt;Self&gt;;\n}\nimpl Client for OtherActor {\n    fn behave_like_client(&amp;self) {\n        println!(\"I am OtherActor Client, and my count is {}\", self.count);\n    }\n}\n</code></pre>\n\n<p>Now we have our Actors for testing but let's go back to our problem Object Safety, we can't collect these Clients into a single collection. That's why i created <code>ClientProxy</code> to mimic <code>Client</code> and i want to implement <code>ClientProxy</code> on <code>Clients</code>. We can do this with implementing <code>ClientProxy</code> on Generics which extends Clients:</p>\n\n<pre><code>//ClientProxy must have all behaviors in Client \ntrait ClientProxy {\n    fn behave_like_client(&amp;self);\n}\n\n//This code implements ClientProxy to all Client like Objects\nimpl&lt;T&gt; ClientProxy for T\nwhere\n    T: Client,\n{\n    fn behave_like_client(&amp;self) {\n        self.behave_like_client();\n    }\n}\n</code></pre>\n\n<p>Now everything is ready, we can test our structure: </p>\n\n<pre><code>struct Container {\n    clients: Vec&lt;Box&lt;ClientProxy&gt;&gt;,\n}\n\nfn main() {\n    let mut container = Container {\n        clients: Vec::new(),\n    };\n    let a = Box::new(MyActor { count: 3 });\n    let b = Box::new(OtherActor { count: 4 });\n\n    container.clients.push(a);\n    container.clients.push(b);\n\n    container\n        .clients\n        .iter()\n        .for_each(|a| a.behave_like_client());\n    //output : \n    //I am MyActor as Client, and my count is 3\n    //I am OtherActor Client, and my count is 4\n}\n</code></pre>\n\n<p>You can reach the full code from <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=09125e4d5132401f26b942c14ae7c370\" rel=\"nofollow noreferrer\">playground</a> ( it's not running on playground due to lack of dependency )</p>\n"}], "owner": {"reputation": 3352, "user_id": 5152338, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QbPE.png?s=128&g=1", "display_name": "jdno", "link": "https://stackoverflow.com/users/5152338/jdno"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1046, "favorite_count": 0, "accepted_answer_id": 53805548, "answer_count": 2, "score": 3, "last_activity_date": 1545229463, "creation_date": 1544984629, "last_edit_date": 1545229463, "question_id": 53805212, "link": "https://stackoverflow.com/questions/53805212/specifying-associated-type-in-trait-that-inherits-from-another-trait", "title": "Specifying associated type in trait that inherits from another trait", "body": "<p>I started working on my first more ambitious Rust project, and struggle with something I did not come across in any of the resources and tutorials I used for learning. The title of the question captures the abstract problem, but for the examples I'll use the concrete examples I am fighting with.</p>\n\n<p>For my project, I need to interface with different third-party services, and I decided to use the <a href=\"https://github.com/actix/actix\" rel=\"nofollow noreferrer\">actix</a> framework as an abstraction for the different actors in my domain. The framework defines the <code>Actor</code> trait that must be implemented:</p>\n\n<pre><code>use actix::prelude::*;\n\nstruct MyActor {\n    count: usize,\n}\n\nimpl Actor for MyActor {\n    type Context = Context&lt;Self&gt;;\n}\n</code></pre>\n\n<p>I have a trait of my own that defines the interface for the third-party integrations. Let's call it <code>Client</code>. I want each client to behave like an actor.</p>\n\n<pre><code>use actix::Actor;\n\npub trait Client: Actor {}\n</code></pre>\n\n<p>Somewhere else I have a vector that stores references to all the active clients in the system. When I compile the code, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0191]: the value of the associated type `Context` (from the trait `actix::actor::Actor`) must be specified\n  --&gt; transponder/src/transponder.rs:15:26\n   |\n15 |     clients: Vec&lt;Box&lt;Client&gt;&gt;\n   |                      ^^^^^^ missing associated type `Context` value\n</code></pre>\n\n<p>I spent a few hours now attempting to solve this problem, but none of them worked.</p>\n\n<ul>\n<li>I tried to specify the type in the trait, but got <code>associated type defaults are unstable</code> as an error.</li>\n<li>I tried to specify the type in the trait's implementation (<code>impl Simulation</code>), but got <code>associated types are not allowed in inherent impls</code> as an error.</li>\n<li>I tried some stuff with <code>impl &lt;T: Actor&gt; Simulation for T</code> (e.g. as shown <a href=\"https://stackoverflow.com/questions/30424100/aliasing-trait-with-associated-types\">here</a>), but nothing worked.</li>\n</ul>\n\n<p>My assumption is that I am missing an important piece of knowledge about traits and types. I would be very grateful if someone could help me solve my problem, and point me in the direction of the missing puzzle piece. I feel there is an important lesson about Rust in here that I really want to learn.</p>\n"}, {"tags": ["reference", "rust", "move-semantics", "api-design", "borrowing"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544976485, "post_id": 53803915, "comment_id": 94456418, "body": "The function <code>build_user()</code> moves the arguments into the struct <code>User</code>. If you want to write the same function using borrows, you can&#39;t move them into a struct, since you don&#39;t own them, so you would have to clone them (or change the definition of <code>User</code> to store borrows instead)."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1544976524, "post_id": 53803915, "comment_id": 94456431, "body": "I think this question is a bit too broad and too vague for the StackOverflow QA format."}, {"owner": {"reputation": 8363, "user_id": 1531806, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/FkpTG.jpg?s=128&g=1", "display_name": "Pascal Precht", "link": "https://stackoverflow.com/users/1531806/pascal-precht"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544976714, "post_id": 53803915, "comment_id": 94456479, "body": "Thanks for the comments! Unfortunately, they don&#39;t seem to address my question.. If it&#39;s too broad, I&#39;m happy to make it more specific. Any suggestions?  I&#39;m just wondering why or when one wants to create an API that doesn&#39;t borrow. There has to be cases for that."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544976992, "post_id": 53803915, "comment_id": 94456553, "body": "My comment wasn&#39;t meant as an answer, but rather to point out that your claim that you could just as well use borrows is not true. As a corollary, this very function is an example of a function that would generally take arguments by value, since it needs ownership. If you want further examples, simply take a look at the standard library. Functions that take arguments by value generally can&#39;t be written taking borrows instead."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1544977079, "post_id": 53803915, "comment_id": 94456578, "body": "The reason why I think this is too broad is that answering this question basically means to explain Rust&#39;s ownership system. There are already good introductions for this, for example the chapter on ownership in the Rust book."}, {"owner": {"reputation": 8363, "user_id": 1531806, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/FkpTG.jpg?s=128&g=1", "display_name": "Pascal Precht", "link": "https://stackoverflow.com/users/1531806/pascal-precht"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544977173, "post_id": 53803915, "comment_id": 94456600, "body": "Thanks for the pointer! Yea I&#39;m super new to rust and I&#39;m reading into it at the moment. I did read book about ownership a couple of times now.  If you say there are cases where borrowing isn&#39;t possible, then that&#39;s fair.  I&#39;ll see if I can find an example that demonstrates that."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544978012, "post_id": 53803915, "comment_id": 94456856, "body": "Just take a look at <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=16ee63852bb46061df9205edf2c3cad5\" rel=\"nofollow noreferrer\">essentially the same function using borrows instead of moved values</a>. You need to copy the strings using <code>to_owned()</code> to make this work, which is inefficient if you don&#39;t need the strings that were passed in anymore. If you write the function accepting values, on the other hand, you are free to pass in clones if you still need the values."}, {"owner": {"reputation": 8363, "user_id": 1531806, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/FkpTG.jpg?s=128&g=1", "display_name": "Pascal Precht", "link": "https://stackoverflow.com/users/1531806/pascal-precht"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544978636, "post_id": 53803915, "comment_id": 94457034, "body": "Ah, interesting! Will have to look into <code>to_owned()</code> and lifetimes to make complete sense of this :)  Appreciate your feedback!"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 22, "last_activity_date": 1547487656, "last_edit_date": 1547487656, "creation_date": 1544979376, "answer_id": 53804449, "question_id": 53803915, "link": "https://stackoverflow.com/questions/53803915/in-what-scenarios-are-apis-that-dont-borrow-preferred/53804449#53804449", "title": "In what scenarios are APIs that don&#39;t borrow preferred?", "body": "<p>This list may not be exhaustive, but there are plenty of times when it's advantageous to choose not to borrow an argument.</p>\n\n<h2>1. Efficiency with small <code>Copy</code> types</h2>\n\n<p>If a type is small and implements <code>Copy</code>, it is usually more efficient to copy it around, rather than passing pointers. References mean indirection - apart from having to do two steps to get to the data, values behind pointers are less likely to be stored compactly in memory and therefore are slower to copy into CPU caches, for example if you are iterating over them.</p>\n\n<h2>2. To transfer ownership</h2>\n\n<p>When you need data to stick around, but the current owner needs to be cleaned up and go out of scope, you might transfer ownership by moving it somewhere else. For example, you might have a local variable in a function, but move it into a <code>Box</code> so that it can live on after the function has returned.</p>\n\n<h2>3. Method chaining</h2>\n\n<p>If a set of methods all consume <code>self</code> and return <code>Self</code>, you can conveniently chain them together, without needing intermediate local variables. You will often see this approach used for implementing builders. Here is an example taken from the <a href=\"https://crates.io/crates/derive_builder\" rel=\"noreferrer\"><code>derive_builder</code> crate</a> documentation:</p>\n\n<pre><code>let ch = ChannelBuilder::default()\n    .special_info(42u8)\n    .token(19124)\n    .build()\n    .unwrap();\n</code></pre>\n\n<h2>4. Statically enforcing invariants</h2>\n\n<p>Sometimes, you want a value to be consumed by a function to guarantee that it cannot be used again, as a way of enforcing assumptions at the type-level. For example, in the <a href=\"https://docs.rs/futures/0.1.25/futures/future/trait.Future.html#method.wait\" rel=\"noreferrer\"><code>futures</code> crate</a>, the <code>Future::wait</code> method consumes <code>self</code>:</p>\n\n<pre><code>fn wait(self) -&gt; Result&lt;Self::Item, Self::Error&gt; \nwhere\n    Self: Sized,\n</code></pre>\n\n<p>This signature is specifically designed to prevent you from calling <code>wait</code> twice. The implementation doesn't have to check at runtime to see if the future is already in a waiting state - the compiler just won't allow that situation.</p>\n\n<p>It also gives protection from errors when using method-chained builders. The design statically prevents you from doing things out of order - you can't accidentally set a field on a builder after the object is created because the builder is consumed by its <code>build</code> method.</p>\n\n<h2>5. To make cloning explicit to callers</h2>\n\n<p>Some functions need to own their data. This <em>could</em> be enforced by accepting a reference and then calling <code>clone</code> within the function, but this may not always be ideal because it hides the potentially expensive clone operation from the caller. Accepting the value rather than a reference means that it's up to the caller to clone the value or, if they no longer need it, move it instead.</p>\n"}], "owner": {"reputation": 8363, "user_id": 1531806, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/FkpTG.jpg?s=128&g=1", "display_name": "Pascal Precht", "link": "https://stackoverflow.com/users/1531806/pascal-precht"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 656, "favorite_count": 1, "accepted_answer_id": 53804449, "answer_count": 1, "score": 11, "last_activity_date": 1547487656, "creation_date": 1544975990, "last_edit_date": 1545065477, "question_id": 53803915, "link": "https://stackoverflow.com/questions/53803915/in-what-scenarios-are-apis-that-dont-borrow-preferred", "title": "In what scenarios are APIs that don&#39;t borrow preferred?", "body": "<p>Rust has the concepts of ownership and borrowing. If a function doesn't borrow its parameter as a reference, the arguments to that function are moved and will be deallocated once they go out of scope.</p>\n\n<p>Take this function:</p>\n\n<pre><code>fn build_user(email: String, username: String) -&gt; User {\n    User {\n        email: email,\n        username: username,\n    }\n}\n</code></pre>\n\n<p>This function can be called as:</p>\n\n<pre><code>let email = String::from(\"foo@example.com\");\nlet username = String::from(\"username\");\n\nlet user = build_user(email, username);\n</code></pre>\n\n<p>Since <code>email</code> and <code>username</code> have been moved, they can no longer be used after <code>build_user</code> was called.</p>\n\n<p>This can be fixed by making the API use borrowed references instead.</p>\n\n<p>With that in mind, which scenarios would one always prefer to not use borrowing when designing APIs?</p>\n"}, {"tags": ["multithreading", "multidimensional-array", "rust", "linear-algebra"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544978494, "post_id": 53802876, "comment_id": 94456997, "body": "This is very confusing. It seems there is something about <code>Allocator</code>&#39;s <code>Sync</code> impl, so it only applies to types known to the crate, but I stopped short of going down the rabbit-hole.."}, {"owner": {"reputation": 90923, "user_id": 383609, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/64555e5f0e0ee1ecbf3eaaf0dc137328?s=128&d=identicon&r=PG", "display_name": "Bojangles", "link": "https://stackoverflow.com/users/383609/bojangles"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545044478, "post_id": 53802876, "comment_id": 94475872, "body": "@PeterHall Confusing indeed. I came to the same conclusion looking through the docs; everything <i>should</i> be <code>Send</code> and <code>Sync</code>, yet somehow it falls over at <code>Buffer</code>."}], "answers": [{"tags": [], "owner": {"reputation": 90923, "user_id": 383609, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/64555e5f0e0ee1ecbf3eaaf0dc137328?s=128&d=identicon&r=PG", "display_name": "Bojangles", "link": "https://stackoverflow.com/users/383609/bojangles"}, "is_accepted": false, "score": 1, "last_activity_date": 1545046824, "creation_date": 1545046824, "answer_id": 53814520, "question_id": 53802876, "link": "https://stackoverflow.com/questions/53802876/sending-nalgebra-vectorn-between-threads/53814520#53814520", "title": "Sending Nalgebra VectorN between threads", "body": "<p>I took a stab in the dark (based on the error messages given by the compiler) and managed to make this work by adding bounds to <code>Allocator::Buffer</code> like this:</p>\n\n<pre><code>use nalgebra::allocator::Allocator;\n\nstruct Test&lt;N&gt;\nwhere\n    N: DimName,\n    DefaultAllocator: Allocator&lt;f64, N&gt;,\n    &lt;DefaultAllocator as Allocator&lt;f64, N&gt;&gt;::Buffer: Send + Sync,\n{\n    pub field: VectorN&lt;f64, N&gt;,\n}\n\n// snip ...\n</code></pre>\n\n<p>I'm not sure this is the right way to do it and it certainly adds some noise, but it appears to now let me pass Nalgebra constructs into threads.</p>\n"}], "owner": {"reputation": 90923, "user_id": 383609, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/64555e5f0e0ee1ecbf3eaaf0dc137328?s=128&d=identicon&r=PG", "display_name": "Bojangles", "link": "https://stackoverflow.com/users/383609/bojangles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1545229543, "creation_date": 1544968917, "last_edit_date": 1545229543, "question_id": 53802876, "link": "https://stackoverflow.com/questions/53802876/sending-nalgebra-vectorn-between-threads", "title": "Sending Nalgebra VectorN between threads", "body": "<p>I'm using Nalgebra's <code>VectorN&lt;f64, N&gt;</code> type in some single-threaded code which is working well. I'm now trying to multithread various parts of the algorithm, but have run into issues passing <code>VectorN</code>s into a <code>thread::spawn</code> call. For example, the following code fails to compile:</p>\n\n<pre><code>use std::thread;\nuse nalgebra::{VectorN, DefaultAllocator, DimName};\nuse nalgebra::allocator::Allocator;\n\nstruct Test&lt;N&gt;\nwhere\n    N: DimName,\n    DefaultAllocator: Allocator&lt;f64, N&gt;,\n{\n    pub field: VectorN&lt;f64, N&gt;,\n}\n\nimpl&lt;N&gt; Test&lt;N&gt;\nwhere\n    N: DimName,\n    DefaultAllocator: Allocator&lt;f64, N&gt;,\n{\n    pub fn test(&amp;self) {\n        let handle = thread::spawn(move || {\n            let thing = self.field;\n\n            let thing2 = thing * 2.0;\n\n            thing2\n        });\n\n        let res = handle.join().unwrap();\n    }\n}\n</code></pre>\n\n<p>With this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;f64, N&gt;&gt;::Buffer` cannot be sent between threads safely\n  --&gt; trajectories/src/path/mod.rs:34:22\n   |\n34 |         let handle = thread::spawn(move || {\n   |                      ^^^^^^^^^^^^^ `&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;f64, N&gt;&gt;::Buffer` cannot be sent between threads safely\n   |\n   = help: within `nalgebra::base::matrix::Matrix&lt;f64, N, nalgebra::base::dimension::U1, &lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;f64, N&gt;&gt;::Buffer&gt;`, the trait `std::marker::Send` is not\nimplemented for `&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;f64, N&gt;&gt;::Buffer`\n   = note: required because it appears within the type `nalgebra::base::matrix::Matrix&lt;f64, N, nalgebra::base::dimension::U1, &lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;f64, N&gt;&gt;::Buffer&gt;`\n   = note: required by `std::thread::spawn`\n</code></pre>\n\n<p>I've tried various definitions for <code>N</code> and <code>DefaultAllocator</code> in the <code>where</code> clauses but haven't got far. Various search engines have turned up nothing useful around this issue.</p>\n\n<p>If I replace <code>VectorN&lt;f64, N&gt;</code> with <code>VectorN&lt;f64, U3&gt;</code> (or any other <code>U*</code> type from Nalgebra), the above error goes away. I've read the <a href=\"https://www.nalgebra.org/generic_programming/\" rel=\"nofollow noreferrer\">Nalgebra generic programming guide</a> however that seems out of date and perhaps not what I need; I don't want <em>complete</em> genericity, just the ability to use <code>VectorN</code> with any size bound. What trait bounds do I need to put on my struct so I can pass <code>field</code> into a thread?</p>\n"}, {"tags": ["rust", "pattern-matching"], "comments": [{"owner": {"reputation": 111, "user_id": 3775132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/451a29d6be258b8c07306b49e8ba713b?s=128&d=identicon&r=PG&f=1", "display_name": "DanSnow", "link": "https://stackoverflow.com/users/3775132/dansnow"}, "edited": false, "score": 0, "creation_date": 1544965880, "post_id": 53802119, "comment_id": 94453622, "body": "You can simply use <code>let s = v4_or_v6.to_string();</code>, since <code>IpAddr</code> have implement of <code>Display</code>."}, {"owner": {"reputation": 2782, "user_id": 7438048, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nTLxU.png?s=128&g=1", "display_name": "ShmulikA", "link": "https://stackoverflow.com/users/7438048/shmulika"}, "reply_to_user": {"reputation": 111, "user_id": 3775132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/451a29d6be258b8c07306b49e8ba713b?s=128&d=identicon&r=PG&f=1", "display_name": "DanSnow", "link": "https://stackoverflow.com/users/3775132/dansnow"}, "edited": false, "score": 0, "creation_date": 1544966488, "post_id": 53802119, "comment_id": 94453780, "body": "thanks but my use case is more complex than this and i need to use pattern match. ill try simplify the case and edit this although its good to know its possible"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1544969231, "post_id": 53802119, "comment_id": 94454434, "body": "Then please provide a real mcve and will reflect your usecase."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1544970405, "post_id": 53802119, "comment_id": 94454708, "body": "If what you want is not to repeat the arm body, you can use a macro <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=916d68105477238e22aaddc50940488c\" rel=\"nofollow noreferrer\">(playground)</a>."}, {"owner": {"reputation": 2782, "user_id": 7438048, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nTLxU.png?s=128&g=1", "display_name": "ShmulikA", "link": "https://stackoverflow.com/users/7438048/shmulika"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1544992417, "post_id": 53802119, "comment_id": 94461018, "body": "@hellow ive reflected my usecase twice, i did not understood that struct member vs trait really different here"}], "answers": [{"comments": [{"owner": {"reputation": 2782, "user_id": 7438048, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nTLxU.png?s=128&g=1", "display_name": "ShmulikA", "link": "https://stackoverflow.com/users/7438048/shmulika"}, "edited": false, "score": 0, "creation_date": 1544974229, "post_id": 53803631, "comment_id": 94455805, "body": "ok thanks, can you try answer the second updated example? is it possible to access data member of enum containing multiple types?"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1544974861, "last_edit_date": 1544974861, "creation_date": 1544974101, "answer_id": 53803631, "question_id": 53802119, "link": "https://stackoverflow.com/questions/53802119/pattern-matching-on-same-arm-with-different-types/53803631#53803631", "title": "Pattern matching on same arm with different types", "body": "<p>The working code de-sugars to:</p>\n\n<pre><code>let s = match v4_or_v6 {\n    IpAddr::V4(ip) =&gt; &lt;Ipv4Addr as ToString&gt;::to_string(&amp;ip),\n    IpAddr::V6(ip) =&gt; &lt;Ipv6Addr as ToString&gt;::to_string(&amp;ip),\n};\n</code></pre>\n\n<p>Even though the statements look the same, they are different functions and in each branch it is known statically which <code>to_string</code> is going to be used. To get this to work in a single match arm, you would have to somehow produce a trait object from the pattern match, so that each <code>ip</code> has the same type (i.e. <code>&amp;dyn ToString</code>). Currently there isn't a way to do that and I haven't seen any proposal like it.</p>\n\n<p>It's pretty common to see identical-looking match arms, where the same trait method is called on each, even in the <code>rustc</code> project. This is just how it is, for now.</p>\n\n<hr>\n\n<p>If you have an <code>enum</code> where each variant holds types that implement the same traits, it might be convenient to implement the traits on the <code>enum</code> and delegate to the inner types. If you don't have a trait but your types have common structure (as in the <code>x</code>, <code>y</code> fields in the struct of your updated post), then you can provide an accessor on the <code>enum</code>:</p>\n\n<pre><code>impl Record {\n    fn x(&amp;self) -&gt; i32 {\n        match self {\n            Record::V4(Point { x, .. }) =&gt; *x,\n            Record::V6(Point { x, .. }) =&gt; *x,\n        }\n    }\n}\n</code></pre>\n\n<p>While this is basically the same thing, it means you can write it once instead of everywhere that you need to access <code>x</code>:</p>\n\n<pre><code>let rec = get_record();\nlet x = get_record().x();\n</code></pre>\n\n<p>Note that <code>IpAddr</code> already does this so, in your original code, you could have avoided the <code>match</code> altogether with:</p>\n\n<pre><code>let s = v4_or_v6.to_string();\n</code></pre>\n"}], "owner": {"reputation": 2782, "user_id": 7438048, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nTLxU.png?s=128&g=1", "display_name": "ShmulikA", "link": "https://stackoverflow.com/users/7438048/shmulika"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 354, "favorite_count": 1, "accepted_answer_id": 53803631, "answer_count": 1, "score": -1, "last_activity_date": 1545029317, "creation_date": 1544963375, "last_edit_date": 1545029317, "question_id": 53802119, "link": "https://stackoverflow.com/questions/53802119/pattern-matching-on-same-arm-with-different-types", "title": "Pattern matching on same arm with different types", "body": "<p>I wonder if there is a way to simplify the following pattern match arms when two or more different enum's types have the same data member or same function.</p>\n\n<p>(if not it will be nice to explain why)</p>\n\n<h2>UPDATE:</h2>\n\n<p>as requested a more accurate example of what i want (forgive me for confusing data member access with function) (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1c9f55be6f12a2218ab03de8eb366291\" rel=\"nofollow noreferrer\">try it online</a>):</p>\n\n<pre><code>struct Point&lt;T&gt; {\n    x: i32,\n    y: T,\n}\n\nenum Record {\n    V4(Point&lt;i64&gt;),\n    V6(Point&lt;i32&gt;),\n}\n\nfn get_record() -&gt; Record {\n    Record::V4(Point{ x: 1, y: 1})\n}\n\nfn main() {\n    let x = match get_record() {\n        Record::V4(r) =&gt; r.x,\n        Record::V6(r) =&gt; r.x,\n    };\n    println!(\"{}\", &amp;x);\n\n    // this will not compile\n    // let rec = get_record();\n    // println!(\"{}\", rec.x);\n\n    // this will not compile either\n    // note: if V4 Point was i32 it will compile &amp; run\n    // let rec = get_record();\n    // let x = match get_record() {\n    //     Record::V4(r) | Record::V6(r) =&gt; r.x,\n    // };\n}\n</code></pre>\n\n<h1>Original Post:</h1>\n\n<pre><code>use std::net::IpAddr;\nuse std::str::FromStr;\n\nfn main() {\n    let v4_or_v6 = IpAddr::from_str(\"1.2.3.4\").unwrap();\n\n    // match expression, both arms only differ by 1 char\n    let s = match v4_or_v6 {\n        IpAddr::V4(ip) =&gt; ip.to_string(),\n        IpAddr::V6(ip) =&gt; ip.to_string(),\n    };\n    println!(\"{}\", &amp;s);\n\n    // not working:\n    // let s2 = match v4_or_v6 {\n    //     IpAddr::V4(ip) | IpAddr::V6(ip) =&gt; ip.to_string(),\n    // };\n    // println!(\"{}\", &amp;s2);\n}\n</code></pre>\n\n<p>I understand that the underlying call to <code>to_string()</code> has different implementation for <code>Ipv4</code> than <code>Ipv6</code> but i think the compiler can be smart enough to handle this (am i wrong?)</p>\n\n<p>trying to compile with the commented out code results in compilation error (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f9c7055a8ba4bb83e628a43dd9b4c91d\" rel=\"nofollow noreferrer\">try it online</a>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling playground v0.0.1 (/playground)\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:16:37\n   |\n16 |         IpAddr::V4(ip) | IpAddr::V6(ip) =&gt; ip.to_string(),\n   |                                     ^^ expected struct `std::net::Ipv4Addr`, found struct `std::net::Ipv6Addr`\n   |\n   = note: expected type `std::net::Ipv4Addr`\n              found type `std::net::Ipv6Addr`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: Could not compile `playground`.\n</code></pre>\n"}, {"tags": ["rust", "ownership", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 472, "user_id": 9046809, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/510294a0a1d40c5820ae4c0b61f3536d?s=128&d=identicon&r=PG&f=1", "display_name": "garritfra", "link": "https://stackoverflow.com/users/9046809/garritfra"}, "is_accepted": true, "score": 2, "last_activity_date": 1544986919, "last_edit_date": 1544986919, "creation_date": 1544957941, "answer_id": 53801514, "question_id": 53801429, "link": "https://stackoverflow.com/questions/53801429/how-do-i-use-a-value-that-is-owned-by-a-match-statement-in-rust/53801514#53801514", "title": "How do I use a value that is owned by a match statement in Rust?", "body": "<p>Use an arbitrary value instead of <code>_</code>. The statement now looks like this:</p>\n\n<pre><code>for line in buffered.lines() {\n    match line.unwrap().as_ref() {\n        \"nop\" =&gt; instructions.push(0x00),\n        \"push\" =&gt; instructions.push(0x01),\n        \"print\" =&gt; instructions.push(0x02),\n        \"add\" =&gt; instructions.push(0x03),\n        \"halt\" =&gt; instructions.push(0xff),\n        x =&gt; instructions.push(x.as_bytes()[0]),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 472, "user_id": 9046809, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/510294a0a1d40c5820ae4c0b61f3536d?s=128&d=identicon&r=PG&f=1", "display_name": "garritfra", "link": "https://stackoverflow.com/users/9046809/garritfra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 53801514, "answer_count": 1, "score": 1, "last_activity_date": 1544986919, "creation_date": 1544957260, "last_edit_date": 1544986892, "question_id": 53801429, "link": "https://stackoverflow.com/questions/53801429/how-do-i-use-a-value-that-is-owned-by-a-match-statement-in-rust", "title": "How do I use a value that is owned by a match statement in Rust?", "body": "<p>My intention is to match the value of every line in a text file. If the value matches a string, the corresponding opcode should be pushed to a vector. Otherwise, I want to add the value itself to the vector. The value itself cannot be used because it belongs to another scope.</p>\n\n<p>Correct be if I'm wrong, but I cannot copy or clone the value of <code>line</code> because it doesn't implement the correct traits. What is the best solution to borrow the value in the match statement and then use it as the default (<code>_</code>) in case it does not match any string?</p>\n\n<pre><code>let buffered = BufReader::new(input);\n\nfor line in buffered.lines() {\n    match line.unwrap().as_ref() {\n        \"nop\" =&gt; instructions.push(0x00),\n        \"push\" =&gt; instructions.push(0x01),\n        \"print\" =&gt; instructions.push(0x02),\n        \"add\" =&gt; instructions.push(0x03),\n        \"halt\" =&gt; instructions.push(0xff),\n        _ =&gt; instructions.push(line.unwrap().as_bytes()[0]),\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544986699, "post_id": 53800537, "comment_id": 94459408, "body": "I agree with most of your explanation, but not your conclusion. Most people should use <code>std</code> instead of <code>core</code>, unless they are deliberately attempting to create code that should work in a no-std environment."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545025760, "post_id": 53800537, "comment_id": 94467416, "body": "@Shepmaster I don&#39;t see how my conclusion differs from yours ^^ Do you want me to expand it?"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 7, "last_activity_date": 1544986803, "last_edit_date": 1544986803, "creation_date": 1544948212, "answer_id": 53800537, "question_id": 53800450, "link": "https://stackoverflow.com/questions/53800450/is-there-any-disadvantage-to-referencing-modules-through-core-instead-of-std/53800537#53800537", "title": "Is there any disadvantage to referencing modules through `core` instead of `std`?", "body": "<p>Rust aims to be a general purpose language that can run on many kinds of architectures (x86_64, i686, PowerPC, ARM, RISC-V) and systems (Windows, macOS, Linux) and even embedded systems with no <a href=\"https://en.wikipedia.org/wiki/Operating_system\" rel=\"nofollow noreferrer\"><strong>O</strong>perating <strong>S</strong>ystem</a>.</p>\n\n<p>But when you don't have an OS, you don't necessarily have a memory allocator or file handling, because those are things a OS would normally do.</p>\n\n<p>This is where <code>#![no_std]</code> comes into play. If you put that directive in your <em>lib.rs</em>, you will tell the Rust compiler to not link the <code>std</code> crate, but only use <code>core</code> instead. As you said, <code>core</code> is a subset of <code>std</code> and has (mostly) everything that does not require allocation of memory or other things that require an underlying OS. </p>\n\n<p>There is no difference in the actual implementation though. If the function is provided in <code>core</code>, the function in <code>std</code> is just an <a href=\"https://doc.rust-lang.org/src/std/lib.rs.html#374\" rel=\"nofollow noreferrer\">reexport</a>.</p>\n\n<p>TL;DR: Use <code>std</code> if you have an Operating System running, else use <code>core</code>. There is no need to mix them.</p>\n"}], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 53800537, "answer_count": 1, "score": 4, "last_activity_date": 1544986803, "creation_date": 1544947195, "question_id": 53800450, "link": "https://stackoverflow.com/questions/53800450/is-there-any-disadvantage-to-referencing-modules-through-core-instead-of-std", "title": "Is there any disadvantage to referencing modules through `core` instead of `std`?", "body": "<p>Rust's standard library is exposed as two packages: <code>std</code> and <code>core</code>. In terms of API, the functionality in <code>core</code> is the subset of <code>std</code> that can be supported without depending on any operating system integration or heap allocation. When writing imports for my libraries, I've been tempted to always refer to modules via the more-compatible <code>core</code> instead of <code>std</code>, if they're available in both.</p>\n\n<p>However, it's been unclear to me whether their implementations of the same functionality could vary. If I use <code>core::cell::RefCell</code>, could I get an implementation that's less efficient than if I'd referred to <code>std::cell::RefCell</code>?</p>\n\n<p>Is there any disadvantage to referencing modules through <code>core</code> instead of <code>std</code> if they're available in both?</p>\n"}, {"tags": ["assembly", "rust", "x86-64", "ffi"], "comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1544960573, "post_id": 53799273, "comment_id": 94452297, "body": "Why are you using 7-byte <code>mov r64, sign_extended_imm32</code> for 1-byte constants?  <code>mov byte ptr [rsi], 0xff</code> / <code>mov byte ptr [rdi], 0xee</code> / <code>xor eax,eax</code> is way shorter and more efficient.  As a bonus, it will actually assemble, unlike <code>mov byte [rdi], rax</code> which has a mismatch between byte and qword operand size.  (<code>al</code> is the low byte of RAX).  Also, GAS&#39;s <code>.intel_syntax</code> is MASM-like, so you need <code>byte ptr</code>, not NASM-style <code>byte</code>.  Unless Rust uses a different assembler that only sort of looks like GAS, this isn&#39;t your real asm code."}, {"owner": {"reputation": 916, "user_id": 2005204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/477b229d748952ddd7c36c08b6f86dd5?s=128&d=identicon&r=PG&f=1", "display_name": "WDS", "link": "https://stackoverflow.com/users/2005204/wds"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1544968745, "post_id": 53799273, "comment_id": 94454323, "body": "@PeterCordes the program I posted was simplified from what I was trying to do. My real program uses Asm to convert a 136 byte array pointed to by RDI into a 17 element u64 array in RSI.  What I posted does run as I built the simplified program and copied directly from it. I switched from passing in a pointer, instead passing in a borrowed reference to the array, and at least in this case, that caused the off by one error to go away. Seems like an FFI bug.  I&#39;ll try your suggestions in my code."}], "answers": [{"comments": [{"owner": {"reputation": 916, "user_id": 2005204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/477b229d748952ddd7c36c08b6f86dd5?s=128&d=identicon&r=PG&f=1", "display_name": "WDS", "link": "https://stackoverflow.com/users/2005204/wds"}, "edited": false, "score": 0, "creation_date": 1544969776, "post_id": 53802942, "comment_id": 94454556, "body": "This corrected the issue.  I had tried moving immediates into [rdi] and [rsi] and gotten a complaint from the compiler about it.  Using &quot;mov byte ptr&quot; instead of &quot;mov byte&quot; allowed the direct immediates assignment and eliminated the &quot;off by one&quot; error I was inadvertently introducing into the program."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 916, "user_id": 2005204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/477b229d748952ddd7c36c08b6f86dd5?s=128&d=identicon&r=PG&f=1", "display_name": "WDS", "link": "https://stackoverflow.com/users/2005204/wds"}, "edited": false, "score": 1, "creation_date": 1544974502, "post_id": 53802942, "comment_id": 94455867, "body": "@WDS: without an operand-size specifier, <code>mov [mem], imm</code> is ambiguous and gives an error, yes.  That was your first hint that your syntax wasn&#39;t doing what you wanted.  The fact that <code>mov byte [rsi], rax</code> (with a qword register) <i>didn&#39;t</i> give an error even though you were trying to specify byte operand size was your other clue that your code didn&#39;t mean (to GAS) what you intended."}], "tags": [], "owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "is_accepted": true, "score": 3, "last_activity_date": 1544969386, "creation_date": 1544969386, "answer_id": 53802942, "question_id": 53799273, "link": "https://stackoverflow.com/questions/53799273/passing-pointer-to-rust-array-into-x86-64-asm-pointer-off-by-one/53802942#53802942", "title": "Passing Pointer to Rust Array into x86-64 Asm -- Pointer Off by One", "body": "<p>I assembled your asm with <code>gcc -c foo.S</code>, since I thought I'd get an assemble-time error from <code>byte</code> instead of <code>byte ptr</code>, and the mismatch with a qword register.</p>\n\n<p>In GAS syntax, <strong><code>byte</code> evaluates to the integer constant <code>1</code></strong>, so <code>mov byte [rsi], rax</code> is equivalent to <code>mov 1[rsi], rax</code>.  This is valid in GAS syntax, and is equivalent to <code>[1+rsi]</code></p>\n\n<p>When you disassemble <code>foo.o</code> with <code>objdump -dwrC -Mintel</code>, you see </p>\n\n<pre><code>0000000000000000 &lt;u8_to_u64&gt;:\n   0:   48 c7 c0 ff 00 00 00    mov    rax,0xff\n   7:   48 89 46 01             mov    QWORD PTR [rsi+0x1],rax\n   b:   48 c7 c0 ee 00 00 00    mov    rax,0xee\n  12:   48 89 47 01             mov    QWORD PTR [rdi+0x1],rax\n  16:   48 31 c0                xor    rax,rax\n  19:   c3                      ret    \n</code></pre>\n\n<p>Notice the <code>[rsi+1]</code> and <code>[rdi+1]</code> addressing modes.</p>\n\n<p>GAS syntax for what you're trying to do is:</p>\n\n<pre><code>mov   byte ptr [rsi], 0xff\nmov   byte ptr [rdi], 0xee\nxor   eax,eax\nret\n</code></pre>\n\n<p>Or with stupid extra instructions to do a mov-immediate to a register first:</p>\n\n<pre><code>mov   eax, 0xff\nmov   [rsi], al\nmov   eax, 0xee     # mov al, 0xee  is shorter but false dependency on the old RAX\nmov   [rdi], al\nxor   eax,eax\nret\n</code></pre>\n"}], "owner": {"reputation": 916, "user_id": 2005204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/477b229d748952ddd7c36c08b6f86dd5?s=128&d=identicon&r=PG&f=1", "display_name": "WDS", "link": "https://stackoverflow.com/users/2005204/wds"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 194, "favorite_count": 0, "accepted_answer_id": 53802942, "answer_count": 1, "score": 2, "last_activity_date": 1544969386, "creation_date": 1544932136, "last_edit_date": 1544960400, "question_id": 53799273, "link": "https://stackoverflow.com/questions/53799273/passing-pointer-to-rust-array-into-x86-64-asm-pointer-off-by-one", "title": "Passing Pointer to Rust Array into x86-64 Asm -- Pointer Off by One", "body": "<p>When I pass pointers to arrays from Rust into x86-64 Asm, the relevant registers (rdi, rsi) appear to be off by one, pointing to element 1 of the array instead of element 0.  I can decrement the registers to access the desired location, but I am concerned about the unexpected behavior.  Are there possible explanations for this that I am overlooking?</p>\n\n<p>The most relevant portions of a simple program to illustrate this follows.</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate utilities;\n\nfn main() {\n    let input: [u8;8] = [0;8];\n    let output: [u64; 1] = [0;1];\n\n    let input_ptr = input.as_ptr();\n    let output_ptr = output.as_ptr();\n\n    utilities::u8tou64(input_ptr,output_ptr);\n\n    for i in 0..8 {print!(\"{:02X}\", input[i]);} // byte 1 will be 0xEE\n    println!();\n    println!(\"{:016X}\", output[0].swap_bytes());  /* byte 1 position of the u64\n    will be 0xFF */\n\n    println!(\"{:02X}\",  unsafe{*input_ptr.offset(1)}); /* modifying byte at address\n    passed into rdi in Asm function modifies input_ptr.offset(1) when expected\n    behavior was modification of input_ptr with no offset, e.g. input[0] */\n}\n</code></pre>\n\n<p><strong>u8_to_u64.S</strong></p>\n\n<pre><code>.globl u8_to_u64\n.intel_syntax noprefix\nu8_to_u64:\n    mov rax, 0xff\n    mov byte [rsi], rax\n    mov rax, 0xee\n    mov byte [rdi], rax\n    xor rax, rax\nretq\n</code></pre>\n"}, {"tags": ["amazon-s3", "rust", "type-conversion", "rusoto"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1544986449, "creation_date": 1544986449, "answer_id": 53805442, "question_id": 53799059, "link": "https://stackoverflow.com/questions/53799059/uploading-a-string-to-s3-using-rusoto/53805442#53805442", "title": "Uploading a string to S3 using rusoto", "body": "<p><a href=\"https://docs.rs/rusoto_s3/0.36.0/rusoto_s3/type.StreamingBody.html\" rel=\"noreferrer\"><code>StreamingBody</code></a> is a type alias:</p>\n\n<pre><code>type StreamingBody = ByteStream;\n</code></pre>\n\n<p><a href=\"https://docs.rs/rusoto_core/0.36.0/rusoto_core/struct.ByteStream.html\" rel=\"noreferrer\"><code>ByteStream</code></a> has multiple constructors, including an <a href=\"https://docs.rs/rusoto_core/0.36.0/rusoto_core/struct.ByteStream.html#impl-From%3CVec%3Cu8%3E%3E\" rel=\"noreferrer\">implementation of <code>From</code></a>:</p>\n\n<pre><code>impl From&lt;Vec&lt;u8&gt;&gt; for ByteStream\n</code></pre>\n\n<p>You can convert a <code>String</code> into a <code>Vec&lt;u8&gt;</code> using <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.into_bytes\" rel=\"noreferrer\"><code>String::into_bytes</code></a>. All together:</p>\n\n<pre><code>fn example(s: String) -&gt; rusoto_s3::StreamingBody {\n    s.into_bytes().into()\n}\n</code></pre>\n"}], "owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2163, "favorite_count": 1, "accepted_answer_id": 53805442, "answer_count": 1, "score": 9, "last_activity_date": 1545229726, "creation_date": 1544928928, "last_edit_date": 1545229726, "question_id": 53799059, "link": "https://stackoverflow.com/questions/53799059/uploading-a-string-to-s3-using-rusoto", "title": "Uploading a string to S3 using rusoto", "body": "<p>I'm using <a href=\"https://github.com/rusoto/rusoto\" rel=\"noreferrer\">rusoto</a> S3 to create a JSON string and upload this string to an S3 bucket. I can create the string, but rusoto's S3 <code>PutObjectRequest</code> requires a <code>StreamingBody</code> and I'm not sure how I can create a <code>StreamingBody</code> from a string or whether this is actually necessary.</p>\n\n<pre><code>extern crate json;\nextern crate rusoto_core;\nextern crate rusoto_s3;\nextern crate futures;\n\nuse rusoto_core::Region;\nuse rusoto_s3::{S3, S3Client, PutObjectRequest};\n\nfn main() {\n    let mut paths = Vec::new();\n    paths.push(1);\n    let s3_client = S3Client::new(Region::UsEast1);\n    println!(\"{}\", json::stringify(paths));\n    s3_client.put_object(PutObjectRequest {\n        bucket: String::from(\"bucket\"),\n        key: \"@types.json\".to_string(),\n        body: Some(json::stringify(paths)),\n        acl: Some(\"public-read\".to_string()),\n        ..Default::default()\n    }).sync().expect(\"could not upload\");\n}\n</code></pre>\n\n<p>The error I get is </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:16:20\n   |\n16 |         body: Some(json::stringify(paths)),\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ expected struct `rusoto_core::ByteStream`, found struct `std::string::String`\n   |\n   = note: expected type `rusoto_core::ByteStream`\n              found type `std::string::String`\n</code></pre>\n\n<p>I'm not sure how to give this a <code>ByteStream</code>... <code>ByteStream::new(json::stringify(paths))</code> does not work and gives me a different error.</p>\n\n<p>How can I upload a string?</p>\n"}, {"tags": ["struct", "syntax", "rust"], "comments": [{"owner": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 0, "creation_date": 1544917896, "post_id": 53798224, "comment_id": 94446184, "body": "You could implement the <code>From</code> trait: <a href=\"https://doc.rust-lang.org/std/convert/trait.From.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/convert/trait.From.html</a>"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 0, "creation_date": 1544917944, "post_id": 53798224, "comment_id": 94446194, "body": "@UnholySheep Semi-related question, is there any runtime overhead by doing so?"}], "owner": {"reputation": 93, "user_id": 6775287, "user_type": "registered", "profile_image": "https://graph.facebook.com/10155232079677907/picture?type=large", "display_name": "Tore", "link": "https://stackoverflow.com/users/6775287/tore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 0, "closed_date": 1544922621, "answer_count": 0, "score": 2, "last_activity_date": 1545230444, "creation_date": 1544917668, "last_edit_date": 1545230444, "question_id": 53798224, "link": "https://stackoverflow.com/questions/53798224/is-it-possible-to-copy-all-the-members-of-one-type-to-another-without-explicitly", "closed_reason": "Duplicate", "title": "Is it possible to copy all the members of one type to another without explicitly mentioning each one?", "body": "<p>I have two structs that have mostly the same keys. Is it possible to copy all the keys without explicitly mentioning each one? Is there a cleaner way of doing this:</p>\n\n<pre><code>struct Type1&lt;'a&gt; {\n    field1: i32,\n    field2: &amp;'a str,\n    field3: &amp;'a str,\n}\n\n#[derive(Debug)]\nstruct Type2&lt;'a&gt; {\n    field1: i32,\n    field2: &amp;'a str,\n}\n\nfn example() {\n    let t1 = Type1 {\n        field1: 1,\n        field2: \"A\",\n        field3: \"B\",\n    };\n    let t2 = Type2 {\n        field1: t1.field1,\n        field2: t1.field2,\n    };\n    println!(\"{:?}\", t2);\n}\n</code></pre>\n"}, {"tags": ["function", "syntax", "rust"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 5, "creation_date": 1544911920, "post_id": 53797666, "comment_id": 94445080, "body": "Why not make a seperate function, then run <i>that</i> twice? Running <code>main</code> twice seems like poor style to me."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1544922456, "last_edit_date": 1544922456, "creation_date": 1544922118, "answer_id": 53798572, "question_id": 53797666, "link": "https://stackoverflow.com/questions/53797666/how-to-re-execute-a-rust-main-function/53798572#53798572", "title": "How to re-execute a Rust main function?", "body": "<p><code>main</code> is just a function. Call it like any other function:</p>\n\n<pre><code>use std::sync::atomic::{AtomicUsize, Ordering};\n\nstatic NUMBER_OF_RUNS: AtomicUsize = AtomicUsize::new(3);\n\nfn main() {\n    if 0 == NUMBER_OF_RUNS.fetch_sub(1, Ordering::SeqCst) {\n        eprintln!(\"Ending\");\n    } else {\n        eprintln!(\"Not done yet\");\n        main();\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Not done yet\nNot done yet\nNot done yet\nEnding\n</code></pre>\n\n<hr>\n\n<p>Now, I would suggest that you <em>not do this</em>. It's basically just <em>weird</em>. Instead, use a loop. I don't even see where you need a loop, all you need is basic conditional logic:</p>\n\n<pre><code>use std::{fs::File, io};\n\nfn main() {\n    let file = File::open(\"my_file\")\n        .or_else(|_| login())\n        .expect(\"Unable to open file\");\n\n    println!(\"main logic\");\n}\n\nfn login() -&gt; io::Result&lt;File&gt; {\n    File::create(\"my_file\")\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8408293"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 359, "favorite_count": 0, "accepted_answer_id": 53798572, "answer_count": 1, "score": -1, "last_activity_date": 1545230506, "creation_date": 1544911608, "last_edit_date": 1545230506, "question_id": 53797666, "link": "https://stackoverflow.com/questions/53797666/how-to-re-execute-a-rust-main-function", "title": "How to re-execute a Rust main function?", "body": "<p>I am looking to attempt to re-run my application from inside of the application itself. </p>\n\n<p>When the program initially runs, it will <code>try</code> for a file. If the file does not exist, it executes a <code>login</code> module and create the file; if it does exist, it will go straight to the main <code>application</code> module. </p>\n\n<p>This <code>try</code> function is inside of the initial <code>fn main ()</code> function.</p>\n\n<p>How would I re-execute the application's <code>main</code> function to re-evaluate whether the file exists?</p>\n\n<p>(Does something like <code>self::main()</code> exist?)</p>\n\n<p>Thanks!!</p>\n"}, {"tags": ["functional-programming", "rust", "iterator"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 4, "creation_date": 1544904678, "post_id": 53796779, "comment_id": 94443359, "body": "I think it says that the iterator returned by <code>.take(2)</code> (<code>std::iter::Take&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&zwnj;&#8203;&gt;&gt;&gt;</code>) cannot be reversed because it does not support the <code>std::iter::DoubleEndedIterator</code> trait that defines the <code>rev</code> method"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1545034480, "post_id": 53796779, "comment_id": 94470571, "body": "Shouldn&#39;t the comment on the last line be <code>expected 8, 9</code>?"}, {"owner": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1545052431, "post_id": 53796779, "comment_id": 94480136, "body": "@Jmb Thanks. You&#39;re right"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1544921722, "creation_date": 1544921722, "answer_id": 53798549, "question_id": 53796779, "link": "https://stackoverflow.com/questions/53796779/why-cant-i-reverse-an-iterator-twice-to-get-the-last-two-numbers-of-a-vector/53798549#53798549", "title": "Why can&#39;t I reverse an iterator twice to get the last two numbers of a vector?", "body": "<p>As the compiler tells you (cleaned up):</p>\n\n<blockquote>\n  <p>the trait bound <code>Take&lt;...&gt;: DoubleEndedIterator</code> is not satisfied</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.rev\" rel=\"noreferrer\"><code>Iterator::Rev</code></a> is only implemented when the underlying type implements <code>DoubleEndedIterator</code>:</p>\n\n<pre><code>fn rev(self) -&gt; Rev&lt;Self&gt;\nwhere\n    Self: DoubleEndedIterator, \n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/struct.Take.html\" rel=\"noreferrer\"><code>Take</code></a> does not implement <code>DoubleEndedIterator</code>, so you cannot call <code>rev</code> on it.</p>\n\n<hr>\n\n<p>I'd just slice it:</p>\n\n<pre><code>let items = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet last_2 = &amp;items[items.len() - 2..];\nassert_eq!(last_2, [8, 9]);\n</code></pre>\n"}], "owner": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 445, "favorite_count": 0, "accepted_answer_id": 53798549, "answer_count": 1, "score": 4, "last_activity_date": 1545052442, "creation_date": 1544904049, "last_edit_date": 1545052442, "question_id": 53796779, "link": "https://stackoverflow.com/questions/53796779/why-cant-i-reverse-an-iterator-twice-to-get-the-last-two-numbers-of-a-vector", "title": "Why can&#39;t I reverse an iterator twice to get the last two numbers of a vector?", "body": "<p>I want to take the last two numbers of a vector. Why can't I reverse the iterator twice? </p>\n\n<pre><code>fn main() {\n    let double_reversed = &amp;vec![1, 2, 3, 4, 5, 6, 7, 8, 9]\n        .into_iter()\n        .rev()\n        .take(2)\n        .rev()\n        .collect();\n\n    println!(\"{}\", double_reversed); // expected 8, 9\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=78d8ffb96270f1e65305fff84d980f6b\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The error messages are:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::iter::Take&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&gt;&gt;&gt;: std::iter::DoubleEndedIterator` is not satisfied\n --&gt; src/main.rs:6:10\n  |\n6 |         .rev()\n  |          ^^^ the trait `std::iter::DoubleEndedIterator` is not implemented for `std::iter::Take&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&gt;&gt;&gt;`\n\nerror[E0599]: no method named `collect` found for type `std::iter::Rev&lt;std::iter::Take&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&gt;&gt;&gt;&gt;` in the current scope\n --&gt; src/main.rs:7:10\n  |\n7 |         .collect();\n  |          ^^^^^^^\n  |\n  = note: the method `collect` exists but the following trait bounds were not satisfied:\n          `std::iter::Rev&lt;std::iter::Take&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&gt;&gt;&gt;&gt; : std::iter::Iterator`\n          `&amp;mut std::iter::Rev&lt;std::iter::Take&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&gt;&gt;&gt;&gt; : std::iter::Iterator`\n</code></pre>\n"}, {"tags": ["ios", "rust", "cross-compiling"], "answers": [{"tags": [], "owner": {"reputation": 26, "user_id": 10797000, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/d1l8f.png?s=128&g=1", "display_name": "stephen liu", "link": "https://stackoverflow.com/users/10797000/stephen-liu"}, "is_accepted": true, "score": 0, "last_activity_date": 1545034571, "last_edit_date": 1545034571, "creation_date": 1544957011, "answer_id": 53801401, "question_id": 53796512, "link": "https://stackoverflow.com/questions/53796512/undefined-symbols-for-architecture-x86-64-i386/53801401#53801401", "title": "Undefined symbols for architecture x86_64 / i386", "body": "<p>You should link against sqlite3 library first before you compile the app.\nfollow the step:</p>\n\n<ol>\n<li>go to the target's \"Build Phases\" -> \"Link Binary With Libraries\" section.</li>\n<li>click add \"+\".</li>\n<li>search sqlite.</li>\n<li>select \"libsqlite3.tbd\", \"tbd\" is new extension of dylib file in iOS.</li>\n<li>click \"Add\"\nnow your app successfully linked to sqlite lib, the error should have gone.</li>\n</ol>\n"}], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 406, "favorite_count": 0, "accepted_answer_id": 53801401, "answer_count": 1, "score": -1, "last_activity_date": 1545230573, "creation_date": 1544901848, "last_edit_date": 1545230573, "question_id": 53796512, "link": "https://stackoverflow.com/questions/53796512/undefined-symbols-for-architecture-x86-64-i386", "title": "Undefined symbols for architecture x86_64 / i386", "body": "<p>I've a native lib that is communication with sqlite3, it works fine within Android, so, I compiled it for iOS, compilation process completed smoothly, but at the time of exciting, i.e. once building the iOS app in Xcode, I got the below error:</p>\n\n<blockquote>\n  <p>symbol(s) not found for architecture x86_64</p>\n  \n  <p>Undefined symbols for architecture x86_64:\n    \"_sqlite3_column_int64\", referenced from:\n        rusqlite::statement::Statement::value_ref::h1ef4d7e4ee859386 in libgreetings.a(rusqlite-39d80e8cd3d6a115.rusqlite.99wt63ts-cgu.3.rcgu.o)\n    \"_sqlite3_column_blob\", referenced from:\n        rusqlite::statement::Statement::value_ref::h1ef4d7e4ee859386 in libgreetings.a(rusqlite-39d80e8cd3d6a115.rusqlite.99wt63ts-cgu.3.rcgu.o)\n    \"_sqlite3_bind_int64\", referenced from:\n        rusqlite::statement::Statement::bind_parameter::hc14d4185381afdbf in \n     ...\n     ...\n     ...</p>\n</blockquote>\n\n<p>Even when I changed the <code>iOS Development target</code> as shown <a href=\"https://stackoverflow.com/a/43709211/2441637\">here</a> and installed simulator iOS 10, and changed the <code>Architectures</code> to <code>$(ARCHS_STANDARD_32_BIT)</code> instead of <code>$(ARCHS_STANDARD)</code> as shown <a href=\"https://pewpewthespells.com/blog/buildsettings.html#archs_standard_32_64_bit\" rel=\"nofollow noreferrer\">here</a> I got the same error with:</p>\n\n<blockquote>\n  <p>ld: symbol(s) not found for architecture i386</p>\n</blockquote>\n\n<p>Note: The lib is built using rust and <a href=\"https://github.com/jgallagher/rusqlite\" rel=\"nofollow noreferrer\">rusqlite</a> crate, the lib was called smoothly and executed very well before adding the sqlite part.</p>\n"}, {"tags": ["types", "rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1544898971, "post_id": 53795879, "comment_id": 94441884, "body": "&quot;It seems the goal is to complete this code by createing a generic version of the IsEvenOrOdd implementation.&quot; Is it? I would assume the goal is just to add a <code>where</code> clause so that the code compiles."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1544901971, "post_id": 53795879, "comment_id": 94442675, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/53125347/wrong-trait-choosen-based-on-type-parameter\">Wrong trait choosen based on type parameter</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544922914, "post_id": 53795879, "comment_id": 94446877, "body": "I agree; to solve the koan, add <code>where T: IsEvenOrOdd</code> to <code>fn asserts</code>."}], "answers": [{"tags": [], "owner": {"reputation": 3573, "user_id": 3142971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GvXzQ.png?s=128&g=1", "display_name": "Steampunkery", "link": "https://stackoverflow.com/users/3142971/steampunkery"}, "is_accepted": true, "score": 2, "last_activity_date": 1545360850, "last_edit_date": 1545360850, "creation_date": 1545337694, "answer_id": 53875593, "question_id": 53795879, "link": "https://stackoverflow.com/questions/53795879/trait-implementation-with-where-clauses-implementing-a-simple-where-clause/53875593#53875593", "title": "Trait implementation with where clauses: Implementing a simple where clause", "body": "<p>I think you may have misinterpreted the intention of this exercise. What you want is this:</p>\n\n<pre><code>fn main() {\n    let num_one: u16 = 3;\n    let num_two: u16 = 4;\n\n    trait IsEvenOrOdd {\n        fn is_even(&amp;self) -&gt; bool;\n    }\n\n    impl IsEvenOrOdd for u16 {\n        fn is_even(&amp;self) -&gt; bool {\n            self % 2 == 0\n        }\n    }\n\n    fn asserts&lt;T&gt;(x: T, y: T)\n        where T: IsEvenOrOdd {\n        assert!(!x.is_even());\n        assert!(y.is_even());\n    }\n\n    asserts(num_one, num_two);\n}\n</code></pre>\n\n<p>How did I come to this conclusion? Trying to compile and run the original code you posted results in the following error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `is_even` found for type `T` in the current scope\n  --&gt; src/main.rs:16:20\n   |\n16 |         assert!(!x.is_even());\n   |                    ^^^^^^^\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `is_even`, perhaps you need to implement it:\n       candidate #1: `main::IsEvenOrOdd`\n</code></pre>\n\n<p>This error tells us that to call the <code>is_even</code> method, you must implement <code>IsEvenOrOdd</code>. The comments on the top of the example you posted say to use the <code>where</code> clause on a <em>function</em>. Adding the <code>where</code> clause to the function <code>asserts</code> solves your problem and completes the exercise.  </p>\n"}], "owner": {"reputation": 193, "user_id": 9002830, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e091ff2b269632d643a0ceb57a1dc09?s=128&d=identicon&r=PG&f=1", "display_name": "devaj", "link": "https://stackoverflow.com/users/9002830/devaj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "accepted_answer_id": 53875593, "answer_count": 1, "score": 3, "last_activity_date": 1545360850, "creation_date": 1544897174, "last_edit_date": 1544922869, "question_id": 53795879, "link": "https://stackoverflow.com/questions/53795879/trait-implementation-with-where-clauses-implementing-a-simple-where-clause", "title": "Trait implementation with where clauses: Implementing a simple where clause", "body": "<p>I have been trying to learn Rust through <a href=\"https://github.com/crazymykl/rust-koans\" rel=\"nofollow noreferrer\">rust-koans</a> but ran into a wall with the following trait koan:</p>\n\n<pre><code>// There is an alternate syntax for placing trait bounds on a function, the\n// where clause. Let's revisit a previous example, this time using 'where'.\n#[test]\nfn where_clause() {\n    let num_one: u16 = 3;\n    let num_two: u16 = 4;\n\n    trait IsEvenOrOdd {\n        fn is_even(&amp;self) -&gt; bool;\n    }\n\n    impl IsEvenOrOdd for u16 {\n        fn is_even(&amp;self) -&gt; bool {\n            self % 2 == 0\n        }\n    }\n\n    fn asserts&lt;T&gt;(x: T, y: T) {\n        assert!(!x.is_even());\n        assert!(y.is_even());\n    }\n\n    asserts(num_one, num_two);\n}\n</code></pre>\n\n<p>It seems the goal is to complete this code by creating a generic version of the <code>IsEvenOrOdd</code> implementation. In this case the generic type should have two bounds, the remainder operator and the <code>PartialEq</code> operator. Because the remainder right side and equivalence right side are integers, I eventually wrote the following spaghetti code:</p>\n\n<pre><code>use std::ops::Rem;\n\nimpl&lt;T&gt; IsEvenOrOdd for T\nwhere\n    T: Rem&lt;u16&gt; + Rem,\n    &lt;T as Rem&lt;u16&gt;&gt;::Output: PartialEq&lt;u16&gt;,\n{\n    fn is_even(&amp;self) -&gt; bool {\n        self % 2 == 0\n    }\n}\n</code></pre>\n\n<p>Still - the code doesn't compile. It seems that since <code>T</code> is dereferenced I would need to add bounds to the dereferenced value, but I cannot find any example of how to do that.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `%` cannot be applied to type `&amp;T`\n   --&gt; src\\koans/traits.rs:142:13\n    |\n142 |             self % 2 == 0\n    |             ^^^^^^^^\n    |\n    = note: an implementation of `std::ops::Rem` might be missing for `&amp;T`\n</code></pre>\n\n<p>In short: What would be the idiomatic Rust way to solve this koan?</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1544897982, "post_id": 53795769, "comment_id": 94441645, "body": "I suspect it might be an unintended consequence of the new lifetime elision rules for Rust 2018; can you try on an older compiler version (1.30 or earlier)?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1544898568, "post_id": 53795769, "comment_id": 94441793, "body": "Note that in Rust 2018 omitting lifetime parameters in non-reference types is deprecated, so you should write <code>Vec&lt;Point&lt;&#39;_&gt;&gt;</code> instead of <code>Vec&lt;Point&gt;</code>."}, {"owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1545127576, "post_id": 53795769, "comment_id": 94509483, "body": "@trentcl no it&#39;s the same on 1.30 and earlier. Must be a restriction in impl Trait itself, I&#39;d like to learn exactly why though."}], "owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 309, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1545145992, "creation_date": 1544896261, "last_edit_date": 1545145992, "question_id": 53795769, "link": "https://stackoverflow.com/questions/53795769/adding-a-generic-type-to-a-function-that-returns-impl-trait-requires-using-the", "title": "Adding a generic type to a function that returns impl Trait requires using the &#39;static lifetime", "body": "<p>I have a function that takes references as parameters and returns <code>impl Future</code>. The future doesn't refer to the parameters (it takes a copy) so the references don't have to outlive the function call:</p>\n\n<pre><code>use futures::{Future, future}; // 0.1.25\n\npub struct Point&lt;'a&gt; {\n    _name: &amp;'a str,\n}\n\npub fn write&lt;'a&gt;(_points: &amp;'a [Point&lt;'a&gt;]) -&gt; impl Future&lt;Item = (), Error = ()&gt; + 'static {\n    future::ok(())\n}\n\npub fn call_write(points: Vec&lt;Point&gt;) -&gt; impl Future&lt;Item = (), Error = ()&gt; {\n    // this works fine\n    write(&amp;points)\n}\n</code></pre>\n\n<p>I'd like to adapt my <code>write</code> function to take a generic argument, but when I do this, the compiler thinks my function takes lifetime <code>'static</code> not <code>'a</code>:</p>\n\n<pre><code>pub fn write&lt;'a, T: 'a&gt;(_points: &amp;'a [T]) -&gt; impl Future&lt;Item = (), Error = ()&gt; + 'static {\n    future::ok(())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0621]: explicit lifetime required in the type of `points`\n  --&gt; src/lib.rs:11:42\n   |\n11 | pub fn call_write(points: Vec&lt;Point&gt;) -&gt; impl Future&lt;Item = (), Error = ()&gt; {\n   |                           ----------     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime `'static` required\n   |                           |\n   |                           help: add explicit lifetime `'static` to the type of `points`: `std::vec::Vec&lt;Point&lt;'static&gt;&gt;`\n</code></pre>\n\n<p>My <code>write</code> function doesn't behave any differently with a generic <code>T</code> as with <code>Point</code>, so why does the compiler think the parameter to the generic <code>write</code> should be 'static?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=731679e3c7101d7fde471849d6fad4fe\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>The returned future does have lifetime <code>'static</code> as it doesn't hold references to the original parameters. In the real code, the parameters are serialised to a <code>Vec&lt;u8&gt;</code>, which is owned by the future.</p>\n\n<p>Replacing <code>impl Future + 'static</code> with <code>Box&lt;dyn Future + 'static&gt;</code> works, so am I looking at a limitation of <code>impl Trait</code>?</p>\n\n<pre><code>pub fn write&lt;'a, T: 'a&gt;(_points: &amp;'a [T]) -&gt; Box&lt;dyn Future&lt;Item = (), Error = ()&gt; + 'static&gt; {\n</code></pre>\n\n<p>The error is the same before and after 1.30, so I think it must be something to do with impl Trait itself, rather than any recent change in lifetime elision. It seems to me that the return type is capturing lifetime bounds it shouldn't.</p>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1544863673, "post_id": 53788733, "comment_id": 94432796, "body": "Why <code>&amp;&#39;a mut</code> at all? Make rows own the Tile, that would be the proper way."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1544866507, "post_id": 53788733, "comment_id": 94433366, "body": "We have too few information about your needs."}, {"owner": {"reputation": 88, "user_id": 6513106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b6f98024e29da0c55dea2a0080f26a6?s=128&d=identicon&r=PG", "display_name": "janqo", "link": "https://stackoverflow.com/users/6513106/janqo"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544877935, "post_id": 53788733, "comment_id": 94435790, "body": "@hellow I want <code>&amp;</code> because I want to cheaply swap tiles in the board and <code>mut</code> because Tiles may be modified. I&#39;ve implemented a version with <code>rows</code> owning Tiles, but thought it&#39;s to high performance cost as tiles are swapped frequently."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 1, "last_activity_date": 1544884189, "last_edit_date": 1544884189, "creation_date": 1544883295, "answer_id": 53794011, "question_id": 53788733, "link": "https://stackoverflow.com/questions/53788733/initialising-an-array-of-mutable-reference-to-struct/53794011#53794011", "title": "Initialising an array of mutable reference to struct", "body": "<p><code>&amp;mut</code> is not just \"a pointer with mutation\". It's a <em>borrow</em>. That means it can't <em>own</em> the <code>Tile</code>, which has to belong somewhere else.</p>\n\n<p>This approach</p>\n\n<pre><code>let mut rows = [[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()]];\n</code></pre>\n\n<p>works because each individual <code>Tile::def()</code> creates a new, temporary <code>Tile</code>, and the <code>&amp;mut</code> causes the temporary to be \"promoted\" to the stack -- see <a href=\"https://stackoverflow.com/questions/47662253/why-is-it-legal-to-borrow-a-temporary\">Why is it legal to borrow a temporary?</a> for more information. But it's not the way you should fix this problem: you need something to <em>own</em> the <code>Tile</code>s.</p>\n\n<p>You could, for instance, create a <code>Vec&lt;Tile&gt;</code> and fill <code>rows</code> with references to the members of the <code>Vec</code>. But that doesn't solve your initialization problem, and the real answer is easier: you want an <em>owning</em> pointer, so use <code>Box&lt;Tile&gt;</code> instead of <code>&amp;mut Tile</code>.</p>\n\n<p><code>Box</code> doesn't implement <code>Copy</code>, but it does implement another trait that makes this job much easier: <code>Default</code>.</p>\n\n<pre><code>impl Default for Tile {\n    fn default() -&gt; Self {\n        Tile::def()\n    }\n}\n\nfn main() {\n    let mut rows: [[Box&lt;Tile&gt;; 7]; 7] = Default::default();\n}\n</code></pre>\n\n<p>Depending on what <code>Tile::def</code> does, you may also be able to <code>#[derive(Default)]</code> instead of implementing it by hand.</p>\n\n<hr>\n\n<p>There's one other option I encourage you to consider: Store all the <code>Tile</code>s in a <code>Vec</code>, but refer to them by indices instead of any kind of pointer. It's cheap to swap two indices, it's easy to grow the <code>Vec</code> if you need to, it makes it possible to store <code>rows</code> alongside its backing store without lifetime issues, and it's more cache-friendly (which may mean better performance) than storing all the <code>Tile</code>s in separate allocations. But it's not necessarily ideal in all situations.</p>\n"}], "owner": {"reputation": 88, "user_id": 6513106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b6f98024e29da0c55dea2a0080f26a6?s=128&d=identicon&r=PG", "display_name": "janqo", "link": "https://stackoverflow.com/users/6513106/janqo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 53794011, "answer_count": 1, "score": 1, "last_activity_date": 1544923820, "creation_date": 1544836276, "last_edit_date": 1544923820, "question_id": 53788733, "link": "https://stackoverflow.com/questions/53788733/initialising-an-array-of-mutable-reference-to-struct", "title": "Initialising an array of mutable reference to struct", "body": "<p>I have <code>struct Board</code> which contains an element <code>rows: [[&amp;'a mut Tile; 7];7]</code></p>\n\n<p>I have no idea how to initialise that by a constructor in <code>impl Board {}</code> block because of lifetimes, so I've tried to initialise it in the <code>main</code> function.</p>\n\n<p>Sadly, <code>rows = [[&amp;mut Tile::def(); 7]; 7]</code> doesn't work because Rust wants to copy the reference <code>&amp;mut Tile::def()</code>. (Where <code>Tile::def()</code> is a constructor for <code>Tile</code>).</p>\n\n<p>Is there a way to initialise this array such that every element (i,j) is a reference to a distinct <code>Tile</code>?</p>\n\n<p>Currently, the only solution that works is</p>\n\n<pre><code>let mut rows = [[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()],[&amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def(), &amp;mut Tile::def()]];\n\nlet board = Board { rows : rows, ...};\n</code></pre>\n\n<p>which is unsatisfactory for obvious reasons.</p>\n\n<p>What I have tried was creating a function that transforms <code>[[Tile; 7]; 7]</code> into the desired array, but I encountered impossibility of borrowing mutably elements of this array multiple times.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1544875341, "post_id": 53788315, "comment_id": 94435188, "body": "I think what you really want here is <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"nofollow noreferrer\">impl specialization</a>, but that could be a long time away still. In the meantime, I would suggest finding an alternative API, where callers can decide which method to call, with the knowledge of which is faster."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1544875487, "post_id": 53788315, "comment_id": 94435219, "body": "And finally, I recommend profiling the code (with all optimisations enabled), so you can be certain that the &quot;fast path&quot; is actually faster. I have been frequently surprised to measure negligible performance difference between two functions that look completely different on the surface."}, {"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544913397, "post_id": 53788315, "comment_id": 94445359, "body": "@Peter Hall How can this alternative API look?"}, {"owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "edited": false, "score": 0, "creation_date": 1545195745, "post_id": 53788315, "comment_id": 94537351, "body": "@mamcx I think the main idea would be to provide a different method, like <code>new_from_btree</code>, which only takes <code>BTree</code> and has the optimizations for that, and then just always use the generic path in <code>new_from</code>."}], "answers": [{"comments": [{"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1594141887, "post_id": 53788989, "comment_id": 111020627, "body": "What is the performance of this like? T is known statically, but then we throw away the information with <code>&amp;dyn</code>. In C++ I could be guaranteed a <code>is_same_v&lt;T1,T2&gt;</code> check would be resolved at compile time."}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1594142078, "post_id": 53788989, "comment_id": 111020729, "body": "This also seems much weaker -- I can&#39;t compare if the types are the same without having an instance to take a borrow of."}], "tags": [], "owner": {"reputation": 51, "user_id": 3469537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/41ca6531f86c8f436753ecbefcf4ccbd?s=128&d=identicon&r=PG", "display_name": "jmhain", "link": "https://stackoverflow.com/users/3469537/jmhain"}, "is_accepted": false, "score": 5, "last_activity_date": 1544839815, "creation_date": 1544839815, "answer_id": 53788989, "question_id": 53788315, "link": "https://stackoverflow.com/questions/53788315/in-rust-how-check-if-a-generic-parameter-is-of-a-specific-type-and-cast-to-it/53788989#53788989", "title": "In Rust, how check if a generic parameter is of a specific type and cast to it", "body": "<p>What you are trying to do should be possible using <a href=\"https://doc.rust-lang.org/std/any/index.html\" rel=\"noreferrer\"><code>std::any</code></a>. I imagine it would look something like this:</p>\n\n<pre><code>use std::any::Any;\n\ntrait Trait {\n    fn foo&lt;T: Trait + Any&gt;(of: T) -&gt; Self;\n}\n\n#[derive(Clone)]\nstruct Special;\n\nimpl Trait for Special {\n    fn foo&lt;T: Trait + Any&gt;(of: T) -&gt; Self {\n        let of_any = &amp;of as &amp;dyn Any;\n        if let Some(special) = of_any.downcast_ref::&lt;Special&gt;() {\n            // Fast path\n            special.clone()\n        } else {\n            // Generic path, pretend this is expensive\n            Special\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2882, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1544839815, "creation_date": 1544831475, "question_id": 53788315, "link": "https://stackoverflow.com/questions/53788315/in-rust-how-check-if-a-generic-parameter-is-of-a-specific-type-and-cast-to-it", "title": "In Rust, how check if a generic parameter is of a specific type and cast to it", "body": "<p>I have several types that implement a trait (Relation). I need to pass data between them, like <code>INSERT INTO FROM SELECT</code> from sql.</p>\n\n<p>However, some times I will move data that is coming from the same type, meaning I could use a more direct way:</p>\n\n<pre><code>impl Relation for BTree {\n    fn new_from&lt;R: Relation&gt;(names: Schema, of: R) -&gt; Self {\n       if of is Btree { //How do this\n          //Fast path\n          cast(of as Btree).clone()  //And this\n       } else {\n          //Generic path\n       }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "numbers", "precision"], "answers": [{"tags": [], "owner": {"reputation": 2581, "user_id": 1336014, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b13ceab253fd74043a0e013b6f663820?s=128&d=identicon&r=PG", "display_name": "tuxtimo", "link": "https://stackoverflow.com/users/1336014/tuxtimo"}, "is_accepted": true, "score": 1, "last_activity_date": 1544826495, "last_edit_date": 1544826495, "creation_date": 1544822960, "answer_id": 53787114, "question_id": 53786955, "link": "https://stackoverflow.com/questions/53786955/when-should-i-use-usize-vs-i32-f32/53787114#53787114", "title": "When should I use usize vs i32, f32?", "body": "<p>It really depends on what data you want to store:</p>\n\n<p><strong><code>usize</code></strong>: a <a href=\"https://doc.rust-lang.org/std/primitive.usize.html\" rel=\"nofollow noreferrer\">pointer-sized integer type</a>, which means that the size of the integer stored depends on how many bytes are needed to store a reference in a pointer into memory. For a 32-bit machine this is 4 bytes and for a 64-bit machine it's 8 bytes.</p>\n\n<p><strong><code>i32</code></strong>: a <a href=\"https://doc.rust-lang.org/std/primitive.i32.html\" rel=\"nofollow noreferrer\">32-bit integer type</a>. In many programming languages this is the default size for integers like <code>int</code> or <code>Integer</code>. </p>\n\n<p><strong><code>f32</code></strong>: a <a href=\"https://doc.rust-lang.org/std/primitive.f32.html\" rel=\"nofollow noreferrer\">32-bit floating point type</a>. In many programming langues this type is known as <code>float</code>, whereas <code>f64</code> is known as double.</p>\n"}], "owner": {"reputation": 306, "user_id": 6296541, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209286680946325/picture?type=large", "display_name": "Chris Karani", "link": "https://stackoverflow.com/users/6296541/chris-karani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 328, "favorite_count": 0, "closed_date": 1544870531, "accepted_answer_id": 53787114, "answer_count": 1, "score": -1, "last_activity_date": 1545231042, "creation_date": 1544822019, "last_edit_date": 1545231042, "question_id": 53786955, "link": "https://stackoverflow.com/questions/53786955/when-should-i-use-usize-vs-i32-f32", "closed_reason": "Opinion-based", "title": "When should I use usize vs i32, f32?", "body": "<p>I'm modelling JSON objects as structs:</p>\n\n<pre><code>struct Person {\n    name: String,\n    age: usize,\n}\n</code></pre>\n\n<p>How do I know when I should use <code>usize</code> vs <code>i32</code>, <code>f32</code>?</p>\n"}, {"tags": ["syntax", "rust", "lifetime", "borrow-checker", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 6, "last_activity_date": 1544815734, "creation_date": 1544815734, "answer_id": 53785822, "question_id": 53785538, "link": "https://stackoverflow.com/questions/53785538/how-does-returning-a-reference-to-path-from-the-functions-stack-work/53785822#53785822", "title": "How does returning a reference to Path from the function&#39;s stack work?", "body": "<p>The returned reference does not point to some object that is newly created inside of <code>as_ref()</code>, but rather to the data of the string that was passed in as an argument.</p>\n\n<p>Let's make the lifetimes in the relevant functions explicit. The prototype</p>\n\n<pre><code>fn as_ref(&amp;self) -&gt; &amp;Path\n</code></pre>\n\n<p>can be desugared to </p>\n\n<pre><code>fn as_ref(&amp;'a self) -&gt; &amp;'a Path\n</code></pre>\n\n<p>The type of <code>self</code> is <code>&amp;'a String</code>, a reference to a string with lifetime <code>'a</code>.</p>\n\n<p>Inside the function body, <code>Path::new()</code> is called. According to the documentation, it is defined like this:</p>\n\n<pre><code>pub fn new&lt;S: AsRef&lt;OsStr&gt; + ?Sized&gt;(s: &amp;S) -&gt; &amp;Path\n</code></pre>\n\n<p>Adding the elided lifetime gives</p>\n\n<pre><code>pub fn new&lt;S: AsRef&lt;OsStr&gt; + ?Sized&gt;(s: &amp;'a S) -&gt; &amp;'a Path\n</code></pre>\n\n<p>so the newly created <code>Path</code> reference will have the same lifetime as the reference we passed in, which is exactly the required lifetime of the return value.</p>\n"}], "owner": {"reputation": 63, "user_id": 10792324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/906e5dfd36a010991bbe581769290628?s=128&d=identicon&r=PG&f=1", "display_name": "jittrfunc", "link": "https://stackoverflow.com/users/10792324/jittrfunc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "accepted_answer_id": 53785822, "answer_count": 1, "score": 6, "last_activity_date": 1545231207, "creation_date": 1544814372, "last_edit_date": 1545231207, "question_id": 53785538, "link": "https://stackoverflow.com/questions/53785538/how-does-returning-a-reference-to-path-from-the-functions-stack-work", "title": "How does returning a reference to Path from the function&#39;s stack work?", "body": "<p>The following snippet is from rust source code for path.rs</p>\n\n<pre><code>impl AsRef&lt;Path&gt; for String {\n    fn as_ref(&amp;self) -&gt; &amp;Path {\n        Path::new(self)\n    }\n}\n</code></pre>\n\n<p>It seems to be returning a reference of a newly created <code>Path</code> object from the stack frame. How does it bypass Rust's borrow checking rules? A stack object should have a lifetime for the current frame only and returning reference for temporary objects should produce an error.</p>\n"}, {"tags": ["generics", "rust", "dynamic-dispatch"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1544808922, "post_id": 53784370, "comment_id": 94420330, "body": "Your example is missing a lot of useful information. You can&#39;t actually match against a <i>type</i>, in the Rust sense, so what does <code>foo.type()</code> do? What trait or traits do <code>foo.unpack_sometype()</code> and <code>foo.unpack_othertype()</code> have in common that it&#39;s possible for either of them to be passed to <code>action</code>? Please create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> if it is at all possible."}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1544810359, "post_id": 53784370, "comment_id": 94420947, "body": "Not sure, but do you really need <code>Box&lt;T&gt;</code>? Wouldn&#39;t a <code>&amp;T</code> (trait object reference) suffice? Moreover, I guess that <code>dispatch</code> requires that both <code>SomeType</code> and <code>OtherType</code> implement the trait <code>T</code>."}, {"owner": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "edited": false, "score": 0, "creation_date": 1544812815, "post_id": 53784370, "comment_id": 94421938, "body": "The Traits are not relevant. I am asking if there is a way to dispatch to an arbitrary Trait."}, {"owner": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "reply_to_user": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1544812835, "post_id": 53784370, "comment_id": 94421947, "body": "@phimuemue I do not know either. I documented what I have tried."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1544827020, "post_id": 53784370, "comment_id": 94427087, "body": "Let&#39;s see if I can sum this up: You have some type representing packed information with a type tag, e.g. a network packet representation. Depending on the tag, the type can unpack into one of a number of different types. All of those types implement a number of traits. Finally, you want to call various functions that expect trait objects of those traits, by unpacking the struct into the correct type and calling the function with the resulting object. Correct?"}, {"owner": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1544827262, "post_id": 53784370, "comment_id": 94427165, "body": "That would be an excellent start @SebastianRedl. I can work out more from there. Your summary is solid."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544876129, "post_id": 53784370, "comment_id": 94435356, "body": "What is the purpose of the <code>Box</code> in your attempted solution? If the idea is dynamic dispatch, <code>T</code> should be a trait not a type variable."}, {"owner": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545072887, "post_id": 53784370, "comment_id": 94491287, "body": "Thanks for pointing out where I am not being clear. I was too deep in it to see where I was not being more explicit @PeterHall."}], "answers": [{"comments": [{"owner": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "edited": false, "score": 0, "creation_date": 1544835605, "post_id": 53788533, "comment_id": 94428838, "body": "The issue here is that becomes a LONG list of <code>A + B + C ....</code> in the where clause of anything that implements <code>ObjectTrait</code>."}, {"owner": {"reputation": 2080, "user_id": 9604966, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NeWpE.jpg?s=128&g=1", "display_name": "Jere", "link": "https://stackoverflow.com/users/9604966/jere"}, "reply_to_user": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "edited": false, "score": 0, "creation_date": 1544836403, "post_id": 53788533, "comment_id": 94428985, "body": "You&#39;d have to show an example.  I was more envisioning providing different sets of traits for Object2 to implement.  ObjectTrait was just one set.  The idea would not be to put them all together, just the ones that by design go together.  So not A + B + C but One set Of A + B, one of A + C, maybe just B for some.  If you are dispatching you have to have some bounds on what can dispatch."}, {"owner": {"reputation": 2080, "user_id": 9604966, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NeWpE.jpg?s=128&g=1", "display_name": "Jere", "link": "https://stackoverflow.com/users/9604966/jere"}, "reply_to_user": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "edited": false, "score": 0, "creation_date": 1544836878, "post_id": 53788533, "comment_id": 94429068, "body": "for example, you might add another trait ObjectTrait2 { fn example3(&amp;self)} and then implement it:  impl&lt;E: Deref&gt; ObjectTrait2 for Object2&lt;E&gt;{ ...stuff...} then you can dispatch on that for types that implement Deref"}], "tags": [], "owner": {"reputation": 2080, "user_id": 9604966, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NeWpE.jpg?s=128&g=1", "display_name": "Jere", "link": "https://stackoverflow.com/users/9604966/jere"}, "is_accepted": false, "score": 0, "last_activity_date": 1545076217, "last_edit_date": 1545076217, "creation_date": 1544833959, "answer_id": 53788533, "question_id": 53784370, "link": "https://stackoverflow.com/questions/53784370/how-to-implement-a-generic-function-in-rust-which-performs-dynamic-dispatch/53788533#53788533", "title": "How to implement a generic function in Rust which performs dynamic dispatch?", "body": "<p>If you are willing to move away from enumerations, you can use additional traits to dispatch with:</p>\n\n<pre><code>trait ObjectTrait {\n    fn example1(&amp;self);\n    fn example2(&amp;self);\n}\n\nstruct Object2&lt;E&gt; {\n    thing: E,\n}\n\nimpl&lt;E: fmt::Debug + MeaninglessNumeric&gt; ObjectTrait for Object2&lt;E&gt; {\n    fn example1(&amp;self) {\n        println!(\"{:?}\", self.thing);\n    }\n    fn example2(&amp;self) {\n        println!(\"{}\", self.thing.numeric());\n    }\n}\n\nfn example3(o: &amp;ObjectTrait) {\n    o.example1();\n}\nfn example4(o: &amp;ObjectTrait) {\n    o.example2();\n}\n</code></pre>\n\n<p>After that you can adjust your main:</p>\n\n<pre><code>fn main() {\n    let obj1 = OurObject {\n        contains: ContainedType::SomeType,\n    };\n    let obj2 = OurObject {\n        contains: ContainedType::OtherType,\n    };\n    let obj3 = Object2 {\n        thing: AType { value: 5 },\n    };\n    let obj4 = Object2 {\n        thing: BType {\n            contents: \"Hello, World\".to_string(),\n        },\n    };\n\n    example1(obj1);\n    example2(obj2);\n    example3(&amp;obj3);\n    example4(&amp;obj4);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=88901625764571ff0d69258284ffc78a\" rel=\"nofollow noreferrer\">Full playground example</a></p>\n"}], "owner": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 695, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1545231292, "creation_date": 1544808531, "last_edit_date": 1545231292, "question_id": 53784370, "link": "https://stackoverflow.com/questions/53784370/how-to-implement-a-generic-function-in-rust-which-performs-dynamic-dispatch", "title": "How to implement a generic function in Rust which performs dynamic dispatch?", "body": "<p>In a project I am working on there is this object:</p>\n\n<pre><code>enum ContainedType {\n    SomeType,\n    OtherType,\n    ...\n}\nstruct OurObject {\n    contains: ContainedType,\n    ...\n}\n\nimpl OurObject {\n    pub fn unpack_sometype(self) -&gt; AType { ... }\n    pub fn unpack_othertype(self) -&gt; BType { ... }\n    ...\n}\n</code></pre>\n\n<p><code>OurObject</code> is a container of things that are 'packed' in some way.\nEach thing that can be packed implements various traits.</p>\n\n<p>We end with repeated code like:</p>\n\n<pre><code>match foo.type() {\n    SomeType =&gt; action(foo.unpack_sometype()),\n    OtherType =&gt; action(foo.unpack_othertype()),\n    ...\n}\n</code></pre>\n\n<p>I would like to factor out the <code>match</code> code into a function so we can dispatch on an arbitrary trait.</p>\n\n<pre><code>action(foo)\n</code></pre>\n\n<p>However, I run into problems...</p>\n\n<pre><code>pub fn dispatch&lt;T&gt;(obj: OurObject) -&gt; Box&lt;T&gt; {\n    match obj.type() {\n        SomeType =&gt; Box::new(obj.unpack_sometype()),\n        OtherType =&gt; Box::new(obj.unpack_othertype()),\n        ...\n    }\n}\n</code></pre>\n\n<p><code>T</code> here is supposed to stand-in for an arbitrary trait like <code>Debug</code> or <code>SomeLocalTrait</code>.</p>\n\n<p>I have also tried using turbofish like <code>Box::&lt;T&gt;::new()</code> but to no avail. The compiler complains that <code>T</code> does not tell the compiler it is only a trait. There is <code>?Sized</code> but I cannot find a <code>?IAmTrait</code>. The new Rust 2018 <code>impl Trait</code> syntax fails in similar ways.</p>\n\n<p>I have worked around this for now by creating functions with a macro. So I have <code>dispatch_debug</code> or <code>dispatch_cool_trait</code>. Essentially re-implementing the generics interface. Since we want to use this for unrelated traits I cannot use some form of parent trait. <code>Debug</code> or <code>Display</code> is not related to any trait we would create.</p>\n\n<p>Is there a better way? In a perfect world we would have a <code>dispatch</code> function or method which would allow us to say:</p>\n\n<pre><code>action(foo.dispatch&lt;SomeTrait&gt;())\n</code></pre>\n\n<p>This is a sandbox showing a simplified version to start the conversation.\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7b739ab11da15ec793ee46c2d8ac47fc\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7b739ab11da15ec793ee46c2d8ac47fc</a></p>\n"}, {"tags": ["syntax", "rust", "initialization"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1544805384, "creation_date": 1544805384, "answer_id": 53783654, "question_id": 53783516, "link": "https://stackoverflow.com/questions/53783516/how-to-partially-initialize-an-arrayvec/53783654#53783654", "title": "How to partially initialize an ArrayVec?", "body": "<p><code>ArrayVec</code> does not offer a one-step method to do this. Instead, create the <code>ArrayVec</code> and then add values to it, in any of the ways you can add values: </p>\n\n<pre><code>let mut member_two = ArrayVec::new();\nmember_two.extend([1, 2, 3].iter().cloned());\nlet test = Test {\n    member_one: Some(45678),\n    member_two, \n};\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1113, "user_id": 1426842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GU6Z5.jpg?s=128&g=1", "display_name": "Micha\u0142 Fita", "link": "https://stackoverflow.com/users/1426842/micha%c5%82-fita"}, "edited": false, "score": 0, "creation_date": 1546001816, "post_id": 53793771, "comment_id": 94755470, "body": "Looks like serious shortage in ArrayVec, but your suggestion would do."}, {"owner": {"reputation": 1113, "user_id": 1426842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GU6Z5.jpg?s=128&g=1", "display_name": "Micha\u0142 Fita", "link": "https://stackoverflow.com/users/1426842/micha%c5%82-fita"}, "edited": false, "score": 0, "creation_date": 1546421244, "post_id": 53793771, "comment_id": 94844497, "body": "Great, works like a charm - saves me a lot of headache! Happy New Year!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1544881595, "creation_date": 1544881595, "answer_id": 53793771, "question_id": 53783516, "link": "https://stackoverflow.com/questions/53783516/how-to-partially-initialize-an-arrayvec/53793771#53793771", "title": "How to partially initialize an ArrayVec?", "body": "<p>You can collect into an <code>ArrayVec</code> from an iterator:</p>\n\n<pre><code>let mut test = Test {\n    member_one: Some(45678),\n    member_two: [1, 2, 3].iter().cloned().collect(),\n};\n</code></pre>\n"}], "owner": {"reputation": 1113, "user_id": 1426842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GU6Z5.jpg?s=128&g=1", "display_name": "Micha\u0142 Fita", "link": "https://stackoverflow.com/users/1426842/micha%c5%82-fita"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 53793771, "answer_count": 2, "score": 1, "last_activity_date": 1545231376, "creation_date": 1544804865, "last_edit_date": 1545231376, "question_id": 53783516, "link": "https://stackoverflow.com/questions/53783516/how-to-partially-initialize-an-arrayvec", "title": "How to partially initialize an ArrayVec?", "body": "<p>I need structures with fixed maximum size, so the obvious choice seem to be <a href=\"https://docs.rs/arrayvec/0.4.8/arrayvec/\" rel=\"nofollow noreferrer\">arrayvec crate</a>. However, I'm stuck when <code>ArrayVec</code> is a member of a structure that later needs to be partially initialised:</p>\n\n<pre><code>use arrayvec::ArrayVec; // 0.4.7\n\n#[derive(Debug)]\nstruct Test {\n    member_one: Option&lt;u32&gt;,\n    member_two: ArrayVec&lt;[u16; 5]&gt;,\n}\n\npub fn main() {\n    let mut test = Test {\n        member_one: Some(45678),\n        member_two: [1, 2, 3], // &lt;- What to do here to initialise only 3 elements?\n    };\n\n    print!(\"{:?}\", test);\n}\n</code></pre>\n\n<p>I'd like to initialise the first three elements of the <code>ArrayVec</code> as it's perfectly capable of holding any number of elements from zero to 5 (in my example), but I can't figure out how to do it.</p>\n"}, {"tags": ["arrays", "string", "rust", "idioms"], "answers": [{"comments": [{"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "edited": false, "score": 1, "creation_date": 1544819004, "post_id": 53783352, "comment_id": 94424389, "body": "Upvote for your second suggestion, not the first. I think using <code>as_ref</code> as in your second example is the idiomatic way to handle this."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1544805363, "last_edit_date": 1544805363, "creation_date": 1544804196, "answer_id": 53783352, "question_id": 53782350, "link": "https://stackoverflow.com/questions/53782350/idiomatic-way-to-pass-an-array-of-osstr/53783352#53783352", "title": "Idiomatic way to pass an array of `OsStr`", "body": "<p>Since your main complaint with the first version is that it is too verbose, here is an attempt to reduce the verbosity using a macro:</p>\n\n<pre><code>macro_rules! args {\n    ($($a:expr),*) =&gt; { \n        &amp;[\n            $(&lt;AsRef&lt;OsStr&gt;&gt;::as_ref(&amp;$a),)*\n        ]\n    }\n}\n\n\npub fn foo(file: &amp;OsStr) -&gt; Result&lt;Child&gt; {\n    Command::new(\"bar\")\n        .args(args![\"baz\", \"qux\", file])\n        .spawn()\n}\n</code></pre>\n\n<p>I don't know whether this would be \"idiomatic\", but that's mostly a matter of preference in cases like this. I personally wouldn't mind the verbosity too much, but maybe slightly shorten the args list to</p>\n\n<pre><code>&amp;[\"baz\".as_ref(), \"qux\".as_ref(), file]\n</code></pre>\n"}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 53783352, "answer_count": 1, "score": 2, "last_activity_date": 1544805363, "creation_date": 1544800365, "question_id": 53782350, "link": "https://stackoverflow.com/questions/53782350/idiomatic-way-to-pass-an-array-of-osstr", "title": "Idiomatic way to pass an array of `OsStr`", "body": "<p>What is the idiomatic way to pass or represent a <code>&amp;[&amp;OsStr]</code>? This way seems to have a lot of unnecessary text:</p>\n\n<pre><code>fn foo(file: &amp;OsStr) {\n    Command::new(\"bar\")\n        .args(&amp;[OsStr::new(\"baz\"), OsStr::new(\"qux\"), file])\n        .spawn();\n}\n</code></pre>\n\n<p>This way looks cleaner, and is <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.args\" rel=\"nofollow noreferrer\">how it is done in some of the documentation</a>. However, the <code>file.to_str().unwrap()</code> is distracting, and it is strange to convert an <code>OsStr</code> to a <code>str</code> just to convert it back to a <code>OsStr</code>. </p>\n\n<pre><code>fn foo(file: &amp;OsStr) {\n    Command::new(\"bar\")\n        .args(&amp;[\"baz\", \"qux\", file.to_str().unwrap()])\n        .spawn();\n}\n</code></pre>\n\n<p>Is there a third option?</p>\n"}, {"tags": ["stream", "rust", "future"], "answers": [{"comments": [{"owner": {"reputation": 331, "user_id": 1265613, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c39bac819cfd70c70beb9ab30dbe091f?s=128&d=identicon&r=PG", "display_name": "Shishkin Pavel", "link": "https://stackoverflow.com/users/1265613/shishkin-pavel"}, "edited": false, "score": 0, "creation_date": 1544797840, "post_id": 53781588, "comment_id": 94414617, "body": "So there is no such built-in possibility? Ok, thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1544797641, "creation_date": 1544797641, "answer_id": 53781588, "question_id": 53780368, "link": "https://stackoverflow.com/questions/53780368/make-stream-combination-exhaust-once-one-of-its-underlying-streams-are-exhausted/53781588#53781588", "title": "Make stream combination exhaust once one of its underlying streams are exhausted", "body": "<p>Write your own stream combinator:</p>\n\n<pre><code>use futures::{Async, Poll, Stream}; // 0.1.25\n\nstruct WhileBoth&lt;S1, S2&gt;(S1, S2)\nwhere\n    S1: Stream,\n    S2: Stream&lt;Item = S1::Item, Error = S1::Error&gt;;\n\nimpl&lt;S1, S2&gt; Stream for WhileBoth&lt;S1, S2&gt;\nwhere\n    S1: Stream,\n    S2: Stream&lt;Item = S1::Item, Error = S1::Error&gt;,\n{\n    type Item = S1::Item;\n    type Error = S1::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        match self.0.poll() {\n            // Return errors or ready values (including the `None`\n            // that indicates the stream is empty) immediately.\n            r @ Err(_) | r @ Ok(Async::Ready(_)) =&gt; r,\n            // If the first stream is not ready, try the second one.\n            Ok(Async::NotReady) =&gt; self.1.poll(),\n        }\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30540766/155423\">How can I add new methods to Iterator?</a></li>\n</ul>\n"}], "owner": {"reputation": 331, "user_id": 1265613, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c39bac819cfd70c70beb9ab30dbe091f?s=128&d=identicon&r=PG", "display_name": "Shishkin Pavel", "link": "https://stackoverflow.com/users/1265613/shishkin-pavel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 53781588, "answer_count": 1, "score": 1, "last_activity_date": 1544797714, "creation_date": 1544792651, "last_edit_date": 1544797714, "question_id": 53780368, "link": "https://stackoverflow.com/questions/53780368/make-stream-combination-exhaust-once-one-of-its-underlying-streams-are-exhausted", "title": "Make stream combination exhaust once one of its underlying streams are exhausted", "body": "<p>If I want to combine multiple same-typed streams into one, I would use <a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.select\" rel=\"nofollow noreferrer\"><code>Stream::select</code></a>:</p>\n\n<pre><code>let combined = first_stream.select(second_stream)\n</code></pre>\n\n<p>However, once one of the streams is exhausted, the other can still produce results for the combined stream. What can I use to exhaust the combined stream once either of the underlying streams is exhausted?</p>\n"}, {"tags": ["rust", "destructor", "move-semantics", "raii"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1544788745, "post_id": 53778961, "comment_id": 94409773, "body": "<i>&quot;consuming <code>self</code> rather than <code>&amp;mut self</code> (unlike <code>Drop::drop</code>)&quot;</i> I&#39;m afraid that we cannot understand what you are trying to do without a concrete example."}, {"owner": {"reputation": 1081, "user_id": 2178427, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gymYO.png?s=128&g=1", "display_name": "hyperum", "link": "https://stackoverflow.com/users/2178427/hyperum"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1544849179, "post_id": 53778961, "comment_id": 94430618, "body": "@loganfsmyth Linked to the wrong question? That\u2019s the same one as the one I marked mine as duplicate of?"}], "answers": [{"comments": [{"owner": {"reputation": 1081, "user_id": 2178427, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gymYO.png?s=128&g=1", "display_name": "hyperum", "link": "https://stackoverflow.com/users/2178427/hyperum"}, "edited": false, "score": 0, "creation_date": 1544792092, "post_id": 53779358, "comment_id": 94411430, "body": "It compiles and runs the function, but segfaults afterwards in my use case. So, what would you recommmend? Just leave it as an explicit destructor?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 1081, "user_id": 2178427, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gymYO.png?s=128&g=1", "display_name": "hyperum", "link": "https://stackoverflow.com/users/2178427/hyperum"}, "edited": false, "score": 0, "creation_date": 1544792498, "post_id": 53779358, "comment_id": 94411664, "body": "I guess the best recommendation is probably to switch the other destructors to use <code>&amp;mut self</code>, so everything would &quot;just work&quot;. Otherwise, some pieces of the code be helpful to suggest a different solution."}, {"owner": {"reputation": 1081, "user_id": 2178427, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gymYO.png?s=128&g=1", "display_name": "hyperum", "link": "https://stackoverflow.com/users/2178427/hyperum"}, "edited": false, "score": 0, "creation_date": 1544793484, "post_id": 53779358, "comment_id": 94412212, "body": "The struct is intended to wrap some functionality of <code>gfx_hal</code>. Each field of it is destroyed with a corresponding <code>gfx_hal::Backend::destroy_*</code> which moves and consumes the field, so I can&#39;t change it. I&#39;m guessing the best I can do is forgo RAII and write an explicit <code>destroy</code> function that calls <code>gfx_hal</code>&#39;s <code>destroy</code>s?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 1081, "user_id": 2178427, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gymYO.png?s=128&g=1", "display_name": "hyperum", "link": "https://stackoverflow.com/users/2178427/hyperum"}, "edited": false, "score": 0, "creation_date": 1544793790, "post_id": 53779358, "comment_id": 94412366, "body": "And that doesn&#39;t cause a segfault anymore?"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 2, "last_activity_date": 1544790383, "last_edit_date": 1544790383, "creation_date": 1544788763, "answer_id": 53779358, "question_id": 53778961, "link": "https://stackoverflow.com/questions/53778961/is-it-possible-to-drop-and-consume-self-at-the-end-of-scope-at-the-same-time/53779358#53779358", "title": "Is it possible to drop and consume self at the end of scope at the same time?", "body": "<p>This is possible with a combination of a placeholder value, <code>mem::replace</code> and <code>mem::forget</code>:</p>\n\n<pre><code>use std::mem;\n\nstruct Foo;\n\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {\n        let to_drop = mem::replace(self, Foo); // a placeholder with empty/default members\n        to_drop.dropping_function();\n    }\n}\n\nimpl Foo {\n    fn dropping_function(self) {\n        println!(\"dropping Foo!\");\n        // call other destructors here\n        mem::forget(self);\n    }\n}\n\nfn main() {\n    let foo = Foo;\n}  // dropping Foo!\n</code></pre>\n\n<p>Be warned, though (citing the <a href=\"https://doc.rust-lang.org/stable/std/mem/fn.forget.html\" rel=\"nofollow noreferrer\">docs of <code>mem::forget</code></a>):</p>\n\n<blockquote>\n  <p>Takes ownership and \"forgets\" about the value <strong>without running its destructor</strong>.</p>\n</blockquote>\n\n<p>Which means you need to make sure to drop everything containted in <code>Foo</code> yourself.</p>\n"}], "owner": {"reputation": 1081, "user_id": 2178427, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/gymYO.png?s=128&g=1", "display_name": "hyperum", "link": "https://stackoverflow.com/users/2178427/hyperum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 337, "favorite_count": 0, "closed_date": 1544794846, "answer_count": 1, "score": 1, "last_activity_date": 1544790383, "creation_date": 1544787216, "last_edit_date": 1544790051, "question_id": 53778961, "link": "https://stackoverflow.com/questions/53778961/is-it-possible-to-drop-and-consume-self-at-the-end-of-scope-at-the-same-time", "closed_reason": "Duplicate", "title": "Is it possible to drop and consume self at the end of scope at the same time?", "body": "<p>Given a struct, how can a function be written so that it is automatically called at end of scope, consuming <code>self</code> rather than using <code>&amp;mut self</code> (unlike <code>Drop::drop</code>)?</p>\n\n<p>I would like to call other functions within that destructor that will consume each field of the struct, and I would like the destructor to be called automatically.</p>\n"}, {"tags": ["rust", "sfml"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544787805, "post_id": 53778674, "comment_id": 94409286, "body": "Can you swap thoses lines?"}, {"owner": {"reputation": 427, "user_id": 3520890, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/1167498460/picture?type=large", "display_name": "Werem", "link": "https://stackoverflow.com/users/3520890/werem"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544789556, "post_id": 53778674, "comment_id": 94410172, "body": "Hi. Sorry I don\u2019t understand. Swap wich lines and with which purpose? For readability or as a solution?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1544789914, "post_id": 53778674, "comment_id": 94410355, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28418584/how-to-represent-shared-mutable-state\">How to represent shared mutable state?</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1544790071, "post_id": 53778674, "comment_id": 94410445, "body": "As a solution. If you swap the last two lines <code>texture</code> can call it&#39;s mutable function before it&#39;s getting borrowed as immutable a line beforehand."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1544790247, "post_id": 53778674, "comment_id": 94410525, "body": "Tl;dr the duplicate: Use RefCell (or RwLock/Mutex for cross-thread sharing). You might even be able to get away with Cell or Atomics depending on what exactly <code>update</code> needs to do"}, {"owner": {"reputation": 427, "user_id": 3520890, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/1167498460/picture?type=large", "display_name": "Werem", "link": "https://stackoverflow.com/users/3520890/werem"}, "edited": false, "score": 0, "creation_date": 1544790539, "post_id": 53778674, "comment_id": 94410670, "body": "I see. Regarding swapping the lines as a solution, that can be done but it will not work for what I need. Sadly, the code I posted is a simplified version of the real one.  The texture need to be updated inside a loop, swapping between image and image2 in every frame. So even if I use a different image order, it will not work in the next cycle. I&#39;ll test the reference to the duplicated question in a few hours and I&#39;ll post the result. Thanks."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544791653, "post_id": 53778674, "comment_id": 94411176, "body": "@Werem then it is not a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>. Please try to provide one!"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1544792311, "post_id": 53778674, "comment_id": 94411565, "body": "@Werem Maybe you should avoid updating the texture in the loop, Please try: Create 2 textures for 2 images and create empty <code>Sprite(Sprite::new())</code>, set the proper texture in the <code>loop( if ... sprite.setTexture(...) </code>, then draw the sprite."}, {"owner": {"reputation": 427, "user_id": 3520890, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/1167498460/picture?type=large", "display_name": "Werem", "link": "https://stackoverflow.com/users/3520890/werem"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544796050, "post_id": 53778674, "comment_id": 94413621, "body": "@hellow I updated the original post to provide a MCVE."}, {"owner": {"reputation": 427, "user_id": 3520890, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/1167498460/picture?type=large", "display_name": "Werem", "link": "https://stackoverflow.com/users/3520890/werem"}, "edited": false, "score": 0, "creation_date": 1545173467, "post_id": 53778674, "comment_id": 94532639, "body": "recreating the texture worked, but not sure that this is the best solution. This is the code I got working:"}], "owner": {"reputation": 427, "user_id": 3520890, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/1167498460/picture?type=large", "display_name": "Werem", "link": "https://stackoverflow.com/users/3520890/werem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 130, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1545201990, "creation_date": 1544786041, "last_edit_date": 1545201990, "question_id": 53778674, "link": "https://stackoverflow.com/questions/53778674/how-can-i-swap-the-image-underlying-a-sfmltexture", "title": "How can I swap the Image underlying a sfml::Texture?", "body": "<p>I have an object that, in order to be constructed, needs other objects:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[image] -&gt; needed to construct -&gt; [texture] -&gt; needed to construct -&gt; [sprite]\n</code></pre>\n\n<p>The problem is that I need to swap the image in the texture in order to create a visual effect. I have this code:</p>\n\n<pre><code>extern crate sfml;\n\nuse sfml::graphics::{Color, Image, RenderTarget, RenderWindow, Sprite, Texture};\nuse sfml::window::{Event, Key, Style};\n\nconst WIDTH: u32 = 1024;\nconst HEIGHT: u32 = 768;\n\nfn main() {\n    let mut window = RenderWindow::new(\n        (WIDTH, HEIGHT),\n        \"Custom drawable\",\n        Style::CLOSE,\n        &amp;Default::default(),\n    );\n\n    let mut image = Image::from_color(WIDTH, HEIGHT, &amp;Color::BLUE).unwrap();\n    let mut texture = Texture::from_image(&amp;image).unwrap();\n    let sprite_canvas = Sprite::with_texture(&amp;texture);\n\n    let mut x: u32 = 0;\n\n    loop {\n        while let Some(event) = window.poll_event() {\n            match event {\n                Event::Closed\n                | Event::KeyPressed {\n                    code: Key::Escape, ..\n                } =&gt; return,\n                _ =&gt; {}\n            }\n        }\n        x += 1;\n        image.set_pixel(x, x, &amp;Color::YELLOW);\n        texture.update_from_image(&amp;image, 0, 0);\n        window.draw(&amp;sprite_canvas);\n        window.display()\n    }\n}\n</code></pre>\n\n<p>This is the error I have when \"cargo run\" the example</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `texture` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:35:9\n   |\n19 |     let sprite_canvas = Sprite::with_texture(&amp;texture);\n   |                                               ------- immutable borrow occurs here\n...\n35 |         texture.update_from_image(&amp;image, 0, 0);\n   |         ^^^^^^^ mutable borrow occurs here\n...\n39 | }\n   | - immutable borrow ends here\n</code></pre>\n\n<p>Copying or cloning the texture or image should be avoided due to performance considerations; cloning big images can lead to performance degradation.</p>\n\n<p>I made it work with this code, but not sure if it's the best solution, since I'm recreating the texture in every frame.</p>\n\n<pre><code>extern crate sfml;\nuse sfml::graphics::{Color, RenderTarget, RenderWindow, Sprite, Texture, Image, Transformable, Text, Font};\nuse sfml::window::{Event, Key, Style};\n\nconst WIDTH: u32 = 1024;\nconst HEIGHT: u32 = 768;\n\nfn main() {\n    let mut window = RenderWindow::new(\n        (WIDTH, HEIGHT),\n        \"Custom drawable\",\n        Style::CLOSE,\n        &amp;Default::default(),\n    );\n    window.set_vertical_sync_enabled(true);\n\n    let mut image_canvas = Image::from_color(WIDTH, HEIGHT, &amp;Color::BLACK).unwrap();\n\n    let mut x: f32 = 0.0;\n    let mut y: f32 = 0.0;\n    let mut image_swap = false;\n\n    loop {\n        while let Some(event) = window.poll_event() {\n            match event {\n                Event::Closed\n                | Event::KeyPressed {\n                    code: Key::Escape, ..\n                } =&gt; return,\n                _ =&gt; {}\n            }\n        }\n        if Key::Left.is_pressed() {\n            x -= 1.0;\n        }\n\n        if Key::Right.is_pressed() {\n            x += 1.0;\n        }\n\n        if Key::Up.is_pressed() {\n            y -= 1.0;\n        }\n\n        if Key::Down.is_pressed() {\n            y += 1.0;\n        }\n\n        image_canvas.set_pixel(x as u32, y as u32, &amp;Color::YELLOW);\n        let texture_3 = Texture::from_image(&amp;image_canvas).unwrap();\n        let sprite_canvas = Sprite::with_texture(&amp;texture_3);\n\n        image_swap = !image_swap;\n\n        window.clear(&amp;Color::BLACK);\n        window.draw(&amp;sprite_canvas);\n        window.display()\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544784888, "post_id": 53778257, "comment_id": 94407784, "body": "Please run <code>rustfmt</code> next time. Also make sure, that the line number in the error match your actual line numbers in the example."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1544784956, "post_id": 53778257, "comment_id": 94407824, "body": "I see a lot of <code>&lt;&#39;a: &#39;b, &#39;b&gt;</code>. That is redundant and can be replaced by <code>&lt;&#39;a&gt;</code> and replace all <code>&#39;b</code> with <code>&#39;a</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1545259757, "post_id": 53778257, "comment_id": 94568451, "body": "<i>&quot;What I want to achieve looks trivial in language like C++[.]&quot;</i> I doubt it. <a href=\"https://onlinegdb.com/BJQ9UHdlN\" rel=\"nofollow noreferrer\">Here&#39;s the nearest I could get in C++</a> to the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=414e5e99b2735a260001a10f6edfc9e1\" rel=\"nofollow noreferrer\">corrected Rust code</a>. You&#39;re probably thinking of something simpler, which <i>would</i> be easier in C++, but has a little more friction in Rust, like requiring some <code>unsafe { ... }</code> or lots of <code>.clone()</code>s."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1545260414, "post_id": 53778257, "comment_id": 94568646, "body": "(And furthermore, the C++ version is still fragile; <a href=\"https://onlinegdb.com/SJmLjBdxN\" rel=\"nofollow noreferrer\">for example, you could do this</a>. The explicit lifetimes in the Rust version are exactly what make it safe. For the most part, Rust&#39;s lifetimes just formalize rules that also exist in C++ -- they&#39;re just enforced by you instead of by Rust.)"}], "answers": [{"comments": [{"owner": {"reputation": 35, "user_id": 10785407, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4a9700d8abb19d4907d31fe61a33de01?s=128&d=identicon&r=PG&f=1", "display_name": "Haoliang Jiang", "link": "https://stackoverflow.com/users/10785407/haoliang-jiang"}, "edited": false, "score": 0, "creation_date": 1544786058, "post_id": 53778533, "comment_id": 94408398, "body": "Thanks for you suggestion and explanation."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1544787730, "post_id": 53778533, "comment_id": 94409250, "body": "As a rule of thumb: You propably don&#39;t want to use <code>&amp;&#39;a self</code>, most of the time. There are some legit cases, e.g. where the return value of a function depends on <code>self</code> and the compiler can&#39;t figure it out, but normally <code>&amp;self</code> is all you ever want."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 4, "last_activity_date": 1544785518, "creation_date": 1544785518, "answer_id": 53778533, "question_id": 53778257, "link": "https://stackoverflow.com/questions/53778257/where-does-the-problematic-borrow-happen/53778533#53778533", "title": "Where does the problematic borrow happen?", "body": "<blockquote>\n<pre><code>pub trait Flowable&lt;'a: 'b, 'b&gt; {\n    fn flow(&amp;'a self, dest: &amp;mut Dest&lt;'b&gt;);\n}\n</code></pre>\n</blockquote>\n\n<p>The <code>&amp;'a self</code> here is at the core of the problem. It says that the object <code>flow</code> is called on must outlive the lifetime <code>dest</code> is parametrized with.</p>\n\n<p>In <code>main</code>, you do</p>\n\n<pre><code>c.flow(&amp;mut dest);\n</code></pre>\n\n<p>and <code>dest</code> is implicitly parametrized with the lifetime of <code>x2</code>. Since you call <code>flow</code> on <code>c</code>, you imply that <code>c</code> must outlive <code>x2</code>, which it doesn't.</p>\n\n<p>If you remove the <code>'a</code> bound on the self reference in the trait definition and the <code>ContTrait</code> impl, the code compiles.</p>\n"}], "owner": {"reputation": 35, "user_id": 10785407, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4a9700d8abb19d4907d31fe61a33de01?s=128&d=identicon&r=PG&f=1", "display_name": "Haoliang Jiang", "link": "https://stackoverflow.com/users/10785407/haoliang-jiang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 524, "favorite_count": 0, "accepted_answer_id": 53778533, "answer_count": 1, "score": 2, "last_activity_date": 1545231589, "creation_date": 1544784592, "last_edit_date": 1545231589, "question_id": 53778257, "link": "https://stackoverflow.com/questions/53778257/where-does-the-problematic-borrow-happen", "title": "Where does the problematic borrow happen?", "body": "<pre><code>pub struct Dest&lt;'a&gt; {\n    pub data: Option&lt;&amp;'a i32&gt;,\n}\n\npub struct Src&lt;'a&gt; {\n    pub data: Option&lt;&amp;'a i32&gt;,\n}\n\npub trait Flowable&lt;'a: 'b, 'b&gt; {\n    fn flow(&amp;'a self, dest: &amp;mut Dest&lt;'b&gt;);\n}\n\nimpl&lt;'a: 'b, 'b&gt; Flowable&lt;'a, 'b&gt; for Src&lt;'a&gt; {\n    fn flow(&amp;self, dest: &amp;mut Dest&lt;'b&gt;) {\n        dest.data = self.data;\n    }\n}\n\nstruct ContTrait&lt;'a, 'b&gt; {\n    pub list: Vec&lt;Box&lt;Flowable&lt;'a, 'b&gt; + 'a&gt;&gt;,\n}\n\nimpl&lt;'a: 'b, 'b&gt; Flowable&lt;'a, 'b&gt; for ContTrait&lt;'a, 'b&gt; {\n    fn flow(&amp;'a self, dest: &amp;mut Dest&lt;'b&gt;) {\n        for flowable in self.list.iter() {\n            flowable.flow(dest);\n        }\n    }\n}\n\nfn main() {\n    let x1 = 15;\n    let x2 = 20;\n    let mut c = ContTrait { list: Vec::new() };\n\n    let mut dest = Dest { data: Some(&amp;x2) };\n    c.list.push(Box::new(Src { data: Some(&amp;x1) }));\n    c.flow(&amp;mut dest);\n}\n</code></pre>\n\n<p>I'm struggling to implement passing a reference from one struct to another struct. Everytime I progress a little bit, there will be a new block. What I want to achieve looks trivial in language like C++, for type Src, a trait Flowable is defined if certain condition is met, a reference in A will be passed to type Dest. I have played for a while with lifetime specifier to make Rust compiler happy. Now I also implement same trait for type ContTrait which is a collection of Flowable and this ContTrait also implment trait Flowable to iterate every object in it and call flow. This is a simplied case for real world usage.</p>\n\n<p>I just can't figure out why Rust compiler reports</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `c` does not live long enough\n  --&gt; src\\main.rs:38:5\n   |\n38 |   c.flow(&amp;mut dest);\n   |   ^ borrowed value does not live long enough\n39 | }\n   | -\n   | |\n   | `c` dropped here while still borrowed\n   | borrow might be used here, when `c` is dropped and runs the destructor for type `ContTrait&lt;'_, '_&gt;\n</code></pre>\n"}, {"tags": ["macros", "rust", "rust-macros"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1544776232, "post_id": 53775281, "comment_id": 94403016, "body": "@Boiethios That question is itself a duplicate."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1544776283, "post_id": 53775281, "comment_id": 94403041, "body": "@SebastianRedl I know, but I&#39;m not satisfied with the answer you linked: <code>concat_idents</code> is a nightly feature that is not intended to be stabilized. The answer should begin with: &quot;No, because that&#39;s unhygienic&quot;."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1544777495, "post_id": 53775281, "comment_id": 94403622, "body": "How do you want to use that derived identifier? If you want to use it outside the macro, then it is impossible by design). If you want to use it inside the macro, then you probably don&#39;t need to derive it from the existing token, because the macro system ensures that there will be no collisions. Can you show us some code for how you would use a hypothetical <code>derive!</code> operation?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544795932, "post_id": 53775281, "comment_id": 94413550, "body": "The first two duplicates show a workaround by using the mashup crate."}], "answers": [{"comments": [{"owner": {"reputation": 953, "user_id": 608958, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/920c3fee71480a12e35d5084f44d8638?s=128&d=identicon&r=PG", "display_name": "rincewind", "link": "https://stackoverflow.com/users/608958/rincewind"}, "edited": false, "score": 0, "creation_date": 1544773861, "post_id": 53775338, "comment_id": 94402061, "body": "Hmm, sound like a serious deficiency. Is this deliberate?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544795943, "post_id": 53775338, "comment_id": 94413559, "body": "The first two duplicates show a workaround by using the mashup crate."}, {"owner": {"reputation": 953, "user_id": 608958, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/920c3fee71480a12e35d5084f44d8638?s=128&d=identicon&r=PG", "display_name": "rincewind", "link": "https://stackoverflow.com/users/608958/rincewind"}, "edited": false, "score": 0, "creation_date": 1544820530, "post_id": 53775338, "comment_id": 94424923, "body": "Actually, I figured out a possible solution - at least, for my use case. I can create an inner module, named after an identifier, passed into the macro - $id:ident - and then put any number of &quot;derived&quot; types in it. Already tested it, seems to be working."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 0, "last_activity_date": 1544773065, "creation_date": 1544773065, "answer_id": 53775338, "question_id": 53775281, "link": "https://stackoverflow.com/questions/53775281/rust-macros-how-to-create-a-derived-identifier/53775338#53775338", "title": "Rust macros: how to create a derived identifier?", "body": "<p>You can't. It's a limitation of the macro system.</p>\n\n<p>There's a special macro that lets you create an identifier, but you can't use it in useful locations like the name of a new variable.</p>\n"}], "owner": {"reputation": 953, "user_id": 608958, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/920c3fee71480a12e35d5084f44d8638?s=128&d=identicon&r=PG", "display_name": "rincewind", "link": "https://stackoverflow.com/users/608958/rincewind"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 608, "favorite_count": 0, "closed_date": 1544795807, "answer_count": 1, "score": 0, "last_activity_date": 1544795881, "creation_date": 1544772815, "question_id": 53775281, "link": "https://stackoverflow.com/questions/53775281/rust-macros-how-to-create-a-derived-identifier", "closed_reason": "Duplicate", "title": "Rust macros: how to create a derived identifier?", "body": "<p>It looks like for identifiers I can either use an existing token of ident kind, or create a fixed / literal identifier.\nBut how to create a \"derived\" identifier? Meaning, having an existing token $id, I want to create some derived identifier like $id_suffix - exact name doesn't matter, really - as long as it's a new one, and deterministically derived from $id.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1544758877, "post_id": 53773057, "comment_id": 94397992, "body": "<i>I am trying to read</i> \u2014 it&#39;s <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">available online</a> and <a href=\"https://stackoverflow.com/q/27592046/155423\">installed locally when you install Rust</a>; you don&#39;t need to build it yourself."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544759032, "post_id": 53773057, "comment_id": 94398013, "body": "Please take the time to properly format your error messages by copying them directly from your terminal and pasting them as code. The error markers (<code>^^^^</code>) are misaligned, a telltale sign that something has gone awry."}, {"owner": {"reputation": 1539, "user_id": 320546, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df48760ae51273ce62b3b72e188796d8?s=128&d=identicon&r=PG", "display_name": "Tom Parker-Shemilt", "link": "https://stackoverflow.com/users/320546/tom-parker-shemilt"}, "edited": false, "score": 0, "creation_date": 1545942837, "post_id": 53773057, "comment_id": 94739634, "body": "Which version of Rust do you have? Backtrace has <a href=\"https://github.com/alexcrichton/backtrace-rs/issues/141\" rel=\"nofollow noreferrer\">issues with Rust &lt; 1.30</a>"}], "owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1545239687, "creation_date": 1544757524, "last_edit_date": 1545239687, "question_id": 53773057, "link": "https://stackoverflow.com/questions/53773057/mdbook-0-1-7-install-fails-with-errors-when-compiling-the-backtrace-crate", "title": "mdbook 0.1.7 install fails with errors when compiling the backtrace crate", "body": "<p>I am trying to read <em>The Rust Programming Language</em>. I have cloned the repository from GitHub and it says to install <code>mdbook</code> by <code>cargo install mdbook --vers 0.1.7</code>. When I do this, I get error messages from compiling <code>backtrace</code>. What am I doing wrong?</p>\n\n<p>The first error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types    --&gt; /home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.12/src/symbolize/libbacktrace.rs:156:60\n    | \n156 |         STATE = bt::backtrace_create_state(ptr::null(), 0, error_cb,\n    |                                                            ^^^^^^^^ expected enum `std::os::raw::c_void`, found enum `libc::c_void`\n    |\n    = note: expected type `extern \"C\" fn(*mut std::os::raw::c_void, *const i8, i32)`\n               found type `extern \"C\" fn(*mut libc::c_void, *const i8, i32) {symbolize::libbacktrace::error_cb}`\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544742774, "post_id": 53771320, "comment_id": 94394607, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/50999616/155423\">How to alias a crate in Rust 2018 idiomatically?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/53771320/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544742808, "post_id": 53771320, "comment_id": 94394619, "body": "TL;DR, use the <code>package</code> key in your Cargo.toml for one of the dependencies."}, {"owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544743510, "post_id": 53771320, "comment_id": 94394824, "body": "That works! Thanks!"}], "owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 111, "favorite_count": 0, "closed_date": 1544743532, "answer_count": 0, "score": 1, "last_activity_date": 1545240003, "creation_date": 1544742251, "last_edit_date": 1545240003, "question_id": 53771320, "link": "https://stackoverflow.com/questions/53771320/how-can-i-use-the-futures-0-1-and-futures-preview-0-3-crates-at-the-same-time", "closed_reason": "Duplicate", "title": "How can I use the futures 0.1 and futures-preview 0.3 crates at the same time?", "body": "<p>I need to use both <code>futures-preview</code> and <code>futures</code> in my project. My Cargo.toml looks like:</p>\n\n<pre><code>[dependencies]\nfutures-preview = \"= 0.3.0-alpha.7\"\nfutures = \"0.1.25\"\n</code></pre>\n\n<p>Now, in my <code>lib.rs</code>, when I do</p>\n\n<pre><code>extern crate futures;\n</code></pre>\n\n<p>Rust got confused about which futures crate to use. How can I use these two crates that have the same <code>extern crate</code> name at the same time?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling spdk-rs v0.1.0 (/home/zeyuanhu/share/rustfs/spdk-rs)\nerror[E0465]: multiple rlib candidates for `futures` found\n  --&gt; /home/zeyuanhu/share/rustfs/spdk-rs/src/lib.rs:17:1\n   |\n17 | extern crate futures;\n   | ^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: candidate #1: /home/zeyuanhu/share/rustfs/examples/hello_nvme_bdev_rust_wrapper/target/debug/deps/libfutures-ac8c40146fd4a4e0.rlib\n  --&gt; /home/zeyuanhu/share/rustfs/spdk-rs/src/lib.rs:17:1\n   |\n17 | extern crate futures;\n   | ^^^^^^^^^^^^^^^^^^^^^\nnote: candidate #2: /home/zeyuanhu/share/rustfs/examples/hello_nvme_bdev_rust_wrapper/target/debug/deps/libfutures-44db24e7af1a2bd3.rlib\n  --&gt; /home/zeyuanhu/share/rustfs/spdk-rs/src/lib.rs:17:1\n   |\n17 | extern crate futures;\n   | ^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0463]: can't find crate for `futures`\n  --&gt; /home/zeyuanhu/share/rustfs/spdk-rs/src/lib.rs:17:1\n   |\n17 | extern crate futures;\n   | ^^^^^^^^^^^^^^^^^^^^^ can't find crate\n</code></pre>\n"}, {"tags": ["syntax", "rust", "lifetime", "rust-actix"], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1544777961, "post_id": 53771073, "comment_id": 94403833, "body": "You are right about the last point. The <code>+</code> operator in this context combines multiple trait or lifetime bounds. <code>R</code> isn&#39;t a trait bound, but rather a concrete type. <code>FnOnce(...) -&gt; R</code> on the other hand is a trait bound, and <code>&#39;static</code> is a lifetime bound, so the two can be combined with <code>+</code>."}], "tags": [], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "is_accepted": true, "score": 4, "last_activity_date": 1544740669, "creation_date": 1544740669, "answer_id": 53771073, "question_id": 53770884, "link": "https://stackoverflow.com/questions/53770884/what-does-the-r-static-syntax-mean-in-f-fnoncemut-resources-r/53771073#53771073", "title": "What does the &quot;R + &#39;static&quot; syntax mean in &quot;F: FnOnce(&amp;mut Resource&lt;S&gt;) -&gt; R + &#39;static&quot;?", "body": "<p><code>R</code> is the return value of <code>f</code>. </p>\n\n<p>If you look inside the <code>actix-web</code> <a href=\"https://actix.rs/actix-web/src/actix_web/application.rs.html#345\" rel=\"nofollow noreferrer\">source</a>, you can see that this value is discarded/not used. I think this is mostly a convenience thing; rather than specifying a <code>()</code> return value, actix is making it easy by not caring what you return from your <code>f</code>.</p>\n\n<p>I believe the <code>'static</code> lifetime should be read as applying to the <code>F</code> rather than the <code>R</code>. That is, the <code>f</code> (usually a closure) should have a static lifetime.</p>\n"}], "owner": {"reputation": 563, "user_id": 10714010, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d1de8ea4503b597aab9c31e5654c197?s=128&d=identicon&r=PG&f=1", "display_name": "user10714010", "link": "https://stackoverflow.com/users/10714010/user10714010"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 53771073, "answer_count": 1, "score": 2, "last_activity_date": 1545240169, "creation_date": 1544739536, "last_edit_date": 1545240169, "question_id": 53770884, "link": "https://stackoverflow.com/questions/53770884/what-does-the-r-static-syntax-mean-in-f-fnoncemut-resources-r", "title": "What does the &quot;R + &#39;static&quot; syntax mean in &quot;F: FnOnce(&amp;mut Resource&lt;S&gt;) -&gt; R + &#39;static&quot;?", "body": "<p>I am trying to understand the <a href=\"https://actix.rs/actix-web/actix_web/struct.App.html\" rel=\"nofollow noreferrer\">following code in actix-web</a></p>\n\n<pre><code>pub fn resource&lt;F, R&gt;(self, path: &amp;str, f: F) -&gt; App&lt;S&gt;\nwhere\n    F: FnOnce(&amp;mut Resource&lt;S&gt;) -&gt; R + 'static,\n</code></pre>\n\n<p>From my understanding, <code>resource</code> is a function that takes 2 parameters: a string slice and a function.</p>\n\n<p>The function can be used only once and accepts a mutable reference of <code>Resource</code> with <code>S</code> inside and returns <code>R</code> for which <code>R</code> and <code>S</code> is completely arbitrary.</p>\n\n<p>What is <code>R + static</code>?</p>\n"}, {"tags": ["syntax", "reference", "rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1544731551, "post_id": 53769176, "comment_id": 94390411, "body": "<code>&amp;MyTrait&lt;T&gt;</code> is the old way to write <code>&amp;dyn MyTrait&lt;T&gt;</code>. See <a href=\"https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type\">What does &quot;dyn&quot; mean in a type?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1120, "user_id": 3502581, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/43bd530a9058adc4f47965c997400f83?s=128&d=identicon&r=PG&f=1", "display_name": "Quintana", "link": "https://stackoverflow.com/users/3502581/quintana"}, "edited": false, "score": 0, "creation_date": 1544737089, "post_id": 53769360, "comment_id": 94392733, "body": "Thank you, this is a useful bit of information (+1) to making the choice I was considering. However, as @Sven Marnach&#39;s answer is more covering, I will accept that one."}], "tags": [], "owner": {"reputation": 10246, "user_id": 762363, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cec6320f5a5a8253b3dbfbb8177e001?s=128&d=identicon&r=PG", "display_name": "Tarmil", "link": "https://stackoverflow.com/users/762363/tarmil"}, "is_accepted": false, "score": 1, "last_activity_date": 1544731784, "creation_date": 1544731784, "answer_id": 53769360, "question_id": 53769176, "link": "https://stackoverflow.com/questions/53769176/what-is-the-difference-between-trait-and-impl-trait-when-used-as-method-argumen/53769360#53769360", "title": "What is the difference between &amp;Trait and impl Trait when used as method arguments?", "body": "<p>It is indeed different. The <code>impl</code> version is equivalent to the following:</p>\n\n<pre><code>fn confirm&lt;T, M: MyTrait&lt;T&gt;&gt;(subject: M) ...\n</code></pre>\n\n<p>so unlike the first version, <code>subject</code> is moved (passed by value) into <code>confirm</code>, rather than passed by reference. So in the <code>impl</code> version, <code>confirm</code> takes ownership of this value.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1544732300, "post_id": 53769384, "comment_id": 94390743, "body": "commenting just to link to <a href=\"https://stackoverflow.com/questions/27567849/what-makes-something-a-trait-object\">What makes something a trait object?</a>"}, {"owner": {"reputation": 1120, "user_id": 3502581, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/43bd530a9058adc4f47965c997400f83?s=128&d=identicon&r=PG&f=1", "display_name": "Quintana", "link": "https://stackoverflow.com/users/3502581/quintana"}, "edited": false, "score": 0, "creation_date": 1544737346, "post_id": 53769384, "comment_id": 94392852, "body": "@Sven Marnach in that case, I presume that the compiler (which now knows the type at compile-time) is happy with any size implementer. But in that case, is there any requirement to use <code>&amp;impl ...</code> rather than just <code>impl</code>, except for performance/stack-copy reasons? For example, supposing I implemented <code>MyTrait&lt;T&gt;</code> for <code>()</code>? (I did something like this in test, and the result is a surprising lot of <code>&amp;()</code> being thrown around, which led to my original suspicions)."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 1120, "user_id": 3502581, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/43bd530a9058adc4f47965c997400f83?s=128&d=identicon&r=PG&f=1", "display_name": "Quintana", "link": "https://stackoverflow.com/users/3502581/quintana"}, "edited": false, "score": 0, "creation_date": 1544737967, "post_id": 53769384, "comment_id": 94393084, "body": "@Quintana If the type is small and <code>Copy</code>, there is no reason to use a reference. If the type is not <code>Copy</code>, passing the object by value will <i>consume</i> it, so you can&#39;t use it anymore \u2013 it is moved into the function and dropped at the end of the function."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 16, "last_activity_date": 1544734079, "last_edit_date": 1544734079, "creation_date": 1544731909, "answer_id": 53769384, "question_id": 53769176, "link": "https://stackoverflow.com/questions/53769176/what-is-the-difference-between-trait-and-impl-trait-when-used-as-method-argumen/53769384#53769384", "title": "What is the difference between &amp;Trait and impl Trait when used as method arguments?", "body": "<p>The two are different, and serve different purposes. Both are useful, and depending on circumstances one or the other may be the best choice.</p>\n\n<p>The first case, <code>&amp;MyTrait&lt;T&gt;</code>, is preferably written <code>&amp;dyn MyTrait&lt;T&gt;</code> in modern Rust. It is a so-called <em>trait object</em>. The reference points to any type implementing <code>MyTrait&lt;T&gt;</code>, and method calls are dispatched dynamically at runtime. To make this possible, the reference is actually a fat pointer; apart from a pointer to the object it also stores a pointer to the virtual method table of the type of the object, to allow dynamic dispatch. If the actual type of your object only becomes known at runtime, this is the only version you can use, since you need to use dynamic dispatch in that case. The downside of the approach is that there is a runtime cost, and that it only works for traits that are <a href=\"https://doc.rust-lang.org/nightly/book/ch17-02-trait-objects.html#object-safety-is-required-for-trait-objects\" rel=\"noreferrer\">object-safe</a>.</p>\n\n<p>The second case, <code>impl MyTrait&lt;T&gt;</code>, denotes any type implementing <code>MyTrait&lt;T&gt;</code> again, but in this case the exact type needs to be known at compile time. The prototype</p>\n\n<pre><code>fn confirm&lt;T&gt;(subject: impl MyTrait&lt;T&gt;);\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>fn confirm&lt;M, T&gt;(subject: M)\nwhere\n    M: MyTrait&lt;T&gt;;\n</code></pre>\n\n<p>For each type <code>M</code> that is used in your code, the compiler creates a separate version of <code>confim</code> in the binary, and method calls are dispatched statically at compile time. This version is preferable if all types are known at compile time, since you don't need to pay the runtime cost of dynamically dispatching to the concrete types.</p>\n\n<p>Another difference between the two prototypes is that the first version accepts <code>subject</code> by reference, while the second version consumes the argument that is passed in. This isn't a conceptual difference, though \u2013 while the first version cannot be written to consume the object, the second version can easily be written to accept <code>subject</code> by reference:</p>\n\n<pre><code>fn confirm&lt;T&gt;(subject: &amp;impl MyTrait&lt;T&gt;);\n</code></pre>\n\n<p>Given that you introduced the traits to facilitate testing, it is likely that you should prefer <code>&amp;impl MyTrait&lt;T&gt;</code>.</p>\n"}], "owner": {"reputation": 1120, "user_id": 3502581, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/43bd530a9058adc4f47965c997400f83?s=128&d=identicon&r=PG&f=1", "display_name": "Quintana", "link": "https://stackoverflow.com/users/3502581/quintana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1205, "favorite_count": 1, "accepted_answer_id": 53769384, "answer_count": 2, "score": 9, "last_activity_date": 1544742983, "creation_date": 1544730887, "last_edit_date": 1544742983, "question_id": 53769176, "link": "https://stackoverflow.com/questions/53769176/what-is-the-difference-between-trait-and-impl-trait-when-used-as-method-argumen", "title": "What is the difference between &amp;Trait and impl Trait when used as method arguments?", "body": "<p>In my project so far, I use many traits to permit mocking/stubbing in unit tests for injected dependencies. However, one detail of what I'm doing so far seems so suspicious that I'm surprised it even compiles. I'm worried that something dangerous is going on that I don't see or understand. It's based on the difference between these two method signatures:</p>\n\n<pre><code>fn confirm&lt;T&gt;(subject: &amp;MyTrait&lt;T&gt;) ...\nfn confirm&lt;T&gt;(subject: impl MyTrait&lt;T&gt;) ...\n</code></pre>\n\n<p>I only just discovered the <code>impl ...</code> syntax in method arguments, and it seems like the only documented way to do this, but my tests pass using the other way already, which I came to by intuition based on how Go solves the same problem (size of method argument at compile time, when argument can be any implementer of an interface, and references can come to the rescue).</p>\n\n<p>What is the difference between these two? And why are they both allowed? Do they both represent legitimate use cases, or is my reference syntax (<code>&amp;MyTrait&lt;T&gt;</code>) strictly a worse idea?</p>\n"}, {"tags": ["eclipse", "rust", "rls"], "comments": [{"owner": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "edited": false, "score": 0, "creation_date": 1544739768, "post_id": 53767350, "comment_id": 94393641, "body": "Please upgrade from Photon to 2018-09 (improvements have been made in this area). What are your exact settings in <i>Window &gt; Preferences: Rust</i>? I guess, the location for RLS must set to something like <code>~&#47;.rustup&#47;toolchains&#47;&lt;toolchain&gt;&#47;bin&#47;rls</code> (see <a href=\"https://stackoverflow.com/a/52925073/6505250\">my answer here for Windows</a>)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1545240543, "post_id": 53767350, "comment_id": 94560588, "body": "The deleted answer was linking to <a href=\"https://github.com/eclipse/corrosion/issues/186\" rel=\"nofollow noreferrer\">this github issue</a>, which does look relevant. The final comment includes workaround steps."}, {"owner": {"reputation": 1538, "user_id": 1046184, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/49c6adaf420d8003e9c2e568f211f7ae?s=128&d=identicon&r=PG", "display_name": "Factor Three", "link": "https://stackoverflow.com/users/1046184/factor-three"}, "edited": false, "score": 1, "creation_date": 1551861943, "post_id": 53767350, "comment_id": 96791379, "body": "This problem continues to exist in the 2018-09 version. The IDE keeps looking for a rls.conf file that does not exist and keeps prompting the user to specify one. In other words, this bug has never been fixed."}, {"owner": {"reputation": 2429, "user_id": 1098603, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/sb0id.png?s=128&g=1", "display_name": "Matthieu", "link": "https://stackoverflow.com/users/1098603/matthieu"}, "reply_to_user": {"reputation": 1538, "user_id": 1046184, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/49c6adaf420d8003e9c2e568f211f7ae?s=128&d=identicon&r=PG", "display_name": "Factor Three", "link": "https://stackoverflow.com/users/1046184/factor-three"}, "edited": false, "score": 0, "creation_date": 1592208252, "post_id": 53767350, "comment_id": 110331451, "body": "@FactorThree ... and also in the 2020-03 version :("}], "answers": [{"tags": [], "owner": {"reputation": 2429, "user_id": 1098603, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/sb0id.png?s=128&g=1", "display_name": "Matthieu", "link": "https://stackoverflow.com/users/1098603/matthieu"}, "is_accepted": false, "score": 4, "last_activity_date": 1592208553, "creation_date": 1592208553, "answer_id": 62383985, "question_id": 53767350, "link": "https://stackoverflow.com/questions/53767350/eclipse-rls-configuration-file-missing/62383985#62383985", "title": "Eclipse RLS Configuration file missing?", "body": "<p>Now in June 2020, the bug still shows in Eclipse 2020-03. I'll copy-paste the <a href=\"https://github.com/eclipse/corrosion/issues/186#issuecomment-532515836\" rel=\"nofollow noreferrer\">GitHub comment</a> that made it work:</p>\n\n<pre><code>rustup component add rls\n</code></pre>\n\n<p>Restart Eclipse and you're good to go.</p>\n"}, {"tags": [], "owner": {"reputation": 1576, "user_id": 1510660, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb426e7504d5a1e6be404faf86a693b6?s=128&d=identicon&r=PG&f=1", "display_name": "Emilio", "link": "https://stackoverflow.com/users/1510660/emilio"}, "is_accepted": false, "score": 0, "last_activity_date": 1617190211, "creation_date": 1617190211, "answer_id": 66887009, "question_id": 53767350, "link": "https://stackoverflow.com/questions/53767350/eclipse-rls-configuration-file-missing/66887009#66887009", "title": "Eclipse RLS Configuration file missing?", "body": "<p>In the latest Corrosion plugin version to date (1.20) there is a new option right below the error messages to download and install cargo, rustup and rust-analyzer to prevent this from happening again.</p>\n"}], "owner": {"reputation": 68, "user_id": 7396951, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZX3aA.png?s=128&g=1", "display_name": "dragonFire", "link": "https://stackoverflow.com/users/7396951/dragonfire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1116, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1617190211, "creation_date": 1544722760, "last_edit_date": 1544725759, "question_id": 53767350, "link": "https://stackoverflow.com/questions/53767350/eclipse-rls-configuration-file-missing", "title": "Eclipse RLS Configuration file missing?", "body": "<p>I have installed Eclipse for Rust and would like to use it for development. However, the content assist by RLS (such as code completion and highlighting) doesn\u2019t work. RLS can't seem to find <code>racer</code> or <code>rustc</code>.</p>\n\n<p>As I was looking at the settings for Rust (Window > Preferences > Rust), I noticed that the RLS config is pointing to a nonexistent file at ~/.cargo/rls.conf. Is this a problem? If so, how do I fix it? If not, what steps can I take to troubleshoot RLS?</p>\n\n<p>I am currently using Ubuntu 18.04 and Eclipse Photon.</p>\n"}, {"tags": ["arrays", "rust", "mutable"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1544714085, "post_id": 53764656, "comment_id": 94381541, "body": "The easiest solution is to use interior mutability, <code>Vec&lt;RefCell&lt;Server&gt;&gt;</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544714316, "post_id": 53764656, "comment_id": 94381692, "body": "As a sidenote: Idiomatic rust does not use <code>return</code> as last statement (<code>return Server { time: x }</code>), but instead just write <code>Server { time: x }</code> (as you can see in my playground example)."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1544715591, "post_id": 53764656, "comment_id": 94382576, "body": "If you care about speed, do this manually and potentially in-place."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1544716531, "post_id": 53764656, "comment_id": 94383154, "body": "@Veedrac &quot;in-place&quot; doesn&#39;t make any sense in this context, because you need a second <code>vec</code> for storing the other elements. (Just a curious question: are you familar with rust?). Also the implementation of <a href=\"https://doc.rust-lang.org/src/core/iter/iterator.rs.html#1500-1517\" rel=\"nofollow noreferrer\"><code>partition</code></a> is very straight forward and would be the easiest to implement solution without using fancy <code>unsafe</code> stuff."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544739362, "post_id": 53764656, "comment_id": 94393514, "body": "@hellow You can partition in place and then work over subslices of your vector. Like <a href=\"https://docs.rs/itertools/0.8.0/itertools/fn.partition.html\" rel=\"nofollow noreferrer\"><code>itertools::partition</code></a> but a 3-way partition. <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.swap\" rel=\"nofollow noreferrer\"><code>[T]::swap</code></a> makes it possible to partition efficiently with safe code. Yes I am familiar with Rust."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544714776, "post_id": 53764891, "comment_id": 94381999, "body": "As a note to the code: I would suggest using the <a href=\"https://doc.rust-lang.org/std/macro.vec.html\" rel=\"nofollow noreferrer\"><code>vec!</code></a> macro, instead of the tedious <code>push</code>, e.g. <code>let arr = vec![Server::new(10), Server::new(20), Server::new(30), Server::new(40), Server::new(50)];</code>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1544773022, "post_id": 53764891, "comment_id": 94401745, "body": "Note however that this answer moves the items into the iterators, so it doesn&#39;t cover the last part of the question: <i>these changes should be reflected in the elements of the main array.</i>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1544773278, "post_id": 53764891, "comment_id": 94401848, "body": "@Jmb you&#39;re right, but I&#39;m afraid apart from using <code>RefCells</code> and a simple <code>filter</code> this isn&#39;t possible. My solution shows the (IMHO) best solution how to deal with this problem. To reflect the changes to the &#39;main array&#39; I would just collect all three arrays into one again."}, {"owner": {"reputation": 171, "user_id": 6707172, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-_-oJ4-GxV-Q/AAAAAAAAAAI/AAAAAAAAIeI/nKtIUIyXOs0/photo.jpg?sz=128", "display_name": "Dark Hell", "link": "https://stackoverflow.com/users/6707172/dark-hell"}, "edited": false, "score": 0, "creation_date": 1544775019, "post_id": 53764891, "comment_id": 94402507, "body": "@hellow I think this decision is wrong: <i>To reflect the changes to the &#39;main array&#39; I would just collect all three arrays into one again</i>. Because i wrote that each subarray can be sorted. Maybe the only right way is to use <code>RefCells</code> and <code>filter</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1544776672, "post_id": 53764891, "comment_id": 94403226, "body": "<code>let mut arr: Vec&lt;_&gt; = vec![10, 20, 30, 40, 50].into_iter().map(Server::new).collect();</code> is cool too."}, {"owner": {"reputation": 171, "user_id": 6707172, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-_-oJ4-GxV-Q/AAAAAAAAAAI/AAAAAAAAIeI/nKtIUIyXOs0/photo.jpg?sz=128", "display_name": "Dark Hell", "link": "https://stackoverflow.com/users/6707172/dark-hell"}, "edited": false, "score": 0, "creation_date": 1544782197, "post_id": 53764891, "comment_id": 94406286, "body": "@hellow, I solved the problem. I used <code>RefCell</code> and <code>borrow &#39;system&#39;</code>. (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c63b80a44b77b533d7bb9c609928e5ae\" rel=\"nofollow noreferrer\">playground</a>). Thanks to everyone."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1544717200, "last_edit_date": 1544717200, "creation_date": 1544714168, "answer_id": 53764891, "question_id": 53764656, "link": "https://stackoverflow.com/questions/53764656/how-divide-the-mutable-array-into-mutable-subarrays/53764891#53764891", "title": "How divide the mutable array into mutable subarrays", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.partition\" rel=\"nofollow noreferrer\"><code>Iterator::partition</code></a> to split up your <code>vec</code> into two distinct <code>vec</code>s without cloning the inner elements.\nBecause you want three different splits, you have to use <code>partition</code> twice (the order doesn't matter).</p>\n\n<pre><code>const THRESHOLD: i64 = 20;\n\nlet mut arr = Vec::&lt;Server&gt;::new();\narr.push(Server::new(10));\narr.push(Server::new(20));\narr.push(Server::new(30));\narr.push(Server::new(40));\narr.push(Server::new(50));\n\nlet (greater, rest): (Vec&lt;_&gt;, Vec&lt;_&gt;) = arr.into_iter().partition(|s| s.time &gt; THRESHOLD);\nlet (equal, less): (Vec&lt;_&gt;, Vec&lt;_&gt;) = rest.into_iter().partition(|s| s.time == THRESHOLD);\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ec7b0f1bc5c99d46e073603a8f8a1573\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>Because the Vectors <code>greater</code>, <code>equal</code> and <code>less</code> own the corresponding elements, you have mutable access to them.</p>\n"}], "owner": {"reputation": 171, "user_id": 6707172, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-_-oJ4-GxV-Q/AAAAAAAAAAI/AAAAAAAAIeI/nKtIUIyXOs0/photo.jpg?sz=128", "display_name": "Dark Hell", "link": "https://stackoverflow.com/users/6707172/dark-hell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 436, "favorite_count": 0, "accepted_answer_id": 53764891, "answer_count": 1, "score": 3, "last_activity_date": 1545240624, "creation_date": 1544713280, "last_edit_date": 1545240624, "question_id": 53764656, "link": "https://stackoverflow.com/questions/53764656/how-divide-the-mutable-array-into-mutable-subarrays", "title": "How divide the mutable array into mutable subarrays", "body": "<p>I need to divide the mutablearray into 3 mutablesubarrays with mutable elements.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Server {\n    time: i64\n}\n\n\nimpl Server {\n    fn new(x: i64) -&gt; Server {\n        return Server {\n            time: x\n        }\n    } \n}\n\nfn main() {\n      let mut arr = Vec::&lt;Server&gt;::new();\n      arr.push(Server::new(10));\n      arr.push(Server::new(20));\n      arr.push(Server::new(30));\n      arr.push(Server::new(40));\n      arr.push(Server::new(50));\n\n      let mut arr1 = arr.iter_mut().filter(|x| x.time &gt; 20).collect::&lt;Vec&lt;&amp;mut Server&gt;&gt;();\n      let mut arr2 = arr.iter_mut().filter(|x| x.time &lt; 20).collect::&lt;Vec&lt;&amp;mut Server&gt;&gt;();\n      let mut arr3 = arr.iter_mut().filter(|x| x.time == 20).collect::&lt;Vec&lt;&amp;mut Server&gt;&gt;();\n}\n</code></pre>\n\n<p>Next, over each subarray to carry out different manipulations that do not affect the main array. (For example, each subarray is first sorted without affecting the order of the main array. The next step is to manipulate its elements over each subarray. And these changes should be reflected in the elements of the main array).</p>\n\n<p>At the moment, when dividing the array Rust when compiling, it gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `arr` as mutable more than once at a time\n  --&gt; src/main.rs:26:18\n   |\n25 |   let mut arr1 = arr.iter_mut().filter(|x| x.time &gt; 20).collect::&lt;Vec&lt;&amp;mut Server&gt;&gt;();\n   |                  --- first mutable borrow occurs here\n26 |   let mut arr2 = arr.iter_mut().filter(|x| x.time &lt; 20).collect::&lt;Vec&lt;&amp;mut Server&gt;&gt;();\n   |                  ^^^ second mutable borrow occurs here\n ...\n29 | }\n   | - first borrow ends here\nerror[E0499]: cannot borrow `arr` as mutable more than once at a time\n  --&gt; src/main.rs:27:18\n   |\n25 |   let mut arr1 = arr.iter_mut().filter(|x| x.time &gt; 20).collect::&lt;Vec&lt;&amp;mut Server&gt;&gt;();\n   |                  --- first mutable borrow occurs here\n26 |   let mut arr2 = arr.iter_mut().filter(|x| x.time &lt; 20).collect::&lt;Vec&lt;&amp;mut Server&gt;&gt;();\n27 |   let mut arr3 = arr.iter_mut().filter(|x| x.time == 20).collect::&lt;Vec&lt;&amp;mut Server&gt;&gt;();\n   |                  ^^^ second mutable borrow occurs here\n28 |   \n29 | }\n   | - first borrow ends here\n</code></pre>\n"}, {"tags": ["rust", "lifetime", "trait-objects"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544706234, "post_id": 53762078, "comment_id": 94376626, "body": "<code>Box&lt;Trait&gt;</code> is equivalent to <code>Box&lt;Trait + &#39;static&gt;</code>. If you want some other lifetime, you need to be explicit and use <code>Box&lt;Trait + &#39;a&gt;</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544706807, "post_id": 53762078, "comment_id": 94376955, "body": "(Not sure whether this qualifies as a duplicate, but the answer covers the important points to note here.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544743248, "post_id": 53762078, "comment_id": 94394758, "body": "Based on your error messages, you are still using Rust 2015. You are encouraged to <a href=\"https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html\" rel=\"nofollow noreferrer\">switch to Rust 2018</a>, which provides a better error message here."}], "owner": {"reputation": 35, "user_id": 10785407, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4a9700d8abb19d4907d31fe61a33de01?s=128&d=identicon&r=PG&f=1", "display_name": "Haoliang Jiang", "link": "https://stackoverflow.com/users/10785407/haoliang-jiang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 65, "favorite_count": 0, "closed_date": 1544743071, "answer_count": 0, "score": 1, "last_activity_date": 1545241113, "creation_date": 1544704860, "last_edit_date": 1545241113, "question_id": 53762078, "link": "https://stackoverflow.com/questions/53762078/confused-by-lifetime-of-boxtrait-in-struct", "closed_reason": "Duplicate", "title": "Confused by lifetime of Box&lt;Trait&gt; in struct", "body": "<pre><code>struct Wrap&lt;'a&gt; {\n    pub data: Option&lt;&amp;'a i32&gt;,\n}\n\npub trait Boxable {\n    fn get_data(&amp;self) -&gt; Option&lt;&amp;i32&gt;;\n}\n\nimpl&lt;'a&gt; Boxable for Wrap&lt;'a&gt; {\n    fn get_data(&amp;self) -&gt; Option&lt;&amp;i32&gt; {\n        self.data\n    }\n}\n\nstruct ContTrait {\n    pub vbox: Box&lt;Boxable&gt;,\n}\n\nstruct ContWrap&lt;'a&gt; {\n    pub vbox: Box&lt;Wrap&lt;'a&gt;&gt;,\n}\n\nfn main() {\n    let x1 = 15;\n\n    let bt = Box::new(Wrap { data: Some(&amp;x1) });\n    // let mut c = ContTrait { vbox: Box::new(Wrap {data : Some(&amp;x1)}) };\n    let mut c2 = ContWrap {\n        vbox: Box::new(Wrap { data: Some(&amp;x1) }),\n    };\n}\n</code></pre>\n\n<p>I can't justify why only the commented line can't be compiled and thinks <code>x1</code>'s lifetime is not long enough. It seems <code>c2</code> is equivalent to it, except the <code>Box</code> is for the <code>Wrap</code> struct directly. <code>bt</code> just removes one layer of struct. I can't figure out what makes <code>ContTrait</code> behave so differently.</p>\n\n<p>Here's the error message when uncommenting the <code>ContTrait</code> line:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `x1` does not live long enough\n  --&gt; src/main.rs:27:63\n   |\n27 |     let mut c = ContTrait { vbox: Box::new(Wrap {data : Some(&amp;x1)}) };\n   |                                                               ^^ borrowed value does not live long enough\n...\n31 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=release&amp;edition=2015&amp;gist=4e6e28ab1804cece6dc29109a385dd65\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["syntax", "rust", "pattern-matching"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1544694890, "post_id": 53758697, "comment_id": 94370272, "body": "I don&#39;t understand how this makes any difference. Now you can simply use <code>f</code> instead of <code>e</code>, and remove all the <code>@</code> bindings. Am I missing anything?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1544695040, "post_id": 53758697, "comment_id": 94370341, "body": "Maybe you&#39;re just right and I should use <code>f</code> instead... :/"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 3, "creation_date": 1544695778, "post_id": 53758697, "comment_id": 94370781, "body": "Nested &#39;OR&#39; patterns will be possible eventually: <a href=\"https://github.com/rust-lang/rust/issues/54883\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/54883</a>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 4, "creation_date": 1544696244, "post_id": 53758697, "comment_id": 94371068, "body": "@JoeClay Thanks for the pointer! The <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2535-or-patterns.md#guide-level-explanation\" rel=\"nofollow noreferrer\">corresponding RFC</a> makes clear that <code>foo @ (1 | 2 | 3)</code> will be possible as well \u2013 for subpatterns this is actually useful."}], "answers": [{"tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 4, "last_activity_date": 1544704711, "creation_date": 1544704711, "answer_id": 53762040, "question_id": 53758697, "link": "https://stackoverflow.com/questions/53758697/is-there-a-simpler-way-to-bind-the-entire-match-when-using-multiple-matches/53762040#53762040", "title": "Is there a simpler way to bind the entire match when using multiple matches?", "body": "<p>If you want to continue to use pattern matching, it isn't currently possible to avoid repeating the binding. However, once <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2535-or-patterns.md\" rel=\"nofollow noreferrer\">RFC 2535</a> gets implemented you will be able to nest 'OR' patterns like so:</p>\n\n<pre><code>fn bar(f: Foo) {\n    match f {\n        e @ (Foo::First | Foo::Second | Foo::Fourth) =&gt; println!(\"{:?}\", e),\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p>The tracking issue for the implementation is here: <a href=\"https://github.com/rust-lang/rust/issues/54883\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/54883</a></p>\n"}], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 53762040, "answer_count": 1, "score": 5, "last_activity_date": 1545241156, "creation_date": 1544693426, "last_edit_date": 1545241156, "question_id": 53758697, "link": "https://stackoverflow.com/questions/53758697/is-there-a-simpler-way-to-bind-the-entire-match-when-using-multiple-matches", "title": "Is there a simpler way to bind the entire match when using multiple matches?", "body": "<p>Binding a variable to a match expression can be done by using <code>@</code> and a variable name, like:</p>\n\n<pre><code>#[derive(Debug)]\nenum Foo {\n    First,\n    Second,\n    Third,\n    Fourth,\n}\n\nfn bar(f: Foo) {\n    match f {\n        e @ Foo::First =&gt; println!(\"{:?}\", e),\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p>If you want to bind <code>e</code> to multiple matches, you have to repeat the binding on every possibility.</p>\n\n<pre><code>fn bar(f: Foo) {\n    match f {\n        e @ Foo::First | e @ Foo::Second | e @ Foo::Fourth =&gt; println!(\"{:?}\", e),\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p>Is there a simpler way of doing it?</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1544682998, "post_id": 53755578, "comment_id": 94364739, "body": "If it is the same problem, I&#39;m not quite sure how. That question has to do with storing multiple closures in a Vec, which requires boxing. I&#39;m just trying to store a single closure on a struct."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1544683805, "post_id": 53755578, "comment_id": 94365046, "body": "Ah ok I think I understand. When I create the Struct, it infers the type and sets it to the closure used there, verifying only that it satisfies the trait constraints. When I try and set it to a different closure later the type is different, regardless of the fact the new one also satisfies the constraints."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 2, "creation_date": 1544685390, "post_id": 53755578, "comment_id": 94365672, "body": "Right. Also adding, this is more of a general problem and not just related to <code>Fn*</code> trait types. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=25c2adc1baa293948b7d3e940c93e245\" rel=\"nofollow noreferrer\">This</a> cousin is easy to understand  what&#39;s wrong. With <code>Fn*</code>types, though they they &quot;seem&quot; identical, the concrete types could capture variables from outside, as a result they have to be unique.  The compiler monomorphises <code>T</code> to a fixed type. Even if you replace the <code>set_callback()</code> with <code>s.func = |msg| {}</code> you&#39;d get the same error. <code>Box&lt;Fn()&gt;</code> or trait objects solves the problem."}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 26, "favorite_count": 0, "closed_date": 1544683848, "answer_count": 0, "score": 0, "last_activity_date": 1545241424, "creation_date": 1544679591, "last_edit_date": 1545241424, "question_id": 53755578, "link": "https://stackoverflow.com/questions/53755578/pass-closure-to-method-and-store-on-struct", "closed_reason": "Duplicate", "title": "Pass closure to method and store on struct", "body": "<p>I'm trying to pass a callback into a method so my struct can use it later, but I'm getting <code>expected closure, found a different closure</code> with the following code:</p>\n\n<pre><code>struct Struct&lt;T&gt;\n    where T: Fn(&amp;[u8])\n{\n    func: T\n}\n\nimpl&lt;T&gt; Struct&lt;T&gt;\n    where T: Fn(&amp;[u8])\n{\n    fn set_callback(&amp;mut self, callback: T) {\n        self.func = callback;\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n\n    // this works\n    let mut s = Struct {\n        func: |msg| {}\n    };\n\n    // this doesn't\n    s.set_callback(|msg| {});\n}\n</code></pre>\n"}, {"tags": ["rust", "closures", "generator"], "answers": [{"comments": [{"owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544699617, "post_id": 53757228, "comment_id": 94372979, "body": "Is it possible to define a conversion trait like <code>IntoIterator</code> that automatically calls <code>into_generator</code> for functions? I tried this but encountered conflicting implementations error: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=977ec30e36e3c35b67b675978fb7a3ba\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>  I understand there is a possibility of conflict, but I couldn&#39;t find a workaround."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544704341, "post_id": 53757228, "comment_id": 94375524, "body": "@pandaman I can&#39;t see a good way of implementing a trait for both all generators and all closures. You generally get only one blanket implementation, since there is no way to exclude types that implement both traits. An explicit conversion function doesn&#39;t seem too shabby as a solution, though I don&#39;t understand your use case."}, {"owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544708591, "post_id": 53757228, "comment_id": 94378037, "body": "I&#39;m writing an Algebraic Effects library for Rust, and the actual occurrence of the closures are inside <a href=\"https://github.com/pandaman64/effective-rust/blob/master/src/lib.rs#L67\" rel=\"nofollow noreferrer\">a macro</a>. So it would be good if I can handle both generators and functions in a syntactically equivalent manner."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544710633, "post_id": 53757228, "comment_id": 94379297, "body": "@pandaman It is sometiems possible to resolve conflicts between implementations using &quot;sealed&quot; traits that are private to the crate, so they can&#39;t be implemented by downstream crates \u2013 see for example <a href=\"https://stackoverflow.com/q/53021939/279627\">the discussion on this question</a> and the <a href=\"https://rust-lang-nursery.github.io/api-guidelines/future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed\" rel=\"nofollow noreferrer\">description in the Rust API guidelines</a>. However, I don&#39;t think the pattern can be applied here, since we can&#39;t really prevent downstream crates from implementing both\u2026"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544710659, "post_id": 53757228, "comment_id": 94379317, "body": "\u2026<code>FnOnce</code> and <code>Generator</code> for the same type."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1544756328, "last_edit_date": 1544756328, "creation_date": 1544687394, "answer_id": 53757228, "question_id": 53755150, "link": "https://stackoverflow.com/questions/53755150/how-to-convert-a-closure-without-a-yield-to-a-generator/53757228#53757228", "title": "How to convert a closure without a yield to a generator?", "body": "<p>A closure isn't a generator, so the compiler can't really treat it as one. It is unclear whether the generator you wish to implement is supposed to <em>return</em> or <em>yield</em> the return value of the function; assuming you want the former, you can use a <code>yield</code> statement after a <code>return</code> statement to create a generator that does not yield:</p>\n\n<pre><code>let x = Box::new(|| {\n    return;\n    yield;\n});\n</code></pre>\n\n<p>If you need this frequently, you can also wrap this in a function:</p>\n\n<pre><code>fn into_generator&lt;F, T&gt;(f: F) -&gt; impl Generator&lt;Yield = (), Return = T&gt;\nwhere\n    F: FnOnce() -&gt; T,\n{\n    #[allow(unreachable_code)]\n    || {\n        return f();\n        yield;\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ee1cfb2973bcb007f15d6ffeff4dae20\" rel=\"nofollow noreferrer\">Full code on the playground</a>)</p>\n"}], "owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 169, "favorite_count": 0, "accepted_answer_id": 53757228, "answer_count": 1, "score": 2, "last_activity_date": 1545241586, "creation_date": 1544676334, "last_edit_date": 1545241586, "question_id": 53755150, "link": "https://stackoverflow.com/questions/53755150/how-to-convert-a-closure-without-a-yield-to-a-generator", "title": "How to convert a closure without a yield to a generator?", "body": "<p>I'm writing a library that uses generators to hold continuations. Sometimes I want to pass a closure with no suspension points, or no <code>yield</code>s, but the compiler complains that the closure doesn't implement the <code>Generator</code> trait.</p>\n\n<p>I want to compile the following code without adding a <code>yield</code> to the closure; how can I let the compiler treat the closure as a generator?</p>\n\n<pre><code>#![feature(generators, generator_trait)]\n\nuse std::ops::Generator;\n\nfn library_func(mut g: Box&lt;dyn Generator&lt;Yield = (), Return = ()&gt;&gt;) {\n    let x = unsafe { g.resume() };\n    println!(\"{:?}\", x);\n}\n\nfn main() {\n    // a closure without yield\n    let x = Box::new(|| {\n        // uncommenting this line makes it compile, but changes the behavior\n        // yield ();\n    });\n\n    library_func(x);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `[closure@src/main.rs:12:22: 15:6]: std::ops::Generator` is not satisfied\n  --&gt; src/main.rs:17:18\n   |\n17 |     library_func(x);\n   |                  ^ the trait `std::ops::Generator` is not implemented for `[closure@src/main.rs:12:22: 15:6]`\n   |\n   = note: required for the cast to the object type `dyn std::ops::Generator&lt;Yield=(), Return=()&gt;`\n</code></pre>\n"}, {"tags": ["random", "rust", "hashset"], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 3, "last_activity_date": 1544692750, "last_edit_date": 1544692750, "creation_date": 1544691435, "answer_id": 53758168, "question_id": 53755017, "link": "https://stackoverflow.com/questions/53755017/can-i-randomly-sample-from-a-hashset-efficiently/53758168#53758168", "title": "Can I randomly sample from a HashSet efficiently?", "body": "<p>The only data structures allowing uniform sampling in constant time are data structures with constant time index access. <code>HashSet</code> does not provide indexing, so you can't generate random samples in constant time.</p>\n\n<p>I suggest to convert your hash set to a <code>Vec</code> first, and then sample from the vector. To remove an element, simply move the last element in its place \u2013 the order of the elements in the vector is immaterial anyway.</p>\n\n<p>If you want to consume all elements from the set in random order, you can also shuffle the vector once and then iterate over it.</p>\n\n<p>Here is an example implementation for removing a random element from a <code>Vec</code> in constant time:</p>\n\n<pre><code>use rand::{thread_rng, Rng};\n\npub trait RemoveRandom {\n    type Item;\n\n    fn remove_random&lt;R: Rng&gt;(&amp;mut self, rng: &amp;mut R) -&gt; Option&lt;Self::Item&gt;;\n}\n\nimpl&lt;T&gt; RemoveRandom for Vec&lt;T&gt; {\n    type Item = T;\n\n    fn remove_random&lt;R: Rng&gt;(&amp;mut self, rng: &amp;mut R) -&gt; Option&lt;Self::Item&gt; {\n        if self.len() == 0 {\n            None\n        } else {\n            let index = rng.gen_range(0, self.len());\n            Some(self.swap_remove(index))\n        }\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6a3ef46825825739e81d1f40347735e2\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n"}, {"tags": [], "owner": {"reputation": 438, "user_id": 3739851, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bP6eh.jpg?s=128&g=1", "display_name": "isaacg", "link": "https://stackoverflow.com/users/3739851/isaacg"}, "is_accepted": false, "score": 1, "last_activity_date": 1544759239, "creation_date": 1544759239, "answer_id": 53773240, "question_id": 53755017, "link": "https://stackoverflow.com/questions/53755017/can-i-randomly-sample-from-a-hashset-efficiently/53773240#53773240", "title": "Can I randomly sample from a HashSet efficiently?", "body": "<p>Thinking about Sven Marnach's answer, I want to use a vector, but I also need constant time insertion without duplication. Then I realized that I can maintain both a vector and a set, and ensure that they both had the same elements at all times. This will allow both constant time insertion with deduplication and constant time random removal.</p>\n\n<p>Here's the implementation I ended up with:</p>\n\n<pre><code>struct VecSet&lt;T&gt; {\n    set: HashSet&lt;T&gt;,\n    vec: Vec&lt;T&gt;,\n}\n\nimpl&lt;T&gt; VecSet&lt;T&gt;\nwhere\n    T: Clone + Eq + std::hash::Hash,\n{\n    fn new() -&gt; Self {\n        Self {\n            set: HashSet::new(),\n            vec: Vec::new(),\n        }\n    }\n    fn insert(&amp;mut self, elem: T) {\n        assert_eq!(self.set.len(), self.vec.len());\n        let was_new = self.set.insert(elem.clone());\n        if was_new {\n            self.vec.push(elem);\n        }\n    }\n    fn remove_random(&amp;mut self) -&gt; T {\n        assert_eq!(self.set.len(), self.vec.len());\n        let index = thread_rng().gen_range(0, self.vec.len());\n        let elem = self.vec.swap_remove(index);\n        let was_present = self.set.remove(&amp;elem);\n        assert!(was_present);\n        elem\n    }\n    fn is_empty(&amp;self) -&gt; bool {\n        assert_eq!(self.set.len(), self.vec.len());\n        self.vec.is_empty()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 438, "user_id": 3739851, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bP6eh.jpg?s=128&g=1", "display_name": "isaacg", "link": "https://stackoverflow.com/users/3739851/isaacg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1222, "favorite_count": 0, "answer_count": 2, "score": 9, "last_activity_date": 1544759239, "creation_date": 1544675266, "question_id": 53755017, "link": "https://stackoverflow.com/questions/53755017/can-i-randomly-sample-from-a-hashset-efficiently", "title": "Can I randomly sample from a HashSet efficiently?", "body": "<p>I have a <code>std::collections::HashSet</code>, and I want to sample and remove a uniformly random element.</p>\n\n<p>Currently, what I'm doing is randomly sampling an index using <code>rand.gen_range</code>, then iterating over the <code>HashSet</code> to that index to get the element. Then I remove the selected element. This works, but it's not efficient. Is there an efficient way to do randomly sample an element?</p>\n\n<p>Here's a stripped down version of what my code looks like:</p>\n\n<pre><code>use std::collections::HashSet;\n\nextern crate rand;\nuse rand::thread_rng;\nuse rand::Rng;\n\nlet mut hash_set = HashSet::new();\n\n// ... Fill up hash_set ...\n\nlet index = thread_rng().gen_range(0, hash_set.len());\nlet element = hash_set.iter().nth(index).unwrap().clone();\nhash_set.remove(&amp;element);\n\n// ... Use element ...\n</code></pre>\n"}]