[{"tags": ["rust", "traits", "coercion"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1548893542, "post_id": 54451342, "comment_id": 95711371, "body": "Is there anything wrong with <code>impl&lt;T: Clone&gt; SliceLike for [T]</code>?"}, {"owner": {"reputation": 799, "user_id": 3096774, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/1dd1ee89121ffeb86343b5e70b20beb1?s=128&d=identicon&r=PG&f=1", "display_name": "apt1002", "link": "https://stackoverflow.com/users/3096774/apt1002"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1548982521, "post_id": 54451342, "comment_id": 95750556, "body": "It meets some requirements, certainly. It would allow you to call <code>SliceLike</code> methods on quite a few interesting types. However, it wouldn&#39;t satisfy trait bounds such as <code>Vec&lt;T&gt;: SliceLike</code>, so it would make it harder to write code that is polymorphic over <code>SliceLike</code> types. I think it is not possible to have both your suggested impl and mine at the same time, because of the theoretical possibility that [T] will implement Deref at some future date."}], "answers": [{"comments": [{"owner": {"reputation": 799, "user_id": 3096774, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/1dd1ee89121ffeb86343b5e70b20beb1?s=128&d=identicon&r=PG&f=1", "display_name": "apt1002", "link": "https://stackoverflow.com/users/3096774/apt1002"}, "edited": false, "score": 1, "creation_date": 1549901873, "post_id": 54565096, "comment_id": 96061658, "body": "&quot;It isn&#39;t possible to implement <code>Deref</code> for <code>[T; N]</code> due to coherence rules&quot; &lt;-- More precisely, it would be possible in the standard library, but not outside it, which I think is what you mean."}, {"owner": {"reputation": 799, "user_id": 3096774, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/1dd1ee89121ffeb86343b5e70b20beb1?s=128&d=identicon&r=PG&f=1", "display_name": "apt1002", "link": "https://stackoverflow.com/users/3096774/apt1002"}, "edited": false, "score": 1, "creation_date": 1549902483, "post_id": 54565096, "comment_id": 96062028, "body": "<code>[3, 4].as_ref().first_item()</code> works too, and is a bit easier to read. I guess that&#39;s okay."}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": true, "score": 2, "last_activity_date": 1549503292, "creation_date": 1549503292, "answer_id": 54565096, "question_id": 54451342, "link": "https://stackoverflow.com/questions/54451342/how-to-get-deref-coercion-when-using-impl-trait-take-2/54565096#54565096", "title": "How to get Deref coercion when using impl Trait (take 2)", "body": "<p><code>Deref</code> is implemented for <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#impl-Deref-19\" rel=\"nofollow noreferrer\"><code>Vec</code></a>, <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#impl-Deref-14\" rel=\"nofollow noreferrer\"><code>Box</code></a>, <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#impl-Deref-17\" rel=\"nofollow noreferrer\"><code>Rc</code></a>, <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#impl-Deref-4\" rel=\"nofollow noreferrer\"><code>&amp;T where T: ?Sized</code></a> and there isn't an implementation for arrays (<code>[T; N]</code>), that is why <code>[3, 4].first_item()</code> doesn't work.</p>\n\n<p>It isn't possible to implement <code>Deref</code> for <code>[T; N]</code> due to <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md\" rel=\"nofollow noreferrer\">coherence rules</a>, therefore, the array must be coerced to a slice one way or another. The best method I am aware of is as follows:</p>\n\n<pre><code>let data: [usize; 2] = [3, 4];\nassert_eq!((&amp;data[..]).first_item(), 3); // Ok\n</code></pre>\n\n<p>Please note that issues like this are probably going to disappear once <a href=\"https://github.com/rust-lang/rust/pull/53645\" rel=\"nofollow noreferrer\">const generic</a> is merged.</p>\n"}], "owner": {"reputation": 799, "user_id": 3096774, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/1dd1ee89121ffeb86343b5e70b20beb1?s=128&d=identicon&r=PG&f=1", "display_name": "apt1002", "link": "https://stackoverflow.com/users/3096774/apt1002"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 277, "favorite_count": 0, "accepted_answer_id": 54565096, "answer_count": 1, "score": 2, "last_activity_date": 1549503292, "creation_date": 1548892236, "last_edit_date": 1548907279, "question_id": 54451342, "link": "https://stackoverflow.com/questions/54451342/how-to-get-deref-coercion-when-using-impl-trait-take-2", "title": "How to get Deref coercion when using impl Trait (take 2)", "body": "<p>Here is a trait (simplified for the question) which I'd like to implement for every type that behaves like a slice:</p>\n\n<pre><code>trait SliceLike {\n    type Item;\n\n    /// Computes and returns (owned) the first item in a collection.\n    fn first_item(&amp;self) -&gt; Self::Item;\n}\n</code></pre>\n\n<p>Note that the <code>Item</code> type is an associated type; I want each type that is <code>SliceLike</code> to have a unique element type.</p>\n\n<p>Here is an attempt at a blanket implementation:</p>\n\n<pre><code>use std::ops::Deref;\n\nimpl&lt;T: Clone, U: Deref&lt;Target = [T]&gt;&gt; SliceLike for U {\n    type Item = T;\n\n    fn first_item(&amp;self) -&gt; Self::Item {\n        self[0].clone()\n    }\n}\n</code></pre>\n\n<p>For example, this compiles and runs:</p>\n\n<pre><code>let data: Vec&lt;usize&gt; = vec![3, 4];\nassert_eq!(data.first_item(), 3);\n\nlet data: &amp;[usize] = &amp;[3, 4];\nassert_eq!(data.first_item(), 3);\n\nlet data: Box&lt;[usize]&gt; = Box::new([3, 4]);\nassert_eq!(data.first_item(), 3);\n\nlet data: Rc&lt;[usize]&gt; = Rc::new([3, 4]);\nassert_eq!((&amp;data).first_item(), 3);\n</code></pre>\n\n<p>This also compiles and runs:</p>\n\n<pre><code>fn stub(x: &amp;[usize]) -&gt; usize {\n    x.first_item()\n}\n\nlet data: [usize; 2] = [3, 4];\nassert_eq!(stub(&amp;data), 3);\n\nassert_eq!(stub(&amp;[3, 4]), 3);\n</code></pre>\n\n<p>But if I inline <code>stub()</code> it fails to compile:</p>\n\n<pre><code>let data: [usize; 2] = [3, 4];\nassert_eq!(data.first_item(), 3); // Fails.\n\nassert_eq!([3, 4].first_item(), 3); // Fails.\n</code></pre>\n\n<p>The blanket implementation uses the <code>Deref</code> trait that the compiler itself uses to turn other types into slices. It will catch all third-party types that also behave like a slice.</p>\n\n<p>The error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `first_item` found for type `[usize; 2]` in the current scope\n  --&gt; src/lib.rs:20:21\n   |\n20 |     assert_eq!(data.first_item(), 3); // Fails.\n   |                     ^^^^^^^^^^\n   |\n   = note: the method `first_item` exists but the following trait bounds were not satisfied:\n           `[usize; 2] : SliceLike`\n           `[usize] : SliceLike`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `first_item`, perhaps you need to implement it:\n           candidate #1: `SliceLike`\n</code></pre>\n\n<p>In <a href=\"https://stackoverflow.com/questions/54400803/how-to-get-deref-coercion-when-using-impl-trait/54400887#54400887\">take 1</a> of this question, I was advised to use <code>AsRef</code> instead of <code>Deref</code>. That solution won't work here, because some type might implement <code>AsRef</code> for more than one element type.</p>\n\n<p>I think I understand what is going on. For each type <code>T</code> there is a unique type <code>&lt;T as Deref&gt;::Target</code>. When <code>T</code> is <code>&amp;[usize; 2]</code> the target is <code>[usize; 2]</code>, not <code>[usize]</code>. The compiler is able to coerce <code>&amp;[T; 2]</code> to <code>&amp;[T]</code> if I explicitly ask it to, e.g. by using <code>let</code> or <code>stub()</code>, but if I don't then it's not able to work out that the coercion is required.</p>\n\n<p>But it's frustrating: it's perfectly obvious to a human what the failing calls are intended to do, and the compiler understands what's required for <code>Vec&lt;usize&gt;</code>, <code>Box&lt;[usize]&gt;</code>, <code>Rc&lt;[usize]&gt;</code>, <code>&amp;[usize]</code> and so on, so it doesn't seem unreasonable to try to make it work for <code>[usize; 2]</code> as well.</p>\n\n<p>Is there a convenient way to write <code>first()</code> so that the last two calls work too? If not, is there a syntax to ask the compiler to coerce a <code>&amp;[usize; 2]</code> to a <code>&amp;[usize]</code> inline, <em>i.e.</em> without using <code>let</code> or <code>stub()</code>?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3b24bfc8774e2c464f9246295b79c593\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["compiler-errors", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1548884678, "post_id": 54449961, "comment_id": 95708759, "body": "interesting that it assumes an associated type from a trait. if there were an impl that had been imported that caused f32 to implement a trait that had a foo type associated with it, would <code>f32::foo</code> be valid or do you always have to be explicit about it?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1548885097, "post_id": 54449961, "comment_id": 95708885, "body": "@JosephGarvin I don&#39;t immediately see how to make it use the non-explicit syntax, no."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 1, "creation_date": 1548885181, "post_id": 54449961, "comment_id": 95708924, "body": "@JosephGarvin Associated types don&#39;t resolve, but function calls do. I&#39;m not sure why this difference. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=35bb29ab117ee11abe3c498dafaef34c\" rel=\"nofollow noreferrer\">Playground</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1548885052, "last_edit_date": 1548885052, "creation_date": 1548884399, "answer_id": 54449961, "question_id": 54449836, "link": "https://stackoverflow.com/questions/54449836/why-does-using-f32constse-give-error-e0223-but-stdf32constse-does-not/54449961#54449961", "title": "Why does using f32::consts::E give error E0223 but std::f32::consts::E does not?", "body": "<blockquote>\n  <p>What does the compiler think I'm doing</p>\n</blockquote>\n\n<p>There is a <em>module</em> called <code>f32</code> and there is a <em>type</em> called <code>f32</code>. The type is available everywhere by default, the module is not.</p>\n\n<p>With no additional imports, <code>f32::foo</code> is best understood by the compiler as an <em>associated type</em> for the type <code>f32</code>, but there's no such type. It assumes that the associated type comes from a trait and it suggests you be more explicit about what trait it is.</p>\n\n<p>When you do <code>std::f32</code>, the path brings the module into scope and the nested module <code>consts</code> can then be found. You can also do:</p>\n\n<pre><code>use std::f32;\nlet x = f32::consts::E;\n</code></pre>\n\n<p>This can occur for any type, but usually types and modules use different naming styles (<code>UpperCamelCase</code> vs <code>snake_case</code>):</p>\n\n<pre><code>struct my_type;\n\nmod other {\n    pub mod my_type {\n        pub mod consts {\n            pub const ZERO: i32 = 0;\n        }\n    }\n}\n\nfn example() {\n    my_type::consts::ZERO;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0223]: ambiguous associated type\n  --&gt; src/lib.rs:12:5\n   |\n12 |     my_type::consts::ZERO;\n   |     ^^^^^^^^^^^^^^^^^^^^^ help: use fully-qualified syntax: `&lt;my_type as Trait&gt;::consts`\n</code></pre>\n\n<p>It just happens that the primitives use all lower case.</p>\n\n<p>Here's some code (of dubious usefulness) that shows how the associated type might actually happen:</p>\n\n<pre><code>struct Consts;\n\nimpl Consts {\n    const E: char = 'e';\n}\n\ntrait Example {\n    type consts;\n}\n\nimpl Example for f32 {\n    type consts = Consts;\n}\n\nfn example() {\n    &lt;f32 as Example&gt;::consts::E;\n}\n</code></pre>\n"}], "owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 54449961, "answer_count": 1, "score": 0, "last_activity_date": 1548885052, "creation_date": 1548883839, "last_edit_date": 1548883945, "question_id": 54449836, "link": "https://stackoverflow.com/questions/54449836/why-does-using-f32constse-give-error-e0223-but-stdf32constse-does-not", "title": "Why does using f32::consts::E give error E0223 but std::f32::consts::E does not?", "body": "<p>If I write:</p>\n\n<pre><code>let x = f32::consts::E;\n</code></pre>\n\n<p>I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0223]: ambiguous associated type\n  --&gt; src/main.rs:32:21\n   |\n32 |             let x = f32::consts::E;\n   |                     ^^^^^^^^^^^^^^ help: use fully-qualified syntax: `&lt;f32 as Trait&gt;::consts`\n</code></pre>\n\n<p>But if I instead write:</p>\n\n<pre><code>let x = std::f32::consts::E;\n</code></pre>\n\n<p>Then everything is fine. The error message is confusing because, as I understand it, <code>f32</code> is a specific concrete type not a trait. I'm not sure why I would be using some special trait syntax.</p>\n\n<p>What does the compiler think I'm doing and why does my fix help?</p>\n"}, {"tags": ["path", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548878784, "post_id": 54448478, "comment_id": 95706187, "body": "Have you profiled your code and found that the act of <i>creating paths</i> is a significant bottleneck? I&#39;d expect that creating the entries on disk would greatly outweigh any time spend in making up their names."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548878921, "post_id": 54448478, "comment_id": 95706254, "body": "See also <a href=\"https://stackoverflow.com/q/40567020/155423\">What is a macro for concatenating an arbitrary number of components to build a path in Rust?</a>"}, {"owner": {"reputation": 8363, "user_id": 1531806, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/FkpTG.jpg?s=128&g=1", "display_name": "Pascal Precht", "link": "https://stackoverflow.com/users/1531806/pascal-precht"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548879056, "post_id": 54448478, "comment_id": 95706304, "body": "Thank you! No I haven&#39;t, was just asking up front because I keep reading in different places that copying data can be a problem. Obviously that also depends on the size. It indeed probably doesn&#39;t matter here.  Appreciate your thoughts!"}], "answers": [{"comments": [{"owner": {"reputation": 8363, "user_id": 1531806, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/FkpTG.jpg?s=128&g=1", "display_name": "Pascal Precht", "link": "https://stackoverflow.com/users/1531806/pascal-precht"}, "edited": false, "score": 0, "creation_date": 1548878270, "post_id": 54448546, "comment_id": 95705965, "body": "Ah, wonderful!! That looks like exactly what I need! Any comments on working with clones vs working with a borrowed PathBuf?"}], "tags": [], "owner": {"reputation": 968, "user_id": 358641, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MHVJK.jpg?s=128&g=1", "display_name": "Mike", "link": "https://stackoverflow.com/users/358641/mike"}, "is_accepted": true, "score": 2, "last_activity_date": 1548878288, "last_edit_date": 1548878288, "creation_date": 1548878076, "answer_id": 54448546, "question_id": 54448478, "link": "https://stackoverflow.com/questions/54448478/what-is-the-recommended-way-to-create-multiple-paths-starting-from-the-same-pare/54448546#54448546", "title": "What is the recommended way to create multiple paths starting from the same parent directory?", "body": "<p>Check out <a href=\"https://doc.rust-lang.org/stable/std/path/struct.Path.html#method.join\" rel=\"nofollow noreferrer\"><code>Path::join()</code></a>. It combines the <code>.clone()</code> and <code>.push()</code> into a single step.</p>\n"}], "owner": {"reputation": 8363, "user_id": 1531806, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/FkpTG.jpg?s=128&g=1", "display_name": "Pascal Precht", "link": "https://stackoverflow.com/users/1531806/pascal-precht"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 204, "favorite_count": 1, "accepted_answer_id": 54448546, "answer_count": 1, "score": 0, "last_activity_date": 1548878575, "creation_date": 1548877858, "last_edit_date": 1548878575, "question_id": 54448478, "link": "https://stackoverflow.com/questions/54448478/what-is-the-recommended-way-to-create-multiple-paths-starting-from-the-same-pare", "title": "What is the recommended way to create multiple paths starting from the same parent directory?", "body": "<p>I have a function that receives a <code>PathBuf</code> and it creates a bunch of files and directories within the path of that <code>PathBuf</code>. For example, the function gets <code>foo/bar</code> and it will create directories/files like <code>foo/bar/bazinga</code> and <code>foo/bar/foo</code>.</p>\n\n<p>I can use e.g. <code>fs::create_dir[_all](path: PathBuf)</code> and create a <code>PathBuf</code> instance for every single folder/file I want to create. However, creating such an instance means I'll have to clone the incoming <code>PathBuf</code>:</p>\n\n<pre><code>pub fn generate(&amp;self, mut path: PathBuf) -&gt; Result&lt;()&gt; {\n    let dir_to_be_created_path = path.clone();\n    dir_to_be_created_path.push(\"bazinga\");\n    Ok(())\n}\n</code></pre>\n\n<p>Another option would be to take <code>&amp;mut PathBuf</code> instead and <code>push()</code> and <code>pop()</code> as needed, working with essentially only one instance reference instead.</p>\n\n<p>Is it fair to say that one of these options is a \"better\" way to do this? Or are there other options on how this could be done for the better?</p>\n"}, {"tags": ["multithreading", "rust", "reference-counting"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548872073, "post_id": 54446633, "comment_id": 95702950, "body": "The actual type is more complicated and actually irrelevant. The point is that there is an <code>Rc</code> (or any other <code>!Send</code>) deep inside the type-stack which I have no control over."}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548872403, "post_id": 54446633, "comment_id": 95703095, "body": "I was seeking to avoid comments to the tune of &quot;Well, first of all if the value is <code>Foo</code> then this is not a tree but a generalized bifocal Van-de-gren graph of the second degree!&quot;......"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548872524, "post_id": 54446633, "comment_id": 95703147, "body": "You can just say you have a <code>Foo(Rc&lt;i32&gt;)</code> \u2014 we don&#39;t need to know about the tree aspect to start with."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1548876167, "last_edit_date": 1548876167, "creation_date": 1548873847, "answer_id": 54447459, "question_id": 54446633, "link": "https://stackoverflow.com/questions/54446633/how-can-i-return-a-type-containing-an-rc-from-a-thread/54447459#54447459", "title": "How can I return a type containing an Rc from a thread?", "body": "<blockquote>\n  <p>[T]here is actually zero possibility for both threads to access the refcounter simultaneously.</p>\n</blockquote>\n\n<p>But the <em>compiler</em> can't understand that, so you have to say \"no really, trust me, I know it looks dodgy but it's actually safe.\" That's what <code>unsafe</code> is for.</p>\n\n<p>It should be as simple as</p>\n\n<pre><code>unsafe impl Send for Foo {}\n</code></pre>\n\n<p>From the <a href=\"https://doc.rust-lang.org/nomicon/send-and-sync.html\" rel=\"nofollow noreferrer\">Nomicon</a>:</p>\n\n<blockquote>\n  <ul>\n  <li><code>Rc</code> isn't Send or Sync (because the refcount is shared and unsynchronized).</li>\n  </ul>\n</blockquote>\n\n<p>It's not safe to make <code>Rc</code> itself <code>Send</code> because <code>Rc</code> exposes an interface that would be unsafe if sent between threads. But <code>Foo</code>, as you describe it, exposes an interface that <em>isn't</em> unsafe to send between threads, so just <code>unsafe impl</code> it and be on your way.</p>\n\n<p>Assuming, that is, that the interface <em>is</em> safe to send between threads. <code>Foo</code> can't have a method that clones and returns an internal <code>Rc</code>, for example (because you could use that to effectively \"smuggle\" a bare <code>Rc</code> into another thread via <code>Foo</code>).</p>\n\n<p>If <code>Foo</code> is not <em>always</em> safe to send, but you happen to know that some <em>particular</em> <code>Foo</code> is safe to send, a better approach would be to temporarily wrap it in a type that is <code>Send</code>, as <a href=\"https://stackoverflow.com/a/54447461/3650362\">Shepmaster's answer</a> suggests.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1548876213, "last_edit_date": 1548876213, "creation_date": 1548873853, "answer_id": 54447461, "question_id": 54446633, "link": "https://stackoverflow.com/questions/54446633/how-can-i-return-a-type-containing-an-rc-from-a-thread/54447461#54447461", "title": "How can I return a type containing an Rc from a thread?", "body": "<p>Rust the language knows nothing about the fact that when a thread ends it can no longer have any references. In fact, it doesn't know anything about threads \"starting\" or \"ending\", either.</p>\n\n<p>From the languages point of view, it's possible that one of the <code>Rc</code>'s clones is still owned by the thread. Once the type is on a thread, that's the end of it.</p>\n\n<hr>\n\n<p>When you have something that you the programmer knows but the compiler cannot, that's a case for <code>unsafe</code> code.</p>\n\n<p>I am not 100% sure, but, <em>to the best of my knowledge</em>, so long as all interlinked <code>Rc</code>s are on the same thread, it's actually safe. This <em>should</em> be the case for returning a value from a thread.</p>\n\n<pre><code>use std::{rc::Rc, thread};\n\ntype MyTreeThing = Rc&lt;i32&gt;;\nstruct ReturningAnRcAcrossThreadsIsSafe(MyTreeThing);\n\n// I copied this from Stack Overflow without reading the text and\n// stating why I think this code is actually safe.\nunsafe impl Send for ReturningAnRcAcrossThreadsIsSafe {}\n\nfn main() {\n    let t = thread::spawn(|| ReturningAnRcAcrossThreadsIsSafe(Rc::new(42)));\n\n    let a = t.join().unwrap().0;\n\n    println!(\"{}\", a);\n}\n</code></pre>\n\n<p>This answer differs from <a href=\"https://stackoverflow.com/a/54447459/155423\">trentcl's answer</a> in that the unsafe code has a much smaller scope \u2014 only the value that is returned across the thread is covered by it. Their answer marks the entire <code>MyTreeThing</code> type as safe to send across threads, regardless of context. This is fine, so long as you take care to know that all related <code>Rc</code>s are always moved wholesale between threads.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/36649865/155423\">How can I guarantee that a type that doesn&#39;t implement Sync can actually be safely shared between threads?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a></li>\n</ul>\n"}], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 54447459, "answer_count": 2, "score": 2, "last_activity_date": 1548876321, "creation_date": 1548870694, "last_edit_date": 1548874770, "question_id": 54446633, "link": "https://stackoverflow.com/questions/54446633/how-can-i-return-a-type-containing-an-rc-from-a-thread", "title": "How can I return a type containing an Rc from a thread?", "body": "<p>I'm spawning a thread which builds what is essentially a tree, which is needed sometime later and can, therefore, be computed in an off-thread. For the sake of example, think of a <code>Foo { inner: HashMap&lt;Bar, Rc&lt;FooBar&gt;&gt; }</code>. The thread's closure does not capture anything from the surrounding environment.</p>\n\n<p>The problem is that the <code>Rc</code> makes the entire type <code>!Send</code>. This precludes <code>Foo</code> from being returned to the spawning thread. Effectively, the <code>Rc</code> \"poisons\" <code>Foo</code>.</p>\n\n<p>I fail to see the reason why a type that is created by the spawned thread and returned still needs to be <code>Send</code>: It forces all inner types (in this case the <code>Rc</code> in the <code>HashMap</code>, in <code>Foo</code>, to be <code>Send</code>. This is unfixable from the point of view of the spawned thread.\nIt forces the spawned thread to use atomic counting all the time, while there is actually zero possibility for both threads to access the refcounter simultaneously.</p>\n\n<p>Is there a way to return (not share!) a type that contains an <code>Rc</code> from a thread? Am I missing something in the understanding of <code>Send</code>?</p>\n"}, {"tags": ["rust", "rust-actix"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548867089, "post_id": 54445563, "comment_id": 95700382, "body": "<i>which is inefficient and readable</i> \u2014 why do you think it&#39;s inefficient? Why is being readable a bad thing? <i>a good idea to make sort of a singleton</i> \u2014 singletons are often (but not always) a <b>bad</b> pattern."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548867128, "post_id": 54445563, "comment_id": 95700403, "body": "<i>What&#39;s the best/correct one to implement</i> \u2014 This sounds like an opinion-based question. &quot;Many good questions generate some degree of opinion based on expert experience, but answers to this question will tend to be almost entirely based on opinions, rather than facts, references, or specific expertise.&quot;"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 248, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1548866976, "creation_date": 1548866976, "question_id": 54445563, "link": "https://stackoverflow.com/questions/54445563/how-to-inject-an-immutable-object-into-service-code-in-actix-web", "title": "How to inject an immutable object into service code in actix-web?", "body": "<p>I'm using <a href=\"https://github.com/actix/\" rel=\"nofollow noreferrer\">actix framework</a> to build a server that should support an opportunity to show both age/balance to a user given a <code>user_id</code>:</p>\n\n<pre><code>fn show_balance(req: &amp;HttpRequest) -&gt; HttpResponse {\n    let client = create_client();\n    let user_id = req.match_info().get(\"user_id\").unwrap();\n    let balance = client.load_grade(user_id); // Returns a balance as a String\n    HttpResponse::Ok()\n        .content_type(\"text/plain\")\n        .body(format!(\"Hello! Your balance is {}\", balance))\n}\n\nfn show_age(req: &amp;HttpRequest) -&gt; HttpResponse {\n    let client = create_client();\n    let user_id = req.match_info().get(\"user_id\").unwrap();\n    let age = client.load_grade(user_id); // Returns an age as a String\n    HttpResponse::Ok()\n        .content_type(\"text/plain\")\n        .body(format!(\"Hello! Your balance is {}\", age))\n}\n\nfn main() {\n    env::set_var(\"RUST_LOG\", \"actix_web=debug\");\n    env::set_var(\"RUST_BACKTRACE\", \"1\");\n    env_logger::init();\n    let sys = actix::System::new(\"basic-example\");\n\n    let addr = server::new(\n        || App::new()\n            // enable logger\n            .middleware(middleware::Logger::default())\n            .resource(\"/balance/{user_id}\", |r| r.method(Method::GET).f(show_balance))\n            .resource(\"/age/{user_id}\", |r| r.method(Method::GET).f(show_age))\n        .bind(\"127.0.0.1:8080\").expect(\"Can not bind to 127.0.0.1:8080\")\n        .start();\n\n    println!(\"Starting http server: 127.0.0.1:8080\");\n    let _ = sys.run();\n}\n\nfn create_client() -&gt; UserDataClient {\n    let enviroment = grpcio::EnvBuilder::new().build();\n    let channel = grpcio::ChannelBuilder::new(enviroment)\n        .connect(API_URL);\n    UserDataClient::new(channel)\n}\n</code></pre>\n\n<p>This code works, but my concern is that I have to create a client (and open a channel) for every incoming request which is inefficient and readable, I think it's a good idea to make sort of a singleton instead (since I can reuse it). I looked through the <a href=\"https://github.com/actix/examples/tree/6b68cfc5292638785998409903c5d4a0a1ac5206\" rel=\"nofollow noreferrer\">example folder</a> and found that <a href=\"https://github.com/actix/examples/blob/6b68cfc5292638785998409903c5d4a0a1ac5206/actix_todo/src/main.rs\" rel=\"nofollow noreferrer\">todo example</a> is kinda similar to what I'm doing. So I found the following two options to inject my <code>client</code> object (after I create a single instance of it in <code>main()</code>:</p>\n\n<ol>\n<li>Put it in an <a href=\"https://github.com/actix/examples/blob/6b68cfc5292638785998409903c5d4a0a1ac5206/actix_todo/src/main.rs#L70\" rel=\"nofollow noreferrer\">app state</a></li>\n<li>Inject it as a middleware (<a href=\"https://github.com/actix/actix-website/blob/master/content/docs/middleware.md\" rel=\"nofollow noreferrer\">1</a>, <a href=\"https://github.com/actix/examples/blob/6b68cfc5292638785998409903c5d4a0a1ac5206/actix_todo/src/main.rs#L72\" rel=\"nofollow noreferrer\">2</a>)?</li>\n</ol>\n\n<p>What's the best/correct one to implement?</p>\n\n<p>I thought about just passing a client object to every handler as an argument but I didn't manage to make it work (and doesn't look good anyway).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548862540, "post_id": 54443956, "comment_id": 95697555, "body": "First of, your code is not properly formatted. Please use <code>rustfmt</code> to do so. Second, your code does not compile, because you have missing braces <code>}</code>, e.g. for your <code>unsafe</code> block. Next your code is lacking a main function. Please create a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> on the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1548863291, "post_id": 54443956, "comment_id": 95698018, "body": "Welcome to Stack Overflow! Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54443956/edit\">edit</a> your question to include it. We cannot tell what types, traits, fields, etc. are present in the code. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1548863522, "post_id": 54443956, "comment_id": 95698146, "body": "Although the question does not have enough detail to say for sure, if I had to guess, I would say this is probably a duplicate of <a href=\"https://stackoverflow.com/q/32750829/3650362\">How can I pass a reference to a stack variable to a thread?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1548863961, "post_id": 54443956, "comment_id": 95698390, "body": "... However, the first constraint you have to satisfy if you want to pass a reference to something to a thread, is that the something <i>actually</i> outlasts the thread, which is not the case here (<code>sched</code>&#39;s lifetime is only for one iteration of the loop). Why don&#39;t you just have <code>CSlice</code> own the scheduler and not take it by reference at all?"}], "owner": {"reputation": 11, "user_id": 10991098, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62d21eedf357a83247055a16fcf63626?s=128&d=identicon&r=PG&f=1", "display_name": "RNA", "link": "https://stackoverflow.com/users/10991098/rna"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1548863218, "creation_date": 1548861893, "last_edit_date": 1548863218, "question_id": 54443956, "link": "https://stackoverflow.com/questions/54443956/error-borrowed-value-does-not-live-long-enough-reference-value-loses-scope-wh", "title": "&quot;error: borrowed value does not live long enough&quot; Reference value loses scope when given to a thread", "body": "<p>I am trying to pass the scheduler to a structure which will be used by a newly spawned thread. All of this needs to happen in a loop:</p>\n\n<pre><code>// Custom structure\nstruct CSlice&lt;'a&gt; {\n      scheduler: &amp;'a mut StandaloneScheduler\n}\n\nimpl&lt;'a&gt; CSlice&lt;'a&gt; {\n     fn start(self)\n     {\n          println!(\"Start slice\");\n          unsafe {\n              control_nf(self.scheduler); // It gets passed on and on to different functions. \n          }\n     }\n}\n\n\nfn main() {\n    for i in 0..max_slices {\n        let mut sched = StandaloneScheduler::new();\n        let mut slice = CtrlSlice {\n            scheduler: &amp;mut sched}; // Error (Temp value/ Cannot borrow here)\n        }\n        thread::spawn(move || slice.start());\n    }\n}\n</code></pre>\n\n<p>What am I doing wrong? I tried cloning but <code>Scheduler</code> does not implement <code>Clone</code>. I know that the reference goes out of scope while passing it to the function but I'm not sure how to fix it.</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"comments": [{"owner": {"reputation": 985, "user_id": 4551793, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/a7759219776f7cf59fd8cb9104b7f037?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/4551793/john"}, "edited": false, "score": 0, "creation_date": 1548866246, "post_id": 54443497, "comment_id": 95699870, "body": "thanks for this. What is the reason for not being able to see expanded macros in the stable build?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 985, "user_id": 4551793, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/a7759219776f7cf59fd8cb9104b7f037?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/4551793/john"}, "edited": false, "score": 0, "creation_date": 1548866449, "post_id": 54443497, "comment_id": 95700016, "body": "@John See <a href=\"https://github.com/rust-lang/rust/issues/43364\" rel=\"nofollow noreferrer\">issue #43364</a> for a full discussion. One primary reason I know of is that the expanded code might not even compile \u2014 it&#39;s not guaranteed to have the same semantics as the original code."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1548860359, "creation_date": 1548860359, "answer_id": 54443497, "question_id": 54443307, "link": "https://stackoverflow.com/questions/54443307/is-there-a-way-to-view-expanded-macros-on-non-nightly-rust/54443497#54443497", "title": "Is there a way to view expanded macros on non-nightly Rust?", "body": "<p>No, there is not. This is only available on nightly Rust. </p>\n\n<p>When using rustup, however, there's no reason to <strong>not</strong> have both stable and nightly Rust installed. You can then just do <code>rustc +nightly -Z ...</code>, continuing to compile your code with stable.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/22758779/155423\">Is it possible to have multiple coexisting Rust installations?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28580386/155423\">How do I see the expanded macro code that&#39;s causing my compile error?</a></li>\n<li><a href=\"https://stackoverflow.com/q/51917354/155423\">Is it possible to get the expansion of a single macro instead of the whole file?</a></li>\n</ul>\n"}], "owner": {"reputation": 985, "user_id": 4551793, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/a7759219776f7cf59fd8cb9104b7f037?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/4551793/john"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "accepted_answer_id": 54443497, "answer_count": 1, "score": 0, "last_activity_date": 1548860426, "creation_date": 1548859810, "last_edit_date": 1548860426, "question_id": 54443307, "link": "https://stackoverflow.com/questions/54443307/is-there-a-way-to-view-expanded-macros-on-non-nightly-rust", "title": "Is there a way to view expanded macros on non-nightly Rust?", "body": "<p>I realise this has been asked before and the answer was to use the <code>-Z</code> option with <code>rustc</code>, but that only works with the nightly build of Rust as of Rust 1.31. </p>\n\n<p>Is there an alternative when using the stable build?</p>\n"}, {"tags": ["rust", "rayon"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548865224, "post_id": 54442484, "comment_id": 95699178, "body": "<i>because I use a huge file as input</i> \u2014 define &quot;huge&quot;. Running this code with 1094944 lines of input via <code>cargo run --release</code> takes 6.5s and seems to take 70MiB. It&#39;s printing lines of output the whole time. <i><code>eprintln!()</code> is never called</i> \u2014 it&#39;s the very first thing printed for me."}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548927863, "post_id": 54442484, "comment_id": 95723200, "body": "@Shepmaster we have completely different experiences then. How about 100 times as big a file? Perhaps it does load into memory as well in your case. Somebody on #rust-beginners told me that this closure does look like this, but I have no idea how to change it."}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1548864742, "creation_date": 1548857353, "last_edit_date": 1548864742, "question_id": 54442484, "link": "https://stackoverflow.com/questions/54442484/par-bridge-map-halts-and-consumes-memory-instead-of-iterating", "title": "par_bridge().map() halts and consumes memory instead of iterating?", "body": "<p>I'm trying to read a stream of JSON objects line-by-line from stdin and extract the \"value\" key from them as a string:</p>\n\n<pre><code>use rayon::prelude::*; // 1.0.3\nuse serde_json::Value; // 1.0.37\nuse std::io::{self, BufRead};\nuse std::sync::mpsc::channel;\n\nfn main() {\n    let stdin = io::stdin();\n\n    let rx = {\n        let (tx, rx) = channel();\n\n        for line in stdin.lock().lines() {\n            tx.send(line.unwrap()).unwrap();\n        }\n\n        rx\n    };\n\n    let it = rx.into_iter().par_bridge().map(|line| -&gt; String {\n        let v: Value = serde_json::from_str(&amp;line.clone()).unwrap();\n        let ret = v[\"value\"].as_str().unwrap().into();\n        println!(\"{}\", ret);\n        ret\n    });\n\n    eprintln!(\"Starting actual work.\");\n    it.for_each(|x| {\n        println!(\"{}\", x);\n    });\n}\n</code></pre>\n\n<p><code>eprintln!()</code> is never called and I run out of memory because I use a huge file as input. Why doesn't <code>map()</code> just return an iterator I could use but instead waits for its input to end?</p>\n"}, {"tags": ["stream", "rust", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1576685275, "last_edit_date": 1576685275, "creation_date": 1548859668, "answer_id": 54443260, "question_id": 54441319, "link": "https://stackoverflow.com/questions/54441319/how-can-i-flatmap-streams-in-rust/54443260#54443260", "title": "How can I `flatmap` streams in Rust?", "body": "<blockquote>\n  <p>How can I <code>flatmap</code> streams in Rust?</p>\n</blockquote>\n\n<p>A flat map converts an iterator of iterators into a single iterator (or stream instead of iterator).</p>\n\n<h3>Futures 0.3</h3>\n\n<p>Futures 0.3 doesn't have a direct flat map, but it does have <a href=\"https://docs.rs/futures/0.3.1/futures/stream/trait.StreamExt.html#method.flatten\" rel=\"nofollow noreferrer\"><code>StreamExt::flatten</code></a>, which can be used after a <a href=\"https://docs.rs/futures/0.3.1/futures/stream/trait.StreamExt.html#method.map\" rel=\"nofollow noreferrer\"><code>StreamExt::map</code></a>.</p>\n\n<pre><code>use futures::{stream, Stream, StreamExt}; // 0.3.1\n\nfn into_many(i: i32) -&gt; impl Stream&lt;Item = i32&gt; {\n    stream::iter(0..i)\n}\n\nfn nested() -&gt; impl Stream&lt;Item = i32&gt; {\n    let stream_of_number = into_many(5);\n    let stream_of_stream_of_number = stream_of_number.map(into_many);\n    let flat_stream_of_number = stream_of_stream_of_number.flatten();\n\n    // Returns: 0, 0, 1, 0, 1, 2, 0, 1, 2, 3\n    flat_stream_of_number\n}\n</code></pre>\n\n<h3>Futures 0.1</h3>\n\n<p>Futures 0.1 doesn't have a direct flat map, but it does have <a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.flatten\" rel=\"nofollow noreferrer\"><code>Stream::flatten</code></a>, which can be used after a <a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.map\" rel=\"nofollow noreferrer\"><code>Stream::map</code></a>.</p>\n\n<pre><code>use futures::{stream, Stream}; // 0.1.25\n\nfn into_many(i: i32) -&gt; impl Stream&lt;Item = i32, Error = ()&gt; {\n    stream::iter_ok(0..i)\n}\n\nfn nested() -&gt; impl Stream&lt;Item = i32, Error = ()&gt; {\n    let stream_of_number = into_many(5);\n    let stream_of_stream_of_number = stream_of_number.map(into_many);\n    let flat_stream_of_number = stream_of_stream_of_number.flatten();\n\n    // Returns: 0, 0, 1, 0, 1, 2, 0, 1, 2, 3\n    flat_stream_of_number\n}\n</code></pre>\n\n<hr>\n\n<p>However, <em>this doesn't solve your problem</em>.</p>\n\n<blockquote>\n  <p><code>streaming()</code> expects a <code>S: Stream&lt;Item = Bytes, Error&gt;</code> (i.e., <code>Item = Bytes</code>) but my <code>ByteStream</code> has <code>Item = Vec&lt;u8&gt;</code></p>\n</blockquote>\n\n<p>Yes, this is the problem. Use <a href=\"https://docs.rs/bytes/0.4.11/bytes/struct.Bytes.html#impl-From%3CVec%3Cu8%3E%3E\" rel=\"nofollow noreferrer\"><code>Bytes::from</code></a> via <a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.map\" rel=\"nofollow noreferrer\"><code>Stream::map</code></a> to convert your stream <code>Item</code> from one type to another:</p>\n\n<pre><code>use bytes::Bytes; // 0.4.11\nuse futures::Stream; // 0.1.25 \n\nfn example(stream: ByteStream, mut builder: HttpResponseBuilder) {\n    builder.streaming(stream.map(Bytes::from));\n}\n</code></pre>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3015, "favorite_count": 0, "accepted_answer_id": 54443260, "answer_count": 1, "score": 0, "last_activity_date": 1576685275, "creation_date": 1548853566, "last_edit_date": 1548858493, "question_id": 54441319, "link": "https://stackoverflow.com/questions/54441319/how-can-i-flatmap-streams-in-rust", "title": "How can I `flatmap` streams in Rust?", "body": "<p>I have a <a href=\"https://docs.rs/rusoto_core/0.36.0/rusoto_core/struct.ByteStream.html\" rel=\"nofollow noreferrer\"><code>rusoto_core::ByteStream</code></a> which implements <a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html\" rel=\"nofollow noreferrer\">futures' <code>Stream</code> trait</a>:</p>\n\n<pre><code>let chunks = vec![b\"1234\".to_vec(), b\"5678\".to_vec()];\nlet stream = ByteStream::new(stream::iter_ok(chunks));\n</code></pre>\n\n<p>I'd like to pass it to <a href=\"https://docs.rs/actix-web/0.7.18/actix_web/dev/struct.HttpResponseBuilder.html#method.streaming\" rel=\"nofollow noreferrer\">actix_web's <code>HttpResponseBuilder::streaming</code></a> method.</p>\n\n<pre><code>use actix_web::dev::HttpResponseBuilder; // 0.7.18\nuse rusoto_core::ByteStream; // 0.36.0\n\nfn example(stream: ByteStream, builder: HttpResponseBuilder) {\n    builder.streaming(stream);\n}\n</code></pre>\n\n<p>When I try to do it I receive the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;rusoto_core::stream::ByteStream as futures::stream::Stream&gt;::Item == bytes::bytes::Bytes`\n --&gt; src/main.rs:5:13\n  |\n5 |     builder.streaming(stream);\n  |             ^^^^^^^^^ expected struct `std::vec::Vec`, found struct `bytes::bytes::Bytes`\n  |\n  = note: expected type `std::vec::Vec&lt;u8&gt;`\n             found type `bytes::bytes::Bytes`\n</code></pre>\n\n<p>I believe the reason is that <code>streaming()</code> expects a <code>S: Stream&lt;Item = Bytes, Error&gt;</code> (i.e., <code>Item = Bytes</code>) but my <code>ByteStream</code> has <code>Item = Vec&lt;u8&gt;</code>. How can I fix it?</p>\n\n<p>I think the solution is to <code>flatmap</code> my <code>ByteStream</code> somehow but I couldn't find such a method for streams.</p>\n\n<p>Here's an example how <code>streaming()</code> can be used:</p>\n\n<pre><code>let text = \"123\";\nlet (tx, rx_body) = mpsc::unbounded();\nlet _ = tx.unbounded_send(Bytes::from(text.as_bytes()));\n\nHttpResponse::Ok()\n    .streaming(rx_body.map_err(|e| error::ErrorBadRequest(\"bad request\")))\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 1, "last_activity_date": 1548856578, "last_edit_date": 1548856578, "creation_date": 1548835040, "answer_id": 54435719, "question_id": 54435616, "link": "https://stackoverflow.com/questions/54435616/how-to-use-stdconvertinto-in-statements-in-rust/54435719#54435719", "title": "How to use std::convert::Into in statements in Rust?", "body": "<p>Note: according to the documentation, you should not <code>impl Into</code> yourself; instead write a <code>From</code> for the reverse types and use the blanket implementation.</p>\n\n<pre><code>impl From&lt;MyStruct&gt; for i64 {\n    fn from(a: MyStruct) -&gt; i64 {\n        a.x\n    }\n}\n</code></pre>\n\n<p>Now, as for the call, if you want to explicitly qualify the call, you must use the universal call syntax:</p>\n\n<pre><code>fn main() {\n    let s = MyStruct::from(5);\n    let b = Into::&lt;i64&gt;::into(s) == 5;\n    println!(\"{:?}\", b);\n}\n</code></pre>\n\n<p>Alternatively, you can put the <code>into</code> into a context where the result type is known:</p>\n\n<pre><code>fn main() {\n    let s = MyStruct::from(5);\n    let i: i64 = s.into();\n    let b = i == 5;\n    println!(\"{:?}\", b);\n}\n</code></pre>\n\n<p>Or if you're on nightly, you can use inline type ascription by enabling the experimental feature; put <code>#![feature(type_ascription)]</code> at the top of your file:</p>\n\n<pre><code>fn main() {\n    let s = MyStruct::from(5);\n    let b = (s.into(): i64) == 5;\n    println!(\"{:?}\", b);\n}\n</code></pre>\n\n<p>One more option that works on stable, if for some reason you find the universal call syntax impossible to swallow (IMO this one is uglier, but it's a matter of taste). Since blocks in Rust are expressions, you can write</p>\n\n<pre><code>fn main() {\n    let s = MyStruct::from(5);\n    let b = { let t: i64 = s.into(); t } == 5;\n    println!(\"{:?}\", b);\n}\n</code></pre>\n\n<p>Also note, you need <code>into</code> in <em>expressions</em>, not statements.</p>\n"}], "owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 0, "closed_date": 1548856213, "accepted_answer_id": 54435719, "answer_count": 1, "score": 2, "last_activity_date": 1548856578, "creation_date": 1548834536, "last_edit_date": 1548856131, "question_id": 54435616, "link": "https://stackoverflow.com/questions/54435616/how-to-use-stdconvertinto-in-statements-in-rust", "closed_reason": "Duplicate", "title": "How to use std::convert::Into in statements in Rust?", "body": "<p>I am trying to use <code>into</code> in the following code this way:</p>\n\n<pre><code>use std::convert::{From, Into};\n\nstruct MyStruct {\n    x: i64,\n}\n\nimpl From&lt;i64&gt; for MyStruct {\n    fn from(a: i64) -&gt; Self {\n        Self { x: a }\n    }\n}\n\nimpl Into&lt;i64&gt; for MyStruct {\n    fn into(self) -&gt; i64 {\n        self.x\n    }\n}\n\nfn main() {\n    let s = MyStruct::from(5);\n    let b = s.into() == 5;\n    println!(\"{:?}\", b);\n}\n</code></pre>\n\n<p>It produces an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `MyStruct: std::convert::Into&lt;_&gt;`\n  --&gt; src/main.rs:21:15\n   |\n21 |     let b = s.into() == 5;\n   |               ^^^^\n</code></pre>\n\n<p>I have tried <code>s.into::&lt;i64&gt;()</code> and <code>s.into&lt;i64&gt;()</code> without any success. The only case that worked was <code>let y: i64 = s.into();</code>, but I need <code>into()</code> in statements. What is the correct use of <code>into</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1548825882, "post_id": 54433765, "comment_id": 95677037, "body": "What is <code>Funcmin</code>? The problem seems to be in there. Is it from here - <a href=\"https://github.com/noshu/rustimization\" rel=\"nofollow noreferrer\">github.com/noshu/rustimization</a>?"}, {"owner": {"reputation": 61601, "user_id": 1203556, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/aca772bc8ed79a86894211c7efd920aa?s=128&d=identicon&r=PG", "display_name": "Tampa", "link": "https://stackoverflow.com/users/1203556/tampa"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1548826138, "post_id": 54433765, "comment_id": 95677119, "body": "Yes from there I am trying to extend their logic because I need to pass more args"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1548829397, "post_id": 54433765, "comment_id": 95678220, "body": "And how <code>Funcmin</code> is suppose to know what to give as second argument to your function ?!? If <code>N</code> is not an argument but a constant, just capture it in the closure. Also, you should read the book."}], "answers": [{"tags": [], "owner": {"reputation": 1338, "user_id": 770110, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dae11b30544529b3c0836855a14cd653?s=128&d=identicon&r=PG", "display_name": "Vlad Patryshev", "link": "https://stackoverflow.com/users/770110/vlad-patryshev"}, "is_accepted": false, "score": 0, "last_activity_date": 1577867579, "creation_date": 1577867579, "answer_id": 59551024, "question_id": 54433765, "link": "https://stackoverflow.com/questions/54433765/how-to-pass-multiple-args-to-a-rust-closure-expected-closure-that-takes-1-argu/59551024#59551024", "title": "How to pass multiple args to a rust closure - expected closure that takes 1 argument", "body": "<p>This solution worked for me: declare </p>\n\n<p><code>fn fold(n: u32, init: u32, op: impl Fn(u32, u32) -&gt; u32) -&gt; u32 {...</code></p>\n\n<p>and call it as</p>\n\n<p><code>fold(n, 1, |x: u32, y: u32| -&gt; u32 {x + y })</code></p>\n"}], "owner": {"reputation": 61601, "user_id": 1203556, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/aca772bc8ed79a86894211c7efd920aa?s=128&d=identicon&r=PG", "display_name": "Tampa", "link": "https://stackoverflow.com/users/1203556/tampa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 751, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1577867579, "creation_date": 1548825752, "last_edit_date": 1569803144, "question_id": 54433765, "link": "https://stackoverflow.com/questions/54433765/how-to-pass-multiple-args-to-a-rust-closure-expected-closure-that-takes-1-argu", "title": "How to pass multiple args to a rust closure - expected closure that takes 1 argument", "body": "<p>I am new to closures and I don't understand why I am getting the following error.</p>\n\n<p>If I don't include the second argument its works:</p>\n\n<pre><code>fn obj_x(x: Vec&lt;f64&gt;) -&gt; f64 {\n    return 0.0;\n};\n\nlet f = |x: &amp;Vec&lt;f64&gt;| obj_x(x.to_vec());\n</code></pre>\n\n<p>Here is my closure:</p>\n\n<pre><code>fn foo() {\n    let f = |x: &amp;Vec&lt;f64&gt;, N: usize| obj_x(x.to_vec(), N);\n}\n\nfn obj_x(x: Vec&lt;f64&gt;, N: usize) -&gt; f64 {\n    let x = (x[0] + 4.0).powf(2.0);\n\n    return x;\n}\n\n</code></pre>\n\n<p>But unfortunately it fails</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0593]: closure is expected to take 1 argument, but it takes 2 arguments\n   --&gt; src/main.rs:120:44\n    |\n114 |     let f = |x: &amp;Vec&lt;f64&gt;, N: usize | obj_x(x.to_vec(),N);\n    |             ------------------------- takes 2 arguments\n...\n120 |         let mut fmin = Funcmin::new(&amp;mut x,&amp;f,&amp;g,\"cg\");\n    |                                            ^^ expected closure that takes 1 argument\n    |\n\n</code></pre>\n\n<p>Here is my full code:</p>\n\n<pre><code>fn obj_x(x: Vec&lt;f64&gt;, N: usize) -&gt; f64 {\n    let x = (x[0] + 4.0).powf(2.0);\n\n    return x;\n}\n\nfn gradient_x(x: Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt; {\n    return vec![2.0 * (x[0] + 4.0)];\n}\n\nfn test() {\n    let f = |x: &amp;Vec&lt;f64&gt;, &amp;N: usize| obj_x(x.to_vec(), N);\n    let g = |x: &amp;Vec&lt;f64&gt;| gradient_x(x.to_vec());\n    let mut x = vec![40.0f64];\n    let mut N = 2220;\n    {\n        //you must create a mutable object\n        let mut fmin = Funcmin::new(&amp;mut x, &amp;f, &amp;g, \"cg\");\n        fmin.minimize();\n    }\n    println!(\"{:?}\", x);\n}\n</code></pre>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1548818793, "post_id": 54432827, "comment_id": 95675410, "body": "<i>I don&#39;t really care about the <code>PINMODEx</code></i> \u2014 this cannot be true; if you truly didn&#39;t need to care about it, you wouldn&#39;t need to put it into your struct / trait / impl."}, {"owner": {"reputation": 4384, "user_id": 72637, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/Snqby.jpg?s=128&g=1", "display_name": "nraynaud", "link": "https://stackoverflow.com/users/72637/nraynaud"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548819136, "post_id": 54432827, "comment_id": 95675476, "body": "It&#39;s been imposed to me by the type definition of the pins, but I don&#39;t want to check it of follow up on it."}], "answers": [{"comments": [{"owner": {"reputation": 4384, "user_id": 72637, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/Snqby.jpg?s=128&g=1", "display_name": "nraynaud", "link": "https://stackoverflow.com/users/72637/nraynaud"}, "edited": false, "score": 0, "creation_date": 1548868928, "post_id": 54438065, "comment_id": 95701399, "body": "Thanks, that&#39;s an interesting direction, I&#39;ll check if I can avoid the bloat created by thing thing for every possible configuration of pins"}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 1, "last_activity_date": 1548855942, "last_edit_date": 1548855942, "creation_date": 1548843168, "answer_id": 54438065, "question_id": 54432827, "link": "https://stackoverflow.com/questions/54432827/how-to-designate-a-generic-type-as-dont-care/54438065#54438065", "title": "How to designate a generic type as &quot;don&#39;t care&quot;?", "body": "<p>If you want a default implementation for the <code>TimChannelsMapping</code> trait, you can create a default struct (<code>DefaultTimChannelsMapping</code>) or implement it for nothing <code>()</code>.</p>\n\n<pre><code>impl&lt;TIM&gt; TimChannelsMapping&lt;TIM&gt; for () {\n    const MAPPING: u8 = 0;\n}\n</code></pre>\n\n<p>Or if you want to abstract away the <code>None</code>s of your tuple, you can create a <code>Builder</code>.</p>\n\n<pre><code>pub struct PinBuilder(\n    Option&lt;PA8&lt;Alternate&lt;PINMODE1&gt;&gt;&gt;,\n    Option&lt;PA9&lt;Alternate&lt;PINMODE2&gt;&gt;&gt;,\n    Option&lt;PA10&lt;Alternate&lt;PINMODE3&gt;&gt;&gt;,\n    Option&lt;PA11&lt;Alternate&lt;PINMODE4&gt;&gt;&gt;,\n);\n\nimpl PinBuilder {\n    pub fn new() -&gt; Self {\n        Self(None, None, None, None)\n    }\n\n    pub fn pa8(mut self, pa8: Option&lt;PA8&lt;Alternate&lt;PINMODE1&gt;&gt;&gt;) -&gt; Self {\n        self.0 = pa8;\n        self\n    }\n\n    pub fn build(\n        self,\n    ) -&gt; (\n        Option&lt;PA8&lt;Alternate&lt;PINMODE1&gt;&gt;&gt;,\n        Option&lt;PA9&lt;Alternate&lt;PINMODE2&gt;&gt;&gt;,\n        Option&lt;PA10&lt;Alternate&lt;PINMODE3&gt;&gt;&gt;,\n        Option&lt;PA11&lt;Alternate&lt;PINMODE4&gt;&gt;&gt;,\n    ) {\n        (self.0, self.1, self.2, self.3)\n    }\n}\n\nfn main() {\n    let pins = PinBuilder::new().pa8(Some(a6)).build();\n}\n</code></pre>\n"}], "owner": {"reputation": 4384, "user_id": 72637, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/Snqby.jpg?s=128&g=1", "display_name": "nraynaud", "link": "https://stackoverflow.com/users/72637/nraynaud"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1548855942, "creation_date": 1548817736, "last_edit_date": 1548818498, "question_id": 54432827, "link": "https://stackoverflow.com/questions/54432827/how-to-designate-a-generic-type-as-dont-care", "title": "How to designate a generic type as &quot;don&#39;t care&quot;?", "body": "<p>I have a trait that designates allowed pin configurations for a microcontroller:</p>\n\n<pre><code>pub trait TimChannelsMapping&lt;TIM&gt;: Sized {\n    const MAPPING: u8;\n}\n</code></pre>\n\n<p>It is used this way:</p>\n\n<pre><code>//TIM1\nimpl&lt;PINMODE1, PINMODE2, PINMODE3, PINMODE4&gt; TimChannelsMapping&lt;TIM1&gt;\n    for (\n        Option&lt;PA8&lt;Alternate&lt;PINMODE1&gt;&gt;&gt;,\n        Option&lt;PA9&lt;Alternate&lt;PINMODE2&gt;&gt;&gt;,\n        Option&lt;PA10&lt;Alternate&lt;PINMODE3&gt;&gt;&gt;,\n        Option&lt;PA11&lt;Alternate&lt;PINMODE4&gt;&gt;&gt;,\n    )\n{\n}\n</code></pre>\n\n<p>The idea is that I implement only the configurations allowed for the microcontroller.</p>\n\n<p>I don't really care about the <code>PINMODEx</code>, and their presence makes the use of this trait complicated, because even for tuple slots whose value is <code>None</code>, I have to pass a mode which is quite ugly and complicated: </p>\n\n<pre><code>let pins = (Some(a6), Some(a7), Some(b0), None::&lt;PB1&lt;Alternate&lt;OpenDrain&gt;&gt;&gt;);\n</code></pre>\n\n<p>I'd like either to have a designation for \"don't care\" or a way to give a default value.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548799920, "post_id": 54429958, "comment_id": 95670810, "body": "You want <code>lisp!(include_str!(&quot;hello.lisp&quot;));</code>, not <code>include!</code>"}, {"owner": {"reputation": 286, "user_id": 3017856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aefe7f0063b67104bb76e3c23acc79ff?s=128&d=identicon&r=PG&f=1", "display_name": "Willem", "link": "https://stackoverflow.com/users/3017856/willem"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1548800044, "post_id": 54429958, "comment_id": 95670837, "body": "@Shepmaster That unfortunately produces the same error! <code>lisp!(...)</code>s calling convention looks like <code>lisp!(println &quot;{}&quot; 12)</code>, it does not take a string."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 7, "last_activity_date": 1548808545, "last_edit_date": 1548808545, "creation_date": 1548803054, "answer_id": 54430949, "question_id": 54429958, "link": "https://stackoverflow.com/questions/54429958/how-can-i-include-the-contents-of-a-file-as-an-argument-to-a-macro/54430949#54430949", "title": "How can I include the contents of a file as an argument to a macro?", "body": "<p>Unfortunately, what you want is not easy to achieve.</p>\n\n<p>Macros work significantly different than functions. The important part for this question is that <strong>\"nested macro calls\" are evaluated from \"outside to inside\"</strong> (unlike functions, where arguments are evaluated first, so \"inside to outside\"). We can see that in effect with this tiny program:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! foo {\n    ($x:literal) =&gt; { \"literal\" };\n    ($x:ident ! ()) =&gt; { \"ident ! ()\" };\n}\n\nmacro_rules! bar {\n    () =&gt; { 3 };\n}\n\nfn main() {\n    let s = foo!(bar!());\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>As you can see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f1fdc789becdf1b3086561833e0dfec9\" rel=\"noreferrer\">on the Playground</a>, it prints <code>ident ! ()</code>. That means the <code>bar!()</code> macro was not evaluated before <code>foo!</code> was evaluated. (Furthermore, the compiler even warns about the unused macro definition <code>bar</code>.)</p>\n\n<p><code>include!</code> is no exception to this, so we can't use it as an argument to other macros. So how <em>can</em> you do it? I can think of two ways, neither of which is particularly easy or elegant:</p>\n\n<ul>\n<li><p>Write a procedural macro that loads the file and emits the token stream <code>lisp! { ... }</code> where <code>...</code> is the file content. It could be tricky to get all the paths right (and to make sure everything is correctly recompiled when the lisp file changes), but it should in theory work.</p></li>\n<li><p>Use a build script to manually replace <code>include!(\"*.lisp\")</code> strings in your source code with the file content. Obviously, you don't actually want to modify your real source code (that is checked into git), but have to be a bit clever about it. A few crates use such a tactic, but only for very special reasons. I wouldn't advise to do this in your case.</p></li>\n</ul>\n\n<p>In your case, I would think twice whether using a lot of LISP code in Rust is a good idea, because there aren't any nice ways to make it work (as far as I can see). </p>\n"}], "owner": {"reputation": 286, "user_id": 3017856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aefe7f0063b67104bb76e3c23acc79ff?s=128&d=identicon&r=PG&f=1", "display_name": "Willem", "link": "https://stackoverflow.com/users/3017856/willem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 493, "favorite_count": 0, "answer_count": 1, "score": 6, "last_activity_date": 1548808582, "creation_date": 1548797735, "last_edit_date": 1548808582, "question_id": 54429958, "link": "https://stackoverflow.com/questions/54429958/how-can-i-include-the-contents-of-a-file-as-an-argument-to-a-macro", "title": "How can I include the contents of a file as an argument to a macro?", "body": "<p>I'm trying to implement a Lisp version of <a href=\"https://processing.org/\" rel=\"nofollow noreferrer\">Processing</a>, and to that end I'm employing the <a href=\"https://crates.io/crates/macro_lisp\" rel=\"nofollow noreferrer\"><code>macro_lisp</code></a> crate to turn Lisp code into Rust at compile time.</p>\n\n<p>It works when I structure my code like so:</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>fn main() {\n    include!(\"hello.lisp\");\n}\n</code></pre>\n\n<p><strong>hello.lisp</strong></p>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>lisp!(println \"hello\")\n</code></pre>\n\n<p>Note that I have to wrap the content of <code>hello.lisp</code> in <code>lisp!()</code>, in <code>hello.lisp</code> itself.</p>\n\n<p>I want it to be structured like so:</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>fn main() {\n    lisp!(include!(\"hello.lisp\"));\n}\n</code></pre>\n\n<p><strong>hello.lisp</strong></p>\n\n<pre><code>println \"hello\"\n</code></pre>\n\n<p>But this gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected expression, found `&lt;eof&gt;`\n  --&gt; src/main.rs:47:18\n   |\n47 |     lisp!(include!(\"draw.lisp\"));\n   |                  ^ expected expression\n</code></pre>\n\n<p>There should not be an EOF there, there should be <code>hello \"list\"</code>.</p>\n\n<p>What am I doing wrong? Do I need to patch <code>macro_lisp</code>?</p>\n"}, {"tags": ["rust", "pipe", "stderr"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548798787, "post_id": 54429389, "comment_id": 95670391, "body": "&quot;anything similar to dup2 from C/C++&quot;, 1. C/C++ is not a thing 2. <code>dup2()</code> is neither a function present in C or C++ standard library. 3. So as in C, your solution will be implementation behavior, thus I think you could find a crate that will do the job for you."}, {"owner": {"reputation": 342, "user_id": 5249205, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/f67119fe8c00d0533f1916962740a809?s=128&d=identicon&r=PG&f=1", "display_name": "Skarlett", "link": "https://stackoverflow.com/users/5249205/skarlett"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548799353, "post_id": 54429389, "comment_id": 95670605, "body": "@Stargateur - <a href=\"http://man7.org/linux/man-pages/man2/dup.2.html\" rel=\"nofollow noreferrer\">dup2</a> (in both C &amp; C++) is a function provided under unistd.h in the posix implementation. I know the implementation was wrong, which is what I asking for help with. Do you have any crates you&#39;d recommend? Might I also add your comment adds no real context to the conversation."}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1548802466, "post_id": 54429389, "comment_id": 95671516, "body": "I am unclear on what you are trying to do here. Are you trying to read the stderr of a child process, or read back what your own process is writing to stderr, or ...?"}, {"owner": {"reputation": 342, "user_id": 5249205, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/f67119fe8c00d0533f1916962740a809?s=128&d=identicon&r=PG&f=1", "display_name": "Skarlett", "link": "https://stackoverflow.com/users/5249205/skarlett"}, "reply_to_user": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1548802774, "post_id": 54429389, "comment_id": 95671611, "body": "@harmic I&#39;m attempting to read (or redirect) my own process&#39;s stderr pipe"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1548858324, "last_edit_date": 1548858324, "creation_date": 1548813692, "answer_id": 54432347, "question_id": 54429389, "link": "https://stackoverflow.com/questions/54429389/how-to-redirect-stderr-from-inside-the-process-in-rust/54432347#54432347", "title": "How to redirect stderr from inside the process in Rust?", "body": "<p>There is no way to do this in the standard library<sup>1</sup>. The <a href=\"https://crates.io/crates/gag\" rel=\"nofollow noreferrer\">gag crate</a> allows redirecting stderr or stdout either to a file or to nothing, but it only works on *nix systems.</p>\n\n<p>In a different view of the problem, I'd encourage you to <strong>not use stdout or stderr directly</strong> at all. Instead, use <em>dependency injection</em> to pass down values that can be written to. Instead of using <code>println</code>, use <code>writeln</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28370126/155423\">How can I test stdin and stdout?</a></li>\n</ul>\n\n<hr>\n\n<p><strong>1</strong> This isn't <em>strictly</em> true. Have you ever noticed that <a href=\"https://stackoverflow.com/q/25106554/155423\">stdout and stderr are not output during tests</a>? That's because the compiler (and the test suite) make use of <a href=\"https://github.com/rust-lang/rust/blob/1.32.0/src/libstd/io/stdio.rs#L622-L667\" rel=\"nofollow noreferrer\">a pair of unstable, hidden functions</a> that allow changing the thread-local instances of stdout and stderr.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25106554/155423\">Why doesn&#39;t println! work in Rust unit tests?</a></li>\n</ul>\n"}], "owner": {"reputation": 342, "user_id": 5249205, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/f67119fe8c00d0533f1916962740a809?s=128&d=identicon&r=PG&f=1", "display_name": "Skarlett", "link": "https://stackoverflow.com/users/5249205/skarlett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1884, "favorite_count": 0, "accepted_answer_id": 54432347, "answer_count": 1, "score": 3, "last_activity_date": 1548858324, "creation_date": 1548795137, "last_edit_date": 1548813758, "question_id": 54429389, "link": "https://stackoverflow.com/questions/54429389/how-to-redirect-stderr-from-inside-the-process-in-rust", "title": "How to redirect stderr from inside the process in Rust?", "body": "<p>I'm attempting redirect the <a href=\"https://doc.rust-lang.org/std/io/struct.Stderr.html\" rel=\"nofollow noreferrer\"><code>Stderr</code></a> file descriptor from inside the process, but there seems to be no implementations of it, and I don't see a clear route to anything similar to <code>dup2</code> from C/C++. </p>\n\n<p>I've tried:</p>\n\n<ul>\n<li>directly implementing <code>Read</code> (<code>impl Read for Stderr</code>), but it'd take an entire library of code to cover.</li>\n<li><p>consuming the data in the file descriptor, then into <code>File</code>, then into <code>ReadBuf</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait FDReader {\n    fn consume(&amp;mut self);\n}\n\nimpl FDReader for Stderr {\n    fn consume(&amp;mut self) {\n        let f = std::fs::File::from_raw_fd(self.as_raw_fd());\n        let mut extract = String::new();\n        BufReader::new(f).read_to_string(&amp;mut extract);\n    }\n}\n</code></pre>\n\n<p>I focused on <code>consume</code> due to the fact I didn't have to exactly return anything when I was testing my code, though this didn't work.</p></li>\n<li><p>since I'm running on a Linux system, and I don't plan to publish the code, I also considered redirecting <code>/proc/self/fd/2 -&gt; /dev/null</code> and then return the original pointer reference when I wanted to write to there. This was way over the top for this scope.</p></li>\n</ul>\n\n<p>I also <em>thought</em> about using <code>libc::dup2</code> directly - though I'm weary of it.</p>\n"}, {"tags": ["c", "rust"], "comments": [{"owner": {"reputation": 209, "user_id": 4111179, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/87a5bc8cb593050fce4c303417a31007?s=128&d=identicon&r=PG&f=1", "display_name": "Brian", "link": "https://stackoverflow.com/users/4111179/brian"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548789883, "post_id": 54428163, "comment_id": 95666657, "body": "My understanding is that the tag will come after the data fields, and <code>#[repr(C)]</code> for a enum only changes what integer type the tag is"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548790579, "post_id": 54428163, "comment_id": 95666981, "body": "I deleted my comments because I have only just realised what you are actually asking!"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548790694, "post_id": 54428163, "comment_id": 95667040, "body": "There <i>are</i> actually unions in rust, see <a href=\"https://doc.rust-lang.org/reference/items/unions.html\" rel=\"nofollow noreferrer\">the reference</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548790802, "post_id": 54428163, "comment_id": 95667085, "body": "@hellow OP knows that. He is saying that, somehow, his C unions are laid out exactly like a Rust enum so he wants to do the conversion directly."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548790860, "post_id": 54428163, "comment_id": 95667107, "body": "However, I think that a <code>union</code> is still the best fit. It can be mapped to an <code>enum</code> with practically zero overhead."}, {"owner": {"reputation": 209, "user_id": 4111179, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/87a5bc8cb593050fce4c303417a31007?s=128&d=identicon&r=PG&f=1", "display_name": "Brian", "link": "https://stackoverflow.com/users/4111179/brian"}, "edited": false, "score": 0, "creation_date": 1548790878, "post_id": 54428163, "comment_id": 95667116, "body": "I&#39;d rather not use a union here because they require unsafe blocks, although if there isn&#39;t any other way it may be the way I go."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1548790915, "post_id": 54428163, "comment_id": 95667129, "body": "You need unsafe blocks for FFI anyway..."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548792209, "post_id": 54428163, "comment_id": 95667650, "body": "Also worth mentioning that you can only use <code>Copy</code> types in a union with stable rust. To use non-copy types you have to use nightly with <code>#![feature(untagged_unions)]</code>"}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 0, "last_activity_date": 1548809182, "last_edit_date": 1548809182, "creation_date": 1548791014, "answer_id": 54428571, "question_id": 54428163, "link": "https://stackoverflow.com/questions/54428163/problem-converting-a-tagged-c-union-to-a-rust-enum-because-of-memory-layout/54428571#54428571", "title": "Problem converting a tagged C union to a Rust enum because of memory layout", "body": "<p>There is a <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2195-really-tagged-unions.md#guide-level-explanation\" rel=\"nofollow noreferrer\">RFC</a> that guarantees some layout when you use <code>#[repr(C, Int)]</code> on an enum that basically allows what you want. Note that, as always, Rust only does the best guess, and you should add tests for memory layout at compile time.</p>\n"}], "owner": {"reputation": 209, "user_id": 4111179, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/87a5bc8cb593050fce4c303417a31007?s=128&d=identicon&r=PG&f=1", "display_name": "Brian", "link": "https://stackoverflow.com/users/4111179/brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 279, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1548809182, "creation_date": 1548789277, "last_edit_date": 1548809132, "question_id": 54428163, "link": "https://stackoverflow.com/questions/54428163/problem-converting-a-tagged-c-union-to-a-rust-enum-because-of-memory-layout", "title": "Problem converting a tagged C union to a Rust enum because of memory layout", "body": "<p>I'm  trying to interact with a C event API structured like this:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct EventA {\n    int type;\n    int data1;\n    int data2;\n};\n\nstruct EventB {\n    int type;\n    int data1;\n};\n\nunion Event {\n    int type;\n    EventA eventA;\n    EventB eventB;\n};\n\n//grabs the next event from the queue.\nvoid pollEvent(Event *event); \n</code></pre>\n\n<p>In the C API, the <code>type</code> field is used to determine what type of event has occurred. This is essentially a tagged union, or what enums are in Rust. I know Rust allows you choose the underlying tag of the enum with <code>#[repr(type)]</code> however I believe Rust doesn't guarantee that the tag is the first field of the enum. (Or is its always the last field?) This makes it kinda gross when converting the API to Rust because I'd need some type of middleman structure to poll then match its type, convert it to a enum, then the user would match the enum. </p>\n\n<p>If I knew the tag was the first field of the enum, I know the enum and the union have the same memory representation, and I could just pass it as pointer.     </p>\n\n<p>What I'd like to do:</p>\n\n<pre><code>use::std::os::raw::c_int;\n\n#[repr(C)]\n#[derive(Copy, Clone)]\npub struct EventA {\n    pub data1: c_int,\n}\n\n#[repr(C)]\n#[derive(Copy, Clone)]\npub struct EventB {\n    pub data1: c_int,\n    pub data2: c_int,\n}\n\n#[repr(i32)] //I'm assuming c_int is 32 bit.\n#[derive(Copy, Clone)]\npub enum Event {\n    // &lt;---- Put the tag is here, followed the union memory, \n    A(EventA),\n    B(EventB),\n}\n\nextern {\n    pub fn pollEvents(*mut Event);\n}\n\npub fn poll_events(*mut Event) {\n    unsafe {\n        pollEvents(*mut Event);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548787617, "post_id": 54427539, "comment_id": 95665517, "body": "Perhaps one of these:   <a href=\"https://stackoverflow.com/questions/29401626/how-do-i-return-a-reference-to-something-inside-a-refcell-without-breaking-encap\" title=\"how do i return a reference to something inside a refcell without breaking encap\">stackoverflow.com/questions/29401626/&hellip;</a> <a href=\"https://stackoverflow.com/questions/51341643/returning-reference-from-refcell\" title=\"returning reference from refcell\">stackoverflow.com/questions/51341643/&hellip;</a>  <a href=\"https://stackoverflow.com/questions/30281664/how-do-i-borrow-a-refcellhashmap-find-a-key-and-return-a-reference-to-the-re\" title=\"how do i borrow a refcellhashmap find a key and return a reference to the re\">stackoverflow.com/questions/30281664/&hellip;</a>  <a href=\"https://stackoverflow.com/questions/25233925/cant-figure-out-a-function-to-return-a-reference-to-a-given-type-stored-in-refc\" title=\"cant figure out a function to return a reference to a given type stored in refc\">stackoverflow.com/questions/25233925/&hellip;</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548787760, "post_id": 54427539, "comment_id": 95665606, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/29401626/how-do-i-return-a-reference-to-something-inside-a-refcell-without-breaking-encap\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a>"}, {"owner": {"reputation": 300, "user_id": 6078395, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/f7d9c253e723f4b36f88228e268c489d?s=128&d=identicon&r=PG&f=1", "display_name": "CRefice", "link": "https://stackoverflow.com/users/6078395/crefice"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548787870, "post_id": 54427539, "comment_id": 95665677, "body": "I do not believe it is a duplicate: that question involves getting a reference from a single RefCell (which I already use in the code posted with my question), my question involves getting one from a RefCell chain"}], "owner": {"reputation": 300, "user_id": 6078395, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/f7d9c253e723f4b36f88228e268c489d?s=128&d=identicon&r=PG&f=1", "display_name": "CRefice", "link": "https://stackoverflow.com/users/6078395/crefice"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 245, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1548809981, "creation_date": 1548786846, "last_edit_date": 1548809981, "question_id": 54427539, "link": "https://stackoverflow.com/questions/54427539/how-to-get-a-mutable-reference-to-an-arbitrary-element-in-a-rcrefcellt-tree", "title": "How to get a mutable reference to an arbitrary element in a Rc&lt;RefCell&lt;T&gt;&gt; tree?", "body": "<p>I have a tree-like structure like the following:</p>\n\n<pre><code>use std::{cell::RefCell, collections::HashMap, rc::Rc};\n\nstruct Node&lt;T&gt; {\n    vals: HashMap&lt;String, T&gt;,\n    parent: Option&lt;Rc&lt;RefCell&lt;Node&lt;T&gt;&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>This is a chained hash map: each node contains a hash map and an (optional, as the root of the tree has no parent) shared pointer to its parent. Multiple children can share the same parent.</p>\n\n<p>If I want to get a clone of a value out of this chained hash map, I use recursion to walk up the tree, like so:</p>\n\n<pre><code>impl&lt;T&gt; Node&lt;T&gt; {\n    pub fn get(&amp;self, name: &amp;str) -&gt; Option&lt;T&gt; {\n        self.vals\n            .get(name)\n            .cloned()\n            .or_else(|| self.parent.as_ref().and_then(|p| p.borrow().get(name)))\n    }\n}\n</code></pre>\n\n<p>However, I need a mutable reference to an element contained in this tree. Since I cannot return a 'standard' mutable reference to an element, due to it being contained in a <code>RefCell,</code> I thought about using <code>RefMut</code> and the <code>RefMut::map</code> function to obtain one, like so:</p>\n\n<pre><code>use std::cell::RefMut;\n\nimpl&lt;T&gt; Node&lt;T&gt; {\n    pub fn get_mut&lt;'a&gt;(node: RefMut&lt;'a, Node&lt;T&gt;&gt;, name: &amp;str) -&gt; Option&lt;RefMut&lt;'a, T&gt;&gt; {\n        if node.vals.contains_key(name) {\n            Some(RefMut::map(node, |n| n.vals.get_mut(name).unwrap()))\n        } else {\n            node.parent.and_then(|p| Node::get_mut(p.borrow_mut(), name))\n        }\n    }\n}\n</code></pre>\n\n<p>This does not compile: the return value references its child node (due to it being also dependent on its child's borrow), and the <code>RefMut</code> pointing to the child goes out of scope at function exit:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing function parameter `p`\n  --&gt; src/lib.rs:16:31\n   |\n16 |                 .and_then(|p| Node::get_mut(p.borrow_mut(), name))\n   |                               ^^^^^^^^^^^^^^-^^^^^^^^^^^^^^^^^^^^\n   |                               |             |\n   |                               |             `p` is borrowed here\n   |                               returns a value referencing data owned by the current function\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:15:13\n   |\n15 |             node.parent\n   |             ^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I do not understand how I could go about getting something deferenceable out of this tree. I assume I might need a sort of \"<code>RefMut</code> chain\" in order to extend the lifetime of the child node <code>RefMut</code>, but wouldn't that also create multiple mutable references to (components of) the same <code>Node</code>?</p>\n\n<p>Alternatively, is there a way to get some sort of <code>Rc&lt;RefCell&gt;</code> pointing to one of the values in a node, as to avoid this sort of dependency chain? I really am stumped as to what to do.</p>\n\n<p>Please do not suggest passing a function to apply to the value with the given name rather than returning a reference, as that does not apply to my use case: I really do need just a mutable reference (or something allowing me to obtain one.)</p>\n\n<p>I do not believe that this is a duplicate of <a href=\"https://stackoverflow.com/questions/29401626/how-do-i-return-a-reference-to-something-inside-a-refcell-without-breaking-encap\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a>, as that answer only deals with returning a reference to a component of a value contained in a single <code>RefCell</code> (which I already do using <code>RefMut::map</code>). My problem involves a chain of <code>Rc&lt;RefCell&gt;</code>s, which that question does not address.</p>\n"}, {"tags": ["string", "rust"], "answers": [{"tags": [], "owner": {"reputation": 6718, "user_id": 5361130, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/206601a888686677c4a74c89d9a2920f?s=128&d=identicon&r=PG", "display_name": "ponury-kostek", "link": "https://stackoverflow.com/users/5361130/ponury-kostek"}, "is_accepted": true, "score": 7, "last_activity_date": 1548760035, "last_edit_date": 1548760035, "creation_date": 1548759779, "answer_id": 54419592, "question_id": 54419435, "link": "https://stackoverflow.com/questions/54419435/replace-the-first-occurrence-of-a-pattern-in-a-string/54419592#54419592", "title": "Replace the first occurrence of a pattern in a String", "body": "<p>Use <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.replacen\" rel=\"noreferrer\">replacen</a></p>\n\n<blockquote>\n  <p>Replaces first N matches of a pattern with another string.</p>\n  \n  <p>replacen creates a new String, and copies the data from this string\n  slice into it. While doing so, it attempts to find matches of a\n  pattern. If it finds any, it replaces them with the replacement string\n  slice at most count times.</p>\n</blockquote>\n\n<pre><code>let input = \"Life is Life\".to_string();\nlet output = input.replacen(\"Life\", \"My wife\", 1);\n\nassert_eq!(\"My wife is Life\", output);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6ed49516b4cb50320ecbcea987fc4728\" rel=\"noreferrer\">Rust Playground</a></p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 757, "favorite_count": 0, "accepted_answer_id": 54419592, "answer_count": 1, "score": 3, "last_activity_date": 1548799596, "creation_date": 1548759253, "last_edit_date": 1548799596, "question_id": 54419435, "link": "https://stackoverflow.com/questions/54419435/replace-the-first-occurrence-of-a-pattern-in-a-string", "title": "Replace the first occurrence of a pattern in a String", "body": "<p>I am trying to write a <code>replace_first()</code> function but I could not find the correct way to manage this.</p>\n\n<p>I have the following input:</p>\n\n<pre><code>let input = \"Life is Life\".to_string();\n</code></pre>\n\n<p>I want to replace such input to following romantic output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>My wife is Life\n</code></pre>\n\n<p>The <code>replace</code> function replaces all the occurrences. How can I implement the <code>replace_first</code> function so I can use it like following:</p>\n\n<pre><code>let input = \"Life is Life\".to_string();\nlet output = input.replace_first(\"Life\", \"My wife\");\nprintln!({}, output); // Expecting the output as \"My wife is life\"\n</code></pre>\n"}, {"tags": ["linux", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 4, "creation_date": 1548760506, "post_id": 54419346, "comment_id": 95649200, "body": "Please show what exact commands you are running and what exact messages they produce."}], "answers": [{"tags": [], "owner": {"reputation": 212, "user_id": 8216962, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mDnUk.png?s=128&g=1", "display_name": "Daedalus", "link": "https://stackoverflow.com/users/8216962/daedalus"}, "is_accepted": false, "score": -1, "last_activity_date": 1548764905, "last_edit_date": 1548764905, "creation_date": 1548764211, "answer_id": 54420884, "question_id": 54419346, "link": "https://stackoverflow.com/questions/54419346/rust-not-compiling-to-executable-in-linux/54420884#54420884", "title": "Rust not compiling to executable in Linux", "body": "<pre><code>cargo build\n</code></pre>\n\n<p>creates an executable file in target/debug/rust_bin\nThen just</p>\n\n<pre><code>./target/debug/hello_cargo # or .\\target\\debug\\hello_cargo.exe on Windows\n</code></pre>\n\n<p>to execute, or just</p>\n\n<pre><code>cargo run\n</code></pre>\n\n<p>PS: you need to create a Cargo.toml file with the appropriate data inside. </p>\n"}, {"comments": [{"owner": {"reputation": 549, "user_id": 10669139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19d3f400144916a9acfe0eed271211ed?s=128&d=identicon&r=PG&f=1", "display_name": "Avm-x", "link": "https://stackoverflow.com/users/10669139/avm-x"}, "edited": false, "score": 0, "creation_date": 1548766838, "post_id": 54420930, "comment_id": 95652985, "body": "It is executable, it can be executed in terminal <code>.&#47;file</code> but not from file manager(thunar xfce4), seems like file manager is not recognizing shared libraries and not executing them as other executables can be executed just from the file manager and produce same output from <code>file</code> commamd.  I found something related on launchpad.net <a href=\"https://bugs.launchpad.net/ubuntu/+source/shared-mime-info/+bug/1639531\" rel=\"nofollow noreferrer\">Shared libraries not being executed by file mamagers</a>"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "reply_to_user": {"reputation": 549, "user_id": 10669139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19d3f400144916a9acfe0eed271211ed?s=128&d=identicon&r=PG&f=1", "display_name": "Avm-x", "link": "https://stackoverflow.com/users/10669139/avm-x"}, "edited": false, "score": 0, "creation_date": 1548768154, "post_id": 54420930, "comment_id": 95653847, "body": "@Amiy &quot;seems like file manager is not recognizing shared libraries&quot;. No, this is not what happens here. The file is an executable and not a shared library. The bug reports talks about a bug/misconfiguration in the GUI. It thinks the file is a shared library, when it isn&#39;t. Nothing to do with rustc really."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "reply_to_user": {"reputation": 549, "user_id": 10669139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19d3f400144916a9acfe0eed271211ed?s=128&d=identicon&r=PG&f=1", "display_name": "Avm-x", "link": "https://stackoverflow.com/users/10669139/avm-x"}, "edited": false, "score": 0, "creation_date": 1548768805, "post_id": 54420930, "comment_id": 95654249, "body": "@Amiy Apparently this is a common bug. On my machine I cannot run <i>any</i> executable from a file manager. I never use a file manager so I wouldn&#39;t have discovered it on my own."}, {"owner": {"reputation": 549, "user_id": 10669139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19d3f400144916a9acfe0eed271211ed?s=128&d=identicon&r=PG&f=1", "display_name": "Avm-x", "link": "https://stackoverflow.com/users/10669139/avm-x"}, "edited": false, "score": 0, "creation_date": 1548769699, "post_id": 54420930, "comment_id": 95654814, "body": "<code>RUSTFLAGS=&quot;-C relocation-model=dynamic-no-pic link-args=-no-pie&quot; cargo build </code>produces an executable.And <code>gcc -no-pie src.c</code> for gcc .I generally use vim or nano but I just tried today to execute it from file manager and it didn&#39;t.As I was thinking that if I give the binary to someone else they won&#39;t be able to execute it without opening terminal.This happens also with programmes compiled with GCC whether I use <code>-no-pie</code> option or not.So The problem is with GUI file managers."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "reply_to_user": {"reputation": 549, "user_id": 10669139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19d3f400144916a9acfe0eed271211ed?s=128&d=identicon&r=PG&f=1", "display_name": "Avm-x", "link": "https://stackoverflow.com/users/10669139/avm-x"}, "edited": false, "score": 0, "creation_date": 1548771955, "post_id": 54420930, "comment_id": 95656321, "body": "@Amiy if you give your program to someone and you expect them to use GUI, you should also give them a .desktop file and an icon anyway."}], "tags": [], "owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1548771996, "last_edit_date": 1548771996, "creation_date": 1548764380, "answer_id": 54420930, "question_id": 54419346, "link": "https://stackoverflow.com/questions/54419346/rust-not-compiling-to-executable-in-linux/54420930#54420930", "title": "Rust not compiling to executable in Linux", "body": "<ol>\n<li>Your compiler produces an executable file. There is no big difference between a shared library and a dynamically linked executable file. They follow the same basic format. The string <code>interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0</code> indicates that this is an executable and not a library. Libraries don't normally have an interpreter set. Try running <code>file</code> on some files you know are executables, and some other files you know are libraries, and see for yourself. An interpreter is usually a small system program that loads and executes a shared object. A file can actually serve as both a library and an executable at the same time (the most common example is your <code>libc.so.6</code> or whatever it is called on your system; try running it).</li>\n<li>If you can run this executable from your shell but not from your file manager, the problem is with the file manager, not with the executable. You may have to specifically instruct the file manager that your program should run in a terminal. This usually can be done by creating a .desktop file that describes your program. In addition, desktop tools may mis-recognise modern executables as shared libraries. <a href=\"https://gitlab.freedesktop.org/xdg/shared-mime-info/issues/11\" rel=\"noreferrer\">This</a> is a common problem. It too can be remedied by creating a .desktop file for your executable. It is not specific to rust in any way. </li>\n</ol>\n\n<p>Bottom line, there's nothing wrong with <code>rustc</code> or <code>cargo</code> or the way you are running them.</p>\n"}, {"tags": [], "owner": {"reputation": 783, "user_id": 1096654, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9l8Zx.png?s=128&g=1", "display_name": "Marcel Blanck", "link": "https://stackoverflow.com/users/1096654/marcel-blanck"}, "is_accepted": false, "score": 0, "last_activity_date": 1548764822, "last_edit_date": 1548764822, "creation_date": 1548764484, "answer_id": 54420960, "question_id": 54419346, "link": "https://stackoverflow.com/questions/54419346/rust-not-compiling-to-executable-in-linux/54420960#54420960", "title": "Rust not compiling to executable in Linux", "body": "<p>When you create your project initially you can simply use cargo new (or init) to get the right type</p>\n\n<pre><code>cargo new my_project_name\n# OR create a lib project\ncargo new --lib my_library_name\n</code></pre>\n\n<p>when you use rustc you can use a command-line option</p>\n\n<pre><code>rustc lib.rs\n# lib.rs has to contain a main function\n# OR to build a lib\nrustc --crate-type=lib lib.rs\n</code></pre>\n\n<p>Your finding about shared object is misleading your error hunt: <a href=\"https://askubuntu.com/questions/690631/executables-vs-shared-objects\">https://askubuntu.com/questions/690631/executables-vs-shared-objects</a> - it's not a problem, an executable can be a shared object.</p>\n\n<p>I think in your case the problem is another. What does you binary do? Does basically just print something via stdout and that's it? Maybe this is the reason why double clicking in the gui file browser does not show you anything, it runs a millisecond and is over before you know it.</p>\n\n<p>Have you tried waiting for input at the end of the main function? Just so that the user can read the output and hit Return key.</p>\n\n<pre><code>use std::io;\nfn main() {\n    // do and print stuff\n\n    // Wait for return key\n    let mut input = String::new();\n    match io::stdin().read_line(&amp;mut input);\n}\n</code></pre>\n\n<p>Not sure how thunar will deal with it but eventually he will open a terminal and show the result and close the terminal when enter is pressed.</p>\n"}], "owner": {"reputation": 549, "user_id": 10669139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19d3f400144916a9acfe0eed271211ed?s=128&d=identicon&r=PG&f=1", "display_name": "Avm-x", "link": "https://stackoverflow.com/users/10669139/avm-x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1946, "favorite_count": 0, "accepted_answer_id": 54420930, "answer_count": 3, "score": 1, "last_activity_date": 1559760777, "creation_date": 1548758954, "last_edit_date": 1559760777, "question_id": 54419346, "link": "https://stackoverflow.com/questions/54419346/rust-not-compiling-to-executable-in-linux", "title": "Rust not compiling to executable in Linux", "body": "<p>Compiling rust on Linux with <code>rustc</code> or <code>cargo build</code> produces a shared library instead of an executable file.<br>\nMy file manager (thunar) and <code>file</code> command show that file type as shared library.</p>\n\n<p>And the compiled binary can only be executed via terminal by <code>$ /path/to/file</code> or <code>$ cargo run</code>.<br>\nThat file cannot be executed just by double clicking as other executables can be.<br>\nOutput from <code>file</code> command:</p>\n\n<p><code>$ file rust_bin</code></p>\n\n<blockquote>\n  <p>rust_bin: ELF 64-bit LSB shared object, x86_64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=cb8cd... , with debug_info, not stripped`</p>\n</blockquote>\n"}, {"tags": ["vector", "rust", "iterator", "slice"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1548740569, "post_id": 54414210, "comment_id": 95639189, "body": "I don&#39;t see the problem."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 4, "creation_date": 1548745126, "post_id": 54414210, "comment_id": 95640802, "body": "You could create a vector of slices or write/use a strided array type. <i>Is there a better way?</i> is a rather open question. Can you specify why this approach is not good enough?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548751455, "post_id": 54414210, "comment_id": 95643695, "body": "The question is way to broad. I guess that the real question is: what is the best way to represent a 2D vector? The solution, IMHO, it to wrap a single vector and to add some methods to abstract it as being 2D."}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1548759607, "post_id": 54414210, "comment_id": 95648662, "body": "You will have N + 2 allocations, with N being the number of elements of <code>v_chuncked</code>. You can have only 2 allocations by returning Vec&lt;[i32; 3]&gt; instead of Vec&lt;Vec&lt;i32&gt;&gt;. See <a href=\"https://godbolt.org/z/4Z2iww\" rel=\"nofollow noreferrer\">godbolt.org/z/4Z2iww</a>."}, {"owner": {"reputation": 733, "user_id": 7061703, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e0c5bf45cdd05865a0f0111981adfdc?s=128&d=identicon&r=PG&f=1", "display_name": "ryn1x", "link": "https://stackoverflow.com/users/7061703/ryn1x"}, "edited": false, "score": 0, "creation_date": 1548957337, "post_id": 54414210, "comment_id": 95740968, "body": "As a new Rust user I gravitated towards defining my struct with a vec of vecs because I don\u2019t know the exact size of the collection to be chunked into it at compile time. I do know it will have millions of elements and I need to perform this hundreds of times though. I will explore the vec of slices approach. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1590567795, "last_edit_date": 1590567795, "creation_date": 1548762286, "answer_id": 54420325, "question_id": 54414210, "link": "https://stackoverflow.com/questions/54414210/efficiently-chunk-large-vector-into-a-vector-of-vectors/54420325#54420325", "title": "Efficiently chunk large vector into a vector of vectors", "body": "<p>If a <code>Vec&lt;Vec&lt;i32&gt;&gt;</code> is what you really want then this is a pretty good way of doing it. Any other approach (excluding <code>unsafe</code> code, see below) is unlikely to be significantly faster or use noticeably less memory. Regardless of the actual code, each nested <code>Vec</code> is a new memory allocation and all the data will be need to copied - and that's essentially all that your code does.</p>\n\n<p>A more \"Rusty\" way to represent a 2D structure like this is a <code>Vec</code> of slices into the original data. That way you don't do any copying and no new allocations.</p>\n\n<pre><code>let v_slices: Vec&lt;&amp;[i32]&gt; = v.chunks(3).collect();\n\nprintln!(\"{:?}\", v_slices); // [[1, 1, 1], [2, 2, 2], [3, 3, 3]]\n</code></pre>\n\n<hr>\n\n<p><sub><strong>Edit:</strong> I did have an <a href=\"https://stackoverflow.com/revisions/54420325/5\">extra bit</a> here with some <code>unsafe</code> code that would transform a <code>Vec&lt;i32&gt;</code> into a <code>Vec&lt;Vec&lt;i32&gt;&gt;</code> without reallocating. However, it has been pointed out that it still has Undefined Behaviour, and that the problem is fundamentally <a href=\"https://i.stack.imgur.com/aa0hy.png\" rel=\"nofollow noreferrer\">not fixable</a></sub></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1590582738, "creation_date": 1590582738, "answer_id": 62043223, "question_id": 54414210, "link": "https://stackoverflow.com/questions/54414210/efficiently-chunk-large-vector-into-a-vector-of-vectors/62043223#62043223", "title": "Efficiently chunk large vector into a vector of vectors", "body": "\n\n<p>With the help of the comments, I found storing the data as a 1D <code>Vec</code> to be much more efficient. Then to deal with it conveniently I use <code>chunks</code> and work with the <code>Vec</code> of slices as needed within the function bodies using the data.</p>\n"}], "owner": {"reputation": 733, "user_id": 7061703, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e0c5bf45cdd05865a0f0111981adfdc?s=128&d=identicon&r=PG&f=1", "display_name": "ryn1x", "link": "https://stackoverflow.com/users/7061703/ryn1x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2992, "favorite_count": 0, "accepted_answer_id": 54420325, "answer_count": 2, "score": 4, "last_activity_date": 1590582738, "creation_date": 1548738682, "last_edit_date": 1590582715, "question_id": 54414210, "link": "https://stackoverflow.com/questions/54414210/efficiently-chunk-large-vector-into-a-vector-of-vectors", "title": "Efficiently chunk large vector into a vector of vectors", "body": "<p>I want to chunk a large vector into a vector of vectors. I know about <code>chunks()</code>, but am not sure of the best way to go from the iterator to a 2D <code>Vec</code>. I have found the following to work, but is there a better way to write this?</p>\n\n<pre><code>let v: Vec&lt;i32&gt; = vec![1, 1, 1, 2, 2, 2, 3, 3, 3];\nlet v_chunked: Vec&lt;Vec&lt;i32&gt;&gt; = v.chunks(3).map(|x| x.to_vec()).collect();\n\nprintln!(\"{:?}\", v_chunked); // [[1, 1, 1], [2, 2, 2], [3, 3, 3]]\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5031d4d0e43470242b8304d483967a25\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5031d4d0e43470242b8304d483967a25</a></p>\n\n<p>An operation similar to this is one of the slowest parts of my program after profiling and I was wondering how to improve it.</p>\n"}, {"tags": ["rust", "interpreter", "ctfe", "rust-compiler-plugin"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1548720509, "post_id": 54411824, "comment_id": 95634885, "body": "&quot;a much-wanted feature&quot;, really? Who wants that? Why do <i>you</i> want that? Miri serves a completely different purpose. I&#39;m afraid you should not try to pursue this goal. You wouldn&#39;t want to interpret C or C++ would you?"}, {"owner": {"reputation": 436, "user_id": 3137180, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/vWlsj.jpg?s=128&g=1", "display_name": "jundl77", "link": "https://stackoverflow.com/users/3137180/jundl77"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1548720893, "post_id": 54411824, "comment_id": 95634977, "body": "Well if you do google, you will find quite a few people who have been asking for this, and it does exist in many other languages, too.   I cannot tell you why others want that, it does seem a bit weird doesn&#39;t it. My use case is very much an edge-case, but I would like to be able to send any sort of rust code to a server and execute it at runtime, that is my use-case."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1548786421, "post_id": 54411824, "comment_id": 95664896, "body": "Many (most?) of the popular languages that support &quot;eval&quot; are interpreted languages. Most compiled languages either do not offer support for eval at all or via a vastly more complicated api than simply <code>eval(string)</code>."}, {"owner": {"reputation": 436, "user_id": 3137180, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/vWlsj.jpg?s=128&g=1", "display_name": "jundl77", "link": "https://stackoverflow.com/users/3137180/jundl77"}, "edited": false, "score": 1, "creation_date": 1548800588, "post_id": 54411824, "comment_id": 95670994, "body": "Well both scala and haskell offer this, and I&#39;m sure there is more - but they both also have a REPL."}], "answers": [{"comments": [{"owner": {"reputation": 436, "user_id": 3137180, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/vWlsj.jpg?s=128&g=1", "display_name": "jundl77", "link": "https://stackoverflow.com/users/3137180/jundl77"}, "edited": false, "score": 0, "creation_date": 1548721081, "post_id": 54412089, "comment_id": 95635008, "body": "I thought rust didn&#39;t really have a CTFE? Or does it? I looked into Miri, but this seems really a very hacky solution. I can also just call rustc from rust itself, isn&#39;t there something a little cleaner?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 436, "user_id": 3137180, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/vWlsj.jpg?s=128&g=1", "display_name": "jundl77", "link": "https://stackoverflow.com/users/3137180/jundl77"}, "edited": false, "score": 2, "creation_date": 1548721283, "post_id": 54412089, "comment_id": 95635054, "body": "@jundl77 CTFE is still nascent, certainly. Certain abilities are available (for example, <a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicUsize.html#method.new\" rel=\"nofollow noreferrer\"><code>AtomicUsize::new</code></a> is a <code>const fn</code>) and others are not."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1548720524, "creation_date": 1548720524, "answer_id": 54412089, "question_id": 54411824, "link": "https://stackoverflow.com/questions/54411824/how-do-i-interpret-or-otherwise-evaluate-rust-at-runtime/54412089#54412089", "title": "How do I interpret or otherwise evaluate Rust at runtime?", "body": "<p><a href=\"https://github.com/solson/miri\" rel=\"nofollow noreferrer\">Miri</a> (short for <strong>MIR</strong> <strong>I</strong>nterpreter) is the de-facto interpreter of Rust code. It is what powers the compile-time function evaluation inside of rustc, the Rust compiler, but Miri is more featureful than what is currently used by compiler.</p>\n\n<p>For experimentation purposes, Miri is also available in the Rust playground. It can be used to evaluate a particular run of a program, detecting if certain types of undefined behavior exist.</p>\n\n<p>Miri does <strong>not</strong> provide a Rust REPL, but it may be <a href=\"https://github.com/solson/miri/issues/511\" rel=\"nofollow noreferrer\">part of creating such a tool</a>.</p>\n"}], "owner": {"reputation": 436, "user_id": 3137180, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/vWlsj.jpg?s=128&g=1", "display_name": "jundl77", "link": "https://stackoverflow.com/users/3137180/jundl77"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 816, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1549576419, "creation_date": 1548718417, "last_edit_date": 1548720281, "question_id": 54411824, "link": "https://stackoverflow.com/questions/54411824/how-do-i-interpret-or-otherwise-evaluate-rust-at-runtime", "title": "How do I interpret or otherwise evaluate Rust at runtime?", "body": "<p>I've been searching, and while this seems to be a much-wanted feature, all search results seem to be at least one year old.</p>\n\n<p>What is the current state of this? Is there a good solution to evaluating arbitrary Rust code at runtime (like Haskell's <a href=\"http://hackage.haskell.org/package/hint\" rel=\"nofollow noreferrer\">hint</a>)?</p>\n\n<p>Maybe something can be done with <a href=\"https://github.com/solson/miri\" rel=\"nofollow noreferrer\">Miri</a>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 1, "creation_date": 1548711088, "post_id": 54410511, "comment_id": 95632144, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25818082/vector-of-objects-belonging-to-a-trait\">Vector of objects belonging to a trait</a> (+ notice <a href=\"https://stackoverflow.com/questions/25818082/vector-of-objects-belonging-to-a-trait#comment94219043_25819164\">this comment</a>)."}, {"owner": {"reputation": 85078, "user_id": 31610, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/20571f32acd27d2cf5f1b1f42ea1a75b?s=128&d=identicon&r=PG", "display_name": "Geo", "link": "https://stackoverflow.com/users/31610/geo"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548711266, "post_id": 54410511, "comment_id": 95632225, "body": "@AndreyTyukin I was using that post to make some changes to mine. Made me realize some things that I was doing wrong."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 1, "creation_date": 1548711338, "post_id": 54410511, "comment_id": 95632251, "body": "is it still wrong, or has the problem resolved itself after the dozen of edits? ;) Your code is still not exactly an <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> because of the omitted code <code>...</code>. You could have copy-pasted the method signatures and replaced the irrelevant implementations by <code>unimplemented!()</code> to make it compile (or rather, &quot;not compile&quot;, but in the interesting way). Or just skip some of the methods from the <code>trait</code> altogether..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548711397, "post_id": 54410511, "comment_id": 95632273, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54410511/edit\">edit</a> your question to include it. There are numerous types and functions that are missing, which makes reproducing your error message impossible without a lot of guessing. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 85078, "user_id": 31610, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/20571f32acd27d2cf5f1b1f42ea1a75b?s=128&d=identicon&r=PG", "display_name": "Geo", "link": "https://stackoverflow.com/users/31610/geo"}, "edited": false, "score": 0, "creation_date": 1548711872, "post_id": 54410511, "comment_id": 95632454, "body": "Added the link, sorry you guys had to guess."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548712385, "post_id": 54410511, "comment_id": 95632653, "body": "@Geo That&#39;s a great MCVE. But now I ask myself how you would want to use it? Even if you somehow managed to store them in the same <code>Vec</code>, what would you do with the <code>Output</code>s of unknown type?"}, {"owner": {"reputation": 85078, "user_id": 31610, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/20571f32acd27d2cf5f1b1f42ea1a75b?s=128&d=identicon&r=PG", "display_name": "Geo", "link": "https://stackoverflow.com/users/31610/geo"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548713044, "post_id": 54410511, "comment_id": 95632880, "body": "@AndreyTyukin It&#39;s very possible I&#39;m still trying to write Java in Rust :). In the original implementation, I was actually using a HashMap of String to ValidatedCommand, as I wanted the String to be sent by the user, lookup the command and run it. I thought that for example purposes, once I&#39;d know how to do it with a Vec, I&#39;d be able to adapt the same for the HashMap."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548714085, "post_id": 54410511, "comment_id": 95633188, "body": "@Geo Again, assuming that you can store it in the <code>Vec</code> and <code>run</code> it: the function signature of <code>run</code> is <code>run&lt;&#39;a&gt;(&amp;mut self, matches: &amp;&#39;a ArgMatches) -&gt; Result&lt;Self::Output, ...&gt;</code>, so it will give you a <code>Self::Output</code>. What do you want to do with it once you get it? It&#39;s &quot;something&quot; of an unknown type, of unknown size. You can&#39;t even cast it to anything meaningfully. Are you sure that you wanted <code>dyn Trait</code>s with associated types and not a simple <code>enum</code>?"}, {"owner": {"reputation": 85078, "user_id": 31610, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/20571f32acd27d2cf5f1b1f42ea1a75b?s=128&d=identicon&r=PG", "display_name": "Geo", "link": "https://stackoverflow.com/users/31610/geo"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548715201, "post_id": 54410511, "comment_id": 95633532, "body": "@AndreyTyukin I&#39;m not sure I want <code>dyn Trait</code>, I was just trying to create the code ( and learn some Rust in the process ) from examples and articles I found online. Basically, I just want to have a set of commands that have something in common, and each could return a different type as the Ok branch of the Result."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548715718, "post_id": 54410511, "comment_id": 95633702, "body": "@Geo Since you mentioned Java: on the JVM, the easiest way to do something like what you described in a type safe way would be using <code>case class</code>es in Scala. In Rust, that would correspond to the <code>enum</code> types. I&#39;d suggest to take a closer look at Rust <code>enum</code>s and algebraic data types in general: people coming from Java / Python often seem to miss this feature."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548766646, "post_id": 54410511, "comment_id": 95652855, "body": "Another way to see it: You wanted something like <code>Vec&lt;Box&lt;dyn Trait&lt;Assoc = _&gt;&gt;&gt;</code> with an unspecified associated type. This roughly corresponds to wildcard parameters in Java generics, which in turn corresponds to existential type, which is, from type-theory point of view, something like an <i>infinite</i> sum type indexed by all possible types. In contrast, <code>enum</code>s roughly correspond to a <i>finite</i> sum of the listed cases. So, my proposal would be: whenever you feel like you want to have a &quot;wildcard&quot; in the type, consider replacing it with an <code>enum</code> (i.e. replace &quot;infinite sum&quot; by &quot;finite sum&quot;)."}], "owner": {"reputation": 85078, "user_id": 31610, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/20571f32acd27d2cf5f1b1f42ea1a75b?s=128&d=identicon&r=PG", "display_name": "Geo", "link": "https://stackoverflow.com/users/31610/geo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1344, "favorite_count": 0, "closed_date": 1548711296, "answer_count": 0, "score": 1, "last_activity_date": 1548712095, "creation_date": 1548710779, "last_edit_date": 1548712095, "question_id": 54410511, "link": "https://stackoverflow.com/questions/54410511/vec-of-objects-implementing-generic-trait", "closed_reason": "Duplicate", "title": "Vec of objects implementing generic trait", "body": "<p>I am building a command-line application. I have the following trait:</p>\n\n<pre><code>trait ValidatedCommand {\n    type Output;\n    fn run() -&gt; Result&lt;Self::Output, std::io::Error&gt;;\n}\n</code></pre>\n\n<p>and I have the following two implementations for it:</p>\n\n<pre><code>struct First;\nimpl ValidatedCommand for First {\n    type Output = i32;\n    fn run() -&gt; Result&lt;i32, std::io::Error&gt; {\n        Ok(1)\n    }\n}\nimpl First {\n    fn new() -&gt; First {\n        First {}\n    }\n}\n\nstruct Second;\nimpl ValidatedCommand for Second {\n    type Output = String;\n    fn run() -&gt; Result&lt;String, std::io::Error&gt; {\n        Ok(String::from(\"hello\"))\n    }\n}\nimpl Second {\n    fn new() -&gt; Second {\n        Second {}\n    }\n}\n</code></pre>\n\n<p>Both structs implement the trait, one returning a <code>String</code> and the other an <code>i32</code>.</p>\n\n<p>I'm trying to create a <code>Vec</code> of that trait, but I'm not sure how to go about it. I tried the following:</p>\n\n<pre><code>fn main() {\n    let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3a99f261b7ae6b3b8cbba6f53c0921a7\" rel=\"nofollow noreferrer\">playground</a>.</p>\n\n<p>which errors with </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0191]: the value of the associated type `Output` (from the trait `ValidatedCommand`) must be specified\n  --&gt; src/main.rs:33:23\n   |\n2  |     type Output;\n   |     ------------ `Output` defined here\n...\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                       ^^^^^^^^^^^^^^^^^^^^ associated type `Output` must be specified\n\nerror[E0277]: the size for values of type `dyn ValidatedCommand` cannot be known at compilation time\n  --&gt; src/main.rs:33:19\n   |\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn ValidatedCommand`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required by `std::vec::Vec`\n\nerror[E0038]: the trait `ValidatedCommand` cannot be made into an object\n  --&gt; src/main.rs:33:19\n   |\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidatedCommand` cannot be made into an object\n   |\n   = note: method `run` has no receiver\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:33:52\n   |\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                                                    ^^^^^^^^^^^^ expected trait ValidatedCommand, found struct `First`\n   |\n   = note: expected type `dyn ValidatedCommand`\n              found type `First`\n\nerror[E0277]: the size for values of type `dyn ValidatedCommand` cannot be known at compilation time\n  --&gt; src/main.rs:33:47\n   |\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn ValidatedCommand`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required by `std::slice::&lt;impl [T]&gt;::into_vec`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\nerror[E0277]: the size for values of type `dyn ValidatedCommand` cannot be known at compilation time\n  --&gt; src/main.rs:33:47\n   |\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn ValidatedCommand`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: slice and array elements must have `Sized` type\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\nerror[E0038]: the trait `ValidatedCommand` cannot be made into an object\n  --&gt; src/main.rs:33:47\n   |\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidatedCommand` cannot be made into an object\n   |\n   = note: method `run` has no receiver\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\nerror[E0277]: the size for values of type `dyn ValidatedCommand` cannot be known at compilation time\n  --&gt; src/main.rs:33:47\n   |\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn ValidatedCommand`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required by `std::vec::Vec`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\nerror[E0038]: the trait `ValidatedCommand` cannot be made into an object\n  --&gt; src/main.rs:33:47\n   |\n33 |     let commands: Vec&lt;dyn ValidatedCommand&gt; = vec![First::new(), Second::new()];\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidatedCommand` cannot be made into an object\n   |\n   = note: method `run` has no receiver\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\n</code></pre>\n\n<p>I am thinking that maybe there is a way to make use of the associated type, but I have no idea how I might go about it. </p>\n\n<p>Is there a way to get this vector creation to compile?</p>\n"}, {"tags": ["rust", "rust-cargo"], "owner": {"reputation": 865, "user_id": 318902, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bd1abbefb37e6a91831bbc1ac7279456?s=128&d=identicon&r=PG", "display_name": "jhfrontz", "link": "https://stackoverflow.com/users/318902/jhfrontz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1548711705, "creation_date": 1548710688, "last_edit_date": 1548711705, "question_id": 54410491, "link": "https://stackoverflow.com/questions/54410491/can-i-make-cargo-ignore-cargo-config-in-enclosing-directories", "title": "Can I make Cargo ignore .cargo/config in enclosing directories?", "body": "<p>The default behavior is for Cargo to <a href=\"https://doc.rust-lang.org/cargo/reference/config.html\" rel=\"nofollow noreferrer\">search for <code>.cargo/config</code> files all the way to the root of the system</a>.</p>\n\n<p>Is there some way that I can define a boundary for the probe?  For example,  I don't want a lower-level directory to use vendored source that the encapsulating project wants to use. Instead, I want the lower-level invocation to use the default for <code>[source.crates-io]</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/46649992/155423\">Where can I find .cargo/config?</a></li>\n</ul>\n"}, {"tags": ["rust", "rust-actix"], "owner": {"reputation": 1067, "user_id": 108542, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/c4a295916a95dcda3522fb98701c51bd?s=128&d=identicon&r=PG", "display_name": "trolle3000", "link": "https://stackoverflow.com/users/108542/trolle3000"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 190, "favorite_count": 2, "answer_count": 0, "score": 2, "last_activity_date": 1548708507, "creation_date": 1548707930, "last_edit_date": 1548708507, "question_id": 54409959, "link": "https://stackoverflow.com/questions/54409959/how-to-build-an-actix-web-testserver-with-state-and-a-factory", "title": "How to build an Actix Web TestServer with state and a factory?", "body": "<p>In the <a href=\"https://github.com/actix/actix-website/blob/master/content/docs/testing.md\" rel=\"nofollow noreferrer\">actix-web documentation</a>, there are two examples on how to build a <a href=\"https://docs.rs/actix-web/0.7.18/actix_web/test/struct.TestServer.html\" rel=\"nofollow noreferrer\"><code>TestServer</code></a> with either a <strong>factory function</strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_web::{http, test, App, HttpRequest, HttpResponse};\n// ...\n\nfn main() {\n    let mut srv = test::TestServer::with_factory(create_app);\n    // ...\n}\n</code></pre>\n\n<p>or with application <strong>state</strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn test() {\n    let srv = TestServer::build_with_state(|| {\n    // ...\n    });\n\n    // run tests\n}\n</code></pre>\n\n<p>I would like to build a <code>TestServer</code> with state <strong>and</strong> using a factory function, but haven't been successful so far.</p>\n\n<p>How can this be accomplished?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "edited": false, "score": 0, "creation_date": 1548708341, "post_id": 54410006, "comment_id": 95630967, "body": "The problem is that I don&#39;t need <code>v_escape_derive-0.2.1</code> directly (I don&#39;t use it), it was imported through another package (you can see the problem is in <code>lib.rs</code> file which is an inner file of <code>v_escape_derive-0.2.1</code>). Do you still think it&#39;s a good idea to change the source code of that package?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "edited": false, "score": 0, "creation_date": 1548708444, "post_id": 54410006, "comment_id": 95631013, "body": "@JamesLarkin that&#39;s how dependencies work. If a package you use uses a package, then you must compile both packages. Fixing the upstream package is the only solution."}, {"owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "edited": false, "score": 0, "creation_date": 1548708773, "post_id": 54410006, "comment_id": 95631152, "body": "Well, is there a way to make my package import the latest version of <code>v_escape_derive</code> package which is <code>0.4.0</code> now (v_escape_derive = &quot;0.4.0&quot;)? One interesting thing is that that repo compiles on my home computer w/o any errors (and I can see that error on my desktop at work)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "edited": false, "score": 1, "creation_date": 1548709010, "post_id": 54410006, "comment_id": 95631267, "body": "@JamesLarkin sounds like you either haven&#39;t committed your <a href=\"https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html\" rel=\"nofollow noreferrer\">Cargo.lock</a> file or your compiler versions are drastically different. A tool like <a href=\"https://github.com/sfackler/cargo-tree\" rel=\"nofollow noreferrer\">cargo tree</a> can show you what is bringing in the old version."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1548708874, "last_edit_date": 1548708874, "creation_date": 1548708195, "answer_id": 54410006, "question_id": 54409928, "link": "https://stackoverflow.com/questions/54409928/how-to-fix-use-of-extern-prelude-names-introduced-with-extern-crate-items-is/54410006#54410006", "title": "How to fix &quot;use of extern prelude names introduced with `extern crate` items is unstable&quot;", "body": "<p>Even in Rust 2018, <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html#an-exception\" rel=\"nofollow noreferrer\">some crates are special and <strong>must</strong> be imported via <code>extern crate</code></a>. This includes the <code>proc_macro</code> crate.</p>\n\n<p>To fix the problem, add an <code>extern crate proc_macro;</code> line to the code.</p>\n\n<blockquote>\n  <p>as far as I can see, the problem is within [another crate]</p>\n</blockquote>\n\n<p>Then you have to file an issue against that crate; it doesn't work in stable Rust.</p>\n\n<p>Specifically regarding <a href=\"https://crates.io/crates/v_escape_derive/0.2.1\" rel=\"nofollow noreferrer\">v_escape_derive 0.2.1</a>; that's an old version. The <a href=\"https://crates.io/crates/v_escape_derive\" rel=\"nofollow noreferrer\">current version is 0.4</a> does not have this issue. Upgrade your dependencies to incorporate the update.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html#an-exception\" rel=\"nofollow noreferrer\">Path clarity \u2014 exceptions</a></li>\n</ul>\n"}], "owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "accepted_answer_id": 54410006, "answer_count": 1, "score": 2, "last_activity_date": 1548759874, "creation_date": 1548707808, "last_edit_date": 1548708464, "question_id": 54409928, "link": "https://stackoverflow.com/questions/54409928/how-to-fix-use-of-extern-prelude-names-introduced-with-extern-crate-items-is", "title": "How to fix &quot;use of extern prelude names introduced with `extern crate` items is unstable&quot;", "body": "<p>When I run <code>cargo build</code> (even after <code>cargo clean</code>) the crate <code>v_escape_derive</code> version 0.2.1 cannot be compiled. I receive the following message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n --&gt; /Users/***/.cargo/registry/src/github.com-***/v_escape_derive-0.2.1/src/lib.rs:7:5\n  |\n7 | use proc_macro::TokenStream;\n  |     ^^^^^^^^^^\n  |\n  = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n</code></pre>\n\n<p>I tried running <code>cargo clean</code> before <code>cargo build</code> with no success.</p>\n\n<p>When I saw these <code>extern crate</code> errors before, the problem was about <code>edition  =2015</code>, but the edition for my project is <code>2018</code> and there's no <code>extern crate ...</code> line in my project files. As far as I can see, the problem is within an external <code>lib.rs</code> file (i.e. the inner file of that <code>v_escape_derive</code> package so I don't think it's a good idea to change it).</p>\n"}, {"tags": ["linux", "rust", "archlinux", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548701436, "post_id": 54407841, "comment_id": 95627672, "body": "Welcome to Stack Overflow! Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54407841/edit\">edit</a> your question to include it. We cannot tell what code you are even attempting to compile. You can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548701555, "post_id": 54407841, "comment_id": 95627728, "body": "Your question may be answered by the answers of <a href=\"https://stackoverflow.com/q/12917731/155423\">Linking issues using OpenSSL in Ubuntu</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/54407841/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 10977024, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-X7yLC4577Vo/AAAAAAAAAAI/AAAAAAAAESk/DfeL7BaDR_o/photo.jpg?sz=128", "display_name": "ee ee", "link": "https://stackoverflow.com/users/10977024/ee-ee"}, "edited": false, "score": 0, "creation_date": 1548709063, "post_id": 54409997, "comment_id": 95631285, "body": "The command you have is the same command ive been using to build. I thought i specified that in my post. When i just run <code>cargo build</code> i get [this] (<a href=\"https://pastebin.com/XUitrh0D\" rel=\"nofollow noreferrer\">pastebin.com/XUitrh0D</a>)."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 21, "user_id": 10977024, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-X7yLC4577Vo/AAAAAAAAAAI/AAAAAAAAESk/DfeL7BaDR_o/photo.jpg?sz=128", "display_name": "ee ee", "link": "https://stackoverflow.com/users/10977024/ee-ee"}, "edited": false, "score": 0, "creation_date": 1548723261, "post_id": 54409997, "comment_id": 95635530, "body": "Then the issue might be that the linker finds the OpenSSL 1.1.x libraries before the OpenSSL 1.0.x libraries. In your first build log, I see that <code>-L native=&#47;usr&#47;lib&#47;openssl-1.0</code> comes <i>after</i> <code>-L native=&#47;usr&#47;lib</code>; that might explain why. The missing symbols exist in OpenSSL 1.0.x but not in 1.1.x, so <code>openssl-sys</code> thinks it&#39;s building against OpenSSL 1.0.x but it&#39;s actually linking with OpenSSL 1.1.x."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1548708110, "creation_date": 1548708110, "answer_id": 54409997, "question_id": 54407841, "link": "https://stackoverflow.com/questions/54407841/problems-building-the-openssl-crate-with-cargo/54409997#54409997", "title": "Problems building the openssl crate with Cargo", "body": "<p>Your project is using <code>openssl 0.9.x</code> (probably via <code>tls-api-native-tls 0.1.x</code> -> <code>native-tls 0.1.x</code> -> <code>openssl 0.9.x</code>), which doesn't support OpenSSL 1.1.1. I'm also on Arch Linux and I've had to update my programs to <code>openssl 0.10</code> in order to use OpenSSL 1.1.1.</p>\n\n<p>In your case, <code>tls-api-native-tls</code> needs to be updated to depend on <code>native-tls 0.2.x</code>, which uses <code>openssl 0.10.x</code> (which does support OpenSSL 1.1.1). <a href=\"https://github.com/stepancheg/rust-tls-api/issues/14\" rel=\"nofollow noreferrer\">There is an open issue about this.</a></p>\n\n<p>If that's too complicated, you can also use various environment variables to tell <code>openssl-sys</code>'s build script which installation of OpenSSL you'd like to use. If you'd prefer using OpenSSL 1.0.x, enter the following commands in your shell:</p>\n\n<pre><code>$ cargo clean\n$ OPENSSL_INCLUDE_DIR=/usr/include/openssl-1.0 OPENSSL_LIB_DIR=/usr/lib/openssl-1.0 cargo build\n</code></pre>\n\n<p>(Note: the paths above may be specific to Arch Linux.)</p>\n\n<p>For more information on the environment variables you can use to configure <code>openssl-sys</code>, see <a href=\"https://github.com/sfackler/rust-openssl/tree/v0.9.23#manual-configuration\" rel=\"nofollow noreferrer\">Manual configuration</a>.</p>\n"}], "owner": {"reputation": 21, "user_id": 10977024, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-X7yLC4577Vo/AAAAAAAAAAI/AAAAAAAAESk/DfeL7BaDR_o/photo.jpg?sz=128", "display_name": "ee ee", "link": "https://stackoverflow.com/users/10977024/ee-ee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1078, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1548708110, "creation_date": 1548698710, "last_edit_date": 1548701396, "question_id": 54407841, "link": "https://stackoverflow.com/questions/54407841/problems-building-the-openssl-crate-with-cargo", "title": "Problems building the openssl crate with Cargo", "body": "<p>Whenever I try to compile I get </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  = note: /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libnative_tls-e4af7be01e0cc1c7.rlib(native_tls-e4af7be01e0cc1c7.native_tls.c3tq55qu-cgu.0.rcgu.o): in function `&lt;openssl::stack::StackRef&lt;T&gt;&gt;::len':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/stack.rs:171: undefined reference to `sk_num'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libnative_tls-e4af7be01e0cc1c7.rlib(native_tls-e4af7be01e0cc1c7.native_tls.c3tq55qu-cgu.0.rcgu.o): in function `&lt;openssl::stack::StackRef&lt;T&gt;&gt;::_get':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/stack.rs:242: undefined reference to `sk_value'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libopenssl-a51d9ef9dbb88c83.rlib(openssl-a51d9ef9dbb88c83.openssl.27r2wowg-cgu.11.rcgu.o): in function `openssl::ssl::compat::tls_method':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/ssl/mod.rs:2546: undefined reference to `SSLv23_method'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libopenssl-a51d9ef9dbb88c83.rlib(openssl-a51d9ef9dbb88c83.openssl.27r2wowg-cgu.15.rcgu.o): in function `&lt;openssl::stack::Stack&lt;T&gt;&gt;::new':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/stack.rs:40: undefined reference to `sk_new_null'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libopenssl-a51d9ef9dbb88c83.rlib(openssl-a51d9ef9dbb88c83.openssl.27r2wowg-cgu.15.rcgu.o): in function `&lt;openssl::stack::Stack&lt;T&gt; as core::ops::drop::Drop&gt;::drop':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/stack.rs:50: undefined reference to `sk_free'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libopenssl-a51d9ef9dbb88c83.rlib(openssl-a51d9ef9dbb88c83.openssl.27r2wowg-cgu.15.rcgu.o): in function `&lt;openssl::stack::StackRef&lt;T&gt;&gt;::pop':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/stack.rs:232: undefined reference to `sk_pop'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libopenssl-a51d9ef9dbb88c83.rlib(openssl-a51d9ef9dbb88c83.openssl.27r2wowg-cgu.4.rcgu.o): in function `openssl::version::number':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/version.rs:51: undefined reference to `SSLeay'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libopenssl-a51d9ef9dbb88c83.rlib(openssl-a51d9ef9dbb88c83.openssl.27r2wowg-cgu.6.rcgu.o): in function `openssl::x509::compat::X509_up_ref':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/x509/mod.rs:1172: undefined reference to `CRYPTO_add_lock'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libopenssl_sys-51d0c50f2e67767f.rlib(openssl_sys-51d0c50f2e67767f.openssl_sys.afwyjyem-cgu.9.rcgu.o): in function `openssl_sys::init::{{closure}}':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.9.40/src/lib.rs:150: undefined reference to `SSL_library_init'\n          /usr/bin/ld: /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.9.40/src/lib.rs:151: undefined reference to `SSL_load_error_strings'\n          /usr/bin/ld: /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.9.40/src/lib.rs:152: undefined reference to `OPENSSL_add_all_algorithms_noconf'\n          /usr/bin/ld: /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.9.40/src/lib.rs:154: undefined reference to `CRYPTO_num_locks'\n          /usr/bin/ld: /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.9.40/src/lib.rs:164: undefined reference to `CRYPTO_set_locking_callback'\n          /usr/bin/ld: /home/trent/Documents/projects/coding/rust/website/auth/target/debug/deps/libopenssl_sys-51d0c50f2e67767f.rlib(openssl_sys-51d0c50f2e67767f.openssl_sys.afwyjyem-cgu.9.rcgu.o): in function `openssl_sys::init::set_id_callback':\n          /home/trent/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.9.40/src/lib.rs:139: undefined reference to `CRYPTO_set_id_callback'\n          collect2: error: ld returned 1 exit status\n</code></pre>\n\n<p><a href=\"https://pastebin.com/cyGhJcnp\" rel=\"nofollow noreferrer\">Complete log</a></p>\n\n<p>I have both OpenSSL and OpenSSL-1.0 installed. I have tried using both Rust stable and nightly. I've also tried to include different versions of the openssl crate, but I think Cargo is just building the version of the crate that I think grpc is using. I'm on Arch Linux.</p>\n"}, {"tags": ["syntax", "rust", "rust-macros", "rust-decl-macros"], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548694259, "post_id": 54406657, "comment_id": 95624154, "body": "Ah... so obvious! I somehow thought it was special syntax and couldn&#39;t shake the idea."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1548715393, "post_id": 54406657, "comment_id": 95633602, "body": "Wait so <code>x @ 0</code> is equivalent to <code>x if x == 0</code>? What&#39;s the point of introducing another symbol?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1548721665, "post_id": 54406657, "comment_id": 95635145, "body": "@OptimisticPeach it&#39;s not a common use case, certainly, but there are cases where you need to pattern match and bind a name. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=65561d5922679e7f0bc4c560eedde24f\" rel=\"nofollow noreferrer\">A quickly-created example</a>. You could make the same argument for match guards as well, as many times they can be <code>if</code> expressions in the match arm instead."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1548845879, "post_id": 54406657, "comment_id": 95687141, "body": "<code>$($ename::$vname(..) =&gt; instructions!(@count ($($vty),*))),*</code>  \u2013 I didn&#39;t get this part. How does the number of arguments inside <code>$vname(..)</code> equate to  the number of <code>$vty</code> on the right side."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 13, "last_activity_date": 1548721696, "last_edit_date": 1548721696, "creation_date": 1548694066, "answer_id": 54406657, "question_id": 54406388, "link": "https://stackoverflow.com/questions/54406388/what-does-an-symbol-mean-in-a-rust-declarative-macro/54406657#54406657", "title": "What does an @ symbol mean in a Rust declarative macro?", "body": "<p>In the pattern-matching part of a macro, symbols can mean whatever the author desires them to mean. A leading symbol <code>@</code> is often used to denote an \"implementation detail\" of the macro \u2014 a part of the macro that an external user is not expected to use.</p>\n\n<p>In this example, I used it to pattern-match the tuple parameters to get a count of the tuple parameters.</p>\n\n<p>Outside of macros, the <code>@</code> symbol is used to match a pattern while also assigning a name to the entire pattern:</p>\n\n<pre><code>match age {\n    x @ 0 =&gt; println!(\"0: {}\", x),\n    y @ 1 =&gt; println!(\"1: {}\", y),\n    z =&gt; println!(\"{}\", z),\n}\n</code></pre>\n\n<p>With a bit of a stretch, this same logic can be applied to the use in the macro \u2014 we are pattern-matching the tuple, but also attaching a name to that specific pattern. I <em>think</em> I've even seen people use something even more parallel: <code>(count @ ...</code>. However, <a href=\"http://danielkeep.github.io/tlborm/book/pat-internal-rules.html\" rel=\"noreferrer\"><em>The Little Book of Rust Macros</em></a> points out:</p>\n\n<blockquote>\n  <p>The reason for using <code>@</code> is that, as of Rust 1.2, the <code>@</code> token is not used in prefix position; as such, it cannot conflict with anything. Other symbols or unique prefixes may be used as desired, but use of <code>@</code> has started to become widespread, so using it may aid readers in understanding your code.</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p>rather than just creating another top-level macro</p>\n</blockquote>\n\n<p>Creating another macro is likely better practice, but only in modern Rust. Before recent changes to Rust that made it so you could import macros directly, having multiple macros could be tricky for end users who tried to selectively import macros.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://danielkeep.github.io/tlborm/book/pat-internal-rules.html\" rel=\"noreferrer\">Internal rules in <em>The Little Book of Rust Macros</em></a></li>\n<li><a href=\"https://stackoverflow.com/q/48132095/155423\">Why must I use macros only used by my dependencies</a></li>\n<li><a href=\"https://stackoverflow.com/q/49906483/155423\">What does the &#39;@&#39; symbol do in Rust?</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/appendix-02-operators.html\" rel=\"noreferrer\">Appendix B: Operators and Symbols</a></li>\n</ul>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 892, "favorite_count": 1, "accepted_answer_id": 54406657, "answer_count": 1, "score": 9, "last_activity_date": 1595273189, "creation_date": 1548693110, "last_edit_date": 1595273189, "question_id": 54406388, "link": "https://stackoverflow.com/questions/54406388/what-does-an-symbol-mean-in-a-rust-declarative-macro", "title": "What does an @ symbol mean in a Rust declarative macro?", "body": "<p>I have seen the <code>@</code> symbol used in macros but I cannot find mention of it in the Rust Book or in any official documentation or blog posts. For example, in <a href=\"https://stackoverflow.com/a/54403458/493729\">this Stack Overflow answer</a> it is used like this:</p>\n\n<pre><code>macro_rules! instructions {\n    (enum $ename:ident {\n        $($vname:ident ( $($vty: ty),* )),*\n    }) =&gt; {\n        enum $ename {\n            $($vname ( $($vty),* )),*\n        }\n\n        impl $ename {\n            fn len(&amp;self) -&gt; usize {\n                match self {\n                    $($ename::$vname(..) =&gt; instructions!(@count ($($vty),*))),*\n                }\n            }\n        }\n    };\n\n    (@count ()) =&gt; (0);\n    (@count ($a:ty)) =&gt; (1);\n    (@count ($a:ty, $b:ty)) =&gt; (2);\n    (@count ($a:ty, $b:ty, $c:ty)) =&gt; (3);\n}\n\ninstructions! {\n    enum Instruction {\n        None(),\n        One(u8),\n        Two(u8, u8),\n        Three(u8, u8, u8)\n    }\n}\n\nfn main() {\n    println!(\"{}\", Instruction::None().len());\n    println!(\"{}\", Instruction::One(1).len());\n    println!(\"{}\", Instruction::Two(1, 2).len());\n    println!(\"{}\", Instruction::Three(1, 2, 3).len());\n}\n</code></pre>\n\n<p>From the usage, it appears that it is used for declaring another macro that is local to the main one.</p>\n\n<p>What does this symbol mean and why would you use it rather than just creating another top-level macro?</p>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"comments": [{"owner": {"reputation": 10506, "user_id": 5520354, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/QgGFm.jpg?s=128&g=1", "display_name": "C14L", "link": "https://stackoverflow.com/users/5520354/c14l"}, "edited": false, "score": 1, "creation_date": 1567171083, "post_id": 54406252, "comment_id": 101895098, "body": "Did this change in a recent version? On Actix Web 1.0.7, I am getting <code>error[E0599]: no method named </code>query` found for type <code>actix_web::request::HttpRequest</code> in the current scope`"}], "tags": [], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "is_accepted": false, "score": 4, "last_activity_date": 1580732116, "last_edit_date": 1580732116, "creation_date": 1548692561, "answer_id": 54406252, "question_id": 54406029, "link": "https://stackoverflow.com/questions/54406029/how-can-i-parse-query-strings-in-actix-web/54406252#54406252", "title": "How can I parse query strings in actix-web?", "body": "<blockquote>\n  <p>This is for actix-web v0.7</p>\n</blockquote>\n\n<p>I managed to get it work by using:</p>\n\n<pre><code>let name = req.query().get(\"name\").unwrap(); // name = \"ferret\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 410, "user_id": 2508492, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb272dbd371203cad7be481f9861268d?s=128&d=identicon&r=PG", "display_name": "Amoo Hesam", "link": "https://stackoverflow.com/users/2508492/amoo-hesam"}, "edited": false, "score": 0, "creation_date": 1618313516, "post_id": 58055305, "comment_id": 118558827, "body": "This should be the accepted answer."}], "tags": [], "owner": {"reputation": 650, "user_id": 996314, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4d6f299c3fe907046a23f106f7b56995?s=128&d=identicon&r=PG&f=1", "display_name": "Rokit", "link": "https://stackoverflow.com/users/996314/rokit"}, "is_accepted": false, "score": 12, "last_activity_date": 1606841866, "last_edit_date": 1606841866, "creation_date": 1569209401, "answer_id": 58055305, "question_id": 54406029, "link": "https://stackoverflow.com/questions/54406029/how-can-i-parse-query-strings-in-actix-web/58055305#58055305", "title": "How can I parse query strings in actix-web?", "body": "<p>It looks like they removed the <code>query</code> function and just have a <code>query_string</code> function. You could use a crate for this called <a href=\"https://crates.io/crates/qstring\" rel=\"nofollow noreferrer\">qstring</a>:</p>\n<pre><code>use qstring::QString;\n...\nlet query_str = req.query_string(); // &quot;name=ferret&quot;\nlet qs = QString::from(query_str);\nlet name = qs.get(&quot;name&quot;).unwrap(); // &quot;ferret&quot;\n</code></pre>\n<p>You could also use an <a href=\"https://actix.rs/docs/extractors/\" rel=\"nofollow noreferrer\">extractor</a> to deserialize the query params into a struct with Serde</p>\n<pre><code>use serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Info {\n    username: String,\n}\n\nfn index(info: web::Query&lt;Info&gt;) -&gt; Result&lt;String, actix_web::Error&gt; {\n    Ok(format!(&quot;Welcome {}!&quot;, info.username))\n}\n</code></pre>\n<p>Note that the handler will only be called if the query <code>username</code> is actually present in the request. This would call the handler:</p>\n<p><code>curl &quot;http://localhost:5000?username=joe&quot;</code></p>\n<p>but these would not:</p>\n<pre><code>curl &quot;http://localhost:5000&quot;\ncurl &quot;http://localhost:5000?password=blah&quot;\n</code></pre>\n<p>If you need optional parameters, just make the properties in your struct <code>Option</code>s.</p>\n<pre><code>username: Option&lt;String&gt;\n</code></pre>\n<p>You can also use multiple <code>web::Query&lt;SomeType&gt;</code> parameters in a handler.</p>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4275, "favorite_count": 1, "answer_count": 2, "score": 13, "last_activity_date": 1606841866, "creation_date": 1548691783, "last_edit_date": 1548691912, "question_id": 54406029, "link": "https://stackoverflow.com/questions/54406029/how-can-i-parse-query-strings-in-actix-web", "title": "How can I parse query strings in actix-web?", "body": "<p>How can I parse the <code>name</code> and <code>color</code> arguments from the following URL using <a href=\"https://docs.rs/actix-web/0.7.18/actix_web/\" rel=\"noreferrer\">actix-web</a>?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>http://example.com/path/to/page?name=ferret&amp;color=purple\n</code></pre>\n\n<p>I suppose my path should be <code>/path/to/page</code> and then when I try to query for <code>name</code> I receive an empty string (<code>req.match_info().query(\"name\")</code> where <code>req: &amp;HttpRequest</code>).</p>\n\n<p>The only <a href=\"https://docs.rs/actix-web/0.1.0/actix_web/struct.Params.html\" rel=\"noreferrer\">documentation</a> I found is about matching names (e.g., if the path is <code>/people/{page}/</code> it'll match <code>/people/123/</code> such that <code>page = 123</code> but that's not what I want.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1548704962, "post_id": 54401604, "comment_id": 95629336, "body": "Why do you clone the <code>Arc</code>?"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1548707643, "post_id": 54401604, "comment_id": 95630633, "body": "I want to use the ARC in between threads and so I clone the Arc and send it to spawned threads."}], "answers": [{"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1548677743, "post_id": 54401725, "comment_id": 95614040, "body": "I know that I can handle it with storing the clone to the another variable which is increasing the lifetime from temporary to the scope but why do I really need it? I mean, I have clone as temporary and why can&#39;t I call lock() from that temporary clone value?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1548678170, "post_id": 54401725, "comment_id": 95614235, "body": "@AkinerAlkan Because <code>lock</code> borrows the data. I&#39;ll add this in my answer."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 4, "last_activity_date": 1548678295, "last_edit_date": 1548678295, "creation_date": 1548677349, "answer_id": 54401725, "question_id": 54401604, "link": "https://stackoverflow.com/questions/54401604/temporary-lifetime-in-arc-in-rust/54401725#54401725", "title": "Temporary Lifetime in Arc in Rust", "body": "<p><code>clone</code> returns a new instance that you do not store inside a variable. So it is a temporary value. You must store your copy inside a variable to make it non temporary:</p>\n\n<pre><code>let my_field = my_struct.arc_field.clone(); // You have a non temporary lifetime\nlet my_field = my_field.lock().unwrap();\n</code></pre>\n\n<p>You cannot use directly the cloned value because <code>lock</code> borrows it, and the borrow cannot outlive the value.</p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 239, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1548678295, "creation_date": 1548676964, "question_id": 54401604, "link": "https://stackoverflow.com/questions/54401604/temporary-lifetime-in-arc-in-rust", "title": "Temporary Lifetime in Arc in Rust", "body": "<p>I am struggling to understand temporary lifetime concept in Rust.</p>\n\n<p>Let's say I have the following struct with the <code>Arc</code> field:</p>\n\n<pre><code>struct MyStruct {\n    arc_field: Arc&lt;Mutex&lt;i32&gt;&gt;,\n}\n</code></pre>\n\n<p>When i try to access inner i32 field inside from the clone of the <code>arc_field</code> it is complaining about </p>\n\n<blockquote>\n  <p>Temporary value dropped here while still borrowed</p>\n</blockquote>\n\n<p>Here is how I am trying to retrieve it:</p>\n\n<pre><code>let my_field = my_struct.arc_field.clone().lock().unwrap();\n</code></pre>\n\n<p>Why is that I need to use let binding to increase it's lifetime?</p>\n\n<p>Here is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=a6adbca76ac303f8a3c1f0a4f3f9d19c\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1548835658, "creation_date": 1548835658, "answer_id": 54435865, "question_id": 54400991, "link": "https://stackoverflow.com/questions/54400991/error-e0201-when-implementing-foreign-trait-for-local-type-with-parameter/54435865#54435865", "title": "Error E0201 when implementing foreign trait for local type with parameter", "body": "<p>The problem is that <code>Vec&lt;Connection&lt;C&gt;&gt;</code> isn't considered a local type, because <code>Vec</code> isn't local (and isn't <a href=\"http://aturon.github.io/2017/02/06/specialization-and-coherence/#the-fundamental-attribute\" rel=\"nofollow noreferrer\">fundamental</a>).</p>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2451-re-rebalancing-coherence.md\" rel=\"nofollow noreferrer\">RFC 2451</a> will make it legal, however. <a href=\"https://github.com/rust-lang/rust/pull/56145\" rel=\"nofollow noreferrer\">An implementation was merged</a> on January 4th, so it's not in stable yet, but it works with a recent nightly if the <code>re_rebalance_coherence</code> feature is enabled.</p>\n"}], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 54435865, "answer_count": 1, "score": 2, "last_activity_date": 1548862947, "creation_date": 1548674836, "last_edit_date": 1548862947, "question_id": 54400991, "link": "https://stackoverflow.com/questions/54400991/error-e0201-when-implementing-foreign-trait-for-local-type-with-parameter", "title": "Error E0201 when implementing foreign trait for local type with parameter", "body": "<p>I'm trying to add the <code>C</code> type parameter to this code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=df492f20e0555cfc201ac49d0dfb3fd0\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use std::ops::Index;\n\nstruct ConnectionHandle(usize);\nstruct Connection&lt;C&gt;(C);\n\nimpl&lt;C&gt; Index&lt;ConnectionHandle&gt; for Vec&lt;Connection&lt;C&gt;&gt; {\n    type Output = Connection&lt;C&gt;;\n    fn index(&amp;self, ch: ConnectionHandle) -&gt; &amp;Self::Output {\n        &amp;self[ch.0]\n    }\n}\n</code></pre>\n\n<p>But doing so causes this error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0210]: type parameter `C` must be used as the type parameter for some local type (e.g. `MyStruct&lt;C&gt;`)\n --&gt; src/lib.rs:6:1\n  |\n6 | impl&lt;C&gt; Index&lt;ConnectionHandle&gt; for Vec&lt;Connection&lt;C&gt;&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `C` must be used as the type parameter for some local type\n  |\n  = note: only traits defined in the current crate can be implemented for a type parameter\n</code></pre>\n\n<p>Why isn't this allowed? <code>Connection</code> is local, so per the explanation for <code>E0201</code> it seems like this should not result in orphans.</p>\n"}, {"tags": ["rust", "traits", "coercion"], "answers": [{"comments": [{"owner": {"reputation": 799, "user_id": 3096774, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/1dd1ee89121ffeb86343b5e70b20beb1?s=128&d=identicon&r=PG&f=1", "display_name": "apt1002", "link": "https://stackoverflow.com/users/3096774/apt1002"}, "edited": false, "score": 0, "creation_date": 1548889075, "post_id": 54400887, "comment_id": 95710245, "body": "Yes, you are right, and I&#39;ll accept your answer. Actually, I oversimplified my question: my actual use case is a trait, not a function, and I want to find the unique <code>T</code> such that <code>Self</code> dereferences to <code>[T]</code> so that I can expose it as an associated type. I&#39;ll ask another question."}, {"owner": {"reputation": 799, "user_id": 3096774, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/1dd1ee89121ffeb86343b5e70b20beb1?s=128&d=identicon&r=PG&f=1", "display_name": "apt1002", "link": "https://stackoverflow.com/users/3096774/apt1002"}, "edited": false, "score": 0, "creation_date": 1548892323, "post_id": 54400887, "comment_id": 95711072, "body": "<a href=\"https://stackoverflow.com/questions/54451342/how-to-get-deref-coercion-when-using-impl-trait-take-2\" title=\"how to get deref coercion when using impl trait take 2\">stackoverflow.com/questions/54451342/&hellip;</a> &lt;-- Here is the case where <code>AsRef</code> is not the solution."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1548674468, "creation_date": 1548674468, "answer_id": 54400887, "question_id": 54400803, "link": "https://stackoverflow.com/questions/54400803/how-to-get-deref-coercion-when-using-impl-trait/54400887#54400887", "title": "How to get Deref coercion when using impl Trait", "body": "<p>You want to use <a href=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html\" rel=\"nofollow noreferrer\"><code>AsRef</code></a>, not <code>Deref</code>:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn first&lt;T: Copy&gt;(x: impl AsRef&lt;[T]&gt;) -&gt; T {\n    x.as_ref()[0]\n}\n\nfn main() {\n    let data: Vec&lt;usize&gt; = vec![3, 4];\n    assert_eq!(first(data), 3);\n\n    let data: &amp;[usize] = &amp;[3, 4];\n    assert_eq!(first(data), 3);\n\n    let data: Rc&lt;[usize]&gt; = Rc::new([3, 4]);\n    assert_eq!(first(data), 3);\n\n    let data: &amp;[usize; 2] = &amp;[3, 4];\n    assert_eq!(first(data), 3);\n}\n</code></pre>\n"}], "owner": {"reputation": 799, "user_id": 3096774, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/1dd1ee89121ffeb86343b5e70b20beb1?s=128&d=identicon&r=PG&f=1", "display_name": "apt1002", "link": "https://stackoverflow.com/users/3096774/apt1002"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40, "favorite_count": 0, "accepted_answer_id": 54400887, "answer_count": 1, "score": 1, "last_activity_date": 1548674521, "creation_date": 1548674142, "last_edit_date": 1548674521, "question_id": 54400803, "link": "https://stackoverflow.com/questions/54400803/how-to-get-deref-coercion-when-using-impl-trait", "title": "How to get Deref coercion when using impl Trait", "body": "<p>This function returns the first element of a list-like collection. It works for a variety of different list-like types:</p>\n\n<pre><code>fn first&lt;T: Copy&gt;(x: impl Deref&lt;Target=[T]&gt;) -&gt; T {\n    x[0]\n}\n</code></pre>\n\n<p>For example, this compiles and runs:</p>\n\n<pre><code>let data: Vec&lt;usize&gt; = vec![3, 4];\nassert_eq!(first(data), 3);\n\nlet data: &amp;[usize] = &amp;[3, 4];\nassert_eq!(first(data), 3);\n\nlet data: Rc&lt;[usize]&gt; = Rc::new([3, 4]);\nassert_eq!(first(data), 3);\n</code></pre>\n\n<p>This also compiles and runs:</p>\n\n<pre><code>fn stub(x: &amp;[usize]) -&gt; usize {\n    first(x)\n}\n\nlet data: &amp;[usize; 2] = &amp;[3, 4];\nassert_eq!(stub(data), 3);\n\nassert_eq!(stub(&amp;[3, 4]), 3);\n</code></pre>\n\n<p>But this fails to compile:</p>\n\n<pre><code>let data: &amp;[usize; 2] = &amp;[3, 4];\nassert_eq!(first(data), 3); // Fails.\n\nassert_eq!(first(&amp;[3, 4]), 3); // Fails.\n</code></pre>\n\n<p>The error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>type mismatch resolving `&lt;&amp;[usize; 2] as std::ops::Deref&gt;::Target == [_]`\n</code></pre>\n\n<p>I think I understand what is going on. For each type <code>T</code> there is a unique type <code>&lt;T as Deref&gt;::Target</code>. When <code>T</code> is <code>&amp;[usize; 2]</code> the target is <code>[usize; 2]</code>, not <code>[usize]</code>. The compiler is able to coerce <code>&amp;[T; 2]</code> to <code>&amp;[T]</code> if I explicitly ask it to, e.g. by using <code>let</code> or <code>stub()</code>, but if I don't then it's not able to work out that the coercion is required.</p>\n\n<p>But it's frustrating. It's perfectly obvious to a human what the failing calls are intended to do, and the compiler understands what's required for <code>Vec&lt;usize&gt;</code>, <code>Box&lt;[usize]&gt;</code>, <code>Rc&lt;[usize]&gt;</code>, <code>&amp;[usize]</code> and so on, so it doesn't seem unreasonable to try to make it work for <code>[usize; 2]</code> as well.</p>\n\n<p><strong>Question:</strong> Is there a convenient way to write <code>first()</code> so that the last two calls work too? If not, is there a syntax to ask the compiler to coerce a <code>&amp;[usize; 2]</code> to a <code>&amp;[usize]</code> inline, <em>i.e.</em> without using <code>let</code> or <code>stub()</code>?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f8cc5213c5352263349175c92f1f30eb\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n"}, {"tags": ["stream", "rust"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1548670735, "post_id": 54398254, "comment_id": 95610272, "body": "Please provide <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> It is not clear what you asking"}], "answers": [{"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 3, "creation_date": 1548670832, "post_id": 54398273, "comment_id": 95610328, "body": "unwrap() is generally a bad idea since it causes panic! in error cases."}], "tags": [], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "is_accepted": false, "score": 0, "last_activity_date": 1548666631, "last_edit_date": 1548666631, "creation_date": 1548665266, "answer_id": 54398273, "question_id": 54398254, "link": "https://stackoverflow.com/questions/54398254/how-can-i-extract-the-item-from-futuresstreamwaitwait-in-rust/54398273#54398273", "title": "How can I extract the item from futures::stream::wait::Wait in Rust?", "body": "<p>I had to add 2x <code>unwrap()</code>:\n<code>let first_row = rows_stream.take(1).wait().unwrap().unwrap()</code></p>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1548666631, "creation_date": 1548665160, "question_id": 54398254, "link": "https://stackoverflow.com/questions/54398254/how-can-i-extract-the-item-from-futuresstreamwaitwait-in-rust", "title": "How can I extract the item from futures::stream::wait::Wait in Rust?", "body": "<p>I wrote the following piece of code:</p>\n\n<pre><code>let first_row = rows_stream.take(1).wait();\n</code></pre>\n\n<p>And receive the following error (when I actually want to access the element):</p>\n\n<pre><code>found struct `futures::stream::wait::Wait`\n</code></pre>\n\n<p>How can I fix it?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1901, "user_id": 225630, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/edb8bd2d383e517e23e87ad10da214f3?s=128&d=identicon&r=PG", "display_name": "davyzhang", "link": "https://stackoverflow.com/users/225630/davyzhang"}, "edited": false, "score": 0, "creation_date": 1548667473, "post_id": 54397930, "comment_id": 95608449, "body": "Thanks so much for this excellent explanation. I can understand how generic works here now."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1548663652, "creation_date": 1548663652, "answer_id": 54397930, "question_id": 54397834, "link": "https://stackoverflow.com/questions/54397834/why-asref-can-not-be-used-as-parameter-type-annotation-but-fine-with-generic-dec/54397930#54397930", "title": "Why AsRef can not be used as parameter type annotation but fine with generic declaration?", "body": "<p><code>AsRef</code> is a trait, not a type. Your definition of <code>f1()</code> uses it in place of a type. This legacy syntax is short for <code>dyn AsRef&lt;Path&gt;</code>, and denotes an arbitrary type implementing the trait <code>AsRef&lt;Path&gt;</code>, with dynamic dispatch at runtime. The size of an arbitrary type implementing the trait obviously isn't known at compile time, so you can use trait objects only behind pointers, e.g. <code>&amp;dyn AsRef&lt;Path&gt;</code> or <code>Box&lt;dyn AsRef&lt;Path&gt;&gt;</code>. The compiler does not complain about the size of <code>Path</code> being unknown, it complains about the size of the trait object being unknown.</p>\n\n<p>Trait bounds on generic types, on the other hand, expect traits, not types. <code>P</code> again is an arbitrary type implementing <code>AsRef&lt;Path&gt;</code>, but this arbitrary type needs to be known at compile time, and the compiler emits a new compiled version of <code>f2()</code> for every type that is actually used. This way, the size of each individual type is known at compile time.</p>\n"}], "owner": {"reputation": 1901, "user_id": 225630, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/edb8bd2d383e517e23e87ad10da214f3?s=128&d=identicon&r=PG", "display_name": "davyzhang", "link": "https://stackoverflow.com/users/225630/davyzhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 54397930, "answer_count": 1, "score": 0, "last_activity_date": 1548663652, "creation_date": 1548663188, "question_id": 54397834, "link": "https://stackoverflow.com/questions/54397834/why-asref-can-not-be-used-as-parameter-type-annotation-but-fine-with-generic-dec", "title": "Why AsRef can not be used as parameter type annotation but fine with generic declaration?", "body": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=28f7cd87b9267fd939330bdd461ba533\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::path::Path;\n\n// fn f1(p: AsRef&lt;Path&gt;) {\n//     println!(\"{}\", p.as_ref().display());\n// }\n\nfn f2&lt;P: AsRef&lt;Path&gt;&gt;(p: P) {\n    println!(\"{}\", p.as_ref().display());\n}\n\nfn main() {\n    f2(\"/tmp/test.jpg\");\n}\n</code></pre>\n\n<p>The compiler will complain about the size of Path is not known for f1</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 523, "user_id": 8617507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9da6733c7db911f11532d8dfdbc576c4?s=128&d=identicon&r=PG&f=1", "display_name": "iDuanYingJie", "link": "https://stackoverflow.com/users/8617507/iduanyingjie"}, "edited": false, "score": 0, "creation_date": 1548662426, "post_id": 54397556, "comment_id": 95606174, "body": "Thank you, I understand why the compiler report error"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1548686825, "post_id": 54397556, "comment_id": 95619390, "body": "Why <code>&#39;static</code>? Won&#39;t lifetime elision in this case lead to <code>fn do_sth&lt;&#39;a&gt;(&amp;&#39;a self, &amp;&#39;a i32)</code> (due to <code>self</code>)?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1548692932, "post_id": 54397556, "comment_id": 95623317, "body": "@Cerberus: Different parameters get different lifetimes; you are thinking of the fact that the <code>self</code> and return reference share the same lifetime in certain cases."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1548695316, "post_id": 54397556, "comment_id": 95624787, "body": "@Cerberus <code>&#39;static</code> is the only lifetime you can name in a function that isn&#39;t itself parameterized. Thus it&#39;s the one I had to use for the example."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1548735870, "post_id": 54397556, "comment_id": 95638075, "body": "@MatthieuM. Thanks, seems that I&#39;ve mistaken the elision rule."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 1, "last_activity_date": 1593121111, "last_edit_date": 1593121111, "creation_date": 1548661767, "answer_id": 54397556, "question_id": 54396775, "link": "https://stackoverflow.com/questions/54396775/why-does-my-reference-not-live-long-enough/54397556#54397556", "title": "Why does my reference not live long enough?", "body": "<p>Whenever there's a reference in Rust, there's a lifetime. In most cases, the compiler can infer it, so that you don't have to write it down, but it's still there. When you get confusing lifetime errors, it helps to try to figure out what these implicit lifetimes are.</p>\n<pre><code>fn foo(b: Box&lt;DoSomething&lt;&amp;i32&gt;&gt;) {\n    let s = 123;\n    b.do_sth(&amp;s);\n}\n</code></pre>\n<p>This is equivalent to</p>\n<pre><code>fn foo&lt;'y&gt;(b: Box&lt;DoSomething&lt;&amp;'y i32&gt;&gt;) {\n    let s = 123;\n    b.do_sth(&amp;s);\n}\n</code></pre>\n<p>In other words, the lifetime of the reference passed to <code>do_sth</code> is actually &quot;whatever the caller of <code>foo</code> wants&quot;. This function signature allows me to write this main:</p>\n<pre><code>fn main() {\n    let b : Box&lt;DoSomething&lt;&amp;'static i32&gt;&gt; = Box::new(&amp;3);\n    foo(b);\n}\n</code></pre>\n<p>And if you expand the <code>DoSomething</code> trait for this parameter, you end up with this function:</p>\n<pre><code>fn do_sth(&amp;self, value: &amp;'static i32) {\n    println!(&quot;{:?}&quot;, value);\n}\n</code></pre>\n<p>which <code>foo</code> is trying to call with a reference to a local variable.</p>\n<p>I hope that explains why your code doesn't work.</p>\n<p>As for what you should write instead, I think that's not really answerable in general. There's no way to write the <code>do_sth</code> signature in a way that says &quot;all references passed to this function may be transient&quot;. You'll have to look at your real code and think of a better way of writing it.</p>\n"}], "owner": {"reputation": 523, "user_id": 8617507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9da6733c7db911f11532d8dfdbc576c4?s=128&d=identicon&r=PG&f=1", "display_name": "iDuanYingJie", "link": "https://stackoverflow.com/users/8617507/iduanyingjie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1593121111, "creation_date": 1548657852, "last_edit_date": 1593121074, "question_id": 54396775, "link": "https://stackoverflow.com/questions/54396775/why-does-my-reference-not-live-long-enough", "title": "Why does my reference not live long enough?", "body": "<p>The code:</p>\n<pre><code>use std::fmt::Debug;\n\ntrait DoSomething&lt;T&gt; {\n    fn do_sth(&amp;self, value: T);\n}\n\nimpl&lt;T: Debug&gt; DoSomething&lt;T&gt; for &amp;usize {\n    fn do_sth(&amp;self, value: T) {\n        println!(&quot;{:?}&quot;, value);\n    }\n}\n\nfn foo(b: Box&lt;DoSomething&lt;&amp;i32&gt;&gt;) {\n    let s = 123;\n    b.do_sth(&amp;s);\n}\n\nfn main() {\n    foo(Box::new(&amp;3));\n}\n</code></pre>\n<p>The compiler error message is:</p>\n<pre><code>error[E0597]: `s` does not live long enough\n  --&gt; src/main.rs:15:14\n   |\n13 | fn foo(b: Box&lt;DoSomething&lt;&amp;i32&gt;&gt;) {\n   |        - has type `std::boxed::Box&lt;(dyn DoSomething&lt;&amp;'1 i32&gt; + '_)&gt;`\n14 |     let s = 123;\n15 |     b.do_sth(&amp;s);\n   |     ---------^^-\n   |     |        |\n   |     |        borrowed value does not live long enough\n   |     argument requires that `s` is borrowed for `'1`\n16 | }\n   | - `s` dropped here while still borrowed\n</code></pre>\n<p>I think this <code>&amp;s</code> is just used in <code>foo</code>, the <code>foo</code> method ends and doesn't borrow anymore? But that's not the case. Who's still borrowing it? How to solve this problem?</p>\n"}, {"tags": ["pointers", "memory", "rust", "stack", "allocation"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 4, "creation_date": 1548652482, "post_id": 54395558, "comment_id": 95602983, "body": "<i>&quot;while if I were using C, for example, I would get this&quot;</i> -- Are you sure? Not that such a thing is specified in the standard, but <a href=\"https://ideone.com/2UNpqK\" rel=\"nofollow noreferrer\">here</a>, for example, I get an increasing address for subsequently declared variables, just like in your rust example."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1548664929, "post_id": 54395558, "comment_id": 95607165, "body": "Related: <a href=\"https://stackoverflow.com/questions/1677415/does-stack-grow-upward-or-downward\">Does stack grow upward or downward?</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1548665098, "post_id": 54395558, "comment_id": 95607242, "body": "The order in which local variables are allocated within a single stack frame is unrelated to the direction of stack growth. While the latter is mandated by the ABI and the platform, the former is invisible at the function call boundary, and each compiler can choose whichever order it pleases. I don&#39;t think the order you observe is mandated by the Rust compiler \u2013 it&#39;s probably defined by LLVM."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548672942, "post_id": 54395558, "comment_id": 95611488, "body": "welcome to implementation behavior, also C standard don&#39;t even mention the word &quot;stack&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1548679100, "last_edit_date": 1548679100, "creation_date": 1548674312, "answer_id": 54400847, "question_id": 54395558, "link": "https://stackoverflow.com/questions/54395558/why-do-subsequent-rust-variables-increment-the-stack-pointer-instead-of-decremen/54400847#54400847", "title": "Why do subsequent Rust variables increment the stack pointer instead of decrementing it?", "body": "<p>Think of the stack as a sequence of function stack frames, not a sequence of variable addresses. Regardless of the direction that the stack grows, it grows in increments of whole stack frames, which are different sizes for each function.</p>\n\n<p>The layout of a function's stack frame has fixed positions for where variables will be bound, similar to a struct, but the exact order of bindings within the frame is not guaranteed. If the function can be made to use space more efficiently with a different layout, it probably will. For example:</p>\n\n<pre><code>fn main() {\n    let i1: i32 = 1;\n    let i2: i64 = 2;\n    let i3: i32 = 3;\n    println!(\"i1 : {:?}\", &amp;i1 as *const i32);\n    println!(\"i2 : {:?}\", &amp;i2 as *const i64);\n    println!(\"i3 : {:?}\", &amp;i3 as *const i32);\n}\n\n// i1 : 0x7fff4b9271fc\n// i2 : 0x7fff4b927200\n// i3 : 0x7fff4b92720c\n</code></pre>\n\n<p>Here, <code>i3</code> is stored <em>before</em> <code>i2</code>. An <code>i64</code> needs to be aligned to a multiple of 64 bits so it is more compact to store the two <code>i32</code>s together rather than leaving a gap. This doesn't happen in debug builds, and the compiler <em>could</em> also have chosen to store <code>i3</code> first with the same effect, so we cannot and should not rely on this ordering.</p>\n\n<p>It's also possible that variables could be reordered for any other optimisation reasons, such as cache access efficiency.</p>\n\n<hr>\n\n<p>To see that the stack does actually grow downwards, consider an example with multiple functions:</p>\n\n<pre><code>fn main() {\n    let i1 = 1;\n    println!(\"i1 : {:?}\", &amp;i1 as *const i32);\n\n    another();\n}\n\n#[inline(never)]\nfn another() {\n    let i2 = 2;\n    println!(\"i2 : {:?}\", &amp;i2 as *const i32);\n}\n\n// i1 : 0x7fffc7601fbc\n// i2 : 0x7fffc7601f5c\n</code></pre>\n\n<p><code>another</code> is called by <code>main</code> so its stack frame has a lower address. Notice that I had to force the compiler not to inline the function, otherwise the combined layout would have been arbitrary.</p>\n"}], "owner": {"reputation": 41, "user_id": 10244148, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-R8JKZ8q6q2w/AAAAAAAAAAI/AAAAAAAA8lY/jRnu27Qc8G8/photo.jpg?sz=128", "display_name": "toobie", "link": "https://stackoverflow.com/users/10244148/toobie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1562773213, "creation_date": 1548649760, "last_edit_date": 1562773213, "question_id": 54395558, "link": "https://stackoverflow.com/questions/54395558/why-do-subsequent-rust-variables-increment-the-stack-pointer-instead-of-decremen", "title": "Why do subsequent Rust variables increment the stack pointer instead of decrementing it?", "body": "<p>I find it odd how when you create statically-allocated variables in Rust that it seems as the stack pointer increases. I know this is not the case since the stack pointer decreases as memory is allocated.</p>\n\n<p>If I were to do the same thing in C, I would see the stack pointer decrease as I created more variables.</p>\n\n<p>Why is it this way? Does the Rust compiler allocate these from bottom to top instead on top to bottom? </p>\n\n<pre><code>fn main() {\n    let i1 = 1;\n    let i2 = 1;\n    let i3 = 1;\n    println!(\"i1 : {:?}\", &amp;i1 as *const i32);\n    println!(\"i2 : {:?}\", &amp;i2 as *const i32);\n    println!(\"i3 : {:?}\", &amp;i3 as *const i32);\n}\n</code></pre>\n\n<p>When i run this program, I receive this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>i1 : 0x9f4f99fb24\ni2 : 0x9f4f99fb28\ni3 : 0x9f4f99fb2c\n</code></pre>\n\n<p>If I used C, I would get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>i1 : 0x9f4f99fb2c\ni2 : 0x9f4f99fb28\ni3 : 0x9f4f99fb24\n</code></pre>\n"}, {"tags": ["string", "rust", "newline"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1548657211, "post_id": 54395227, "comment_id": 95604243, "body": "Is there something incorrect in this code for you, or you&#39;re looking for the most idiomatic way?"}, {"owner": {"reputation": 571, "user_id": 6780089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcb6413d5c1778241f37cc86901c957a?s=128&d=identicon&r=PG&f=1", "display_name": "YLyu", "link": "https://stackoverflow.com/users/6780089/ylyu"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 2, "creation_date": 1548657336, "post_id": 54395227, "comment_id": 95604278, "body": "@Cerberus Yes, I am just looking for a more idiomatic way."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1548667278, "post_id": 54395227, "comment_id": 95608339, "body": "Is there anything you don&#39;t like about your approach? Otherwise it&#39;s difficult to suggest improvements, since we don&#39;t know what problem to sovle. The only problem I can see is that you allocate twice for reading a single line, and I&#39;ll add an answer how to avoid that."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1548685920, "last_edit_date": 1548685920, "creation_date": 1548668209, "answer_id": 54399051, "question_id": 54395227, "link": "https://stackoverflow.com/questions/54395227/what-is-a-better-way-to-trim-n-from-iostdin-read-line/54399051#54399051", "title": "What is a better way to trim &#39;\\n&#39; from io::stdin().read_line()?", "body": "<p>I only see a single aspect that could be improved in your code: the fact that you allocate <em>two</em> strings to read a single line. The first allocation happens while reading the line into <code>buffer</code>, and the second allocation happens in <code>to_string()</code>.</p>\n\n<p>Depending on context, there are several way to avoid this. The easiest approach is to simply avoid calling <code>to_string</code>, and continue working with an <code>&amp;str</code> instead of a <code>String</code>. If this does not work for you, you can also write your own function to trim a newline at the end of the string:</p>\n\n<pre><code>fn trim_newline(s: &amp;mut String) {\n    if s.ends_with('\\n') {\n        s.pop();\n        if s.ends_with('\\r') {\n            s.pop();\n        }\n    }\n}\n</code></pre>\n\n<p>This is not equivalent to <code>trim()</code> in your original code, since it only removes a newline from the end of the string, rather than arbitrary whitespace from either end of the string.</p>\n\n<p>Yet another option is to use the <code>lines()</code> iterator that yields the lines from stdin without their terminating newline characters:</p>\n\n<pre><code>use std::io::{BufRead};\nlet stdin = std::io::stdin();\nfor line in stdin.lock().lines() {\n    let line = line?;   // line is a Result&lt;String, io::Error&gt;\n}\n</code></pre>\n"}], "owner": {"reputation": 571, "user_id": 6780089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcb6413d5c1778241f37cc86901c957a?s=128&d=identicon&r=PG&f=1", "display_name": "YLyu", "link": "https://stackoverflow.com/users/6780089/ylyu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 310, "favorite_count": 0, "closed_date": 1548703197, "accepted_answer_id": 54399051, "answer_count": 1, "score": 0, "last_activity_date": 1548685920, "creation_date": 1548646539, "last_edit_date": 1548685066, "question_id": 54395227, "link": "https://stackoverflow.com/questions/54395227/what-is-a-better-way-to-trim-n-from-iostdin-read-line", "closed_reason": "Opinion-based", "title": "What is a better way to trim &#39;\\n&#39; from io::stdin().read_line()?", "body": "<p>The code below works OK for me.</p>\n\n<pre><code>let mut buffer = String::new();\nio::stdin().read_line(&amp;mut buffer);\nbuffer = buffer.trim().to_string();\n</code></pre>\n\n<p>What is a better/correct way to trim <code>'\\n'</code> from <code>read_line</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 1, "last_activity_date": 1548639963, "last_edit_date": 1548639963, "creation_date": 1548639483, "answer_id": 54394531, "question_id": 54394334, "link": "https://stackoverflow.com/questions/54394334/how-do-i-create-a-string-array-that-can-be-passed-as-parameter-in-rust/54394531#54394531", "title": "How do I create a string array that can be passed as parameter in Rust?", "body": "<p>A nice way to check the type of a variable in rust is doing this:</p>\n\n<pre><code>let val: () = /* your value */;\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d3c414fdcda21a3c9caa6abc18f61703\" rel=\"nofollow noreferrer\">Playground</a>)<br>\nWhich gets you an error saying that it expected a <code>()</code> and not a <code>WhatEverYourTypeIs</code><br>\nIn this case you would get a <code>[&amp;'static str; 4]</code> as you mention already in your code; so just require that in the function:</p>\n\n<pre><code>fn check_string(data: [&amp;'static str; 4])\n</code></pre>\n\n<p>You could also pass a slice:</p>\n\n<pre><code>fn check_strings(data: &amp;[&amp;'static str])\n</code></pre>\n\n<p>And play with the lifetimes: </p>\n\n<pre><code>fn check_strings&lt;'a&gt;(data: &amp;'a[&amp;'a str])\n</code></pre>\n\n<p>etc.<br>\nTo call it pass either:</p>\n\n<pre><code>check_string(_array);\n</code></pre>\n\n<p>If it takes a sized array or</p>\n\n<pre><code>check_strings(&amp;_array[..]);\n</code></pre>\n\n<p>If it takes the slice.</p>\n"}], "owner": {"reputation": 75, "user_id": 10542876, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Todor Yanev", "link": "https://stackoverflow.com/users/10542876/todor-yanev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1548639963, "creation_date": 1548637103, "question_id": 54394334, "link": "https://stackoverflow.com/questions/54394334/how-do-i-create-a-string-array-that-can-be-passed-as-parameter-in-rust", "title": "How do I create a string array that can be passed as parameter in Rust?", "body": "<p>I have tried multiple things but it is a game of guessing at this point</p>\n\n<pre><code>fn main() {\n    let _array: [&amp;'static str; 4] = [\"First\", \"Second\", \"Third\", \"Fourth\"];\n\n    check_string(/*_array*/);\n}\n\nfn check_string(/*_input: ??? */) {\n\n\n}\n</code></pre>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548680510, "post_id": 54393846, "comment_id": 95615546, "body": "I don&#39;t think it&#39;s possible, and I also would like to know what you are doing with this information. You should not need this."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1548681947, "post_id": 54393846, "comment_id": 95616416, "body": "It seems that the underlying question is more about removing repetition. One way to do that in Rust is with macros. You could use a macro to generate the instructions enum at the same time as that big match expression."}, {"owner": {"reputation": 45, "user_id": 10157501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63fd6191294b1db759486b58908c83d3?s=128&d=identicon&r=PG&f=1", "display_name": "rivas", "link": "https://stackoverflow.com/users/10157501/rivas"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548690736, "post_id": 54393846, "comment_id": 95621842, "body": "@stargateur An 8080 ROM (in my case, Space Invaders) is read into my program as a single array of u8s. Each instruction is either 1, 2 or 3 u8s long: The first u8 represents the instruction type, and the remaining bytes are the associated data. For example, a JMP command has an associated u16 memory address to mark the jump location. As I parse this array, I iterate by instruction byte, so I need to know the length of the instruction to know by how much to increment the pointer. This might be a very naive way of doing this, I&#39;m not sure!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1548684120, "last_edit_date": 1548684120, "creation_date": 1548683518, "answer_id": 54403458, "question_id": 54393846, "link": "https://stackoverflow.com/questions/54393846/how-to-find-the-number-of-arguments-of-an-enum-variant/54403458#54403458", "title": "How to find the number of arguments of an enum variant?", "body": "<p>As mentioned in the comments, you can write a macro to write the code for you.</p>\n\n<p>In the interest of laziness, I've simplified the enum definition to always rquire parenthesis. This isn't required, it just simplified my job.</p>\n\n<p>Once the enum is parsed by the macro, we can generate an impl block with a function matching each variant. We pass the arguments of each variant to an inner macro that performs the count for us. This function returns the number of elements in each variant:</p>\n\n<pre><code>macro_rules! instructions {\n    (enum $ename:ident {\n        $($vname:ident ( $($vty: ty),* )),*\n    }) =&gt; {\n        enum $ename {\n            $($vname ( $($vty),* )),*\n        }\n\n        impl $ename {\n            fn len(&amp;self) -&gt; usize {\n                match self {\n                    $($ename::$vname(..) =&gt; instructions!(@count ($($vty),*))),*\n                }\n            }\n        }\n    };\n\n    (@count ()) =&gt; (0);\n    (@count ($a:ty)) =&gt; (1);\n    (@count ($a:ty, $b:ty)) =&gt; (2);\n    (@count ($a:ty, $b:ty, $c:ty)) =&gt; (3);\n}\n\ninstructions! {\n    enum Instruction {\n        None(),\n        One(u8),\n        Two(u8, u8),\n        Three(u8, u8, u8)\n    }\n}\n\nfn main() {\n    println!(\"{}\", Instruction::None().len());\n    println!(\"{}\", Instruction::One(1).len());\n    println!(\"{}\", Instruction::Two(1,2).len());\n    println!(\"{}\", Instruction::Three(1,2,3).len());\n\n}\n</code></pre>\n\n<p>You could also write <a href=\"https://doc.rust-lang.org/book/ch19-06-macros.html#how-to-write-a-custom-derive-macro\" rel=\"nofollow noreferrer\">a custom <code>derive</code> macro</a> that does the same functionality.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/37006835/155423\">Building an enum inside a macro</a></li>\n<li><a href=\"https://stackoverflow.com/q/52020446/155423\">How can I use a macro to generate enum variants that may or may not contain associated values?</a></li>\n<li><a href=\"http://danielkeep.github.io/tlborm/book/\" rel=\"nofollow noreferrer\"><em>The Little Book of Rust Macros</em></a></li>\n</ul>\n"}], "owner": {"reputation": 45, "user_id": 10157501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63fd6191294b1db759486b58908c83d3?s=128&d=identicon&r=PG&f=1", "display_name": "rivas", "link": "https://stackoverflow.com/users/10157501/rivas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 737, "favorite_count": 0, "accepted_answer_id": 54403458, "answer_count": 1, "score": 2, "last_activity_date": 1548684130, "creation_date": 1548631323, "last_edit_date": 1548684130, "question_id": 54393846, "link": "https://stackoverflow.com/questions/54393846/how-to-find-the-number-of-arguments-of-an-enum-variant", "title": "How to find the number of arguments of an enum variant?", "body": "<p>I have an enum which represents every possible instruction on an 8080 processor. An instruction can be 1, 2 or 3 bytes long, depending on whether it has information associated with it and how much. For example: </p>\n\n<pre><code>#[allow(non_camel_case_types)]\nenum Instruction {\n    None,\n    NOP,\n    LXI_B_D16(u8, u8),\n    STAX_B,\n    INX_B,\n    MVI_B_D8(u8),\n    MVI_C_D8(u8),\n    RRC,\n    LXI_D_D16(u8, u8),\n    MVI_D_D8(u8),\n    RAL,\n    DCR_E,\n    MVI_E_D8(u8),\n    LXI_H_D16(u8, u8),\n    SHLD(u16),\n    LHLD(u16),\n    // ...\n}\n</code></pre>\n\n<p>When it comes to assigning memory addresses to instructions, I iterate instruction-by-instruction through the binary file, using the length of each instruction to make sure my loop doesn't land halfway through an instruction and give me garbage. I do this with a huge match expression, which returns a tuple containing the correct instruction and its length: </p>\n\n<pre><code>match value {\n    0x00 =&gt; (Instruction::NOP, 1),\n    0x01 =&gt; (Instruction::LXI_B_D16(d1, d2), 3),\n    0x02 =&gt; (Instruction::STAX_B, 1),\n    0x05 =&gt; (Instruction::DCR_B, 1),\n    0x06 =&gt; (Instruction::MVI_B_D8(d1), 2),\n    0x07 =&gt; (Instruction::RLC, 1),\n    0x0e =&gt; (Instruction::MVI_C_D8(d1), 2),\n    0x0f =&gt; (Instruction::RRC, 1),\n    0x11 =&gt; (Instruction::LXI_D_D16(d1, d2), 3),\n    0x19 =&gt; (Instruction::DAD_D, 1),\n    // ...\n}\n</code></pre>\n\n<p>This is ugly, but I don't want to associate this length number into the type because it's really only important when I'm parsing the file. </p>\n\n<p>It seems like I should be able to just infer the length of an instruction from the shape of the variant. Anything with no argument is length 1, anything with one u8 argument is length 2, and anything with one u16 or two u8 arguments is length 3.</p>\n\n<p>I haven't been able to work out how to get this shape programatically. I can't call <code>len()</code> on it like an array or vector, for example.</p>\n\n<p>I don't think this is a duplicate of <a href=\"https://stackoverflow.com/questions/41637978/how-to-get-the-number-of-elements-in-an-enum-as-a-constant-value\">How to get the number of elements in an enum as a constant value?</a> as I'm not looking for a way to get the number of variants in the enum, but the number of <em>arguments of any individual variant</em>.</p>\n"}, {"tags": ["error-handling", "rust", "rust-macros", "rust-proc-macros"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 30, "last_activity_date": 1548809021, "last_edit_date": 1548809021, "creation_date": 1548633085, "answer_id": 54394014, "question_id": 54392702, "link": "https://stackoverflow.com/questions/54392702/how-to-report-errors-in-a-procedural-macro-using-the-quote-macro/54394014#54394014", "title": "How to report errors in a procedural macro using the quote macro?", "body": "<p>Apart from panicking, there are currently two ways to reports errors from a proc-macro: <strong><a href=\"https://doc.rust-lang.org/stable/proc_macro/struct.Diagnostic.html\" rel=\"noreferrer\">the unstable <code>Diagnostic</code> API</a> and \"the <code>compile_error!</code> trick\"</strong>. Currently, the latter is mostly used because it works on stable. Let's see how they both work.</p>\n\n<h3>The <code>compile_error!</code> trick</h3>\n\n<p>Since Rust 1.20, <a href=\"https://doc.rust-lang.org/stable/std/macro.compile_error.html\" rel=\"noreferrer\">the <code>compile_error!</code> macro exists in the standard library</a>. It takes a string and leads to an error at compile time. </p>\n\n<pre><code>compile_error!(\"oopsie woopsie\");\n</code></pre>\n\n<p>Which leads to (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5279fff5d75bab034dfe6eb3baee7f06\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: oopsie woopsie\n --&gt; src/lib.rs:1:1\n  |\n1 | compile_error!(\"oopsie woopsie\");\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>This macro has been added for two cases: <code>macro_rules!</code> macros and <code>#[cfg]</code>. In both cases, library authors can add better errors if the user uses the macro incorrectly or has the wrong <code>cfg</code> values. </p>\n\n<p>But proc-macro programmers had an interesting idea. As you might know, the <code>TokenStream</code> you return from your procedural macro can be created however you like. That includes the spans of those tokens: you can attach any spans you like to your output tokens. So the main idea is this:</p>\n\n<p><strong>Emit a tokenstream containing <code>compile_error!(\"your error message\");</code> but set the span of those tokens to the span of the input token that caused the error.</strong> There is even a macro in <code>quote</code> which makes this easier: <a href=\"https://docs.rs/quote/0.6.11/quote/macro.quote_spanned.html\" rel=\"noreferrer\"><code>quote_spanned!</code></a>. In your case, we can write this:</p>\n\n<pre><code>let output = if ty.to_string() != \"bool\" {\n    quote_spanned! {\n        ty.span() =&gt;\n        compile_error!(\"expected bool\");\n    }\n} else {\n    quote! {\n        const #name: #ty = false;\n    }\n};\n</code></pre>\n\n<p>For your faulty input, the compiler now prints this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected bool\n --&gt; examples/main.rs:4:7\n  |\n4 |     #[something_else]\n  |       ^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Why exactly does this work? Well: the error for <code>compile_error!</code> shows the code snippet containing the <code>compile_error!</code> invocation. For that, the span of the <code>compile_error!</code> invocation is used. But since we set the span to point to the faulty input token <code>ty</code>, the compiler shows the snippet underlining that token.</p>\n\n<p>This trick is also used by <code>syn</code> to print nice errors. In fact, if you are using <code>syn</code> anyway, you can use its <code>Error</code> type and in particular the <a href=\"https://docs.rs/syn/0.15.26/syn/struct.Error.html#method.to_compile_error\" rel=\"noreferrer\"><code>Error::to_compile_error</code> method</a> which returns exactly the token stream we manually created with <code>quote_spanned!</code>:</p>\n\n<pre><code>syn::Error::new(ty.span(), \"expected bool\").to_compile_error()\n</code></pre>\n\n<hr>\n\n<h3>The <code>Diagnostic</code> API</h3>\n\n<p>As this is still unstable, just a short example. The diagnostic API is more powerful than the trick above as you can have multiple spans, warnings and notes.</p>\n\n<pre><code>Diagnostic::spanned(ty.span().unwrap(), Level::Error, \"expected bool\").emit();\n</code></pre>\n\n<p>After that line, the error is printed, but you can still do stuff in your proc-macro. Usually, you would just return an empty token stream.</p>\n"}, {"tags": [], "owner": {"reputation": 4500, "user_id": 8858995, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d1981ec5dd8311a79e695d512716ef?s=128&d=identicon&r=PG&f=1", "display_name": "Ibraheem Ahmed", "link": "https://stackoverflow.com/users/8858995/ibraheem-ahmed"}, "is_accepted": false, "score": 1, "last_activity_date": 1613083511, "creation_date": 1613083511, "answer_id": 66164065, "question_id": 54392702, "link": "https://stackoverflow.com/questions/54392702/how-to-report-errors-in-a-procedural-macro-using-the-quote-macro/66164065#66164065", "title": "How to report errors in a procedural macro using the quote macro?", "body": "<p>The accepted answer mentioned the unstable <code>Diagnostic</code> API, which gives you much more power and control than the regular <code>compile_error</code>. Until the <code>Diagnostic</code> API stabilizes, <a href=\"https://github.com/rust-lang/rust/issues/54140\" rel=\"nofollow noreferrer\">which probably will not be any time soon</a>, you can use the <a href=\"https://docs.rs/proc-macro-error\" rel=\"nofollow noreferrer\"><code>proc_macro_error</code></a> crate. It provides a <a href=\"https://docs.rs/proc-macro-error/1.0.4/proc_macro_error/struct.Diagnostic.html\" rel=\"nofollow noreferrer\"><code>Diagnostic</code></a> type that is designed to be API compatible with the unstable <code>proc_macro::Diagnostic</code>. The entire API is not implemented, only the part that can be reasonably implemented on stable. You can use it by simply adding the provided annotation to your macro:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[proc_macro_error]\n#[proc_macro]\nfn my_macro(input: TokenStream) -&gt; TokenStream {\n    // ...\n    Diagnostic::spanned(ty.span().unwrap(), Level::Error, &quot;expected bool&quot;).emit();\n}\n</code></pre>\n<p><code>proc_macro_error</code> also provides some useful macros for emitting errors:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>abort! { input,\n    &quot;I don't like this part!&quot;;\n        note = &quot;A notice message...&quot;;\n        help = &quot;A help message...&quot;;\n}\n</code></pre>\n<p>However, you might want to consider sticking to using the <code>Diagnostic</code> type as it will make it easier to migrate to the the official <code>Diagnostic</code> API when it stabilizes.</p>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2763, "favorite_count": 0, "accepted_answer_id": 54394014, "answer_count": 2, "score": 22, "last_activity_date": 1613083511, "creation_date": 1548621892, "last_edit_date": 1556805920, "question_id": 54392702, "link": "https://stackoverflow.com/questions/54392702/how-to-report-errors-in-a-procedural-macro-using-the-quote-macro", "title": "How to report errors in a procedural macro using the quote macro?", "body": "<p>I am writing a procedural macro which works fine, but I am having trouble reporting errors in an ergonomic way. Using <code>panic!</code> \"works\" but is not elegant and does not present the error message to the user nicely.</p>\n\n<p>I know that I can report good errors while parsing a <code>TokenStream</code>, but I need to produce errors while traversing the AST after it has been parsed. </p>\n\n<p>The macro invocation looks like this:</p>\n\n<pre><code>attr_test! {\n    #[bool]\n    FOO\n}\n</code></pre>\n\n<p>And should output:</p>\n\n<pre><code>const FOO: bool = false;\n</code></pre>\n\n<p>This is the macro code:</p>\n\n<pre><code>extern crate proc_macro;\nuse quote::quote;\nuse syn::parse::{Parse, ParseStream, Result};\nuse syn::{Attribute, parse_macro_input, Ident, Meta};\n\nstruct AttrTest {\n    attributes: Vec&lt;Attribute&gt;,\n    name: Ident,\n}\n\nimpl Parse for AttrTest {\n    fn parse(input: ParseStream) -&gt; Result&lt;Self&gt; {\n        Ok(AttrTest {\n            attributes: input.call(Attribute::parse_outer)?,\n            name: input.parse()?,\n        })\n    }\n}\n\n#[proc_macro]\npub fn attr_test(tokens: proc_macro::TokenStream) -&gt; proc_macro::TokenStream {\n    let test: AttrTest = parse_macro_input!(tokens);\n    let name = test.name;\n    let first_att = test.attributes\n        .get(0)\n        .and_then(|att| att.parse_meta().ok());\n    if let Some(Meta::Word(ty)) = first_att {\n        if ty.to_string() != \"bool\" {\n            panic!(\"expected bool\");\n        }\n        let output = quote! {\n            const #name: #ty = false;\n        };\n        output.into()\n    } else {\n        panic!(\"malformed or missing metadata\")\n    }\n}\n</code></pre>\n\n<p>I would like to produce an error if anything other than <code>bool</code> is specified in the attribute. For example, input like this:</p>\n\n<pre><code>attr_test! {\n    #[something_else]\n    FOO\n}\n</code></pre>\n\n<p>should result in something like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected bool\nattr_test! {\n    #[something_else]\n      ^^^^^^^^^^^^^^ expected bool\n    FOO\n}\n</code></pre>\n\n<p>During parsing, there is a <code>Result</code>, which has lots of useful information including a <code>span</code>, so the resulting errors can highlight the exact parts of the macro call that have a problem. But once I'm traversing the AST, I can't see a good way to report errors.</p>\n\n<p>How should this be done?</p>\n"}, {"tags": ["collections", "rust", "traits", "equality"], "comments": [{"owner": {"reputation": 2777, "user_id": 4852094, "user_type": "registered", "accept_rate": 68, "profile_image": "https://graph.facebook.com/10102767534136292/picture?type=large", "display_name": "Rob", "link": "https://stackoverflow.com/users/4852094/rob"}, "edited": false, "score": 0, "creation_date": 1548614363, "post_id": 54391559, "comment_id": 95594931, "body": "I think I just need to impl PartialEq..."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1548617332, "post_id": 54391619, "comment_id": 95595935, "body": "For this example, as for most cases, deriving is enough."}], "tags": [], "owner": {"reputation": 2777, "user_id": 4852094, "user_type": "registered", "accept_rate": 68, "profile_image": "https://graph.facebook.com/10102767534136292/picture?type=large", "display_name": "Rob", "link": "https://stackoverflow.com/users/4852094/rob"}, "is_accepted": false, "score": 1, "last_activity_date": 1548614540, "creation_date": 1548614540, "answer_id": 54391619, "question_id": 54391559, "link": "https://stackoverflow.com/questions/54391559/how-to-check-for-a-struct-in-a-collection-of-structs-by-structural-equality/54391619#54391619", "title": "How to check for a struct in a collection of structs, by structural equality?", "body": "<p>You need to impl PartialEq and the eq method as stated in <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/cmp/trait.PartialEq.html</a></p>\n\n<pre><code>pub struct Test {\n    val1: u8,\n    val2: u8,\n}\n\nimpl PartialEq for Test {\n    fn eq(&amp;self, other: &amp;Test) -&gt; bool {\n        self.val1 == other.val1 &amp;&amp; self.val2 == other.val2\n    }\n}\n\nfn main() {\n    let a = Test{val1: 1, val2: 1};\n    let b = Test{val1: 1, val2: 2};\n    let c = Test{val1: 1, val2: 2};\n    let my_vec = vec!(a, b);\n\n    println!(\"{}\", my_vec.contains(&amp;c));\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1548622316, "post_id": 54391634, "comment_id": 95597219, "body": "More precisely, the <code>contains()</code> method is defined for <i>slices</i>, and it is available for vectors by virtue of a deref coercion."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1548617363, "last_edit_date": 1548617363, "creation_date": 1548614620, "answer_id": 54391634, "question_id": 54391559, "link": "https://stackoverflow.com/questions/54391559/how-to-check-for-a-struct-in-a-collection-of-structs-by-structural-equality/54391634#54391634", "title": "How to check for a struct in a collection of structs, by structural equality?", "body": "<p><code>Vec</code> has a method, <code>contains</code>, for checking if it contains a particular value.  The method requires that the elements implement <code>PartialEq</code>, which you can automatically derive like this:</p>\n\n<pre><code>#[derive(PartialEq)]\npub struct Test {\n    val1: u8,\n    val2: u8,\n}\n</code></pre>\n\n<p>So now you can do:</p>\n\n<pre><code>assert!(my_vec.contains(&amp;c));\n</code></pre>\n\n<p>If your collection gets large, this will be quite inefficient, since it will have to compare against every element until it finds one that matches. A <code>HashSet</code> would be more efficient, but comes with its own requirement that you need to implement <code>Eq</code> and <code>Hash</code> too. Luckily, those can usually be derived in the same way.</p>\n"}], "owner": {"reputation": 2777, "user_id": 4852094, "user_type": "registered", "accept_rate": 68, "profile_image": "https://graph.facebook.com/10102767534136292/picture?type=large", "display_name": "Rob", "link": "https://stackoverflow.com/users/4852094/rob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 251, "favorite_count": 0, "accepted_answer_id": 54391634, "answer_count": 2, "score": 0, "last_activity_date": 1548617363, "creation_date": 1548614138, "last_edit_date": 1548614715, "question_id": 54391559, "link": "https://stackoverflow.com/questions/54391559/how-to-check-for-a-struct-in-a-collection-of-structs-by-structural-equality", "title": "How to check for a struct in a collection of structs, by structural equality?", "body": "<p>If I have a struct:</p>\n\n<pre><code>pub struct Test {\n    val1: u8,\n    val2: u8,\n}\n</code></pre>\n\n<p>and I make a <code>vec!</code> of these like:</p>\n\n<pre><code>let a = Test{val1: 1, val2: 1};\nlet b = Test{val1: 1, val2: 2};\nlet c = Test{val1: 1, val2: 2};\nlet my_vec = vec![a, b];\n</code></pre>\n\n<p>How can I tell if <code>my_vec</code> contains a struct with the same values as c?</p>\n"}, {"tags": ["winapi", "path", "rust"], "comments": [{"owner": {"reputation": 8766, "user_id": 451321, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/7Sdao.jpg?s=128&g=1", "display_name": "Michael Chourdakis", "link": "https://stackoverflow.com/users/451321/michael-chourdakis"}, "edited": false, "score": 0, "creation_date": 1548618716, "post_id": 54391427, "comment_id": 95596295, "body": "What is the reason of using such a library? Avoid all Linux things in Windows, especially if you look for user friendliness. The fact that it stores the directory with /s shows ignorance of Windows naming styles. Please avoid all these libraries."}, {"owner": {"reputation": 14021, "user_id": 7571258, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/fBP6e.png?s=128&g=1", "display_name": "zett42", "link": "https://stackoverflow.com/users/7571258/zett42"}, "edited": false, "score": 0, "creation_date": 1548634208, "post_id": 54391427, "comment_id": 95599888, "body": "<code>Path</code> has method <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.as_os_str\" rel=\"nofollow noreferrer\"><code>as_os_str</code></a>, does it return the path in the desired format?"}], "owner": {"reputation": 771, "user_id": 568233, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/jEUAq.jpg?s=128&g=1", "display_name": "reish", "link": "https://stackoverflow.com/users/568233/reish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 78, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1548613360, "creation_date": 1548613360, "question_id": 54391427, "link": "https://stackoverflow.com/questions/54391427/humanizing-paths-in-windows", "title": "Humanizing paths in Windows", "body": "<p>The <a href=\"https://github.com/soc/directories-rs\" rel=\"nofollow noreferrer\">directories</a> crate internally stores paths in Windows in their long form, such as <code>//?/C:/Users/roey/.emacs.d</code>. These paths are printed in this form when their <code>.display()</code> method is called, which is not very human friendly. Is there any way to humanize these paths without creating <code>String</code> and calling <code>.replace()</code>?</p>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "is_accepted": false, "score": 0, "last_activity_date": 1548616497, "creation_date": 1548616497, "answer_id": 54391929, "question_id": 54391069, "link": "https://stackoverflow.com/questions/54391069/how-can-i-create-an-application-json-httpresponse-in-actix/54391929#54391929", "title": "How can I create an application/json HTTPResponse in actix?", "body": "<p>Same as in first example, just replace .content_type() with .set()</p>\n"}], "owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 136, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1548616497, "creation_date": 1548611152, "question_id": 54391069, "link": "https://stackoverflow.com/questions/54391069/how-can-i-create-an-application-json-httpresponse-in-actix", "title": "How can I create an application/json HTTPResponse in actix?", "body": "<p>In the <code>example</code> <a href=\"https://github.com/actix/examples/blob/master/basics/src/main.rs#L57\" rel=\"nofollow noreferrer\">section</a>, they use:</p>\n\n<pre><code>HttpResponse::Ok()\n    .content_type(\"text/plain\")\n    .body(format!(\"Hello {}!\", req.match_info().get(\"name\").unwrap()))\n</code></pre>\n\n<p>Yet I don't like to hardcode my <code>content-type</code> since there's a nice <a href=\"https://github.com/actix/actix-web/blob/master/src/header/common/content_type.rs#L54\" rel=\"nofollow noreferrer\">class</a> that shows I can use an enum for the <code>json</code> response:</p>\n\n<pre><code>let mut builder = HttpResponse::Ok();\nbuilder.set(ContentType(TEXT_HTML));\n</code></pre>\n\n<p>The problem is that I want to set the response's body as well. How can I do it in <code>builder</code> above?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548607543, "post_id": 54390299, "comment_id": 95592831, "body": "The best way to learn this is to look in the source for any of the built-in iterator functions. For example <a href=\"https://doc.rust-lang.org/src/core/iter/iterator.rs.html#783-785\" rel=\"nofollow noreferrer\">enumerate</a> is a simple one. The implementation of the struct is <a href=\"https://doc.rust-lang.org/src/core/iter/mod.rs.html#1661-1688\" rel=\"nofollow noreferrer\">here</a>. Note that this implementation overrides a lot of methods, but you only need to define <code>next</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548607608, "post_id": 54390299, "comment_id": 95592845, "body": "This is a good thing to learn, but I would argue that this is not &quot;cleaner&quot; in this particular case. It will introduce a lot of code which is not really necessary compared to just using <code>map</code> as intended."}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548607833, "post_id": 54390299, "comment_id": 95592903, "body": "@E4_net_or_something_like_that Thanks for the links. I agree that it is not cleaner in this simple case, but I needed a simple example so as not to make the question to broad."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1548608422, "post_id": 54390450, "comment_id": 95593082, "body": "Please do not answer duplicates; it makes maintaining an up-to-date knowledge base much harder."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1548607589, "creation_date": 1548607589, "answer_id": 54390450, "question_id": 54390299, "link": "https://stackoverflow.com/questions/54390299/how-do-i-write-my-own-chainable-iterator-function-in-rust/54390450#54390450", "title": "How do I write my own chainable iterator function in Rust?", "body": "<p>First you have to create a new-type to implement your iterator. The simplest way is to wrap a iterator of the type you want to target:</p>\n\n<pre><code>struct Double&lt;T: ?Sized&gt; {\n    inner: T,\n}\n</code></pre>\n\n<p>Now you just implement the <code>Iterator</code> trait for this type if the innert type <code>T</code> is of the correct type. Something like:</p>\n\n<pre><code>impl&lt;T&gt; Iterator for Double&lt;T&gt;\nwhere T: Iterator&lt;Item = i32&gt; {\n    type Item = i32;\n    fn next(&amp;mut self) -&gt; Option&lt;i32&gt; {\n        self.inner.next().map(|x| 2*x)\n    }\n}\n</code></pre>\n\n<p>And that's it! You just need to add a <code>Double</code> constructor. The most ergonomic solution is to extend <code>Iterator</code>. Something like this:</p>\n\n<pre><code>trait Doubler : Iterator&lt;Item = i32&gt; {\n    fn into_double(self) -&gt; Double&lt;Self&gt;;\n}\n\nimpl&lt;T&gt; Doubler for T\nwhere T: Iterator&lt;Item = i32&gt; {\n    fn into_double(self) -&gt; Double&lt;Self&gt; {\n        Double { inner: self }\n    }\n}\n</code></pre>\n\n<p>An example of usage (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e6118b6cbca81909749d657bf1f8df88\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>fn main() {\n    vec![1, 2, 3]\n        .into_iter()\n        .into_double()\n        .for_each(|x| println!(\"{}\", x));\n}\n</code></pre>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "closed_date": 1548608383, "accepted_answer_id": 54390450, "answer_count": 1, "score": -1, "last_activity_date": 1548607589, "creation_date": 1548606610, "question_id": 54390299, "link": "https://stackoverflow.com/questions/54390299/how-do-i-write-my-own-chainable-iterator-function-in-rust", "closed_reason": "Duplicate", "title": "How do I write my own chainable iterator function in Rust?", "body": "<p>Let's say I want to double each value in an iterator of numbers. I could do this:</p>\n\n<pre><code>vec![1, 2, 3]\n    .into_iter()\n    .map(|x| x * 2)\n    .for_each(|x| println!(\"{}\", x)); //Prints 2, 4, 6.\n</code></pre>\n\n<p>To get cleaner code, I would prefer to do this:</p>\n\n<pre><code>vec![1, 2, 3]\n    .into_iter()\n    .double() //I need to implement this.\n    .for_each(|x| println!(\"{}\", x));\n</code></pre>\n\n<p>How do I write my own chainable iterator function, like <code>double</code> in this example? I guess I will have to create an interface and implement it for Iterator? There are a lot of types to get right, so a working solution for this silly example would be helpful.</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 4, "creation_date": 1548561532, "post_id": 54384906, "comment_id": 95582577, "body": "I have no idea if that is available in Rocket, but note that that is typically done through some other part of the web stack, such as a reverse proxy (for example, nginx). Of course, if you&#39;re not using one then it&#39;s way bigger a change than a bunch of conditionals :)"}, {"owner": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "reply_to_user": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 1, "creation_date": 1548561833, "post_id": 54384906, "comment_id": 95582626, "body": "Hmm yeah I&#39;m not.  I&#39;m learning about web servers/security and so I&#39;m trying to build it from the group up.  Guess for now I&#39;ll just use conditionals, thanks!"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1548716794, "post_id": 54384906, "comment_id": 95634060, "body": "You could likely build a request guard, given that you already know how to get the hostname."}, {"owner": {"reputation": 186, "user_id": 7977272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea54af42147b6186a88e5bba4bc39b8f?s=128&d=identicon&r=PG&f=1", "display_name": "olehermanse", "link": "https://stackoverflow.com/users/7977272/olehermanse"}, "edited": false, "score": 0, "creation_date": 1557679148, "post_id": 54384906, "comment_id": 98837278, "body": "@vcapra1 I would also like this feature in rocket. Since you say &quot;I know how to get the hostname&quot;, could you add an example to your question where you show this?"}, {"owner": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "reply_to_user": {"reputation": 186, "user_id": 7977272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea54af42147b6186a88e5bba4bc39b8f?s=128&d=identicon&r=PG&f=1", "display_name": "olehermanse", "link": "https://stackoverflow.com/users/7977272/olehermanse"}, "edited": false, "score": 1, "creation_date": 1557689982, "post_id": 54384906, "comment_id": 98840124, "body": "@olehermanse Check out my gist here <a href=\"https://gist.github.com/vcapra1/2dc30575f798d9702433a6c57882862b\" rel=\"nofollow noreferrer\">gist.github.com/vcapra1/2dc30575f798d9702433a6c57882862b</a>.  Basically you have an argument for each route that implements FromRequest and outputs success when it matches, but forwards when it doesn&#39;t (this example is a minimal example and I haven&#39;t tested it but it should work, just replace the actual URLs with the ones you want, etc)."}, {"owner": {"reputation": 186, "user_id": 7977272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea54af42147b6186a88e5bba4bc39b8f?s=128&d=identicon&r=PG&f=1", "display_name": "olehermanse", "link": "https://stackoverflow.com/users/7977272/olehermanse"}, "edited": false, "score": 1, "creation_date": 1558436252, "post_id": 54384906, "comment_id": 99092182, "body": "@vcapra1 Thanks! I managed to get it working in a slightly different way, see my comment on your gist: <a href=\"https://gist.github.com/vcapra1/2dc30575f798d9702433a6c57882862b#gistcomment-2922765\" rel=\"nofollow noreferrer\">gist.github.com/vcapra1/&hellip;</a>"}], "owner": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 318, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1548561172, "creation_date": 1548561172, "question_id": 54384906, "link": "https://stackoverflow.com/questions/54384906/rocket-rs-route-by-subdomain", "title": "Rocket.rs route by subdomain", "body": "<p>Is there a way to handle requests from different subdomains differently?  For example, I have <code>www.example.com</code> which I'd like to return <code>www.html</code> and <code>aaa.example.com</code> which I'd like to return <code>aaa.html</code>.</p>\n\n<p>I know how to <em>get</em> the hostname, and I could always just check that and have different branches that respond to the same request and each checks for a different hostname, but that seems a bit excessive.</p>\n\n<p>I was wondering if there was something like this:</p>\n\n<pre><code>#[get(\"/\", host=\"www.example.com\")]\nfn index() -&gt; &amp;'static str {\n    \"www\"\n}\n\n#[get(\"/\", host=\"aaa.example.com\")]\nfn index() -&gt; &amp;'static str {\n    \"aaa\"\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1548593214, "post_id": 54382394, "comment_id": 95588568, "body": "Note that an alternative solution to using references to <code>GameMoveType</code> would be just to derive <code>Copy</code> for it (which would in turn require the same for<code>PieceType</code>). The types seem pretty lightweight, so <code>Copy</code> seems appropriate - unless you&#39;ve stripped out some expensive-to-copy components from the definitions for the MCVE, of course."}], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 0, "creation_date": 1548537306, "post_id": 54382778, "comment_id": 95578541, "body": "The while loop is there to go to the next move if it the one at the current index doesn&#39;t match the specified move-type."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 1, "creation_date": 1548537495, "post_id": 54382778, "comment_id": 95578580, "body": "@Fabianv.d.W I guess I&#39;ll have to just believe you here, because I don&#39;t know how you decided to model the domain, and I don&#39;t even understand the domain very well... Another remark: the <code>IntoIterator for &amp;&#39;a FooBar</code> is quite a common idiom, check out some of the examples <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html#implementors\" rel=\"nofollow noreferrer\">in the standard library</a>, roughly half(?) of them look like <code>IntoIterator for &amp;&#39;a Something</code>."}, {"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 0, "creation_date": 1548537569, "post_id": 54382778, "comment_id": 95578601, "body": "Isn&#39;t the implemented iterator destructive anyway, since it takes ownership of the Vec&lt;GameMove&gt;? So in anyway, I can use it only once or did I misunderstand something?"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 1, "creation_date": 1548537638, "post_id": 54382778, "comment_id": 95578626, "body": "@Fabianv.d.W That&#39;s the reason why I replaced the owning <code>Vec&lt;GameMove&gt;</code> by the immutable reference <code>&amp;&#39;a [GameMove]</code>."}, {"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 0, "creation_date": 1548537839, "post_id": 54382778, "comment_id": 95578677, "body": "I see, but doesn&#39;t the into_iter function of MoveFilter take ownership of MoveFilter which in turn takes ownership of legal_moves?"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 1, "creation_date": 1548538011, "post_id": 54382778, "comment_id": 95578710, "body": "@Fabianv.d.W No, it doesn&#39;t. The method <code>fn into_iter(self)</code> takes a <code>self: Self</code>, and <code>Self</code> has now been changed to <code>Self = &amp;&#39;t MoveFilter</code> instead of <code>Self = MoveFilter</code>. Don&#39;t confuse it with <code>into_iter()</code> on owning vectors or something like that: for an owning vector, it produces a destructive iterator. But here, I implemented it for an immutable reference <code>&amp;&#39;t MoveFilter</code>, so <code>into_iter()</code> doesn&#39;t move anything."}, {"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 0, "creation_date": 1548538338, "post_id": 54382778, "comment_id": 95578795, "body": "Right, thanks, that resolved the issues in my head. For now, I have also changed your &amp;&#39;a [GameMove] into &amp;&#39;a Vec&lt;GameMove&gt; that also seems to work. BTW: I can&#39;t seem to tag you on those comments, and how do you use the markdown for code in comments?"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 1, "creation_date": 1548538537, "post_id": 54382778, "comment_id": 95578845, "body": "@Fabianv.d.W Tagging (if you mean the (at)-thing) is not necessary, because I&#39;m notified about all comments under my postings anyway (that&#39;s how it works in general). Inline code in comments works the same way as in postings: enclose the code in backticks (I think the backticks must &quot;touch&quot; the non-whitespace portion of the code)."}, {"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 0, "creation_date": 1548538642, "post_id": 54382778, "comment_id": 95578875, "body": "Another question I had was that my enum GameMoveType has the field Capture(PieceType) Now if i wanted to compare two GameMoveTypes if they are both captures regardless of what inner PieceType they have, how would I do that? I solved it with the function match_move_type you can see above, which maps a GameMoveType to a number, but I feel like there must a better way to do that."}], "tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": true, "score": 2, "last_activity_date": 1548537218, "last_edit_date": 1548537218, "creation_date": 1548536898, "answer_id": 54382778, "question_id": 54382394, "link": "https://stackoverflow.com/questions/54382394/how-to-set-the-lifetime-on-these-structures/54382778#54382778", "title": "How to set the lifetime on these structures?", "body": "<p>There is a discrepancy between your\nmethod <code>fn into_iter(self: MoveFilter)</code> that takes ownership of <code>MoveFilter</code>\nand\nthe method <code>fn next(&amp;mut self) -&gt; Option&lt;&amp;GameMove&gt;</code> that only wants to hand out immutable references to <code>GameMove</code>s. Who is supposed to own the referenced <code>GameMove</code>s after your <code>into_iter</code> takes ownership of the <code>MoveFilter</code> and completely consumes it?</p>\n\n<p>One way to fix it would be to implement <code>IntoIterator</code> for <code>&amp;'a MoveFilter</code>, that does not take ownership of <code>MoveFilter</code>, and thus does not have to worry that all <code>GameMove</code>s are discarded while there are any references <code>&amp;'a GameMove</code> floating around:</p>\n\n<pre><code>pub struct GameMove {\n    pub from: usize,\n    pub to: usize,\n    pub move_type: GameMoveType,\n    pub piece_type: PieceType,\n}\n\n#[derive(PartialEq, Clone, Debug)]\npub enum GameMoveType {\n    Quiet,\n    Capture(PieceType),\n}\n\n#[derive(PartialEq, Clone, Debug)]\npub enum PieceType {\n    King,\n    Pawn\n}\n\npub fn match_move_type(move_type: &amp;GameMoveType) -&gt; usize {\n    match move_type {\n        GameMoveType::Quiet =&gt; 0,\n        GameMoveType::Capture(_) =&gt; 1,\n    }\n}\n\npub struct MoveFilter {\n    legal_moves: Vec&lt;GameMove&gt;,\n    move_type: GameMoveType,\n}\n\nimpl&lt;'t&gt; IntoIterator for &amp;'t MoveFilter {\n    type Item = &amp;'t GameMove;\n    type IntoIter = MoveFilterIterator&lt;'t&gt;;\n    fn into_iter(self) -&gt; Self::IntoIter {\n        MoveFilterIterator {\n            legal_moves: &amp;self.legal_moves[..],\n            move_type: match_move_type(&amp;self.move_type),\n            index: 0,\n        }\n    }\n}\n\npub struct MoveFilterIterator&lt;'a&gt; {\n    legal_moves: &amp;'a [GameMove],\n    move_type: usize,\n    index: usize,\n}\n\nimpl&lt;'a&gt; Iterator for MoveFilterIterator&lt;'a&gt; {\n    type Item = &amp;'a GameMove;\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a GameMove&gt; {\n        while self.index &lt; self.legal_moves.len() {\n            if match_move_type(&amp;self.legal_moves[self.index].move_type) == self.move_type {\n                return Some(&amp;self.legal_moves[self.index])\n            } else {\n                self.index += 1;\n            }\n        }\n        None\n    }\n}\n</code></pre>\n\n<p>Another possible solution would be to leave your <code>IntoIterator for MoveFilter</code> as-is, but then change <code>Item = &amp;GameMove</code> to <code>Item = GameMove</code>. This would give you a destructive iterator that moves the <code>MoveFilter</code> and that can be used only once, but I assume that's not what you wanted when you began with <code>type Item = &amp;GameMove</code>. Implementing it seems a bit more awkward, because it's not entirely trivial to remove single elements from a vector, and I didn't quite understand what that <code>while</code>-loop was doing there.</p>\n"}], "owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 54382778, "answer_count": 1, "score": 3, "last_activity_date": 1548537218, "creation_date": 1548534193, "last_edit_date": 1548534794, "question_id": 54382394, "link": "https://stackoverflow.com/questions/54382394/how-to-set-the-lifetime-on-these-structures", "title": "How to set the lifetime on these structures?", "body": "<p>I am trying to make an Iterator which filters out certain moves from a movelist. In order not to take ownership of the returned moves, they get referenced. However, when doing that, the <code>missing lifetime specifier</code> compiler error appears. As I have a chain of structs, I thought the first step to solve the problem was to start putting lifetimes on <code>MoveFilter</code> and then onto it's <code>type Item</code> in <code>IntoIterator</code>. However there it complains the usage of an undeclared lifetime. \nCode:</p>\n\n<pre><code>pub struct GameMove {\n    pub from: usize,\n    pub to: usize,\n    pub move_type: GameMoveType,\n    pub piece_type: PieceType,\n}\n#[derive(PartialEq, Clone, Debug)]\npub enum GameMoveType {\n    Quiet,\n    Capture(PieceType),\n}\n\n#[derive(PartialEq, Clone, Debug)]\npub enum PieceType {\n    King,\n    Pawn\n}\n\npub fn match_move_type(move_type: &amp;GameMoveType) -&gt; usize {\n    match move_type {\n        GameMoveType::Quiet =&gt; 0,\n        GameMoveType::Capture(_) =&gt; 1,\n    }\n}\n\npub struct MoveFilter&lt;'a&gt; {\n    legal_moves: Vec&lt;GameMove&gt;,\n    move_type: GameMoveType,\n}\n\nimpl IntoIterator for MoveFilter {\n    type Item = &amp;'a GameMove;\n    type IntoIter = MoveFilterIterator;\n    fn into_iter(self) -&gt; Self::IntoIter {\n        MoveFilterIterator {\n            legal_moves: self.legal_moves,\n            move_type: match_move_type(&amp;self.move_type),\n            index: 0,\n        }\n    }\n}\n\npub struct MoveFilterIterator {\n    legal_moves: Vec&lt;GameMove&gt;,\n    move_type: usize,\n    index: usize,\n}\n\nimpl Iterator for MoveFilterIterator {\n    type Item = &amp;GameMove;\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;GameMove&gt; {\n        while self.index &lt; self.legal_moves.len() {\n            if match_move_type(&amp;self.legal_moves[self.index].move_type) == self.move_type {\n                Some(&amp;self.legal_moves[self.index])\n            } else {\n                self.index += 1;\n            }\n        }\n        None\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1548517723, "post_id": 54379841, "comment_id": 95573339, "body": "What most people do is create a new struct, say <code>GameIter</code>, and provide it to the user like <code>game.iter()</code>. Any struct that implements <code>Iterator</code> can be used in a <code>for ... in ...</code> expression and if you want to limit the number of iterations, simply use <code>take</code>."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548523333, "post_id": 54379841, "comment_id": 95574878, "body": "This question would be significantly clearer if you provided an implementation of the <code>Game</code> struct."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 1, "creation_date": 1548523795, "post_id": 54379841, "comment_id": 95575006, "body": "@AndreyTyukin: And of the <code>next</code> function..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1548523837, "post_id": 54379841, "comment_id": 95575017, "body": "What is wrong with implementing <code>Iterator</code> and <code>IntoIter</code>?"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 2, "creation_date": 1548524067, "post_id": 54379841, "comment_id": 95575079, "body": "Related: <a href=\"https://stackoverflow.com/questions/27601115/writing-an-iterator?noredirect=1&amp;lq=1\">Writing an Iterator?</a>, <a href=\"https://stackoverflow.com/questions/30218886/how-to-implement-iterator-and-intoiterator-for-a-simple-struct/30220832\">How to implement Iterator and IntoIterator for a simple struct?</a> the answer is essentially in the question titles..."}, {"owner": {"reputation": 1734, "user_id": 882187, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/J5Vum.png?s=128&g=1", "display_name": "Vladimir Ignatyev", "link": "https://stackoverflow.com/users/882187/vladimir-ignatyev"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548654937, "post_id": 54379841, "comment_id": 95603553, "body": "@AndreyTyukin I&#39;ve just updated a question with the implementation of Iterator and better explanation of the problem I address in my question."}, {"owner": {"reputation": 1734, "user_id": 882187, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/J5Vum.png?s=128&g=1", "display_name": "Vladimir Ignatyev", "link": "https://stackoverflow.com/users/882187/vladimir-ignatyev"}, "edited": false, "score": 0, "creation_date": 1548655913, "post_id": 54379841, "comment_id": 95603813, "body": "All the question appeared because of a frustration that my implementation of Iterator works differently for <code>loop</code> and for <code>for</code>. The way my example with <code>loop</code> above works looks very same as described behavior of <code>for</code>, while I don&#39;t get expected behavior and can&#39;t catch what the problem with it, that&#39;s why I supposed that the problem is how I implement Iterator trait."}], "answers": [{"tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 3, "last_activity_date": 1548524191, "creation_date": 1548524191, "answer_id": 54380940, "question_id": 54379841, "link": "https://stackoverflow.com/questions/54379841/how-to-properly-implement-iterable-structure-in-rust/54380940#54380940", "title": "How to properly implement Iterable structure in Rust?", "body": "<p>In the Rust iterators actually can be divided into 2 categories. Iterators which own the struct, thus can be created using <code>.into_iter()</code> which consumes <code>self</code>.</p>\n\n<p>And iterators that iterate over structure without consuming it. They can be created be usually created using: <code>.iter</code>, <code>.iter_mut()</code></p>\n\n<p>For more information see related question: <a href=\"https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter\">What is the difference between iter and into_iter?</a>\nAnd documention: <a href=\"https://doc.rust-lang.org/stable/std/iter/#the-three-forms-of-iteration\" rel=\"nofollow noreferrer\">The three forms of iteration</a></p>\n\n<p>To create iterator you should implement either <code>IntoIterator</code> trait, which will transform your structure into iterator or write functions which will create iterator: <code>iter_mut</code>, <code>iter</code> </p>\n\n<p><code>pub fn iter_mut(&amp;mut self) -&gt; IterMut&lt;T&gt;</code></p>\n\n<p><code>pub fn iter(&amp;self) -&gt; Iter&lt;T&gt;</code></p>\n\n<p>So by convention you need 2 new types <code>IterMut</code> and <code>Iter</code></p>\n\n<pre><code>impl Iterator for Iter {\n    type Item = /* ... */;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        /* ... */\n    }\n}\n\nimpl Iterator for IterMut {\n    type Item = &amp;mut /* ... */;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        /* ... */\n    }\n}\n</code></pre>\n\n<p>They usually contain in them reference to the parent structure. For example for linked list it can be current node (which is updated every iteration). For array-like structures it can be index and reference to the parent, so index will incremented every time and element accessed using index operator and etc..</p>\n"}], "owner": {"reputation": 1734, "user_id": 882187, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/J5Vum.png?s=128&g=1", "display_name": "Vladimir Ignatyev", "link": "https://stackoverflow.com/users/882187/vladimir-ignatyev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2612, "favorite_count": 2, "closed_date": 1548591151, "accepted_answer_id": 54380940, "answer_count": 1, "score": 6, "last_activity_date": 1548654809, "creation_date": 1548516901, "last_edit_date": 1548654809, "question_id": 54379841, "link": "https://stackoverflow.com/questions/54379841/how-to-properly-implement-iterable-structure-in-rust", "closed_reason": "Duplicate", "title": "How to properly implement Iterable structure in Rust?", "body": "<p>I'm trying to implement a structure that can be infinitely iterated. Think it like a natural number. I have a limitation: it can't implement <code>Copy</code> trait because the structure contains a <code>String</code> field.</p>\n\n<p>I've also implemented an <code>Iterable</code> trait and its only member <code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;</code>.</p>\n\n<p>Currently, I have the following code to iterate over the first 10 items of my structure:</p>\n\n<pre><code>let mut counter = 0;\nlet mut game:Option&lt;Game&gt; = Game::new(&amp;param);\nloop {\n    println!(\"{:?}\", game); \n\n    game = g.next();\n    counter = counter + 1;\n    if counter &gt; 10 { break; }\n}\n</code></pre>\n\n<p>I'd like to give to users of my <code>crate</code> the ability to iterate over my struct using <code>for in</code> construction, like this:</p>\n\n<pre><code>for next_game in game {\n  println!(\"{:?}\", next_game);\n} \n</code></pre>\n\n<p>Is it possible at all? How can I achieve this? How to make my code better and what I have to do with my struct?</p>\n\n<p>Iterator implementation:</p>\n\n<pre><code>pub struct Game {\n    /// The game hash\n    pub hash: Vec&lt;u8&gt;\n}\n\nimpl Iterator for Game {\n    type Item = Game;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let mut hasher = Sha256::new();\n        hasher.input(&amp;hex::encode(&amp;self.hash)); // we need to convert the hash into string first\n        let result = hasher.result().to_vec();\n\n        Some(Game {\n            hash: result\n        })\n    }\n}\n</code></pre>\n\n<p>Example: broken behavior with <code>for</code></p>\n\n<pre><code>let mut game:Game = Game::new(&amp;s).unwrap();\nfor g in game.take(2) {\n    println!(\"{}\", g);\n}\n</code></pre>\n\n<p>Now if we run example, we will get two <code>Game</code> structs with same <code>hash</code>, while expected behavior is that the first <code>g</code> will have <code>hash</code> equal to SHA256(game.hash) and the next <code>g</code>'s hash will be SHA256(SHA256(game.hash)). It works properly when I call <code>.next()</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 2, "creation_date": 1548513964, "post_id": 54379343, "comment_id": 95572328, "body": "The function is called <code>split_at_mut</code>, not <code>split_mut_at</code> (you&#39;re using both names interchangeably). The documentation for the libraries shipped with Rust (including <code>core</code> and <code>std</code>) <a href=\"https://doc.rust-lang.org/stable/std/\" rel=\"nofollow noreferrer\">is also online</a>. When browsing the documentation, use the search bar to search across all available crates in a documentation set (you can see the crates in the sidebar on the left when looking at a crate&#39;s root page). Note that primitive types are special; they&#39;re always documented in <code>std</code>, even if the methods are provided by <code>core</code> (as is the case for slice methods)."}, {"owner": {"reputation": 329, "user_id": 1995676, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/311ece173edc8e74ff1f1b8905b7147e?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/1995676/david"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1548629466, "post_id": 54379343, "comment_id": 95598929, "body": "Thanks for pointing that out Francis, missed that!"}], "answers": [{"comments": [{"owner": {"reputation": 329, "user_id": 1995676, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/311ece173edc8e74ff1f1b8905b7147e?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/1995676/david"}, "edited": false, "score": 0, "creation_date": 1548629595, "post_id": 54382120, "comment_id": 95598961, "body": "Thanks Daniel, very useful to know about that naming convention now."}], "tags": [], "owner": {"reputation": 1174, "user_id": 4450336, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/FvdBD.jpg?s=128&g=1", "display_name": "Daniel Robertson", "link": "https://stackoverflow.com/users/4450336/daniel-robertson"}, "is_accepted": true, "score": 1, "last_activity_date": 1548532085, "creation_date": 1548532085, "answer_id": 54382120, "question_id": 54379343, "link": "https://stackoverflow.com/questions/54379343/rust-no-std-split-at-mut-function-no-method-named-split-mut-at-found-for-type/54382120#54382120", "title": "Rust no_std split_at_mut function &quot;no method named `split_mut_at` found for type&quot; compilation error in rust stable", "body": "<p>You're looking for <code>slice::split_at_mut</code> (note the <code>mut</code> at the end). It is listed in the nightly docs <a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\">here</a> and the stable docs <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\">here</a>. It is also indeed available with <code>#![no_std]</code>. It is defined in <code>libcore</code> <a href=\"https://github.com/rust-lang/rust/blob/ad55b73da1e3701cf09c54dc813779adbae39d5b/src/libcore/slice/mod.rs#L966-L1002\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>As a general rule of thumb when a function <code>x</code> from <code>core</code> or <code>std</code> has a mutable and immutable variant, the function requiring a immutable reference is named <code>x</code> and the function requiring a mutable reference is named <code>x_mut</code>.</p>\n"}], "owner": {"reputation": 329, "user_id": 1995676, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/311ece173edc8e74ff1f1b8905b7147e?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/1995676/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 0, "accepted_answer_id": 54382120, "answer_count": 1, "score": 0, "last_activity_date": 1548532085, "creation_date": 1548513169, "question_id": 54379343, "link": "https://stackoverflow.com/questions/54379343/rust-no-std-split-at-mut-function-no-method-named-split-mut-at-found-for-type", "title": "Rust no_std split_at_mut function &quot;no method named `split_mut_at` found for type&quot; compilation error in rust stable", "body": "<p>I am trying to extract bits of code from an embedded rust example that does not compile. A lot of these old embedded examples don't compile because they use nightly and they quickly become broken and neglected. </p>\n\n<pre><code>let mut buffer : [u8; 2048] = [0;2048];\n// some code to fill the buffer here\n// say we want to split the buffer at position 300\nlet (request_buffer, response_buffer) = buffer.split_mut_at(300);\n</code></pre>\n\n<p>This example uses <code>#![no_std]</code> so there is no standard library to link to and must have compiled at some point so the function split_mut_at must have worked at some point. I am using IntelliJ rust AND Visual Studio Code as the IDE but neither IDE's can point me to the definition of the split_mut_at function. There is a minefield of crates and use statements in the example and there is no clear way to pin-point where some function comes without huge trial and error effort. </p>\n\n<p>btw, split_at_mut can usually be found in <code>std::string::String</code></p>\n\n<p>Is there a rust command that tells you what crate a function belongs to in your project? It always takes so long to update rust-docs when doing a rust update. Surely that can help!</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 0, "creation_date": 1548504823, "post_id": 54378172, "comment_id": 95570037, "body": "The reason is I&#39;ve two sets of String data one that needs to be sorted by key and the other does not and I want to perform the same operations on them. Also want to know if this is solvable to learn about Rust"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1548662527, "post_id": 54378172, "comment_id": 95606203, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/53595542/how-do-i-express-generic-map-and-set-containers-in-rust\">How do I express generic map and set containers in Rust?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1548512916, "post_id": 54378864, "comment_id": 95572010, "body": "Maybe one could even condense the implementations via macros."}, {"owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 0, "creation_date": 1548513833, "post_id": 54378864, "comment_id": 95572287, "body": "Excellent answer. Appreciate the high quality code. I wonder why there are not more traits used in the Rust std lib for common interfaces."}, {"owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "reply_to_user": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1548514020, "post_id": 54378864, "comment_id": 95572348, "body": "@phimuemue is it possible to have a macro that would duplicate the function and replace the type and add a unique function name?"}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 3, "last_activity_date": 1548509711, "creation_date": 1548509711, "answer_id": 54378864, "question_id": 54378172, "link": "https://stackoverflow.com/questions/54378172/rust-function-that-accepts-either-hashmap-and-btreemap/54378864#54378864", "title": "Rust function that accepts either HashMap and BtreeMap", "body": "<p>It is possible to abstract over types by using traits and for your specific use-case, you can take a look at this more constrained <strong>example</strong>.</p>\n\n<pre><code>use core::{borrow::Borrow, hash::Hash};\nuse std::collections::{BTreeMap, HashMap};\n\ntrait GenericMap&lt;K, V&gt; {\n    fn contains_key&lt;Q&gt;(&amp;self, k: &amp;Q) -&gt; bool\n    where\n        K: Borrow&lt;Q&gt;,\n        Q: Hash + Eq + Ord;\n\n    fn each_mut&lt;F&gt;(&amp;mut self, cb: F)\n    where\n        F: FnMut((&amp;K, &amp;mut V));\n\n    fn insert(&amp;mut self, key: K, value: V) -&gt; Option&lt;V&gt;;\n}\n\nimpl&lt;K, V&gt; GenericMap&lt;K, V&gt; for HashMap&lt;K, V&gt;\nwhere\n    K: Eq + Hash,\n{\n    fn contains_key&lt;Q&gt;(&amp;self, k: &amp;Q) -&gt; bool\n    where\n        K: Borrow&lt;Q&gt;,\n        Q: Hash + Eq + Ord,\n    {\n        self.contains_key(k)\n    }\n\n    fn each_mut&lt;F&gt;(&amp;mut self, mut cb: F)\n    where\n        F: FnMut((&amp;K, &amp;mut V)),\n    {\n        self.iter_mut().for_each(|x| cb(x))\n    }\n\n    fn insert(&amp;mut self, key: K, value: V) -&gt; Option&lt;V&gt; {\n        self.insert(key, value)\n    }\n}\n\nimpl&lt;K, V&gt; GenericMap&lt;K, V&gt; for BTreeMap&lt;K, V&gt;\nwhere\n    K: Ord,\n{\n    fn contains_key&lt;Q&gt;(&amp;self, k: &amp;Q) -&gt; bool\n    where\n        K: Borrow&lt;Q&gt;,\n        Q: Hash + Eq + Ord,\n    {\n        self.contains_key(k)\n    }\n\n    fn each_mut&lt;F&gt;(&amp;mut self, mut cb: F)\n    where\n        F: FnMut((&amp;K, &amp;mut V)),\n    {\n        self.iter_mut().for_each(|x| cb(x))\n    }\n\n    fn insert(&amp;mut self, key: K, value: V) -&gt; Option&lt;V&gt; {\n        self.insert(key, value)\n    }\n}\n\nfn edit_map_values&lt;T: GenericMap&lt;String, i128&gt;&gt;(map: &amp;mut T) {\n    map.each_mut(|(k, v)| {\n        if k != \"key1\" {\n            *v += 1;\n        }\n    });\n    map.insert(\"key2\".into(), 10);\n}\n\nfn main() {\n    let mut hm: HashMap&lt;String, i128&gt; = [(\"One\".into(), 1), (\"Two\".into(), 2)]\n        .iter()\n        .cloned()\n        .collect();\n    let mut btm: BTreeMap&lt;String, i128&gt; = [(\"Five\".into(), 5), (\"Six\".into(), 6)]\n        .iter()\n        .cloned()\n        .collect();\n    dbg!(&amp;hm);\n    dbg!(&amp;btm);\n    edit_map_values(&amp;mut hm);\n    edit_map_values(&amp;mut btm);\n    dbg!(&amp;hm);\n    dbg!(&amp;btm);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 0, "creation_date": 1548564294, "post_id": 54383043, "comment_id": 95582900, "body": "I can see how getting the right generality for traits is difficult. But a Map trait is something Rust should have. The interfaces of Btreemap and Hashmap are already the same"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 0, "creation_date": 1548670603, "post_id": 54383043, "comment_id": 95610195, "body": "@Ben Actually, Rust does have a &quot;Map&quot; trait, except it&#39;s called <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index</code></a>"}, {"owner": {"reputation": 1231, "user_id": 1362309, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1ef0e451a4f18f480b5f8537e04fc8d?s=128&d=identicon&r=PG", "display_name": "Taywee", "link": "https://stackoverflow.com/users/1362309/taywee"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1582222644, "post_id": 54383043, "comment_id": 106712493, "body": "@Jmb Index is not a good solution for this, because it does not allow you to check whether or not an element exists, nor to remove an element, nor to conditionally get an element.  You can not use Index for this without the possibility for panics (which can not always be caught, as panics may be implemented as aborts rather than unwinding)."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 2, "last_activity_date": 1548538765, "creation_date": 1548538765, "answer_id": 54383043, "question_id": 54378172, "link": "https://stackoverflow.com/questions/54378172/rust-function-that-accepts-either-hashmap-and-btreemap/54383043#54383043", "title": "Rust function that accepts either HashMap and BtreeMap", "body": "<p>Way back before the 1.0 release, there used to be <code>Map</code> and <code>MutableMap</code> traits, but they have been removed before stabilization. The Rust type system is currently unable to express these traits in a nice way due to the lack of higher kinded types.</p>\n\n<p>The <a href=\"https://github.com/apasel422/eclectic/\" rel=\"nofollow noreferrer\">eclectic crate</a> provides experimental collection traits, but they haven't been updated for a year, so I'm not sure they are still useful for recent versions of Rust.</p>\n\n<p>Further information:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/35159530/does-rust-have-collection-traits\">Does Rust have Collection traits?</a></li>\n<li><a href=\"https://users.rust-lang.org/t/no-common-trait-for-map-types/8275\" rel=\"nofollow noreferrer\">No common trait for Map types? (Rust language forum)</a></li>\n<li><a href=\"http://smallcultfollowing.com/babysteps/blog/2016/11/02/associated-type-constructors-part-1-basic-concepts-and-introduction/\" rel=\"nofollow noreferrer\">Associated type constructors, part 1: basic concepts and introduction (blog post by Niko Matsakis)</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">Generic associated type RFC</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 445, "user_id": 6793094, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jLOVE.png?s=128&g=1", "display_name": "Johann150", "link": "https://stackoverflow.com/users/6793094/johann150"}, "is_accepted": false, "score": 0, "last_activity_date": 1613302355, "creation_date": 1613302355, "answer_id": 66194986, "question_id": 54378172, "link": "https://stackoverflow.com/questions/54378172/rust-function-that-accepts-either-hashmap-and-btreemap/66194986#66194986", "title": "Rust function that accepts either HashMap and BtreeMap", "body": "<p>While there is no common <code>Map</code> trait, you could use a combination of other traits to operate on an Iterator to achieve similar functionality. Although this might not be very memory efficient due to cloning, and also a bit involved depending on the kind of operation you are trying to perform. The operation you tried to do may be implemented like this:</p>\n<pre><code>fn edit_map_values&lt;I&gt;(map: &amp;mut I)\nwhere\n    I: Clone + IntoIterator&lt;Item = (String, i128)&gt; + std::iter::FromIterator&lt;(String, i128)&gt;,\n{\n    // Since into_iter consumes self, we have to clone here.\n    let (keys, _values): (Vec&lt;String&gt;, Vec&lt;_&gt;) = map.clone().into_iter().unzip();\n\n    *map = map\n        .clone()\n        .into_iter()\n        // iterating while mutating entries can be done with map\n        .map(|mut tuple| {\n            if !keys.contains(&amp;&quot;key1&quot;.to_string()) {\n                tuple.1 += 1;\n            }\n            tuple\n        })\n        // inserting an element can be done with chain and once\n        .chain(std::iter::once((&quot;key2&quot;.into(), 10)))\n        .collect();\n        // removing an element could be done with filter\n        // removing and altering elements could be done with filter_map\n        // etc.\n}\n\nfn main() {\n    use std::collections::{BTreeMap, HashMap};\n\n    {\n        let mut m = HashMap::new();\n        m.insert(&quot;a&quot;.to_string(), 0);\n        m.insert(&quot;key3&quot;.to_string(), 1);\n\n        edit_map_values(&amp;mut m);\n\n        println!(&quot;{:#?}&quot;, m);\n    }\n\n    {\n        let mut m = BTreeMap::new();\n        m.insert(&quot;a&quot;.to_string(), 0);\n        m.insert(&quot;key3&quot;.to_string(), 1);\n\n        edit_map_values(&amp;mut m);\n\n        println!(&quot;{:#?}&quot;, m);\n    }\n}\n</code></pre>\n<p>Both times the output is the same, except for the order of the HashMap of course:</p>\n<pre><code>{\n    &quot;a&quot;: 1,\n    &quot;key2&quot;: 10,\n    &quot;key3&quot;: 2,\n}\n</code></pre>\n"}], "owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 678, "favorite_count": 1, "answer_count": 3, "score": 3, "last_activity_date": 1613302355, "creation_date": 1548504244, "question_id": 54378172, "link": "https://stackoverflow.com/questions/54378172/rust-function-that-accepts-either-hashmap-and-btreemap", "title": "Rust function that accepts either HashMap and BtreeMap", "body": "<pre><code>fn edit_map_values(\n            map1: &amp;mut HashMap&lt;String, i128&gt; || &amp;mut BTreeMap&lt;String, i128&gt;){\n    for tuple in map1.iter_mut() {\n        if !map1.contains_key(&amp;\"key1\") {\n             *tuple.1 += 1;\n        }\n    }\n    map1.insert(&amp;\"key2\", 10);\n}\n</code></pre>\n\n<p>How do I write one function that accepts either HashMap and BtreeMap like in the example above?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "edited": false, "score": 0, "creation_date": 1548526444, "post_id": 54377415, "comment_id": 95575712, "body": "Wow, that was a very naive approach wasn&#39;t it. I feel pretty dumb for trying to do it in place. Thanks!"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "edited": false, "score": 2, "creation_date": 1548548765, "post_id": 54377415, "comment_id": 95580983, "body": "@MichaelDorst Don&#39;t feel bad! It&#39;s such a classic mistake: it probably happened to everyone at least once at one point. Have fun continuing your Rust journey!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1548497688, "creation_date": 1548497688, "answer_id": 54377415, "question_id": 54376760, "link": "https://stackoverflow.com/questions/54376760/how-can-i-match-without-borrowing-in-rust/54377415#54377415", "title": "How can I match without borrowing in Rust?", "body": "<blockquote>\n  <p>How can I match without borrowing in Rust?</p>\n</blockquote>\n\n<p><strong>You can't.</strong></p>\n\n<p>Every time you access a variable, you are borrowing it. Printing a variable? That's borrowing. Checking if the variable has a specific value? Borrowing again. Copying the value of a variable? Also borrowing.</p>\n\n<p>You are trying to access values of the vector while the vector is mutably borrowed. This just won't work -- the borrow checker forbids this. </p>\n\n<p><strong>Can you work around this? Yes!</strong> The usual trick when working with vectors or arrays is to <em>delay</em> all borrows by iterating over the indices instead. So write something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for i in 0..cell_states.len() {\n    for j in 0..cell_states[i].len() {\n        ...\n    }\n}\n</code></pre>\n\n<p>The vector is not borrowed in that case, but you can borrow elements of it later by just indexing it.</p>\n\n<p><strong>But: the borrow checker just saved you, because what you attempted was buggy!</strong> What you tried is not how Game of Life works! You need <em>two</em> grids of cells, because the update step cannot update all cells on the fly. You first have to calculate all new cells into a new vector (so that you can use all the old cell values while calculating the new ones) and then you can replace the old vector with the new one. So the update step in Game of Life is a two step process -- you cannot do it in-place.</p>\n\n<p>And after fixing that real bug, you will find that you won't run into this specific borrow checker problem again.</p>\n"}], "owner": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 385, "favorite_count": 3, "accepted_answer_id": 54377415, "answer_count": 1, "score": 3, "last_activity_date": 1548497688, "creation_date": 1548490657, "last_edit_date": 1548496722, "question_id": 54376760, "link": "https://stackoverflow.com/questions/54376760/how-can-i-match-without-borrowing-in-rust", "title": "How can I match without borrowing in Rust?", "body": "<p>I'm wrestling with the borrow checker while trying to write Conway's Game of Life. I have two for loops doing a mutable borrow on <code>self.cell_states</code>, which is a <code>Vec&lt;Vec&lt;CellState&gt;&gt;</code> (<code>CellState</code> is an enum) so that I can update the <code>Alive</code> or <code>Dead</code> status of each cell. </p>\n\n<p>In order to decide if a cell should be alive or dead though, it needs to see how many of the surrounding cells are alive. This is where I've run into problems. The only way I can find to check if a cell is alive is to do a <code>match</code> statement, but apparently <code>match</code> borrows the value, which is not allowed, since I've already done a mutable borrow. It seems to me that I could just copy the value and check against the copied value, so I tried <code>match self.cell_states[i+x-1][j+y-1].clone() {...}</code>, but to no avail. How can I do a match without borrowing?</p>\n\n<pre><code>error[E0502]: cannot borrow `cell_states` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:18:27\n   |\n11 |     for (i, row) in cell_states.iter_mut().enumerate() {\n   |                     ----------------------------------\n   |                     |\n   |                     mutable borrow occurs here\n   |                     mutable borrow used here, in later iteration of loop\n...\n18 |                     match cell_states[i+x-1][j+y-1] {\n   |                           ^^^^^^^^^^^ immutable borrow occurs here\n</code></pre>\n\n<p>My code is as follows (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2237a01ed6e23b5af48a7200cf0bf2c2\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Copy, Clone)]\npub enum CellState {\n    Dead,\n    Alive\n}\n\nfn main() {\n    let mut cell_states = vec![vec![CellState::Dead; 10]; 10];\n\n\n    for (i, row) in cell_states.iter_mut().enumerate() {\n        for (j, cell) in row.iter_mut().enumerate() {\n            // Count the living cells around cell\n            let mut count = 0;\n\n            for x in 0..3 {\n                for y in 0..3 {\n                    match cell_states[i+x-1][j+y-1] {\n                        CellState::Alive =&gt; count += 1,\n                        _ =&gt; ()\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "slice", "lifetime"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1548472709, "post_id": 54375052, "comment_id": 95565010, "body": "Related: <a href=\"https://stackoverflow.com/q/32300132/234590\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>"}, {"owner": {"reputation": 133, "user_id": 5233041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25ae7a1e6c78e6ce642e21bb740b26f4?s=128&d=identicon&r=PG&f=1", "display_name": "Jim Morrison", "link": "https://stackoverflow.com/users/5233041/jim-morrison"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1548473811, "post_id": 54375052, "comment_id": 95565141, "body": "Are you referring the player and governor members?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1548477608, "post_id": 54375052, "comment_id": 95565622, "body": "Yes. If you didn&#39;t have the <code>governor</code> member, then you could just allocate the <code>Vec</code> inside the function and then move it into the struct."}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 2, "last_activity_date": 1548493420, "last_edit_date": 1548493420, "creation_date": 1548491920, "answer_id": 54376874, "question_id": 54375052, "link": "https://stackoverflow.com/questions/54375052/alternative-to-passing-a-vector-to-a-function/54376874#54376874", "title": "Alternative to passing a vector to a function?", "body": "<p>As you already noticed, a slice does not own its data, it only references them. This is why you must create the players outside of the struct and pass them to the game struct. If you want your struct to hold the players, they must be a <code>Vec</code> instead of a slice.</p>\n\n<p>If <code>governor</code> was not a member of the struct, I would suggest simply using a <code>Vec</code> (or <code>ArrayVec</code>) and be done with it. This, however would mean that <code>governor</code> cannot (generally) be a reference to this very same vector (see <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>).</p>\n\n<p>Depending on the exact semantics and use cases of <code>governor</code> and the other, \"regular\" players, I would do one of the following:</p>\n\n<ul>\n<li>Having a <code>Vec</code> (or <code>ArrayVec</code>) for \"regular\" players, and an extra field for the governor. This may be cumbersome if you often have to do the same for both \"regular\" players and the governor, but you could introduce a method that returns an iterator over all the players <em>and</em> the governor.</li>\n<li>Having a <code>Vec</code> (or <code>ArrayVec</code>) for all players, and just store the index into the vector for the governor. As a variation, you could enforce that the governor is always the <code>first</code> element of the <code>Vec</code> holding all players.</li>\n<li>Doing as you already did. (This, however, will possibly mean that you cannot easily mutate them (because you can only have one mutable reference at a time). You may work around this via interior mutability, but I am not sure if it is worth it)</li>\n<li>Only store a <code>Vec&lt;String&gt;</code> holding the player names. From that, you could derive the number of players. If the kind of player is reasonably simple, you may get away with not even storing the players explicitly, but derive the kind of player by its index (which I suppose may be possible because of the way you determine <code>Indigo</code> or <code>Corn</code>). The disadvantage is that you do not have a player around, but maybe you can model the entire game without them.</li>\n</ul>\n"}], "owner": {"reputation": 133, "user_id": 5233041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25ae7a1e6c78e6ce642e21bb740b26f4?s=128&d=identicon&r=PG&f=1", "display_name": "Jim Morrison", "link": "https://stackoverflow.com/users/5233041/jim-morrison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 1, "accepted_answer_id": 54376874, "answer_count": 1, "score": 2, "last_activity_date": 1548493420, "creation_date": 1548468148, "question_id": 54375052, "link": "https://stackoverflow.com/questions/54375052/alternative-to-passing-a-vector-to-a-function", "title": "Alternative to passing a vector to a function?", "body": "<p>I'm currently learning rust by writing a project which is a clone of the board game \"Puerto Rico\".</p>\n\n<p>the <code>Game</code> struct:\nI chose the <code>players</code> member to be an array slice because it can only contain 3, 4 or 5 players (to my understanding, this is the perfect use case for an array slice inside a struct, instead of a <code>Vec</code>)</p>\n\n<p>the <code>Game::new</code> function:\nReturns a new <code>Game</code> instance. It takes a list of the names of the players and an empty <code>Vec</code> and populates it with the appropriate <code>Player</code> instances then stores it in the <code>Game</code> as an array slice.</p>\n\n<p>The problem is that this method of instantiating the <code>Game</code> struct seems kind of cumbersome and I feel like there is a way around it (as in passing only the <code>names</code> parameter and somehow creating the array slice inside the <code>new</code> function).</p>\n\n<p>So, is there a way to do it? Should I just change the <code>players</code> member to a <code>Vec</code>?</p>\n\n<p>I tried to move the <code>vec!()</code> declaration inside the <code>new</code> function but, of course, it doesn't work becuase it is dropped at the end of the block.</p>\n\n<pre><code>use super::board::Board;\nuse super::player::Player;\nuse super::planatation::ResourceType;\n\n#[derive(Debug)]\npub struct Game&lt;'a&gt; {\n\n    board: Board,\n    players: &amp;'a [Player],\n    governor: &amp;'a Player\n}\n\nimpl&lt;'a&gt; Game&lt;'a&gt; {\n\n    pub fn new(names: &amp;[String], players: &amp;'a mut Vec&lt;Player&gt;) -&gt; Self {\n        let num_of_players = names.len() as i32;\n        let board = Board::new(num_of_players);\n\n        if num_of_players &lt; 3 || num_of_players &gt; 5 {\n            panic!(\"Only 3, 4 or 5 players may play\");\n        }\n\n        if num_of_players &lt; 5 {\n            for (i, name) in names.iter().enumerate() {\n                if i &lt; 2 {\n                    players.push(Player::new(name.to_string(), ResourceType::Indigo));\n                } else {\n                    players.push(Player::new(name.to_string(), ResourceType::Corn));\n                }\n            }\n        } else { // num_of_player == 5\n            for (i, name) in names.iter().enumerate() {\n                if i &lt; 3 {\n                    players.push(Player::new(name.to_string(), ResourceType::Indigo));\n                } else {\n                    players.push(Player::new(name.to_string(), ResourceType::Corn));\n                }\n            }\n        }\n\n        Game {\n            board: board,\n            players: players,\n            governor: &amp;players[0]\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13925, "user_id": 178433, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f0a7931509fe208105cdeec791c7ed04?s=128&d=identicon&r=PG", "display_name": "gMale", "link": "https://stackoverflow.com/users/178433/gmale"}, "edited": false, "score": 0, "creation_date": 1617758574, "post_id": 54375386, "comment_id": 118393441, "body": "so what is a good error type to use, instead, in these types of situations? Just <code>std::error::Error</code>?"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1548472549, "creation_date": 1548472549, "answer_id": 54375386, "question_id": 54374979, "link": "https://stackoverflow.com/questions/54374979/tryfrominterror-usage/54375386#54375386", "title": "TryFromIntError usage", "body": "<p><code>TryFromIntError</code> is a tuple struct with private fields (hence the <code>(_)</code> in the documentation). The type doesn't expose any way to construct an instance (such as a <code>new</code> method or a <code>Default</code> implementation), therefore there is no way to instantiate the type directly. Perhaps the reason is to leave open the possibility to add details to the error in the future (right now, the only private field is a <code>()</code>, thus the error has no details).</p>\n"}], "owner": {"reputation": 5800, "user_id": 6163736, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/TKHBG.jpg?s=128&g=1", "display_name": "stacksonstacks", "link": "https://stackoverflow.com/users/6163736/stacksonstacks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1548472549, "creation_date": 1548467182, "question_id": 54374979, "link": "https://stackoverflow.com/questions/54374979/tryfrominterror-usage", "title": "TryFromIntError usage", "body": "<p>I unable to use <code>std::num::TryFromIntError</code> as the default error in my <code>TryFrom</code> implementation. Is this issue to be expected or is it a documentation issue / bug.</p>\n\n<pre><code>#![feature(try_from)]\nuse std::convert::TryFrom;\nuse std::num::TryFromIntError;\n\nenum MyEnum {\n    A,\n    B,\n    C,\n}\n\nimpl TryFrom&lt;u16&gt; for OpCode {\n    type Error = TryFromIntError;\n    fn try_from(val: u16) -&gt; Result&lt;Self, Self::Error&gt; {\n        match val {\n            0 =&gt; Ok(MyEnum::A),\n            1 =&gt; Ok(MyEnum::B),\n            2 =&gt; Ok(MyEnum::C),\n            _ =&gt; Err(TryFromIntError),\n        }\n    }\n}\n</code></pre>\n\n<p>Compilation fails with:</p>\n\n<pre><code>error[E0423]: expected function, found struct `TryFromIntError`\n  --&gt; src/main.rs:18:22\n   |\n18 |             _ =&gt; Err(TryFromIntError()),\n   |                      ^^^^^^^^^^^^^^^ constructor is not visible here due to private fields\n</code></pre>\n"}, {"tags": ["rust", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 6, "last_activity_date": 1548462688, "creation_date": 1548462688, "answer_id": 54374575, "question_id": 54374381, "link": "https://stackoverflow.com/questions/54374381/how-can-i-convert-a-windows-osstring-to-a-cstring/54374575#54374575", "title": "How can I convert a Windows OsString to a CString?", "body": "<p>On Unix-like systems, you can obtain the raw bytes of an <code>OsStr</code> or <code>OsString</code> as a <code>&amp;[u8]</code> via <a href=\"https://doc.rust-lang.org/stable/std/os/unix/ffi/trait.OsStrExt.html#tymethod.as_bytes\" rel=\"noreferrer\"><code>std::os::unix::ffi::OsStrExt::as_bytes</code></a>. You can pass that slice directly to <a href=\"https://doc.rust-lang.org/stable/std/ffi/struct.CString.html#method.new\" rel=\"noreferrer\"><code>CString::new</code></a>.</p>\n\n<p>On Windows, you <em>cannot</em> obtain the raw bytes of an <code>OsStr</code> or <code>OsString</code>. The WTF-8 encoding is considered a private implementation detail. The only guarantee is that if the string contains valid Unicode, then it can be converted to a <code>str</code> or <code>String</code> in constant time, using <a href=\"https://doc.rust-lang.org/stable/std/ffi/struct.OsStr.html#method.to_str\" rel=\"noreferrer\"><code>OsStr::to_str</code></a> or <a href=\"https://doc.rust-lang.org/stable/std/ffi/struct.OsString.html#method.into_string\" rel=\"noreferrer\"><code>OsString::into_string</code></a>. You can also convert the string back to potentially ill-formed UTF-16 with <a href=\"https://doc.rust-lang.org/stable/std/os/windows/ffi/trait.OsStrExt.html#tymethod.encode_wide\" rel=\"noreferrer\"><code>std::os::windows::ffi::OsStrExt::encode_wide</code></a>.</p>\n\n<p>The motivation for not giving direct access to the raw bytes is that almost no library expects strings encoded as WTF-8. In fact, some libraries might not even expect UTF-8! (They might instead expect strings encoded in the <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/winnls/nf-winnls-getacp\" rel=\"noreferrer\">current \"ANSI\" code page</a>.) If it turns out that the library doesn't expect UTF-8 strings, you should instead convert the potentially ill-formed UTF-16 string to the expected encoding using <a href=\"https://docs.microsoft.com/fr-ca/windows/desktop/api/stringapiset/nf-stringapiset-widechartomultibyte\" rel=\"noreferrer\"><code>WideCharToMultiByte</code></a>.</p>\n"}], "owner": {"reputation": 597, "user_id": 3404377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7df3cf3bc9180341a3e996358cc9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "ddulaney", "link": "https://stackoverflow.com/users/3404377/ddulaney"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 595, "favorite_count": 0, "accepted_answer_id": 54374575, "answer_count": 1, "score": 3, "last_activity_date": 1548462688, "creation_date": 1548460904, "question_id": 54374381, "link": "https://stackoverflow.com/questions/54374381/how-can-i-convert-a-windows-osstring-to-a-cstring", "title": "How can I convert a Windows OsString to a CString?", "body": "<p>I have an <code>std::ffi::OsString</code> on Windows, but I need to pass a <code>std::ffi::CString</code> to an FFI function. Is there any way to convert the <code>OsString</code> into the <code>CString</code>?</p>\n\n<p>I know that on Windows, <code>OsString</code> is backed by a WTF-8-encoded buffer. Essentially all that needs to happen is to append an ASCII <code>nul</code> character and create a CString from it. Is there a good way to do that? If not, is is possible to access that buffer directly?</p>\n\n<p>Here is some example code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern \"system\" fn some_ffi(s: *mut c_char);\n\nfn my_func(os_string: &amp;OsString) {\n    let c_string: CString = // ???\n\n    some_ffi(c_string.as_raw())\n}\n</code></pre>\n"}, {"tags": ["functional-programming", "rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1548460997, "creation_date": 1548460997, "answer_id": 54374397, "question_id": 54373540, "link": "https://stackoverflow.com/questions/54373540/is-there-a-better-functional-way-to-process-a-vector-with-error-checking/54374397#54374397", "title": "Is there a better functional way to process a vector with error checking?", "body": "<p>Side effects (<code>eprintln!</code>) in an iterator adapter are definitely not \"functional\". You should accumulate and return the errors and let the caller deal with them.</p>\n\n<p>I would use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.fold\" rel=\"nofollow noreferrer\"><code>fold</code></a> here. The goal of <code>fold</code> is to reduce a list to a single value, starting from an initial value and augmenting the result with every item. This \"single value\" can very well be a list, though. Here, though, there are two possible lists we might want to return: a list of <code>i32</code> if all values are valid, or a list of errors if there are any errors (I've chosen to return <code>String</code>s for errors here, for simplicity.)</p>\n\n<pre><code>fn data_vals(sv: &amp;[(u32, String)]) -&gt; Result&lt;Vec&lt;i32&gt;, Vec&lt;String&gt;&gt; {\n    sv.iter().fold(\n        Ok(Vec::with_capacity(sv.len())),\n        |acc, (line_number, data)| {\n            let data = data\n                .parse::&lt;i32&gt;()\n                .map_err(|_| format!(\"Invalid data value at line {}:  '{}'\", line_number, data));\n            match (acc, data) {\n                (Ok(mut acc_data), Ok(this_data)) =&gt; {\n                    // No errors yet; push the parsed value to the values vector.\n                    acc_data.push(this_data);\n                    Ok(acc_data)\n                }\n                (Ok(..), Err(this_error)) =&gt; {\n                    // First error: replace the accumulator with an `Err` containing the first error.\n                    Err(vec![this_error])\n                }\n                (Err(acc_errors), Ok(..)) =&gt; {\n                    // There have been errors, but this item is valid; ignore it.\n                    Err(acc_errors)\n                }\n                (Err(mut acc_errors), Err(this_error)) =&gt; {\n                    // One more error: push it to the error vector.\n                    acc_errors.push(this_error);\n                    Err(acc_errors)\n                }\n            }\n        },\n    )\n}\n\nfn main() {\n    println!(\"{:?}\", data_vals(&amp;[]));\n    println!(\"{:?}\", data_vals(&amp;[(1, \"123\".into())]));\n    println!(\"{:?}\", data_vals(&amp;[(1, \"123a\".into())]));\n    println!(\"{:?}\", data_vals(&amp;[(1, \"123\".into()), (2, \"123a\".into())]));\n    println!(\"{:?}\", data_vals(&amp;[(1, \"123a\".into()), (2, \"123\".into())]));\n    println!(\"{:?}\", data_vals(&amp;[(1, \"123a\".into()), (2, \"123b\".into())]));\n}\n</code></pre>\n\n<p>The initial value is <code>Ok(Vec::with_capacity(sv.len()))</code> (this is an optimization to avoid reallocating the vector as we push items to it; a simpler version would be <code>Ok(vec![])</code>). If the slice is empty, this will be <code>fold</code>'s result; the closure will never be called.</p>\n\n<p>For each item, the closure checks 1) whether there were any errors so far (indicated by the accumulator value being an <code>Err</code>) or not and 2) whether the current item is valid or not. I'm matching on two <code>Result</code> values simultaneously (by combining them in a tuple) to handle all 4 cases. The closure then returns an <code>Ok</code> if there are no errors so far (with all the parsed values so far) or an <code>Err</code> if there are any errors so far (with every invalid value found so far).</p>\n\n<p>You'll notice I used the <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.push\" rel=\"nofollow noreferrer\"><code>push</code></a> method to add an item to a <code>Vec</code>. This is, strictly speaking, mutation, which is not considered \"functional\", but because we are moving the <code>Vec</code>s here, we know there are no other references to them, so we know we aren't affecting any other use of these <code>Vec</code>s.</p>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 4, "last_activity_date": 1548497230, "last_edit_date": 1548497230, "creation_date": 1548472021, "answer_id": 54375350, "question_id": 54373540, "link": "https://stackoverflow.com/questions/54373540/is-there-a-better-functional-way-to-process-a-vector-with-error-checking/54375350#54375350", "title": "Is there a better functional way to process a vector with error checking?", "body": "<p>I think that's what <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.partition_map\" rel=\"nofollow noreferrer\"><code>partition_map()</code></a> from itertools is for:</p>\n\n<pre><code>use itertools::{Either, Itertools};\n\nfn data_vals&lt;'a&gt;(sv: &amp;[&amp;'a str]) -&gt; Result&lt;Vec&lt;i32&gt;, Vec&lt;(&amp;'a str, std::num::ParseIntError)&gt;&gt; {\n    let (successes, failures): (Vec&lt;_&gt;, Vec&lt;_&gt;) =\n        sv.iter().partition_map(|s| match s.parse::&lt;i32&gt;() {\n            Ok(v) =&gt; Either::Left(v),\n            Err(e) =&gt; Either::Right((*s, e)),\n        });\n    if failures.len() != 0 {\n        Err(failures)\n    } else {\n        Ok(successes)\n    }\n}\n\nfn main() {\n    let numbers = vec![\"42\", \"aaaezrgggtht\", \"..4rez41eza\", \"55\"];\n    println!(\"{:#?}\", data_vals(&amp;numbers));\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1548504959, "post_id": 54377842, "comment_id": 95570063, "body": "Thanks! All the answers here looked good, but I&#39;ve picked this one because (a) it seems the simplest, and (b) it doesn&#39;t need an external crate. I realised that side effects are not purely functional, but it was not clear to me until I saw these answers how to get around it."}, {"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "reply_to_user": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1548519654, "post_id": 54377842, "comment_id": 95573852, "body": "Note that if the other answer hadn&#39;t been posted already, I would have probably also recommended using itertools, because it is an awesome addition to the standard library."}], "tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 2, "last_activity_date": 1548519327, "last_edit_date": 1548519327, "creation_date": 1548501329, "answer_id": 54377842, "question_id": 54373540, "link": "https://stackoverflow.com/questions/54373540/is-there-a-better-functional-way-to-process-a-vector-with-error-checking/54377842#54377842", "title": "Is there a better functional way to process a vector with error checking?", "body": "<p>In a purely functional style, you have to avoid side-effects.\nPrinting errors is a side-effect. The preferred style would be to return an object of the style:</p>\n\n<pre><code>Result&lt;Vec&lt;i32&gt;, Vec&lt;String&gt;&gt;\n</code></pre>\n\n<p>and print the list after the <code>data_vals</code> function returns.</p>\n\n<p>So, essentially, you want your processing to collect a list of integers, and a list of strings:</p>\n\n<pre><code>fn data_vals(sv: &amp;Vec&lt;(u32, String)&gt;) -&gt; Result&lt;Vec&lt;i32&gt;, Vec&lt;String&gt;&gt; {\n    let (ok, err): (Vec&lt;_&gt;, Vec&lt;_&gt;) = sv\n        .iter()\n        .map(|(i, s)| {\n            s.parse()\n                .map_err(|_e| format!(\"ERROR: Invalid data value at line {}: '{}'\", i, s))\n        })\n        .partition(|e| e.is_ok());\n\n    if err.len() &gt; 0 {\n        Err(err.iter().filter_map(|e| e.clone().err()).collect())\n    } else {\n        Ok(ok.iter().filter_map(|e| e.clone().ok()).collect())\n    }\n}\n\nfn main() {\n    let input = vec![(1, \"0\".to_string())];\n    let r = data_vals(&amp;input);\n    assert_eq!(r, Ok(vec![0]));\n\n    let input = vec![(1, \"zzz\".to_string())];\n    let r = data_vals(&amp;input);\n    assert_eq!(r, Err(vec![\"ERROR: Invalid data value at line 1: 'zzz'\".to_string()]));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=db82c101cf7814fa2edbc2d2fd7e657f\" rel=\"nofollow noreferrer\">Playground Link</a></p>\n\n<p>This uses <code>partition</code> which does not depend on an external crate.</p>\n"}], "owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 0, "accepted_answer_id": 54377842, "answer_count": 3, "score": 7, "last_activity_date": 1548519327, "creation_date": 1548454758, "last_edit_date": 1548508011, "question_id": 54373540, "link": "https://stackoverflow.com/questions/54373540/is-there-a-better-functional-way-to-process-a-vector-with-error-checking", "title": "Is there a better functional way to process a vector with error checking?", "body": "<p>I'm learning Rust and would like to know how I can improve the code below.</p>\n\n<p>I have a vector of tuples of form <code>(u32, String)</code>. The <code>u32</code> values represent line numbers and the <code>String</code>s are the text on the corresponding lines. As long as all the String values can be successfully parsed as integers, I want to return an <code>Ok&lt;Vec&lt;i32&gt;&gt;</code> containing the just parsed <code>String</code> values, but if not I want to return an error of some form (just an <code>Err&lt;String&gt;</code> in the example below).</p>\n\n<p>I'm trying to learn to avoid mutability and use functional styles where appropriate, and the above is straightforward to do functionally if that was all that was needed. Here's what I came up with in this case:</p>\n\n<pre><code>fn data_vals(sv: &amp;Vec&lt;(u32, String)&gt;) -&gt; Result&lt;Vec&lt;i32&gt;, String&gt; {\n    sv.iter()\n        .map(|s| s.1.parse::&lt;i32&gt;()\n                    .map_err(|_e| \"*** Invalid data.\".to_string()))\n        .collect()\n}\n</code></pre>\n\n<p>However, the small catch is that I want to print an error message for <strong>every</strong> invalid value (and not just the first one), and the error messages should contain both the line number and the string values in the offending tuple.</p>\n\n<p>I've managed to do it with the following code:</p>\n\n<pre><code>fn data_vals(sv: &amp;Vec&lt;(u32, String)&gt;) -&gt; Result&lt;Vec&lt;i32&gt;, String&gt; {\n    sv.iter()\n        .map(|s| (s.0, s.1.parse::&lt;i32&gt;()\n                  .or_else(|e| {\n                      eprintln!(\"ERROR: Invalid data value at line {}:  '{}'\",\n                                s.0, s.1);\n                      Err(e)\n                  })))\n        .collect::&lt;Vec&lt;(u32, Result&lt;i32, _&gt;)&gt;&gt;() // Collect here to avoid short-circuit\n        .iter()\n        .map(|i| i.1\n             .clone()\n             .map_err(|_e| \"*** Invalid data.\".to_string()))\n        .collect()\n}\n</code></pre>\n\n<p>This works, but seems rather messy and cumbersome - especially the typed <code>collect()</code> in the middle to avoid short-circuiting so all the errors are printed. The <code>clone()</code> call is also annoying, and I'm not really sure why it's needed - the compiler says I'm moving out of borrowed content otherwise, but I'm not really sure what's being moved. Is there a way it can be done more cleanly? Or should I go back to a more procedural style? When I tried, I ended up with mutable variables and a flag to indicate success and failure, which seems less elegant:</p>\n\n<pre><code>fn data_vals(sv: &amp;Vec&lt;(u32, String)&gt;) -&gt; Result&lt;Vec&lt;i32&gt;, String&gt; {\n    let mut datavals = Vec::new();\n    let mut success = true;\n    for s in sv {\n        match s.1.parse::&lt;i32&gt;() {\n            Ok(v) =&gt; datavals.push(v),\n            Err(_e) =&gt; {\n                eprintln!(\"ERROR: Invalid data value at line {}:  '{}'\",\n                          s.0, s.1);\n                success = false;\n            },\n        }\n    }\n    if success {\n        return Ok(datavals);\n    } else {\n        return Err(\"*** Invalid data.\".to_string());\n    }\n}\n</code></pre>\n\n<p>Can someone advise me on the best way to do this? Should I stick to the procedural style here, and if so can that be improved? Or is there a cleaner functional way to do it? Or a blend of the two? Any advice appreciated.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1548452076, "post_id": 54372941, "comment_id": 95560630, "body": "What do you mean with a rust file and a rust program? An entire rust project or a standalone <code>main.rs</code> or are you asking how to run a precompiled binary (<code>.exe</code>)?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1548496086, "post_id": 54372941, "comment_id": 95568252, "body": "As Optimistic Peach already mentioned, you need to add a bit more information to your question. If you are asking about compiled binaries, the question is not Rust specific, but rather operation system specific. If it&#39;s not compiled yet, we need to know if it&#39;s a Cargo project or a single Rust file."}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 1, "last_activity_date": 1553727826, "last_edit_date": 1553727826, "creation_date": 1548452007, "answer_id": 54373072, "question_id": 54372941, "link": "https://stackoverflow.com/questions/54372941/running-a-rust-program-that-is-outside-of-the-current-directory/54373072#54373072", "title": "Running a Rust program that is outside of the current directory", "body": "<p>To run a Rust file without dependencies, you can do so on a shell/command prompt.</p>\n\n<p>Go to directory that looks like so:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Directory\n-&gt; main.rs\n</code></pre>\n\n<p>Run</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc ./main.rs\n</code></pre>\n\n<p>This will spit out <code>main</code> (<code>main.exe</code> on Windows) and you can run that normally as <code>./main</code> (<code>./main.exe</code> on Windows)</p>\n\n<hr>\n\n<p>If you want to use Cargo, you'll have to create a <code>Cargo.toml</code> for it and put the Rust file into the <code>src/</code> directory. </p>\n\n<hr>\n\n<p>If you want to not be in the same directory as the Rust file, then you can do </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc \"&lt;path/to/your/file&gt;/main.rs\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1548507682, "creation_date": 1548507682, "answer_id": 54378606, "question_id": 54372941, "link": "https://stackoverflow.com/questions/54372941/running-a-rust-program-that-is-outside-of-the-current-directory/54378606#54378606", "title": "Running a Rust program that is outside of the current directory", "body": "<p>You can use the <code>--manifest-path</code> argument on <code>cargo run</code> to specify the path to <code>Cargo.toml</code> (sources files will be resolved relative to that).</p>\n\n<p>For example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run --manifest-path ~/Desktop/src/myapp/Cargo.toml -- &lt;program arguments&gt;\n</code></pre>\n\n<p>Note that if you have a rustup toolchain override on the directory containing <code>Cargo.toml</code>, it will <em>not</em> be taken into account.</p>\n"}], "owner": {"reputation": 5, "user_id": 9442929, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-FwDJoD3U-LA/AAAAAAAAAAI/AAAAAAAAAGM/9fAG_OxRKFU/photo.jpg?sz=128", "display_name": "Joshua Norris", "link": "https://stackoverflow.com/users/9442929/joshua-norris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1487, "favorite_count": 0, "accepted_answer_id": 54373072, "answer_count": 2, "score": -3, "last_activity_date": 1553727826, "creation_date": 1548451341, "last_edit_date": 1548495880, "question_id": 54372941, "link": "https://stackoverflow.com/questions/54372941/running-a-rust-program-that-is-outside-of-the-current-directory", "title": "Running a Rust program that is outside of the current directory", "body": "<p>How do I execute a Rust program when I am not currently inside the directory that holds the program? If I want to be in the <code>Downloads/</code> directory and run a Rust file that is in the <code>Desktop/</code> directory, how do I use <code>cargo run</code>? I assumed I could do something like <code>cargo run &lt;path of rust file&gt;</code>.</p>\n"}, {"tags": ["rust", "iterator", "mutable"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1548450597, "post_id": 54372543, "comment_id": 95560064, "body": "It&#39;s not quite clear to me how you want to use this iterator. Could you please provide an example?"}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1548451529, "creation_date": 1548451529, "answer_id": 54372984, "question_id": 54372543, "link": "https://stackoverflow.com/questions/54372543/rust-function-that-takes-an-iterator-and-returns-an-iterator-with-mutated-items/54372984#54372984", "title": "Rust function that takes an iterator, and returns an iterator with mutated items?", "body": "<p>If the item type of an iterator is <code>String</code>, the iterator yields <em>owned</em> strings. The iterator transfers ownership of these strings to the consumer. The consumer can modify the strings, since it owns them.</p>\n\n<p>However, you can't use <code>inspect()</code> to modify the elements of an iterator. The closure passed to <code>inspect()</code> receives an immutable reference to the items of the iterator, which can't be used to modify the items. The correct iterator adapter to modify items is <code>map()</code>, so this works (but it doesn't feel particularly idiomatic to me):</p>\n\n<pre><code>fn to_greetings&lt;I&gt;(names: I) -&gt; impl Iterator&lt;Item = String&gt;\nwhere\n    I: Iterator&lt;Item = String&gt;,\n{\n    names.map(|mut name| { greet(&amp;mut name); name })\n}\n</code></pre>\n\n<p>If you want to actually modify the strings in some underlying container, e.g. a vector of strings, you need a different approach though. A mutable iterator over a container of strings has an item type of <code>&amp;mut String</code>, so you'd need to use something like</p>\n\n<pre><code>fn to_greetings&lt;'a, I&gt;(names: I) -&gt; impl Iterator&lt;Item = &amp;'a mut String&gt;\nwhere\n    I: Iterator&lt;Item = &amp;'a mut String&gt;,\n{\n    names.map(|name| { greet(name); name })\n}\n</code></pre>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 259, "favorite_count": 0, "accepted_answer_id": 54372984, "answer_count": 1, "score": 2, "last_activity_date": 1548451529, "creation_date": 1548449275, "question_id": 54372543, "link": "https://stackoverflow.com/questions/54372543/rust-function-that-takes-an-iterator-and-returns-an-iterator-with-mutated-items", "title": "Rust function that takes an iterator, and returns an iterator with mutated items?", "body": "<p>I want to write a function that takes one iterator as input, and return an iterator with the same items but mutated. Like in this example:</p>\n\n<pre><code>fn greet(name: &amp;mut String) {\n    name.insert_str(0, \"Hello \");\n}\n\nfn to_greetings(names: impl Iterator&lt;Item = String&gt;) -&gt; impl Iterator&lt;Item = String&gt; {\n    names.inspect(|name| greet(name))\n}\n</code></pre>\n\n<p>This does not compile, since <code>name</code> isn't mutable. I have tried adding <code>mut</code> in various places without really understanding what I am doing, but without any success. How do I fix the above code?</p>\n\n<p>I guess I need to make the items mutable, but apparently <code>Item = mut String</code> is a syntax error.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548472391, "post_id": 54372379, "comment_id": 95564969, "body": "unfortunately this is a limitation of generic."}, {"owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "edited": false, "score": 0, "creation_date": 1548619973, "post_id": 54372379, "comment_id": 95596614, "body": "Unfortunately Serde defines Serialize/Deserialize impls for arrays up to size 32, but we have <a href=\"https://github.com/serde-rs/serde/issues/631#issuecomment-322677033\" rel=\"nofollow noreferrer\">workaround</a>. Also it is published as a <a href=\"https://github.com/est31/serde-big-array\" rel=\"nofollow noreferrer\">crate</a>"}], "owner": {"reputation": 2777, "user_id": 4852094, "user_type": "registered", "accept_rate": 68, "profile_image": "https://graph.facebook.com/10102767534136292/picture?type=large", "display_name": "Rob", "link": "https://stackoverflow.com/users/4852094/rob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 148, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1548448382, "creation_date": 1548448382, "question_id": 54372379, "link": "https://stackoverflow.com/questions/54372379/serializable-struct-with-bytes-array", "title": "Serializable Struct with Bytes Array", "body": "<p>How would I serialize a struct like:</p>\n\n<pre><code>#[derive(Debug, Clone, Serialize, Deserialize)]\nstruct MyStruct {\n    values: [u8; 64],\n}\n</code></pre>\n\n<p>The error I get states:</p>\n\n<pre><code>^^^ the trait `serde::Deserialize&lt;'_&gt;` is not implemented for `[u8; 64]`\n</code></pre>\n\n<p>But I'm not sure I understand why this is an issue since it has a known length.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 169, "user_id": 1608911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff1aa3e25c7ec0eedaacce54a3198d82?s=128&d=identicon&r=PG", "display_name": "seamlik", "link": "https://stackoverflow.com/users/1608911/seamlik"}, "edited": false, "score": 0, "creation_date": 1548481137, "post_id": 54372157, "comment_id": 95566033, "body": "I don&#39;t remember seeing &quot;inherent method&quot; in Rust&#39;s documentation, so I assume this is a general term in computer science?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 169, "user_id": 1608911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff1aa3e25c7ec0eedaacce54a3198d82?s=128&d=identicon&r=PG", "display_name": "seamlik", "link": "https://stackoverflow.com/users/1608911/seamlik"}, "edited": false, "score": 1, "creation_date": 1548504260, "post_id": 54372157, "comment_id": 95569898, "body": "@seamlik: I don&#39;t have much of a CS background, so I have no idea. In Rust, it&#39;s often used to differentiate the methods <i>inherent</i> to a type (<code>impl Struct</code>), which you can access immediately after importing said type, from the methods a type gains from implementing traits, which can only be accessed once the trait was imported."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 5, "creation_date": 1548539193, "post_id": 54372157, "comment_id": 95579038, "body": "I think this answer misses the main difference: <code>impl Trait</code> is short for <code>impl dyn Trait</code>, and the methods are only available for <i>trait objects</i>, e.g. <code>&amp;dyn Trait</code>. You can&#39;t call them on a concrete type implementing <code>Trait</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1548591098, "post_id": 54372157, "comment_id": 95588011, "body": "@SvenMarnach: That&#39;s a difference I had completely missed. Interestingly, you cannot even call it on <code>T: Trait + &#39;static</code>. Do you know if this is in any way linked to the <a href=\"https://en.wikipedia.org/wiki/Fragile_base_class\" rel=\"nofollow noreferrer\">Fragile Base Class</a> issue? In any case, I would encourage you to answer yourself so I can upvote you."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1548602561, "post_id": 54372157, "comment_id": 95591270, "body": "@MatthieuM. I&#39;ve added another answer. The reason you can&#39;t call it on <code>T: Trait</code> is that <code>T</code> is still a concrete type, which is monomorphised to the actual type at compile time. I don&#39;t think this has anything to do with the fragile base class issue."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1548447043, "creation_date": 1548447043, "answer_id": 54372157, "question_id": 54371916, "link": "https://stackoverflow.com/questions/54371916/differences-between-2-styles-of-default-implementations-in-a-trait/54372157#54372157", "title": "Differences between 2 styles of default implementations in a trait?", "body": "<p>In short: one can be overridden, and the other cannot.</p>\n\n<p>When you define a trait, you define items that implementations of the trait may (or have to) override:</p>\n\n<pre><code>trait Trait {\n    fn foo(&amp;self) {\n        println!(\"Default implementation\");\n    }\n}\n\nimpl Trait for i64 {\n    fn foo(&amp;self) {\n        println!(\"i64 implementation: {}\", self);\n    }\n}\n</code></pre>\n\n<p>On the other hand, using <code>impl Trait</code>, you define <em>inherent</em> methods, which cannot be overridden:</p>\n\n<pre><code>impl Trait {\n    fn bar(&amp;self) {\n        self.foo();\n        self.foo()\n    }\n}\n\n// Try:\nimpl Trait for i64 {\n    fn bar(&amp;self) { ... } // error: bar cannot be overridden.\n}\n</code></pre>\n\n<p>As a result, inherent traits methods act as the <a href=\"https://en.wikipedia.org/wiki/Template_method_pattern\" rel=\"nofollow noreferrer\">Template Method Pattern</a>: they provide a canvas linking together one or multiple overridable method(s).</p>\n\n<p>If you look at the <code>failure</code> crate that you linked, the method <code>Failure::find_root_cause()</code> states:</p>\n\n<blockquote>\n  <p>This is equivalent to iterating over <code>iter_causes()</code> and taking the last item.</p>\n</blockquote>\n\n<p>You may consider those inherent methods to be <em>convenience methods</em>, methods providing an easy/intuitive interface for common tasks which <em>can</em> be accomplished manually... but are conveniently pre-defined.</p>\n\n<p><em>Note: any inherent method could be implemented as a free function taking the trait as a first argument; however free functions cannot be called in method position.</em></p>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 11, "last_activity_date": 1548608760, "last_edit_date": 1548608760, "creation_date": 1548602222, "answer_id": 54389651, "question_id": 54371916, "link": "https://stackoverflow.com/questions/54371916/differences-between-2-styles-of-default-implementations-in-a-trait/54389651#54389651", "title": "Differences between 2 styles of default implementations in a trait?", "body": "<p>The first snippet,</p>\n\n<pre><code>trait Trait {\n    fn foo(&amp;self) {\n        println!(\"Default implementation\");\n    }\n}\n</code></pre>\n\n<p>implements a <em>provided method</em> on the trait. This method can be overridden by a trait implementation, but it does not have to be overridden.</p>\n\n<p>The second snippet,</p>\n\n<pre><code>impl Trait {\n    fn bar(&amp;self) {\n        println!(\"Anonymous implementation?\");\n    }\n}\n</code></pre>\n\n<p>implements an <em>inherent method</em> on a <em>trait object</em> of type <code>dyn Trait</code>. Method implementations for <code>dyn Trait</code> can only be called for trait objects, e.g. of type <code>&amp;dyn Trait</code>. They can't receive <code>self</code> by value, since <code>dyn Trait</code> does not have a size known at compile time, and they <strong>can't be called on <em>concrete types</em> implementing <code>Trait</code></strong> (including generic types with a <code>Trait</code> bound).</p>\n\n<p>The modern notation is to write <code>impl dyn Trait</code> instead of <code>impl Trait</code>, and in fact this notation was <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2113-dyn-trait-syntax.md#the-current-syntax-is-often-ambiguous-and-confusing\" rel=\"noreferrer\">one of the motivating examples for the introduction of the <code>dyn</code> keyword</a> \u2013 the old syntax did not provide any clues as to what the semantics are, whereas the new syntax with the <code>dyn</code> keyword hints at the fact that this impl is only used together with dynamic dispatch.</p>\n\n<p>A trait object is a <em>fat pointer</em> to an object implementing <code>Trait</code>, but the concrete type of the object is not necessarily known at compile time. The fat pointer contains a pointer to the object data, as well as a pointer to the virtual method table of the object type. The latter is used to dynamically dispatch to the correct trait implementation at runtime.</p>\n\n<p>It is rather uncommon to use <code>impl dyn Trait</code>. Generally it's only useful if you want to make use of some dynamic type information, like downcasting to the actual type. The only traits with inherent methods on trait objects in the standard library are <a href=\"https://doc.rust-lang.org/nightly/std/any/trait.Any.html\" rel=\"noreferrer\"><code>Any</code></a> and <a href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" rel=\"noreferrer\"><code>Error</code></a>.</p>\n"}], "owner": {"reputation": 169, "user_id": 1608911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff1aa3e25c7ec0eedaacce54a3198d82?s=128&d=identicon&r=PG", "display_name": "seamlik", "link": "https://stackoverflow.com/users/1608911/seamlik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 640, "favorite_count": 1, "answer_count": 2, "score": 6, "last_activity_date": 1548608760, "creation_date": 1548445650, "last_edit_date": 1548446548, "question_id": 54371916, "link": "https://stackoverflow.com/questions/54371916/differences-between-2-styles-of-default-implementations-in-a-trait", "title": "Differences between 2 styles of default implementations in a trait?", "body": "<p>There are 2 ways to provide methods for a Trait itself, Rustdoc distinguishes them by saying \"provided methods\" and <code>impl dyn XXX</code>. For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Trait {\n    fn foo(&amp;self) {\n        println!(\"Default implementation\");\n    }\n}\n\nimpl Trait {\n    fn bar(&amp;self) {\n        println!(\"Anonymous implementation?\");\n    }\n}\n</code></pre>\n\n<p>I noticed it when I was reading the documentation of Rust's <a href=\"https://docs.rs/failure/0.1.5/failure/trait.Fail.html\" rel=\"noreferrer\"><code>failure</code></a> crate.</p>\n\n<p>What are the use cases for them? What are the differences?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1548448396, "post_id": 54370530, "comment_id": 95559177, "body": "Here&#39;s the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=28b8c3c70be9717ebb54792e33573cf7\" rel=\"nofollow noreferrer\">minimal version</a> that gives the same error."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1548455544, "post_id": 54370530, "comment_id": 95561740, "body": "Trait Objects are invariant over their types, which means <code>&#39;r</code> will never be shortened for the call <code>deref()</code>. In both the cases <code>self.r</code> will remain borrowed for <code>&#39;r</code> lifetime. However with mutable reference, the compiler is basically telling you that since <code>self.r</code> is borrowed (mutable references are reborrowed when passed as function arguments) in <code>deref()</code>, it also needs <code>self</code> to remain borrowed for atleast <code>&#39;r</code> lifetime. So in the minimal version code above, if you make the change from <code>&amp;self</code> to <code>&amp;&#39;r self</code>, it compiles."}, {"owner": {"reputation": 473, "user_id": 2944788, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/82bc36ea7b55dfcc9b52d7715cd53fe5?s=128&d=identicon&r=PG&f=1", "display_name": "Matze", "link": "https://stackoverflow.com/users/2944788/matze"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1548509939, "post_id": 54370530, "comment_id": 95571271, "body": "@cotigao I&#39;m a little bit confused, currently there is no dynamic dispatch involved, so what has that to do with trait objects?"}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1548598476, "post_id": 54370530, "comment_id": 95589966, "body": "oops, Yes, there&#39;s no dynamic dispatch here. I meant impl Trait types (static dispatch). But it holds true for dynamic dispatch too."}], "answers": [{"comments": [{"owner": {"reputation": 473, "user_id": 2944788, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/82bc36ea7b55dfcc9b52d7715cd53fe5?s=128&d=identicon&r=PG&f=1", "display_name": "Matze", "link": "https://stackoverflow.com/users/2944788/matze"}, "edited": false, "score": 0, "creation_date": 1548639400, "post_id": 54389018, "comment_id": 95600647, "body": "Oh that lifetime stuck there from design iterations ways ago, nice! Thank you for your thorough explanation!"}], "tags": [], "owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "is_accepted": true, "score": 0, "last_activity_date": 1548599360, "last_edit_date": 1548599360, "creation_date": 1548598211, "answer_id": 54389018, "question_id": 54370530, "link": "https://stackoverflow.com/questions/54370530/reading-mutable-references-has-different-lifetime-semantics-than-immutable-refer/54389018#54389018", "title": "Reading mutable references has different lifetime semantics than immutable references", "body": "<p>Trait Types are invariant over their generic parameters. </p>\n\n<p>Consider this example:</p>\n\n<pre><code>struct Test&lt;'a, F: Fn(&amp;'a i32)&gt; {\n    i: &amp;'a i32,\n    f: F,\n}\n\nfn main() {\n    let i = 1i32;\n    let t = Test { i: &amp;i, f: |&amp;_| {} };\n\n    {\n        let j = 2i32;\n        (t.f)(&amp;j);\n    }\n\n    println!(\"{:?}\", t.i);\n}\n</code></pre>\n\n<p>This will give the error: </p>\n\n<pre><code>error[E0597]: `j` does not live long enough\n  --&gt; src/main.rs:12:15\n   |\n12 |         (t.f)(&amp;j);\n   |               ^^ borrowed value does not live long enough\n13 |     }\n   |     - `j` dropped here while still borrowed\n14 | \n15 |     println!(\"{:?}\", t.i);\n   |                      --- borrow later used here\n</code></pre>\n\n<p>As you can see, the type <code>Test&lt;'a ...</code> is not unified to a shorter lifetime with  that of <code>j</code> because <code>Test</code> contains a trait impl type <code>N</code> (static dispatch). As a result, it will be invariant over <code>'a</code>, hence <code>'a</code> cannot be shortened. But <code>j</code> does not live for <code>'a</code>,  hence the error.</p>\n\n<p>Moving to your question, let's have a look at a minimal version of your code:</p>\n\n<pre><code>struct Wrapper&lt;'r, R, N&gt;\nwhere\n    N: Fn(&amp;'r R),\n{\n    r: &amp;'r mut R,\n    n: N,\n}\n\nimpl&lt;'r, R, N&gt; Wrapper&lt;'r, R, N&gt;\nwhere\n    N: Fn(&amp;'r R),\n{\n    fn myderef(&amp;self) {\n        (self.n)(self.r)\n    }\n}\n</code></pre>\n\n<p>This would give the same error:</p>\n\n<pre><code>error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src/lib.rs:14:18\n   |\n14 |         (self.n)(self.r)\n   |                  ^^^^^^\n   |\nnote: ...the reference is valid for the lifetime 'r as defined on the impl at 9:6...\n  --&gt; src/lib.rs:9:6\n   |\n9  | impl&lt;'r, R, N&gt; Wrapper&lt;'r, R, N&gt;\n   |      ^^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the method body at 13:5\n  --&gt; src/lib.rs:13:5\n   |\n13 | /     fn myderef(&amp;self) {\n14 | |         (self.n)(self.r)\n15 | |     }\n   | |_____^\n</code></pre>\n\n<p>What's exactly happening here? <code>&amp;self</code> with lifetimes will be of type <code>&amp;'shorter_lifetime Wrapper&lt;'r, R, N&gt;</code> and not <code>&amp;'shorter_lifetime Wrapper&lt;'shorter_lifetime, R, N&gt;</code>. <code>'r</code> will not be shortened to <code>'shorter_lifetime</code> as <code>Wrapper</code> will be invariant over it's generic lifetime parameter <code>'r</code> because of <code>N</code>.</p>\n\n<p>Now that we know what exactly the argument type <code>&amp;self</code> is, let's see what happens inside the body of <code>myderef()</code>. The trait type <code>N</code> (static dispatch) is invoked with <code>self.r</code>. But <code>self.r</code> is a mutable reference, that gets re-borrowed when passed to <code>(self.r)()</code>. So now you have a mutable reference that is behind another reference (<code>self</code> is a reference), that needs to live for <code>'r</code> (<code>N</code> \nneeds it's input argument to be with <code>'r</code> lifetime as per the definition), as a result <code>&amp;self</code> too needs to live for <code>'r</code>.  But <code>&amp;self</code>'s lifetime is <code>'shorter_lifetime</code>, hence the error. </p>\n\n<p>To put it another way, if you have <code>&amp;'a &amp; 'b mut T</code> (no subtyping relation between <code>'a</code> and <code>'b</code>) as an input  argument to a function and the compiler allows you to reborrow the inner reference and return it, then there is a violation of the borrowing rules, since <code>&amp;mut T</code> is already behind a reference. The outer reference \"owns\" the inner reference, mainly because the inner reference is mutable and the function needs a guarantee that the outer reference remains for at-least as long as the inner (mutable) reference is reborrowed, otherwise after the function call there would be more than one owner of the mutable reference.</p>\n\n<p>As an example, the following code will not compile:</p>\n\n<pre><code>fn test&lt;'a, 'b&gt; (i:&amp;'a &amp;'b mut i32) -&gt; &amp;'b i32 {\n    &amp;**i\n}\n</code></pre>\n\n<p>But this one will:</p>\n\n<pre><code>fn test&lt;'a:'b, 'b&gt; (i:&amp;'a &amp;'b mut i32) -&gt; &amp;'b i32 {\n    &amp;**i\n}\n</code></pre>\n\n<p>as there's a guarantee that <code>'a</code> lives for at-least as long as <code>'b</code>.</p>\n\n<p>If the inner reference is immutable, then the former will also compile as you can have multiple immutable references. There is no notion of outer reference \"owning\" the inner reference.</p>\n\n<p>To make the minimal version compile, we will have to tell the compiler that <code>&amp;self</code> also lives for <code>'r</code>. Either that or remove the hard constraint of <code>'r</code> on the <code>N</code>'s input argument (lifetime elision). </p>\n\n<p>In your example, <code>deref()</code> won't allow you to specify a lifetime on <code>&amp;self</code>, as per <code>Deref</code>'s definition. If you remove the hard constraint of <code>'r</code> on <code>N</code>'s input argument, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f08fdc8fb1937bf633eb1546eb543ddd\" rel=\"nofollow noreferrer\">it will compile</a></p>\n"}], "owner": {"reputation": 473, "user_id": 2944788, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/82bc36ea7b55dfcc9b52d7715cd53fe5?s=128&d=identicon&r=PG&f=1", "display_name": "Matze", "link": "https://stackoverflow.com/users/2944788/matze"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 54389018, "answer_count": 1, "score": 0, "last_activity_date": 1548599360, "creation_date": 1548438961, "question_id": 54370530, "link": "https://stackoverflow.com/questions/54370530/reading-mutable-references-has-different-lifetime-semantics-than-immutable-refer", "title": "Reading mutable references has different lifetime semantics than immutable references", "body": "<p>Consider the following code, where a reference to a root type <code>R</code> is wrapped. Also stored is some type <code>N</code>(avigate), which knows how to dereference <code>R</code> for <code>T</code>.</p>\n\n<pre><code>use std::ops::Deref;\n\nstruct Wrapper&lt;'r, R, N, T&gt;\nwhere\n    N: Fn(&amp;'r R) -&gt; &amp;T,\n    T: 'static,\n{\n    r: &amp;'r R,\n    n: N,\n}\n\nimpl&lt;'r, R, N, T&gt; Deref for Wrapper&lt;'r, R, N, T&gt;\nwhere\n    N: Fn(&amp;'r R) -&gt; &amp;T,\n    T: 'static,\n{\n    type Target = T;\n\n    fn deref(&amp;self) -&gt; &amp;T {\n        let r: &amp;'r R = self.r;\n        let t: &amp;'r T = (self.n)(r);\n        t\n    }\n}\n</code></pre>\n\n<p>Now, if we change our reference type <code>r: &amp;'r R,</code> to be mutable <code>r: &amp;'r mut R,</code> it no longer works:</p>\n\n<pre><code>use std::ops::Deref;\n\nstruct Wrapper&lt;'r, R, N, T&gt;\nwhere\n    N: Fn(&amp;'r R) -&gt; &amp;T,\n    T: 'static,\n{\n    r: &amp;'r mut R,\n    n: N,\n}\n\nimpl&lt;'r, R, N, T&gt; Deref for Wrapper&lt;'r, R, N, T&gt;\nwhere\n    N: Fn(&amp;'r R) -&gt; &amp;T,\n    T: 'static,\n{\n    type Target = T;\n\n    fn deref(&amp;self) -&gt; &amp;T {\n        let r: &amp;'r R = self.r;\n        let t: &amp;'r T = (self.n)(r);\n        t\n    }\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src/lib.rs:21:24\n   |\n21 |         let r: &amp;'r R = self.r;\n   |                        ^^^^^^\n   |\nnote: ...the reference is valid for the lifetime 'r as defined on the impl at 13:6...\n  --&gt; src/lib.rs:13:6\n   |\n13 | impl&lt;'r, R, N, T&gt; Deref for Wrapper&lt;'r, R, N, T&gt;\n   |      ^^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the method body at 20:5\n  --&gt; src/lib.rs:20:5\n   |\n20 | /     fn deref(&amp;self) -&gt; &amp;T {\n21 | |         let r: &amp;'r R = self.r;\n22 | |         let t: &amp;'r T = (self.n)(r);\n23 | |         t\n24 | |     }\n   | |_____^\n</code></pre>\n\n<p>We get a better error message with nll:</p>\n\n<pre><code>error: lifetime may not live long enough\n  --&gt; src/lib.rs:21:16\n   |\n13 | impl&lt;'r, R, N, T&gt; Deref for Wrapper&lt;'r, R, N, T&gt;\n   |      -- lifetime `'r` defined here\n...\n20 |     fn deref(&amp;self) -&gt; &amp;T {\n   |              - let's call the lifetime of this reference `'1`\n21 |         let r: &amp;'r R = self.r;\n   |                ^^^^^ type annotation requires that `'1` must outlive `'r\n</code></pre>\n\n<p>I've annotated the lifetimes in deref to make sure i'm on the same track as the compiler about the lifetimes. The nll message is particulary interesting, because it says that it requires <code>&amp;self</code> to outlive <code>'r</code>.</p>\n\n<p>But that doesn't make sense to me, since if we annotate the lifetimes on deref, it should look like this:</p>\n\n<pre><code>fn deref&lt;'1&gt;(&amp;'1 self) -&gt; &amp;'1 T;\n</code></pre>\n\n<p>And rather require that <code>'r: '1</code>, which is implicitly given by <code>Wrapper&lt;'r, ...&gt;</code></p>\n\n<p>This intuition seems to hold in the first example, but not in the second with the immutable reference.</p>\n\n<p>So two questions unfold for me:</p>\n\n<ol>\n<li>Why does it make a difference if <code>self.r</code> is immutable or not? I can't access <code>r</code> mutably anyway, since <code>&amp;self</code> is immutable.</li>\n<li>Is <code>1.</code> a fundamental restriction, or can the code be annotated in a way to tell rustc what i want to do?</li>\n</ol>\n"}, {"tags": ["docker", "heroku", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548433560, "post_id": 54369113, "comment_id": 95552481, "body": "You must cache the <code>target</code> directory"}, {"owner": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548433598, "post_id": 54369113, "comment_id": 95552501, "body": "Which bullet point would that fix, if not all of them?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548433689, "post_id": 54369113, "comment_id": 95552564, "body": "At least the 1st and 2nd points. I&#39;ve never used Heroku, so I cannot say for the 3rd one."}, {"owner": {"reputation": 64542, "user_id": 10008173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ea5d6d5d63e054acb8cfa95a39240d?s=128&d=identicon&r=PG&f=1", "display_name": "David Maze", "link": "https://stackoverflow.com/users/10008173/david-maze"}, "edited": false, "score": 2, "creation_date": 1548434069, "post_id": 54369113, "comment_id": 95552776, "body": "Can you add your <code>Dockerfile</code> to the question?  There are some reasonably standard tricks.  (A single 1 GB layer is a little unusual especially for a very small program.)"}, {"owner": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "edited": false, "score": 0, "creation_date": 1548434377, "post_id": 54369113, "comment_id": 95552924, "body": "Added a gist (<a href=\"https://gist.github.com/vcapra1/0a857aac8f05277e65ea5d86e8e4e239\" rel=\"nofollow noreferrer\">gist.github.com/vcapra1/0a857aac8f05277e65ea5d86e8e4e239</a>) with relevant files"}, {"owner": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548434674, "post_id": 54369113, "comment_id": 95553104, "body": "Also @Boiethios sorry I&#39;m fairly new to Docker - how would I go about doing this in the Dockerfile?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548434875, "post_id": 54369113, "comment_id": 95553205, "body": "@vcapra1 I did that in the Gitlab CI, so I cannot say in your context."}], "answers": [{"tags": [], "owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "is_accepted": false, "score": 1, "last_activity_date": 1548555741, "last_edit_date": 1548555741, "creation_date": 1548466966, "answer_id": 54374960, "question_id": 54369113, "link": "https://stackoverflow.com/questions/54369113/why-does-heroku-rebuild-my-docker-container-every-time/54374960#54374960", "title": "Why does Heroku rebuild my Docker container every time?", "body": "<blockquote>\n  <p>Re-downloading rustc, rust-std, cargo, and rust-docs every time.\n  Re-downloading the same, unchanged dependencies, every time</p>\n</blockquote>\n\n<p>You should <a href=\"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#leverage-build-cache\" rel=\"nofollow noreferrer\">cache</a> these steps.</p>\n\n<blockquote>\n  <p>Re-pushing a 1.02 GB layer every time</p>\n</blockquote>\n\n<p>You doesn't need any of the Rust toolchains to run the compiled binary application, so you can simply use <code>debian:8-slim</code> or even <code>alpine</code> to run it.</p>\n\n<p>This will reduce the image size to 84.4MB:</p>\n\n<pre><code>FROM rust:1.31 as build\n\nRUN USER=root cargo new --bin my-app\nWORKDIR /my-app\n\n# Copy manifest and build it to cache your dependencies.\n# If you will change these files, then this step will rebuild\nCOPY rust-toolchain Cargo.lock Cargo.toml ./\nRUN cargo build --release &amp;&amp; \\\n    rm src/*.rs &amp;&amp; \\\n    rm ./target/release/deps/my_app*\n\n# Copy your source files and build them.\nCOPY ./src ./src\nCOPY ./run ./\nRUN cargo build --release\n\n# Use this image to reduce the final size\nFROM debian:8-slim\n\nCOPY --from=build /my-app/run ./\nCOPY --from=build /my-app/target/release/my-app ./target/release/my-app\n\nCMD [\"./run\"]\n</code></pre>\n"}], "owner": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 714, "favorite_count": 0, "answer_count": 1, "score": 9, "last_activity_date": 1548555741, "creation_date": 1548433194, "last_edit_date": 1548434351, "question_id": 54369113, "link": "https://stackoverflow.com/questions/54369113/why-does-heroku-rebuild-my-docker-container-every-time", "title": "Why does Heroku rebuild my Docker container every time?", "body": "<p>I'm deploying a Rust app with Rocket.rs in a Docker container to Heroku.  Each time I make one small change, I have to push the entire container.  This required re-downloading all the rust components (rustc, rust-std, cargo, etc.), redownloading all dependencies, and re-pushing layers.  In particular, there is one 1.02 GB layer that is pushed <em>every</em> time, which takes about 30 minutes.  Every time.  How can I avoid:</p>\n\n<ul>\n<li>Re-downloading rustc, rust-std, cargo, and rust-docs every time</li>\n<li>Re-downloading the same, unchanged dependencies, every time</li>\n<li>Re-pushing a 1.02 GB layer every time</li>\n</ul>\n\n<p>Here is a Gist with all my relevant files: <a href=\"https://gist.github.com/vcapra1/0a857aac8f05277e65ea5d86e8e4e239\" rel=\"noreferrer\">https://gist.github.com/vcapra1/0a857aac8f05277e65ea5d86e8e4e239</a></p>\n\n<p>By the way I should mention my code is pretty minimal: (this is the only .rs file)</p>\n\n<pre><code>#![feature(proc_macro_hygiene, decl_macro)]\n#[macro_use] extern crate rocket;\n\nuse std::fs;\n\n#[get(\"/\")]\nfn index() -&gt; &amp;'static str {\n    \"Hello from Rust!\"\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index]).launch();\n}\n</code></pre>\n"}, {"tags": ["stream", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548412957, "post_id": 54363562, "comment_id": 95541316, "body": "<code>do</code> is not the real function name, I guess"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548413017, "post_id": 54363562, "comment_id": 95541346, "body": "Why don&#39;t you use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.count\" rel=\"nofollow noreferrer\"><code>Iterator::count</code></a> or do I get you wrong?"}, {"owner": {"reputation": 941, "user_id": 7617604, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7f920ede1516b4f8460a1b0e554bc8b?s=128&d=identicon&r=PG&f=1", "display_name": "Burdui", "link": "https://stackoverflow.com/users/7617604/burdui"}, "edited": false, "score": 0, "creation_date": 1548413513, "post_id": 54363562, "comment_id": 95541569, "body": "<code>for_each()</code> has no return value, did you mean <code>map()</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": false, "score": 3, "last_activity_date": 1548420725, "creation_date": 1548420725, "answer_id": 54365701, "question_id": 54363562, "link": "https://stackoverflow.com/questions/54363562/how-to-write-len-methods-for-futuresstream/54365701#54365701", "title": "How to write len methods for futures::Stream?", "body": "<p>Per default <code>fold</code> on <code>Streams</code> returns a <code>Future</code>. If you want to block on the <code>Stream</code> and get the number of elements you need to <code>wait</code> on it.</p>\n\n<p>Furthermore if any element in the Stream is an error, it will panic.</p>\n\n<p>Possible blocking implementation:</p>\n\n<pre><code>use futures::stream::Stream;\nuse futures::future::{Future, ok};\n\ntrait StreamExt {\n    fn len(self) -&gt; usize;\n}\n\nimpl&lt;T: Stream&gt; StreamExt for T {\n    fn len(self) -&gt; usize {\n        self.fold(0, |a, _| ok(a + 1))\n            .wait()\n            .map_err(|_| ())\n            .unwrap()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=72370c20fb5f756a42c1e8f496a855d8\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1548420725, "creation_date": 1548412721, "last_edit_date": 1548413029, "question_id": 54363562, "link": "https://stackoverflow.com/questions/54363562/how-to-write-len-methods-for-futuresstream", "title": "How to write len methods for futures::Stream?", "body": "<p>Here's the code I tried (used a <code>fold()</code> to implement <code>len()</code> for streams but there're some weird type errors I can't understand (<code>do(row: Row)</code> returns a <code>Result&lt;(), Error&gt;</code>):</p>\n\n<pre><code>let rows_count = rows\n    .for_each(|row| parse_row(&amp;row))\n    .fold(0, |acc, a| futures::future::ok(acc + 1))\n    .wait()\n    .unwrap();\n</code></pre>\n\n<p>Thanks!</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1548440524, "post_id": 54360326, "comment_id": 95555982, "body": "<a href=\"https://crates.io/crates/typetag\" rel=\"nofollow noreferrer\">This library</a> was announced some time ago on Rust&#39;s subreddit. I have not looked too much into it, but it may be what you want"}, {"owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1548491183, "post_id": 54360326, "comment_id": 95567470, "body": "If I understand it correctly, this library enables serialization / deserialization of trait objects, but what I&#39;m looking for is a way to implement different serializers under the same trait, or at least a design close to that"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1548500855, "post_id": 54360326, "comment_id": 95569182, "body": "Oh, right, should&#39;ve read the question a bit more carefully, sorry). Well, there&#39;s always the enum approach, but that&#39;s a lot of boilerplate and not really well extensible."}, {"owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1548968537, "post_id": 54360326, "comment_id": 95746185, "body": "Can you please elaborate on this option?"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1548971601, "post_id": 54360326, "comment_id": 95747427, "body": "Wrapping all of your serializers in an enum, and using the enum instead of <code>Box&lt;Serializer&gt;</code>. The main downside is that you&#39;re losing the flexibility trait objects offer - whenever you want to add support for a new serializer, you need to add a variant to the enum, and the users of your library (if it is one) can&#39;t just plug in their own serializers without similar workarounds. But it works for generic things."}, {"owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1549001415, "post_id": 54360326, "comment_id": 95755139, "body": "Can you please add an answer with the code? I&#39;m not sure I&#39;m 100% following you"}], "answers": [{"comments": [{"owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "edited": false, "score": 0, "creation_date": 1548402180, "post_id": 54360692, "comment_id": 95536038, "body": "Thanks! will this library work with <a href=\"https://github.com/TyOverby/bincode\" rel=\"nofollow noreferrer\">bincode</a> and <a href=\"https://github.com/dtolnay/serde-yaml\" rel=\"nofollow noreferrer\">serde_yaml</a> as well?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "edited": false, "score": 0, "creation_date": 1548407901, "post_id": 54360692, "comment_id": 95538510, "body": "@fx23 I don&#39;t know, I haven&#39;t used it myself. But I see no reason why it shouldn&#39;t."}, {"owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "edited": false, "score": 0, "creation_date": 1548409639, "post_id": 54360692, "comment_id": 95539398, "body": "serde_json and serde_cbor contain a <code>Serializer</code> object that implements the <code>serde::ser::Serializer</code> trait. erased_serde counts on that. However bincode and serde_yaml don&#39;t have this object, so I don&#39;t think they can be used with erased_serde"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "edited": false, "score": 0, "creation_date": 1548411235, "post_id": 54360692, "comment_id": 95540320, "body": "I assume you&#39;re the one who opened the bug on erased_serde. You might be interested in these issues: <a href=\"https://github.com/dtolnay/serde-yaml/issues/44\" rel=\"nofollow noreferrer\">github.com/dtolnay/serde-yaml/issues/44</a> <a href=\"https://github.com/TyOverby/bincode/issues/242\" rel=\"nofollow noreferrer\">github.com/TyOverby/bincode/issues/242</a>"}, {"owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "edited": false, "score": 0, "creation_date": 1548412233, "post_id": 54360692, "comment_id": 95540881, "body": "Thanks! Apparently this library can&#39;t be used with <code>bincode</code> and <code>serde_yaml</code>. I understand this design won&#39;t work in Rust. Can you suggest an alternative design which will be as close as possible to what I want?"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 2, "last_activity_date": 1548400981, "creation_date": 1548400981, "answer_id": 54360692, "question_id": 54360326, "link": "https://stackoverflow.com/questions/54360326/dynamic-dispatch-with-traits-that-have-generic-methods/54360692#54360692", "title": "Dynamic dispatch with traits that have generic methods", "body": "<p>You can't use non-object-safe traits with dynamic dispatch; the object safety rules are specifically about the things that prevent dynamic dispatch.</p>\n\n<p>There are sometimes workarounds for specific scenarios. They are usually complex. But for <code>serde</code> specifically, there's the <a href=\"https://github.com/dtolnay/erased-serde\" rel=\"nofollow noreferrer\"><code>erased_serde</code></a> crate, because you're not the first one with this problem.</p>\n"}, {"tags": [], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "is_accepted": true, "score": 2, "last_activity_date": 1549051125, "last_edit_date": 1549051125, "creation_date": 1549049941, "answer_id": 54486163, "question_id": 54360326, "link": "https://stackoverflow.com/questions/54360326/dynamic-dispatch-with-traits-that-have-generic-methods/54486163#54486163", "title": "Dynamic dispatch with traits that have generic methods", "body": "<h2>Note</h2>\n\n<p>The following is not a good long-term solution, it is merely a workaround. A proper way to do what you want is to figure out and implement a method to reconcile <code>bincode</code> and <code>serde_yaml</code> with <code>erased_serde</code>. But if you need it to work right now, here's</p>\n\n<h2>the gist</h2>\n\n<p>Basically, you can use enums to write a poor man's dynamic dispatch. It looks more or less like this (I've simplified and omitted some things):</p>\n\n<pre><code>struct JsonSerializer();\nstruct YamlSerializer();\n\ntrait Serializer {\n    fn serialize&lt;V&gt;(&amp;self, thing: &amp;V) -&gt; ();\n}\n\nimpl Serializer for JsonSerializer {\n    fn serialize&lt;V&gt;(&amp;self, thing: &amp;V) -&gt; () {\n        println!(\"json\");\n    }\n}\n\nimpl Serializer for YamlSerializer {\n    fn serialize&lt;V&gt;(&amp;self, thing: &amp;V) -&gt; () {\n        println!(\"yaml\");\n    }\n}\n\n// That's what we'll be using instead of Box&lt;dyn Serializer&gt;\nenum SomeSerializer {\n    Json(JsonSerializer),\n    Yaml(YamlSerializer),\n}\n\nimpl SomeSerializer {\n    pub fn serialize&lt;V&gt;(&amp;self, thing: &amp;V) -&gt; () {\n        match self {\n            SomeSerializer::Json(ser) =&gt; ser.serialize(thing),\n            SomeSerializer::Yaml(ser) =&gt; ser.serialize(thing),\n        }\n    }\n}\n</code></pre>\n\n<p>Here's how you'd use it (except you'd probably want actual constructor functions here):</p>\n\n<pre><code>pub fn main() {\n    let thing = 2;\n    let json = SomeSerializer::Json(JsonSerializer());\n    let yaml = SomeSerializer::Yaml(YamlSerializer());\n    json.serialize(&amp;thing);\n    yaml.serialize(&amp;yaml);\n}\n</code></pre>\n\n<p>This has serious drawbacks (see below), but it does allow you to pack something that has generic methods into a unified interface.</p>\n\n<h2>The problems</h2>\n\n<p>The chief problem with this approach is that it's hard to add new serializers to the setup. With <code>Box&lt;dyn Serializer&gt;</code> all you need to do is to <code>impl Serializer</code> for something. Here you have to add a variant to the enum and pattern match on it in all relevant methods. This is inconvenient in the crate where <code>SomeSerializer</code> is defined, and <em>impossible</em> in other crates. Moreover, adding a variant to a public enum is a breaking change, which downstream crates may not exactly welcome. There are ways to ameliorate this to some extent:</p>\n\n<h2>Hide <code>SomeSerializer</code></h2>\n\n<p>It doesn't really make sense for <code>SomeSerializer</code> to be public. Ability to pattern match on it has very little benefit, and it being public limits what you can do to it without breaking things downstream. The usual solution is to put it in an opaque struct and export that, leaving the enum itself hidden:</p>\n\n<pre><code>pub struct VisibleSerializer(SomeSerializer);\n</code></pre>\n\n<h2>Still use the trait</h2>\n\n<p>You can't extend <code>SomeSerializer</code> with extra serializers in other crates. You can continue mounting more enum layers on it (and that is both unfortunate and ugly), but then no function in the original crate will accept such construct. This can be helped: rather than making <code>serialize</code> an inherent method of <code>SomeSerializer</code>, implement <code>Serializer</code> for it, and make all functions that would use <code>SomeSerializer</code> generic and accept a <code>T: Serializer</code>. Suddenly all of downstream crates can add a serializer they want to the setup.</p>\n\n<h2>Special-case only special cases</h2>\n\n<p>Having more than three of four serializers wrapped this way is kind of ridiculous, not to mention awkward. However, if the majority of serializers you want to work with are actually <code>erased_serde</code>-compatible, you can have a kind of catch-all enum variant for them in <code>SomeSerializer</code>, and have separate variants only for the incompatible ones:</p>\n\n<pre><code>enum SomeSerializer {\n    Whatever(Box&lt;dyn erased_serde::Serializer&gt;),\n}\n</code></pre>\n"}], "owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 388, "favorite_count": 1, "accepted_answer_id": 54486163, "answer_count": 2, "score": 2, "last_activity_date": 1549051125, "creation_date": 1548399244, "last_edit_date": 1548405764, "question_id": 54360326, "link": "https://stackoverflow.com/questions/54360326/dynamic-dispatch-with-traits-that-have-generic-methods", "title": "Dynamic dispatch with traits that have generic methods", "body": "<p>I have a similar use-case to the one described <a href=\"https://stackoverflow.com/questions/42620022/why-does-a-generic-method-inside-a-trait-require-trait-object-to-be-sized\">here</a>, but it's slightly different in that my solution can't replace the generic method with a non-generic method. Here's the code that I have (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e64c10ca323cc64ebd7dd37c6c618016\" rel=\"nofollow noreferrer\">Rust Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::{de::DeserializeOwned, Serialize};\nuse serde_json;\n\ntrait Serializer { \n    fn serialize_data&lt;V&gt;(&amp;self, data: &amp;V) -&gt; Result&lt;String, String&gt; where V: Serialize;\n\n    fn deserialize_data&lt;V&gt;(&amp;self, ser_data: &amp;str) -&gt; Option&lt;V&gt; where V: DeserializeOwned;\n}\n\nstruct JsonSerializer { \n    x: i32 // some member I need to store\n}\n\nimpl JsonSerializer {\n    fn new() -&gt; JsonSerializer {\n        JsonSerializer { x: 1 }\n    }\n}\n\nimpl Serializer for JsonSerializer {\n    fn serialize_data&lt;V&gt;(&amp;self, data: &amp;V) -&gt; Result&lt;String, String&gt; where V: Serialize {\n        match serde_json::to_string(data) {\n            Ok(ser_data) =&gt; Ok(ser_data),\n            Err(err) =&gt; Err(err.to_string())        \n        }\n    }\n\n    fn deserialize_data&lt;V&gt;(&amp;self, ser_data: &amp;str) -&gt; Option&lt;V&gt; where V: DeserializeOwned {\n        match serde_json::from_str(ser_data).unwrap() {\n            Ok(val) =&gt; Some(val),\n            Err(_) =&gt; None\n        }\n    }\n}\n\n\n\n// I may want to have more serializer objects like \n// YamlSerizlier, BincodeSerializer and so on...\n// ...\n\nstruct MyMainObject {\n    serializer: Box&lt;Serializer&gt;\n}\n\nimpl MyMainObject {\n    fn new() -&gt; MyMainObject {\n        MyMainObject { serializer: Box::new(JsonSerializer::new()) }\n    }\n\n    fn do_something(&amp;self) {\n        println!(\"{}\", self.serializer.serialize_data(&amp;1));\n        println!(\"{}\", self.serializer.serialize_data(&amp;String::from(\"MY STRING\")));\n    }\n}\n\nfn main() {\n    let my_main_object = MyMainObject::new();\n    my_main_object.do_something();\n}\n</code></pre>\n\n<p>As described in the previous question, when compiling this code I get an error <code>the trait `Serializer` cannot be made into an object</code> because it has generic methods:</p>\n\n<pre><code>   Compiling playground v0.0.1 (/playground)\nerror[E0038]: the trait `Serializer` cannot be made into an object\n  --&gt; src/main.rs:42:5\n   |\n42 |     serializer: Box&lt;Serializer&gt;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Serializer` cannot be made into an object\n   |\n   = note: method `serialize_data` has generic type parameters\n   = note: method `deserialize_data` has generic type parameters\n</code></pre>\n\n<p>But in my case I want these methods to stay generic so I can serialize/deserialize any type of data.</p>\n\n<p>So my question is how to keep the dynamic dispatch pattern and still make it work, meaning I want to a <code>Serializer</code> trait member in <code>MyMainObject</code> that I can initialize with any type of serializer object (Json, Yaml, etc.), and then call <code>serializer.serialize_data()</code> or <code>serializer.deserialize_data()</code> inside of <code>MyMainObject</code>.</p>\n\n<p>If this is not possible, what is the best alternative you can suggest?</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>I need a solution that would work for different kind of serializers, at list those ones:</p>\n\n<ul>\n<li><a href=\"https://github.com/serde-rs/json\" rel=\"nofollow noreferrer\">serde_json</a></li>\n<li><a href=\"https://github.com/dtolnay/serde-yaml\" rel=\"nofollow noreferrer\">serde_yaml</a></li>\n<li><a href=\"https://github.com/TyOverby/bincode\" rel=\"nofollow noreferrer\">bincode</a></li>\n<li><a href=\"https://github.com/flavray/avro-rs\" rel=\"nofollow noreferrer\">avro</a></li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1548384701, "post_id": 54358127, "comment_id": 95531237, "body": "there is a lot of way of &quot;debuging&quot;, this is too broad, this error mean you probably mess a lot with memory, you didn&#39;t provide an <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> so I will vote to close your question."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548401119, "post_id": 54358127, "comment_id": 95535609, "body": "Probably dup/related: <a href=\"https://stackoverflow.com/q/25385173\">What is a debugger and how can it help me diagnose problems?</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1548409998, "post_id": 54358127, "comment_id": 95539601, "body": "If your <code>Node</code> derives from <code>Debug</code> (hint: it should), you could try printing <code>next</code> with the new <code>dbg</code> macro: <code>match dbg!(next)</code>: at each iteration of the loop."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1548410133, "post_id": 54358127, "comment_id": 95539675, "body": "What&#39;s this <code>!v.is_null()</code> check? You immediately dereference <code>v</code> after the <code>if</code> check, so surely it&#39;s never null, right? If it is never <code>null</code>, then consider using <a href=\"https://doc.rust-lang.org/std/ptr/struct.NonNull.html\" rel=\"nofollow noreferrer\"><code>ptr::NonNull&lt;Node&lt;T&gt;&gt;</code></a> instead of <code>*mut Node&lt;T&gt;</code>."}, {"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1548410440, "post_id": 54358127, "comment_id": 95539846, "body": "@MatthieuM. Thanks for your comment, and in fact, I will try to use <code>NonNull</code> after I implement the basic logic, and also I removed the <code>if</code> check, it still crashes."}], "answers": [{"tags": [], "owner": {"reputation": 39, "user_id": 9249012, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-D1S39aBP_R4/AAAAAAAAAAI/AAAAAAAAABY/cYMhF8dBUVs/photo.jpg?sz=128", "display_name": "Jeff Hiner", "link": "https://stackoverflow.com/users/9249012/jeff-hiner"}, "is_accepted": false, "score": 2, "last_activity_date": 1548397129, "creation_date": 1548397129, "answer_id": 54359901, "question_id": 54358127, "link": "https://stackoverflow.com/questions/54358127/how-to-debug-illegal-hardware-instruction-error-in-unsafe-block/54359901#54359901", "title": "How to debug illegal hardware instruction error in unsafe block?", "body": "<p><code>unsafe</code> is a way of saying, \"shut up, rustc, I know what I'm doing.\" In this case, you're assuring the compiler that <code>v</code> is always a valid aligned pointer to a <code>Node&lt;T&gt;</code>, that the array indexing of <code>forward</code> resolves to an array of <code>Option&lt;*mut Node&lt;T&gt;&gt;</code> with size <code>MAX_HEIGHT</code>.  If any of these assumptions are violated, you're back in undefined behavior land.  </p>\n\n<p>You've turned off all the safeties and aimed your compiler at unknown pointers. The rational part of my brain wants to know exactly what you're trying to accomplish here.</p>\n\n<p>The best advice I can offer with the information provided is to use <code>rust-gdb</code> and step through your program until your pointers don't look sane.</p>\n"}], "owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1593121681, "creation_date": 1548382821, "last_edit_date": 1593121681, "question_id": 54358127, "link": "https://stackoverflow.com/questions/54358127/how-to-debug-illegal-hardware-instruction-error-in-unsafe-block", "title": "How to debug illegal hardware instruction error in unsafe block?", "body": "<p>Here is the code:</p>\n<pre><code>pub struct Node&lt;T&gt; {\n    data: Option&lt;T&gt;,\n    level: usize,\n    forward: [Option&lt;*mut Node&lt;T&gt;&gt;; MAX_HEIGHT],\n}\n</code></pre>\n<p>And I want to iterate the linked list:</p>\n<pre><code>// let next = some_node.forward[n];\nunsafe {\n    loop {\n        match next {\n            None =&gt; { break; }\n            Some(v) =&gt; {\n                write!(f, &quot;{:?}&quot;, (*v).data)?;\n                break;\n            }\n        }\n    }\n}\n</code></pre>\n<p>When I use <code>unsafe</code> keyword, I get the <code>[1] 74042 illegal hardware instruction  cargo run</code> error, so is there anyway to debug this <code>unsafe</code> block?</p>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 3796, "user_id": 4661625, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c3cd0caf54e0766c83f04f51f881303b?s=128&d=identicon&r=PG&f=1", "display_name": "Bumsik Kim", "link": "https://stackoverflow.com/users/4661625/bumsik-kim"}, "edited": false, "score": 3, "creation_date": 1548342718, "post_id": 54348108, "comment_id": 95514775, "body": "I have no experience in Rust on WASM but pretty much in C (Emscripten). As you guessed WebAssembly designed with dynamic linking in mind, by Import and Export. However, the tooling is not as mature as you can easily dynamically link libraries without a hack yet. The good news is easy dynamic linking is definitely in their goal list."}], "answers": [{"comments": [{"owner": {"reputation": 202, "user_id": 8863755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc3465590b30570df6099878b106922c?s=128&d=identicon&r=PG&f=1", "display_name": "Hugobastas", "link": "https://stackoverflow.com/users/8863755/hugobastas"}, "edited": false, "score": 0, "creation_date": 1548753287, "post_id": 54408151, "comment_id": 95644734, "body": "So the answer is basically: <i>It&#39;s reasonable to assume it will be possible in the future, but not currently</i>. Would that be a correct interpretation of your answer?"}], "tags": [], "owner": {"reputation": 1296, "user_id": 2770641, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/366fa9e0a1e8f82fddae1595ffc297d6?s=128&d=identicon&r=PG&f=1", "display_name": "sbc100", "link": "https://stackoverflow.com/users/2770641/sbc100"}, "is_accepted": true, "score": 7, "last_activity_date": 1548701764, "last_edit_date": 1548701764, "creation_date": 1548700034, "answer_id": 54408151, "question_id": 54348108, "link": "https://stackoverflow.com/questions/54348108/is-it-possible-to-do-dynamic-linking-in-webassembly-with-rust/54408151#54408151", "title": "Is it possible to do dynamic linking in WebAssembly with Rust?", "body": "<p>Dynamic linking support in llvm/lld for WebAssembly is <a href=\"https://github.com/WebAssembly/tool-conventions/blob/master/DynamicLinking.md\" rel=\"noreferrer\">still a work in progress</a>.  I imagine that dynamic linking in Rust is currently blocked on dynamic linking support in in llvm/lld more generally.</p>\n"}, {"comments": [{"owner": {"reputation": 59, "user_id": 10676406, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-OloIasiJwog/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jjzribbaHMD_M62ROow8I-3tDXLQ/mo/photo.jpg?sz=128", "display_name": "djozis", "link": "https://stackoverflow.com/users/10676406/djozis"}, "edited": false, "score": 0, "creation_date": 1571601216, "post_id": 58475339, "comment_id": 103286115, "body": "I used transmute here, but I could&#39;ve made <code>replace_me</code> an <code>fn() -&gt; u64</code> instead, and have <code>force_call_indirect_for_function_index</code> take/return a <code>fn() -&gt; u64</code>, and done all of this with just safe Rust, in theory? Crossing between wasm/Rust seems really dangerous in some areas."}], "tags": [], "owner": {"reputation": 59, "user_id": 10676406, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-OloIasiJwog/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jjzribbaHMD_M62ROow8I-3tDXLQ/mo/photo.jpg?sz=128", "display_name": "djozis", "link": "https://stackoverflow.com/users/10676406/djozis"}, "is_accepted": false, "score": 3, "last_activity_date": 1571600678, "last_edit_date": 1571600678, "creation_date": 1571591391, "answer_id": 58475339, "question_id": 54348108, "link": "https://stackoverflow.com/questions/54348108/is-it-possible-to-do-dynamic-linking-in-webassembly-with-rust/58475339#58475339", "title": "Is it possible to do dynamic linking in WebAssembly with Rust?", "body": "<p>Don't use this in production code (it's a house of cards), I am just sharing my research for others who are also tinkering around this topic. This will let you change the bindings arbitrarily at runtime. Appears to work correctly today for every optimization level, but who can know if it will work tomorrow. For real support, see sbc100's answer.</p>\n\n<pre><code>/// If at any point you call this function directly, it will probably do exactly what its\n/// implementation here is, as it should compile to a \"call\" instruction when you directly call.\n/// That instruction does not appear to be impacted by changes in the function table.\npub fn replace_me() {\n    // The function body must be unique, otherwise the optimizer will deduplicate\n    // it and you create unintended impacts. This is never called, it's just unique.\n    force_call_indirect_for_function_index(replace_me as u32);\n}\n\n/// We'll replace the above function with this function for all \"call indirect\" instructions.\npub fn return_50() -&gt; u64 {\n    50\n}\n\n/// This allows us to force \"call indirect\". Both no_mangle and inline(never) seem to be required.\n/// You could simply strip every invocation of this function from your final wasm binary, since\n/// it takes one value and returns one value. It's here to stop optimizations around the function\n/// invocation by index.\n#[inline(never)]\n#[no_mangle]\nfn force_call_indirect_for_function_index(function_index: u32) -&gt; u32 {\n    function_index\n}\n\n/// Inline this or make it generic or whatever you want for ease of use, this is your calling code.\n/// Note that the function index you use does not need to have the same signature as the function it\n/// is replaced with.\n///\n/// This seems to compile to:\n/// i32.const, call force_call_indirect_for_function_index, call indirect.\n///\n/// So stripping force_call_indirect_for_function_index invocations would make this as efficient\n/// as possible for a dynamically linked wasm call I think.\nfn call_replace_me_indirectly() -&gt; u64 {\n    unsafe {\n        std::mem::transmute::&lt;u32, fn() -&gt; u64&gt;(force_call_indirect_for_function_index(\n            replace_me as u32,\n        ))()\n    }\n}\n\n/// Replaces replace_me with return_50 in the wasm function table. I've tested that this works with\n/// Functions exported from other wasm modules. For this example, I'll use a function defined in\n/// this module (return_50).\nfn replace_replace_me() {\n    let function_table: js_sys::WebAssembly::Table = wasm_bindgen::function_table()\n        .dyn_into::&lt;js_sys::WebAssembly::Table&gt;()\n        .expect(\"I'm going to find you...\");\n    let function = function_table\n        .get(return_50 as u32)\n        .expect(\"I know you're in there...\");\n    function_table\n        .set(replace_me as u32, &amp;function)\n        .expect(\"It's not unsafe, but is it undefined behavior?\");\n}\n\n/// Mangles \"replace_me\" call indirection invocations, and returns 50.\npub fn watch_me() -&gt; u64 {\n    replace_replace_me();\n    call_replace_me_indirectly()\n}\n</code></pre>\n"}], "owner": {"reputation": 202, "user_id": 8863755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc3465590b30570df6099878b106922c?s=128&d=identicon&r=PG&f=1", "display_name": "Hugobastas", "link": "https://stackoverflow.com/users/8863755/hugobastas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1491, "favorite_count": 2, "accepted_answer_id": 54408151, "answer_count": 2, "score": 14, "last_activity_date": 1571600678, "creation_date": 1548337526, "last_edit_date": 1548701726, "question_id": 54348108, "link": "https://stackoverflow.com/questions/54348108/is-it-possible-to-do-dynamic-linking-in-webassembly-with-rust", "title": "Is it possible to do dynamic linking in WebAssembly with Rust?", "body": "<p>I'm making a Turing-complete DSL in Rust for the web using wasm-bindgen. I want the ability to download arbitrary WASM code from the web and then use functions from that file in my DSL. Some sort of dynamic linking with an equivalent of <code>dlopen</code> is what I have in mind.</p>\n\n<p>I have no idea how to actually achieve this though.</p>\n\n<p>From reading the <a href=\"https://webassembly.org/docs/dynamic-linking/\" rel=\"noreferrer\">WebAssembly docs</a> I get the impression that it should indeed be possible but I'm not knowledgeable enough to understand the details of the process from this document.</p>\n\n<p>There is a <a href=\"https://rustwasm.github.io/wasm-bindgen/examples/wasm-in-wasm.html\" rel=\"noreferrer\">chapter</a> in the wasm-bindgen reference detailing how to <em>instantiate WebAssembly modules from inside WebAssembly modules!</em>, but this seems to do it via JavaScript which seems suboptimal and not what the WebAssembly doc describes.</p>\n\n<p>In js-sys it is possible to create JavaScript functions from arbitrary strings, but this essentially calls <code>Function(/* some arbitrary string */)</code> from the JavaScript side which again seems suboptimal and not what the WebAssembly doc describes.</p>\n\n<p>Is it possible or is there some other more suitable way to achieve my goal?</p>\n"}, {"tags": ["macros", "rust", "return-type", "rust-macros"], "answers": [{"comments": [{"owner": {"reputation": 20384, "user_id": 220060, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/56533d50fdfceb887852bf50be54678b?s=128&d=identicon&r=PG", "display_name": "nalply", "link": "https://stackoverflow.com/users/220060/nalply"}, "edited": false, "score": 0, "creation_date": 1548335007, "post_id": 54347140, "comment_id": 95509924, "body": "Thanks for your opinion. Your answer contains an important clue: that procedural macros introduced with an attribute like <code>#[bar]</code> get the whole function definition. In other words: by using an attribute one can write macros that match on the enclosing function&#39;s return type. Thank you."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 1, "last_activity_date": 1548334404, "creation_date": 1548334404, "answer_id": 54347140, "question_id": 54346796, "link": "https://stackoverflow.com/questions/54346796/matching-against-the-enclosing-functions-return-type/54347140#54347140", "title": "Matching against the enclosing function&#39;s return type", "body": "<p><strong>Summary</strong>: No, it's not easily possible, even with procedural macros. And I actually think you <em>shouldn't</em> write such a thing, even if it's possible. Just let your macro evaluate to a <code>Result</code> and let the user deal with it.</p>\n\n<hr>\n\n<h3>Function-like macro</h3>\n\n<p>Rust macros, procedural and declarative, only have access to their input stream: just a list of tokens. For function-like macros (the ones you invoke via <code>foo!(...)</code>), the input is just what you pass to them. So you <em>could</em> manually pass the return type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! foo {\n    (Result $($stuff:tt)*) =&gt; { return Err(()); };  \n    ($($stuff:tt)*) =&gt; { panic!(); };\n}\n\nfn returns_result() -&gt; Result&lt;String, ()&gt; {\n    foo!(Result&lt;(), ()&gt;);   // will return `Err`\n    Ok(\"hi\".into())\n}\n\nfn returns_string() -&gt; String {\n    foo!(String);           // will panic\n    \"hi\".into()\n}\n</code></pre>\n\n<p>But I guess that is not what you want: the user would have to manually specify the return type for each macro invocation.</p>\n\n<p>The same goes for procedural macros that are invoked this way.</p>\n\n<hr>\n\n<h3>Procedural macro attribute</h3>\n\n<p>Can we define a procedural macro where the return type of the function is in the input token stream? Yes, preferably via a proc-macro attribute. If you define such an attribute <code>bar</code>, you could write this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[bar]\nfn returns_result() -&gt; Result&lt;String, ()&gt; { ... }\n</code></pre>\n\n<p>And your procedural macro would receive the whole function definition as input, including the return type. <em>But</em> what are you going to do with that information? </p>\n\n<p>You can change the whole function as you like, so one idea would be to search for all <code>foo!()</code> macro invocations in the function and replace them with <code>return Err</code> or <code>panic!()</code> depending on the return type. That is: do the macro invocation step for your own macros via a procedural macro.</p>\n\n<p><em>But</em> I think this is a bad idea for several reasons. Most importantly, I don't think it's well defined when the compiler calls the procedural macro. So the compiler could attempt to invoke your <code>foo!()</code> macros before calling the procedural macro.</p>\n\n<p>So it could work via procedural macro, but not in a way that is typical. So <strong>it's rather hacky</strong>.</p>\n\n<hr>\n\n<h3>What I think is the best solution</h3>\n\n<p>Lastly, how would I do it? <strong>Let your macro evaluate to a <code>Result</code></strong>. Then the user can easily decide themselves what to do with it. If they return a <code>Result</code>, they just need to add <code>?</code>. If they don't, they have the freedom to choose between <code>.unwrap()</code>, <code>expect()</code> and other ways to panic.</p>\n\n<p>I understand why you are trying to do what you want to do (it's easier for the user and comfortable), but I think it's not a good idea. It probably comes down to <strong>\"spooky action at a distance\"</strong>: what a macro in your function does suddenly depends on the return type of that function. That means when you change that, the whole semantics of the function change. This sounds like something you could shoot yourself in the foot with very easily. That's also probably the reason why it's not easy in Rust.</p>\n"}], "owner": {"reputation": 20384, "user_id": 220060, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/56533d50fdfceb887852bf50be54678b?s=128&d=identicon&r=PG", "display_name": "nalply", "link": "https://stackoverflow.com/users/220060/nalply"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 355, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1548416286, "creation_date": 1548333190, "last_edit_date": 1548333290, "question_id": 54346796, "link": "https://stackoverflow.com/questions/54346796/matching-against-the-enclosing-functions-return-type", "title": "Matching against the enclosing function&#39;s return type", "body": "<p>Is it possible for a Rust macro to match against the enclosing function's return type?</p>\n\n<p>An example is something like a logging and assert macro which also returns <code>Err</code> in functions returning <code>Result</code> and panics in functions not returning <code>Result</code>. To implement this the macro should somehow know about the enclosing function's return type.</p>\n\n<p>I suppose this is not possible with declarative macros (<code>macro_rules!</code>) because they have a limited set of matching types (as described in <a href=\"https://doc.rust-lang.org/reference/macros-by-example.html\" rel=\"nofollow noreferrer\">The Rust Reference, chapter Macros By Example</a>): items, blocks, statements, patterns, expressions, types, identifiers, and so on, but not the enclosing function's return type.</p>\n\n<p>But perhaps with procedural macros?</p>\n"}, {"tags": ["if-statement", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1548321248, "post_id": 54342972, "comment_id": 95501757, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about\">What is this question mark operator about?</a>"}, {"owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548321860, "post_id": 54342972, "comment_id": 95502103, "body": "@hellow thanks for the suggestion, but I can&#39;t understand how I use <code>?</code> together with <code>for_each</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548322262, "post_id": 54342972, "comment_id": 95502342, "body": "Don&#39;t use a <code>for_each</code> then but a classic for loop :)"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1548322370, "post_id": 54342972, "comment_id": 95502417, "body": "Are f1, f2 and f3 have the same error type ?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548322399, "post_id": 54342972, "comment_id": 95502439, "body": "Unfortunately, you cannot use functional style loops + error propagation because you&#39;re inside a closure."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1548322767, "post_id": 54342972, "comment_id": 95502663, "body": "@Boiethios Actually we can&#39;t tell that you cannot use it in closure, it is a closure that doesn&#39;t return <code>Result</code>.(If we are talking about <code>iterators</code> in rust core),  That&#39;s why we can&#39;t use error propagating."}, {"owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1548322889, "post_id": 54342972, "comment_id": 95502749, "body": "@&#214;merErden they return <code>Result&lt;Vec&lt;u8&gt;&#47;String&#47;String, io:Error&gt;</code>, but the error type is the same."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 2, "last_activity_date": 1548323050, "creation_date": 1548323050, "answer_id": 54343570, "question_id": 54342972, "link": "https://stackoverflow.com/questions/54342972/how-can-i-propagate-the-errors-in-rust/54343570#54343570", "title": "How can I propagate the errors in Rust?", "body": "<p>You can chain your functions in the success scenario with <code>and_then</code> and map their errors with <code>map_err</code>.</p>\n\n<p>Like here you can chain them:</p>\n\n<pre><code>let result = f1().and_then(|_| {\n    f2().and_then(|_| {\n        f3().and_then(|_| {\n            println!(\"All functions are succeed\");\n            Ok(())\n        })\n    })\n});\n</code></pre>\n\n<p>Here you will have the <code>result</code> variable if the error occurs.</p>\n\n<p>Then you can match this error with <code>if let Err(error)</code> statement like following:</p>\n\n<pre><code>if let Err(error) = result {\n    println!(\"Problem occurred: {:?}\", error);\n};\n</code></pre>\n\n<p>There is also possibility to throw your error to upper levels with <code>try!</code> macro or <code>?</code> operator like following:</p>\n\n<pre><code>fn throw_error() -&gt; Result&lt;String, MyError&gt; {\n    let string_val = \"will not be returned\".to_string();\n\n    Err(MyError::thrownError)?;\n    Ok(string_val)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=476ca7447d2e2044420f1d5e158055d5\" rel=\"nofollow noreferrer\">Here</a> you can test and play a little bit more to understand the concepts.</p>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 335, "favorite_count": 0, "accepted_answer_id": 54343570, "answer_count": 1, "score": 0, "last_activity_date": 1548325583, "creation_date": 1548321157, "last_edit_date": 1548325583, "question_id": 54342972, "link": "https://stackoverflow.com/questions/54342972/how-can-i-propagate-the-errors-in-rust", "title": "How can I propagate the errors in Rust?", "body": "<p>Is there a nice way to propagate errors in Rust? \nE. g., I'd like to refactor the following code to avoid nested errors:</p>\n\n<pre><code>.for_each(|record| {\n    match f1() {\n        Ok(a1) =&gt; match f2() {\n            Ok(a2) =&gt; match f3() {\n                Ok(_) =&gt; {}\n                Err(e) =&gt; {\n                    eprintln!(\"Error: {}\", e);\n                }\n            },\n            Err(e) =&gt; {\n                eprintln!(\"Error: {}\", e);\n            }\n        },\n        Err(e) =&gt; {\n            eprintln!(\"Error: {}\", e);\n        }\n    };\n    Ok(())\n})\n</code></pre>\n\n<p>The question is not a duplicate because I've got a <code>for_each</code> operator which complicates a situation for me. And when I put <code>?</code> to <code>f2</code> I actually receive the following error:</p>\n\n<pre><code>the trait `std::convert::From&lt;std::io::Error&gt;` is not implemented for `grpcio::error::Error`\n</code></pre>\n"}, {"tags": ["function", "rust", "closures", "iron"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548320227, "post_id": 54342492, "comment_id": 95501202, "body": "Please try to provide a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>, e.g. remove everything that is not necessary to produce the problem (remove the <code>info!</code> macro for example) and include all external crates you are using."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548320264, "post_id": 54342492, "comment_id": 95501217, "body": "Btw: <code>= help: use the `|| { ... }` closure form instead</code> did you try that?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1548336249, "post_id": 54342492, "comment_id": 95510758, "body": "You&#39;ve defined <code>handler</code> as a function (<code>fn handler \u2026</code>) but you try to use variables that are local to the containing function (<code>main</code>). You can&#39;t do that. The compiler suggests using the closure form instead: <code>let handler = |req: &amp;mut Request| -&gt; IronResult&lt;Response&gt; { \u2026 }</code>"}], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 8328954, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cce310968f5d62c38c8f845423bde059?s=128&d=identicon&r=PG&f=1", "display_name": "Chi Wei Shen", "link": "https://stackoverflow.com/users/8328954/chi-wei-shen"}, "edited": false, "score": 0, "creation_date": 1548599719, "post_id": 54367316, "comment_id": 95590365, "body": "Thank you for answer.But,now there is &quot;closure may outlive the current function, but it borrows <code>cass</code>, which is owned by the current function&quot;.why need use &#39;static&#39;?about lifetime?(P.S.Because i change return type, so just use  <code>cass </code>, remove  <code>cass_it </code> already)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 107, "user_id": 8328954, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cce310968f5d62c38c8f845423bde059?s=128&d=identicon&r=PG&f=1", "display_name": "Chi Wei Shen", "link": "https://stackoverflow.com/users/8328954/chi-wei-shen"}, "edited": false, "score": 0, "creation_date": 1548604646, "post_id": 54367316, "comment_id": 95591921, "body": "@ChiWeiShen It&#39;s hard to help because the code you provided is not a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, so I can&#39;t actually run your code. I have added something to explain how the <code>move</code> keyword will probably help."}, {"owner": {"reputation": 107, "user_id": 8328954, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cce310968f5d62c38c8f845423bde059?s=128&d=identicon&r=PG&f=1", "display_name": "Chi Wei Shen", "link": "https://stackoverflow.com/users/8328954/chi-wei-shen"}, "edited": false, "score": 0, "creation_date": 1548644058, "post_id": 54367316, "comment_id": 95601443, "body": "Hi, this is my <a href=\"https://github.com/pili2026/cassandra-rs-driver\" rel=\"nofollow noreferrer\">git</a>.And, unconsciously, it can be executed on the web. However, I believe that more tests are needed."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1548604332, "last_edit_date": 1548604332, "creation_date": 1548426720, "answer_id": 54367316, "question_id": 54342492, "link": "https://stackoverflow.com/questions/54342492/cant-capture-dynamic-environment-in-a-fn-item-about-iron-lib/54367316#54367316", "title": "Can&#39;t capture dynamic environment in a fn item about iron lib", "body": "<p>The error says it all:</p>\n\n<blockquote>\n<pre><code>can't capture dynamic environment in a fn item\n</code></pre>\n</blockquote>\n\n<p>The <code>fn</code> item in question is <code>handler</code>. Even though you have defined this function inside another method, a function declared with <code>fn</code> (a <code>fn</code> item) is compiled just like any other function on the top level of a module. Functions can't capture free variables from their environment; they can only access their explicit arguments and static variables.</p>\n\n<p>The error goes on to say exactly which variable is the problem:</p>\n\n<blockquote>\n<pre><code>306 |   let out = serde_json::to_string(&amp;cass_it).unwrap();\n    |                                    ^^^^^^^\n</code></pre>\n</blockquote>\n\n<p>The variable <code>cass_it</code> is defined in the enclosing function and cannot be accessed from <code>handler</code>.</p>\n\n<p>The note at the end of the error message then gives you a suggestion for how to fix the problem:</p>\n\n<blockquote>\n<pre><code>= help: use the `|| { ... }` closure form instead\n</code></pre>\n</blockquote>\n\n<p>A closure <em>can</em> capture variables from its environment. So you can try replacing the <code>fn</code> with a closure instead:</p>\n\n<pre><code>let handler = move |req: &amp;mut Request| {\n    // convert the response struct to JSON\n    let out = serde_json::to_string(&amp;cass_it).unwrap();\n    let content_type = \"application/json\".parse::&lt;Mime&gt;().unwrap();\n    Ok(Response::with((content_type, status::Ok, out)))\n};\n</code></pre>\n\n<p>The <code>move</code> keyword will cause the closure to take ownership of <code>cass_it</code> instead of trying to reference the variable in the outer function.</p>\n"}], "owner": {"reputation": 107, "user_id": 8328954, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cce310968f5d62c38c8f845423bde059?s=128&d=identicon&r=PG&f=1", "display_name": "Chi Wei Shen", "link": "https://stackoverflow.com/users/8328954/chi-wei-shen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 804, "favorite_count": 0, "accepted_answer_id": 54367316, "answer_count": 1, "score": 1, "last_activity_date": 1548604332, "creation_date": 1548319408, "last_edit_date": 1548426772, "question_id": 54342492, "link": "https://stackoverflow.com/questions/54342492/cant-capture-dynamic-environment-in-a-fn-item-about-iron-lib", "title": "Can&#39;t capture dynamic environment in a fn item about iron lib", "body": "<p>I use the cassandra of the c/c++ driver to query, and then return the data. \nTherefore, both cass (LinkedList) and cass_it (Vec) can show the result of the query. \nHowever, I want to display the results to the web using the json format, so I chose to reassemble the data using vec. However, there is a problem\uff1a </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0434]: can't capture dynamic environment in a fn item\n   --&gt; src/main.rs:306:42\n    |\n306 |         let out = serde_json::to_string(&amp;cass_it).unwrap();\n    |                                          ^^^^^^^\n    |\n    = help: use the `|| { ... }` closure form instead\n</code></pre>\n\n<p>What is wrong? Formatting issues?</p>\n\n<p>Code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut cass = unsafe { cass_connect() };\n    let mut cass_it = Vec::new();\n\n    for cc in cass.iter() {\n        cass_it.push(cc);\n    }\n\n    println!(\"{:?}\", cass_it);\n\n    let mut router = Router::new();\n    let localhost = \"localhost:3009\".to_string();\n\n    fn handler(req: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n        // convert the response struct to JSON\n        let out = serde_json::to_string(&amp;cass_it).unwrap();\n\n        let content_type = \"application/json\".parse::&lt;Mime&gt;().unwrap();\n\n        Ok(Response::with((content_type, status::Ok, out)))\n    }\n\n    router.get(\"/\", handler, \"index\");\n\n    info!(\"Listening on {}\", localhost);\n    Iron::new(router).http(localhost).unwrap();\n}\n</code></pre>\n\n<p><a href=\"https://gitlab.dc.zyxel.com.tw/ZT02777/cassandra-rs-driver\" rel=\"nofollow noreferrer\">Complete code</a></p>\n"}, {"tags": ["rust", "lifetime", "typechecking"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548315991, "post_id": 54341465, "comment_id": 95499145, "body": "<code>5 as i32</code> -&gt; <code>5i32</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548316168, "post_id": 54341465, "comment_id": 95499223, "body": "<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=0e1f561f9ab14f7fea49200a8c319bcc\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, there are not the same. as error message said, &quot;one type is more general than the other&quot;"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1548316247, "post_id": 54341465, "comment_id": 95499264, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/36390665/in-rust-how-do-you-pass-a-function-as-a-parameter\">In Rust how do you pass a function as a parameter?</a>"}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 1, "creation_date": 1548316619, "post_id": 54341465, "comment_id": 95499460, "body": "The error message says one is more general than the other, but as I mentioned in the question &quot;the expected type and found type are character for character identical&quot;"}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1548316975, "post_id": 54341465, "comment_id": 95499644, "body": "This is not a duplicate of that question (although it may look that way if you read through this question quickly).  The question is why is the error printing two types that are exactly the same, and then printing an error that they are different.  I have edited the question to make this more clear."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1548317574, "post_id": 54341465, "comment_id": 95499950, "body": "I get very different errors on the playground: &quot;found signature of <code>fn(&amp;_, &amp;_) -&gt; _</code>, expected signature of <code>for&lt;&#39;r, &#39;s&gt; fn(&amp;&#39;r i32, &amp;&#39;s i32) -&gt; _</code>&quot;"}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1548317728, "post_id": 54341465, "comment_id": 95500026, "body": "@SebastianRedl Hmm, I can reproduce that error message if I switch to stable Rust.  Are you sure you selected Nightly?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1548318132, "post_id": 54341465, "comment_id": 95500203, "body": "@JeremySalwen On Nightly I get the bad error message. But I suspect that the underlying issue is the same. Sounds bug-report-worthy."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1548323229, "post_id": 54341465, "comment_id": 95502957, "body": "This is similar (but not a duplicate) of this question from yesterday: <a href=\"https://stackoverflow.com/questions/54329200/mysterious-lifetime-issue-while-implementing-trait-for-dyn-object\" title=\"mysterious lifetime issue while implementing trait for dyn object\">stackoverflow.com/questions/54329200/&hellip;</a>. The takeaway from that is that the answer is almost certainly related to lifetimes."}], "answers": [{"comments": [{"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1548326083, "post_id": 54344401, "comment_id": 95504668, "body": "Is there a tool possibly a <code>cargo</code> subcommand that &quot;expands&quot; the code so that all lifetimes are explicitly annotated?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1548328232, "post_id": 54344401, "comment_id": 95506003, "body": "@phimuemue I haven&#39;t seen anything like that, but it could certainly be useful."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 1, "creation_date": 1548335771, "post_id": 54344401, "comment_id": 95510454, "body": "@PeterHall, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4b3ab7e0f88bf49de4d7eb6d5fbedd12\" rel=\"nofollow noreferrer\">If input types to closure are specified</a> it works. I&#39;m not sure why!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 2, "creation_date": 1548336242, "post_id": 54344401, "comment_id": 95510753, "body": "@VikramFugro It works because you have told the compiler that <code>T</code> is <code>i32</code>, a type not containing references, so <code>T: &#39;static</code>."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1548337305, "post_id": 54344401, "comment_id": 95511428, "body": "Isn&#39;t the message <code>expected signature of for&lt;&#39;r, &#39;s&gt; fn(&amp;&#39;r {integer}, &amp;&#39;s {integer}) -&gt; _</code>, a  bit confusing? It means the compiler knows <code>T</code>&#39;s type"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1548325597, "creation_date": 1548325597, "answer_id": 54344401, "question_id": 54341465, "link": "https://stackoverflow.com/questions/54341465/rust-expected-type-error-prints-mismatched-types-that-are-exactly-the-same/54344401#54344401", "title": "Rust &quot;expected type&quot; error prints mismatched types that are exactly the same", "body": "<blockquote>\n  <p>With nightly rust:</p>\n</blockquote>\n\n<p>This appears to be just a \"bad\" error message in a nightly build. In Rust 1.32 (stable), the errors tell you that this is a lifetime mismatch:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in closure arguments\n --&gt; src/main.rs:8:15\n  |\n7 |     let lambda = |&amp;x, &amp;y| x + y;\n  |                  -------------- found signature of `fn(&amp;_, &amp;_) -&gt; _`\n8 |     let foo = Foo {\n  |               ^^^ expected signature of `for&lt;'r, 's&gt; fn(&amp;'r i32, &amp;'s i32) -&gt; _`\n  |\nnote: required by `Foo`\n --&gt; src/main.rs:1:1\n  |\n1 | struct Foo&lt;T, F: Fn(&amp;T, &amp;T) -&gt; T&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0271]: type mismatch resolving `for&lt;'r, 's&gt; &lt;[closure@src/main.rs:7:18: 7:32] as std::ops::FnOnce&lt;(&amp;'r i32, &amp;'s i32)&gt;&gt;::Output == i32`\n --&gt; src/main.rs:8:15\n  |\n8 |     let foo = Foo {\n  |               ^^^ expected bound lifetime parameter, found concrete lifetime\n  |\nnote: required by `Foo`\n --&gt; src/main.rs:1:1\n  |\n1 | struct Foo&lt;T, F: Fn(&amp;T, &amp;T) -&gt; T&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<blockquote>\n  <p>Why is the error message saying that one type is more general than the other, while also saying that they are the same type?</p>\n</blockquote>\n\n<p>The types differ only in lifetimes. The nightly message doesn't include lifetimes \u2014 perhaps in an attempt to reduce noise in cases where the lifetimes are not relevant. Obviously this is not at all helpful when lifetimes are the only difference between the types.</p>\n\n<p>Consider <a href=\"https://github.com/rust-lang/rust/issues\" rel=\"nofollow noreferrer\">reporting a bug</a> to the Rust team.</p>\n"}], "owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 857, "favorite_count": 0, "accepted_answer_id": 54344401, "answer_count": 1, "score": 5, "last_activity_date": 1551011930, "creation_date": 1548315243, "last_edit_date": 1551011930, "question_id": 54341465, "link": "https://stackoverflow.com/questions/54341465/rust-expected-type-error-prints-mismatched-types-that-are-exactly-the-same", "title": "Rust &quot;expected type&quot; error prints mismatched types that are exactly the same", "body": "<p>With nightly rust:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e973951415f5092af183ea13d11177cf\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>struct Foo&lt;T, F: Fn(&amp;T, &amp;T) -&gt; T&gt; {\n    value: T,\n    func: F\n}\n\nfn main() {\n    let lambda = |&amp;x, &amp;y| x + y;\n    let foo = Foo {\n        value: 5 as i32,\n        func: lambda\n    };\n}\n</code></pre>\n\n<p>Error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling playground v0.0.1 (/playground)\nerror[E0308]: mismatched types\n --&gt; src/main.rs:8:15\n  |\n8 |     let foo = Foo {\n  |               ^^^ one type is more general than the other\n  |\n  = note: expected type `std::ops::FnOnce&lt;(&amp;i32, &amp;i32)&gt;`\n             found type `std::ops::FnOnce&lt;(&amp;i32, &amp;i32)&gt;`\n</code></pre>\n\n<p>Note that the expected type and found type are character for character identical.  Why is the error message saying that one type is more general than the other, while also saying that they are the same type?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1548293064, "creation_date": 1548293064, "answer_id": 54338105, "question_id": 54337968, "link": "https://stackoverflow.com/questions/54337968/reference-to-a-primitive-operator-function/54338105#54338105", "title": "Reference to a primitive operator function", "body": "<p>You can obtain a function pointer to a trait method of a specific type via the <em>universal function call syntax</em>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let fptr = &lt;i32 as std::ops::Add&gt;::add;    // type: `fn(i32, i32) -&gt; i32`\n\nfptr(1, 3);   // returns 4\n</code></pre>\n\n<p>Bigger example (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8210140e460342fb62658ebd2dccfd62\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops;\n\nfn calc(a: i32, b: i32, op: fn(i32, i32) -&gt; i32) -&gt; i32 {\n    op(a, b)\n}\n\nfn main() {\n    println!(\"{}\", calc(2, 5, &lt;i32 as ops::Add&gt;::add));  // prints 7\n    println!(\"{}\", calc(2, 5, &lt;i32 as ops::Sub&gt;::sub));  // prints -3\n    println!(\"{}\", calc(2, 5, &lt;i32 as ops::Mul&gt;::mul));  // prints 10\n}\n</code></pre>\n\n<hr>\n\n<p>Your <code>int(1).__add__</code> example is a bit more complicated because we have a partially applied function here. Rust does not have this built into the language, but you can easily use closures to achieve the same effect:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let op = |b| 1 + b;\nop(4); // returns 5\n</code></pre>\n"}], "owner": {"reputation": 391, "user_id": 9546425, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-iyh8LtJD6J0/AAAAAAAAAAI/AAAAAAAAAtg/Wgk60jpfgmY/photo.jpg?sz=128", "display_name": "MMagueta", "link": "https://stackoverflow.com/users/9546425/mmagueta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 1, "accepted_answer_id": 54338105, "answer_count": 1, "score": 1, "last_activity_date": 1548293137, "creation_date": 1548291785, "last_edit_date": 1548293137, "question_id": 54337968, "link": "https://stackoverflow.com/questions/54337968/reference-to-a-primitive-operator-function", "title": "Reference to a primitive operator function", "body": "<p>In Rust, is there any manner to handle operator functions such as add, or sub? I need to get the <em>reference</em> for those functions, but I can only find about traits. I'll leave here a comparative of what I need (like the wrapper methods) in Python.</p>\n\n<pre><code>A = 1\nB = 2\nA.__add__(B)\n\n#Or maybe do something more, like\nC = int(1).__add__\nC(2)\n</code></pre>\n"}]