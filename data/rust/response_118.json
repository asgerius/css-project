[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492026319, "post_id": 43378300, "comment_id": 73818716, "body": "Have you already seen <a href=\"http://stackoverflow.com/q/30281664/155423\">Returning the T borrowed from RefCell&lt;T&gt;</a>?"}, {"owner": {"reputation": 155, "user_id": 2694959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a082b77878ef3fa77e3641d1d4cbd961?s=128&d=identicon&r=PG&f=1", "display_name": "dillonh2", "link": "https://stackoverflow.com/users/2694959/dillonh2"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492026817, "post_id": 43378300, "comment_id": 73819019, "body": "I have, but I cannot figure out how to properly apply that to my situation. I tried to define <code>data</code> at <code>RefCell&lt;Rc&lt;Vec&lt;f64&gt;&gt;&gt;</code>, but how will I get an <code>Iter</code> out of that? @Shepmaster"}], "owner": {"reputation": 155, "user_id": 2694959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a082b77878ef3fa77e3641d1d4cbd961?s=128&d=identicon&r=PG&f=1", "display_name": "dillonh2", "link": "https://stackoverflow.com/users/2694959/dillonh2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1492026468, "answer_count": 0, "score": 0, "last_activity_date": 1492026252, "creation_date": 1492026177, "last_edit_date": 1492026252, "question_id": 43378300, "link": "https://stackoverflow.com/questions/43378300/how-can-i-create-an-iter-over-a-vec-contained-in-a-refcell", "closed_reason": "Duplicate", "title": "How can I create an Iter over a Vec contained in a RefCell?", "body": "<p>I cannot figure out why the following will not compile:</p>\n\n<pre><code>use std::cell::{RefCell, Ref};\nuse std::slice::Iter;\n\nstruct Vector {\n    data: RefCell&lt;Vec&lt;f64&gt;&gt;,\n}\n\nimpl Vector {\n    pub fn new(data: Vec&lt;f64&gt;) -&gt; Self {\n        Vector {data: RefCell::new(data)}\n    }\n\n    pub fn get_data(&amp;self) -&gt; Ref&lt;Vec&lt;f64&gt;&gt; {\n        self.data.borrow()\n    }\n\n    pub fn iter(&amp;self) -&gt; Iter&lt;f64&gt; {\n        self.get_data().iter()\n        // Fails with `self.get_data()` does not live long enough\n    }\n}\n\nfn main() {\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?code=use%20std%3A%3Acell%3A%3A%7BRefCell%2C%20Ref%7D%3B%0Ause%20std%3A%3Aslice%3A%3AIter%3B%0A%0Astruct%20Vector%20%7B%0A%20%20%20%20data%3A%20RefCell%3CVec%3Cf64%3E%3E%2C%0A%7D%0A%0Aimpl%20Vector%20%7B%0A%20%20%20%20pub%20fn%20new(data%3A%20Vec%3Cf64%3E)%20-%3E%20Self%20%7B%0A%20%20%20%20%20%20%20%20Vector%20%7Bdata%3A%20RefCell%3A%3Anew(data)%7D%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20pub%20fn%20get_data(%26self)%20-%3E%20Ref%3CVec%3Cf64%3E%3E%20%7B%0A%20%20%20%20%20%20%20%20self.data.borrow()%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20pub%20fn%20iter(%26self)%20-%3E%20Iter%3Cf64%3E%20%7B%0A%20%20%20%20%20%20%20%20self.get_data().iter()%0A%20%20%20%20%20%20%20%20%2F%2F%20Fails%20with%20%60self.get_data()%60%20does%20not%20live%20long%20enough%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20main()%20%7B%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The full error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.16.0 (30cf806ef 2017-03-10)\nerror: borrowed value does not live long enough\n  --&gt; &lt;anon&gt;:18:9\n   |\n18 |         self.get_data().iter()\n   |         ^^^^^^^^^^^^^^^ does not live long enough\n19 |         // Fails with `self.get_data()` does not live long enough\n20 |     }\n   |     - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the body at 17:36...\n  --&gt; &lt;anon&gt;:17:37\n   |\n17 |       pub fn iter(&amp;self) -&gt; Iter&lt;f64&gt; {\n   |  _____________________________________^ starting here...\n18 | |         self.get_data().iter()\n19 | |         // Fails with `self.get_data()` does not live long enough\n20 | |     }\n   | |_____^ ...ending here\n\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492006115, "post_id": 43370173, "comment_id": 73805717, "body": "Essentially the same as <a href=\"http://stackoverflow.com/q/40922505/155423\">stackoverflow.com/q/40922505/155423</a>"}], "answers": [{"tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": true, "score": 1, "last_activity_date": 1492005282, "creation_date": 1492005282, "answer_id": 43371612, "question_id": 43370173, "link": "https://stackoverflow.com/questions/43370173/compilation-error-with-hyper/43371612#43371612", "title": "Compilation error with Hyper", "body": "<p>You have implemented <code>NewService</code> for <code>MyServer</code> however you are providing <code>bind</code> a <code>&amp;MyServer</code> which it cannot find an implementation of <code>NewService</code> for.</p>\n\n<p>The solution you go for will depend largely upon why you want to do this, but you could implement <code>NewService</code> for <code>&amp;MyServer</code>:</p>\n\n<pre><code>impl&lt;'a&gt; NewService for &amp;'a MyServer {\n    ...\n}\n</code></pre>\n"}], "owner": {"reputation": 835, "user_id": 506880, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8dd65cde3482a70d32c33c161f2d4c4f?s=128&d=identicon&r=PG", "display_name": "Alex jg", "link": "https://stackoverflow.com/users/506880/alex-jg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 292, "favorite_count": 0, "accepted_answer_id": 43371612, "answer_count": 1, "score": 1, "last_activity_date": 1492005282, "creation_date": 1492001712, "last_edit_date": 1492002067, "question_id": 43370173, "link": "https://stackoverflow.com/questions/43370173/compilation-error-with-hyper", "title": "Compilation error with Hyper", "body": "<p>I'm running into a compilation error I don't quite understand with a slight modification of the examples from the <code>master</code> branch of Hyper. Given the following code:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\n\nuse futures::future::FutureResult;\nuse hyper::header::{ContentLength, ContentType};\nuse hyper::server::{Http, Service, Request, Response, Server, NewService};\nuse hyper::Body;\nuse std::fmt::Display;\nuse std::result;\n\nstatic PHRASE: &amp;'static [u8] = b\"Hello World!\";\n\n#[derive(Clone, Copy)]\npub struct MyService {}\n\nimpl Service for MyService {\n    type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = FutureResult&lt;Response, hyper::Error&gt;;\n    fn call(&amp;self, _req: Request) -&gt; Self::Future {\n        return futures::future::ok(Response::new()\n            .with_header(ContentLength(PHRASE.len() as u64))\n            .with_header(ContentType::plaintext())\n            .with_body(PHRASE));\n    }\n}\n\n#[derive(Clone)]\npub struct MyServer {}\n\n#[derive(Debug)]\npub struct MyServeError(String);\nimpl&lt;T: Display&gt; From&lt;T&gt; for MyServeError {\n    fn from(e: T) -&gt; MyServeError {\n        return MyServeError(format!(\"{}\", e));\n    }\n}\n\ntype Result&lt;T&gt; = result::Result&lt;T, MyServeError&gt;;\n\n\nimpl MyServer {\n    pub fn new() -&gt; MyServer {\n        return MyServer {};\n    }\n\n    fn get_server(&amp;self) -&gt; Result&lt;Server&lt;&amp;MyServer, Body&gt;&gt; {\n        let addr = format!(\"127.0.0.1:8080\").parse()?;\n        return Ok(Http::new().bind(&amp;addr, self)?);\n    }\n}\n\nimpl NewService for MyServer {\n    type Request = Request;\n    type Response = Response;\n    type Instance = MyService;\n    type Error = hyper::Error;\n\n    fn new_service(&amp;self) -&gt; std::io::Result&lt;Self::Instance&gt; {\n        let service = MyService {};\n        Ok(service)\n    }\n}\n</code></pre>\n\n<p>I get this compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> Compiling hyper-problem-demo v0.1.0 (file:///.../hyper-problem-demo)\nerror[E0277]: the trait bound `MyServer: std::ops::Fn&lt;()&gt;` is not satisfied\n  --&gt; src/lib.rs:50:31\n   |\n50 |         return Ok(Http::new().bind(&amp;addr, self)?);\n   |                               ^^^^ the trait `std::ops::Fn&lt;()&gt;` is not implemented for `MyServer`\n   |\n   = note: required because of the requirements on the impl of `std::ops::FnOnce&lt;()&gt;` for `&amp;MyServer`\n   = note: required because of the requirements on the impl of `hyper::server::NewService` for `&amp;MyServer`\n\nerror[E0277]: the trait bound `MyServer: std::ops::FnOnce&lt;()&gt;` is not satisfied\n  --&gt; src/lib.rs:50:31\n   |\n50 |         return Ok(Http::new().bind(&amp;addr, self)?);\n   |                               ^^^^ the trait `std::ops::FnOnce&lt;()&gt;` is not implemented for `MyServer`\n   |\n   = note: required because of the requirements on the impl of `hyper::server::NewService` for `&amp;MyServer`\n</code></pre>\n\n<p>Which I don't really understand. My intention was just to use the <code>MyServer</code> object to create new instances of <code>MyService</code> for hyper so it seems to make sense to implement <code>NewService</code>, but I don't understand why that would require an implementation of <code>Fn()</code>. <code>NewService</code> is actually implemented for <code>Fn() -&gt; io::Result&lt;Service</code> so maybe that's clashing somehow?</p>\n\n<p>There's a full sample project <a href=\"https://github.com/alexjg/hyper-compilation-error-demo\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1530325807, "last_edit_date": 1530325807, "creation_date": 1492002110, "answer_id": 43370333, "question_id": 43370054, "link": "https://stackoverflow.com/questions/43370054/is-there-any-difference-between-matching-on-a-reference-to-a-pattern-or-a-derefe/43370333#43370333", "title": "Is there any difference between matching on a reference to a pattern or a dereferenced value?", "body": "<p>Yes, these are the same to the compiler. In <em>this</em> case, there's not much benefit. The real benefit comes from the <code>match</code> equivalent:</p>\n\n<pre><code>fn func(data: &amp;Foo) {\n    match data {\n        &amp;Foo::One =&gt; {}\n        &amp;Foo::Two =&gt; {}\n        &amp;Foo::Three =&gt; {}\n    }\n}\n</code></pre>\n\n<p>Here, you only have to place a single dereference, not 3 references in the patterns:</p>\n\n<pre><code>fn func(data: &amp;Foo) {\n    match *data {\n        Foo::One =&gt; {}\n        Foo::Two =&gt; {}\n        Foo::Three =&gt; {}\n    }\n}\n</code></pre>\n\n<p>And since Rust 1.26, you don't even have to dereference the expression being matched on:</p>\n\n<pre><code>fn func(data: &amp;Foo) {\n    match data {\n        Foo::One =&gt; {}\n        Foo::Two =&gt; {}\n        Foo::Three =&gt; {}\n    }\n}\n</code></pre>\n\n<p>That's why it's the idiomatic choice.</p>\n\n<p>The <code>if let</code> concept is just an extension from this.</p>\n\n<hr>\n\n<p>You can't always dereference the value. If you tried to do the same thing for a pair of items:</p>\n\n<pre><code>fn func(data: &amp;Foo, data2: &amp;Foo) {\n    match (*data, *data2) {\n        (Foo::One, _) =&gt; {}\n        (Foo::Two, _) =&gt; {}\n        (Foo::Three, _) =&gt; {}\n    }\n}\n</code></pre>\n\n<p>You get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:8:12\n  |\n8 |     match (*data, *data2) {\n  |            ^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>In this case, you can use the reference form:</p>\n\n<pre><code>fn func(data: &amp;Foo, data2: &amp;Foo) {\n    match (data, data2) {\n        (&amp;Foo::One, _) =&gt; {}\n        (&amp;Foo::Two, _) =&gt; {}\n        (&amp;Foo::Three, _) =&gt; {}\n    }\n}\n</code></pre>\n\n<p>Or, since Rust 1.26, perform some implicit references:</p>\n\n<pre><code>fn func(data: &amp;Foo, data2: &amp;Foo) {\n    match (data, data2) {\n        (Foo::One, x) =&gt; {}\n        (Foo::Two, _) =&gt; {}\n        (Foo::Three, _) =&gt; {}\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 284, "favorite_count": 0, "accepted_answer_id": 43370333, "answer_count": 1, "score": 2, "last_activity_date": 1530325807, "creation_date": 1492001408, "last_edit_date": 1530325426, "question_id": 43370054, "link": "https://stackoverflow.com/questions/43370054/is-there-any-difference-between-matching-on-a-reference-to-a-pattern-or-a-derefe", "title": "Is there any difference between matching on a reference to a pattern or a dereferenced value?", "body": "<p><a href=\"https://github.com/rust-lang-nursery/rust-clippy\" rel=\"nofollow noreferrer\">Clippy</a> warns about code like this:</p>\n\n<pre><code>fn func&lt;T&gt;(data: &amp;Option&lt;T&gt;) {\n    if let &amp;Some(ref value) = data {}\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: you don't need to add `&amp;` to all patterns\n --&gt; src/main.rs:2:5\n  |\n2 |     if let &amp;Some(ref value) = data {}\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: #[warn(match_ref_pats)] on by default\n  = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.210/index.html#match_ref_pats\nhelp: instead of prefixing all patterns with `&amp;`, you can dereference the expression\n  |\n2 |     if let Some(ref value) = *data {}\n  |            ^^^^^^^^^^^^^^^   ^^^^^\n</code></pre>\n\n<p>Are these constructions the same from compiler point of view:</p>\n\n<pre><code>if let &amp;Some(ref value) = data {\n</code></pre>\n\n\n\n<pre><code>if let Some(ref value) = *data {\n</code></pre>\n\n<p>If so, what's the point in the Clippy message, just to use uniform style?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1491985951, "post_id": 43364214, "comment_id": 73790231, "body": "have you installed <code>pkg-config</code> and <code>openssl</code>?"}, {"owner": {"reputation": 151, "user_id": 7855155, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9b2705ec7500adf575ed35b744a0ecd?s=128&d=identicon&r=PG&f=1", "display_name": "LeyluIAA", "link": "https://stackoverflow.com/users/7855155/leyluiaa"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491988603, "post_id": 43364214, "comment_id": 73792251, "body": "Yes it works!  <code>openssl</code> was already installed but not <code>pkg-config</code>. So: - <code>apt install pkg-config</code> - <code>cargo clean</code> - <code>cargo build</code> solve my problem. Thank you @kennytm !"}], "answers": [{"comments": [{"owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "edited": false, "score": 0, "creation_date": 1617629424, "post_id": 43365423, "comment_id": 118349160, "body": "In my case I had both installed but the compilation still failed. Running <code>cargo clean</code> solved it."}], "tags": [], "owner": {"reputation": 151, "user_id": 7855155, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9b2705ec7500adf575ed35b744a0ecd?s=128&d=identicon&r=PG&f=1", "display_name": "LeyluIAA", "link": "https://stackoverflow.com/users/7855155/leyluiaa"}, "is_accepted": true, "score": 8, "last_activity_date": 1491994622, "last_edit_date": 1491994622, "creation_date": 1491988916, "answer_id": 43365423, "question_id": 43364214, "link": "https://stackoverflow.com/questions/43364214/why-doesnt-the-rust-crate-openssl-sys-compile/43365423#43365423", "title": "Why doesn&#39;t the rust crate openssl-sys compile?", "body": "<p>From the comments:</p>\n\n<blockquote>\n  <p>Have you installed <code>pkg-config</code> and <code>openssl</code>?</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p>Yes it works! <code>openssl</code> was already installed but not <code>pkg-config</code>. So: </p>\n\n<pre><code>$ apt install pkg-config\n$ cargo clean \n$ cargo build\n</code></pre>\n  \n  <p>solved my problem. Thank you @kennytm!</p>\n</blockquote>\n"}], "owner": {"reputation": 151, "user_id": 7855155, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9b2705ec7500adf575ed35b744a0ecd?s=128&d=identicon&r=PG&f=1", "display_name": "LeyluIAA", "link": "https://stackoverflow.com/users/7855155/leyluiaa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2749, "favorite_count": 0, "accepted_answer_id": 43365423, "answer_count": 1, "score": 6, "last_activity_date": 1491994622, "creation_date": 1491985621, "last_edit_date": 1491994517, "question_id": 43364214, "link": "https://stackoverflow.com/questions/43364214/why-doesnt-the-rust-crate-openssl-sys-compile", "title": "Why doesn&#39;t the rust crate openssl-sys compile?", "body": "<p>I've just added an external crate to my Rust project:</p>\n\n<pre><code>[dependencies]\nfeed = \"2.0\"\n</code></pre>\n\n<p>This crate has several dependencies, notably <code>openssl-sys v0.9.10</code>. This one failed when I'm trying to build my project:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build \nCompiling unicode-normalization v0.1.4\nCompiling openssl-probe v0.1.0\nCompiling matches v0.1.4\nCompiling log v0.3.7\nCompiling unicode-bidi v0.2.5\nCompiling libc v0.2.21\nCompiling quick-xml v0.4.2\nCompiling pkg-config v0.3.9\nCompiling rss v0.4.0\nCompiling idna v0.1.1\nCompiling time v0.1.36\nCompiling num-traits v0.1.37\nCompiling gcc v0.3.45\nCompiling num-integer v0.1.34\nCompiling url v1.4.0\nCompiling num-iter v0.1.33\nCompiling num v0.1.37\nCompiling chrono v0.3.0\nCompiling openssl-sys v0.9.10\nCompiling libz-sys v1.0.13\nerror: failed to run custom build command for `openssl-sys v0.9.10`\nprocess didn't exit successfully: \n`/home/E3news/flux/target/debug/build/openssl-sys-223aa532c32a251f/build-script-build` (exit code: 101)\n--- stderr\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: \"Failed to run `\\\"pkg-config\\\" \\\"--libs\\\" \\\"--cflags\\\" \\\"openssl\\\"`: No such file or directory (os error 2)\"', /buildslave/rust-\nbuildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:868\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n\nBuild failed, waiting for other jobs to finish...\nerror: build failed\n</code></pre>\n\n<p>I'm on a Debian 8.7 and I use Rust 1.16. I tried a fix by installing <code>libssl-dev</code> on my OS but it doesn't fix the issue.</p>\n\n<p>Any idea?</p>\n"}, {"tags": ["linux", "unix", "rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491975872, "post_id": 43361154, "comment_id": 73784372, "body": "How do you check if it works?"}, {"owner": {"reputation": 587, "user_id": 1663453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d82b6fba5bd6673dfe7ed0112aa8ccf?s=128&d=identicon&r=PG", "display_name": "Sierisimo", "link": "https://stackoverflow.com/users/1663453/sierisimo"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491976000, "post_id": 43361154, "comment_id": 73784440, "body": "Well... my process is still on learning but I run: <code>cargo build</code> and then executes: <code>.&#47;target&#47;debug&#47;rcd FULL_PATH</code> where FULL_PATH is the destiny (almost all time I check with my home). My first runs used a hardcoded string, now I&#39;m using <code>clap</code> to parse arguments."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 8, "creation_date": 1491976401, "post_id": 43361154, "comment_id": 73784627, "body": "It&#39;s not possible to change the external terminal&#39;s $PWD. Not in Rust, not in C, not in any language. See <a href=\"http://stackoverflow.com/questions/4884681/how-to-use-cd-command-using-java-runtime\" title=\"how to use cd command using java runtime\">stackoverflow.com/questions/4884681/&hellip;</a> for an explanation. It is only possible as a shell function like <a href=\"http://stackoverflow.com/questions/874452/change-current-directory-from-a-script\" title=\"change current directory from a script\">stackoverflow.com/questions/874452/&hellip;</a>"}, {"owner": {"reputation": 587, "user_id": 1663453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d82b6fba5bd6673dfe7ed0112aa8ccf?s=128&d=identicon&r=PG", "display_name": "Sierisimo", "link": "https://stackoverflow.com/users/1663453/sierisimo"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491976809, "post_id": 43361154, "comment_id": 73784814, "body": "Thanks, that&#39;s useful information, I have to read deeper, because I saw <a href=\"https://github.com/gsamokovarov/jump\" rel=\"nofollow noreferrer\">github.com/gsamokovarov/jump</a> to work with, I assume that tool just creates it&#39;s own enviroment."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 4, "creation_date": 1491977148, "post_id": 43361154, "comment_id": 73784972, "body": "It defines a shell function called <code>j</code> in <a href=\"https://github.com/gsamokovarov/jump/blob/fca01f577dde1b379e2b2023233182e5c6b88911/shell/bash.go#L19-L22\" rel=\"nofollow noreferrer\">github.com/gsamokovarov/jump/blob/&hellip;</a>, i.e. the method in the second related link. The <code>j</code> function runs the main Go program to compute the target directory, then invoke the built-in <code>cd</code> to jump to there."}, {"owner": {"reputation": 3506, "user_id": 112538, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2a771471ac58aaabdeb883001d6b7c07?s=128&d=identicon&r=PG", "display_name": "asymmetric", "link": "https://stackoverflow.com/users/112538/asymmetric"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505155818, "post_id": 43361154, "comment_id": 79287057, "body": "@Shepmaster how is this a duplicate of questions for other languages?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3506, "user_id": 112538, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2a771471ac58aaabdeb883001d6b7c07?s=128&d=identicon&r=PG", "display_name": "asymmetric", "link": "https://stackoverflow.com/users/112538/asymmetric"}, "edited": false, "score": 1, "creation_date": 1505157316, "post_id": 43361154, "comment_id": 79287877, "body": "@asymmetric because the problem has nothing to do with the implementation language. Check out <a href=\"https://stackoverflow.com/questions/43361154/how-to-change-os-to-directory-using-rust?noredirect=1#comment73784627_43361154\">the comment that currently has 5 votes</a> which already explains that, then check out the <a href=\"https://stackoverflow.com/questions/43361154/how-to-change-os-to-directory-using-rust?noredirect=1#comment73784972_43361154\">comment with 4 votes</a> which explains how you can use a program to compute a directory to navigate to with the shell&#39;s <code>cd</code> command instead."}, {"owner": {"reputation": 3506, "user_id": 112538, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2a771471ac58aaabdeb883001d6b7c07?s=128&d=identicon&r=PG", "display_name": "asymmetric", "link": "https://stackoverflow.com/users/112538/asymmetric"}, "edited": false, "score": 0, "creation_date": 1505162089, "post_id": 43361154, "comment_id": 79290330, "body": "Sure, but that comment should&#39;ve actually been an (accepted) answer."}], "owner": {"reputation": 587, "user_id": 1663453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d82b6fba5bd6673dfe7ed0112aa8ccf?s=128&d=identicon&r=PG", "display_name": "Sierisimo", "link": "https://stackoverflow.com/users/1663453/sierisimo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1523, "favorite_count": 0, "closed_date": 1492006313, "answer_count": 0, "score": 5, "last_activity_date": 1505157660, "creation_date": 1491975776, "question_id": 43361154, "link": "https://stackoverflow.com/questions/43361154/how-to-change-os-to-directory-using-rust", "closed_reason": "Duplicate", "title": "How to change OS to directory using rust?", "body": "<p>I'm trying to replicate the <code>cd</code> command in Rust, just for learning.</p>\n\n<p>But the problem is that I'm not sure how to change a directory in the OS (*nix). I have tried with:</p>\n\n<pre><code>std::process::Command::new(\"cd\")\n    .arg(path) //path is a String\n    .spawn()\n    .expect(\"Directory failed\");\n</code></pre>\n\n<p>And also tried with:</p>\n\n<pre><code>let path = Path::new(path_str.as_str());\nlet changed_dir = env::set_current_dir(&amp;path).is_ok();\n</code></pre>\n\n<p>And <code>changed_dir</code> is true.</p>\n\n<p>Even I tried changing <code>env::set_var(\"PWD\", path)</code> but nothing seems to work.</p>\n\n<p>I checked this part of the documentation: <a href=\"https://doc.rust-lang.org/std/env/fn.set_current_dir.html\" rel=\"noreferrer\">https://doc.rust-lang.org/std/env/fn.set_current_dir.html</a>\nbut I think is just for a type of sandboxed path or directory.</p>\n\n<p>Any more ideas?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2512, "user_id": 683727, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a6afa301295775f882aea1c37da9aee3?s=128&d=identicon&r=PG&f=1", "display_name": "wuxb", "link": "https://stackoverflow.com/users/683727/wuxb"}, "edited": false, "score": 0, "creation_date": 1491979256, "post_id": 43360980, "comment_id": 73786008, "body": "Thanks your your answer and the reference."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1491981070, "post_id": 43360980, "comment_id": 73787102, "body": "I thought that <code>a + b</code> was sugar for <code>a.add(b)</code> (with <code>add</code> coming from <code>std::ops::Add</code>). If that were the case, <code>a + b</code> <i>would</i> be a method call with <code>a</code> being self, and auto-dereferencing would apply to operators. I wonder if there is a drawback to this approach because of which Rust chooses not to define operators like that."}, {"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1491997277, "post_id": 43360980, "comment_id": 73798809, "body": "@user4815162342 there is auto-dereferencing, but it applies only to <code>a</code>"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "edited": false, "score": 0, "creation_date": 1491998128, "post_id": 43360980, "comment_id": 73799319, "body": "@torkleyy No auto-deref won&#39;t be done between operators, e.g. <code>&amp;mut u32 += u32</code> doesn&#39;t work. Which is why there are four impls for Add instead of two."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 12, "last_activity_date": 1493179075, "last_edit_date": 1495542353, "creation_date": 1491974914, "answer_id": 43360980, "question_id": 43360850, "link": "https://stackoverflow.com/questions/43360850/understanding-automatic-deref-coercion-when-adding-references-and-values-of-n/43360980#43360980", "title": "Understanding (automatic?) Deref/coercion when adding references and values of numbers", "body": "<p>There is no auto-deref or coercion here, <code>i + x</code> works simply because <code>u32</code> implements both <code>Add&lt;u32&gt;</code> and <code>Add&lt;&amp;u32&gt;</code>. If you check <a href=\"https://doc.rust-lang.org/std/primitive.u32.html\" rel=\"noreferrer\">the docs for <code>u32</code></a>, you'll find the following four trait impls:</p>\n\n<pre><code>impl Add&lt;u32&gt; for u32\nimpl&lt;'a&gt; Add&lt;u32&gt; for &amp;'a u32\nimpl&lt;'a&gt; Add&lt;&amp;'a u32&gt; for u32\nimpl&lt;'a, 'b&gt; Add&lt;&amp;'a u32&gt; for &amp;'b u32\n</code></pre>\n\n<p><code>u32</code> only implements <code>AddAssign&lt;u32&gt;</code> but not <code>AddAssign&lt;&amp;u32&gt;</code> (<a href=\"https://github.com/rust-lang/rust/issues/32094\" rel=\"noreferrer\">this is a bug</a> and <del><a href=\"https://github.com/rust-lang/rust/pull/41336\" rel=\"noreferrer\">will be fixed in 1.18 or 1.19</a></del> fixing it <a href=\"https://github.com/rust-lang/rust/pull/41336#issuecomment-297227879\" rel=\"noreferrer\">causes regression</a> which means this impl probably needs to wait for Rust 2.0), so <code>i += x</code> is an error.</p>\n\n<pre><code>impl AddAssign&lt;u32&gt; for u32\n//impl&lt;'a&gt; AddAssign&lt;&amp;'a u32&gt; for u32 &lt;-- is missing.\n</code></pre>\n\n<hr>\n\n<p>Why does auto-dereferencing not happen? \u2014 Auto-deref only happens when it is a receiver i.e. the \"<code>self</code>\" in a method call <code>foo.bar()</code>. <code>x</code> is not a \"self\" argument and <code>+</code> is not a method call. So there's no auto-deref here. See <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">What are Rust&#39;s exact auto-dereferencing rules?</a> for detail.</p>\n"}], "owner": {"reputation": 2512, "user_id": 683727, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a6afa301295775f882aea1c37da9aee3?s=128&d=identicon&r=PG&f=1", "display_name": "wuxb", "link": "https://stackoverflow.com/users/683727/wuxb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1161, "favorite_count": 2, "accepted_answer_id": 43360980, "answer_count": 1, "score": 8, "last_activity_date": 1493179075, "creation_date": 1491974316, "last_edit_date": 1492001120, "question_id": 43360850, "link": "https://stackoverflow.com/questions/43360850/understanding-automatic-deref-coercion-when-adding-references-and-values-of-n", "title": "Understanding (automatic?) Deref/coercion when adding references and values of numbers", "body": "<p>How to make sense of the following piece of code? I'm new to Rust but have background on C/Haskell and a little bit C++. The only reference I can find is to <a href=\"https://doc.rust-lang.org/book/deref-coercions.html\" rel=\"noreferrer\" title=\"Deref coercions\">deref coercions</a>.</p>\n\n<pre><code>fn main() {\n    let xs: [u32; 4] = [0, 1, 2, 3];\n    let mut i: u32 = 0;\n    for x in xs.iter() {\n        if i &gt; *x {     // It looks x is an iterator. Understood.            \n            i = i + x;  // no error. (coerced)\n                        //Quote: \"Rust will do this as many times\n                        //       as possible until the types match.\"\n            i = i + *x; // no error (explicit deref)\n            i += x;     // error about u32/&amp;u32 mismatch. Why the magic failed?\n            i += *x;    // no error (explicit deref)\n        }\n    }\n    println!(\"{}\", i);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491988743, "post_id": 43362656, "comment_id": 73792355, "body": "Your first paragraph is slightly unclear; it could apply to both having <code>Foo::new</code> returns a <code>Box&lt;Foo&gt;</code> and <code>Foo</code> containing a <code>Box</code>. From the second paragraph I guess you aimed for the latter, which is also what I would advise in this case, but it would be clearer if the first paragraph could be understood by itself."}, {"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491991854, "post_id": 43362656, "comment_id": 73794739, "body": "Thanks for your feedback! I wrote the answer in a hurry, and it shows. Let me know if the edited version is clear enough."}, {"owner": {"reputation": 403, "user_id": 1935361, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e1b127d480162b1c628aef4fa30e02dd?s=128&d=identicon&r=PG&f=1", "display_name": "user1935361", "link": "https://stackoverflow.com/users/1935361/user1935361"}, "edited": false, "score": 0, "creation_date": 1492011404, "post_id": 43362656, "comment_id": 73810155, "body": "Question -- how can you enforce that nobody can create Foo on the stack (in your 2nd scenario?)  Can&#39;t you always create something on the stack with the <code>let stack_foo = Foo { }</code> syntax?"}, {"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 1, "creation_date": 1492024488, "post_id": 43362656, "comment_id": 73817705, "body": "Only if the fields are public. Here, you would make the fields private and only expose constructor functions that return <code>Box&lt;Foo&gt;</code>. You would still be able to create <code>Foo</code> on the stack within the module where <code>Foo</code> itself is defined, but anyone using the API from the outside would be unable to do so."}, {"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 1, "creation_date": 1492024595, "post_id": 43362656, "comment_id": 73817758, "body": "See <a href=\"https://play.rust-lang.org/?code=mod%20foo%20%7B%0D%0A%20%20%20%20pub%20struct%20Foo%20%7B%0D%0A%20%20%20%20%20%20%20%20bar%3A%20u32%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0Afn%20main()%20%7B%0D%0A%20%20%20%20use%20foo%3A%3AFoo%3B%0D%0A%20%20%20%20Foo%20%7B%20bar%3A%2042%20%7D%3B%0D%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">this</a> for an example."}, {"owner": {"reputation": 403, "user_id": 1935361, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e1b127d480162b1c628aef4fa30e02dd?s=128&d=identicon&r=PG&f=1", "display_name": "user1935361", "link": "https://stackoverflow.com/users/1935361/user1935361"}, "edited": false, "score": 0, "creation_date": 1492085896, "post_id": 43362656, "comment_id": 73845053, "body": "@aochagavia Aahhhh I see -- I didn&#39;t know member visibility could differ from struct visibility...thanks man!"}], "tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": true, "score": 7, "last_activity_date": 1491991769, "last_edit_date": 1491991769, "creation_date": 1491980862, "answer_id": 43362656, "question_id": 43359599, "link": "https://stackoverflow.com/questions/43359599/is-allocating-a-struct-on-the-heap-or-having-a-struct-own-a-heap-pointer-more-id/43362656#43362656", "title": "Is allocating a struct on the heap or having a struct own a heap pointer more idiomatic?", "body": "<p>I think the question to ask yourself here is: <em>will it ever make sense to place this struct in the stack?</em> If the answer is no, you should probably enforce allocation on the heap. To achieve this, you have two alternatives:</p>\n\n<ol>\n<li>Use <code>lots_of_bytes: Box&lt;[u8; 1024 * 10]&gt;</code>.</li>\n<li>Use <code>lots_of_bytes: [u8; 1024 * 10]</code> and ensure that all constructors of <code>Foo</code> return <code>Box&lt;Foo</code> (so it becomes impossible to create a <code>Foo</code> on the stack).</li>\n</ol>\n\n<p>In my opinion, the first alternative is much better:</p>\n\n<ul>\n<li>The struct definition of <code>Foo</code> shows clearly that the data must be stored on the heap.</li>\n<li>This only requires boxing <code>lots_of_bytes</code>, instead of the whole struct. This means that <code>bar</code> and <code>baz</code> would be placed on the stack, so you have less indirection.</li>\n</ul>\n\n<p>As for the second alternative, I can't think of any reason to prefer it and have never seen it in the wild.</p>\n"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1674, "favorite_count": 0, "accepted_answer_id": 43362656, "answer_count": 1, "score": 8, "last_activity_date": 1491991769, "creation_date": 1491966710, "last_edit_date": 1491966842, "question_id": 43359599, "link": "https://stackoverflow.com/questions/43359599/is-allocating-a-struct-on-the-heap-or-having-a-struct-own-a-heap-pointer-more-id", "title": "Is allocating a struct on the heap or having a struct own a heap pointer more idiomatic?", "body": "<p>I have a type that occupies too much space to be allocated on the stack:</p>\n\n<pre><code>struct Foo {\n    lots_of_bytes: [u8; 1024 * 10],\n    bar: bool,\n    baz: isize,\n}\n</code></pre>\n\n<p>There are two obvious solutions:</p>\n\n<pre><code>let foo = Box::new(Foo::new());\n</code></pre>\n\n<p><strong>Or</strong></p>\n\n<pre><code>struct Foo {\n    lots_of_bytes: Box&lt;[u8; 1024 * 10]&gt;,\n    bar: bool,\n    baz: isize,\n}\n</code></pre>\n\n<p>To summarize, I either allocate the entire struct on the heap, or I can have the struct own the heap pointer. Is either of these solutions considered the \"idiomatic\" solution? Or is it strictly subjective or dependent on context?</p>\n"}, {"tags": ["reference", "rust", "lifetime"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491971434, "post_id": 43359159, "comment_id": 73782846, "body": "Why you need a <code>&amp;&#39;a Color</code> anyway? Using <code>Color</code> directly should be much more efficient and easier ;)."}, {"owner": {"reputation": 157, "user_id": 3342240, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a7176b48e45597d3a8a206e2f358f497?s=128&d=identicon&r=PG&f=1", "display_name": "davenportw15", "link": "https://stackoverflow.com/users/3342240/davenportw15"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1492038849, "post_id": 43359159, "comment_id": 73824210, "body": "Is there a way to use <code>Color</code> directly without cloning each <code>Color</code> into the new <code>Vec</code>, other than using mutability?"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1492047452, "post_id": 43359159, "comment_id": 73826339, "body": "<code>Color</code> should derive Copy."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1491964523, "creation_date": 1491964523, "answer_id": 43359267, "question_id": 43359159, "link": "https://stackoverflow.com/questions/43359159/mix-lifetimes-of-references-in-vec/43359267#43359267", "title": "Mix lifetimes of references in Vec", "body": "<blockquote>\n  <p>How can I create a <code>Vec</code> of colors, all but one with lifetime <code>'a</code>, and the remaining with lifetime <code>'b</code>?</p>\n</blockquote>\n\n<p>You <em>cannot</em>. Lifetimes are generics, and just like it doesn't make sense to have \"a <code>Vec&lt;T&gt;</code>, all but one of <code>T</code> is the type <code>String</code>, and the remaining <code>T</code> is the type <code>bool</code>\", it doesn't make sense to do so with lifetimes.</p>\n\n<p>What you can do is unify the lifetimes:</p>\n\n<pre><code>impl&lt;'a&gt; Canvas&lt;'a&gt; {\n    pub fn modify(&amp;self, update: Update&lt;'a&gt;) -&gt; Canvas&lt;'a&gt; {\n        let x = update.x;\n        let y = update.y;\n        let colors = self.colors\n            .iter()\n            .enumerate()\n            .map(move |(index, color)| if index == self.width * y + x {\n                     update.color\n                 } else {\n                     color\n                 })\n            .collect();\n        Canvas {\n            width: self.width,\n            height: self.height,\n            colors: colors,\n        }\n    }\n}\n</code></pre>\n\n<p>Here, we've said that the <code>update.color</code> lifetime and the lifetime of the contained references have an intersection, and that's what the lifetime of the result will be.</p>\n\n<hr>\n\n<p>Another common solution for a heterogenous collection of a fixed set of types is to introduce an enum with variants for each one:</p>\n\n<pre><code>pub enum Thing&lt;'a, 'b&gt;  {\n    A(&amp;'a Color),\n    B(&amp;'b Color),\n}\n\nimpl&lt;'a&gt; Canvas&lt;'a&gt; {\n    pub fn modify&lt;'b&gt;(&amp;self, update: Update&lt;'b&gt;) -&gt; Vec&lt;Thing&lt;'a, 'b&gt;&gt; {\n        let x = update.x;\n        let y = update.y;\n        self.colors\n            .iter()\n            .enumerate()\n            .map(move |(index, color)| if index == self.width * y + x {\n                     Thing::B(update.color)\n                 } else {\n                     Thing::A(color)\n                 })\n            .collect()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 157, "user_id": 3342240, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a7176b48e45597d3a8a206e2f358f497?s=128&d=identicon&r=PG&f=1", "display_name": "davenportw15", "link": "https://stackoverflow.com/users/3342240/davenportw15"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1100, "favorite_count": 0, "accepted_answer_id": 43359267, "answer_count": 1, "score": 0, "last_activity_date": 1491964523, "creation_date": 1491963903, "question_id": 43359159, "link": "https://stackoverflow.com/questions/43359159/mix-lifetimes-of-references-in-vec", "title": "Mix lifetimes of references in Vec", "body": "<p>I am attempting to generate a <code>Vec&lt;&amp;'b Color&gt;</code> from <code>Vec&lt;&amp;'a Color&gt;</code>:</p>\n\n<pre><code>impl &lt;'a&gt; Canvas&lt;'a&gt; {\n    pub fn modify&lt;'b&gt;(&amp;self, update: Update) -&gt; Canvas&lt;'b&gt; {\n        let x  = update.x;\n        let y  = update.y;\n        let colors: Vec&lt;&amp;'b Color&gt; = self.colors.iter().enumerate().map(move |(index, color)| {\n                if index == self.width * y + x { update.color } else { color }\n            })\n            .collect();\n        Canvas { width: self.width, height: self.height, colors: colors }\n    }\n}\n</code></pre>\n\n<p>However, I get the following error:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/canvas.rs:51:50\n   |\n51 |         let colors: Vec&lt;&amp;'b Color&gt; = self.colors.iter().enumerate().map(move |(index, color)| {\n   |                                                  ^^^^\n</code></pre>\n\n<p>How can I create a <code>Vec</code> of colors, all but one with lifetime <code>'a</code>, and the remaining with lifetime <code>'b</code>?</p>\n\n<p>If needed, the relevant definitions are as follows: </p>\n\n<pre><code>#[derive(Debug, PartialEq, Eq)]\npub enum Color {\n    White,\n    Red,\n    Blue,\n    Green,\n    Purple,\n    Orange\n}\n\npub struct Update&lt;'a&gt; {\n    color: &amp;'a Color,\n    x: usize,\n    y: usize\n}\n\npub struct Canvas&lt;'a&gt; {\n    width: usize,\n    height: usize,\n    colors: Vec&lt;&amp;'a Color&gt;\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 179940, "user_id": 20713, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/09b9758a4a83cc25547eb93891f19df7?s=128&d=identicon&r=PG", "display_name": "ephemient", "link": "https://stackoverflow.com/users/20713/ephemient"}, "edited": false, "score": 1, "creation_date": 1491963140, "post_id": 43358940, "comment_id": 73780780, "body": "<a href=\"https://play.rust-lang.org/?code=mod%20a%20%7B%0A%20%20%20%20pub%20mod%20b%20%7B%0A%20%20%20%20%20%20%20%20pub%20use%20super%3A%3Ab%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20pub%20fn%20b()%20%7B%0A%20%20%20%20%20%20%20%20println!(%22b%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0Ause%20a%3A%3Ab%3B%0A%0Afn%20main()%20%7B%0A%20%20%20%20b()%3B%0A%20%20%20%20b%3A%3Ab()%3B%0A%20%20%20%20b%3A%3Ab%3A%3Ab()%3B%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">This</a> works too."}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1491964157, "creation_date": 1491964157, "answer_id": 43359214, "question_id": 43358940, "link": "https://stackoverflow.com/questions/43358940/why-does-a-module-with-a-submodule-and-a-function-with-conflicting-names-work/43359214#43359214", "title": "Why does a module with a submodule and a function with conflicting names work?", "body": "<blockquote>\n  <p>Shouldn't the module <code>b</code> and the function <code>b</code> conflict?</p>\n</blockquote>\n\n<p>No, because they're in different namespaces.  They conflict in the same way \"re<em>c</em>ord\" and \"<em>re</em>cord\" conflict in English: they're spelled and sound the same, but mean different things, and you can tell which is which based on context.</p>\n\n<p>You can't call a module, so <code>b()</code> can't be talking about a module.  Functions don't have child items, so <code>b::b</code> can't be talking about a function.  This is important when you consider things like <code>struct S(i32);</code>.  <code>S</code> is <em>both</em> a type (the structure type itself) <em>and</em> a function (the constructor).</p>\n"}], "owner": {"reputation": 4414, "user_id": 551904, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/3c0a0f47f94565025a9aa388e8bd8681?s=128&d=identicon&r=PG", "display_name": "Sunjay Varma", "link": "https://stackoverflow.com/users/551904/sunjay-varma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 43359214, "answer_count": 1, "score": 2, "last_activity_date": 1491964157, "creation_date": 1491962035, "last_edit_date": 1491963846, "question_id": 43358940, "link": "https://stackoverflow.com/questions/43358940/why-does-a-module-with-a-submodule-and-a-function-with-conflicting-names-work", "title": "Why does a module with a submodule and a function with conflicting names work?", "body": "<p>Here's the code I'm wondering about: (<a href=\"https://play.rust-lang.org/?code=mod%20a%20%7B%0A%20%20%20%20pub%20mod%20b%20%7B%0A%20%20%20%20%20%20%20%20pub%20fn%20b()%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20println!(%22b%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20pub%20use%20self%3A%3Ab%3A%3Ab%3B%0A%7D%0A%0Ause%20a%3A%3Ab%3B%0A%0Afn%20main()%20%7B%0A%20%20%20%20b()%3B%0A%20%20%20%20b%3A%3Ab()%3B%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Rust Playground</a>)</p>\n\n<pre><code>mod a {\n    pub mod b {\n        pub fn b() {\n            println!(\"b\");\n        }\n    }\n\n    pub use self::b::b;\n}\n\nuse a::b;\n\nfn main() {\n    b();\n    b::b();\n}\n</code></pre>\n\n<p>Why does <code>b::b()</code> work? Shouldn't the module <code>b</code> and the function <code>b</code> conflict? Does that mean that <code>a::b</code> is both a module and a function somehow?</p>\n"}, {"tags": ["casting", "rust", "variant"], "comments": [{"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1491937571, "post_id": 43354262, "comment_id": 73771595, "body": "...I suppose it&#39;s also possible that having multiple variants with the same underlying type isn&#39;t really rustic, in which case this whole issue should probably be avoided."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1491939433, "post_id": 43354262, "comment_id": 73772708, "body": "<i>and this seems like it should be a reasonably common pattern</i> \u2014 I disagree. The main reason I would use two enum variants with the same wrapped type is <i>because</i> they have different meanings. Since they have different meanings, converting from one to the other would usually require some extra processing, which wouldn&#39;t be abstractable."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491949776, "post_id": 43354262, "comment_id": 73777458, "body": "@Shepmaster But all different types have different meanings, so your argument seems to apply to all forms of type coercion."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491988435, "post_id": 43354262, "comment_id": 73792134, "body": "@KyleStrand: Indeed, and you&#39;ll note that in Rust said conversions are explicit."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1492015509, "post_id": 43354262, "comment_id": 73812809, "body": "@MatthieuM. Isn&#39;t <code>var as NewType</code> explicit?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1492019216, "post_id": 43354262, "comment_id": 73814798, "body": "@KyleStrand: It is... however as far as I can tell, <i>it cannot fail</i>. I think the only <code>as</code> conversions which can fail (panic) are integer to integer conversion (in case of underflow/overflow). If I recall correctly there&#39;s an issue with the float -&gt; integer conversion (LLVM treats it as undefined behavior when overflow occurs). Otherwise, <code>as</code> should just work, whereas in your case it does not. So a more explicit conversion makes it more obvious that there is a potential failure point here... and let you choose, for example, to return a <code>Result</code> instead of panicking."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1492023767, "post_id": 43354262, "comment_id": 73817301, "body": "@MatthieuM. Okay, that makes sense. Permitting such a conversion only when <i>all</i> variants have the same underlying data (or no variants have associated data) wouldn&#39;t have that problem, but at that point the feature would admittedly be kind of abusing a keyword for very little value."}], "answers": [{"comments": [{"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1492024088, "post_id": 43365657, "comment_id": 73817467, "body": "Huh, I thought I&#39;d tried that and found that I couldn&#39;t move out of <code>v</code> while matching on it. Glad to see that I was mistaken."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1497389875, "post_id": 43365657, "comment_id": 76055653, "body": "This can also be simplified to an <code>if let</code>: `let v2 = if let CanConvert::Vec1(underlying) = v1 {  CanConvert::Vec2(underlying)  } else { /* handle unexpected enum variant here */ };"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1491989473, "creation_date": 1491989473, "answer_id": 43365657, "question_id": 43354262, "link": "https://stackoverflow.com/questions/43354262/cast-enum-variants-of-same-underlying-type/43365657#43365657", "title": "Cast enum variants of same underlying type", "body": "<p>First of all, since <code>&amp;T</code> is an immutable reference, an implementation of <code>Deref</code> <em>cannot</em> change a type. It can merely point <em>inside</em> (in this case, it could point to the underlying <code>Vec</code>).</p>\n\n<p>Regarding conversion, <code>ref</code> is introducing an inefficiency here as it forces you to <code>clone</code>, if you take ownership instead you can simply move the underlying vector:</p>\n\n<pre><code>fn to_v2(v: CanConvert) -&gt; CanConvert {\n    match v {\n        CanConvert::Vec1(u) | CanConvert::Vec2(u) =&gt; CanConvert::Vec2(u),\n        _ =&gt; panic!(\"Inappropriate type\");\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 448, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1491989473, "creation_date": 1491937512, "last_edit_date": 1491939663, "question_id": 43354262, "link": "https://stackoverflow.com/questions/43354262/cast-enum-variants-of-same-underlying-type", "title": "Cast enum variants of same underlying type", "body": "<p>Is there a simple way to create an <code>enum</code> that provides the ability to coerce or otherwise cast instances from one variant to another, as long as the underlying types match?</p>\n\n<p>For instance, given this enum:</p>\n\n<pre><code>enum CanConvert {\n    Vec1(Vec&lt;String&gt;),\n    Vec2(Vec&lt;String&gt;),\n    NotVec(i32),\n}\n</code></pre>\n\n<p>I would like to be able to easily convert between the <code>Vec1</code> and <code>Vec2</code> variants:</p>\n\n<pre><code>let v1 = CanConvert::Vec1([\"one\", \"two\", \"three\", \"uno\", \"dos\", \"tres\"]\n                          .iter()\n                          .map(|&amp;s| s.into())\n                          .collect());\n\nlet v2 = v1 as CanConvert::Vec2;\n</code></pre>\n\n<p>The code above currently gives the error <code>not a type</code>, since enum variants are not (currently) considered types. And even if it compiled, it's not clear how the case where <code>v1</code> is the <code>NotVec</code> variant should be handled (panic?).</p>\n\n<p>This works, but it's pretty verbose, and this seems like it should be a reasonably common pattern:</p>\n\n<pre><code>let v2 = match v1 {\n    CanConvert::Vec1(ref underlying) |\n    CanConvert::Vec2(ref underlying) =&gt; CanConvert::Vec2(underlying.clone()),\n    _ =&gt; panic!(\"v1 did not have appropriate underlying type!\"),\n};\n</code></pre>\n\n<p>So is there a simple way to provide this kind of simple type-transformation between variants where possible? I haven't written any of my own <code>Deref</code> coercions, but that seems like it might be what I'm looking for here. (A coercion wrapped in some kind of custom <code>derive</code> would be ideal.)</p>\n\n<p><strong>EDIT:</strong> Note that as far as I can tell, there cannot be any safe way of obtaining a <em>reference</em> to the original, with the desired variant type; a full clone is required, because the reference would necessarily have the wrong variant tag. However, it seems like it should be possible to <em>convert</em> the original <code>enum</code> by simply changing the tag appropriately.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 1, "creation_date": 1491938732, "post_id": 43354158, "comment_id": 73772261, "body": "Why the <code>self.plugins.as_ref()</code> ? You are generalizing taking the reference where generalizing adds ambiguity. Try <code>self.plugins.iter()</code>"}, {"owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1491940456, "post_id": 43354158, "comment_id": 73773247, "body": "@user2722968 i&#39;m still new to rust, so i&#39;m sure i picked up as_ref() somewhere off the internet as a bad habit ^-^&#39;"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1491938900, "creation_date": 1491938900, "answer_id": 43354636, "question_id": 43354158, "link": "https://stackoverflow.com/questions/43354158/why-am-i-getting-a-value-must-be-known-error-on-tuple-in-a-for-loop/43354636#43354636", "title": "Why am I getting a &quot;value must be known&quot; error on tuple in a for-loop?", "body": "<p>Because you are using <code>as_ref</code>, which is more generic than you want. The value of <code>T</code> cannot be inferred:</p>\n\n<pre><code>pub trait AsRef&lt;T&gt;\n    where T: ?Sized\n{\n    fn as_ref(&amp;self) -&gt; &amp;T;\n}\n</code></pre>\n\n<p>The idiomatic way to iterate over this is </p>\n\n<pre><code>for plugin_blueprints in &amp;self.plugins {}\n</code></pre>\n\n<hr>\n\n<p>The pretty nasty way of doing it is to use the turbofish on the trait, using the disambiguated function call syntax:</p>\n\n<pre><code>for plugin_blueprints in AsRef::&lt;[(&amp;'a Plugin, Vec&lt;Blueprint&lt;'a&gt;&gt;)]&gt;::as_ref(&amp;self.plugins) {\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": false, "score": 1, "last_activity_date": 1491939249, "creation_date": 1491939249, "answer_id": 43354733, "question_id": 43354158, "link": "https://stackoverflow.com/questions/43354158/why-am-i-getting-a-value-must-be-known-error-on-tuple-in-a-for-loop/43354733#43354733", "title": "Why am I getting a &quot;value must be known&quot; error on tuple in a for-loop?", "body": "<p>Your function will actually return a <code>Option&lt;&amp;Blueprint&gt;</code> because you start with <code>&amp;self</code>. You should also use <code>self.plugins.iter()</code> and <code>plugin_blueprints.1.iter()</code> to stop the ambiguity introduced by <code>as_ref()</code> and fix your lifetimes.</p>\n\n<p>See <a href=\"https://play.rust-lang.org/?code=struct%20Plugin%3B%0Astruct%20Blueprint%3C%27a%3E(%26%27a%20())%3B%0A%0Astruct%20Shell%3C%27a%3E%20%7B%0A%20%20%20%20plugins%3A%20Vec%3C(%26%27a%20Plugin%2C%20Vec%3CBlueprint%3C%27a%3E%3E)%3E%2C%0A%7D%0A%0Aimpl%3C%27a%3E%20Shell%3C%27a%3E%20%7B%0A%20%20%20%20fn%20find_blueprint(%26self%2C%20name%3A%20%26str)%20-%3E%20Option%3C%26Blueprint%3E%20%7B%0A%20%20%20%20%20%20%20%20for%20plugin_blueprints%20in%20self.plugins.iter()%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20blueprint%20in%20plugin_blueprints.1.iter()%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20blueprint.0%20%3D%3D%20%26()%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20Some(blueprint)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20None%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20main()%20%7B%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">here</a></p>\n"}], "owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 43354636, "answer_count": 2, "score": 1, "last_activity_date": 1491939249, "creation_date": 1491937132, "last_edit_date": 1491938363, "question_id": 43354158, "link": "https://stackoverflow.com/questions/43354158/why-am-i-getting-a-value-must-be-known-error-on-tuple-in-a-for-loop", "title": "Why am I getting a &quot;value must be known&quot; error on tuple in a for-loop?", "body": "<pre><code>struct Plugin;\nstruct Blueprint&lt;'a&gt;(&amp;'a ());\n\nstruct Shell&lt;'a&gt; {\n    plugins: Vec&lt;(&amp;'a Plugin, Vec&lt;Blueprint&lt;'a&gt;&gt;)&gt;,\n}\n\nimpl&lt;'a&gt; Shell&lt;'a&gt; {\n    fn find_blueprint(&amp;self, name: &amp;str) -&gt; Option&lt;Blueprint&gt; {\n        for plugin_blueprints in self.plugins.as_ref() {\n            for blueprint in plugin_blueprints.1 {\n                if blueprint.name.to_string() == name {\n                    return Some(blueprint);\n                }\n            }\n        }\n        None\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Generates this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the type of this value must be known in this context\n  --&gt; src/main.rs:11:30\n   |\n11 |             for blueprint in plugin_blueprints.1 {\n   |                              ^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>This confuses me because <code>plugin_blueprints</code> seems to be unambiguously of type <code>(&amp;'a Plugin, Vec&lt;Blueprint&lt;'a&gt;&gt;)</code>. I'm not sure what syntax (if any) I would use to specify the type in a for-loop. Turbo-fish <code>::&lt;</code> doesn't seem to work.</p>\n"}, {"tags": ["reference", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491935934, "post_id": 43353743, "comment_id": 73770715, "body": "You&#39;ve actually asked two separate questions; I&#39;ve linked to appropriate duplicates."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1491935967, "post_id": 43353743, "comment_id": 73770735, "body": "TL;DR: <code>println!</code> automatically takes a reference, and <code>Deref</code> coercions convert <code>&amp;&amp;String</code> to a <code>&amp;String</code> for you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1491936004, "post_id": 43353743, "comment_id": 73770757, "body": "Also relevant: <a href=\"http://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String) or Vec (&amp;Vec) as a function argument?</a>"}, {"owner": {"reputation": 411, "user_id": 6111891, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e38e4b42dfde2bf876b41a9bc3bd1ca6?s=128&d=identicon&r=PG&f=1", "display_name": "AUD_FOR_IUV", "link": "https://stackoverflow.com/users/6111891/aud-for-iuv"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491936197, "post_id": 43353743, "comment_id": 73770875, "body": "Thanks for the help!"}], "owner": {"reputation": 411, "user_id": 6111891, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e38e4b42dfde2bf876b41a9bc3bd1ca6?s=128&d=identicon&r=PG&f=1", "display_name": "AUD_FOR_IUV", "link": "https://stackoverflow.com/users/6111891/aud-for-iuv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 167, "favorite_count": 0, "closed_date": 1491935856, "answer_count": 0, "score": 0, "last_activity_date": 1491935904, "creation_date": 1491935676, "last_edit_date": 1491935791, "question_id": 43353743, "link": "https://stackoverflow.com/questions/43353743/forwarding-parameter-references-to-functions-in-rust", "closed_reason": "Duplicate", "title": "Forwarding Parameter References to Functions in Rust", "body": "<p>I'm having trouble figuring out what's happening when I forward a reference argument to another function in Rust that also expects a reference argument. </p>\n\n<p>Basically, I'm confused about when a value is a reference (that needs to be de-referenced with <code>*</code>) and when it's just a value that can be used directly. For example,</p>\n\n<pre><code>fn second(s: &amp;String) {\n    println!(\"Got string '{}'\", *s);  // Can also use s \n}\n\nfn first(s: &amp;String) {\n    second(s);                        // Can also use &amp;s\n}\n\nfn main() {\n    let s = String::from(\"Hello, World!\");\n    first(&amp;s);\n}\n</code></pre>\n\n<p>As shown above, any of the four total combinations of passing <code>s</code> from <code>first</code> into <code>second</code> and printing <code>s</code> inside <code>second</code> works. My intuition says that <code>s</code> inside <code>first</code> is a reference and thus <code>&amp;s</code> would be a double reference, and that <code>s</code> inside <code>second</code> is a reference that needs to be de-referenced, but it doesn't seem to actually matter. What's going on here?</p>\n"}, {"tags": ["macros", "documentation", "rust"], "comments": [{"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491934874, "post_id": 43353077, "comment_id": 73770143, "body": "@Shepmaster I couldn&#39;t find it, but I wonder why the second one fails to parse."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491935056, "post_id": 43353077, "comment_id": 73770249, "body": "The set of allowed tokens inside an attribute is probably pretty limited."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1491935671, "post_id": 43353077, "comment_id": 73770572, "body": "@torkleyy Macros are not expanded when parsing (which is why there is <a href=\"https://github.com/rust-lang/rfcs/pull/1628\" rel=\"nofollow noreferrer\">RFC 1628 &quot;Eager expansion of macros&quot;</a>)"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491936166, "post_id": 43353077, "comment_id": 73770856, "body": "@Shepmaster I though procedural macros allowed any token in attributes now (but the <code>#[doc]</code> attribute itself won&#39;t know what to do with those)."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 14, "last_activity_date": 1534718154, "last_edit_date": 1534718154, "creation_date": 1491936052, "answer_id": 43353854, "question_id": 43353077, "link": "https://stackoverflow.com/questions/43353077/how-to-embed-a-rust-macro-variable-into-documentation/43353854#43353854", "title": "How to embed a Rust macro variable into documentation?", "body": "<p>This can be done using a recursive macro:</p>\n\n<pre><code>macro_rules! impl_foo {\n    ($name:ident, $sname:expr) =&gt; {\n        #[doc = \"Returns a new `\"]\n        #[doc = $sname]\n        #[doc = \"`.\"]\n        pub fn myfoo() -&gt; $name {\n            42\n        }\n    };\n\n    ($name:tt) =&gt; {\n        impl_foo!($name, stringify!($name));\n    };\n}\n\nimpl_foo!(u32);\n\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>Which renders as:</p>\n\n<p><a href=\"https://i.stack.imgur.com/heOy2.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/heOy2.png\" alt=\"Example from rustdoc\"></a></p>\n"}], "owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 797, "favorite_count": 1, "accepted_answer_id": 43353854, "answer_count": 1, "score": 8, "last_activity_date": 1534718154, "creation_date": 1491933415, "last_edit_date": 1491934309, "question_id": 43353077, "link": "https://stackoverflow.com/questions/43353077/how-to-embed-a-rust-macro-variable-into-documentation", "title": "How to embed a Rust macro variable into documentation?", "body": "<p>I'd like to use a macro variable in the macro-generated documentation:</p>\n\n<pre><code>macro_rules! impl_foo {\n    ($name:ident) =&gt; {\n        /// Returns a new `$name`.\n        fn myfoo() -&gt; $name {\n\n        }\n    };\n}\n</code></pre>\n\n<p>However, the variable won't be substituted. I also tried using the <code>#[doc]</code> attribute:</p>\n\n<pre><code>macro_rules! impl_foo {\n    ($name:ident) =&gt; {\n        #[doc = concat!(\"Returns a new `\", $name, \"`.\")]\n        fn myfoo() -&gt; $name {\n\n        }\n    };\n}\n</code></pre>\n\n<p>This one even fails to parse: <code>unexpected token: 'concat'</code></p>\n"}, {"tags": ["debugging", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491930958, "post_id": 43352134, "comment_id": 73767756, "body": "Or you could use an <a href=\"https://crates.io/crates/glium\" rel=\"nofollow noreferrer\">existing OpenGL crate</a> that already uses runtime and compile time checks."}, {"owner": {"reputation": 16549, "user_id": 836390, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/tNl4E.jpg?s=128&g=1", "display_name": "joshlf", "link": "https://stackoverflow.com/users/836390/joshlf"}, "edited": false, "score": 0, "creation_date": 1491935079, "post_id": 43352134, "comment_id": 73770266, "body": "I literally just submitted an issue two hours ago proposing a <code>debug</code> macro: <a href=\"https://github.com/rust-lang/rust/issues/41223\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/41223</a>. It&#39;d be good to show that there are other people who&#39;d use that feature."}], "answers": [{"tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 2, "last_activity_date": 1491930721, "creation_date": 1491930721, "answer_id": 43352283, "question_id": 43352134, "link": "https://stackoverflow.com/questions/43352134/how-do-i-create-a-rust-function-or-macro-for-debugging-that-gets-optimized-away/43352283#43352283", "title": "How do I create a Rust function or macro for debugging that gets optimized away in a release build?", "body": "<p>In release mode the function will be expanded to <code>if false { \u2026 }</code> which is very trivial to optimize away, so yes you could just use it as-is.</p>\n\n<hr>\n\n<p>If you are being paranoid you could <code>#[cfg]</code> two functions like</p>\n\n<pre><code>#[cfg(debug_assertions)]\npub fn debug_panic_on_errors() { \n    get_errors().unwrap();\n}\n\n#[cfg(not(debug_assertions))]\npub fn debug_panic_on_errors() {\n}\n</code></pre>\n\n<p>so that the outcome is chosen during parsing, to ensure we don't rely on the optimizer. But I don't really recommend this...</p>\n"}], "owner": {"reputation": 1346, "user_id": 461088, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DaUqG.jpg?s=128&g=1", "display_name": "Daan", "link": "https://stackoverflow.com/users/461088/daan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 0, "accepted_answer_id": 43352283, "answer_count": 1, "score": 0, "last_activity_date": 1491930900, "creation_date": 1491930193, "last_edit_date": 1491930900, "question_id": 43352134, "link": "https://stackoverflow.com/questions/43352134/how-do-i-create-a-rust-function-or-macro-for-debugging-that-gets-optimized-away", "title": "How do I create a Rust function or macro for debugging that gets optimized away in a release build?", "body": "<p>In a debug build, I want to check for OpenGL errors after almost every OpenGL call to ease debugging. As this is a costly operation, I don't want to do it in a release build. Right now I'm using functions like:</p>\n\n<pre><code>pub fn debug_panic_on_errors() {\n    if cfg!(debug_assertions) {\n        get_errors().unwrap();\n    }\n}\n</code></pre>\n\n<p>Am I correct in assuming that this method will always be optimized away completely? Is there a better, more future-proof way?</p>\n"}, {"tags": ["rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 405, "user_id": 2635850, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/39a57604c381b02500ba3306bd484597?s=128&d=identicon&r=PG", "display_name": "EFTH", "link": "https://stackoverflow.com/users/2635850/efth"}, "edited": false, "score": 0, "creation_date": 1491930619, "post_id": 43350455, "comment_id": 73767557, "body": "I got it working using mem::uninitialized(). But I get a warning from the compiler. I updated the question with more info."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 405, "user_id": 2635850, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/39a57604c381b02500ba3306bd484597?s=128&d=identicon&r=PG", "display_name": "EFTH", "link": "https://stackoverflow.com/users/2635850/efth"}, "edited": false, "score": 0, "creation_date": 1491930729, "post_id": 43350455, "comment_id": 73767632, "body": "@EFTH I&#39;ve already addressed that. See the part of my answer talking about &quot;zero size&quot;. If you have a <i>opaque pointer</i>, then see the 3 linked questions."}, {"owner": {"reputation": 2973, "user_id": 4759433, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/852b4ff0da6c52d5c1b915f50c14de91?s=128&d=identicon&r=PG", "display_name": "Lonami", "link": "https://stackoverflow.com/users/4759433/lonami"}, "edited": false, "score": 0, "creation_date": 1577482255, "post_id": 43350455, "comment_id": 105184988, "body": "Note that <code>std::mem::uninitialized</code> is <i>Deprecated since 1.39.0: use <code>mem::MaybeUninit</code> instead</i>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1577892489, "last_edit_date": 1577892489, "creation_date": 1491925034, "answer_id": 43350455, "question_id": 43350167, "link": "https://stackoverflow.com/questions/43350167/how-do-i-initialize-an-opaque-c-struct-when-using-rust-ffi/43350455#43350455", "title": "How do I initialize an opaque C struct when using Rust FFI?", "body": "<p>The safest answer is to initialize the struct yourself:</p>\n\n<pre><code>let mut x: some_lib_struct_t = some_lib_struct_t;\nunsafe {\n    some_lib_func(&amp;mut x);\n}\n</code></pre>\n\n<p>The closest analog to the C code is to use <a href=\"https://doc.rust-lang.org/std/mem/union.MaybeUninit.html\" rel=\"nofollow noreferrer\"><code>MaybeUninit</code></a></p>\n\n<pre><code>use std::mem::MaybeUninit;\n\nunsafe {\n    let mut x = MaybeUninit::uninit();\n    some_lib_func(x.as_mut_ptr());\n}\n</code></pre>\n\n<p>Before Rust 1.36, you can use <a href=\"https://doc.rust-lang.org/std/mem/fn.uninitialized.html\" rel=\"nofollow noreferrer\"><code>mem::uninitialized</code></a>:</p>\n\n<pre><code>unsafe {\n    let mut x: some_lib_struct_t = std::mem::uninitialized();\n    some_lib_func(&amp;mut x);\n}\n</code></pre>\n\n<p>You <strong>have to be sure</strong> that <code>some_lib_func</code> completely initializes all the members of the struct, otherwise the unsafety will leak outside of the <code>unsafe</code> block. </p>\n\n<p>Speaking of \"members of the struct\", I can almost guarantee your code won't do what you want. You've defined <code>some_lib_struct_t</code> as having zero size. That means that no stack space will be allocated for it, and a reference to it won't be what your C code is expecting. </p>\n\n<p>You need to mirror the definition of the C struct in Rust so that the appropriate size, padding, and alignment can be allocated. Usually, this means using <code>repr(C)</code>.</p>\n\n<p>Many times, C libraries avoid exposing their internal struct representation by always returning a pointer to the opaque type:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/38315383/155423\">What&#39;s the Rust idiom to define a field pointing to a C opaque pointer?</a></li>\n<li><a href=\"https://stackoverflow.com/q/22116547/155423\">In Rust how can I define or import a C struct from a third party library?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28154683/155423\">Allocating an object for C / FFI library calls</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1555100935, "creation_date": 1555100935, "answer_id": 55659022, "question_id": 43350167, "link": "https://stackoverflow.com/questions/43350167/how-do-i-initialize-an-opaque-c-struct-when-using-rust-ffi/55659022#55659022", "title": "How do I initialize an opaque C struct when using Rust FFI?", "body": "<p>After reading <a href=\"https://stackoverflow.com/a/43350455/155423\">Shepmaster's answer</a>, I looked closer at the header for the library. Just as they said, <code>some_lib_struct_t</code> was just a typedef for a pointer to <code>actual_lib_struct_t</code>. I made the following changes:</p>\n\n<pre><code>extern crate libc;\n\nstruct actual_lib_struct_t;\ntype some_lib_type_t = *mut actual_lib_struct_t;\n\n#[link(name=\"some_lib\")]\nextern {\n    fn some_lib_func(x: *mut some_lib_type_t);\n}\n\nfn main() {\n    let mut x: some_lib_type_t;\n    unsafe {\n        x = std::mem::uninitialized();\n        some_lib_func(&amp;mut x);\n    }\n}\n</code></pre>\n\n<p>And it works! I do however get the warning <code>found zero-size struct in foreign module, consider adding a member to this struct, #[warn(improper_ctypes)] on by default</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 2973, "user_id": 4759433, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/852b4ff0da6c52d5c1b915f50c14de91?s=128&d=identicon&r=PG", "display_name": "Lonami", "link": "https://stackoverflow.com/users/4759433/lonami"}, "is_accepted": false, "score": 1, "last_activity_date": 1577482810, "creation_date": 1577482810, "answer_id": 59506276, "question_id": 43350167, "link": "https://stackoverflow.com/questions/43350167/how-do-i-initialize-an-opaque-c-struct-when-using-rust-ffi/59506276#59506276", "title": "How do I initialize an opaque C struct when using Rust FFI?", "body": "<p>From the documentation for <a href=\"https://doc.rust-lang.org/std/mem/fn.uninitialized.html\" rel=\"nofollow noreferrer\"><code>mem::uninitialized()</code></a>:</p>\n\n<blockquote>\n  <p>Deprecated since 1.39.0: use <a href=\"https://doc.rust-lang.org/std/mem/union.MaybeUninit.html\" rel=\"nofollow noreferrer\"><code>mem::MaybeUninit</code></a> instead </p>\n</blockquote>\n\n<p>The new solution would look like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::mem::MaybeUninit;\n\nlet instance = unsafe {\n    let mut x: MaybeUninit&lt;some_lib_struct_t&gt; = MaybeUninit::uninit();\n    some_lib_func(x.as_mut_ptr());\n    x.assume_init()\n}\n</code></pre>\n"}], "owner": {"reputation": 405, "user_id": 2635850, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/39a57604c381b02500ba3306bd484597?s=128&d=identicon&r=PG", "display_name": "EFTH", "link": "https://stackoverflow.com/users/2635850/efth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3911, "favorite_count": 1, "accepted_answer_id": 43350455, "answer_count": 3, "score": 12, "last_activity_date": 1577892489, "creation_date": 1491924326, "last_edit_date": 1555101025, "question_id": 43350167, "link": "https://stackoverflow.com/questions/43350167/how-do-i-initialize-an-opaque-c-struct-when-using-rust-ffi", "title": "How do I initialize an opaque C struct when using Rust FFI?", "body": "<p>Here's what I would like to do in C code:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;some_lib.h&gt;\nint main() {\n    some_lib_struct_t x;\n    some_lib_func(&amp;x);\n}\n</code></pre>\n\n<p>How do I make use of the library in Rust? Here's what I've got so far:</p>\n\n<pre><code>extern crate libc; // 0.2.51\n\nstruct some_lib_struct_t;\n\n#[link(name = \"some_lib\")]\nextern \"C\" {\n    fn some_lib_func(x: *mut some_lib_struct_t);\n}\n\nfn main() {\n    let mut x: some_lib_struct_t;\n    unsafe {\n        some_lib_func(&amp;mut x);\n    }\n}\n</code></pre>\n\n<p>When compiling I get an error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0381]: borrow of possibly uninitialized variable: `x`\n  --&gt; src/main.rs:13:23\n   |\n13 |         some_lib_func(&amp;mut x);\n   |                       ^^^^^^ use of possibly uninitialized `x`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 4, "creation_date": 1491919127, "post_id": 43348043, "comment_id": 73759483, "body": "Have you checked the compiled output? I&#39;d expect your &quot;runtime&quot; soultion to be optimized out into a constant."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1491920826, "last_edit_date": 1491920826, "creation_date": 1491920287, "answer_id": 43348604, "question_id": 43348043, "link": "https://stackoverflow.com/questions/43348043/conditional-const-definition-based-on-a-function-call/43348604#43348604", "title": "Conditional const definition based on a function call", "body": "<p>Currently, you cannot define a <code>const</code> or <code>static</code> value based on a function call. That requires the <a href=\"https://github.com/rust-lang/rust/issues/24111\" rel=\"nofollow noreferrer\">const functions feature</a> to be completed.</p>\n\n<p>That being said...</p>\n\n<blockquote>\n  <p>but I want to avoid runtime cost</p>\n</blockquote>\n\n<p><strong>tl;dr</strong> There is no runtime cost here, this is fine.</p>\n\n<p>To avoid runtime cost, you should first ensure that you <em>have</em> runtime cost. To check, I used this code:</p>\n\n<pre><code>#[inline(never)]\nfn bitsint() -&gt; usize {\n    if ((isize::max_value() &gt;&gt; 15) &gt;&gt; 15) &gt;= 1 {\n        12345\n    } else {\n        67890\n    }\n}\n\nfn main() {\n    println!(\"{}\", bitsint());\n}\n</code></pre>\n\n<p>I switched the values to make them easier to find in the assembly. The generated assembly does not have a function <code>bitsint</code>, even though I asked for it to not be inlined. It's hard to stop an optimizing compiler!</p>\n\n<p>In the rest of the assembly, the value <code>67890</code> does not even occur, even though <code>12345</code> does. </p>\n\n<hr>\n\n<p>An alternate solution may be to use <em>conditional compilation</em>. As an untested example:</p>\n\n<pre><code>#[cfg(target_pointer_width = \"64\")]\nconst LUAI_BITSINT: usize = 32;\n#[cfg(not(target_pointer_width = \"64\"))]\nconst LUAI_BITSINT: usize = 16;\n</code></pre>\n\n<p>You could also use a <em>build script</em> to generate Rust code based on whatever conditions you want. This would create a constant that you could then <code>include!</code> into your code.</p>\n"}], "owner": {"reputation": 83, "user_id": 3223171, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/69d75a797baf9fe9831ae1e1cb851d60?s=128&d=identicon&r=PG&f=1", "display_name": "Danilo", "link": "https://stackoverflow.com/users/3223171/danilo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 299, "favorite_count": 0, "accepted_answer_id": 43348604, "answer_count": 1, "score": 0, "last_activity_date": 1491920826, "creation_date": 1491918952, "last_edit_date": 1491919468, "question_id": 43348043, "link": "https://stackoverflow.com/questions/43348043/conditional-const-definition-based-on-a-function-call", "title": "Conditional const definition based on a function call", "body": "<p>I would like to write this C code in Rust:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;limits.h&gt;\n#if ((INT_MAX &gt;&gt; 15) &gt;&gt; 15) &gt;= 1\n#define LUAI_BITSINT    32\n#else\n/* 'int' always must have at least 16 bits */\n#define LUAI_BITSINT    16\n#endif\n</code></pre>\n\n<p>I could create a function returning my <code>BITSINT</code> but I want to avoid runtime cost. I don't know how to express <code>isize::max_value()</code> inside a macro in Rust, is it possible?</p>\n\n<p>This would be my runtime code:</p>\n\n<pre><code>fn bitsint() -&gt; usize {\n    if ((isize::max_value() &gt;&gt; 15) &gt;&gt; 15) &gt;= 1 {\n        32\n    } else {\n        16\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "type-conversion"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491913122, "post_id": 43345446, "comment_id": 73754481, "body": "Can you explain why you say &quot;but that doesn&#39;t seem to be the case&quot;? Otherwise, the proposed duplicate seems to answer all of your questions."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1491918072, "post_id": 43345446, "comment_id": 73758565, "body": "Deref coercion may be a confusing mechanism. Calling it shenanigans sounds like you are underestimating it. :P"}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491919241, "post_id": 43345446, "comment_id": 73759567, "body": "@Shepmaster I&#39;ve looked into Slice, Array, Deref doesn&#39;t list the coercion. Where exactly is it listed?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1491920255, "post_id": 43345446, "comment_id": 73760351, "body": "@DanielFath The answer to the duplicate states this, verbatim: &quot;1. where something expects a &amp;[T] and you give it a &amp;[T; n] it will coerce silently;&quot;"}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1491921019, "post_id": 43345446, "comment_id": 73760970, "body": "@E_net4, assuming kennytm is right (and RustNomicon is correct), the right answer is Unsize coercion, <i>not</i> Deref coercion."}], "answers": [{"tags": [], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "is_accepted": false, "score": 1, "last_activity_date": 1510414593, "last_edit_date": 1510414593, "creation_date": 1491921616, "answer_id": 43349115, "question_id": 43345446, "link": "https://stackoverflow.com/questions/43345446/why-is-rust-converting-u8-2-into-u8/43349115#43349115", "title": "Why is Rust converting &amp;[&amp;u8; 2] into &amp;[&amp;u8]?", "body": "<p>The answer I was looking for is <a href=\"https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\" rel=\"nofollow noreferrer\"><code>CoerceUnsized</code></a>.</p>\n\n<p>Based on <a href=\"https://stackoverflow.com/questions/30794235/what-is-the-difference-between-slice-and-array\">kennytm's answer</a> and assuming the <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">Rustnomicon is correct</a>, <code>&amp;[&amp;T; n]</code> is coerced into <code>&amp;[T]</code>, using <a href=\"https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\" rel=\"nofollow noreferrer\"><code>CoerceUnsized</code></a>. The relevant parts:</p>\n\n<blockquote>\n  <p>Coercion is allowed between the following types:</p>\n  \n  <ul>\n  <li>Unsizing: T to U if T implements CoerceUnsized</li>\n  </ul>\n  \n  <p><code>CoerceUnsized&lt;Pointer&lt;U&gt;&gt; for Pointer&lt;T&gt; where T: Unsize&lt;U&gt;</code> is\n  implemented for all pointer types (including smart pointers like <code>Box</code>\n  and <code>Rc</code>). Unsize is only implemented automatically, and enables the\n  following transformations:</p>\n  \n  <ul>\n  <li><code>[T; n]</code> => <code>[T]</code></li>\n  <li><code>T</code> => <code>Trait</code> where <code>T: Trait</code></li>\n  </ul>\n</blockquote>\n"}], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "closed_date": 1491922669, "answer_count": 1, "score": 1, "last_activity_date": 1510414593, "creation_date": 1491912430, "last_edit_date": 1491912809, "question_id": 43345446, "link": "https://stackoverflow.com/questions/43345446/why-is-rust-converting-u8-2-into-u8", "closed_reason": "Duplicate", "title": "Why is Rust converting &amp;[&amp;u8; 2] into &amp;[&amp;u8]?", "body": "<p>How and why does Rust convert <code>&amp;[&amp;u8; 2]</code> to <code>&amp;[&amp;u8]</code> in this code? I thought originally it must be doing some kind of <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code></a> shenanigans, but that doesn't seem to be the case.</p>\n\n<pre><code>struct Example&lt;'a, 'b: 'a&gt; {\n    params: &amp;'a [&amp;'b u8],\n}\n\nfn main() {\n    let a = 2u8;\n    let b = 3u8;\n    let x = &amp;[&amp;a, &amp;b];\n    let st = Example { params: x };\n    println!(\" Size of x: {} \", std::mem::size_of_val(&amp;x));\n    println!(\" Size of &amp;[&amp;u8; 2]: {} \", std::mem::size_of::&lt;&amp;[&amp;u8; 2]&gt;());\n    println!(\" Size of Example: {} \", std::mem::size_of::&lt;Example&gt;());\n}\n\n// Console out:\n// Size of x: 8\n// Size of &amp;[&amp;u8; _]: 8\n// Size of Example: 16\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=cd06f4c4bbe7afd03359b7fb27a0351f&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["debugging", "rust", "backtrace", "panic"], "comments": [{"owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491882293, "post_id": 43335937, "comment_id": 73736566, "body": "Well, i figured it out. it was on line 334 gg. Anyways, you should post an answer and i&#39;ll give you the best answer if you want."}], "answers": [{"comments": [{"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 1, "creation_date": 1492013337, "post_id": 43339593, "comment_id": 73811514, "body": "Rust backtraces <a href=\"https://users.rust-lang.org/t/improvement-of-rust-backtrace-merged-on-latest-nightlies/9735\" rel=\"nofollow noreferrer\">are getting better</a>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 0, "creation_date": 1492014023, "post_id": 43339593, "comment_id": 73811916, "body": "@PavelStrakhov Sweet :3 the current back traces are rather... ugly. I will update my answer once this hits stable, which should be in 2 weeks (I think)."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1491896327, "creation_date": 1491896327, "answer_id": 43339593, "question_id": 43335937, "link": "https://stackoverflow.com/questions/43335937/what-is-rust-backtrace-supposed-to-tell-me/43339593#43339593", "title": "What is RUST_BACKTRACE supposed to tell me?", "body": "<h3>What is a stack trace?</h3>\n\n<p>If your program panics, you encountered a bug and would like to fix it; a stack trace wants to help you here. When the panic happens, you would like to know the cause of the panic (the function in which the panic was triggered). But the function directly triggering the panic is usually not enough to really see what's going on. Therefore we also print the function that called the previous function... and so on. We trace back all function calls leading to the panic up to <code>main()</code> which is (pretty much) the first function being called.</p>\n\n<h3>What are debug symbols?</h3>\n\n<p>When the compiler generates the machine code, it pretty much only needs to emit instructions for the CPU. The problem is that it's virtually impossible to quickly see from which Rust-function a set of instructions came. Therefore the compiler can insert additional information into the executable that is ignored by the CPU, but is used by debugging tools. </p>\n\n<p>One important part are file locations: the compiler annotates which instruction came from which file at which line. This also means that we can later see where a specific function is defined. If we don't have debug symbols, we can't.</p>\n\n<p>In your stack trace you can see a few file locations:</p>\n\n<pre><code>1: 0x800c05b5 - std::sys::imp::backtrace::tracing::imp::write::hf33ae72d0baa11ed\n        at /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:42\n</code></pre>\n\n<p>The Rust standard library is shipped with debug symbols. As such, we can see where the function is defined (<code>gcc_s.rs</code> line 42). </p>\n\n<p>If you compile in debug mode (<code>rustc</code> or <code>cargo build</code>), debug symbols are activated by default. If you, however, compile in release mode (<code>rustc -O</code> or <code>cargo build --release</code>), debug symbols are disabled by default as they increase the executable size and... usually aren't important for the end user. You can tweak whether or not you want debug symbols in your <code>Cargo.toml</code> in a specific <a href=\"http://doc.crates.io/manifest.html#the-profile-sections\" rel=\"noreferrer\"><code>profile</code> section</a> with the <code>debug</code> key.</p>\n\n<h3>What are all these strange functions?!</h3>\n\n<p>When you first look at a stack trace you might be confused by all the strange function names you're seeing. Don't worry, this is normal! You are interested in what part of <em>your</em> code triggered the panic, but the stack trace shows all functions somehow involved. In your example, you can ignore the first 9 entries: those are just functions handling the panic and generating the exact message you are seeing.</p>\n\n<p>Entry 10 is still not your code, but might be interesting as well: the panic was triggered in the <code>index()</code> function of <code>Vec&lt;T&gt;</code> which is called when you use the <code>[]</code> operator. And finally, entry 11 shows a function <em>you</em> defined. But you might have noticed that this entry is missing a file location... the above section describes how to fix that.</p>\n\n<hr>\n\n<h2>What do to with a stack trace? (tl;dr)</h2>\n\n<ol>\n<li><strong>Activate debug symbols</strong> if you haven't already (e.g. just compile in debug mode).</li>\n<li><strong>Ignore any functions from <code>std</code> and <code>core</code></strong> at the top of the stack trace.</li>\n<li>Look at <strong>the first function you defined</strong>, find the corresponding location in your file and fix the bug.</li>\n<li>If you haven't already, change all <code>camelCase</code> function and method names to <code>snake_case</code> to stick to the community wide style guide.</li>\n</ol>\n"}], "owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2761, "favorite_count": 0, "accepted_answer_id": 43339593, "answer_count": 1, "score": 3, "last_activity_date": 1491912664, "creation_date": 1491878782, "last_edit_date": 1491912664, "question_id": 43335937, "link": "https://stackoverflow.com/questions/43335937/what-is-rust-backtrace-supposed-to-tell-me", "title": "What is RUST_BACKTRACE supposed to tell me?", "body": "<p>My program is panicking so I followed its advice to run <code>RUST_BACKTRACE=1</code> and I get this (just a little snippet). </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1: 0x800c05b5 - std::sys::imp::backtrace::tracing::imp::write::hf33ae72d0baa11ed\n            at /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:42\n\n2: 0x800c22ed - std::panicking::default_hook::{{closure}}::h59672b733cc6a455\n            at /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libstd/panicking.rs:351\n</code></pre>\n\n<p>If the program panics it stops the whole program, so where can I figure out at which line it's panicking on? </p>\n\n<p>Is this line telling me there is a problem at line 42 and line 351?</p>\n\n<p>The whole backtrace is on this image, I felt it would be to messy to copy and paste it here.</p>\n\n<p><a href=\"https://i.stack.imgur.com/beM2m.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/beM2m.png\" alt=\"enter image description here\"></a></p>\n\n<p>I've never heard of a stack trace or a back trace. I'm compiling with warnings, but I don't know what debugging symbols are. </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 13, "last_activity_date": 1491912697, "last_edit_date": 1495542336, "creation_date": 1491894449, "answer_id": 43339003, "question_id": 43335193, "link": "https://stackoverflow.com/questions/43335193/why-does-an-if-without-an-else-always-result-in-as-the-value/43339003#43339003", "title": "Why does an if without an else always result in () as the value?", "body": "<p>For your example, the right question is: \u201cWhat would the value of <code>y</code> be if <code>x</code> is not 5?\u201d. What would happen here?</p>\n\n<pre><code>let x = 3;\nlet y = if x == 5 { 10 };\nprintln!(\"{}\", y);  // what?!\n</code></pre>\n\n<p>You could think that the if-without-else-expression could return an <code>Option&lt;_&gt;</code>, but...</p>\n\n<ol>\n<li>this would mean that the core language depends on yet another library item (those are then called <em>lang items</em>) which everyone tries to avoid</li>\n<li>you don't run into this situation too often</li>\n<li>you can get the same behavior by adding only a little bit of code (<code>Some()</code> &amp; <code>else { None }</code>)</li>\n</ol>\n\n<hr>\n\n<p>In Rust, nearly everything is an expression (with the exception of <code>let</code>-bindings and expressions ending with a semicolon, so called <em>expression statements</em>). And there are a few examples of expressions always returning <code>()</code>, because nothing else makes sense. These include (compound-)assignments (<a href=\"https://stackoverflow.com/a/43058897/2408867\">why?</a>), loops and if-without-else.</p>\n"}], "owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1062, "favorite_count": 0, "accepted_answer_id": 43339003, "answer_count": 1, "score": 5, "last_activity_date": 1491912697, "creation_date": 1491873248, "last_edit_date": 1491873589, "question_id": 43335193, "link": "https://stackoverflow.com/questions/43335193/why-does-an-if-without-an-else-always-result-in-as-the-value", "title": "Why does an if without an else always result in () as the value?", "body": "<p>From this <a href=\"https://doc.rust-lang.org/book/if.html\" rel=\"noreferrer\">tutorial</a>:  </p>\n\n<blockquote>\n  <p>An if without an else always results in () as the value.</p>\n</blockquote>\n\n<p>Why does Rust impose this restriction and doesn't let an <code>if</code> without an <code>else</code> return other values, like this:  </p>\n\n<pre><code>let y = if x == 5 { 10 };\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1491864447, "post_id": 43333835, "comment_id": 73732250, "body": "Are you willing to accept &quot;you can&#39;t&quot; answers? Can we know why you need to have the value in a Cell? Perhaps <code>Deref</code> is not an adequate trait to impl here, but we can&#39;t be sure right now."}, {"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1491864800, "post_id": 43333835, "comment_id": 73732362, "body": "If the answer is &quot;you can&#39;t&quot; then I&#39;ll mark it as such. The value needs to be in a Cell because I require interior mutability here. That being said, whether or not I need a cell is out of scope for the question."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1491872232, "last_edit_date": 1495535447, "creation_date": 1491867428, "answer_id": 43334495, "question_id": 43333835, "link": "https://stackoverflow.com/questions/43333835/implementing-deref-for-a-target-type-held-in-a-cell/43334495#43334495", "title": "Implementing Deref for a target type held in a Cell", "body": "<p><code>Cell</code> allows interior mutability by never allowing you to get an immutable reference to the inner value. <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html#method.get\" rel=\"nofollow noreferrer\"><code>get</code></a> returns a copy of the value, and <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html#method.get_mut\" rel=\"nofollow noreferrer\"><code>get_mut</code></a> only works if you have a mutable reference to start with.</p>\n\n<p>Since all you can get is a value, and there's <a href=\"https://stackoverflow.com/q/32682876/155423\">no way to return a reference to a local value</a>, there's no way to implement <code>Deref</code> for this type.</p>\n\n<hr>\n\n<p>In case you think you can \"trick\" the compiler by using a <code>RefCell</code>, you cannot, but you can wrap the <code>Ref</code> type that it produces:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30281664/155423\">Returning the T borrowed from RefCell&lt;T&gt;</a></li>\n<li><a href=\"https://stackoverflow.com/q/29401626/155423\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a></li>\n</ul>\n"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 43334495, "answer_count": 1, "score": 1, "last_activity_date": 1491872232, "creation_date": 1491863139, "last_edit_date": 1491864912, "question_id": 43333835, "link": "https://stackoverflow.com/questions/43333835/implementing-deref-for-a-target-type-held-in-a-cell", "title": "Implementing Deref for a target type held in a Cell", "body": "<p>I have a struct that I implement <code>Deref</code> on:</p>\n\n<pre><code>pub struct Foo {\n    val: u8,\n}\n\nimpl Deref for Foo {\n    type Target = u8;\n\n    fn deref(&amp;self) -&gt; &amp;u8 {\n        &amp;self.val\n    }\n}\n</code></pre>\n\n<p>I want to change the struct internally so that the value is held in a <code>Cell</code>:</p>\n\n<pre><code>pub struct Foo {\n    val: Cell&lt;u8&gt;,\n}\n</code></pre>\n\n<p>I've naively implemented <code>Deref</code> as follows:</p>\n\n<pre><code>impl Deref for Foo {\n    type Target = u8;\n\n    fn deref(&amp;self) -&gt; &amp;u8 {\n        &amp;self.val.get()\n    }\n}\n</code></pre>\n\n<p>The compiler complains saying <code>&amp;self.val.get() does not live long enough</code>, which <em>mostly</em> makes sense to me (<code>Cell</code> not being a <code>Copy</code> type?), but I have no idea how to get it to compile. I've tried annotating with lifetimes, but what I'm doing doesn't feel intuitively correct and I'm just blindly changing stuff at this point.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491912139, "post_id": 43332514, "comment_id": 73753740, "body": "Can you show your <code>myplugin</code> code as a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>?"}, {"owner": {"reputation": 463, "user_id": 5956418, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/c1e4d59c950208e2ebb83fc021f2278d?s=128&d=identicon&r=PG&f=1", "display_name": "Qoros", "link": "https://stackoverflow.com/users/5956418/qoros"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1492052394, "post_id": 43332514, "comment_id": 73827478, "body": "@kennytm  git@github.com:qorost/rust_macro_plugin.git I just uploaded the example code. Thanks for your attention."}], "owner": {"reputation": 463, "user_id": 5956418, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/c1e4d59c950208e2ebb83fc021f2278d?s=128&d=identicon&r=PG&f=1", "display_name": "Qoros", "link": "https://stackoverflow.com/users/5956418/qoros"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1492052353, "creation_date": 1491856722, "last_edit_date": 1492052353, "question_id": 43332514, "link": "https://stackoverflow.com/questions/43332514/macros-and-rust-compiler-plugin-conflicts", "title": "Macros and Rust compiler plugin conflicts", "body": "<p>I want to develop a <a href=\"https://doc.rust-lang.org/book/compiler-plugins.html#syntax-extensions\" rel=\"nofollow noreferrer\">syntax extension</a> to annotate Rust code; I hope to define a global attribute like <code>#![test]</code>.</p>\n\n<p>My code runs well with a single function declared with <code>#[check]</code>, but when it comes to applying it to all the items declared with <code>#![check]</code>, it prompts with errors resulting from several macros:</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(myplugin)]\n#![check]\n\nstruct AA {\n    x: i32,\n}\n\nmacro_rules! hello_AA {\n    () =&gt; ( AA {x: 3});\n}  \n\nfn main() {\n    let x = hello_AA!();\n    println!(\"x.x = {}\",x.x);\n}\n</code></pre>\n\n<p>The code failed with errors below:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot find macro `hello_AA!` in this scope\n  --&gt; src/main.rs:21:13\n   |\n21 |     let x = hello_AA!();\n   |             ^^^^^^^^\n   |\n   = help: have you added the `#[macro_use]` on the module/import?\n</code></pre>\n\n<p>It seems the macros are not expanded properly when the plugin runs. The error is related to the codes in myplugin, specially the code below:</p>\n\n<pre><code>fn fold_expr(&amp;mut self, e: P&lt;Expr&gt;) -&gt; P&lt;Expr&gt; {\n    //ok with the original\n    //e.map(|e| fold::noop_fold_expr(e, self))\n\n    match e.unwrap() {\n        //This expression cause error\n        e@Expr {node: ExprKind::Mac(_), ..} =&gt; {\n            let expanded = self.cx.expander().fold_expr(P(e));\n            self.fold_expr(expanded)\n        }\n        e =&gt; P(fold::noop_fold_expr(e,self)),\n    }\n}\n</code></pre>\n\n<p>An code illustrating this:\n<code>git clone git@github.com:qorost/rust_macro_plugin.git</code></p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1491849995, "post_id": 43330616, "comment_id": 73725645, "body": "The point here is that you&#39;re returning an <code>&amp;str</code> that&#39;s owned by <i>someone</i>. The compiler wants an idea of who that someone is, so it can know how long the memory that you <code>&amp;str</code> points to is expected to live. You need to tell the compiler &quot;the <code>&amp;str</code> I&#39;m returning will live as long as the references that are passed in&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "edited": false, "score": 0, "creation_date": 1491851639, "post_id": 43330728, "comment_id": 73726586, "body": "Ah thank you kind sir. I know i should read the book but I&#39;m more of a do code first, ask questions later type of guy. As you can see, my type inference is procrastination.  I know it&#39;s very bad practice and should fix my habits. Thanks"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "edited": false, "score": 0, "creation_date": 1491908698, "post_id": 43330728, "comment_id": 73751257, "body": "@bossrevs: I know the feeling; when I see a programming language &quot;book&quot; starting with pages upon pages of <i>syntax</i>, I feel like I need to throw up. It&#39;s boring, uninteresting, and I&#39;ll pick this stuff up naturally as I go. The new <a href=\"http://rust-lang.github.io/book/second-edition/index.html\" rel=\"nofollow noreferrer\">Rust Book, 2nd edition</a> is different though; it&#39;s very much a hands-on experience, with examples as you go. I really recommend checking it out, at least until the ownership/borrowing chapter (2nd meaty chapter)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1491859850, "last_edit_date": 1495540937, "creation_date": 1491849930, "answer_id": 43330728, "question_id": 43330616, "link": "https://stackoverflow.com/questions/43330616/how-do-i-fix-a-missing-lifetime-specifier/43330728#43330728", "title": "How do I fix a missing lifetime specifier?", "body": "<p>By <em>specifying a lifetime</em>:</p>\n\n<pre><code>fn is_same_space&lt;'a&gt;(x: &amp;'a str, y1: i32, p: i32, vector: &amp;'a Vec&lt;(&amp;'a str, i32, i32)&gt;) -&gt; (&amp;'a str)\n</code></pre>\n\n<p>This is only one of many possible interpretations of what you might have meant for the function to do, and as such it's a very conservative choice - it uses a unified lifetime of all the referenced parameters.</p>\n\n<p>Perhaps you wanted to return a string that lives as long as <code>x</code> or as long as <code>vector</code> or as long as the strings inside <code>vector</code>; all of those are potentially valid.</p>\n\n<hr>\n\n<p>I <strong>strongly recommend</strong> that you go back and re-read <a href=\"https://doc.rust-lang.org/stable/book\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a>. It's free, and aimed at beginners to Rust, and it covers all the things that make Rust unique and are new to programmers. Many people have spent <em>a lot</em> of time on this book and it answers <em>many</em> beginner questions such as this one.</p>\n\n<p>Specifically, you should read the chapters on:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/stable/book/ownership.html\" rel=\"noreferrer\">ownership</a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/book/references-and-borrowing.html\" rel=\"noreferrer\">references and borrowing</a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/book/lifetimes.html\" rel=\"noreferrer\">lifetimes</a></li>\n</ul>\n\n<p>There's even a <a href=\"http://rust-lang.github.io/book/second-edition/index.html\" rel=\"noreferrer\">second edition in the works</a>, with chapters like:</p>\n\n<ul>\n<li><a href=\"http://rust-lang.github.io/book/second-edition/ch04-00-understanding-ownership.html\" rel=\"noreferrer\">Understanding Ownership</a></li>\n<li><a href=\"http://rust-lang.github.io/book/second-edition/ch10-00-generics.html\" rel=\"noreferrer\">Generic Types, Traits, and Lifetimes</a></li>\n</ul>\n\n<hr>\n\n<p>For fun, I'd rewrite your code using iterators:</p>\n\n<pre><code>fn is_same_space&lt;'a&gt;(y1: i32, vector: &amp;[(&amp;'a str, i32, i32)]) -&gt; &amp;'a str {\n    vector.iter()\n        .rev() // start from the end\n        .filter(|item| item.1 == y1) // element that matches\n        .map(|item| item.0) // first element of the tuple\n        .next() // take the first (from the end)\n        .unwrap_or(\"\") // Use a default value\n}\n</code></pre>\n\n<ul>\n<li>Removed the unneeded parameters.</li>\n<li>Using an iterator avoids the overhead of bounds checks, and more clearly exposes your intent.</li>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String) or Vec (&amp;Vec) as a function argument?</a></li>\n<li>Rust does not use <code>camelCase</code> variable names.</li>\n<li>I assume that you do want to return the string from inside <code>vector</code>.</li>\n<li>Remove the redundant parens on the return type</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491852510, "post_id": 43330779, "comment_id": 73727020, "body": "<code>&amp;Vec&lt;(&amp;&#39;a str, i32, i32)&gt;</code> (or better, <code>&amp;[(&amp;&#39;a str, i32, i32)]</code>, see <a href=\"http://stackoverflow.com/q/40006219/155423\">stackoverflow.com/q/40006219/155423</a>) should be enough. The lifetime of the container is inconsequential."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491852587, "post_id": 43330779, "comment_id": 73727077, "body": "@Shepmaster Thanks for the suggestion, I hadn&#39;t thought of using a slice instead.  I&#39;m still fairly new to rust and trying to learn.  I figure that I learned a lot of Haskell by answering questions, so I should do the same with Rust.  Looks like it&#39;s working already =)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491852662, "post_id": 43330779, "comment_id": 73727129, "body": "I updated that comment with a link to the &quot;why&quot;. I started answering Rust questions for the same reason, so I understand where you are coming from!"}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": false, "score": 2, "last_activity_date": 1491850104, "creation_date": 1491850104, "answer_id": 43330779, "question_id": 43330616, "link": "https://stackoverflow.com/questions/43330616/how-do-i-fix-a-missing-lifetime-specifier/43330779#43330779", "title": "How do I fix a missing lifetime specifier?", "body": "<p>So the problem comes from the fact that <code>vector</code> has two inferred lifetimes, one for <code>vector</code> itself (the <code>&amp;Vec</code> part) and one for the <code>&amp;str</code> inside the vector.  You also have an inferred lifetime on <code>x</code>, but that really inconsequential.</p>\n\n<p>To fix it, just specify that the returned <code>&amp;str</code> lives as long as the <code>&amp;str</code> in the vector:</p>\n\n<pre><code>fn is_same_space&lt;'a&gt;(                        // Must declare the lifetime here\n    x: &amp;str,                                 // This borrow doesn't have to be related (x isn't even used)\n    y1: i32,                                 // Not borrowed\n    p: i32,                                  // Not borrowed or used\n    vector: &amp;'a Vec&lt;(&amp;'a str, i32, i32)&gt;     // Vector and some of its data are borrowed here\n) -&gt; &amp;'a str {                               // This tells rustc how long the return value should live\n    ...\n}\n</code></pre>\n"}], "owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8919, "favorite_count": 2, "accepted_answer_id": 43330728, "answer_count": 2, "score": 6, "last_activity_date": 1493594303, "creation_date": 1491849610, "last_edit_date": 1493594303, "question_id": 43330616, "link": "https://stackoverflow.com/questions/43330616/how-do-i-fix-a-missing-lifetime-specifier", "title": "How do I fix a missing lifetime specifier?", "body": "<p>I have a very simple method. The first argument takes in vector components (\"A\", 5, 0) and I will compare this to every element of another vector to see if they have the same ( _ , 5 , _) and then print out the found element's string.</p>\n\n<p>Comparing (\"A\", 5, 0 ) and (\"Q\", 5, 2) should print out Q.</p>\n\n<pre><code>fn is_same_space(x: &amp;str, y1: i32, p: i32, vector: &amp;Vec&lt;(&amp;str, i32, i32)&gt;) -&gt; (&amp;str) {\n    let mut foundString = \"\";\n\n    for i in 0..vector.len() {\n\n        if y1 == vector[i].1 {\n            foundString = vector[i].0;\n        }\n\n    }\n    foundString    \n}\n</code></pre>\n\n<p>However, I get this error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:1:80\n  |\n1 | fn is_same_space(x: &amp;str, y1: i32, p: i32, vector: &amp;Vec&lt;(&amp;str, i32, i32)&gt;) -&gt; (&amp;str) {\n  |                                                                                ^ expected lifetime parameter\n  |\n  = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or one of `vector`'s 2 elided lifetimes\n</code></pre>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1491853774, "post_id": 43328953, "comment_id": 73727737, "body": "If you really want to use <code>u8</code> and <code>u128</code> respectively, why not make an <code>pub enum Prefix { V4(u8), V6(u128) }</code> and return that instead?"}], "answers": [{"tags": [], "owner": {"reputation": 275, "user_id": 7762670, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/gRcks.png?s=128&g=1", "display_name": "Sogomn", "link": "https://stackoverflow.com/users/7762670/sogomn"}, "is_accepted": false, "score": -1, "last_activity_date": 1491844039, "creation_date": 1491844039, "answer_id": 43329104, "question_id": 43328953, "link": "https://stackoverflow.com/questions/43328953/generalizing-a-function-for-an-enum/43329104#43329104", "title": "Generalizing a function for an enum", "body": "<p>As far as I know the standard library doesn't hold functionality for generic numeric types. You could, however, define a trait and implement it for <code>u8</code> and <code>u128</code>.\nAlso, there is the <a href=\"https://crates.io/crates/num\" rel=\"nofollow noreferrer\">num</a> crate, which does basically that.</p>\n"}, {"tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": false, "score": 0, "last_activity_date": 1491855107, "creation_date": 1491855107, "answer_id": 43332167, "question_id": 43328953, "link": "https://stackoverflow.com/questions/43328953/generalizing-a-function-for-an-enum/43332167#43332167", "title": "Generalizing a function for an enum", "body": "<p>So you want a prefix function that operates on the <code>IpNetwork</code> type, but are unsure what the return type should be. Below is a possible approach you could follow.</p>\n\n<h2>The argument against using an enum</h2>\n\n<p>As bheklilr mentioned in a comment, one of the alternatives is introducing an enum: <code>pub enum Prefix { V4(u8), V6(u128) }</code>.</p>\n\n<p>This could make sense depending on your use case, but it seems like overkill to me here. In the end, you would end up pattern matching on the result of your generic <code>prefix</code> function. In that case, you could better pattern match on the <code>IpNetwork</code> object itself and call its corresponding <code>prefix</code> function.</p>\n\n<h1>The case for <code>u128</code></h1>\n\n<p>If you just want to obtain the integer value and don't need to differentiate between IPV4 and IPV6, returning an integer seems to be the way to go. A <code>u8</code> can be casted to <code>u128</code> without any problem and the overhead is negligible.</p>\n"}], "owner": {"reputation": 2308, "user_id": 1120799, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/IRCQ4.jpg?s=128&g=1", "display_name": "Abhishek Chanda", "link": "https://stackoverflow.com/users/1120799/abhishek-chanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 153, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1491855107, "creation_date": 1491843485, "question_id": 43328953, "link": "https://stackoverflow.com/questions/43328953/generalizing-a-function-for-an-enum", "title": "Generalizing a function for an enum", "body": "<p>I have an enum that looks like this</p>\n\n<pre><code>pub enum IpNetwork {\n    V4(Ipv4Network),\n    V6(Ipv6Network),\n}\n</code></pre>\n\n<p>Each of those variants represents either a IPv4 or v6 CIDR. Now, <code>Ipv4Network</code> and <code>Ipv6Network</code> each has a method to get the prefix defined like this</p>\n\n<pre><code>// For Ipv4Network\npub fn prefix(&amp;self) -&gt; u8\n// For Ipv6Network\npub fn prefix(&amp;self) -&gt; u128\n</code></pre>\n\n<p>How do I generalize the prefix method for the <code>IpNetwork</code> enum? I know that I can just have <code>u128</code> as the return type, but is that approach idiomatic?</p>\n"}, {"tags": ["recursion", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 403, "user_id": 1935361, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e1b127d480162b1c628aef4fa30e02dd?s=128&d=identicon&r=PG&f=1", "display_name": "user1935361", "link": "https://stackoverflow.com/users/1935361/user1935361"}, "edited": false, "score": 0, "creation_date": 1491842120, "post_id": 43328452, "comment_id": 73721351, "body": "Just as a side-note -- I believe you&#39;re allowed to declare your <code>Tree</code> struct as containing a <code>Vec&lt;Tree&gt;</code> rather than a <code>Vec&lt;Box&lt;Tree&gt;&gt;</code>. I&#39;m unsure why...I guess it&#39;s since a <code>Vec</code>&#39;s size isn&#39;t dependent on the size of its generic argument (since it holds only a pointer?)"}, {"owner": {"reputation": 665, "user_id": 376854, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/8gSX9.jpg?s=128&g=1", "display_name": "foldl", "link": "https://stackoverflow.com/users/376854/foldl"}, "reply_to_user": {"reputation": 403, "user_id": 1935361, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e1b127d480162b1c628aef4fa30e02dd?s=128&d=identicon&r=PG&f=1", "display_name": "user1935361", "link": "https://stackoverflow.com/users/1935361/user1935361"}, "edited": false, "score": 0, "creation_date": 1491842625, "post_id": 43328452, "comment_id": 73721640, "body": "Ah yes, my actual code had an array of children rather than a vector, so using Box was necessary, but you&#39;re right, there&#39;s actually no need for the Box in my example code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491844701, "post_id": 43328452, "comment_id": 73722710, "body": "Could you explain why this isn&#39;t a duplicate of <a href=\"http://stackoverflow.com/q/37986640\">stackoverflow.com/q/37986640</a> or <a href=\"http://stackoverflow.com/q/37904071\">stackoverflow.com/q/37904071</a> or <a href=\"http://stackoverflow.com/q/29711348\">stackoverflow.com/q/29711348</a> or <a href=\"http://stackoverflow.com/q/36167160\">stackoverflow.com/q/36167160</a> or <a href=\"http://stackoverflow.com/q/28767108\">stackoverflow.com/q/28767108</a> or  <a href=\"http://stackoverflow.com/q/26563762\">stackoverflow.com/q/26563762</a>? As you can see, <b>many people</b> have asked similar questions; all of these were found with the search terms &quot;rust mutable reference tree&quot;. You are <a href=\"https://meta.stackoverflow.com/q/261592/155423\">expected to show a lot of effort</a> when asking a question, and looking at existing questions is the <i>bare minimum</i> effort."}, {"owner": {"reputation": 665, "user_id": 376854, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/8gSX9.jpg?s=128&g=1", "display_name": "foldl", "link": "https://stackoverflow.com/users/376854/foldl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491844780, "post_id": 43328452, "comment_id": 73722749, "body": "@Shepmaster. I obviously can&#39;t insert an explanation for every one of the questions in that long list, but I have looked at all of them and verified that my question is not a duplicate. (Most of them focus on the problem of having pointers to both parent and child nodes.) Also, you should not presume that I have not made an effort or looked at existing questions."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491845051, "post_id": 43328452, "comment_id": 73722907, "body": "Ok. As described in the 3 linked duplicates: <code>n = {n}.children[0].as_mut();</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491845373, "post_id": 43328452, "comment_id": 73723103, "body": "And, FWIW, I&#39;m encouraging you to <b>put in your original question</b> related things that you&#39;ve already tried and <i>why they don&#39;t work</i>. Linking to other SO questions is ideal. Putting it in the question is the only way to <i>demonstrate</i> that you&#39;ve done the research and aren&#39;t just asking for us to write your code for you.  It also shows us what you do and don&#39;t understand so that part can be clarified, potentially adding value. Unfortunately for you, we do presume that every asker has put no effort... because it&#39;s true for the vast majority of people."}, {"owner": {"reputation": 665, "user_id": 376854, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/8gSX9.jpg?s=128&g=1", "display_name": "foldl", "link": "https://stackoverflow.com/users/376854/foldl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491845436, "post_id": 43328452, "comment_id": 73723142, "body": "@Shepmaster: This is clearly inapplicable in my case, as my original post contained working (but inelegant) code. Either put your answer as the answer or don&#39;t. There is no point in haranguing me in this manner in the comments."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491845783, "post_id": 43328452, "comment_id": 73723353, "body": "You are right; in this case it&#39;s obviously not just a &quot;write my code for me&quot;. I&#39;m combining general advice on how to ask questions on Stack Overflow with advice on this specific question and not being very clear about the difference. The point I&#39;m trying to make is that based on history of a vast number of posters, we (I?) tend to assume that a general poster hasn&#39;t done the initial legwork. You can prevent that by showing us your work up-front. Explaining why other solutions doesn&#39;t work also tends to allow for a better answer as the misconception can be cleared up."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491845880, "post_id": 43328452, "comment_id": 73723400, "body": "Also, if you are angry at me, you&#39;ll find yourself in good company. Most people where I have this much back-and-forth with tend to find me a troll or worse. This is why the vast majority of people who participate in Stack Overflow refrain from commenting. :-("}, {"owner": {"reputation": 665, "user_id": 376854, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/8gSX9.jpg?s=128&g=1", "display_name": "foldl", "link": "https://stackoverflow.com/users/376854/foldl"}, "edited": false, "score": 0, "creation_date": 1491846170, "post_id": 43328452, "comment_id": 73723579, "body": "Not really angry with you Shepmaster, but if I might offer your some advice in return, why not just mark the question as a dupe without the copypasta SO advice? I hate posting on SO precisely because of exchanges like this, so you can be sure that I only do it when I&#39;ve failed to find an existing answer (whether because there isn&#39;t one or because I&#39;ve made a mistake)."}], "owner": {"reputation": 665, "user_id": 376854, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/8gSX9.jpg?s=128&g=1", "display_name": "foldl", "link": "https://stackoverflow.com/users/376854/foldl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1161, "favorite_count": 1, "closed_date": 1491845017, "answer_count": 0, "score": 2, "last_activity_date": 1491845040, "creation_date": 1491841746, "last_edit_date": 1491844635, "question_id": 43328452, "link": "https://stackoverflow.com/questions/43328452/how-to-express-iteration-through-mutable-recursive-data-structure-in-rust", "closed_reason": "Duplicate", "title": "How to express iteration through mutable recursive data structure in Rust", "body": "<p>I\u2019m writing code to iteratively search a recursive data structure such as the following:</p>\n\n<pre><code>struct Tree {\n    payload: i32,\n    children: Vec&lt;Box&lt;Tree&gt;&gt;\n}\n</code></pre>\n\n<p>Suppose that I want to walk down every left branch of the tree and modify every node encountered. For simplicity, I won't include any termination conditions.\nThe following code is not permitted by Rust\u2019s borrow checking rules:</p>\n\n<pre><code>fn traverse(mut n: &amp;mut Tree) {\n    loop {\n        n.payload += 1;\n        n = n.children[0].as_mut();\n    }\n}\n</code></pre>\n\n<p>The only way I have found of expressing this logic so far is the following:</p>\n\n<pre><code>fn traverse(n: &amp;mut Tree) {\n    let mut stack: Vec&lt;&amp;mut Tree&gt; = vec![n];\n    while let Some(x) = stack.pop() {\n        x.payload += 1;\n        stack.push(x.children[0].as_mut())\n    }\n}\n</code></pre>\n\n<p>This works, but the unnecessary pushing/popping isn't very elegant.</p>\n\n<p>Is there a better way of expressing this pattern in safe Rust without\nusing recursion?</p>\n"}, {"tags": ["reference", "rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1491828568, "post_id": 43323250, "comment_id": 73711330, "body": "&quot;Adding an explicit lifetime to the trait itself&quot; is exactly how I&#39;d do it (although probably with just one lifetime). Perhaps you could further explain why you &quot;believe is not intrinsically necessary&quot;, because to me it does seem extremely necessary \u2014 you <i>need</i> to tie a lifetime to the <code>Self</code> type in order to prevent using the reference after the value goes out of scope."}, {"owner": {"reputation": 23991, "user_id": 300805, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/16633fb54ed0f92814a6e07aa536fa0c?s=128&d=identicon&r=PG", "display_name": "peoro", "link": "https://stackoverflow.com/users/300805/peoro"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491829706, "post_id": 43323250, "comment_id": 73712211, "body": "@Shepmaster: oh, you mean <code>trait Trait&lt;&#39;a&gt; { type Value; fn f( &amp;&#39;a self ) -&gt; Self::Value; }</code> ? I was sure that I tried it and it didn&#39;t work, but apparently I&#39;m very wrong.  You&#39;re right anyways, reading your comment and defining the trait without <code>&#39;b</code> made me realize that <code>&#39;a</code> needs to be intrinsic of the trait..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491829802, "post_id": 43323250, "comment_id": 73712295, "body": "Yep, and I&#39;d use <code>impl Trait&lt;&#39;static&gt; for () { ... }</code>, but other than that..."}, {"owner": {"reputation": 403, "user_id": 1935361, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e1b127d480162b1c628aef4fa30e02dd?s=128&d=identicon&r=PG&f=1", "display_name": "user1935361", "link": "https://stackoverflow.com/users/1935361/user1935361"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491829947, "post_id": 43323250, "comment_id": 73712414, "body": "@Shepmaster Why?  Is there any difference in function, or is it a matter of showing intent?  Thanks man, you&#39;re really helpful around here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491830562, "post_id": 43323250, "comment_id": 73712898, "body": "Mmm, thinking a bit more, <code>&#39;static</code> might not work; it might make <i>calling</i> the method actually impossible. Would have to play with it to figure out."}, {"owner": {"reputation": 403, "user_id": 1935361, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e1b127d480162b1c628aef4fa30e02dd?s=128&d=identicon&r=PG&f=1", "display_name": "user1935361", "link": "https://stackoverflow.com/users/1935361/user1935361"}, "edited": false, "score": 0, "creation_date": 1491832178, "post_id": 43323250, "comment_id": 73714188, "body": "I think you&#39;re right -- <a href=\"https://play.rust-lang.org/?gist=09557b8092604be9d9919f2d4b64a53b&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491833253, "post_id": 43323250, "comment_id": 73715066, "body": "@peoro: <i>I&#39;m trying to define a trait with a method that can be implemented to either return a reference or an owned value.</i> =&gt; Iterators do this, the key question however is <b>a reference to what</b>? Is it a reference pointing inside <code>Self</code>, or is it pointing to an unrelated object which <code>Self</code> has a reference to?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 403, "user_id": 1935361, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e1b127d480162b1c628aef4fa30e02dd?s=128&d=identicon&r=PG&f=1", "display_name": "user1935361", "link": "https://stackoverflow.com/users/1935361/user1935361"}, "edited": false, "score": 0, "creation_date": 1491833351, "post_id": 43323250, "comment_id": 73715152, "body": "@user1935361: If you don&#39;t need to bind to <code>Self</code>, it <a href=\"https://play.rust-lang.org/?gist=09557b8092604be9d9919f2d4b64a53b&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">works</a>."}, {"owner": {"reputation": 23991, "user_id": 300805, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/16633fb54ed0f92814a6e07aa536fa0c?s=128&d=identicon&r=PG", "display_name": "peoro", "link": "https://stackoverflow.com/users/300805/peoro"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491834178, "post_id": 43323250, "comment_id": 73715755, "body": "@MatthieuM.: Well, either? In the provided example it&#39;s a reference to an object within <code>self</code> (i.e. <code>&amp;self.0</code>), but I believe that if I wanted to <code>impl&lt;&#39;a&gt; Trait for (&amp;&#39;a Type, )</code> the reference would possibly be <code>self.0</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491847558, "post_id": 43323250, "comment_id": 73724330, "body": "@peoro: I&#39;ve presented my arguments as a solution; it seems easier to make myself understood with code."}], "answers": [{"tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 5, "last_activity_date": 1491847134, "last_edit_date": 1491847134, "creation_date": 1491836465, "answer_id": 43326610, "question_id": 43323250, "link": "https://stackoverflow.com/questions/43323250/trait-method-that-can-be-implemented-to-either-return-a-reference-or-an-owned-va/43326610#43326610", "title": "Trait method that can be implemented to either return a reference or an owned value", "body": "<p>This could be solved using an additional associated object to choose between whether to return a type or a reference, plus some meta-programming magic.</p>\n\n<p>First, some helper types:</p>\n\n<pre><code>struct Value;\nstruct Reference;\n\ntrait ReturnKind&lt;'a, T: ?Sized + 'a&gt; {\n    type Type: ?Sized;\n}\nimpl&lt;'a, T: ?Sized + 'a&gt; ReturnKind&lt;'a, T&gt; for Value {\n    type Type = T;\n}\nimpl&lt;'a, T: ?Sized + 'a&gt; ReturnKind&lt;'a, T&gt; for Reference {\n    type Type = &amp;'a T;\n}\n</code></pre>\n\n<p><code>ReturnKind</code> is a \"type-level function\" which returns <code>T</code> when the \"input\" is <code>Value</code>, and <code>&amp;T</code> for <code>Reference</code>.</p>\n\n<p>And then the trait:</p>\n\n<pre><code>trait Trait {\n    type Value;\n    type Return: for&lt;'a&gt; ReturnKind&lt;'a, Self::Value&gt;;\n\n    fn f&lt;'a&gt;(&amp;'a self) -&gt; &lt;Self::Return as ReturnKind&lt;'a, Self::Value&gt;&gt;::Type;\n}\n</code></pre>\n\n<p>We produce the return type by \"calling\" the type-level function <code>ReturnKind</code>.</p>\n\n<p>The \"input argument\" <code>Return</code> needs to implement the trait to allow us to write <code>&lt;Return as ReturnKind&lt;'a, Value&gt;&gt;</code>. Although we don't know what exactly the lifetime Self will be, we could make <code>Return</code> bound by <em>all</em> possible lifetime using <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">HRTB</a> <code>Return: for&lt;'a&gt; ReturnKind&lt;'a, Value&gt;</code>.</p>\n\n<p>Usage:</p>\n\n<pre><code>impl Trait for () {\n    type Value = f64;\n    type Return = Value;\n\n    fn f(&amp;self) -&gt; f64 {\n        42.0\n    }\n}\n\nimpl Trait for (f64,) {\n    type Value = f64;\n    type Return = Reference;\n\n    fn f(&amp;self) -&gt; &amp;f64 {\n        &amp;self.0\n    }\n}\n\nfn main() {\n    let a: (f64,) = ( ().f(), );\n    let b: &amp;f64 = a.f();\n    println!(\"{:?} {:?}\", a, b);\n    // (42,) 42\n}\n</code></pre>\n\n<hr>\n\n<p>Note that the above only works when the <code>Value</code> type has <code>'static</code> lifetime. If the <code>Value</code> itself has a limited lifetime, this lifetime has to be known by the <code>Trait</code>. Since Rust <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0195-associated-items.md#staging\" rel=\"nofollow noreferrer\">doesn't support associated lifetimes yet</a>, it has to be used like <code>Trait&lt;'foo&gt;</code>, unfortunately:</p>\n\n<pre><code>struct Value;\nstruct Reference;\nstruct ExternalReference;\n\ntrait ReturnKind&lt;'a, 's, T: ?Sized + 'a + 's&gt; {\n    type Type: ?Sized;\n}\nimpl&lt;'a, 's, T: ?Sized + 'a + 's&gt; ReturnKind&lt;'a, 's, T&gt; for Value {\n    type Type = T;\n}\nimpl&lt;'a, 's, T: ?Sized + 'a + 's&gt; ReturnKind&lt;'a, 's, T&gt; for Reference {\n    type Type = &amp;'a T;\n}\nimpl&lt;'a, 's, T: ?Sized + 'a + 's&gt; ReturnKind&lt;'a, 's, T&gt; for ExternalReference {\n    type Type = &amp;'s T;\n}\n\ntrait Trait&lt;'s&gt; {\n    type Value: 's;\n    type Return: for&lt;'a&gt; ReturnKind&lt;'a, 's, Self::Value&gt;;\n\n    fn f&lt;'a&gt;(&amp;'a self) -&gt; &lt;Self::Return as ReturnKind&lt;'a, 's, Self::Value&gt;&gt;::Type;\n}\n\nimpl Trait&lt;'static&gt; for () {\n    type Value = f64;\n    type Return = Value;\n\n    fn f(&amp;self) -&gt; f64 {\n        42.0\n    }\n}\n\nimpl Trait&lt;'static&gt; for (f64,) {\n    type Value = f64;\n    type Return = Reference;\n\n    fn f(&amp;self) -&gt; &amp;f64 {\n        &amp;self.0\n    }\n}\n\nimpl&lt;'a&gt; Trait&lt;'a&gt; for (&amp;'a f64,) {\n    type Value = f64;\n    type Return = ExternalReference;\n\n    fn f(&amp;self) -&gt; &amp;'a f64 {\n        self.0\n    }\n\n}\n\nfn main() {\n    let a: (f64,) = ( ().f(), );\n    let b: &amp;f64 = a.f();\n    let c: &amp;f64 = (b,).f();\n    println!(\"{:?} {:?} {:?}\", a, b, c);\n    // (42,) 42 42\n}\n</code></pre>\n\n<p>But if having the lifetime parameter on the trait is fine, then OP already provided an easier solution:</p>\n\n<pre><code>trait Trait&lt;'a&gt; {\n    type Value;\n    fn f&lt;'b&gt;(&amp;'b self) -&gt; Self::Value where 'b: 'a;\n}\n\nimpl&lt;'a&gt; Trait&lt;'a&gt; for () {\n    type Value = f64;\n    fn f&lt;'b: 'a&gt;(&amp;'b self) -&gt; Self::Value {\n        42.0\n    }\n}\n\nimpl&lt;'a&gt; Trait&lt;'a&gt; for (f64,) {\n    type Value = &amp;'a f64;\n    fn f&lt;'b: 'a&gt;(&amp;'b self) -&gt; Self::Value {\n        &amp;self.0\n    }\n}\nimpl&lt;'a, 's&gt; Trait&lt;'s&gt; for (&amp;'a f64,) {\n    type Value = &amp;'a f64;\n    fn f&lt;'b: 's&gt;(&amp;'b self) -&gt; Self::Value {\n        self.0\n    }\n}\n\nfn main() {\n    let a: (f64,) = ( ().f(), );\n    let b: &amp;f64 = a.f();\n    let c: &amp;f64 = (b,).f();\n    println!(\"{:?} {:?} {:?}\", a, b, c);\n    // (42,) 42 42\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 23991, "user_id": 300805, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/16633fb54ed0f92814a6e07aa536fa0c?s=128&d=identicon&r=PG", "display_name": "peoro", "link": "https://stackoverflow.com/users/300805/peoro"}, "edited": false, "score": 0, "creation_date": 1491954228, "post_id": 43329993, "comment_id": 73778626, "body": "Thanks for the suggestions! To be honest I believe I prefer the solution of using <code>trait Trait&lt;&#39;a&gt; { type Value; fn f( &amp;&#39;a self ) -&gt; Self::Value; }</code>: it&#39;s about as <i>complex</i> to use as what you&#39;re suggesting (anything that uses the trait needs an explicit lifetime in both cases) and doesn&#39;t consume <code>Self</code>, which I prefer. Anyways it&#39;s nice to see alternatives like this one which might be better for other use cases."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 23991, "user_id": 300805, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/16633fb54ed0f92814a6e07aa536fa0c?s=128&d=identicon&r=PG", "display_name": "peoro", "link": "https://stackoverflow.com/users/300805/peoro"}, "edited": false, "score": 0, "creation_date": 1491976689, "post_id": 43329993, "comment_id": 73784766, "body": "@peoro: Note that in the case of implementing <code>Trait</code> for <code>&amp;&#39;a T</code>, consuming self doesn&#39;t matter: <code>&amp;&#39;a T</code> is <code>Copy</code>. I would be wary of <code>Trait&lt;&#39;a&gt; { fn f(&amp;&#39;a self) }</code>, you may accidentally &quot;pin&quot; your objects with this. Use kennytm&#39;s solution of introducing a fresh lifetime for <code>self</code> instead."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1491847522, "last_edit_date": 1495542744, "creation_date": 1491847522, "answer_id": 43329993, "question_id": 43323250, "link": "https://stackoverflow.com/questions/43323250/trait-method-that-can-be-implemented-to-either-return-a-reference-or-an-owned-va/43329993#43329993", "title": "Trait method that can be implemented to either return a reference or an owned value", "body": "<p><em><a href=\"https://stackoverflow.com/users/224671/kennytm\">@kennytm</a> presented an excellent (if complex) solution; I wish to propose a much simpler alternative.</em></p>\n\n<p>There are two possibilities to provide the lifetime name for the value:</p>\n\n<ul>\n<li>at the trait level: <code>trait Trait&lt;'a&gt; { ... }</code></li>\n<li>at the method level: <code>trait Trait { fn f&lt;'a&gt;(&amp;'a self) -&gt; ... }</code></li>\n</ul>\n\n<p>The latter is not well supported by the language, and while more flexible is also quite more complicated. However, it also happens that the former is often enough; and thus without ado I present you:</p>\n\n<pre><code>trait Trait&lt;'a&gt; {\n    type Value;\n    fn f(self) -&gt; Self::Value;\n}\n</code></pre>\n\n<p><code>f</code> consumes its output, this is fine if <code>Self</code> is an immutable reference as those are <code>Copy</code>.</p>\n\n<p>The proof is in the pudding:</p>\n\n<pre><code>struct Type;\n\nimpl Trait&lt;'static&gt; for () {\n    type Value = Type;\n    fn f(self) -&gt; Self::Value {\n        Type\n    }\n}\n\nimpl&lt;'a&gt; Trait&lt;'a&gt; for &amp;'a (Type,) {\n    type Value = &amp;'a Type;\n    fn f(self) -&gt; Self::Value {\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>And it can be invoked without issue:</p>\n\n<pre><code>fn main(){\n   ().f();\n   (Type,).f();\n}\n</code></pre>\n\n<p>This solution is certainly not as flexible; but it's also significantly simpler.</p>\n"}], "owner": {"reputation": 23991, "user_id": 300805, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/16633fb54ed0f92814a6e07aa536fa0c?s=128&d=identicon&r=PG", "display_name": "peoro", "link": "https://stackoverflow.com/users/300805/peoro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1104, "favorite_count": 1, "accepted_answer_id": 43326610, "answer_count": 2, "score": 4, "last_activity_date": 1491847522, "creation_date": 1491827548, "last_edit_date": 1491828194, "question_id": 43323250, "link": "https://stackoverflow.com/questions/43323250/trait-method-that-can-be-implemented-to-either-return-a-reference-or-an-owned-va", "title": "Trait method that can be implemented to either return a reference or an owned value", "body": "<p>I'm trying to define a trait with a method that can be implemented to either return a reference or an owned value.</p>\n\n<p>Something like:</p>\n\n<pre><code>struct Type;\ntrait Trait {\n    type Value;\n    fn f(&amp;self) -&gt; Self::Value;\n}\nimpl Trait for () {\n    type Value = Type;\n    fn f(&amp;self) -&gt; Self::Value {\n        Type\n    }\n}\nimpl Trait for (Type,) {\n    type Value = &amp;Type; // error[E0106]: missing lifetime specifier\n    fn f(&amp;self) -&gt; Self::Value {\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>This piece of code doesn't work though, since <code>&amp;Type</code> is missing a lifetime specifier. I'd want <code>&amp;Type</code> to have the same lifetime as <code>&amp;self</code> (i.e. <code>fn f&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a Type</code>), but I don't know how to express this in Rust.</p>\n\n<p>I managed to find a couple of ways to make this code work, but I don't love either of them:</p>\n\n<ol>\n<li><p>Adding an explicit lifetime to the trait itself:</p>\n\n<pre><code>trait Trait&lt;'a&gt; {\n    type Value;\n    fn f&lt;'b&gt;(&amp;'b self) -&gt; Self::Value where 'b: 'a;\n}\nimpl&lt;'a&gt; Trait&lt;'a&gt; for () {\n    type Value = Type;\n    fn f&lt;'b&gt;(&amp;'b self) -&gt; Self::Value\n        where 'b: 'a\n    {\n        Type\n    }\n}\nimpl&lt;'a&gt; Trait&lt;'a&gt; for (Type,) {\n    type Value = &amp;'a Type;\n    fn f&lt;'b&gt;(&amp;'b self) -&gt; Self::Value\n        where 'b: 'a\n    {\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>What I don't like of this solution is that anything using <code>Trait</code> needs an explicit lifetime (which I believe is not intrinsically necessary), plus the trait seems unnecessarily complicated to implement.</p></li>\n<li><p>Returning something that might or might not be a reference - like <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>std::borrow::Cow</code></a>:</p>\n\n<pre><code>trait Trait {\n    type Value;\n    fn f&lt;'a&gt;(&amp;'a self) -&gt; Cow&lt;'a, Self::Value&gt;;\n}\nimpl Trait for () {\n    type Value = Type;\n    fn f&lt;'a&gt;(&amp;'a self) -&gt; Cow&lt;'a, Self::Value&gt; {\n        Cow::Owned(Type)\n    }\n}\nimpl Trait for (Type,) {\n    type Value = Type;\n    fn f&lt;'a&gt;(&amp;'a self) -&gt; Cow&lt;'a, Self::Value&gt; {\n        Cow::Borrowed(&amp;self.0)\n    }\n}\n</code></pre>\n\n<p>What I don't like of this solution is that <code>().f()</code> is a <code>Cow&lt;_&gt;</code>: I'd need to call <code>().f().into_owned()</code> to obtain my <code>Type</code>. That seems unnecessary (and might result in some negligible run-time overhead when using <code>Trait</code> as a trait object).</p>\n\n<p><sub>Also note that <code>Cow</code> is not good since it requires that <code>Self::Value</code> implements <a href=\"https://doc.rust-lang.org/std/borrow/trait.ToOwned.html\" rel=\"nofollow noreferrer\"><code>ToOwned</code></a> (thus, practically, <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"nofollow noreferrer\"><code>Clone</code></a>), which is too strong of a requirement. It's anyways easy to implement an alternative to <code>Cow</code> without such constraints.</sub></p></li>\n</ol>\n\n<p>Are there any other solutions to this problem? What's the standard/most common/preferred one?</p>\n"}, {"tags": ["windows", "winapi", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "edited": false, "score": 0, "creation_date": 1491828504, "post_id": 43322966, "comment_id": 73711283, "body": "Thanks for the link. It would be great if <code>std::os::windows</code> docs would be part of the public documentation at <a href=\"https://doc.rust-lang.org/std/os/index.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/os/index.html</a> ."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "edited": false, "score": 3, "creation_date": 1491828799, "post_id": 43322966, "comment_id": 73711510, "body": "@blerontin <a href=\"https://github.com/rust-lang/rust/issues/24658\" rel=\"nofollow noreferrer\">yep</a>, people have been wanting that <a href=\"https://github.com/rust-lang/rust/issues/1998\" rel=\"nofollow noreferrer\">for a while</a>. Perhaps that would be a good contribution that you can make to Rust! In the meantime, you probably <a href=\"http://stackoverflow.com/q/27592046/155423\">already have the Windows-specific docs installed locally</a>, so <code>rustup doc</code> will show them to you."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1491826708, "creation_date": 1491826708, "answer_id": 43322966, "question_id": 43322811, "link": "https://stackoverflow.com/questions/43322811/how-to-read-bytes-from-a-windows-file-handle-in-rust/43322966#43322966", "title": "How to read bytes from a Windows file handle in Rust?", "body": "<p>On Windows, there is a platform-specific trait <a href=\"https://github.com/rust-lang/rust/blob/1.16.0/src/libstd/sys/windows/ext/io.rs#L38-L52\" rel=\"nofollow noreferrer\"><code>FromRawHandle</code></a>, which is implemented for <code>std::fs::File</code> and <code>std::process::Stdio</code>.</p>\n\n<p>Using this <em>transfers ownership of the handle</em>; when the <code>File</code> or <code>Stdio</code> is dropped, the handle will be closed. Make sure that matches with your API and use it accordingly.</p>\n\n<hr>\n\n<p>There is an equivalent trait for *nix platforms: <a href=\"https://doc.rust-lang.org/std/os/unix/io/trait.FromRawFd.html\" rel=\"nofollow noreferrer\"><code>FromRawFd</code></a>.</p>\n"}], "owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 446, "favorite_count": 1, "accepted_answer_id": 43322966, "answer_count": 1, "score": 0, "last_activity_date": 1491826762, "creation_date": 1491826252, "last_edit_date": 1491826762, "question_id": 43322811, "link": "https://stackoverflow.com/questions/43322811/how-to-read-bytes-from-a-windows-file-handle-in-rust", "title": "How to read bytes from a Windows file handle in Rust?", "body": "<p>I am implementing a DLL using Rust. The DLL's host application passes Win32 file handles to the DLL for reading and writing.</p>\n\n<p>Is there some function existing that returns a \"normal\" Rust reader from a Windows file handle? How would a manual implementation of the <code>Read</code> or <code>Write</code> trait look like?</p>\n"}, {"tags": ["algorithm", "rust", "range"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1491820541, "post_id": 43314887, "comment_id": 73705880, "body": "A few questions: (1) are the <code>Iterator&lt;Range&lt;usize&gt;&gt;</code> guaranteed to have non-overlapping ranges, (2) are they guaranteed to have their ranges ordered and (3) what have you tried so far?"}, {"owner": {"reputation": 813, "user_id": 1333945, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/5ba8a397763592097387117373dbb13a?s=128&d=identicon&r=PG", "display_name": "Nathan Ringo", "link": "https://stackoverflow.com/users/1333945/nathan-ringo"}, "edited": false, "score": 0, "creation_date": 1491847166, "post_id": 43314887, "comment_id": 73724107, "body": "Edited to show what I tried before sleeping."}, {"owner": {"reputation": 813, "user_id": 1333945, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/5ba8a397763592097387117373dbb13a?s=128&d=identicon&r=PG", "display_name": "Nathan Ringo", "link": "https://stackoverflow.com/users/1333945/nathan-ringo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491848436, "post_id": 43314887, "comment_id": 73724836, "body": "@MatthieuM (1) yes, (2) I believe A is, B is definitely not, (3) edited"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491848861, "post_id": 43314887, "comment_id": 73725060, "body": "If B isn&#39;t sorted, you are in trouble. The simplest solution I can think of is <code>collect</code>ing all the ranges into a <code>Vec</code>, sorting it, and then iterating over <i>that</i>. Unfortunately, the <code>Vec</code> itself cannot be stored into the resulting iterator, so you first need to create a <code>struct</code> and then implement <code>IntoIterator</code> for it to yield your special <code>Iterator</code>."}], "owner": {"reputation": 813, "user_id": 1333945, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/5ba8a397763592097387117373dbb13a?s=128&d=identicon&r=PG", "display_name": "Nathan Ringo", "link": "https://stackoverflow.com/users/1333945/nathan-ringo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 120, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1491848263, "creation_date": 1491797733, "last_edit_date": 1491848263, "question_id": 43314887, "link": "https://stackoverflow.com/questions/43314887/difference-between-two-iteratorrangeusizes", "title": "Difference between two Iterator&lt;Range&lt;usize&gt;&gt;&#39;s", "body": "<p>My program represents sets as <code>Iterator&lt;Range&lt;usize&gt;&gt;</code>, and I'm trying to implement set subtraction.</p>\n\n<p>Essentially, I'm trying to create a function <code>set_diff</code> such that:</p>\n\n<pre><code>let a = vec![1..5, 7..10];\nlet a = a.into_iter();\n\nlet b = vec![3..9];\nlet b = b.into_iter();\n\nlet mut c = set_diff(a, b);\nassert_eq!(c.next(), Some(1..3));\nassert_eq!(c.next(), Some(9..10));\nassert_eq!(c.next(), None);\n</code></pre>\n\n<p>This is complicated by the fact that this code should run with <code>#[no_std]</code>. The real iterators <code>a</code> and <code>b</code> are able to be cloned, if that helps.</p>\n\n<p>I've made a probably-working iterator for the difference of two ranges, below. The only possible solution I've thought of would be to flatmap this over each element of A for every element in B, but that's really inefficient.</p>\n\n<pre><code>use std::cmp::{max, min};\nuse std::ops::Range;\n\n/// An extension for Ranges allowing subtraction.\npub trait RangeExt&lt;T: Ord&gt; {\n    fn difference(self, other: Self) -&gt; DiffIter&lt;T&gt;;\n}\n\nimpl RangeExt&lt;usize&gt; for Range&lt;usize&gt; {\n    fn difference(self, other: Range&lt;usize&gt;) -&gt; DiffIter&lt;usize&gt; {\n        DiffIter {\n            state: Some(match (self.start &lt; other.start, self.end &lt; other.end) {\n                (false, false) =&gt; DiffIterState::One(Range {\n                    start: max(other.end, self.start),\n                    end: self.end,\n                }),\n                (false, true) =&gt; DiffIterState::None,\n                (true, false) =&gt; DiffIterState::Two(Range {\n                    start: self.start,\n                    end: other.start,\n                }, Range {\n                    start: other.end,\n                    end: self.end,\n                }),\n                (true, true) =&gt; DiffIterState::One(Range {\n                    start: self.start,\n                    end: if other.start == self.end {\n                        self.end\n                    } else {\n                        min(other.start - 1, self.end)\n                    }\n                }),\n            })\n        }\n    }\n}\n\n/// A iterator for the difference of two ranges.\npub struct DiffIter&lt;T&gt; {\n    state: Option&lt;DiffIterState&lt;T&gt;&gt;,\n}\n\nimpl&lt;T&gt; Iterator for DiffIter&lt;T&gt; {\n    type Item = Range&lt;T&gt;;\n    fn next(&amp;mut self) -&gt; Option&lt;Range&lt;T&gt;&gt; {\n        let (out, next) = match self.state.take().unwrap() {\n            DiffIterState::None =&gt; {\n                (None, DiffIterState::None)\n            },\n            DiffIterState::One(r) =&gt; {\n                (Some(r), DiffIterState::None)\n            },\n            DiffIterState::Two(l, r) =&gt; {\n                (Some(l), DiffIterState::One(r))\n            },\n        };\n        self.state = Some(next);\n        out\n    }\n}\n\nenum DiffIterState&lt;T&gt; {\n    None,\n    One(Range&lt;T&gt;),\n    Two(Range&lt;T&gt;, Range&lt;T&gt;),\n}\n</code></pre>\n"}, {"tags": ["methods", "types", "rust", "implementation"], "comments": [{"owner": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "edited": false, "score": 6, "creation_date": 1491777417, "post_id": 43312213, "comment_id": 73690187, "body": "Relevent RFC: <a href=\"https://github.com/rust-lang/rfcs/issues/493\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/493</a>. More specifically you might want to jump to this part of the discussion: <a href=\"https://github.com/rust-lang/rfcs/issues/493#issuecomment-266307203\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/493#issuecomment-266307203</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "edited": false, "score": 6, "creation_date": 1491814160, "post_id": 43312213, "comment_id": 73701561, "body": "@asteriskTheServer: This sounds like a good answer in a comment. Why don&#39;t you try massaging it in a proper answer that uses the comment as source?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 2, "creation_date": 1491815913, "post_id": 43312213, "comment_id": 73702696, "body": "There seems to be a visibility problem here; how would you expect visibility of <code>String::foo</code> to be controlled? Traits support adding new methods: <code>trait Foo { fn foo(&amp;self); } impl Foo for String { ... }</code>. Here visibility of <code>String::foo</code> can be controlled by importing the trait, and different traits implementing <code>foo</code> can be disambiguated using the full trait name."}, {"owner": {"reputation": 275, "user_id": 7762670, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/gRcks.png?s=128&g=1", "display_name": "Sogomn", "link": "https://stackoverflow.com/users/7762670/sogomn"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1491816039, "post_id": 43312213, "comment_id": 73702788, "body": "@user4815162342 But why not allow private implementations then?"}, {"owner": {"reputation": 275, "user_id": 7762670, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/gRcks.png?s=128&g=1", "display_name": "Sogomn", "link": "https://stackoverflow.com/users/7762670/sogomn"}, "reply_to_user": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "edited": false, "score": 0, "creation_date": 1491823782, "post_id": 43312213, "comment_id": 73708048, "body": "I just re-read the RFC you posted @asteriskTheServer and I think I got it now. Public impls would expose the changes to other crates and local impls would override future patches."}], "answers": [{"tags": [], "owner": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "is_accepted": true, "score": 2, "last_activity_date": 1491923947, "creation_date": 1491923947, "answer_id": 43350017, "question_id": 43312213, "link": "https://stackoverflow.com/questions/43312213/why-does-rust-forbid-implementations-of-existing-types/43350017#43350017", "title": "Why does Rust forbid implementations of existing types?", "body": "<p>There are several different arguments as indicated by the following <a href=\"https://github.com/rust-lang/rfcs/issues/493\" rel=\"nofollow noreferrer\">source</a> as to why one is unable to implement existing types that are outside of one's crate. </p>\n\n<ul>\n<li><p>Local impl can be broken by future implementations. For example, consider \"you've locally defined Add on <code>Vec&lt;T&gt;</code> as a concat operator, ... , and then ... after years of debate ... some mathy operation [is] to be performed instead. If you delete your impl and upgrade, your code will be ... broken<sup><a href=\"https://github.com/rust-lang/rfcs/issues/493#issuecomment-266705533\" rel=\"nofollow noreferrer\">2</a></sup>.\"</p></li>\n<li><p>The readability of the code will also be affected by this change, that is, it could make the \"value of that reading far more transient<sup><a href=\"https://github.com/rust-lang/rfcs/issues/493#issuecomment-266744882\" rel=\"nofollow noreferrer\">3</a></sup>.\"</p></li>\n<li><p>There is also a security concern. Consider the following scenario that would be technically possible if this were allowed, that is, \"an attacker [could] find a change in an impl in [some] library, a call site in an application they wish to backdoor, and send a \"refactoring\" pull request that \"accidentally\" replaces the new impl with the old impl so as to create a vulnerability, but their pull can reference the old code from the library. And they can embed the hostile impl into a macro in yet another create<sup><a href=\"https://github.com/rust-lang/rfcs/issues/493#issuecomment-266744882\" rel=\"nofollow noreferrer\">4</a></sup>.\"</p></li>\n<li><p>Assuming the case that the local impl would be the preferred implementation if local impls were allowed. This would \"would violate the coherence property [that is currently being maintained]<sup><a href=\"https://github.com/rust-lang/rfcs/issues/493#issuecomment-283289586\" rel=\"nofollow noreferrer\">5</a></sup>.\" This point can be further clarified through what is called the 'HashTable' problem<sup><a href=\"https://github.com/rust-lang/rfcs/issues/493#issuecomment-283289586\" rel=\"nofollow noreferrer\">5</a></sup>. </p>\n\n<pre><code>mod foo {\n    impl Hash for i32 { ... }\n\n    fn f(mut table: HashMap&lt;i32, &amp;'static str&gt;) {\n        table.insert(0, \"hello\");\n        ::bar::f(&amp;table);\n    }\n}\n\nmod bar {\n    impl Hash for i32 { ... }\n\n    fn f(table: &amp;HashMap&lt;i32, &amp;'static str&gt;) {\n        assert_eq!(table.get(0), Some(\"hello\"));\n    }\n}\n</code></pre></li>\n</ul>\n"}], "owner": {"reputation": 275, "user_id": 7762670, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/gRcks.png?s=128&g=1", "display_name": "Sogomn", "link": "https://stackoverflow.com/users/7762670/sogomn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 278, "favorite_count": 1, "accepted_answer_id": 43350017, "answer_count": 1, "score": 4, "last_activity_date": 1491923947, "creation_date": 1491773932, "last_edit_date": 1491826875, "question_id": 43312213, "link": "https://stackoverflow.com/questions/43312213/why-does-rust-forbid-implementations-of-existing-types", "title": "Why does Rust forbid implementations of existing types?", "body": "<p>How is this...</p>\n\n<pre><code>impl String {\n    fn foo(&amp;self) {\n        //...\n    }\n}\n</code></pre>\n\n<p>...any different to this?</p>\n\n<pre><code>fn foo(s: &amp;String) {\n    //...\n}\n</code></pre>\n\n<p>Then again, it is possible to extend the type implementation if you define a trait in your crate. Why?</p>\n"}, {"tags": ["rust", "iron"], "comments": [{"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 1, "creation_date": 1491768664, "post_id": 43310960, "comment_id": 73687595, "body": "Because when you drop the listener it will block till the server dies, when you move it to a variable, it&#39;ll block when the variable is dropped (i.e. scope end) -- you can prefix the variable with <code>_</code> (like <code>_listener</code>) to silence unused warnings."}, {"owner": {"reputation": 517, "user_id": 4107021, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-KEIhc2Jmqd0/AAAAAAAAAAI/AAAAAAAAABU/W_YpaO0fqcU/photo.jpg?sz=128", "display_name": "Vladislav Sazanovich", "link": "https://stackoverflow.com/users/4107021/vladislav-sazanovich"}, "reply_to_user": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1491798432, "post_id": 43310960, "comment_id": 73694674, "body": "Thanks you. And thanks for nice hack with <code>_listener</code>. I didn&#39;t know about it."}], "answers": [{"comments": [{"owner": {"reputation": 517, "user_id": 4107021, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-KEIhc2Jmqd0/AAAAAAAAAAI/AAAAAAAAABU/W_YpaO0fqcU/photo.jpg?sz=128", "display_name": "Vladislav Sazanovich", "link": "https://stackoverflow.com/users/4107021/vladislav-sazanovich"}, "edited": false, "score": 0, "creation_date": 1491798278, "post_id": 43311531, "comment_id": 73694641, "body": "Thanks for the thorough explanation! Do this pattern have a name in Rust?"}, {"owner": {"reputation": 517, "user_id": 4107021, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-KEIhc2Jmqd0/AAAAAAAAAAI/AAAAAAAAABU/W_YpaO0fqcU/photo.jpg?sz=128", "display_name": "Vladislav Sazanovich", "link": "https://stackoverflow.com/users/4107021/vladislav-sazanovich"}, "edited": false, "score": 0, "creation_date": 1491798637, "post_id": 43311531, "comment_id": 73694707, "body": "I mean, is it a common practice to do so?"}, {"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "reply_to_user": {"reputation": 517, "user_id": 4107021, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-KEIhc2Jmqd0/AAAAAAAAAAI/AAAAAAAAABU/W_YpaO0fqcU/photo.jpg?sz=128", "display_name": "Vladislav Sazanovich", "link": "https://stackoverflow.com/users/4107021/vladislav-sazanovich"}, "edited": false, "score": 0, "creation_date": 1491804769, "post_id": 43311531, "comment_id": 73696664, "body": "This is a common pattern, not only in Rust. C++ has destructors, for instance, which are also executed when an object falls out of scope. You can read more about <code>Drop</code> in the <a href=\"https://doc.rust-lang.org/nightly/book/first-edition/drop.html\" rel=\"nofollow noreferrer\">Rust Book</a>"}, {"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "reply_to_user": {"reputation": 517, "user_id": 4107021, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-KEIhc2Jmqd0/AAAAAAAAAAI/AAAAAAAAABU/W_YpaO0fqcU/photo.jpg?sz=128", "display_name": "Vladislav Sazanovich", "link": "https://stackoverflow.com/users/4107021/vladislav-sazanovich"}, "edited": false, "score": 0, "creation_date": 1491805072, "post_id": 43311531, "comment_id": 73696778, "body": "The pattern is very useful in languages without garbage collection, like Rust. You can use it to ensure any memory allocated by your object is freed when the object is destroyed (otherwise you would have to do that manually, with a chance of forgetting to do it and introducing a memory leak). This pattern is called <a href=\"https://en.wikipedia.org/wiki/Resource_acquisition_is_initialization\" rel=\"nofollow noreferrer\">RAII</a> in C++, and I have seen the same name used in Rust context (see, for instance, <a href=\"http://rustbyexample.com/scope/raii.html\" rel=\"nofollow noreferrer\">this resource</a>)"}], "tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": true, "score": 2, "last_activity_date": 1491769809, "last_edit_date": 1491769809, "creation_date": 1491769441, "answer_id": 43311531, "question_id": 43310960, "link": "https://stackoverflow.com/questions/43310960/ironnewhttp-intercepts-stdin/43311531#43311531", "title": "Iron::new()::http() intercepts stdin", "body": "<p>In the first version of your code, the first line will block waiting for incoming connections. This is because of the following:</p>\n\n<ol>\n<li><code>Iron::new(hello_world).http(\"localhost:3000\").unwrap()</code> produces an object of type <code>Listening</code>, which will start listening to http requests <strong>in a separate thread</strong>.</li>\n<li>The <code>Listening</code> struct implements the <code>Drop</code> trait, i.e. any objects of type <code>Listening</code> will run a <code>drop</code> function when they fall out of scope. Said drop function will <strong>join the listening thread, blocking further execution of your program</strong>.</li>\n<li>By not assigning the <code>Listening</code> object to a variable, it falls out of scope immediately. This means that <strong>the <code>drop</code> function is run right after the object's creation</strong>.</li>\n</ol>\n\n<h1>Alternative explanation in code</h1>\n\n<p>The first version of your program:</p>\n\n<pre><code>fn main() {\n    Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n    // The listening thread is joined here, so the program blocks\n    // The instructions below will never be executed\n\n    let mut input = String::new();\n    io::stdin().read_line(&amp;mut input)\n        .expect(\"Failed to read line\");\n\n    println!(\"You entered: {}\", &amp;input)\n}\n</code></pre>\n\n<p>The results of introducing a variable:</p>\n\n<pre><code>fn main() {\n    let listener = Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n\n    let mut input = String::new();\n    io::stdin().read_line(&amp;mut input)\n        .expect(\"Failed to read line\");\n\n    println!(\"You entered: {}\", &amp;input)\n\n    // The listening thread is joined here, so the program blocks\n    // As you can see, the program will not exit\n}\n</code></pre>\n"}], "owner": {"reputation": 517, "user_id": 4107021, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-KEIhc2Jmqd0/AAAAAAAAAAI/AAAAAAAAABU/W_YpaO0fqcU/photo.jpg?sz=128", "display_name": "Vladislav Sazanovich", "link": "https://stackoverflow.com/users/4107021/vladislav-sazanovich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 1, "accepted_answer_id": 43311531, "answer_count": 1, "score": 2, "last_activity_date": 1491769809, "creation_date": 1491766132, "question_id": 43310960, "link": "https://stackoverflow.com/questions/43310960/ironnewhttp-intercepts-stdin", "title": "Iron::new()::http() intercepts stdin", "body": "<p>I'am trying to implement educational client-server application using Rust and Iron. I've encountered the behaviour that I can't understand. Here is the code:</p>\n\n<pre><code>fn main() {\n    Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n\n    let mut input = String::new();\n    io::stdin().read_line(&amp;mut input)\n        .expect(\"Failed to read line\");\n\n    println!(\"You entered: {}\", &amp;input)\n}\n\n\nfn hello_world(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    Ok(Response::with((status::Ok, \"Hello World!\")))\n}\n</code></pre>\n\n<p>When I run it and try to enter something from the keyboard, the line <strong>You entered: Some text</strong> is not appearing.</p>\n\n<p>But after I changed this line:</p>\n\n<pre><code>Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n</code></pre>\n\n<p>With this:</p>\n\n<pre><code>let listener = Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n</code></pre>\n\n<p>I got string <strong>You entered: Some text</strong> on my console. So it seems to work. But now I have warning about unused variable. This behaviour is confusing.</p>\n\n<p>Can anyone explain why this actually happens?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5061, "user_id": 288457, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/83bb558b24a36e9506573d558a6e19a1?s=128&d=identicon&r=PG", "display_name": "Armando P&#233;rez Marqu&#233;s", "link": "https://stackoverflow.com/users/288457/armando-p%c3%a9rez-marqu%c3%a9s"}, "edited": false, "score": 0, "creation_date": 1531930937, "post_id": 43307241, "comment_id": 89784693, "body": "Is there a rule of thumb to decide between a HashMap and an array of two-tuples? Is it dependent on the collection size? And/or whether we know the size in advance?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5061, "user_id": 288457, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/83bb558b24a36e9506573d558a6e19a1?s=128&d=identicon&r=PG", "display_name": "Armando P&#233;rez Marqu&#233;s", "link": "https://stackoverflow.com/users/288457/armando-p%c3%a9rez-marqu%c3%a9s"}, "edited": false, "score": 1, "creation_date": 1531931485, "post_id": 43307241, "comment_id": 89785024, "body": "@ArmandoP&#233;rezMarqu&#233;s I always recommend benchmarking if it&#39;s important. You certainly would need to know the size in advance to create an <i>array</i>, but beyond that I&#39;d say it&#39;s &quot;a slice of 2-tuples is OK for a &#39;small&#39; number of values&quot;."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1491744517, "last_edit_date": 1495541864, "creation_date": 1491744517, "answer_id": 43307241, "question_id": 43307019, "link": "https://stackoverflow.com/questions/43307019/how-to-create-a-lazy-static-hashmap-with-function-references-as-value/43307241#43307241", "title": "How to create a lazy_static HashMap with function references as value?", "body": "<p>Your code has multiple issues. The error presented by the compiler is telling you that your code, will allow memory unsafety:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>`std::ops::Fn([u8]) + 'static` cannot be shared between threads safely\n</code></pre>\n\n<p>The type you are storing in your <code>HashMap</code> has no guarantee that it can be shared.</p>\n\n<p>You can \"fix\" that by specifying such a bound by changing your value type to <code>&amp;'static (Fn([u8]) + Sync)</code>. This unlocks the next error, due to the fact that your function signatures don't match up:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected type `std::collections::HashMap&lt;&amp;'static str, &amp;'static std::ops::Fn([u8]) + std::marker::Sync + 'static&gt;`\n   found type `std::collections::HashMap&lt;&amp;str, &amp;fn(&amp;[u8]) -&gt; std::string::String {md5}&gt;`\n</code></pre>\n\n<p>\"Fixing\" that with <code>&amp;'static (Fn(&amp;[u8]) -&gt; String + Sync)</code> leads to esoteric higher-kinded lifetime errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected type `std::collections::HashMap&lt;&amp;'static str, &amp;'static for&lt;'r&gt; std::ops::Fn(&amp;'r [u8]) -&gt; std::string::String + std::marker::Sync + 'static&gt;`\n   found type `std::collections::HashMap&lt;&amp;str, &amp;fn(&amp;[u8]) -&gt; std::string::String {md5}&gt;`\n</code></pre>\n\n<p>Which can be \"fixed\" by casting the function with <code>&amp;md5 as &amp;'static (Fn(&amp;[u8]) -&gt; String + Sync))</code>, which leads to </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>note: borrowed value must be valid for the static lifetime...\nnote: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>This bottoms out because <a href=\"https://stackoverflow.com/q/38043201/155423\">the reference you've made is to a temporary value that doesn't live outside of the scope</a>.</p>\n\n<hr>\n\n<p>I put fix in scare quotes because this isn't really the right solution. The right thing is to just use a function pointer:</p>\n\n<pre><code>lazy_static! {\n    static ref HASHES: HashMap&lt;&amp;'static str, fn(&amp;[u8]) -&gt; String&gt; = {\n        let mut m = HashMap::new();\n        m.insert(\"md5\", md5 as fn(&amp;[u8]) -&gt; std::string::String);\n        m\n    };\n}\n</code></pre>\n\n<p>Honestly, I'd say that a <code>HashMap</code> is probably overkill; I'd use an array. A small array is probably faster than a small <code>HashMap</code>:</p>\n\n<pre><code>type HashFn = fn(&amp;[u8]) -&gt; String;\n\nstatic HASHES: &amp;'static [(&amp;'static str, HashFn)] = &amp;[\n    (\"md5\", md5),\n];\n</code></pre>\n\n<p>You can start by just iterating through the list, or maybe be fancy and alphabetize it and then use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.binary_search\" rel=\"nofollow noreferrer\"><code>binary_search</code></a> when it gets a bit bigger.</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2254, "favorite_count": 0, "accepted_answer_id": 43307241, "answer_count": 1, "score": 6, "last_activity_date": 1491744517, "creation_date": 1491743168, "last_edit_date": 1491743246, "question_id": 43307019, "link": "https://stackoverflow.com/questions/43307019/how-to-create-a-lazy-static-hashmap-with-function-references-as-value", "title": "How to create a lazy_static HashMap with function references as value?", "body": "<p>I tried to create a <code>HashMap</code> with functions as the values:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nuse std::collections::HashMap;\n\nlazy_static! {\n    static ref HASHES: HashMap&lt;&amp;'static str, &amp;'static Fn([u8])&gt; = {\n        let mut m = HashMap::new();\n        m.insert(\"md5\", &amp;md5);\n        m\n    };\n}\n\nfn md5(bytes: &amp;[u8]) -&gt; String {\n    String::default()\n}\n</code></pre>\n\n<p>The compiler gives me an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::ops::Fn([u8]) + 'static: std::marker::Sync` is not satisfied in `&amp;'static std::ops::Fn([u8]) + 'static`\n  --&gt; src/main.rs:6:1\n   |\n6  |   lazy_static! {\n   |  _^ starting here...\n7  | |     static ref HASHES: HashMap&lt;&amp;'static str, &amp;'static Fn([u8])&gt; = {\n8  | |         let mut m = HashMap::new();\n9  | |         m.insert(\"md5\", &amp;md5);\n10 | |         m\n11 | |     };\n12 | | }\n   | |_^ ...ending here: within `&amp;'static std::ops::Fn([u8]) + 'static`, the trait `std::marker::Sync` is not implemented for `std::ops::Fn([u8]) + 'static`\n   |\n   = note: `std::ops::Fn([u8]) + 'static` cannot be shared between threads safely\n   = note: required because it appears within the type `&amp;'static std::ops::Fn([u8]) + 'static`\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::collections::hash::table::RawTable&lt;&amp;'static str, &amp;'static std::ops::Fn([u8]) + 'static&gt;`\n   = note: required because it appears within the type `std::collections::HashMap&lt;&amp;'static str, &amp;'static std::ops::Fn([u8]) + 'static&gt;`\n   = note: required by `lazy_static::lazy::Lazy`\n   = note: this error originates in a macro outside of the current crate\n</code></pre>\n\n<p>I don't understand what should I do to fix this error and I don't know any other way of creating such a <code>HashMap</code>.</p>\n"}, {"tags": ["windows", "macos", "rust"], "comments": [{"owner": {"reputation": 208003, "user_id": 841108, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/Fm52y.png?s=128&g=1", "display_name": "Basile Starynkevitch", "link": "https://stackoverflow.com/users/841108/basile-starynkevitch"}, "edited": false, "score": 0, "creation_date": 1491716788, "post_id": 43303465, "comment_id": 73672131, "body": "Compile with debug information. Perhaps <a href=\"https://github.com/ianlancetaylor/libbacktrace\" rel=\"nofollow noreferrer\">libbacktrace</a> has been ported or interfaced to Rust."}, {"owner": {"reputation": 3306, "user_id": 2750819, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/gOFsQ.png?s=128&g=1", "display_name": "Kent Shikama", "link": "https://stackoverflow.com/users/2750819/kent-shikama"}, "edited": false, "score": 2, "creation_date": 1491716810, "post_id": 43303465, "comment_id": 73672137, "body": "I&#39;m not sure but you might be able to get more information using <code>rust-gdb</code>. Make sure to compile with the <code>-g</code> flag."}, {"owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491748038, "post_id": 43303465, "comment_id": 73680248, "body": "@MatthieuM.  In fact, as the <a href=\"https://github.com/rust-lang/rust/issues/24346#issuecomment-22137581%E2%80%8C%E2%80%8B0\" rel=\"nofollow noreferrer\">issue</a> said that... seems like linux has this same issue as well. But whatever:)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491748263, "post_id": 43303465, "comment_id": 73680321, "body": "@wind2412: In my (oldish) Ubuntu VM I have the file and line displayed."}, {"owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491748423, "post_id": 43303465, "comment_id": 73680365, "body": "@MatthieuM.  Actually on my docker this work well, too. That&#39;s okay.:)"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491746814, "post_id": 43304055, "comment_id": 73679875, "body": "Does lldb has anything like gdb&#39;s <code>catch throw</code> (which catch any exception being thrown)? It could be easier than to set the breakpoint as you do."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491747537, "post_id": 43304055, "comment_id": 73680084, "body": "@MatthieuM. <a href=\"http://stackoverflow.com/q/8122375/155423\">there&#39;s this</a>, but I&#39;m not sure if a panic counts as an exception from the perspective of the debugger. Does <code>catch throw</code> work for Rust code?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491747562, "post_id": 43304055, "comment_id": 73680092, "body": "FWIW, I break on <code>rust_panic</code> - it&#39;s a few keys less, if nothing else ;-)"}, {"owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491748277, "post_id": 43304055, "comment_id": 73680326, "body": "@MatthieuM.  I don&#39;t know about this~ I used gdb before. However my workspace can&#39;t use gdb to debug Rust code. The <a href=\"https://github.com/rust-lang/rust/issues/40787\" rel=\"nofollow noreferrer\">issue</a> is also open yet... sad"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491748314, "post_id": 43304055, "comment_id": 73680334, "body": "@Shepmaster: I tried with gdb 7.7, and <code>catch throw</code> didn&#39;t work. Too much C++ of late I guess. Would be sweet though..."}], "tags": [], "owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "is_accepted": false, "score": 4, "last_activity_date": 1491739530, "last_edit_date": 1491739530, "creation_date": 1491722193, "answer_id": 43304055, "question_id": 43303465, "link": "https://stackoverflow.com/questions/43303465/how-to-display-callstack-line-numbers-when-my-program-is-broken-in-rust/43304055#43304055", "title": "How to display callstack line numbers when my program is broken in Rust?", "body": "<p>This problem is a cross-platform issue and is tracked as <a href=\"https://github.com/rust-lang/rust/issues/24346#issuecomment-22137581%E2%80%8C%E2%80%8B0\" rel=\"nofollow noreferrer\">Rust issue 24346</a>. My workspace is macOS 10.12.4:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt;rustc -vV\nrustc 1.18.0-nightly (2564711e8 2017-04-04)\nbinary: rustc\ncommit-hash: 2564711e803f62e04bebf10408cc1c11297c0caf\ncommit-date: 2017-04-04\nhost: x86_64-apple-darwin\nrelease: 1.18.0-nightly\nLLVM version: 3.9\n</code></pre>\n\n<p>The workaround is to use a debugger to get the callstack information.</p>\n\n<p>I have a <code>hellobugs.rs</code> file only present several lines of buggy code. At line 3, I cause a panic due to accessing the vector out of bounds:</p>\n\n<pre><code>fn main() {                // 1\n    let v = vec![1, 2, 3]; // 2\n    println!(\"{}\", v[4]);  // 3\n}                          // 4\n</code></pre>\n\n<p>Compile this with <code>rustc hellobugs.rs -g -o hellobugs</code> Don't forget the <code>-g</code> argument.</p>\n\n<p>Running with <code>RUST_BACKTRACE=full ./hellobugs</code> will get backtraces but without line numbers on my macOS. As the issue says, we can use <code>rust-lldb hellobugs</code> to debug it and get detailed backtraces. Of course, using <code>lldb</code> is okay as well:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt;rust-lldb hellobugs\n    ...lots of rust-lldb message...\n(lldb) breakpoint set -b rust_begin_unwind\nBreakpoint 1: where = hellobugs`std::panicking::rust_begin_panic + 4 at panicking.rs:468, address = 0x000000010000a5b4\n(lldb) r\nProcess 41626 launched: '/Users/xxx/bin/hellobugs' (x86_64)\nhellobugs was compiled with optimization - stepping may behave oddly; variables may not be available.\nProcess 41626 stopped\n* thread #1: tid = 0x6c3e39, 0x000000010000a5b4 hellobugs`std::panicking::rust_begin_panic + 4 at panicking.rs:468, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1\n    frame #0: 0x000000010000a5b4 hellobugs`std::panicking::rust_begin_panic + 4 at panicking.rs:468 [opt]\n(lldb) bt\n* thread #1: tid = 0x6c3e39, 0x000000010000a5b4 hellobugs`std::panicking::rust_begin_panic + 4 at panicking.rs:468, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1\n  * frame #0: 0x000000010000a5b4 hellobugs`std::panicking::rust_begin_panic + 4 at panicking.rs:468 [opt]\n    frame #1: 0x000000010002af51 hellobugs`core::panicking::panic_fmt + 129 at panicking.rs:69 [opt]\n    frame #2: 0x000000010002aec9 hellobugs`core::panicking::panic_bounds_check + 105 at panicking.rs:56 [opt]\n    frame #3: 0x0000000100001726 hellobugs`collections::vec::{{impl}}::index&lt;i32&gt;(self=0x00007fff5fbff720, index=4) + 118 at vec.rs:1426\n    frame #4: 0x0000000100001826 hellobugs`hellobugs::main + 182 at hellobugs.rs:3\n    frame #5: 0x000000010000a5a6 hellobugs`std::panicking::try::do_call&lt;fn(),()&gt; [inlined] core::ops::FnOnce::call_once&lt;fn(),()&gt; + 6 at ops.rs:2606 [opt]\n    frame #6: 0x000000010000a5a4 hellobugs`std::panicking::try::do_call&lt;fn(),()&gt; + 4 at panicking.rs:454 [opt]\n    frame #7: 0x000000010000c38b hellobugs`panic_unwind::__rust_maybe_catch_panic + 27 at lib.rs:98 [opt]\n    frame #8: 0x000000010000ab31 hellobugs`std::rt::lang_start [inlined] std::panicking::try&lt;(),fn()&gt; + 44 at panicking.rs:433 [opt]\n    frame #9: 0x000000010000ab05 hellobugs`std::rt::lang_start [inlined] std::panic::catch_unwind&lt;fn(),()&gt; at panic.rs:361 [opt]\n    frame #10: 0x000000010000ab05 hellobugs`std::rt::lang_start + 325 at rt.rs:57 [opt]\n    frame #11: 0x000000010000192a hellobugs`main + 42\n    frame #12: 0x00007fffdfc5f235 libdyld.dylib`start + 1\n(lldb)\n</code></pre>\n\n<p>My results are as above. You can see at <code>frame #4</code> there comes the buggy result of <code>at hellobug.rs:3</code>. This informs us the 3rd line has a bug. It is a little bother to use <code>lldb</code> and trace, but it's accurate!</p>\n"}], "owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 897, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1491747768, "creation_date": 1491716556, "last_edit_date": 1491747768, "question_id": 43303465, "link": "https://stackoverflow.com/questions/43303465/how-to-display-callstack-line-numbers-when-my-program-is-broken-in-rust", "title": "How to display callstack line numbers when my program is broken in Rust?", "body": "<p>I use <code>RUST_BACKTRACE=full ./my-program</code> to run my compiled program.\nHowever, I get a message like below which has only the function address without line numbers. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'index out of bounds: the len is 6 but the index is 6', src/libcore/slice/mod.rs:734\nstack backtrace:\n   0:        0x100a26463 - std::sys::imp::backtrace::tracing::imp::unwind_backtrace::hbdeac7eba2f064c6\n   1:        0x100a2786d - std::panicking::default_hook::{{closure}}::h9e0a6ca9bb64b479\n   2:        0x100a27434 - std::panicking::default_hook::h9043ae80af471c9f\n   3:        0x100a29f17 - std::panicking::rust_panic_with_hook::h05996066754c6be9\n   4:        0x100a29e04 - std::panicking::begin_panic::h9fecf34da42eb910\n   5:        0x100a29d22 - std::panicking::begin_panic_fmt::he5aad713258a67c3\n   6:        0x100a29c87 - rust_begin_unwind\n   7:        0x100a4a5f0 - core::panicking::panic_fmt::he26d734b771c5b2c\n   8:        0x100a4a568 - core::panicking::panic_bounds_check::h19dd3f615b4fea05\n   9:        0x100a1fc76 - &lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index::h1f41340feec36937\n  10:        0x100a1f744 - core::slice::&lt;impl core::ops::Index&lt;I&gt; for [T]&gt;::index::h3246d2321fb7f789\n  11:        0x100a205b6 - sort::merge::h697218a53d5049aa\n  12:        0x100a20227 - sort::merge_sort::h10fe012581f48b43\n  13:        0x100a201e5 - sort::merge_sort::h10fe012581f48b43\n  14:        0x100a201e5 - sort::merge_sort::h10fe012581f48b43\n  15:        0x100a20159 - sort::merge_sort_pub::hb18b616b61510f3b\n  16:        0x100a20e24 - sort::main::hffac78b51f3ea2c3\n  17:        0x100a29c45 - std::panicking::try::do_call::h24a2756282b9a31c\n  18:        0x100a2ba2a - __rust_maybe_catch_panic\n  19:        0x100a2a1d0 - std::rt::lang_start::hd19f94db0c6a490e\n  20:        0x100a20fc9 - main\n</code></pre>\n\n<p>Is there any method to add the line numbers at the break spot?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491711359, "post_id": 43302808, "comment_id": 73671205, "body": "Thank you~ It works. Rust&#39;s for loop uses the iterator which makes some occasions like using arithmetic be a little troublesome. Just as <code>for (int i = 0; i &lt; n; i ++) if (a[i] == ...) i += 5;</code>. In rust it uses iterator so that <code>for i in 0..n{ if a[i] == ... { i+=5; }}</code> not worked. The variable <code>i</code> will not add 5 next turns, but add 1 instead..."}], "answers": [{"comments": [{"owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "edited": false, "score": 1, "creation_date": 1491741860, "post_id": 43306624, "comment_id": 73678374, "body": "Thank you for the detailed explanation that solves my problem! ~"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1491742560, "last_edit_date": 1495539994, "creation_date": 1491740486, "answer_id": 43306624, "question_id": 43302808, "link": "https://stackoverflow.com/questions/43302808/how-to-use-multiple-variables-in-rusts-for-loop/43306624#43306624", "title": "How to use multiple variables in Rust&#39;s for loop?", "body": "<p>You can create two parallel range iterators, <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.zip\" rel=\"nofollow noreferrer\"><code>zip</code></a> them, then iterate though the combination:</p>\n\n<pre><code>fn main() {\n    let values = [10, 20, 30, 40, 50, 60, 70, 80, 90];\n    let lo = 2;\n    let mid = 5;\n    let hi = 7;\n\n    let early_indexes = lo..(mid + 1);\n    let late_indexes = (mid + 1)..(hi + 1);\n    for (i, j) in early_indexes.zip(late_indexes) {\n        println!(\"{}, {}\", i, j);\n        println!(\"{} - {}\", values[i], values[j]);\n    }\n}\n</code></pre>\n\n<p><em>Someday</em>, inclusive ranges <a href=\"https://github.com/rust-lang/rust/issues/28237\" rel=\"nofollow noreferrer\">will be stabilized</a>, and you should be able to something like this (depending on the eventual syntax):</p>\n\n<pre><code>let early_indexes = lo...mid;\nlet late_indexes = (mid + 1)...hi;\nfor (i, j) in early_indexes.zip(late_indexes) {\n    println!(\"{}, {}\", i, j);\n    println!(\"{} - {}\", values[i], values[j]);\n}\n</code></pre>\n\n<p>If you are actually iterating though a slice as I've shown for my example, you can also just combine the two iterators directly and ignore the index:</p>\n\n<pre><code>let early_values = values[lo..(mid + 1)].iter();\nlet late_values = values[(mid + 1)..(hi + 1)].iter();\nfor (i, j) in early_values.zip(late_values) {\n    println!(\"{}, {}\", i, j);\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>The variable <code>i</code> will not be incremented by 5, but by 1 instead.</p>\n</blockquote>\n\n<p>Yes, incrementing by a step is annoying, and some day <a href=\"https://github.com/rust-lang/rust/issues/27741\" rel=\"nofollow noreferrer\">it will also be stabilized</a>. In the meantime:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31371478/155423\">What is a stable way to iterate on a range with custom step?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27893223/155423\">How do I iterate over a range with a custom step?</a></li>\n</ul>\n\n<p>If you need full control, you can always use <code>while</code> or <code>loop</code>:</p>\n\n<pre><code>let mut i = 0;\nwhile i &lt; n {\n    if a[i] == ... {\n        i += 5;\n    }\n\n    i += 1;\n}\n</code></pre>\n"}], "owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2154, "favorite_count": 1, "accepted_answer_id": 43306624, "answer_count": 1, "score": 3, "last_activity_date": 1491742560, "creation_date": 1491709721, "last_edit_date": 1491740539, "question_id": 43302808, "link": "https://stackoverflow.com/questions/43302808/how-to-use-multiple-variables-in-rusts-for-loop", "title": "How to use multiple variables in Rust&#39;s for loop?", "body": "<p>In the C family of languages, I can do this on one line:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>for(int i = lo, int j = mid+1; i &lt;= mid &amp;&amp; j &lt;= hi; i++, j++){\n    ...\n}\n</code></pre>\n\n<p>But in Rust... I can only write it like this:</p>\n\n<pre><code>for i in lo..mid+1 {\n    let mut j = mid+1;\n    if j &lt;= hi {\n        break;\n    }\n    ...\n    j += 1;\n}\n</code></pre>\n\n<p>Is there's a more efficient way to implement this?</p>\n\n<hr>\n\n<p>Using an iterator works for above, but using an iterator makes some occasions like using arithmetic troublesome, such as</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>for (int i = 0; i &lt; n; i ++) {\n    if (a[i] == ...) {\n        i += 5;\n    }\n}\n</code></pre>\n\n<p>In Rust, this does not work. The variable <code>i</code> will not be incremented by 5, but by 1 instead:</p>\n\n<pre><code>for i in 0..n {\n    if a[i] == ... {\n        i += 5;\n    }\n} \n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1491709906, "post_id": 43302829, "comment_id": 73670937, "body": "5 seconds.  Didn&#39;t even get the &quot;new answer&quot; notification.  :P"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1491710068, "post_id": 43302829, "comment_id": 73670959, "body": "@DK. well then, I&#39;ll just steal the parts of your answer that I didn&#39;t say. Note how I don&#39;t have to put the author disclaimer so it looks even more legit ;-)"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1491710234, "post_id": 43302829, "comment_id": 73670994, "body": "<b>Disclaimer</b>: Shepmaster got the suggestion for <code>strcursor</code> from the author of <code>strcursor</code>, which is me.  It should be taken more as an example, not as a recommendation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1491710266, "post_id": 43302829, "comment_id": 73671004, "body": "@DK. <i>boooooooo</i>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1491710034, "last_edit_date": 1491710034, "creation_date": 1491709853, "answer_id": 43302829, "question_id": 43302639, "link": "https://stackoverflow.com/questions/43302639/how-do-i-convert-a-peekable-iterator-back-to-the-original-iterator/43302829#43302829", "title": "How do I convert a Peekable iterator back to the original iterator?", "body": "<p>In short, you cannot. The general answer is to use something like <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.by_ref\" rel=\"nofollow noreferrer\"><code>Iterator::by_ref</code></a> to avoid consuming the <code>Chars</code> iterator:</p>\n\n<pre><code>fn extract_common_part(a: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    let mut it = a.chars();\n    if it.next() != Some('!') {\n        return None;\n    }\n\n    {\n        let mut jt = it.by_ref().peekable();\n\n        if jt.peek() == Some(&amp;'^') {\n            jt.next();\n            while jt.peek().map_or(false, |v| !v.is_whitespace()) {\n                jt.next();\n            }\n        }\n    }\n\n    Some(it.as_str())\n}\n</code></pre>\n\n<p>The problem is that when you call <code>peek</code> and it fails, the underlying iterator has <em>already been advanced</em>. Getting the rest of the string will lose the character that tested false, returning <code>234</code>.</p>\n\n<p>However, Itertools has <a href=\"https://docs.rs/itertools/0.6.0/itertools/trait.Itertools.html#method.peeking_take_while\" rel=\"nofollow noreferrer\"><code>peeking_take_while</code></a> and <a href=\"https://docs.rs/itertools/0.6.0/itertools/trait.Itertools.html#method.take_while_ref\" rel=\"nofollow noreferrer\"><code>take_while_ref</code></a>, both of which should solve the issue.</p>\n\n<pre><code>extern crate itertools;\n\nuse itertools::Itertools;\n\nfn extract_common_part(a: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    let mut it = a.chars();\n    if it.next() != Some('!') {\n        return None;\n    }\n\n    if it.peeking_take_while(|&amp;c| c == '^').next() == Some('^') {\n        for _ in it.peeking_take_while(|v| !v.is_whitespace()) {}\n        for _ in it.peeking_take_while(|v|  v.is_whitespace()) {}\n    }\n\n    Some(it.as_str())\n}\n</code></pre>\n\n<hr>\n\n<p>Other options include:</p>\n\n<ul>\n<li>using a crate like <a href=\"https://crates.io/crates/strcursor\" rel=\"nofollow noreferrer\">strcursor</a> which is designed for this kind of incremental advance over a string.</li>\n<li>do the parsing on regular strings directly, and hope the optimizer eliminates redundant bounds checks.</li>\n<li>Use a regex or other parsing library</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "is_accepted": false, "score": 1, "last_activity_date": 1491725791, "creation_date": 1491725791, "answer_id": 43304552, "question_id": 43302639, "link": "https://stackoverflow.com/questions/43302639/how-do-i-convert-a-peekable-iterator-back-to-the-original-iterator/43304552#43304552", "title": "How do I convert a Peekable iterator back to the original iterator?", "body": "<p>If you are only interested in the result, without validation:</p>\n\n<pre><code>fn extract_common_part(a: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    a.chars().rev().position(|v| v.is_whitespace() || v == '!')\n        .map(|pos| &amp;a[a.len() - pos..])    \n}\n\nfn main() {\n    assert_eq!(extract_common_part(\"!^4324 1234\"), Some(\"1234\"));\n    assert_eq!(extract_common_part(\"!1234\"), Some(\"1234\"));\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 589, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1589473375, "creation_date": 1491707486, "last_edit_date": 1589473375, "question_id": 43302639, "link": "https://stackoverflow.com/questions/43302639/how-do-i-convert-a-peekable-iterator-back-to-the-original-iterator", "title": "How do I convert a Peekable iterator back to the original iterator?", "body": "<p>I want to implement an algorithm that skips <code>!</code> or <code>!^num</code> at the start of a string:</p>\n\n<pre><code>fn extract_common_part(a: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    let mut it = a.chars();\n    if it.next() != Some('!') {\n        return None;\n    }\n    let mut jt = it.clone().peekable();\n\n    if jt.peek() == Some(&amp;'^') {\n        it.next();\n        jt.next();\n        while jt.peek().map_or(false, |v| !v.is_whitespace()) {\n            it.next();\n            jt.next();\n        }\n        it.next();\n    }\n    Some(it.as_str())\n}\n\nfn main() {\n    assert_eq!(extract_common_part(\"!^4324 1234\"), Some(\"1234\"));\n    assert_eq!(extract_common_part(\"!1234\"), Some(\"1234\"));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=80a30aaed5ee27b99bce12452932851c\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This works, but I can not find way to return from <code>Peekable</code> to <code>Chars</code>, so I have to advance <code>it</code> and <code>jt</code> iterators. This causes duplicate code.</p>\n\n<p>How can I return from <code>Peekable</code> iterator to corresponding <code>Chars</code> iterator, or maybe there is a simpler way to implement this algorithm?</p>\n"}, {"tags": ["rust", "closures", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 1480, "user_id": 3680119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/x7ea1.png?s=128&g=1", "display_name": "Cormac O&#39;Brien", "link": "https://stackoverflow.com/users/3680119/cormac-obrien"}, "edited": false, "score": 0, "creation_date": 1491757013, "post_id": 43302160, "comment_id": 73683396, "body": "Unfortunately this only partially solves the problem, and it&#39;s my fault for not including cases for this. It&#39;s possible to add commands in this way but not execute them as the <code>Console</code> executing commands on itself requires a double borrow (e.g. <code>(con.cmds[0])(&amp;mut con)</code>). I&#39;ve updated the code to include this."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 4, "last_activity_date": 1491758737, "last_edit_date": 1491758737, "creation_date": 1491702073, "answer_id": 43302160, "question_id": 43301090, "link": "https://stackoverflow.com/questions/43301090/storing-a-boxed-closure-which-references-an-object-in-that-object/43302160#43302160", "title": "Storing a boxed closure which references an object in that object", "body": "<p>This is one of those fairly tricky resource borrowing conundrums that the compiler could not allow. Basically, we have a <code>Console</code> that owns multiple closures, which in turn capture an immutable reference to the same console. This means two constraints:</p>\n\n<ul>\n<li>Since <code>Console</code> owns the closures, they will live for as long as the console itself, and the inner vector will drop them <em>right after</em> <code>Console</code> is dropped.</li>\n<li>At the same time, each closure must not outlive <code>Console</code>, because otherwise we would end up with dangling references to the console.</li>\n</ul>\n\n<p>It may seem harmless from the fact that the console and respective closures go out of scope at once. However, the <a href=\"https://doc.rust-lang.org/book/drop.html\" rel=\"nofollow noreferrer\"><code>drop</code> method</a> follows a strict order here: first the console, then the closures.</p>\n\n<p>Not to mention of course, that if you wish for closures to freely apply modifications to the console without <a href=\"https://doc.rust-lang.org/book/mutability.html#interior-vs-exterior-mutability\" rel=\"nofollow noreferrer\">interior mutability</a>, you would have to mutably borrow it, which cannot be done over multiple closures.</p>\n\n<p>An approach to solving the problem is to separate the two: let the console not own the closures, instead having them in a separate registry, and let the closures only borrow the console when calling the closure.</p>\n\n<p>This can be done by passing the console as an argument to the closures and moving the closure vector to another object (<a href=\"https://play.rust-lang.org/?gist=8b1087586d73013c68bc4e4c2b7c035d&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>use std::cell::Cell;\n\nstruct CommandRegistry&lt;'a&gt; {\n    cmds: Vec&lt;Box&lt;Fn(&amp;mut Console) + 'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; CommandRegistry&lt;'a&gt; {\n    pub fn add_cmd(&amp;mut self, cmd: Box&lt;Fn(&amp;mut Console) + 'a&gt;) {\n        self.cmds.push(cmd);\n    }\n}\n\nstruct Console {\n}\n\nimpl Console {\n    pub fn println&lt;S&gt;(&amp;mut self, msg: S)\n        where S: AsRef&lt;str&gt;\n    {\n        println!(\"{}\", msg.as_ref());\n    }\n}\n\nstruct Example {\n    val: Cell&lt;i32&gt;,\n}\n\nfn main() {\n    let ex = Example {\n        val: Cell::new(0),\n    };\n\n    let mut reg = CommandRegistry{ cmds: Vec::new() };\n\n    let mut con = Console {};\n\n    // this works\n    reg.add_cmd(Box::new(|_: &amp;mut Console| ex.val.set(5)));\n    (reg.cmds[0])(&amp;mut con);\n\n    // and so does this now!\n    let cmd = Box::new(|c: &amp;mut Console| c.println(\"Hello, world!\"));\n    reg.add_cmd(cmd);\n\n    (reg.cmds[1])(&amp;mut con);\n}\n</code></pre>\n\n<p>I also took the liberty of making closures accept a mutable reference. No conflicts emerge here because we are no longer borrowing the console that was already borrowed when fetching the borrowing closure. This way, the closures can also outlive the console.</p>\n"}], "owner": {"reputation": 1480, "user_id": 3680119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/x7ea1.png?s=128&g=1", "display_name": "Cormac O&#39;Brien", "link": "https://stackoverflow.com/users/3680119/cormac-obrien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 43302160, "answer_count": 1, "score": 1, "last_activity_date": 1491758737, "creation_date": 1491691337, "last_edit_date": 1491756883, "question_id": 43301090, "link": "https://stackoverflow.com/questions/43301090/storing-a-boxed-closure-which-references-an-object-in-that-object", "title": "Storing a boxed closure which references an object in that object", "body": "<p>I'm trying to implement a console system for the game I'm writing and have found a fairly simple system: I define a <code>Console</code> object that stores commands as boxed closures (specifically <code>Box&lt;FnMut + 'a&gt;</code> for some <code>'a</code>). This works for any component of the engine so long as the <code>Console</code> is created before anything else.</p>\n\n<p>Unfortunately, this prevents me from adding commands that modify the <code>Console</code> itself, which means I can't create commands that simply print text or define other variables or commands. I've written a small example that replicates the error:</p>\n\n<pre><code>use std::cell::Cell;\n\nstruct Console&lt;'a&gt; {\n    cmds: Vec&lt;Box&lt;FnMut() + 'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Console&lt;'a&gt; {\n    pub fn println&lt;S&gt;(&amp;self, msg: S)\n        where S: AsRef&lt;str&gt;\n    {\n        println!(\"{}\", msg.as_ref());\n    }\n\n    pub fn add_cmd(&amp;mut self, cmd: Box&lt;FnMut() + 'a&gt;) {\n        self.cmds.push(cmd);\n    }\n}\n\nstruct Example {\n    val: Cell&lt;i32&gt;,\n}\n\nfn main() {\n    let ex = Example {\n        val: Cell::new(0),\n    };\n\n    let mut con = Console {\n        cmds: Vec::new(),\n    };\n\n    // this works\n    con.add_cmd(Box::new(|| ex.val.set(5)));\n\n    (con.cmds[0])();\n\n    // this doesn't\n    let cmd = Box::new(|| con.println(\"Hello, world!\"));\n    con.add_cmd(cmd);\n\n    (con.cmds[1])();\n}\n</code></pre>\n\n<p>And the error:</p>\n\n<pre><code>error: `con` does not live long enough\n  --&gt; console.rs:34:31\n   |\n34 |         let cmd = Box::new(|| con.println(\"Hello, world!\"));\n   |                            -- ^^^ does not live long enough\n   |                            |\n   |                            capture occurs here\n35 |         con.add_cmd(cmd);\n36 |     }\n   |     - borrowed value dropped before borrower\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Is there a workaround for this, or a better system I should look into? This is on <code>rustc 1.18.0-nightly (53f4bc311 2017-04-07)</code>.</p>\n"}, {"tags": ["image", "rust"], "answers": [{"tags": [], "owner": {"reputation": 380, "user_id": 3720597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/860841962137d13d97b2c544138d4274?s=128&d=identicon&r=PG", "display_name": "sbdchd", "link": "https://stackoverflow.com/users/3720597/sbdchd"}, "is_accepted": true, "score": 2, "last_activity_date": 1491690577, "creation_date": 1491690577, "answer_id": 43300993, "question_id": 43300921, "link": "https://stackoverflow.com/questions/43300921/unable-to-save-an-imagebuffer-no-method-named-save-found/43300993#43300993", "title": "Unable to save an ImageBuffer: no method named `save` found", "body": "<p>I ended up needing to do some type conversion to get the signatures to agree.</p>\n\n<p>Here is the working code:</p>\n\n<pre><code>extern crate image;\n\nuse image::{ImageBuffer, Pixel, Rgb};\n\nfn main() {\n    let mut img = ImageBuffer::new(256, 256);\n\n    for x in 0..256 {\n        for y in 0..256 {\n            let pixel = Rgb::from_channels(0, x as u8 ^ y as u8, 0, 0);\n            img.put_pixel(x as u32, y as u32, pixel);\n        }\n    }\n\n    img.save(\"output.png\");\n}\n</code></pre>\n"}], "owner": {"reputation": 380, "user_id": 3720597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/860841962137d13d97b2c544138d4274?s=128&d=identicon&r=PG", "display_name": "sbdchd", "link": "https://stackoverflow.com/users/3720597/sbdchd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 286, "favorite_count": 0, "accepted_answer_id": 43300993, "answer_count": 1, "score": 2, "last_activity_date": 1491696512, "creation_date": 1491690044, "last_edit_date": 1491696512, "question_id": 43300921, "link": "https://stackoverflow.com/questions/43300921/unable-to-save-an-imagebuffer-no-method-named-save-found", "title": "Unable to save an ImageBuffer: no method named `save` found", "body": "<p>I am trying to save an <a href=\"https://docs.rs/image/0.12.3/image/struct.ImageBuffer.html\" rel=\"nofollow noreferrer\"><code>ImageBuffer</code></a> to a file, but I am having some trouble getting types to agree:</p>\n\n<pre><code>extern crate image;\n\nuse image::{ImageBuffer, Pixel, Rgb};\n\nfn main() {\n    let img = ImageBuffer::new(256, 256);\n\n    for x in 0..256 {\n        for y in 0..256 {\n            let pixel = Rgb::from_channels(0, x ^ y, 0, 0);\n            img.put_pixel(x, y, pixel);\n        }\n    }\n\n    img.save(\"output.png\");\n}\n</code></pre>\n\n<p>Which produces the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no method named `save` found for type `image::ImageBuffer&lt;image::Rgb&lt;u32&gt;, std::vec::Vec&lt;u32&gt;&gt;` in the current scope\n  --&gt; src/main.rs:15:9\n   |\n15 |     img.save(\"output.png\");\n   |         ^^^^\n</code></pre>\n\n<p>I believe the type of pixel isn't matching up with the definition required for <a href=\"https://docs.rs/image/0.12.3/image/struct.ImageBuffer.html#method.save\" rel=\"nofollow noreferrer\"><code>save</code> seen in the docs</a>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 311, "user_id": 5565524, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e01d4510756240d09c3b3054f8e1c3a?s=128&d=identicon&r=PG&f=1", "display_name": "Tilded", "link": "https://stackoverflow.com/users/5565524/tilded"}, "edited": false, "score": 0, "creation_date": 1491681558, "post_id": 43299433, "comment_id": 73665009, "body": "Thanks! I ended up going with your second option. As long as I don&#39;t add any more options, it works fine."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1491683115, "post_id": 43299433, "comment_id": 73665576, "body": "Interestingly, Rust doesn&#39;t even allow you to &quot;cheat&quot; by writing a <code>parse_pos()</code> that explicitly saves the parsed data to the provided reference (and returns bool to work as an if inside match). The invocation is rejected by the compiler with <a href=\"https://play.rust-lang.org/?gist=ba15518624b85712cf34eb30b74fbbca&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">&quot;cannot borrow mutably in a pattern guard&quot;</a>. I wonder why this restriction is in place."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1491683407, "post_id": 43299433, "comment_id": 73665652, "body": "@user4815162342 <a href=\"https://doc.rust-lang.org/error-index.html#E0301\" rel=\"nofollow noreferrer\">E0301</a> explained it. You could still use a Cell to workaround it."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1491683680, "post_id": 43299433, "comment_id": 73665744, "body": "@kennytm Thanks. It&#39;s a good explanation, it really pays to read the detailed message."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1491813179, "post_id": 43299433, "comment_id": 73700958, "body": "@user4815162342: A lot of work has been put in the compiler errors; not only the error messages themselves (both content and formatting) but also the additional explanations provided by <code>--explain</code> or available on the page linked to. If you have issues understanding an error, I really encourage you to check the detailed message. And if the detailed message is not enough, or you have an idea for either the compiler message or the detail message, please speak up :)"}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 3, "last_activity_date": 1491679522, "creation_date": 1491679522, "answer_id": 43299433, "question_id": 43299034, "link": "https://stackoverflow.com/questions/43299034/avoiding-redundant-work-when-matching-and-parsing/43299433#43299433", "title": "Avoiding redundant work when matching and parsing", "body": "<p>There is no elegant way to save the intermediate result of the <code>if</code> clause. Yes you could go back to an <code>if</code> statement.</p>\n\n<pre><code>if input == \"exit\" {\n    return;\n}\nlet pos = parse_pos(input).unwrap_or((0, 0));\n</code></pre>\n\n<p>You could still use a <code>match</code> like this:</p>\n\n<pre><code>let pos = match input {\n    \"exit\" =&gt; return,\n    _ =&gt; parse_pos(input).unwrap_or((0, 0)),\n};\n</code></pre>\n\n<p>(Note that the early-return here does not really stand out. Could be a problem for future readers.)</p>\n"}], "owner": {"reputation": 311, "user_id": 5565524, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e01d4510756240d09c3b3054f8e1c3a?s=128&d=identicon&r=PG&f=1", "display_name": "Tilded", "link": "https://stackoverflow.com/users/5565524/tilded"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 43299433, "answer_count": 1, "score": 1, "last_activity_date": 1491696442, "creation_date": 1491677154, "last_edit_date": 1491696442, "question_id": 43299034, "link": "https://stackoverflow.com/questions/43299034/avoiding-redundant-work-when-matching-and-parsing", "title": "Avoiding redundant work when matching and parsing", "body": "<p>I'm using <code>match</code> to see if string input is a position, and if it does, convert it to a tuple. For example, \"B6\" would become (1, 5). I have the functions <code>is_pos</code> to math the right input and <code>parse_pos</code> to transform it, so each <code>match</code> needs to perform string parsing twice.</p>\n\n<pre><code>fn main() {\n    let input = \"\"\n    match input {\n        \"exit\" =&gt; return,\n        _ if is_pos(input) =&gt; parse_pos(input),\n        _ =&gt; (0, 0),\n    };\n}\n\nfn is_pos(str: &amp;str) -&gt; bool {\n    // string processing\n    true\n}\n\nfn parse_pos(str: &amp;str) -&gt; u32 {\n    // the same string processing\n    5\n}\n</code></pre>\n\n<p>I'd to have one function that returns an <code>Option</code>. Then the match would select the <code>Option</code> if it wasn't none, and I could unwrap it without needing to redo the string parsing.</p>\n\n<p>Is this possible with <code>match</code>, or should I go back to using if statements?</p>\n"}, {"tags": ["rust", "ncurses", "tui"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491660962, "post_id": 43294867, "comment_id": 73657081, "body": "Cursive expects UTF-8 output. What is set to the <code>$LANG</code> of your terminal?"}, {"owner": {"reputation": 43, "user_id": 2323468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09ae8812a00525a602ebd21806bdc4b7?s=128&d=identicon&r=PG&f=1", "display_name": "Matt", "link": "https://stackoverflow.com/users/2323468/matt"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491661430, "post_id": 43294867, "comment_id": 73657231, "body": "I&#39;m using en_GB.UTF-8, also other utf-8 characters work."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1491687774, "post_id": 43294867, "comment_id": 73666812, "body": "It works for me in pterm and gnome-terminal.  I also suspect your terminal isn&#39;t really UTF-8; I can get a similar effect if I change my terminal encoding to something non-UTF-8."}], "answers": [{"tags": [], "owner": {"reputation": 6165, "user_id": 1901658, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/95eee89c6704eb4d075c33821c61af72?s=128&d=identicon&r=PG", "display_name": "Fredrick Brennan", "link": "https://stackoverflow.com/users/1901658/fredrick-brennan"}, "is_accepted": false, "score": 1, "last_activity_date": 1541845607, "creation_date": 1541845607, "answer_id": 53238023, "question_id": 43294867, "link": "https://stackoverflow.com/questions/43294867/weird-characters-when-using-cursive-selectview/53238023#53238023", "title": "Weird characters when using cursive SelectView", "body": "<p>This was happening to me when editing through <code>vim</code>, running it this way solved it:</p>\n\n<pre><code>LANG=en_US.UTF-8 cargo run\n</code></pre>\n\n<p>This should work if you're using <code>bash</code> or another shell that supports setting the environment this way.</p>\n"}], "owner": {"reputation": 43, "user_id": 2323468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09ae8812a00525a602ebd21806bdc4b7?s=128&d=identicon&r=PG&f=1", "display_name": "Matt", "link": "https://stackoverflow.com/users/2323468/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1541845607, "creation_date": 1491659009, "last_edit_date": 1491661664, "question_id": 43294867, "link": "https://stackoverflow.com/questions/43294867/weird-characters-when-using-cursive-selectview", "title": "Weird characters when using cursive SelectView", "body": "<p>Here is my code:</p>\n\n<pre><code>extern crate cursive;\n\nuse cursive::Cursive;\nuse cursive::views::{SelectView, Dialog};\nuse cursive::align::HAlign;\n\nfn main() {\n    let mut time_select = SelectView::new().h_align(HAlign::Center);\n    time_select.add_item(\"Short\", 1);\n    time_select.add_item(\"Medium\", 5);\n    time_select.add_item(\"Long\", 10);\n\n    let mut siv = Cursive::new();\n    siv.add_layer(Dialog::around(time_select).title(\"How long is your wait?\"));\n    siv.run();\n}\n</code></pre>\n\n<p>And this is the result: </p>\n\n<p><img src=\"https://i.stack.imgur.com/7cX0L.png\" alt=\"\"></p>\n\n<p>This happens with multiple terminal emulators. How can I solve this?</p>\n"}, {"tags": ["arrays", "rust", "iteration", "slice"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491661881, "post_id": 43293834, "comment_id": 73657378, "body": "I&#39;m voting to close this question as off-topic because the code works and is asking for ways to improve it. Questions like this better belong on <a href=\"https://codereview.stackexchange.com/\">Code Review</a>. <a href=\"https://codereview.meta.stackexchange.com/questions/5777/a-guide-to-code-review-for-stack-overflow-users\">See also the guide to CR for SO users</a>"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1491677518, "post_id": 43293834, "comment_id": 73663613, "body": "<code>Vec&lt;Vec&lt;T&gt;&gt;</code> is <i>not</i> an efficient representation of a two-dimensional array. Use <code>Vec&lt;T&gt;</code> instead, and implement <code>IndexMut&lt;(usize, usize)&gt; for MatrixEquation</code>. Or, better, use a <a href=\"https://crates.io/crates/ndarray\" rel=\"nofollow noreferrer\">crate designed to support</a> n-dimensional arrays."}], "owner": {"reputation": 59, "user_id": 7804532, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e740e8a0856e7846edd3e3750703f092?s=128&d=identicon&r=PG&f=1", "display_name": "jln", "link": "https://stackoverflow.com/users/7804532/jln"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1940, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1491677626, "creation_date": 1491652838, "last_edit_date": 1491661751, "question_id": 43293834, "link": "https://stackoverflow.com/questions/43293834/the-best-way-to-iterate-over-sections-of-2d-arrays-in-rust", "title": "The best way to iterate over sections of 2D arrays in Rust", "body": "<p>I'm learning Rust by porting a small program that was written in C.  It works with comparable performance to the C version.  Still, I can't help but feeling my code could be better, hence this post.</p>\n\n<p>The following code solves a matrix equation using Gaussian elimination, which requires iterating over portions of an array.</p>\n\n<pre><code>pub struct MatrixEquation {\n    vec: Vec&lt;f64&gt;,\n    mat: Vec&lt;Vec&lt;f64&gt;&gt;,\n}\n\nimpl MatrixEquation {\n    fn solve(&amp;mut self) {\n        let size = self.vec.len();\n        // Transform matrix to upper triangular\n        for row in 0..size {\n            let mut rfabs = self.mat[row][row].abs();\n            let mut pivot = row;\n\n            for trow in row + 1..size {\n                let tfabs = self.mat[trow][row].abs();\n                if tfabs &gt; rfabs {\n                    pivot = trow;\n                    rfabs = tfabs;\n                }\n            }\n\n            if pivot != row {\n                self.vec.swap(pivot, row);\n                self.mat.swap(pivot, row);\n            }\n\n            if !self.mat[row][row].is_normal() {\n                die!(\"Matrix is singular\");\n            }\n\n            for elem in row + 1..size {\n                if self.mat[elem][row] != 0.0 {\n                    let scale = self.mat[elem][row] / self.mat[row][row];\n                    for tcol in row..size {\n                        self.mat[elem][tcol] -= self.mat[row][tcol] * scale;\n                    }\n                    self.vec[elem] -= self.vec[row] * scale;\n                }\n            }\n        }\n\n        for row in (0..size).rev() {\n            self.vec[row] /= self.mat[row][row];\n            let backsub = self.vec[row];\n            for trow in 0..row {\n                self.vec[trow] -= self.mat[trow][row] * backsub;\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>My first concern is the back substitution loop at the end.  I have to loop through the rows backwards.  It seems like there would be a straight forward way to do this.  Constructing a range and calling rev() seems to be an accepted way to do this, but it seems heavy handed.  What is regarded as best practice for doing something like this?</p>\n\n<p>My other concern is that I'm using numerical indices rather than iterators, and I don't want to do anything which forces the compiler to do bounds checking.  I found the zip() method which could potentially be useful for what I'm trying to do, but since I am not starting at the beginning of the rows when I traverse them, I'd have to call skip() which I think is less efficient than numerically indexing into the middle of the row.  If you were writing the elem loop in the program above, how would you do it?</p>\n"}, {"tags": ["path", "rust", "cross-platform"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 7, "creation_date": 1491644915, "post_id": 43292357, "comment_id": 73652220, "body": "&quot;<i>Should one use conditional compiling?</i>&quot; \u2014 yes."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1491651983, "post_id": 43292357, "comment_id": 73654221, "body": "Depending on what kind of default path you need, there may be already a crate so <i>don&#39;t</i> you need to write the <code>#[cfg]</code> yourself."}], "answers": [{"tags": [], "owner": {"reputation": 756, "user_id": 3662167, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4bbd2ecd016e674470b4de5f1620c88f?s=128&d=identicon&r=PG", "display_name": "Erich Gubler", "link": "https://stackoverflow.com/users/3662167/erich-gubler"}, "is_accepted": false, "score": 3, "last_activity_date": 1495827719, "last_edit_date": 1495827719, "creation_date": 1493773401, "answer_id": 43749460, "question_id": 43292357, "link": "https://stackoverflow.com/questions/43292357/how-can-one-detect-the-os-type-using-rust/43749460#43749460", "title": "How can one detect the OS type using Rust?", "body": "<p>EDIT: </p>\n\n<p>Since writing this answer, it seems the author of the <code>os_type</code> crate has retracted functionality that exposed OSes like Windows. Conditional compilation is probably your best bet here -- <code>os_type</code> only seems to detect Linux distributions now, judging from its <a href=\"https://github.com/schultyy/os_type/blob/master/src/lib.rs\" rel=\"nofollow noreferrer\">lib.rs</a>.</p>\n\n<hr>\n\n<p>ORIGINAL ANSWER:</p>\n\n<p>You could always use the <a href=\"https://github.com/schultyy/os_type\" rel=\"nofollow noreferrer\"><code>os_type</code></a> crate. From the front page:</p>\n\n<pre><code>extern crate os_type;\n\nfn foo() {\n      match os_type::current_platform() {\n        os_type::OSType::OSX =&gt; /*Do something here*/,\n        _ =&gt; None\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "edited": false, "score": 3, "creation_date": 1514933737, "post_id": 47805781, "comment_id": 83111614, "body": "This treats Linux, BSD, and OSX as the same platform. Sometimes this is what you want but not always."}, {"owner": {"reputation": 111, "user_id": 9445059, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IrLXC.jpg?s=128&g=1", "display_name": "Federico Razzoli", "link": "https://stackoverflow.com/users/9445059/federico-razzoli"}, "reply_to_user": {"reputation": 3558, "user_id": 1732563, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b51d68c0232ecc9de87719a203ccb428?s=128&d=identicon&r=PG", "display_name": "Sean Perry", "link": "https://stackoverflow.com/users/1732563/sean-perry"}, "edited": false, "score": 0, "creation_date": 1593961354, "post_id": 47805781, "comment_id": 110953252, "body": "@SeanPerry once you know it&#39;s a UNIX like system you can just check for files or commands that should tell you which system/distro/version you&#39;re running on."}], "tags": [], "owner": {"reputation": 351, "user_id": 6335914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6Lanm.png?s=128&g=1", "display_name": "Bo Lu", "link": "https://stackoverflow.com/users/6335914/bo-lu"}, "is_accepted": false, "score": 17, "last_activity_date": 1617511680, "last_edit_date": 1617511680, "creation_date": 1513224740, "answer_id": 47805781, "question_id": 43292357, "link": "https://stackoverflow.com/questions/43292357/how-can-one-detect-the-os-type-using-rust/47805781#47805781", "title": "How can one detect the OS type using Rust?", "body": "<p>You can also use <code>cfg!</code> syntax extension.</p>\n<pre><code>if cfg!(windows) {\n    println!(&quot;this is windows&quot;);\n} else if cfg!(unix) {\n    println!(&quot;this is unix alike&quot;);\n}\n</code></pre>\n<p>To just get <code>macos</code>, you can do:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>if cfg!(target_os = &quot;macos&quot;) {\n  println!(&quot;cargo:rustc-link-lib=framework=CoreFoundation&quot;);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 406, "user_id": 12048753, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-sSG5yrwIcLo/AAAAAAAAAAI/AAAAAAAAAi0/bMXxGdppi7g/photo.jpg?sz=128", "display_name": "Fausto Alonso", "link": "https://stackoverflow.com/users/12048753/fausto-alonso"}, "is_accepted": false, "score": 19, "last_activity_date": 1592313060, "creation_date": 1592313060, "answer_id": 62409338, "question_id": 43292357, "link": "https://stackoverflow.com/questions/43292357/how-can-one-detect-the-os-type-using-rust/62409338#62409338", "title": "How can one detect the OS type using Rust?", "body": "<p>It's a little late, but there's a builtin way to detect the OS using the std lib. Eg:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::env;\n\nprintln!(\"{}\", env::consts::OS); // Prints the current OS.\n\n\n</code></pre>\n\n<p>The possible values are described <a href=\"https://doc.rust-lang.org/std/env/consts/constant.OS.html\" rel=\"noreferrer\">here</a></p>\n\n<p>Hope this help somebody in the future.</p>\n"}], "owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7299, "favorite_count": 6, "answer_count": 3, "score": 20, "last_activity_date": 1617511680, "creation_date": 1491643703, "last_edit_date": 1585150300, "question_id": 43292357, "link": "https://stackoverflow.com/questions/43292357/how-can-one-detect-the-os-type-using-rust", "title": "How can one detect the OS type using Rust?", "body": "<p>How can one detect the OS type using Rust? I need to specify a default path specific to the OS. Should one use conditional compilation?</p>\n\n<p>For example: </p>\n\n<pre><code>#[cfg(target_os = \"macos\")]\nstatic DEFAULT_PATH: &amp;str = \"path2\";\n#[cfg(target_os = \"linux\")]\nstatic DEFAULT_PATH: &amp;str = \"path0\";\n#[cfg(target_os = \"windows\")]\nstatic DEFAULT_PATH: &amp;str = \"path1\";\n</code></pre>\n"}, {"tags": ["foreach", "rust", "optional"], "comments": [{"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 4, "creation_date": 1491592264, "post_id": 43285372, "comment_id": 73639071, "body": "<a href=\"https://github.com/rust-unofficial/patterns/blob/master/idioms/option-iter.md\" rel=\"nofollow noreferrer\">github.com/rust-unofficial/patterns/blob/master/idioms/&hellip;</a>"}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 0, "creation_date": 1491594242, "post_id": 43285372, "comment_id": 73640085, "body": "@JoshLee That repo looks like a really good thing to read in its entirety! Thank you."}], "answers": [{"comments": [{"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1491594040, "post_id": 43285436, "comment_id": 73640009, "body": "&quot;<code>Option</code> can be thought of as a container that can hold exactly zero or one elements.&quot; So...semantically, it&#39;s kind of like a <code>Box</code> but its owned object is entirely contained instead of heap-allocated? That&#39;s...not really the semantics I expected from <code>Option</code>, but I guess it makes sense. To be absolutely clear, your <code>flat_map(|x| x)</code> is equivalent to something like <code>map(|x| x.unwrap_or(0))</code>, correct?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1491594272, "post_id": 43285436, "comment_id": 73640096, "body": "Why <code>flat_map()</code> instead of <code>filter_map()</code>? I&#39;d say the latter is more fitting in this situation..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 1, "creation_date": 1491594485, "post_id": 43285436, "comment_id": 73640200, "body": "@KyleStrand the heap-allocation aspect is orthogonal, really. <code>Vec</code> uses the heap to have dynamic capacity. There are stack-based collections too, usually with a fixed capacity. I only half-heartedly agree with the <code>unwrap_or</code> comparison. In <i>this</i> example, yes, they have the same result (due to how addition on integers works), but using <code>collect</code> instead of <code>sum</code> would show how they are different."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 2, "creation_date": 1491594611, "post_id": 43285436, "comment_id": 73640254, "body": "@KyleStrand: A friendly reminder that <code>Box</code> always has an object in Rust, there is no null <code>Box</code> :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1491594676, "post_id": 43285436, "comment_id": 73640282, "body": "@LukasKalbertodt that&#39;s a tough question, which has been <a href=\"https://www.reddit.com/r/rust/comments/4xkat3/why_filter_map_and_flat_map/?ref=share&amp;ref_source=link\" rel=\"nofollow noreferrer\">discussed at least once before</a>. <i>My</i> answer is because I like me some functional programming and monads, so I think of <code>flat_map</code>. The linked discussion suggests that <code>filter_map</code> is less powerful than <code>flat_map</code> and thus <code>filter_map</code> is the redundant one."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1491594852, "post_id": 43285436, "comment_id": 73640365, "body": "Hm, you&#39;re right that <code>collect</code> would be harder to use with <code>map</code> instead of <code>flat_map</code> in this case. I agree that with @LukasKalbertodt that <code>filter_map</code> seems even better, though. What&#39;s not &quot;functional&quot; about it? And doesn&#39;t it still involve a monad?"}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491594867, "post_id": 43285436, "comment_id": 73640378, "body": "And @MatthieuM.&#39;s point is, I think, the real reason my <code>Box</code> comparison doesn&#39;t work (I forgot that C++&#39;s <code>unique_ptr</code> is actually more like an unsafe <code>Option&lt;Box&gt;</code> than mere <code>Box</code>)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1491594971, "post_id": 43285436, "comment_id": 73640436, "body": "@KyleStrand: exactly my point yes; memory layout apart, <code>Box&lt;T&gt;</code> only represent a subset of <code>Option&lt;T&gt;</code> possible states: it&#39;s missing exactly one state, the empty one."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 1, "creation_date": 1491595266, "post_id": 43285436, "comment_id": 73640583, "body": "@KyleStrand Sorry, I don&#39;t mean to suggest that one is <i>more</i> functional than the other, just that the combined action &quot;flat-map&quot; is the name of something that exists in a functional language like Clojure, while &quot;filter-map&quot; is not, based on my experience. Usually it&#39;s composed of separate <code>filter</code> and <code>map</code> operations. Rust combines the two for ownership reasons."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491595313, "post_id": 43285436, "comment_id": 73640604, "body": "Additionally, if you choose to use <code>filter_map</code>, you don&#39;t get the removal of <code>Result</code> for &quot;free&quot;; you have to explicitly convert to an <code>Option</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 15, "last_activity_date": 1590003898, "last_edit_date": 1590003898, "creation_date": 1491592073, "answer_id": 43285436, "question_id": 43285372, "link": "https://stackoverflow.com/questions/43285372/why-does-option-support-intoiterator/43285436#43285436", "title": "Why does `Option` support `IntoIterator`?", "body": "<blockquote>\n  <p>What use case is there for iterating over an <code>Option</code>?</p>\n</blockquote>\n\n<p>My favorite reason, in a word, is <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten\" rel=\"nofollow noreferrer\"><code>flatten</code></a>:</p>\n\n<pre><code>fn main() {\n    let results = vec![Some(1), None, Some(3), None];\n    let sum: i32 = results.into_iter().flatten().sum();\n    println!(\"{}\", sum)\n}\n</code></pre>\n\n<p>Before Rust 1.29, you can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>flat_map</code></a>:</p>\n\n<pre><code>fn main() {\n    let results = vec![Some(1), None, Some(3), None];\n    let sum: i32 = results.into_iter().flat_map(|x| x).sum();\n    println!(\"{}\", sum)\n}\n</code></pre>\n\n<p><code>Option</code> can be thought of as a container that can hold exactly zero or one elements. Compare this to a <code>Vec</code>, which can hold zero or many elements. In a large set of ways, an <code>Option</code> <em>is</em> a container just like a <code>Vec</code>!</p>\n\n<p>Implementing <code>IntoIterator</code> allows <code>Option</code> to participate in a larger share of APIs.</p>\n\n<p>Note that <code>IntoIterator</code> is <em>also</em> implemented for <code>Result</code>, for similar reasons.</p>\n\n<blockquote>\n  <p>But this is incredibly confusing</p>\n</blockquote>\n\n<p>Yes, it is, which is why Clippy <a href=\"https://github.com/Manishearth/rust-clippy/wiki#for_loop_over_option\" rel=\"nofollow noreferrer\">has a lint for it</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: for loop over `str_vec.get(0..3)`, which is an `Option`.\n         This is more readably written as an `if let` statement.\n</code></pre>\n\n<p>This shows that there are ways that an <code>Option</code> is <em>not</em> like a container to a programmer.</p>\n"}], "owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 932, "favorite_count": 0, "answer_count": 1, "score": 13, "last_activity_date": 1590003898, "creation_date": 1491591804, "question_id": 43285372, "link": "https://stackoverflow.com/questions/43285372/why-does-option-support-intoiterator", "title": "Why does `Option` support `IntoIterator`?", "body": "<p>I was trying to iterate over a subsection of a vector of strings, i.e. a subslice of <code>Vec&lt;String&gt;</code>. Within each iteration, I wanted to pass the string as a slice to a function.</p>\n\n<p>I didn't notice that <code>Vec::get</code> returns an <code>Option</code>, and thought I could just directly iterate over the return value:</p>\n\n<pre><code>fn take_str(s: &amp;str) {\n    println!(\"{}\", s);\n}\n\nfn main() {\n    let str_vec: Vec&lt;String&gt; =\n        [\"one\", \"two\", \"three\", \"uno\", \"dos\", \"tres\"].iter().map(|&amp;s| \n        s.into()).collect();\n    for s in str_vec.get(0..3) {\n        take_str(&amp;s); // Type mismatch: found type `&amp;&amp;[std::string::String]`\n    }\n}\n</code></pre>\n\n<p>Clearly, I was expecting <code>s</code> to be a <code>String</code>, but it's actually <code>&amp;[String]</code>. This is because my for loop is actually iterating over the <code>Option</code> returned by <code>Vec::get()</code>.</p>\n\n<p>I also wrote the following code, which demonstrates that the <code>for</code> loop is in fact unwrapping an <code>Option</code>:</p>\n\n<pre><code>let foo = Option::Some ( [\"foo\".to_string()] );\nfor f in foo {\n    take_str(&amp;f); // Same error as above, showing `f` is of type `&amp;[String]`\n}\n</code></pre>\n\n<p>But this is incredibly confusing; I never expected (until I wrote this code and figured out what it's actually doing) that <code>Option</code> could be unwrapped by <em>iterating</em> over it. Why is that supported? What use case is there for iterating over an <code>Option</code>?</p>\n"}, {"tags": ["rust", "iron"], "answers": [{"comments": [{"owner": {"reputation": 1750, "user_id": 1014841, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/ff251bd0806aa3e700db933d599dadd4?s=128&d=identicon&r=PG", "display_name": "Yves Dorfsman", "link": "https://stackoverflow.com/users/1014841/yves-dorfsman"}, "edited": false, "score": 0, "creation_date": 1491592655, "post_id": 43285337, "comment_id": 73639279, "body": "Adding this to <code>iron::middleware::AfterMiddleware</code> is sufficient to make it the default?"}, {"owner": {"reputation": 315, "user_id": 7834290, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-oQIS59uiukM/AAAAAAAAAAI/AAAAAAAAAQY/6cQ_5I7AEUw/photo.jpg?sz=128", "display_name": "L. L. Blumire", "link": "https://stackoverflow.com/users/7834290/l-l-blumire"}, "reply_to_user": {"reputation": 1750, "user_id": 1014841, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/ff251bd0806aa3e700db933d599dadd4?s=128&d=identicon&r=PG", "display_name": "Yves Dorfsman", "link": "https://stackoverflow.com/users/1014841/yves-dorfsman"}, "edited": false, "score": 0, "creation_date": 1491644871, "post_id": 43285337, "comment_id": 73652215, "body": "@YvesDorfsman Adding that as an aftermiddleware to the chain your website is mounted on would be, as all responses would go through it before being sent out. You&#39;re looking for iron::middleware::Chain::link_after I believe"}], "tags": [], "owner": {"reputation": 315, "user_id": 7834290, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-oQIS59uiukM/AAAAAAAAAAI/AAAAAAAAAQY/6cQ_5I7AEUw/photo.jpg?sz=128", "display_name": "L. L. Blumire", "link": "https://stackoverflow.com/users/7834290/l-l-blumire"}, "is_accepted": false, "score": 1, "last_activity_date": 1506540308, "last_edit_date": 1506540308, "creation_date": 1491591641, "answer_id": 43285337, "question_id": 43284994, "link": "https://stackoverflow.com/questions/43284994/how-to-change-irons-default-404-behaviour/43285337#43285337", "title": "How to change Iron&#39;s default 404 behaviour?", "body": "<p>Iron <a href=\"https://github.com/iron/router/blob/master/examples/custom_404.rs\" rel=\"nofollow noreferrer\">has an example for how to do this</a>.</p>\n\n<p>Create and start your program on an <code>iron::Chain</code>, and then create an <code>iron::middleware::AfterMiddleware</code>. This middleware could look like:</p>\n\n<pre><code>fn custom_404(req: &amp;mut Request, res: &amp;mut Response) -&gt; IronResult&lt;Response&gt; {\n    if response.status == Some(Status::NotFound) {\n        // Create a response as desired here.\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1750, "user_id": 1014841, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/ff251bd0806aa3e700db933d599dadd4?s=128&d=identicon&r=PG", "display_name": "Yves Dorfsman", "link": "https://stackoverflow.com/users/1014841/yves-dorfsman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1506540308, "creation_date": 1491590113, "last_edit_date": 1491592531, "question_id": 43284994, "link": "https://stackoverflow.com/questions/43284994/how-to-change-irons-default-404-behaviour", "title": "How to change Iron&#39;s default 404 behaviour?", "body": "<p>I want to change the default 404 behaviour in a small Iron application. I want to add some simple text content to it, nothing complicated like using templates.</p>\n"}, {"tags": ["documentation", "rust", "github-pages", "rust-cargo", "rustdoc"], "answers": [{"comments": [{"owner": {"reputation": 31254, "user_id": 355252, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/2z2gH.png?s=128&g=1", "display_name": "lunaryorn", "link": "https://stackoverflow.com/users/355252/lunaryorn"}, "edited": false, "score": 1, "creation_date": 1491654415, "post_id": 43285406, "comment_id": 73655009, "body": "Worth noting that Travis CI has built-in support for GitHub pages deployment these days\u2014you no longer need custom deploy scripts."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1491591920, "creation_date": 1491591920, "answer_id": 43285406, "question_id": 43284743, "link": "https://stackoverflow.com/questions/43284743/how-to-conveniently-host-a-crates-up-to-date-documentation/43285406#43285406", "title": "How to conveniently host a crate&#39;s up-to-date documentation?", "body": "<p>For many crates, <a href=\"https://docs.rs/\" rel=\"nofollow noreferrer\">Docs.rs</a> is a good solution. It <a href=\"https://docs.rs/about\" rel=\"nofollow noreferrer\">describes itself</a> as:</p>\n\n<blockquote>\n  <p>Docs.rs (formerly cratesfyi) is an open source project to host documentation of crates for the Rust Programming Language.</p>\n  \n  <p>Docs.rs automatically builds crates' documentation released on crates.io using the nightly release of the Rust compiler.</p>\n</blockquote>\n\n<p>This has tradeoffs:</p>\n\n<ul>\n<li>Documentation is automatically generated and hosted for you, you don't even have to opt-in.</li>\n<li>Documentation for each version of your crate is available.</li>\n<li>If you have platform-specific conditional compilation, documentation for different platforms can be shown. </li>\n<li>Only <strong>released</strong> versions of your crates will be documented. You can't publish a typo in the docs without a new release.</li>\n<li>You are beholden to a third-party entity to continue providing this service.</li>\n<li>You cannot (currently?) control what feature flags are used.</li>\n</ul>\n\n<hr>\n\n<p>Some people prefer to have more control over their documentation, or otherwise don't fall into the target audience for Docs.rs. Many of those cases choose to configure their CI infrastructure to generate the documentation and push the result somewhere.</p>\n\n<p>A common implementation of that is to use <a href=\"https://travis-ci.org/\" rel=\"nofollow noreferrer\">Travis CI</a> and <a href=\"https://pages.github.com/\" rel=\"nofollow noreferrer\">GitHub Pages</a> as many projects already use these services. Any CI system and HTML hosting service can be used, so long as you are comfortable connecting the two.</p>\n\n<p>The general concept is:</p>\n\n<ol>\n<li>Add a step to build the documentation in CI.</li>\n<li>When a certain type of build is detected, push the generated documentation to the hosting service.\n\n<ul>\n<li>Possible choices for the type of build: any branch; master branch; a tag; etc.</li>\n<li><strong>Be careful</strong> to avoid exposing any credentials. A common mistake (that I have made myself) is to use a command like <code>git push https://${GH_TOKEN}@github.com/...</code>. If this command fails, the <em>token is printed to stderr</em>, exposing it to the world. Other less-obvious cases also expose the token on failure, so check those thoroughly.</li>\n</ul></li>\n</ol>\n\n<p>Some people have published blog posts detailing how they set things up. I have <em>not</em> verified that any of these are sane, but they may contain details to help you configure a specific solution.</p>\n\n<ul>\n<li><p><a href=\"https://hoverbear.org/2015/03/07/rust-travis-github-pages/\" rel=\"nofollow noreferrer\">Rust, Travis, and Github Pages</a></p></li>\n<li><p><a href=\"https://github.com/kmcallister/travis-doc-upload\" rel=\"nofollow noreferrer\">Rust docs on GitHub Pages via Travis</a></p></li>\n<li><p><a href=\"http://www.steveklabnik.com/automatically_update_github_pages_with_travis_example/\" rel=\"nofollow noreferrer\">Automatically Update Github Pages with Travis</a></p></li>\n</ul>\n"}], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 643, "favorite_count": 0, "accepted_answer_id": 43285406, "answer_count": 1, "score": 2, "last_activity_date": 1491591920, "creation_date": 1491589280, "last_edit_date": 1491590691, "question_id": 43284743, "link": "https://stackoverflow.com/questions/43284743/how-to-conveniently-host-a-crates-up-to-date-documentation", "title": "How to conveniently host a crate&#39;s up-to-date documentation?", "body": "<p>I recently published my first crate on crates.io and I am wondering if I can maintain its documentation in an easier way.</p>\n\n<p>Quite a few crates' docs are hosted on GitHub pages, so I thought I would give it a shot. I created a user.github.io repo, generated docs with <code>cargo doc</code> and pushed them to it. Everything worked just fine, the docs can be viewed from crates.io.</p>\n\n<p>However, updating them is inconvenient; if I modify the crate's documentation, I need to:</p>\n\n<ol>\n<li>push these changes to the crate's repo</li>\n<li>generate updated docs via <code>cargo doc</code></li>\n<li>move the docs' files to the GitHub page's folder</li>\n<li>push the docs to the documentation's repo</li>\n</ol>\n\n<p>I'm pretty sure I'm not doing it right - especially point 3. What can I do to simplify this process? Is there any better way?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1339, "user_id": 481724, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c545780442a6d104ced0f1a3bd4a425c?s=128&d=identicon&r=PG", "display_name": "chamibuddhika", "link": "https://stackoverflow.com/users/481724/chamibuddhika"}, "edited": false, "score": 0, "creation_date": 1491572959, "post_id": 43279300, "comment_id": 73627558, "body": "I am bit confused. &amp;mut is a 64bit reference (to a slice) isn&#39;t it?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 1339, "user_id": 481724, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c545780442a6d104ced0f1a3bd4a425c?s=128&d=identicon&r=PG", "display_name": "chamibuddhika", "link": "https://stackoverflow.com/users/481724/chamibuddhika"}, "edited": false, "score": 0, "creation_date": 1491574038, "post_id": 43279300, "comment_id": 73628399, "body": "No - I&#39;ve updated the answer with a bit more information."}, {"owner": {"reputation": 1339, "user_id": 481724, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c545780442a6d104ced0f1a3bd4a425c?s=128&d=identicon&r=PG", "display_name": "chamibuddhika", "link": "https://stackoverflow.com/users/481724/chamibuddhika"}, "edited": false, "score": 0, "creation_date": 1491585979, "post_id": 43279300, "comment_id": 73636011, "body": "Great! Now it makes sense."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 5, "last_activity_date": 1491574320, "last_edit_date": 1491574320, "creation_date": 1491571381, "answer_id": 43279300, "question_id": 43279102, "link": "https://stackoverflow.com/questions/43279102/how-is-from-raw-parts-mut-able-to-transmute-between-types-of-different-sizes/43279300#43279300", "title": "How is from_raw_parts_mut able to transmute between types of different sizes?", "body": "<p><code>mem::transmute()</code> does only work when transmuting to a type of the same size - so that means an <code>&amp;mut[T]</code> slice is also the same size.</p>\n\n<p>Looking at <code>Repr</code>:</p>\n\n<pre><code>#[repr(C)]\nstruct Repr&lt;T&gt; {\n    pub data: *const T,\n    pub len: usize,\n}\n</code></pre>\n\n<p>It has a pointer to some data and a length.  This is exactly what a slice is - a pointer to an array of items (which might be an actual array, or owned by a <code>Vec&lt;T&gt;</code>, etc.) with a length to say how many items are valid.</p>\n\n<p>The object which is passed around as a slice is (under the covers) exactly what the <code>Repr</code> looks like, even though the data it refers to can be anything from 0 to as many <code>T</code> as will fit into memory.</p>\n\n<p>In Rust, some references are not just implemented as a pointer as in some other languages.  Some types are \"fat pointers\".  This might not be obvious at first since, especially if you are familiar with references/pointers in some other languages!  Some examples are:</p>\n\n<ul>\n<li>Slices <code>&amp;[T]</code> and <code>&amp;mut [T]</code>, which as described above, are actually a pointer and length.  The length is needed for bounds checks. For example, you can pass a slice corresponding to part of an array or <code>Vec</code> to a function.</li>\n<li>Trait objects like <code>&amp;Trait</code> or <code>Box&lt;Trait&gt;</code>, where <code>Trait</code> is a trait rather than a concrete type, are actually a pointer to the concrete type and a pointer to a <em>vtable</em> \u2014 the information needed to call trait methods on the object, given that its concrete type is not known.</li>\n</ul>\n"}], "owner": {"reputation": 1339, "user_id": 481724, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c545780442a6d104ced0f1a3bd4a425c?s=128&d=identicon&r=PG", "display_name": "chamibuddhika", "link": "https://stackoverflow.com/users/481724/chamibuddhika"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 313, "favorite_count": 0, "accepted_answer_id": 43279300, "answer_count": 1, "score": 2, "last_activity_date": 1491574320, "creation_date": 1491570793, "last_edit_date": 1491572085, "question_id": 43279102, "link": "https://stackoverflow.com/questions/43279102/how-is-from-raw-parts-mut-able-to-transmute-between-types-of-different-sizes", "title": "How is from_raw_parts_mut able to transmute between types of different sizes?", "body": "<p>I am looking at the code of <a href=\"https://github.com/rust-lang/rust/blob/1.16.0/src/libcore/slice.rs#L2172-L2174\" rel=\"nofollow noreferrer\"><code>from_raw_parts_mut</code></a>:</p>\n\n<pre><code>pub unsafe fn from_raw_parts_mut&lt;'a, T&gt;(p: *mut T, len: usize) -&gt; &amp;'a mut [T] {\n    mem::transmute(Repr { data: p, len: len })\n}\n</code></pre>\n\n<p>It uses <code>transmute</code> to reinterpret a <code>Repr</code> to a <code>&amp;mut [T]</code>. As far as I understand, <code>Repr</code> is a 128 bit struct. How does this transmute of differently sized types work?</p>\n"}, {"tags": ["string", "char", "rust"], "answers": [{"comments": [{"owner": {"reputation": 25982, "user_id": 305973, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", "display_name": "robinst", "link": "https://stackoverflow.com/users/305973/robinst"}, "edited": false, "score": 0, "creation_date": 1491570956, "post_id": 43279057, "comment_id": 73626108, "body": "Thanks for the answer! I didn&#39;t include it in the question, but I also had <code>is_char_boundary</code> at some point. With <code>char_indices</code>, if you stop at a char and want to get the next index, you can use <code>i + c.len_utf8()</code>, so that&#39;s a good idea too!"}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 4, "last_activity_date": 1491570641, "creation_date": 1491570641, "answer_id": 43279057, "question_id": 43278245, "link": "https://stackoverflow.com/questions/43278245/find-next-char-boundary-index-in-string-after-char/43279057#43279057", "title": "Find next char boundary index in string after char", "body": "<p>You could use <code>char_indices</code> to get the next index rather than using <code>len_utf8</code> on the character, though that has a special case for the last character.        </p>\n\n<p>I would use the handy <a href=\"https://doc.rust-lang.org/1.16.0/std/primitive.str.html#method.is_char_boundary\" rel=\"nofollow noreferrer\"><code>str::is_char_boundary()</code></a> method.  Here's an implementation using that:</p>\n\n<pre><code>fn find_end(s: &amp;str, i: usize) -&gt; usize {\n    assert!(i &lt; s.len());\n    let mut end = i+1;\n    while !s.is_char_boundary(end) {\n        end += 1;\n    }\n    end\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a7bdfa29c0e301a6c2f8ef6f2cda61fd&amp;version=stable&amp;backtrace=1\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>Normally I would make such a function return <code>Option&lt;usize&gt;</code> in case it's called with an index at the end of <code>s</code>, but for now I've just asserted.</p>\n\n<p>In many cases, instead of explicitly calling <code>find_end</code> it may make sense to iterate using <a href=\"https://doc.rust-lang.org/1.16.0/std/primitive.str.html#method.char_indices\" rel=\"nofollow noreferrer\"><code>char_indices</code></a>, which gives you each index along with the characters; though it's slightly annoying if you want to know the end of the current character.</p>\n"}, {"comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1491571458, "post_id": 43279293, "comment_id": 73626445, "body": "I&#39;m a bit surprised there doesn&#39;t seem to be a <code>next_char_boundary</code> method!"}, {"owner": {"reputation": 25982, "user_id": 305973, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", "display_name": "robinst", "link": "https://stackoverflow.com/users/305973/robinst"}, "edited": false, "score": 0, "creation_date": 1491571674, "post_id": 43279293, "comment_id": 73626584, "body": "Thanks as well! The downside with using <code>next()</code> is that it only works if there is another character after the current one."}, {"owner": {"reputation": 25982, "user_id": 305973, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", "display_name": "robinst", "link": "https://stackoverflow.com/users/305973/robinst"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1491571727, "post_id": 43279293, "comment_id": 73626619, "body": "@ChrisEmerson Yes, a <code>next_char_boundary</code> method would be perfect."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 25982, "user_id": 305973, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", "display_name": "robinst", "link": "https://stackoverflow.com/users/305973/robinst"}, "edited": false, "score": 0, "creation_date": 1491572081, "post_id": 43279293, "comment_id": 73626871, "body": "@robinst Characters at the end can be addressed easily. I&#39;ve updated the function."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 0, "last_activity_date": 1491572053, "last_edit_date": 1491572053, "creation_date": 1491571371, "answer_id": 43279293, "question_id": 43278245, "link": "https://stackoverflow.com/questions/43278245/find-next-char-boundary-index-in-string-after-char/43279293#43279293", "title": "Find next char boundary index in string after char", "body": "<p>To serve as a complement to @ChrisEmerson's answer, this is how one could implement a <code>find_end</code> that searches for the end of a character's first occurrence. <a href=\"https://play.rust-lang.org/?gist=631187c142f48a5b2806f1f50a5c732c&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>fn find_end&lt;'s&gt;(s: &amp;'s str, p: char) -&gt; Option&lt;usize&gt; {\n    let mut indices = s.char_indices();\n    let mut found = false;\n    for (_, v) in &amp;mut indices {\n        if v == p {\n            found = true;\n            break;\n        }\n    }\n    if found {\n        Some(indices.next()\n                    .map_or_else(|| s.len(), |(i, _)| i))\n    } else {\n        None\n    }\n}\n</code></pre>\n\n<p>Although it avoids the byte boundary loop, it is still not very elegant. Ideally, an iterator method for traversing until a predicate is met would simplify this.</p>\n"}], "owner": {"reputation": 25982, "user_id": 305973, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", "display_name": "robinst", "link": "https://stackoverflow.com/users/305973/robinst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 661, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1491572053, "creation_date": 1491568308, "last_edit_date": 1491571782, "question_id": 43278245, "link": "https://stackoverflow.com/questions/43278245/find-next-char-boundary-index-in-string-after-char", "title": "Find next char boundary index in string after char", "body": "<p>Given the string <code>s</code>, and the index <code>i</code> which is where the <code>\u597d</code> character starts:</p>\n\n<pre><code>let s = \"abc \u597d def\";\nlet i = 4;\n</code></pre>\n\n<p>What's the best way to get the index after that character, so that I can slice the string and get <code>abc \u597d</code>? In code:</p>\n\n<pre><code>let end = find_end(s, i);\nassert_eq!(\"abc \u597d\", &amp;s[0..end]);\n</code></pre>\n\n<p>(Note, <code>+ 1</code> doesn't work because that assumes that the character is only 1 byte long.)</p>\n\n<p>I currently have the following:</p>\n\n<pre><code>fn find_end(s: &amp;str, i: usize) -&gt; usize {\n    i + s[i..].chars().next().unwrap().len_utf8()\n}\n</code></pre>\n\n<p>But I'm wondering if I'm missing something and there's a better way?</p>\n"}, {"tags": ["sqlite", "rust", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1491573826, "post_id": 43277998, "comment_id": 73628235, "body": "I&#39;d suggest you re-read the <b>WARNING</b> section of <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.as_ptr\" rel=\"nofollow noreferrer\"><code>CString::as_ptr</code></a>: <i>It is your responsibility to make sure that the underlying memory is not freed too early</i>. Probably a duplicate of <a href=\"http://stackoverflow.com/q/39218479/155423\">Raw pointer turns null passing from Rust to C</a>; <a href=\"http://stackoverflow.com/q/31083223/155423\">How to stop memory leaks when using <code>as_ptr()</code>?</a>; or <a href=\"http://stackoverflow.com/q/28649311/155423\">What is the proper way to go from a String to a *const i8?</a>; whichever is most useful."}, {"owner": {"reputation": 1165, "user_id": 869271, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/ae486e9ebb18f0cd4dd3f512abc3a3e1?s=128&d=identicon&r=PG", "display_name": "Siscia", "link": "https://stackoverflow.com/users/869271/siscia"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491752152, "post_id": 43277998, "comment_id": 73681692, "body": "@Shepmaster that was the correct answer, if you post is as an answer I would definitely choose it as the correct one."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491753087, "post_id": 43277998, "comment_id": 73682037, "body": "Thanks for letting me know! I&#39;ve marked it as a duplicate of two questions; one which has a title which highly matches your problem (but is a bit wordy), and a shorter one which gets to the heart of the problem very succinctly."}], "owner": {"reputation": 1165, "user_id": 869271, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/ae486e9ebb18f0cd4dd3f512abc3a3e1?s=128&d=identicon&r=PG", "display_name": "Siscia", "link": "https://stackoverflow.com/users/869271/siscia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 89, "favorite_count": 0, "closed_date": 1491752987, "answer_count": 0, "score": 0, "last_activity_date": 1491753005, "creation_date": 1491567595, "last_edit_date": 1491572859, "question_id": 43277998, "link": "https://stackoverflow.com/questions/43277998/unable-to-use-sqlite3-in-rust-via-ffi-due-to-a-misused-prepared-statement", "closed_reason": "Duplicate", "title": "Unable to use SQLite3 in Rust via FFI due to a misused prepared statement", "body": "<p>I am porting some code to Rust that reads a database path from stdin, opens the database and loops for queries. I have done something similar in C so I am pretty sure that the problem is my non-understanding of Rust FFI.</p>\n\n<p>I am using the sqlite3 binding provided by <a href=\"https://github.com/jgallagher/rusqlite/tree/master/libsqlite3-sys\" rel=\"nofollow noreferrer\">libsqlite3-sys</a>, the one from rusqlite. <a href=\"https://gist.github.com/siscia/f5b66052362086a9caf77c31634bcd1d\" rel=\"nofollow noreferrer\">The whole code is here</a>.</p>\n\n<p><code>open_connection</code> initializes a pointer and passes it to <code>sqlite3_open_v2</code> and checks if everything went well.</p>\n\n<pre><code>// Line 54 of complete code \nfn open_connection(s: String) -&gt; Result&lt;RawConnection, SQLite3Error&gt; {\n    unsafe {\n        let mut db: *mut sqlite3::sqlite3 = mem::uninitialized();\n        let r = sqlite3::sqlite3_open_v2(CString::new(s).unwrap().as_ptr(),\n                                         &amp;mut db,\n                                         sqlite3::SQLITE_OPEN_CREATE |\n                                         sqlite3::SQLITE_OPEN_READWRITE,\n                                         ptr::null());\n        match r {\n            sqlite3::SQLITE_OK =&gt; Ok(RawConnection { db: db }),\n            _ =&gt; return Err(SQLite3Error::OpenError),\n        }\n    }\n}\n</code></pre>\n\n<p>I <a href=\"https://gist.github.com/siscia/f5b66052362086a9caf77c31634bcd1d#file-help_rust_sqlite3-rs-L35\" rel=\"nofollow noreferrer\">create an SQL statement</a> by converting the query from a Rust String to a C String, creating another pointer for the location of the statement itself and I go on creating a statement and checking the output:</p>\n\n<pre><code>// Line 35 of complete code\nfn create_statement(conn: &amp;RawConnection, query: String) -&gt; Result&lt;Statement, SQLite3Error&gt; {\n    let len = query.len();\n    let raw_query = CString::new(query).unwrap().as_ptr();\n    unsafe {\n        let mut stmt: *mut sqlite3::sqlite3_stmt = mem::uninitialized();\n        if stmt.is_null() {\n            println!(\"Now it is null!\");\n        }\n        match sqlite3::sqlite3_prepare_v2(conn.db,\n                                          raw_query,\n                                          len as i32,\n                                          &amp;mut stmt,\n                                          ptr::null_mut()) {\n            sqlite3::SQLITE_OK =&gt; Ok(Statement { stmt: stmt }),\n            _ =&gt; Err(SQLite3Error::StatementError),\n        }\n    }\n}\n</code></pre>\n\n<p>I try to <a href=\"https://gist.github.com/siscia/f5b66052362086a9caf77c31634bcd1d#file-help_rust_sqlite3-rs-L81\" rel=\"nofollow noreferrer\">execute a statement</a></p>\n\n<pre><code>// Line 81 of complete code\nfn execute_statement(conn: &amp;RawConnection, stmt: Statement) -&gt; Result&lt;Cursor, SQLite3Error&gt; {\n\n    match unsafe { sqlite3::sqlite3_step(stmt.stmt) } {\n        sqlite3::SQLITE_OK =&gt; Ok(Cursor::OKCursor),\n        sqlite3::SQLITE_DONE =&gt; Ok(Cursor::DONECursor),\n        sqlite3::SQLITE_ROW =&gt; {\n            let n_columns = unsafe { sqlite3::sqlite3_column_count(stmt.stmt) } as i32;\n            let mut types: Vec&lt;EntityType&gt; = Vec::new();\n            for i in 0..n_columns {\n                types.push(match unsafe { sqlite3::sqlite3_column_type(stmt.stmt, i) } {\n                    sqlite3::SQLITE_INTEGER =&gt; EntityType::Integer,\n                    sqlite3::SQLITE_FLOAT =&gt; EntityType::Float,\n                    sqlite3::SQLITE_TEXT =&gt; EntityType::Text,\n                    sqlite3::SQLITE_BLOB =&gt; EntityType::Blob,\n                    sqlite3::SQLITE_NULL =&gt; EntityType::Null,\n                    _ =&gt; EntityType::Null,\n                })\n            }\n            Ok(Cursor::RowsCursor {\n                stmt: stmt,\n                num_columns: n_columns,\n                types: types,\n                previous_status: sqlite3::SQLITE_ROW,\n            })\n        }\n        x =&gt; {\n            println!(\"{}\", x);\n            return Err(SQLite3Error::ExecuteError);\n        }\n    }\n}\n</code></pre>\n\n<p>This always fails with the error code 21 MISUSE. Usually, this error happens when you try to execute a NULL statement but I have no idea how to figure it out.</p>\n\n<p>Do you see any other problem that may cause a code 21 MISUSE?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1491556161, "creation_date": 1491556161, "answer_id": 43274158, "question_id": 43273971, "link": "https://stackoverflow.com/questions/43273971/how-to-pass-a-member-function-of-a-struct-to-another-struct-as-callback/43274158#43274158", "title": "How to pass a member function of a struct to another struct as callback", "body": "<p>You were very close! To refer to a method or any other symbol you use the <code>::</code> separator and specify the path to said symbol. Methods or associated functions live in the namespace of the type, therefore the path of your method is <code>Struct1::do_some</code>. In Java you would also use the <code>.</code> operator to access those, but in Rust the <code>.</code> operator is only used on existing objects, not on type names.</p>\n\n<p>The solution thus is:</p>\n\n<pre><code>let s2 = Struct2 {\n    cb1: Box::new(Struct1::do_some),\n};\n</code></pre>\n\n<p>However, you could possibly improve the type of your function a bit. <code>Box&lt;Fn(...)&gt;</code> is a boxed trait object, but you don't necessarily need that if you don't want to work with closures. If you just want to refer to \"normal functions\" (those who don't have an environment), you can use a function pointer instead:</p>\n\n<pre><code>struct Struct2 {\n    cb1: fn(&amp;mut Struct1, &amp;str),\n}\n</code></pre>\n\n<p>Note the lowercase <code>fn</code> and that we don't need the <code>Box</code>.</p>\n"}], "owner": {"reputation": 237, "user_id": 4716298, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c11dd6bca3d9fa2122bc6b3a513b28d0?s=128&d=identicon&r=PG&f=1", "display_name": "sbant", "link": "https://stackoverflow.com/users/4716298/sbant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1414, "favorite_count": 0, "accepted_answer_id": 43274158, "answer_count": 1, "score": 3, "last_activity_date": 1491556335, "creation_date": 1491555632, "last_edit_date": 1491556335, "question_id": 43273971, "link": "https://stackoverflow.com/questions/43273971/how-to-pass-a-member-function-of-a-struct-to-another-struct-as-callback", "title": "How to pass a member function of a struct to another struct as callback", "body": "<p>I want to pass a member function of a struct to another struct.</p>\n\n<p>Sorry, poor English, can't say more details.</p>\n\n<pre><code>use std::thread;\n\nstruct Struct1 {}\n\nimpl Struct1 {\n    pub fn do_some(&amp;mut self, s: &amp;str) {\n        // do something use s to modify self\n    }\n}\n\nstruct Struct2 {\n    cb1: Box&lt;Fn(&amp;mut Struct1, &amp;str)&gt;,\n}\n\nfn main() {\n    let s1 = Struct1 {};\n\n    let s2 = Struct2 {\n        cb1: Box::new(s1.do_some),  // how to store do_some function in cb1 ?\n    };\n}\n</code></pre>\n"}, {"tags": ["rust", "query-string", "parse-url"], "comments": [{"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 1, "creation_date": 1491554400, "post_id": 43272935, "comment_id": 73614960, "body": "Should the input be <code>http:&#47;&#47;example.com?a=1&amp;b=2&amp;c=3</code> instead? It&#39;s not a valid URL when it&#39;s encoded like that."}, {"owner": {"reputation": 2430, "user_id": 1762493, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/pEEmF.jpg?s=128&g=1", "display_name": "Mikeumus", "link": "https://stackoverflow.com/users/1762493/mikeumus"}, "edited": false, "score": 0, "creation_date": 1565916049, "post_id": 43272935, "comment_id": 101503145, "body": "<a href=\"https://docs.rs/percent-encoding/2.1.0/percent_encoding/fn.percent_decode.html\" rel=\"nofollow noreferrer\"><code>percent_decode</code></a> lib works for fully encoded URLs like Saeed&#39;s:  <code>http%3A%2F%2Fexample.com%3Fa%3D1%26b%3D2%26c%3D3</code>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1491572290, "post_id": 43273495, "comment_id": 73626985, "body": "Be warned that this overwrites duplicate keys. Many web frameworks take advantage of the fact that you can submit the same key multiple times."}, {"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 8, "creation_date": 1491700587, "post_id": 43273495, "comment_id": 73669408, "body": "Note that if you just have a query string, not a full URL, then you can use <a href=\"https://docs.rs/url/1.4.0/url/form_urlencoded/fn.parse.html\" rel=\"nofollow noreferrer\"><code>url::form_urlencoded::parse()</code></a> instead."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 1, "creation_date": 1525094459, "post_id": 43273495, "comment_id": 87219512, "body": "Where is the <code>HashMap</code> type coming from? Edit: Neverming, it&#39;s <code>::std::collections::HashMap</code>."}, {"owner": {"reputation": 3384, "user_id": 3805131, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/D2Gzu.jpg?s=128&g=1", "display_name": "tworec", "link": "https://stackoverflow.com/users/3805131/tworec"}, "edited": false, "score": 1, "creation_date": 1530722078, "post_id": 43273495, "comment_id": 89338407, "body": "is there a way to parse repeated/duplicated keys as an array?"}, {"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "reply_to_user": {"reputation": 3384, "user_id": 3805131, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/D2Gzu.jpg?s=128&g=1", "display_name": "tworec", "link": "https://stackoverflow.com/users/3805131/tworec"}, "edited": false, "score": 2, "creation_date": 1530739847, "post_id": 43273495, "comment_id": 89344343, "body": "@tworec to preserve repeated keys, change the <code>HashMap&lt;_, _&gt;</code> to <code>Vec&lt;_&gt;</code>"}], "tags": [], "owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "is_accepted": true, "score": 13, "last_activity_date": 1491554296, "creation_date": 1491554296, "answer_id": 43273495, "question_id": 43272935, "link": "https://stackoverflow.com/questions/43272935/how-do-i-decode-a-url-and-get-the-query-string-as-a-hashmap/43273495#43273495", "title": "How do I decode a URL and get the query string as a HashMap?", "body": "<p>There are a few steps involved:</p>\n\n<ul>\n<li><p>The <a href=\"https://docs.rs/url/1.4.0/url/struct.Url.html#method.query_pairs\" rel=\"noreferrer\"><code>.query_pairs()</code></a> method will give you an iterator over pairs of <code>Cow&lt;str&gt;</code>.</p></li>\n<li><p>Calling <a href=\"https://docs.rs/url/1.4.0/url/form_urlencoded/struct.Parse.html#method.into_owned\" rel=\"noreferrer\"><code>.into_owned()</code></a> on that will give you an iterator over <code>String</code> pairs instead.</p></li>\n<li><p>This is an iterator of <code>(String, String)</code>, which is exactly the right shape to <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"noreferrer\"><code>.collect()</code></a> into a <code>HashMap&lt;String, String&gt;</code>.</p></li>\n</ul>\n\n<p>Putting it together:</p>\n\n<pre><code>let parsed_url = Url::parse(\"http://example.com/?a=1&amp;b=2&amp;c=3\").unwrap();\nlet hash_query: HashMap&lt;_, _&gt; = parsed_url.query_pairs().into_owned().collect();\nassert_eq!(hash_query.get(\"a\"), \"1\");\n</code></pre>\n\n<p>Note that you need a type annotation on the <code>hash_query</code>\u2014since <code>.collect()</code> is overloaded, you have to tell the compiler which collection type you want.</p>\n"}, {"comments": [{"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 0, "creation_date": 1616999865, "post_id": 66013711, "comment_id": 118167408, "body": "Regarding <code>auris</code>, I&#39;m a bit suspicious of a crate that has no repository and no dependents. It&#39;s probably fine but I&#39;d rather stick with the more reputable package."}, {"owner": {"reputation": 80945, "user_id": 1002260, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5ec9c21c8d54825b04def7a41998d18d?s=128&d=identicon&r=PG", "display_name": "Steven Penny", "link": "https://stackoverflow.com/users/1002260/steven-penny"}, "reply_to_user": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 0, "creation_date": 1617023297, "post_id": 66013711, "comment_id": 118176913, "body": "@LambdaFairy <a href=\"https://github.com/bluemoon/auris\" rel=\"nofollow noreferrer\">github.com/bluemoon/auris</a>"}], "tags": [], "owner": {"reputation": 80945, "user_id": 1002260, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5ec9c21c8d54825b04def7a41998d18d?s=128&d=identicon&r=PG", "display_name": "Steven Penny", "link": "https://stackoverflow.com/users/1002260/steven-penny"}, "is_accepted": false, "score": 0, "last_activity_date": 1612283333, "creation_date": 1612283333, "answer_id": 66013711, "question_id": 43272935, "link": "https://stackoverflow.com/questions/43272935/how-do-i-decode-a-url-and-get-the-query-string-as-a-hashmap/66013711#66013711", "title": "How do I decode a URL and get the query string as a HashMap?", "body": "<p>The other answer is good, but I feel that this is something that should be more\nstraightforward, so I wrapped it in a function:</p>\n<pre><code>use {\n   std::collections::HashMap,\n   url::Url\n};\n\nfn query(u: Url) -&gt; HashMap&lt;String, String&gt; {\n   u.query_pairs().into_owned().collect()\n}\n\nfn main() -&gt; Result&lt;(), url::ParseError&gt; {\n   let u = Url::parse(&quot;http://stackoverflow.com?month=May&amp;day=Friday&quot;)?;\n   let q = query(u);\n   println!(&quot;{:?}&quot;, q);\n   Ok(())\n}\n</code></pre>\n<p>Alternatively, I found another crate that does this for you:</p>\n<pre><code>use auris::URI;\n\nfn main() -&gt; Result&lt;(), auris::ParseError&gt; {\n   let s = &quot;http://stackoverflow.com?month=May&amp;day=Friday&quot;;\n   let u: URI&lt;String&gt; = s.parse()?;\n   println!(&quot;{:?}&quot;, u.qs); // Some({&quot;month&quot;: &quot;May&quot;, &quot;day&quot;: &quot;Friday&quot;})\n   Ok(())\n}\n</code></pre>\n<p><a href=\"https://docs.rs/auris\" rel=\"nofollow noreferrer\">https://docs.rs/auris</a></p>\n"}], "owner": {"reputation": 1929, "user_id": 1103397, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/90a1f2332b047409597c5f61b90d5d67?s=128&d=identicon&r=PG", "display_name": "Saeed M.", "link": "https://stackoverflow.com/users/1103397/saeed-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5658, "favorite_count": 0, "accepted_answer_id": 43273495, "answer_count": 2, "score": 11, "last_activity_date": 1612283333, "creation_date": 1491552483, "last_edit_date": 1491572216, "question_id": 43272935, "link": "https://stackoverflow.com/questions/43272935/how-do-i-decode-a-url-and-get-the-query-string-as-a-hashmap", "title": "How do I decode a URL and get the query string as a HashMap?", "body": "<p>I have a URL like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>http%3A%2F%2Fexample.com%3Fa%3D1%26b%3D2%26c%3D3\n</code></pre>\n\n<p>I parsed it with <code>hyper::Url::parse</code> and fetch the query string:</p>\n\n<pre><code>let parsed_url = hyper::Url::parse(&amp;u).unwrap();\nlet query_string = parsed_url.query();\n</code></pre>\n\n<p>But it gives me the query as a string. I want to get the query string as <code>HashMap</code>. something like this:</p>\n\n<pre><code>// some code to convert query string to HashMap\nhash_query.get(&amp;\"a\"); // eq to 1\nhash_query.get(&amp;\"b\"); // eq to 2\n</code></pre>\n"}, {"tags": ["parsing", "rust", "grammar", "peg", "pest"], "answers": [{"tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 5, "last_activity_date": 1491544764, "last_edit_date": 1491544764, "creation_date": 1491543353, "answer_id": 43270413, "question_id": 43269689, "link": "https://stackoverflow.com/questions/43269689/parser-expression-grammar-how-to-match-any-string-excluding-a-single-character/43270413#43270413", "title": "Parser expression grammar - how to match any string excluding a single character?", "body": "<p>You could find the PEST syntax in <a href=\"https://docs.rs/pest/0.4.1/pest/macro.grammar.html#syntax\" rel=\"noreferrer\">https://docs.rs/pest/0.4.1/pest/macro.grammar.html#syntax</a>, in particular there is a \"negative lookahead\"</p>\n\n<blockquote>\n  <p><code>!a</code> \u2014 matches if <code>a</code> doesn't match without making progress </p>\n</blockquote>\n\n<p>So you could write</p>\n\n<pre><code>![\"/\"] ~ any\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>// cargo-deps: pest\n\n#[macro_use] extern crate pest;\nuse pest::*;\n\nfn main() {\n    impl_rdp! {\n        grammar! {\n            path = @{ soi ~ ([\"/\"] ~ component)+ ~ eoi }\n            component = @{ (![\"/\"] ~ any)+ }\n        }\n    }\n\n    println!(\"should be true: {}\", Rdp::new(StringInput::new(\"/bcc/cc/v\")).path());\n    println!(\"should be false: {}\", Rdp::new(StringInput::new(\"/bcc/cc//v\")).path());\n}\n</code></pre>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 568, "favorite_count": 1, "accepted_answer_id": 43270413, "answer_count": 1, "score": 2, "last_activity_date": 1616119821, "creation_date": 1491539501, "last_edit_date": 1616119821, "question_id": 43269689, "link": "https://stackoverflow.com/questions/43269689/parser-expression-grammar-how-to-match-any-string-excluding-a-single-character", "title": "Parser expression grammar - how to match any string excluding a single character?", "body": "<p>I'd like to write a PEG that matches filesystem paths.   A path element is any character except <code>/</code> in posix linux.</p>\n\n<p>There is an expression in PEG to match <code>any</code> character, but I cannot figure out how to match any character except one.</p>\n\n<p>The peg parser I'm using is PEST for rust.</p>\n"}, {"tags": ["mysql", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 1595, "user_id": 3833068, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6a2a668bce4cd485078f912cbda24f2a?s=128&d=identicon&r=PG", "display_name": "Ameo", "link": "https://stackoverflow.com/users/3833068/ameo"}, "edited": false, "score": 0, "creation_date": 1491693024, "post_id": 43268670, "comment_id": 73667948, "body": "It does seem to indeed be an issue with the Diesel library and r2d2-diesel: <a href=\"https://github.com/diesel-rs/diesel/issues/728\" rel=\"nofollow noreferrer\">github.com/diesel-rs/diesel/issues/728</a>"}], "answers": [{"comments": [{"owner": {"reputation": 4082, "user_id": 1227292, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/c6e2bd81e1e4915e52fcd3ff67d35590?s=128&d=identicon&r=PG", "display_name": "Stuart Nelson", "link": "https://stackoverflow.com/users/1227292/stuart-nelson"}, "edited": false, "score": 1, "creation_date": 1503848156, "post_id": 43378606, "comment_id": 78771604, "body": "A fix to this has been released."}], "tags": [], "owner": {"reputation": 1595, "user_id": 3833068, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6a2a668bce4cd485078f912cbda24f2a?s=128&d=identicon&r=PG", "display_name": "Ameo", "link": "https://stackoverflow.com/users/3833068/ameo"}, "is_accepted": false, "score": 4, "last_activity_date": 1504492389, "last_edit_date": 1504492389, "creation_date": 1492027216, "answer_id": 43378606, "question_id": 43268670, "link": "https://stackoverflow.com/questions/43268670/error-querying-database-using-diesel-r2d2-and-r2d2-diesel/43378606#43378606", "title": "Error querying database using Diesel, r2d2, and r2d2-diesel", "body": "<p><strong>EDIT: This has been fixed in the latest versions of the involved crates.</strong></p>\n\n<p>It turns out that the <code>r2d2-diesel</code> library <a href=\"https://github.com/diesel-rs/diesel/issues/728\" rel=\"nofollow noreferrer\">is currently broken for MySQL</a>.  The health check makes a query but never reads the result out which messes up the MySQL command ordering for user-made queries.</p>\n\n<p>I made a fork of the <code>r2d2-diesel</code> repository that fixes the issue.  It is not designed as a long-term solution and <strong>only works for MySQL clients</strong>.  If you'd like to use it, add the following to your <code>Cargo.toml</code>:</p>\n\n<pre><code>r2d2-diesel-mysql = { git = \"https://github.com/Ameobea/r2d2-diesel\" }\n</code></pre>\n\n<p>Change all instances of <code>r2d2_diesel</code> to <code>r2d2_diesel_mysql</code> in your codebase and it should work as a drop-in replacement.</p>\n"}], "owner": {"reputation": 1595, "user_id": 3833068, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6a2a668bce4cd485078f912cbda24f2a?s=128&d=identicon&r=PG", "display_name": "Ameo", "link": "https://stackoverflow.com/users/3833068/ameo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 823, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1504492389, "creation_date": 1491531941, "last_edit_date": 1491532621, "question_id": 43268670, "link": "https://stackoverflow.com/questions/43268670/error-querying-database-using-diesel-r2d2-and-r2d2-diesel", "title": "Error querying database using Diesel, r2d2, and r2d2-diesel", "body": "<p>I've set up a system using a connection pooling system utilizing <a href=\"https://github.com/diesel-rs/diesel\" rel=\"nofollow noreferrer\">diesel</a>, <a href=\"https://github.com/sfackler/r2d2\" rel=\"nofollow noreferrer\">r2d2</a>, and <a href=\"https://github.com/diesel-rs/r2d2-diesel\" rel=\"nofollow noreferrer\">r2d2-diesel</a> to serve as an API host for my web application.  I've been following this <a href=\"https://mgattozzi.com/diesel-powered-rocket\" rel=\"nofollow noreferrer\">blog post</a> as a basis which has helped me set things up.  However, I've made a modification of switching to MySQL for my database backend; I've added the necessary diesel features and assumed it wouldn't be an issue.</p>\n\n<p>Here's the code I use to set up a connection pool (very much the same as from the blog post):</p>\n\n<pre><code>use diesel::prelude::*;\nuse diesel::mysql::MysqlConnection;\nuse r2d2::{ GetTimeout, Pool, PooledConnection, Config };\nuse r2d2_diesel::ConnectionManager;\n\npub struct DB(PooledConnection&lt;ConnectionManager&lt;MysqlConnection&gt;&gt;);\n\nimpl DB {\n    pub fn conn(&amp;self) -&gt; &amp;MysqlConnection {\n        &amp;*self.0\n    }\n}\n\npub fn create_db_pool() -&gt; Pool&lt;ConnectionManager&lt;MysqlConnection&gt;&gt; {\n    let config = Config::default();\n    let manager = ConnectionManager::&lt;MysqlConnection&gt;::new(format!(\"{}\", DB_CREDENTIALS));\n    Pool::new(config, manager).expect(\"Failed to create pool.\")\n}\n</code></pre>\n\n<p>I've been encountering an issue during the process of setting up the database interface system.  When I make any query to the database through diesel, I get the following error: <code>Err(DatabaseError(__Unknown, \"Commands out of sync; you can\\'t run this command now\"))</code></p>\n\n<p>I've done some research and it seems that this error occurs when a previous query hasn't been read before sending another, leading me to believe that this may be a library error.  I checked the MySQL query log, and I see no queries at all other than those for creating the connections in the connection pools.</p>\n\n<p>I've reduced my error down to a test case.  The following responds with the error message I pasted above:</p>\n\n<pre><code>/// Make sure we can run basic queries on the database using a connection pool\n#[test]\nfn basic_queries() {\n    use diesel::connection::SimpleConnection;\n\n    let mut pool = create_db_pool();\n    let mut conn = pool.get().unwrap();\n    let res = conn.batch_execute(\"SELECT 1\");\n    println!(\"{:?}\", res);\n}\n</code></pre>\n\n<p>The same error message was produced by running a query like the following, but that's much more difficult to reduce to a single test case:</p>\n\n<pre><code>let query = diesel::insert(&amp;beatmap).into(schema::beatmaps::dsl::beatmaps);\n// println!(\"{:?}\", query);\nprint_sql!(query);\nlet conn: &amp;MysqlConnection = &amp;*client.pool.get().expect(\"Unable to get connection from pool\");\nlet res = query.execute(conn);\n</code></pre>\n\n<p>I'd like to think that this is an implementation error on my part, but is it possible this has something to do with my database configuration?  The database I'm using for development is in active use by over 3 languages and several applications without issue, so I doubt it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491500230, "post_id": 43262025, "comment_id": 73592864, "body": "Please be sure to read the provided documentation about Rust&#39;s module system. Both the <a href=\"http://rust-lang.github.io/book/second-edition/ch07-00-modules.html\" rel=\"nofollow noreferrer\">second edition</a> and <a href=\"https://doc.rust-lang.org/stable/book/crates-and-modules.html\" rel=\"nofollow noreferrer\">first edition</a> of <i>The Rust Programming Language</i> cover it in-depth."}], "answers": [{"comments": [{"owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "edited": false, "score": 0, "creation_date": 1491549301, "post_id": 43262123, "comment_id": 73611996, "body": "Thank you for your perfect explanation, but my question didn&#39;t get solved... I didn&#39;t use <code>cargo new</code> to new a project, instead, I only wrote two single files and use <code>rustc</code> to compile them... so there&#39;s no <code>lib.rs</code> file and <code>mod.rs</code>. I changed my example and could you please give me a solution to my problem? It is absolute okay by putting them into one file, but I really want to separate them into two files. Sorry for asking twice and drawing back the <code>best answer</code> check mark."}, {"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "reply_to_user": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "edited": false, "score": 2, "creation_date": 1491555186, "post_id": 43262123, "comment_id": 73615455, "body": "@wind2412 You pretty much got it -- there needs to be a single &quot;root&quot; module which has both <code>mod_1</code> and <code>mod_2</code> as its children. I recommend creating a <code>lib.rs</code> that does nothing but declare <code>mod mod_1;</code> and <code>mod mod_2;</code>."}, {"owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "reply_to_user": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 0, "creation_date": 1491563479, "post_id": 43262123, "comment_id": 73621055, "body": "@LambdaFairy Thank you!! My problem is perfectly solved~~"}, {"owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "edited": false, "score": 0, "creation_date": 1491563646, "post_id": 43262123, "comment_id": 73621171, "body": "@Lukas Kalbertodt Thank you for your answer that makes me understand! ~~"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 9, "last_activity_date": 1491559864, "last_edit_date": 1495541422, "creation_date": 1491500167, "answer_id": 43262123, "question_id": 43262025, "link": "https://stackoverflow.com/questions/43262025/how-can-structs-in-separate-files-reference-each-other/43262123#43262123", "title": "How can structs in separate files reference each other?", "body": "<p>This is a common misunderstanding of Rust's module system. Basically, there are two steps:</p>\n\n<ol>\n<li><p>You have to build a module-tree. This implies that there are not cycles in this module-tree and there is a clear parent-child relationship between nodes. This step is simply to tell Rust what files to load and has nothing to do with <em>usage</em> of certain symbols in different modules.</p></li>\n<li><p>You can now reference each symbol in your module tree by its path (where each module and the final symbol name is separated by <code>::</code>, for example <code>std::io::read</code>). In order to avoid writing the full path every time, you can use <code>use</code> declarations to refer to specific symbols by their simple name.</p></li>\n</ol>\n\n<p>You can read a bit more on that <a href=\"https://doc.rust-lang.org/book/crates-and-modules.html\" rel=\"nofollow noreferrer\">in the Rust book chapter</a>. </p>\n\n<p>And again, to avoid confusion: in order to use a symbol from a module, you <em>don't</em> necessarily have to write <code>mod my_module;</code> in your module! For each non-root module of your project there is only <strong>one</strong> line in your entire project saying <code>mod said_module;</code> (the root module does not have such a line at all). Only once! </p>\n\n<hr>\n\n<p>About your example: you first compiled <code>mod_1.rs</code> via <code>rustc mod_1.rs</code>. This means that <code>mod_1</code> is the root module in your case. As explained above, the root module doesn't need to be declared via <code>mod</code> at all, but all other modules need to be declared <em>exactly once</em>. This means the <code>mod mod_2;</code> in <code>mod_1.rs</code> is completely correct, but the <code>mod mod_1;</code> in <code>mod_2.rs</code> is incorrect. The compiler even suggest the right thing to do:</p>\n\n<pre><code>note: ... or maybe `use` the module `mod_2` instead of possibly redeclaring it\n</code></pre>\n\n<p>You are already <code>use</code>ing it, so you can just remove the line <code>mod mod_1;</code> and solve this error. </p>\n\n<p>However, I think you are still thinking incorrectly about the module system. As mentioned above you <strong>first</strong> need to design a more or less fixed module tree which implies that you have <strong>one fixed root module</strong>. Whatever you pass to <code>rustc</code> is the root module and it doesn't make sense to use different modules as root module. In your project there should be one fixed root module. This could be <code>mod_1</code> as explained above. But it's usually more idiomatic to call it <code>lib</code> for libraries and <code>main</code> for executables. </p>\n\n<p>So again: first, draw your module tree on a piece of paper. Consider this fixed for the moment and <em>then</em> you can create the files and <code>mod</code> declarations appropriately.</p>\n\n<hr>\n\n<p>Last thing: even when fixing the module system, your example won't work, because <code>Haha</code> and <code>Hehe</code> are types with infinite size. Fields of structs are directly put into the memory layout of the struct (without boxing them like in Java!). Thus you can't have cycles in struct definitions, <em>except</em> if you manually add a layer of indirection, like boxing the fields. Please read <a href=\"https://stackoverflow.com/questions/25296195/why-are-recursive-struct-types-illegal-in-rust\">this excellent explanation</a> on this issue.</p>\n"}], "owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3208, "favorite_count": 0, "accepted_answer_id": 43262123, "answer_count": 1, "score": 2, "last_activity_date": 1491559965, "creation_date": 1491499735, "last_edit_date": 1491559965, "question_id": 43262025, "link": "https://stackoverflow.com/questions/43262025/how-can-structs-in-separate-files-reference-each-other", "title": "How can structs in separate files reference each other?", "body": "<p>Using structs that reference each other is common in a single file, but when I separate the structs into two files, I get an error.</p>\n\n<p><strong><code>mod_1.rs</code></strong></p>\n\n<pre><code>mod mod_2;\nuse mod_2::Haha;\n\npub struct Hehe {\n    obj: Haha,\n}\n\nfn main() {\n    Hehe(Haha);\n}\n</code></pre>\n\n<p><strong><code>mod_2.rs</code></strong></p>\n\n<pre><code>mod mod_1;\nuse mod_1::Hehe;\n\npub struct Haha {\n    obj: Hehe,\n}\n\nfn main() {\n    Haha(Hehe);\n}\n</code></pre>\n\n<p>This will produce an error. When compiling the <code>mod_1.rs</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot declare a new module at this location\n --&gt; mod_2.rs:1:5\n  |\n1 | mod mod_1;\n  |     ^^^^^\n  |\nnote: maybe move this module `mod_2` to its own directory via `mod_2/mod.rs`\n --&gt; mod_2.rs:1:5\n  |\n1 | mod mod_1;\n  |     ^^^^^\nnote: ... or maybe `use` the module `mod_1` instead of possibly redeclaring it\n --&gt; mod_2.rs:1:5\n  |\n1 | mod mod_1;\n  |     ^^^^^\n</code></pre>\n\n<p>When compiling the <code>mod_2.rs</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot declare a new module at this location\n --&gt; mod_1.rs:1:5\n  |\n1 | mod mod_2;\n  |     ^^^^^\n  |\nnote: maybe move this module `mod_1` to its own directory via `mod_1/mod.rs`\n --&gt; mod_1.rs:1:5\n  |\n1 | mod mod_2;\n  |     ^^^^^\nnote: ... or maybe `use` the module `mod_2` instead of possibly redeclaring it\n --&gt; mod_1.rs:1:5\n  |\n1 | mod mod_2;\n  |     ^^^^^\n</code></pre>\n\n<p>In <strong><code>mod_1.rs</code></strong> I use something from <strong><code>mod_2.rs</code></strong> and in <strong><code>mod_2.rs</code></strong>, I use <strong><code>mod_1.rs</code></strong>'s thing, so I'd like to find a way to get rid of the cycle reference module problem.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/40443963/trying-to-get-rust-to-load-files\">Trying to get Rust to load files</a> is a similar but different problem.</p>\n"}, {"tags": ["inheritance", "rust", "traits"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491525287, "post_id": 43261840, "comment_id": 73604373, "body": "I think you need to either wait for <a href=\"https://github.com/rust-lang/rfcs/pull/1733\" rel=\"nofollow noreferrer\">trait alias</a> or <a href=\"https://internals.rust-lang.org/t/lang-team-minutes-implied-bounds/4905\" rel=\"nofollow noreferrer\">implicit bounds</a> to land to remove that line."}, {"owner": {"reputation": 162, "user_id": 3683514, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48a886b0d7866bb25cfde8d170f7124a?s=128&d=identicon&r=PG&f=1", "display_name": "wiep", "link": "https://stackoverflow.com/users/3683514/wiep"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1491816932, "post_id": 43261840, "comment_id": 73703451, "body": "@kennytm thanks for the hint. i&#39;ll track the progress on both features."}], "owner": {"reputation": 162, "user_id": 3683514, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48a886b0d7866bb25cfde8d170f7124a?s=128&d=identicon&r=PG&f=1", "display_name": "wiep", "link": "https://stackoverflow.com/users/3683514/wiep"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1491499353, "creation_date": 1491499099, "last_edit_date": 1491499353, "question_id": 43261840, "link": "https://stackoverflow.com/questions/43261840/is-it-possible-to-inherit-a-trait-where-self-is-only-a-type-parameter-of-the-tra", "title": "Is it possible to inherit a trait where Self is only a type parameter of the trait?", "body": "<p>I want to require that implementing trait <code>A</code> requires that <code>f64</code> implements <code>Add&lt;Self, Output = Self&gt;</code>. One may call this reverse trait inheritance.</p>\n\n<p>I could use a <code>where</code> clause for this, but this has the downside that every time I want to use the trait I have to add this condition in the <code>where</code> clause of the function.</p>\n\n<p>I've added a simple example below to illustrate the problem. The condition I would like to remove is marked with a comment. You can find it as a playground <a href=\"https://play.rust-lang.org/?gist=6b58dcbd77402b00f16d3b8f5416f550&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<pre><code>use std::ops::Add;\n\n#[derive(Copy, Clone, Debug)]\nstruct Num(f64);\n\nimpl Add for Num {\n    type Output = Num;\n    fn add(self, rhs: Num) -&gt; Self::Output {\n        Num(self.0 + rhs.0)\n    }\n}\n\nimpl Add&lt;f64&gt; for Num {\n    type Output = Num;\n    fn add(self, rhs: f64) -&gt; Self::Output {\n        Num(self.0 + rhs)\n    }\n}\n\nimpl Add&lt;Num&gt; for f64 {\n    type Output = Num;\n    fn add(self, rhs: Num) -&gt; Self::Output {\n        Num(self + rhs.0)\n    }\n}\n\ntrait AddF64 : Add&lt;Output=Self&gt; + Add&lt;f64, Output=Self&gt; + Copy\n    where f64: Add&lt;Self, Output=Self&gt;,\n{}\n\nimpl&lt;T&gt; AddF64 for T\nwhere\n    T: Add&lt;Output=T&gt; + Add&lt;f64, Output=T&gt; + Copy,\n    f64: Add&lt;T, Output=T&gt;\n{}\n\nfn foo&lt;T: AddF64&gt;(x: T, y: T) -&gt; T\nwhere f64: Add&lt;T, Output=T&gt; // I would like to remove this line!\n{\n    1.0 + x + y\n}\n\nfn main() {\n    let n = Num(1.0);\n    let res = foo(n, n);\n    println!(\"{:?}\", &amp;res);\n}\n</code></pre>\n\n<p>I'm pretty sure that this question should have been asked already, but I've found nothing.</p>\n"}, {"tags": ["rust", "winmm"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1491486242, "post_id": 43256900, "comment_id": 73582573, "body": "Why is <code>block</code> a <code>&amp;[u8]</code>? If you are modifying it, it <i>needs to be mutable</i>. If you are going to be writing unsafe code, you need to understand what restrictions you have to uphold. Having an immutable reference and a mutable reference is a sure-fire way to mess things up."}, {"owner": {"reputation": 201, "user_id": 3438815, "user_type": "registered", "accept_rate": 11, "profile_image": "https://www.gravatar.com/avatar/7a740e63d7d0abd873ec813bb752a6b7?s=128&d=identicon&r=PG&f=1", "display_name": "user3438815", "link": "https://stackoverflow.com/users/3438815/user3438815"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491487166, "post_id": 43256900, "comment_id": 73583374, "body": "where am i modifying block?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 6, "creation_date": 1491487181, "post_id": 43256900, "comment_id": 73583388, "body": "Welcome to Undefined Behavior; now you understand why Rust being safe 99% of the time is so great! And... we probably won&#39;t be able to really help you, unfortunately, without a reproducible example. You may either reduce your problem as a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> so that we can assist OR use <code>valgrind</code> OR try out the <a href=\"https://users.rust-lang.org/t/howto-sanitize-your-rust-code/9378\" rel=\"nofollow noreferrer\">sanitizers</a> OR use a debugger."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491487350, "post_id": 43256900, "comment_id": 73583536, "body": "Aren&#39;t you writing the audio data <i>into the slice</i> provided by the caller, modifying the data held within block? Isn&#39;t that why you get the pointer with <code>block.as_ptr()</code>, store in in your header struct, then pass the header struct to <code>waveOutWrite</code> and friends?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491487410, "post_id": 43256900, "comment_id": 73583589, "body": "@MatthieuM. using Valgrind for a Windows FFI problem would be very useful, but I was under the impression that it didn&#39;t exist on Windows...?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491487655, "post_id": 43256900, "comment_id": 73583780, "body": "@Shepmaster: Maybe with Windows 10? (I don&#39;t know how the new Bash on Windows works exactly). I expect there are equivalent to valgrind? Not quite sure if the sanitizers were ever made to work for Windows unfortunately."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1491490031, "post_id": 43256900, "comment_id": 73585734, "body": "Why are you <i>adding</i> the size of the allocated buffer to the size of the header? That&#39;s not the length of the header..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1491490329, "post_id": 43256900, "comment_id": 73585970, "body": "<a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/dd743837(v=vs.85).aspx\" rel=\"nofollow noreferrer\"><code>WAVEHDR</code> has <b>8</b> fields</a>, of which you are only setting <b>2</b>. All the others are random junk memory. Instead of <code>mem::uninitialized</code> (which is documented as &quot;This is incredibly dangerous and should not be done lightly&quot;), try setting <i>all</i> the values to some reasonable initial value. My bet is that <code>println</code> just happens to clear some memory that the uninitialized variable is using."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1491492908, "post_id": 43256900, "comment_id": 73587917, "body": "Indeed, in C (where <code>uninitialized</code> is the default) you&#39;d usually memset-0 a structure to make sure it doesn&#39;t have the random stuff left. cf. <a href=\"http://stackoverflow.com/questions/10788861/is-memsetmystruct-0-sizeof-mystruct-same-as-mystruct-0\" title=\"is memsetmystruct 0 sizeof mystruct same as mystruct 0\">stackoverflow.com/questions/10788861/&hellip;</a>; <a href=\"http://stackoverflow.com/questions/6891720/initialize-reset-struct-to-zero-null\" title=\"initialize reset struct to zero null\">stackoverflow.com/questions/6891720/&hellip;</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491496474, "post_id": 43256900, "comment_id": 73590555, "body": "@Shepmaster: maybe <code>mem::zeroed()</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1491496659, "post_id": 43256900, "comment_id": 73590677, "body": "@MatthieuM. I thought about that too, but it depends on the various values of the header allowing 0 (or equivalent) as a valid value. It&#39;s probably just better to go ahead and explicitly initialize each input field, reading the documentation to understand what everything needs to be set to. After that, maybe zeroing it out makes sense."}], "owner": {"reputation": 201, "user_id": 3438815, "user_type": "registered", "accept_rate": 11, "profile_image": "https://www.gravatar.com/avatar/7a740e63d7d0abd873ec813bb752a6b7?s=128&d=identicon&r=PG&f=1", "display_name": "user3438815", "link": "https://stackoverflow.com/users/3438815/user3438815"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 96, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1491486097, "creation_date": 1491485920, "last_edit_date": 1491486097, "question_id": 43256900, "link": "https://stackoverflow.com/questions/43256900/why-does-removing-println-cause-a-windows-api-function-called-through-ffi-to-fa", "title": "Why does removing println! cause a Windows API function called through FFI to fail?", "body": "<p>If I remove the <code>println!</code> from the following code, <code>waveOutPrepareHeader</code> returns code <code>MMSYSERR_INVALPARAM</code>.</p>\n\n<pre><code>fn write_audio_block(device: &amp;PlaybackDevice, block: &amp;[u8]) {\n    use std::mem;\n    use std::{thread, time};\n    let mut header: mmsystem::WAVEHDR = unsafe { mem::uninitialized() };\n    header.dwBufferLength = block.len() as winapi::minwindef::DWORD;\n    header.lpData = block.as_ptr() as winapi::winnt::LPSTR;\n\n    println!(\"ptr: {:?}\\nlength: {:?}\", // removing this causes error\n         header.lpData,\n         header.dwBufferLength);\n\n    let header_size: winapi::minwindef::UINT = mem::size_of::&lt;mmsystem::WAVEHDR&gt;() as u32 +\n                                           header.dwBufferLength as u32;\n\n    catch_errors(unsafe { winmm::waveOutPrepareHeader(device.handle, &amp;mut header, header_size) });\n\n    catch_errors(unsafe { winmm::waveOutWrite(device.handle, &amp;mut header, header_size) });\n\n    thread::sleep(time::Duration::from_millis(100));\n\n    while unsafe { winmm::waveOutUnprepareHeader(device.handle, &amp;mut header, header_size) } ==\n        mmsystem::WAVERR_STILLPLAYING {\n        thread::sleep(time::Duration::from_millis(10));\n    }\n}\n</code></pre>\n\n<p>Even adding another <code>println!</code> or removing the <code>thread::sleep</code> after <code>waveOutWrite</code> will cause <code>waveOutPrepareHeader</code> to return <code>MMSYSERR_INVALPARAM</code>.</p>\n\n<p>Otherwise it works fine.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1491482550, "post_id": 43254340, "comment_id": 73579675, "body": "<i>I get syntax errors when trying to call it</i> \u2014 too bad you don&#39;t <b>show</b> any of those errors. <i>this code fails to compile</i> \u2014 too bad you don&#39;t <b>show</b> how it fails."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1491482732, "post_id": 43254340, "comment_id": 73579820, "body": "I second @Shepmaster, please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, I had to guess what types/traits to bring in, switch to <code>path</code> instead of <code>display</code>, etc... to get your examples to compile after the fix."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491482904, "post_id": 43254340, "comment_id": 73579973, "body": "Yep, and the <i>first</i> error I saw is that <code>exit</code> isn&#39;t in scope, so now I had to guess if OP had their own <code>exit</code> or what."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1491482663, "creation_date": 1491482663, "answer_id": 43255601, "question_id": 43254340, "link": "https://stackoverflow.com/questions/43254340/how-to-write-a-panic-like-macro-in-rust/43255601#43255601", "title": "How to write a panic! like macro in Rust?", "body": "<blockquote>\n  <p>First, if I put the <code>exit()</code> call in, as I have on the last line, I get syntax errors when trying to call it.</p>\n</blockquote>\n\n<p>That is because a macro should expand to a single item, and here it expands to two. You can simply wrap the invocation in a block <code>{}</code> and it'll just work... once you qualify the call to <code>exit</code>.</p>\n\n<pre><code>({ print!(concat!($fmt, \"\\n\"), $($arg)*); std::process::exit(-1) });\n</code></pre>\n\n<blockquote>\n  <p>If I remove the <code>exit()</code>, I don't get complaints about the macro, but this code fails to compile. Whereas it does compile when <code>die</code> is replaced with <code>panic</code>. I assume there is some magic about <code>panic</code> which tells the compiler that it never returns?</p>\n</blockquote>\n\n<p>It's not so much magic as the <code>!</code> type. The <code>panic</code> and <code>exit</code> functions both return <code>!</code> which is a type with no value: it cannot ever be constructed.</p>\n\n<p>This is sufficient for the compiler to know that those functions will never return (they diverge), so from the point of view of type-checking, <code>!</code> is considered a subtype of all types and does not cause issues.</p>\n"}], "owner": {"reputation": 59, "user_id": 7804532, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e740e8a0856e7846edd3e3750703f092?s=128&d=identicon&r=PG&f=1", "display_name": "jln", "link": "https://stackoverflow.com/users/7804532/jln"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 600, "favorite_count": 0, "accepted_answer_id": 43255601, "answer_count": 1, "score": -1, "last_activity_date": 1491482833, "creation_date": 1491479311, "last_edit_date": 1491482833, "question_id": 43254340, "link": "https://stackoverflow.com/questions/43254340/how-to-write-a-panic-like-macro-in-rust", "title": "How to write a panic! like macro in Rust?", "body": "<p>For fatal error handling, I'm using the <code>panic!</code> macro, but I would prefer to have a macro that did not print the file/line information, only the error message.</p>\n\n<p>I read <a href=\"https://doc.rust-lang.org/stable/book/macros.html\" rel=\"nofollow noreferrer\">the macro documentation</a>, but my understanding is a bit shaky.</p>\n\n<p>I looked at the source of the <code>panic!</code> macro, but it's calling functions to do its work where the file and line information is an integral part of the operation, so I can't just tweak that.</p>\n\n<p>I looked at the <code>println!</code> macro, which looks more promising, but I have two problems I an unaware of how to solve.</p>\n\n<pre><code>macro_rules! die {\n    () =&gt; (print!(\"\\n\"));\n    ($fmt:expr) =&gt; (print!(concat!($fmt, \"\\n\")));\n    ($fmt:expr, $($arg:tt)*) =&gt; (print!(concat!($fmt, \"\\n\"), $($arg)*); exit(-1));\n}\n</code></pre>\n\n<p>If I put the <code>exit()</code> call in, as I have on the last line, I get syntax errors when trying to call it.</p>\n\n<p>If I remove the <code>exit()</code>, I don't get complaints about the macro, but this code fails to compile:</p>\n\n<pre><code>let file = match File::open(&amp;path) {\n    Err(why) =&gt; die!(\"Couldn't open {}: {}\", display, why.description()),\n    Ok(file) =&gt; file,\n};\n</code></pre>\n\n<p>Whereas it does compile when <code>die!</code> is replaced with <code>panic!</code>.  I assume there is some magic about <code>panic!</code> which tells the compiler that it never returns?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1491469724, "post_id": 43247212, "comment_id": 73570212, "body": "Could you post the code you have already?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1491483065, "post_id": 43247212, "comment_id": 73580086, "body": "Please <a href=\"https://stackoverflow.com/posts/43247212/edit\">edit</a> your question to explain why you say &quot;seems like it executed futures one by one&quot;. I have used <code>buffer_unordered</code> for <b>this exact purpose</b> and it worked for me."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1491483565, "creation_date": 1491483565, "answer_id": 43255940, "question_id": 43247212, "link": "https://stackoverflow.com/questions/43247212/join-futures-with-limited-concurrency/43255940#43255940", "title": "Join futures with limited concurrency", "body": "<p>We've used <a href=\"https://github.com/panoptix-za/influxdb-rs/blob/5f39c45fa4374631c2483cfd2fd3477bfc8b7ed6/examples/load_data.rs\" rel=\"nofollow noreferrer\">code like this</a> in a project to avoid opening too many TCP sockets. These futures have Hyper futures within, so it seems <em>exactly</em> the same case.</p>\n\n<pre><code>// Convert the iterator into a `Stream`. We will process\n// `PARALLELISM` futures at the same time, but with no specified\n// order.\nlet all_done =\n    futures::stream::iter(iterator_of_futures.map(Ok))\n    .buffer_unordered(PARALLELISM);\n\n// Everything after here is just using the stream in\n// some manner, not directly related\n\nlet mut successes = Vec::with_capacity(LIMIT);\nlet mut failures = Vec::with_capacity(LIMIT);\n\n// Pull values off the stream, dividing them into success and\n// failure buckets.\nlet mut all_done = all_done.into_future();\nloop {\n    match core.run(all_done) {\n        Ok((None, _)) =&gt; break,\n        Ok((Some(v), next_all_done)) =&gt; {\n            successes.push(v);\n            all_done = next_all_done.into_future();\n        }\n        Err((v, next_all_done)) =&gt; {\n            failures.push(v);\n            all_done = next_all_done.into_future();\n        }\n    }\n}\n</code></pre>\n\n<p>This is used in a piece of example code, so the event loop (<code>core</code>) is explicitly driven. Watching the number of file handles used by the program showed that it was capped. Additionally, before this bottleneck was added, we quickly ran out of allowable file handles, whereas afterward we did not.</p>\n"}], "owner": {"reputation": 69, "user_id": 7824791, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7269b356747a9544c3924ed3c48eaff9?s=128&d=identicon&r=PG&f=1", "display_name": "Pietro", "link": "https://stackoverflow.com/users/7824791/pietro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1082, "favorite_count": 1, "answer_count": 1, "score": 6, "last_activity_date": 1491483565, "creation_date": 1491459611, "last_edit_date": 1491483140, "question_id": 43247212, "link": "https://stackoverflow.com/questions/43247212/join-futures-with-limited-concurrency", "title": "Join futures with limited concurrency", "body": "<p>I have a large vector of Hyper HTTP request futures and want to resolve them into a vector of results. Since there is a limit of maximum open files, I want to limit concurrency to N futures. </p>\n\n<p>I've experimented with <code>Stream::buffer_unordered</code> but seems like it executed futures one by one.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 2, "creation_date": 1491443344, "post_id": 43244328, "comment_id": 73558653, "body": "Yes. To be fair, this was removed a while ago: <a href=\"https://github.com/rust-lang/rfcs/pull/59\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/59</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1491444145, "last_edit_date": 1491444145, "creation_date": 1491443683, "answer_id": 43244371, "question_id": 43244328, "link": "https://stackoverflow.com/questions/43244328/is-let-x-10-obsolete-in-rust/43244371#43244371", "title": "Is &quot;let x = ~10;&quot; obsolete in Rust?", "body": "<p>It is <strong>very</strong> obsolete. Rust 1.0 was released on 2015-05-15. This syntax was removed months before that. That means that your tutorial hasn't been updated in a long time; in fact, that file was last updated on 2014-01-28! Not a good sign.</p>\n\n<p>The non-obsolete version of your code:</p>\n\n<pre><code>fn main() {\n    let x = Box::new(10);\n    println!(\"{}\", x);\n}\n</code></pre>\n\n<ol>\n<li>The sigil <code>~</code> was replaced with specific data structures. In this case, <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html\" rel=\"noreferrer\"><code>Box</code></a>.</li>\n<li>The format specifier <code>:d</code> no longer exists. Just use the <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html\" rel=\"noreferrer\"><code>Display</code></a> formatter <code>{}</code>.</li>\n<li>There's no need to dereference the boxed number.</li>\n</ol>\n\n<hr>\n\n<p>Instead of some \"already obsolete\" reference, use the official sources:</p>\n\n<ul>\n<li><a href=\"http://rust-lang.github.io/book/second-edition/index.html\" rel=\"noreferrer\"><em>The Rust Programming Language</em>, Second Edition</a></li>\n<li><a href=\"http://rust-lang.github.io/book/first-edition/index.html\" rel=\"noreferrer\"><em>The Rust Programming Language</em>, First Edition</a></li>\n<li><a href=\"http://rustbyexample.com/\" rel=\"noreferrer\">Rust by Example</a></li>\n</ul>\n"}], "owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "accepted_answer_id": 43244371, "answer_count": 1, "score": 3, "last_activity_date": 1491444246, "creation_date": 1491443248, "last_edit_date": 1491444246, "question_id": 43244328, "link": "https://stackoverflow.com/questions/43244328/is-let-x-10-obsolete-in-rust", "title": "Is &quot;let x = ~10;&quot; obsolete in Rust?", "body": "<p>I read this <a href=\"http://aml3.github.io/RustTutorial/html/02.html#Owned_Boxes\" rel=\"nofollow noreferrer\">tutorial</a> and tried the following Rust code:  </p>\n\n<pre><code>fn main() {\n    let x = ~10;\n    println!(\"{:d}\", *x);\n}\n</code></pre>\n\n<p>But the compiler complains:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.16.0 (30cf806ef 2017-03-10)\nerror: expected expression, found `~`\n --&gt; &lt;anon&gt;:2:13\n  |\n2 |     let x = ~10;\n  |             ^\n\nerror: unknown format trait `d`\n --&gt; &lt;anon&gt;:3:22\n  |\n3 |     println!(\"{:d}\", *x);\n  |                      ^^\n</code></pre>\n\n<p>Is <code>let x = ~10;</code> obsolete already?</p>\n"}]