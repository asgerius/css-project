[{"tags": ["android", "ios", "rust"], "answers": [{"tags": [], "owner": {"reputation": 21, "user_id": 1549925, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xxpwj.jpg?s=128&g=1", "display_name": "Igor Cota", "link": "https://stackoverflow.com/users/1549925/igor-cota"}, "is_accepted": false, "score": 2, "last_activity_date": 1553473542, "creation_date": 1553473542, "answer_id": 55329908, "question_id": 54679017, "link": "https://stackoverflow.com/questions/54679017/how-to-debug-rust-on-android-ios/55329908#55329908", "title": "How to debug Rust on Android/iOS?", "body": "<p>Say you've built and deployed a Rust library on Android following <a href=\"https://mozilla.github.io/firefox-browser-architecture/experiments/2017-09-21-rust-on-android.html\" rel=\"nofollow noreferrer\">these steps</a>. In order to debug via rust-gdb or graphically with CLion do the following:</p>\n\n<ul>\n<li><p>Stop gradle from stripping your Rust .so files of debug symbols by adding <code>packagingOptions.doNotStrip \"**/*.so\"</code> to <code>app/build.gradle</code></p></li>\n<li><p>Push the gdbserver binary from Android NDK's <code>prebuild</code> directory to the device:</p></li>\n</ul>\n\n<pre><code>~/Android/Sdk/ndk-bundle/prebuilt/android-x86_64/gdbserver$ ~/Android/Sdk/platform-tools/adb push gdbserver /data/local/tmp\n~/Android/Sdk/platform-tools/adb shell \"chmod 777 /data/local/tmp/gdbserver\"\n</code></pre>\n\n<ul>\n<li>Restart adbd as root:</li>\n</ul>\n\n<pre><code>~/Android/Sdk/platform-tools/adb root\n</code></pre>\n\n<ul>\n<li>Forward a port that you will use for gdbserver:</li>\n</ul>\n\n<pre><code>~/Android/Sdk/platform-tools/adb forward tcp:1337 tcp:1337\n</code></pre>\n\n<ul>\n<li>Attach gdbserver to the process you wish to debug:</li>\n</ul>\n\n<pre><code>~/Android/Sdk/platform-tools/adb shell\ngeneric_x86_64:/ # su\ngeneric_x86_64:/ # set enforce 0\ngeneric_x86_64:/ # /data/local/tmp/gdbserver :1337 --attach $(ps -A | grep your.android.application.id | awk '{print $2}')\n</code></pre>\n\n<ul>\n<li>Either run <code>rust-gdb</code> or set up CLion's \"Remote GDB\" configuration with:</li>\n</ul>\n\n<pre><code>target remote tcp:localhost:1337\n</code></pre>\n"}], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 673, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1553473542, "creation_date": 1550090259, "last_edit_date": 1550090376, "question_id": 54679017, "link": "https://stackoverflow.com/questions/54679017/how-to-debug-rust-on-android-ios", "title": "How to debug Rust on Android/iOS?", "body": "<p>I had a hard time finding any useful information about the Rust debugging story on iOS/Android. I guess I can somehow use the same mechanism that allows remote debugging for C++, but I don't know where to start.</p>\n\n<p>My first attempt was to use Android Studio with the Rust plugin by JetBrains, but it seems they see this issue as <a href=\"https://github.com/intellij-rust/intellij-rust/issues/3399\" rel=\"nofollow noreferrer\">expected behavior</a>.</p>\n\n<p>My next take will be to try bypass UI and set breakpoints via <code>lldb</code>/<code>gdb</code> directly, but I see it as a crutch.</p>\n\n<p>How can I debug Rust code on Android/iOS? It will be excellent if I could do it with some UI.</p>\n"}, {"tags": ["enums", "reference", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550087386, "post_id": 54677673, "comment_id": 96145569, "body": "See also <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1550379943, "post_id": 54678343, "comment_id": 96243765, "body": "just to add;  if I remove the calls to <code>parse()</code> from OP&#39;s post, though the code compiles, it gives a clear warning on input and output being treated as having disjoint lifetimes. A precursor I believe, to what would happen if  the closure was used."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1550089227, "last_edit_date": 1550089227, "creation_date": 1550087504, "answer_id": 54678343, "question_id": 54677673, "link": "https://stackoverflow.com/questions/54677673/cannot-infer-an-appropriate-lifetime-when-using-a-closure-to-return-a-referenc/54678343#54678343", "title": "&quot;cannot infer an appropriate lifetime&quot; when using a closure to return a reference to an enum variant&#39;s content", "body": "<p>Ultimately, this is caused due to <a href=\"https://github.com/rust-lang/rust/issues/41078\" rel=\"nofollow noreferrer\">limitations in Rust's type inference</a>. Specifically, if a closure is passed immediately to a function that uses it, the compiler can infer what the argument and return types are. Unfortunately, when it is stored in a variable before being used, the compiler does not perform the same level of inference.</p>\n\n<p>Inline your closure and it works:</p>\n\n<pre><code>enum Data&lt;'a&gt; {\n    Value(&amp;'a String),\n    Null,\n}\n\nfn main() {\n    let s = String::new();\n    let d = Data::Value(&amp;s);\n\n    parse(&amp;d, |d| match d {\n        Data::Value(s) =&gt; Some(s),\n        _ =&gt; None,\n    });\n}\n\nfn parse&lt;'a, F&gt;(data: &amp;Data&lt;'a&gt;, filter: F)\nwhere\n    F: Fn(&amp;Data&lt;'a&gt;) -&gt; Option&lt;&amp;'a String&gt;,\n{\n    filter(data);\n}\n</code></pre>\n\n<p>However, I'd encourage you to instead create methods on the enum and participate in the <a href=\"https://rust-lang-nursery.github.io/api-guidelines/naming.html#ad-hoc-conversions-follow-as_-to_-into_-conventions-c-conv\" rel=\"nofollow noreferrer\">idiomatic set of conversion functions</a>:</p>\n\n<pre><code>enum Data&lt;'a&gt; {\n    Value(&amp;'a String),\n    Null,\n}\n\nimpl&lt;'a&gt; Data&lt;'a&gt; {\n    fn as_value(&amp;self) -&gt; Option&lt;&amp;'a str&gt; {\n        match self {\n            Data::Value(s) =&gt; Some(s),\n            _ =&gt; None,\n        }\n    }\n}\n\nfn main() {\n    let s = String::new();\n    let d = Data::Value(&amp;s);\n\n    parse(&amp;d, Data::as_value);\n}\n\nfn parse&lt;'a, F&gt;(data: &amp;Data&lt;'a&gt;, filter: F)\nwhere\n    F: Fn(&amp;Data&lt;'a&gt;) -&gt; Option&lt;&amp;'a str&gt;,\n{\n    filter(data);\n}\n</code></pre>\n\n<p>Your function variant doesn't work because you've put the relevant lifetime in the wrong place:</p>\n\n<pre><code>// Wrong\nfn equal_filter&lt;'a&gt;(d: &amp;'a Data) -&gt; Option&lt;&amp;'a String&gt;\n// Right\nfn equal_filter&lt;'a&gt;(d: &amp;Data&lt;'a&gt;) -&gt; Option&lt;&amp;'a String&gt;\n</code></pre>\n\n<p>Using either <code>#[deny(elided_lifetimes_in_paths)]</code> or <code>#[deny(rust_2018_idioms)]</code> will guide you to this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: hidden lifetime parameters in types are deprecated\n  --&gt; src/main.rs:12:22\n   |\n12 |     let equal = |d: &amp;Data| -&gt; Option&lt;&amp;String&gt; {\n   |                      ^^^^- help: indicate the anonymous lifetime: `&lt;'_&gt;`\n   |\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: hidden lifetime parameters in types are deprecated\n  --&gt; src/main.rs:24:28\n   |\n24 | fn equal_filter&lt;'a&gt;(d: &amp;'a Data) -&gt; Option&lt;&amp;'a String&gt; {\n   |                            ^^^^- help: indicate the anonymous lifetime: `&lt;'_&gt;`\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31403723/155423\">How to declare a lifetime for a closure argument?</a></li>\n</ul>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 54678343, "answer_count": 1, "score": 2, "last_activity_date": 1550089464, "creation_date": 1550084963, "last_edit_date": 1550089464, "question_id": 54677673, "link": "https://stackoverflow.com/questions/54677673/cannot-infer-an-appropriate-lifetime-when-using-a-closure-to-return-a-referenc", "title": "&quot;cannot infer an appropriate lifetime&quot; when using a closure to return a reference to an enum variant&#39;s content", "body": "<p>I have a function that accepts a reference to an enum, which I need to parse by matching the enum and reading its content. One of the variants of the enum (not in the simplified minimal working example below), may contain as value the type of the enum itself, therefore I may need to recursively call the same function to parse its value.</p>\n\n<p>I would like to write a function that acts as a filter and returns an <code>Option::Some</code> containing a reference to the content of the enum variant, or <code>None</code> if the value must be discarded.</p>\n\n<p>What follows is a minimal <em>working</em> (not-really compiling) example:</p>\n\n<pre><code>enum Data&lt;'a&gt; {\n    Value(&amp;'a String),\n    Null,\n}\n\nfn main() {\n    let s = String::new();\n    let d = Data::Value(&amp;s);\n\n    let equal = |d: &amp;Data| -&gt; Option&lt;&amp;String&gt; {\n        if let Data::Value(s) = d {\n            Some(s)\n        } else {\n            None\n        }\n    };\n\n    parse(&amp;d, equal);\n    //parse(&amp;d, equal_filter);\n}\n\nfn equal_filter&lt;'a&gt;(d: &amp;'a Data) -&gt; Option&lt;&amp;'a String&gt; {\n    if let Data::Value(s) = d {\n        Some(s)\n    } else {\n        None\n    }\n}\n\nfn parse&lt;'a, F&gt;(data: &amp;Data&lt;'a&gt;, filter: F)\nwhere\n    F: Fn(&amp;Data&lt;'a&gt;) -&gt; Option&lt;&amp;'a String&gt;,\n{\n    filter(data);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b4ebb51cb7205466e52115f01227f2b9\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n\n<p>I tried to compile the code by using a closure first, but in that case I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:11:33\n   |\n11 |         if let Data::Value(s) = d {\n   |                                 ^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 10:17...\n  --&gt; src/main.rs:10:17\n   |\n10 |       let equal = |d: &amp;Data| -&gt; Option&lt;&amp;String&gt; {\n   |  _________________^\n11 | |         if let Data::Value(s) = d {\n12 | |             Some(s)\n13 | |         } else {\n14 | |             None\n15 | |         }\n16 | |     };\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;Data&lt;'_&gt;\n              found &amp;Data&lt;'_&gt;\nnote: but, the lifetime must be valid for the expression at 18:5...\n  --&gt; src/main.rs:18:5\n   |\n18 |     parse(&amp;d, equal);\n   |     ^^^^^\nnote: ...so that a type/lifetime parameter is in scope here\n  --&gt; src/main.rs:18:5\n   |\n18 |     parse(&amp;d, equal);\n   |     ^^^^^\n</code></pre>\n\n<p>So I tried with a function, but a got another error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `for&lt;'r&gt; &lt;for&lt;'a, 's&gt; fn(&amp;'a Data&lt;'s&gt;) -&gt; std::option::Option&lt;&amp;'a std::string::String&gt; {equal_filter} as std::ops::FnOnce&lt;(&amp;'r Data&lt;'_&gt;,)&gt;&gt;::Output == std::option::Option&lt;&amp;std::string::String&gt;`\n  --&gt; src/main.rs:19:5\n   |\n19 |     parse(&amp;d, equal_filter);\n   |     ^^^^^ expected bound lifetime parameter, found concrete lifetime\n   |\nnote: required by `parse`\n  --&gt; src/main.rs:30:1\n   |\n30 | / fn parse&lt;'a, F&gt;(data: &amp;Data&lt;'a&gt;, filter: F)\n31 | | where\n32 | |     F: Fn(&amp;Data&lt;'a&gt;) -&gt; Option&lt;&amp;'a String&gt;,\n33 | | {\n34 | |     filter(data);\n35 | | }\n   | |_^\n</code></pre>\n\n<p>I would prefer to solve the issue using the closure, but I don't know how to proceed even by using the function.</p>\n"}, {"tags": ["rust", "language-lawyer"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1550070190, "post_id": 54673145, "comment_id": 96136202, "body": "<code>str</code> is actually more comparable to an <i>unsized slice</i> <code>[T]</code>, rather than a fixed size array <code>[T; N]</code>. And you can&#39;t have a variable of type <code>[u8]</code> either."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550070561, "post_id": 54673145, "comment_id": 96136466, "body": "And what would be the point of such feature ?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1550070772, "post_id": 54673145, "comment_id": 96136598, "body": "You can use <a href=\"https://docs.rs/smallstr/0.1.0/smallstr/struct.SmallString.html\" rel=\"nofollow noreferrer\">smallstr</a> or something like that if you want to optimize the string allocations."}, {"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "edited": false, "score": 0, "creation_date": 1550070980, "post_id": 54673145, "comment_id": 96136746, "body": "I got great insights from these comments and answers. We had 2 type aliases: <code>type A = String;</code> and <code>type B = Vec&lt;u8&gt;</code> in our code. And a method taking <code>&amp;A</code> triggered clippy. That was when I started looking for these parallels between <code>&amp;str</code> and <code>&amp;[u8]</code> and this slight asymmetry in the type-system."}], "answers": [{"comments": [{"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "edited": false, "score": 1, "creation_date": 1550071738, "post_id": 54673303, "comment_id": 96137230, "body": "The link to the Unicode string processing is quite useful. Living in a locale which writes names and dates in strange orders, has non-ascii characters, I thought I saw most problems with localization. Boy, I was wrong."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 10, "last_activity_date": 1550071029, "last_edit_date": 1550071029, "creation_date": 1550070371, "answer_id": 54673303, "question_id": 54673145, "link": "https://stackoverflow.com/questions/54673145/why-can-fixed-size-arrays-be-on-the-stack-but-str-cannot/54673303#54673303", "title": "Why can fixed-size arrays be on the stack, but str cannot?", "body": "<blockquote>\n  <p>asymmetry between <code>Vec&lt;T&gt;</code> &lt;-> <code>[T; N]</code> and <code>String</code> &lt;-> <code>str</code></p>\n</blockquote>\n\n<p>That's because you confused something here. The relationships are rather like this:</p>\n\n<ul>\n<li><code>Vec&lt;T&gt;</code> \u21d4 <code>[T]</code></li>\n<li><code>String</code> \u21d4 <code>str</code></li>\n</ul>\n\n<p>In all those four types, the length information is stored at runtime, not compile time. Fixed size arrays <code>([T; N]</code>) are different in that regard: they store the length at compile time, but not runtime!</p>\n\n<p>And indeed, both <code>[T]</code> and <code>str</code> can't be stored on the stack, because they are both unsized.</p>\n\n<blockquote>\n  <p>Could an <code>str[N]</code> type, which would be a shorthand to a <code>[u8; N]</code> that only contains provably valid UTF-8 encoded strings, replace <code>str</code> without breaking lots of existing code?</p>\n</blockquote>\n\n<p>It wouldn't replace <code>str</code>, but it could be an interesting addition indeed! But there are probably reasons why it doesn't exist yet, e.g. because <a href=\"https://manishearth.github.io/blog/2017/01/14/stop-ascribing-meaning-to-unicode-code-points/\" rel=\"noreferrer\">the length of a Unicode string is usually not really relevant</a>. In particular, it usually doesn't make sense to \"take a Unicode string with exactly three bytes\". </p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1550071542, "post_id": 54673633, "comment_id": 96137109, "body": "I remember pcwalton being strongly opposed to the use of VLAs."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1550071780, "post_id": 54673633, "comment_id": 96137255, "body": "@MatthieuM. I can certainly see them being misused or overused, but the same feature gives us <code>Box&lt;FnOnce()&gt;</code> so I&#39;m cautiously optimistic!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1550071352, "creation_date": 1550071352, "answer_id": 54673633, "question_id": 54673145, "link": "https://stackoverflow.com/questions/54673145/why-can-fixed-size-arrays-be-on-the-stack-but-str-cannot/54673633#54673633", "title": "Why can fixed-size arrays be on the stack, but str cannot?", "body": "<blockquote>\n  <p><code>[T]</code> and <code>str</code> can't be stored on the stack, because they are both unsized</p>\n</blockquote>\n\n<p>While this is true today, it may not be true in the future. <a href=\"https://rust-lang.github.io/rfcs/1909-unsized-rvalues.html\" rel=\"noreferrer\">RFC 1909 introduces <em>unsized rvalues</em></a>. One of the powers that this feature would give is <a href=\"https://doc.rust-lang.org/nightly/unstable-book/language-features/unsized-locals.html#variable-length-arrays\" rel=\"noreferrer\"><em>variable-length arrays</em></a>:</p>\n\n<blockquote>\n  <p>The RFC also describes an extension to the array literal syntax: <code>[e; dyn n]</code>. In the syntax, <code>n</code> isn't necessarily a constant expression. The array is <strong>dynamically allocated on the stack</strong></p>\n</blockquote>\n\n<p>No mention is made of whether a string will be directly possible, but one could always create a stack-allocated array of bytes to be used as storage for a string.</p>\n"}], "owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 307, "favorite_count": 0, "accepted_answer_id": 54673303, "answer_count": 2, "score": 9, "last_activity_date": 1550071428, "creation_date": 1550069903, "last_edit_date": 1550071428, "question_id": 54673145, "link": "https://stackoverflow.com/questions/54673145/why-can-fixed-size-arrays-be-on-the-stack-but-str-cannot", "title": "Why can fixed-size arrays be on the stack, but str cannot?", "body": "<p>Answers to <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust&#39;s `String` and `str`?</a> describe how <code>&amp;str</code> and <code>String</code> relate to each other.</p>\n\n<p>What is surprising is that a <code>str</code> is more limited than a fixed-sized array, because it cannot be declared as a local variable. Compiling</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let arr_owned = [0u8; 32];\nlet arr_slice = &amp;arr_owned;\n\nlet str_slice = \"apple\";\nlet str_owned = *str_slice;\n</code></pre>\n\n<p>in Rust 1.32.0, I get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `str` cannot be known at compilation time\n --&gt; src/lib.rs:6:9\n</code></pre>\n\n<p>which is confusing, because the size of <code>\"apple\"</code> can be known by the compiler, it is just not part of the <code>str</code> type.</p>\n\n<p>Is there a linguistic reason for the asymmetry between <code>Vec&lt;T&gt;</code> &lt;-> <code>[T; N]</code> and <code>String</code> &lt;-> <code>str</code> owned types? Could an <code>str[N]</code> type, which would be a shortand to a <code>[u8; N]</code> that only contains provably valid UTF-8 encoded strings, replace <code>str</code> without breaking lots of existing code?</p>\n"}, {"tags": ["rust", "rust-criterion"], "answers": [{"tags": [], "owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "is_accepted": true, "score": 4, "last_activity_date": 1550131073, "last_edit_date": 1550131073, "creation_date": 1550103260, "answer_id": 54681407, "question_id": 54672250, "link": "https://stackoverflow.com/questions/54672250/is-it-possible-to-limit-the-number-of-iterations-that-criterion-performs/54681407#54681407", "title": "Is it possible to limit the number of iterations that Criterion performs?", "body": "<p>It is possible.</p>\n\n<p>Look at the <a href=\"https://docs.rs/criterion/0.2.10/criterion/struct.Benchmark.html\" rel=\"nofollow noreferrer\">Criterion Benchmark</a>. There you can find methods relevant to you, specifically <code>measurement_time</code> . </p>\n\n<p>Digging deeper, you can find how to use them <a href=\"https://docs.rs/criterion/0.2.7/criterion/struct.Criterion.html#method.bench\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre><code>fn bench(c: &amp;mut Criterion) {\n    // Setup (construct data, allocate memory, etc)\n    c.bench(\n        \"routines\",\n        Benchmark::new(\"routine_1\", |b| b.iter(|| routine_1()))\n            .with_function(\"routine_2\", |b| b.iter(|| routine_2()))\n            .measurement_time(Duration::from_millis(1000))\n    );\n}\n\ncriterion_group!(benches, bench);\ncriterion_main!(benches);\n</code></pre>\n\n<p>Where <code>measurement_time(Duration::from_millis(1000))</code> is the droid you're looking for. This effectively dropped the number of iterations for my specific function by 80%.</p>\n"}], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1052, "favorite_count": 0, "accepted_answer_id": 54681407, "answer_count": 1, "score": 9, "last_activity_date": 1611245345, "creation_date": 1550067202, "last_edit_date": 1611245345, "question_id": 54672250, "link": "https://stackoverflow.com/questions/54672250/is-it-possible-to-limit-the-number-of-iterations-that-criterion-performs", "title": "Is it possible to limit the number of iterations that Criterion performs?", "body": "<p>I am developing some benchmarks for a crate using criterion (<code>cargo bench</code>). I would like to temporarily limit the amount of iterations until I finish the code.</p>\n\n<p>I know measurements may not be precise, but this is just temporary. Is this possible?</p>\n"}, {"tags": ["image", "rust", "rgba"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550061207, "post_id": 54670144, "comment_id": 96130412, "body": "What do you mean &quot;does not work&quot;. A proper description would be good. Is an error emitted? Does the result does not look like what you want? How does it differ?"}, {"owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550061287, "post_id": 54670144, "comment_id": 96130463, "body": "@hellow the result still have a white background which is not I want."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1550061321, "post_id": 54670144, "comment_id": 96130484, "body": "Out of curiosity. Why would you expect it to be transparent now? The color white is still white. You haven&#39;t changed anything. You have to modify white to transparent somehow"}, {"owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550061428, "post_id": 54670144, "comment_id": 96130551, "body": "@hellow I think that&#39;s exactly what I want actually."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1550061690, "post_id": 54670144, "comment_id": 96130700, "body": "Imo, you need to take a look at this <a href=\"https://www.reddit.com/r/rust/comments/3mhf0y/piston_question_how_can_i_change_the_color_of_an/\" rel=\"nofollow noreferrer\">topic</a> Since you did not change the color itself, even though you change rgb to rgba, it does not work as you wanted."}, {"owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1550062103, "post_id": 54670144, "comment_id": 96130934, "body": "@AkinerAlkan tbh I&#39;m still confused a bit, I thought it should be pretty simple (e.g., worst case is to iterate over all pixels, if pixel = (255, 255, 255) then set it&#39;s transparency to 0 (all others have 1). I thought there&#39;s a special method for this loop operation. E.g. look at this question: <a href=\"https://stackoverflow.com/questions/765736/using-pil-to-make-all-white-pixels-transparent\" title=\"using pil to make all white pixels transparent\">stackoverflow.com/questions/765736/&hellip;</a>"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1550062492, "post_id": 54670144, "comment_id": 96131168, "body": "@H.Desane In your reference question, After conversion to the rgba, there is a loop that makes the conversion process. So as similar you need to add this implementation to your code as well I guess."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1550064027, "post_id": 54670144, "comment_id": 96132174, "body": "A little bit off-topic, but this kind of image would gain to be in svg."}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1550063813, "creation_date": 1550060666, "last_edit_date": 1550063813, "question_id": 54670144, "link": "https://stackoverflow.com/questions/54670144/how-can-i-make-white-background-transparent-with-the-image-crate", "title": "How can I make white background transparent with the image crate?", "body": "<p>Here's a minimal code sample that should convert <code>rgb</code> to <code>rgba</code> image (<em>goal</em>: make white background transparent):</p>\n\n<pre><code>extern crate image;\n\nfn main() {\n    // ```open``` returns a `DynamicImage` on success.\n    let img = image::open(\"image_with_white_background.png\").unwrap();\n\n    // Should make white background transparent\n    // Found a similar question: https://stackoverflow.com/questions/765736/using-pil-to-make-all-white-pixels-transparent\n    // Is there a nice method for that loop (see the answer to the question above)?\n    let img = img.to_rgba();\n\n    img.save(\"image_with_transparent_background.png\").unwrap();\n}\n</code></pre>\n\n<p>It don't really work though, there's still white background in <code>image_with_transparent_background.png</code>. </p>\n\n<p>Here's the image I work with:</p>\n\n<p><a href=\"https://i.imgur.com/ckkgNso.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.imgur.com/ckkgNso.png\" alt=\"picture\"></a></p>\n\n<p>Update: this piece of code works, but I wonder if there's something more elegant (e.g., can I reuse existing library call instead):</p>\n\n<pre><code>fn main() {\n    let img = image::open(\"image_with_white_background.png\").unwrap();\n\n\n    let mut img = img.to_rgba();\n    for p in img.pixels_mut() {\n        if p[0] == 255 &amp;&amp; p[1] == 255 &amp;&amp; p[2] == 255 {\n            p[3] = 0;\n        }\n    }\n\n    img.save(\"image_with_transparent_background.png\").unwrap();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550051352, "post_id": 54666812, "comment_id": 96124426, "body": "<a href=\"https://github.com/rust-lang/rust/blob/827a141466e7bb85eb3c030600878a2c606019e9/src/liballoc/vec.rs#L293-L296\" rel=\"nofollow noreferrer\">Vec</a>, <a href=\"https://github.com/rust-lang/rust/blob/827a141466e7bb85eb3c030600878a2c606019e9/src/liballoc/raw_vec.rs#L42-L46\" rel=\"nofollow noreferrer\">RawVec</a>"}, {"owner": {"reputation": 47412, "user_id": 3141234, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/78b45a835031f4ce03a6653b3262b5d3?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/3141234/alexander"}, "edited": false, "score": 0, "creation_date": 1550102086, "post_id": 54666812, "comment_id": 96151326, "body": "FYI storing the length as a separate entity isn&#39;t necessary, and is in fact bad practice. Vec stores its own length."}], "owner": {"reputation": 4978, "user_id": 650228, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7974f6c6e7dd479c4155cc122a461fce?s=128&d=identicon&r=PG", "display_name": "kittylyst", "link": "https://stackoverflow.com/users/650228/kittylyst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "closed_date": 1550050923, "answer_count": 0, "score": 0, "last_activity_date": 1550050572, "creation_date": 1550050572, "question_id": 54666812, "link": "https://stackoverflow.com/questions/54666812/what-is-the-memory-layout-of-vec-in-rust", "closed_reason": "Duplicate", "title": "What is the memory layout of Vec in Rust?", "body": "<p>I have an enum that looks a bit like this:</p>\n\n<pre><code>pub enum VmObj {\n  ...\n  vm_arr_int {\n    mark: u64,\n    length: i32,\n    elements: Vec&lt;i32&gt;,\n  },\n  ...\n}\n</code></pre>\n\n<p>It's being used to implement mutable storage of integers (in the Vec) for a simple interpreter I'm writing to teach myself Rust but I'm having problems reasoning about what needs to be a reference.</p>\n\n<p>What does the actual layout of a Vec look like in memory?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1550049562, "post_id": 54666192, "comment_id": 96123239, "body": "The error itself notifies you about the problem, Since you are creating Buffer in the scope and assigning it&#39;s pointer to your struct but this value does not live enough because it has already destroyed since the value is not stored in anywhere."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 3, "creation_date": 1550052557, "post_id": 54666192, "comment_id": 96125244, "body": "Why is <code>Putter::buffer</code> a reference? Why not put the buffer directly in the <code>Putter</code>?"}, {"owner": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "edited": false, "score": 0, "creation_date": 1550063240, "post_id": 54666192, "comment_id": 96131644, "body": "What <i>is</i> the difference exactly?"}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "edited": false, "score": 0, "creation_date": 1550062121, "post_id": 54669993, "comment_id": 96130947, "body": "Which part of the book explains this?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "edited": false, "score": 1, "creation_date": 1550064245, "post_id": 54669993, "comment_id": 96132311, "body": "@JaredLanders <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">Chapter 10.3</a> is about lifetime syntax and talks about <code>&#39;static</code>. Here&#39;s one relevant excerpt: <i>Lifetime annotations don\u2019t change how long any of the references live. [... They] describe the relationships of the lifetimes of multiple references to each other without affecting the lifetimes.</i> You can&#39;t make a thing live forever by taking a <code>&amp;&#39;static</code> reference to it; you have to make it live forever and <i>then</i> the compiler will let you take a <code>&#39;static</code> reference to it."}], "tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 2, "last_activity_date": 1550060157, "creation_date": 1550060157, "answer_id": 54669993, "question_id": 54666192, "link": "https://stackoverflow.com/questions/54666192/temporary-value-does-not-live-long-enough/54669993#54669993", "title": "Temporary value does not live long enough", "body": "<p>This is more or less logical error for me. You should carefully read about <a href=\"https://doc.rust-lang.org/book/ch04-00-understanding-ownership.htm\" rel=\"nofollow noreferrer\">Rust ownership</a>. </p>\n\n<p>Consider thinking about how would your code work.</p>\n\n<pre><code>struct Putter {\n    x: usize,\n    y: usize,\n    buffer: &amp;'static mut Buffer,\n}\n</code></pre>\n\n<p>Buffer is a reference which you have lifetime equal to the lifetime of the program,\n<code>'static</code> tells compiler that. Error message is pretty clear, you're creating temporary value in place and borrowing it. It will be destroyed right after exiting scope, so your reference will be pointing to invalid memory. Dangling references are prohibited in Rust. In language like C++ this example will compile fine, but will result in run-time error. </p>\n\n<p>To fix this issue <code>buffer</code> should own value and struct design should be rethought while keeping attention to lifetimes. </p>\n\n<pre><code>struct Putter {\n    x: usize,\n    y: usize,\n    buffer: Buffer,\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 10850112, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UUG7OpZ_Cuo/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWTH39ZT8F3kMS-qqOQtwAupOJN0w/mo/photo.jpg?sz=128", "display_name": "Jared Landers", "link": "https://stackoverflow.com/users/10850112/jared-landers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 261, "favorite_count": 0, "accepted_answer_id": 54669993, "answer_count": 1, "score": 0, "last_activity_date": 1550060157, "creation_date": 1550048605, "last_edit_date": 1550051640, "question_id": 54666192, "link": "https://stackoverflow.com/questions/54666192/temporary-value-does-not-live-long-enough", "title": "Temporary value does not live long enough", "body": "<p>I'm having trouble with this code. I have no idea why it errors.\nIt's supposed to take camera input and then put that inside of a buffer struct, contained inside the putter struct.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate rscam;\n// use std::fs::File;\n// use std::io::prelude::*;\n\nconst WIDTH: usize = 1280;\nconst HEIGHT: usize = 720;\n\n#[derive(Debug, Clone, Copy, PartialEq, Eq)]\nstruct Pyxel {\n    r: u8,\n    g: u8,\n    b: u8,\n}\n\nimpl Pyxel {\n    fn new() -&gt; Pyxel {\n        Pyxel { r: 0, g: 0, b: 0 }\n    }\n}\n\n#[repr(transparent)]\nstruct Buffer {\n    pyxels: [[Pyxel; WIDTH]; HEIGHT],\n}\n\n// impl Buffer {\n//  fn new(s: [[Pyxel; WIDTH]; HEIGHT]) -&gt; Buffer {\n//      Buffer {\n//          pyxels: s,\n//      }\n//  }\n// }\n\nstruct Putter {\n    x: usize,\n    y: usize,\n    buffer: &amp;'static mut Buffer,\n}\n\nimpl Putter {\n    fn put_pyxel(&amp;mut self, r: u8, g: u8, b: u8) {\n        if self.x &gt;= WIDTH {\n            self.move_down();\n        }\n        let col = self.x;\n        let row = self.y;\n        self.buffer.pyxels[row][col] = Pyxel { r: r, g: g, b: b };\n        self.x += 1;\n    }\n    fn move_down(&amp;mut self) {\n        self.y += 1;\n    }\n    fn new() -&gt; Putter {\n        Putter {\n            x: 0,\n            y: 0,\n            buffer: &amp;mut Buffer {\n                pyxels: [[Pyxel::new(); WIDTH]; HEIGHT],\n            },\n        }\n    }\n}\n\nfn main() {\n    let mut camera = rscam::new(\"/dev/video0\").unwrap();\n    camera\n        .start(&amp;rscam::Config {\n            interval: (1, 30),\n            resolution: (1280, 720),\n            format: b\"RGB3\",\n            ..Default::default()\n        })\n        .unwrap();\n\n    let frame = camera.capture().unwrap();\n\n    let mut putter = Putter::new();\n}\n</code></pre>\n\n<p>It errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n   --&gt; src/main.rs:65:20\n   |\n57 |               buffer: &amp;mut Buffer {\n   |  __________________________^\n58 | |                 pyxels: [[Pyxel::new(); WIDTH]; HEIGHT],\n59 | |             },\n   | |_____________^ temporary value does not live long enough\n60 |           }\n61 |       }\n   |       - temporary value only lives until here\n   |\n  = note: borrowed value must be valid for the static lifetime..\n</code></pre>\n\n<p>How do I use the buffer inside of the putter (structs)?</p>\n\n<p>For the most part, I understand what this errors means, not how it works. I just need a workaround or a solution. Any help is appreciated. I could have written this better but im tired.</p>\n"}, {"tags": ["rust", "rust-macros", "rust-decl-macros"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550044500, "post_id": 54665070, "comment_id": 96120550, "body": "Your code gives me no error. You may want to use that macro in a function. Please provide an example where we can reproduce that error you got in your code, e.g. on <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">the playground</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1550044623, "post_id": 54665070, "comment_id": 96120605, "body": "Btw: your code works... <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=12df25696429d43c658d5a9db38eb072\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> You may want to be more specific about what works and what doesn&#39;t. That&#39;s why it is important to provide an example that fully works/doesn&#39;t work. Only in that case we can help you"}, {"owner": {"reputation": 13, "user_id": 4987854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c2e5b6a2ebe0adca1c4e0280e01e17d?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Kudzin", "link": "https://stackoverflow.com/users/4987854/alexander-kudzin"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550045058, "post_id": 54665070, "comment_id": 96120819, "body": "@hellow need to call gen_packer, not tuple_index. I&#39;m update code"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550045141, "post_id": 54665070, "comment_id": 96120865, "body": "@AlexanderKudzin what is <code>A</code>?"}, {"owner": {"reputation": 13, "user_id": 4987854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c2e5b6a2ebe0adca1c4e0280e01e17d?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Kudzin", "link": "https://stackoverflow.com/users/4987854/alexander-kudzin"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550045182, "post_id": 54665070, "comment_id": 96120885, "body": "@hellow letter for generic (not variable)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550045324, "post_id": 54665070, "comment_id": 96120960, "body": "To <i>me</i> your code does not make sense at all. What you do want to achieve? It looks like you ran into a problem and overcomplicating it."}, {"owner": {"reputation": 13, "user_id": 4987854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c2e5b6a2ebe0adca1c4e0280e01e17d?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Kudzin", "link": "https://stackoverflow.com/users/4987854/alexander-kudzin"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550045517, "post_id": 54665070, "comment_id": 96121050, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7d4bc0f56c643cf4693279a9bd9db973\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> i&#39;m add here all that need for receive this errors"}, {"owner": {"reputation": 13, "user_id": 4987854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c2e5b6a2ebe0adca1c4e0280e01e17d?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Kudzin", "link": "https://stackoverflow.com/users/4987854/alexander-kudzin"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550045563, "post_id": 54665070, "comment_id": 96121075, "body": "I want to generate implementation of trait for tuple with various sizes"}, {"owner": {"reputation": 13, "user_id": 4987854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c2e5b6a2ebe0adca1c4e0280e01e17d?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Kudzin", "link": "https://stackoverflow.com/users/4987854/alexander-kudzin"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550047147, "post_id": 54665070, "comment_id": 96121823, "body": "@hellow do you understand what I want?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550047964, "post_id": 54665070, "comment_id": 96122315, "body": "Sadly not :/ but there are more people than me on SO ^^"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1550052767, "post_id": 54665070, "comment_id": 96125371, "body": "What is the <code>Pack</code> trait here?"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1550056712, "last_edit_date": 1550056712, "creation_date": 1550053264, "answer_id": 54667753, "question_id": 54665070, "link": "https://stackoverflow.com/questions/54665070/tuple-indexing-in-macro/54667753#54667753", "title": "Tuple indexing in macro", "body": "<blockquote>\n  <p>Can I index tuple or need another solution? </p>\n</blockquote>\n\n<p>No. The expression <code>$idx + 1</code> will produce distinct tokens, for example <code>0</code>, <code>+</code>, <code>1</code>, and there is no way to evaluate that to a single literal token within a declarative macro.</p>\n"}], "owner": {"reputation": 13, "user_id": 4987854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c2e5b6a2ebe0adca1c4e0280e01e17d?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Kudzin", "link": "https://stackoverflow.com/users/4987854/alexander-kudzin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 808, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1550056712, "creation_date": 1550044408, "last_edit_date": 1550052960, "question_id": 54665070, "link": "https://stackoverflow.com/questions/54665070/tuple-indexing-in-macro", "title": "Tuple indexing in macro", "body": "<p>I'm trying to index data tuple in macro that generate signature for trait implementation, but have some errors. Can I index tuple or need another solution? Hack with <code>tuple_index</code> I found in google but it not works for me.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7d4bc0f56c643cf4693279a9bd9db973\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7d4bc0f56c643cf4693279a9bd9db973</a></p>\n\n<pre><code>macro_rules! expr { ($x:expr) =&gt; ($x) } // HACK\nmacro_rules! tuple_index {\n    ($tuple:expr, $idx:tt) =&gt; { expr!($tuple.$idx) }\n}\nmacro_rules! gen_packer {\n    (@step $data: expr, $_idx:expr,) =&gt; {};\n\n    (@step $data: expr, $idx:expr, $T:ident, $($tail:ident,)*) =&gt; {\n        // out.append(&amp;mut $T::pack(tuple_index!(data,$idx)));\n        tuple_index!($data, $idx);\n\n        gen_packer!(@step $data, $idx + 1, $($tail,)*);\n    };\n\n    ($($T:ident),*) =&gt; {\n        impl&lt;$($T,)+&gt; Packer&lt;($($T,)+)&gt; for Iproto\n        where $($T: Pack&lt;$T&gt;,)+\n        {\n            fn pack(self, data: ($($T,)+)) -&gt; Vec&lt;u8&gt; {\n                let mut out = vec![];\n                gen_packer!(@step data, 0, $($T,)*);\n                return out\n            }\n        }\n    }\n}\n\ngen_packer!(A);\n</code></pre>\n\n<p>Errors on compilation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: unexpected token: `0`\n--&gt; src/lib/iproto.rs:70:29\n   |\n70 |         tuple_index!($data, $idx);\n   |                             ^^^^\n...\n99 | gen_packer!(A);\n   | --------------- in this macro invocation\n\nerror: unexpected token: `,`\n  --&gt; src/lib/iproto.rs:63:46\n   |\n63 |     ($tuple:expr, $idx:tt) =&gt; { expr!($tuple.$idx) }\n   |                                              ^\n...\n99 | gen_packer!(A);\n   | --------------- in this macro invocation\n\nerror: no rules expected the token `0`\n  --&gt; src/lib/iproto.rs:70:29\n   |\n61 | macro_rules! expr { ($x:expr) =&gt; ($x) } // HACK\n   | ----------------- when calling this macro\n...\n70 |         tuple_index!($data, $idx);\n   |                             ^^^^ no rules expected this token in macro call\n...\n99 | gen_packer!(A);\n   | --------------- in this macro invocation\n\nerror: aborting due to 3 previous errors\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1865, "user_id": 10617218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f177615451e594d1c2d74c7c8ada58a?s=128&d=identicon&r=PG", "display_name": "Robin  van Leeuwen", "link": "https://stackoverflow.com/users/10617218/robin-van-leeuwen"}, "edited": false, "score": 0, "creation_date": 1550039944, "post_id": 54663955, "comment_id": 96118480, "body": "Ahh, easy enough. This was what i was looking for. I&#39;ll read up on the differences between the _or() and _or_else() functions. I suspect the _ in this will be the error on which the parse failed?"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 1865, "user_id": 10617218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f177615451e594d1c2d74c7c8ada58a?s=128&d=identicon&r=PG", "display_name": "Robin  van Leeuwen", "link": "https://stackoverflow.com/users/10617218/robin-van-leeuwen"}, "edited": false, "score": 0, "creation_date": 1550040137, "post_id": 54663955, "comment_id": 96118558, "body": "Yes exactly,  To keep the answer minimal, I did not handle the error in the answer, just silenced it with underscore"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1865, "user_id": 10617218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f177615451e594d1c2d74c7c8ada58a?s=128&d=identicon&r=PG", "display_name": "Robin  van Leeuwen", "link": "https://stackoverflow.com/users/10617218/robin-van-leeuwen"}, "edited": false, "score": 2, "creation_date": 1550045073, "post_id": 54663955, "comment_id": 96120830, "body": "The issue of <code>unwrap()</code> is a bit more nuanced than &quot;don&#39;t panic in production&quot;. The answers to the linked question are a pretty good starting point. I&#39;d guess that @Robin may want to treat the absence of an <code>&quot;interval&quot;</code> field the same way as an unparseable value, in which case one way to do that would be <code>.and_then(|value| value.parse().ok())</code> instead of <code>.unwrap().parse()</code>."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 6, "last_activity_date": 1562154923, "last_edit_date": 1562154923, "creation_date": 1550039514, "answer_id": 54663955, "question_id": 54663849, "link": "https://stackoverflow.com/questions/54663849/parse-integer-or-provide-default-value-with-unwrap-or-but-print-error-message-w/54663955#54663955", "title": "Parse integer or provide default value with unwrap_or, but print error message when default value is used", "body": "<blockquote>\n  <p>How can I make it so that <code>unwrap_or</code> only executes the code in <code>optb</code> when <code>parse()</code> has failed?</p>\n</blockquote>\n\n<ul>\n<li><p>Arguments passed to <code>unwrap_or</code> are <strong><em>eagerly evaluated</em></strong>. </p></li>\n<li><p>If you are passing the result of a function call, it is recommended\nto use <code>unwrap_or_else</code> which is <strong><em>lazily evaluated</em></strong>.</p></li>\n</ul>\n\n<p>In your scenario it should be changed as following:</p>\n\n<pre><code>let config: Config = Config {\n   interval: settings.get(\"interval\").unwrap().parse().unwrap_or_else(|_| {\n        error!(\"No interval found. Using default: 90\");\n        90\n    }),\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=06932df6fa0d63e582aa640797a70187\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>Also you should not use naked <code>unwrap()</code> in your production code. \nError handling is better solution instead of using naked <code>unwrap()</code></p>\n\n<p><a href=\"https://stackoverflow.com/questions/39477684/should-i-avoid-unwrap-in-production-application\">Here</a> you can find detailed info about why you should not use <code>unwrap()</code></p>\n"}], "owner": {"reputation": 1865, "user_id": 10617218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f177615451e594d1c2d74c7c8ada58a?s=128&d=identicon&r=PG", "display_name": "Robin  van Leeuwen", "link": "https://stackoverflow.com/users/10617218/robin-van-leeuwen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 54663955, "answer_count": 1, "score": 2, "last_activity_date": 1562154923, "creation_date": 1550039112, "last_edit_date": 1550051988, "question_id": 54663849, "link": "https://stackoverflow.com/questions/54663849/parse-integer-or-provide-default-value-with-unwrap-or-but-print-error-message-w", "title": "Parse integer or provide default value with unwrap_or, but print error message when default value is used", "body": "<p>I have written some code that parses a config file. If the config file holds a valid value for a field it sets in <code>Config</code> struct. If no valid integer value was found for a setting it sets a default value (e.g: 90).</p>\n\n<pre><code>let config = Config {\n    interval: settings.get(\"interval\").unwrap().parse().unwrap_or(90),\n}\n</code></pre>\n\n<p>How can I make this to take a closure, so that it can print via <code>error!</code> and set default value?</p>\n\n<p>Looking something like following:</p>\n\n<pre><code>let config = Config {\n    interval: settings.get(\"interval\").unwrap().parse().unwrap_or({\n        error!(\"No interval found. Using default: 90\");\n        90\n    });\n}\n</code></pre>\n\n<p>But in this example, the <code>error!</code> is always executed, even if a valid value from interval was read from the config.</p>\n\n<p>How can I make it so that unwrap_or only executes the code in <code>optb</code> when <code>parse()</code> has failed?</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates"], "answers": [{"comments": [{"owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "edited": false, "score": 0, "creation_date": 1550028133, "post_id": 54661651, "comment_id": 96115044, "body": "I still don&#39;t understand why we&#39;re even given the possibility to rename it if renaming it only means breaking it. Why?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "edited": false, "score": 2, "creation_date": 1550028534, "post_id": 54661651, "comment_id": 96115145, "body": "@NiklasRosencrantz <i>renaming it only means breaking it</i> \u2014 How did you get to that conclusion? I showed an example of properly renaming a crate (<code>some_name = { package=&quot;...</code>) before showing an example that misuses the feature (<code>&quot;gcc.jit&quot; = { package = &quot;...</code>)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1550028567, "last_edit_date": 1550028567, "creation_date": 1550025544, "answer_id": 54661651, "question_id": 54661124, "link": "https://stackoverflow.com/questions/54661124/is-there-a-problem-with-naming-a-crate-containing-the-string-rs/54661651#54661651", "title": "Is there a problem with naming a crate containing the string &quot;.rs&quot;?", "body": "<p>Yes, there is a problem. Do not do this.</p>\n\n<h1>How you could have determined this for yourself</h1>\n\n<p>Try to use the code that you've proposed, you'll see:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\nerror: failed to parse manifest at `.../Cargo.toml`\n\nCaused by:\n  could not parse input as TOML\n\nCaused by:\n  expected an equals, found a period at line 9\n</code></pre>\n\n<p>You could have also attempted to create a package with the same name. You would have then seen:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo new 'gccjit.rs.git'\nerror: Invalid character `.` in crate name: `gccjit.rs.git`\nuse --name to override crate name\n</code></pre>\n\n<h1>Who controls crate names</h1>\n\n<p><em>You</em> don't get to control the name of an imported crate that way; <a href=\"https://github.com/swgillespie/gccjit.rs/blob/master/Cargo.toml\" rel=\"noreferrer\">the <em>crate</em> determines it</a> and it's already picked one:</p>\n\n<pre><code>[package]\nname = \"gccjit\"\n</code></pre>\n\n<p>If you want to rename an existing package on import, you have to use the <code>package</code> key to match the real name:</p>\n\n<pre><code>some_name = { package = \"gccjit\", git = \"https://github.com/swgillespie/gccjit.rs.git\" }\n</code></pre>\n\n<p>See <a href=\"https://stackoverflow.com/q/50999616/155423\">How to idiomatically alias a crate in Rust 2018?</a> for more.</p>\n\n<p>To use a period in the name, you can seemingly use a string key (although I think this <a href=\"https://github.com/rust-lang/cargo/issues/6656\" rel=\"noreferrer\">is a bug</a>):</p>\n\n<pre><code>\"gcc.jit\" = { package = \"gccjit\", git = \"https://github.com/swgillespie/gccjit.rs.git\" }\n</code></pre>\n\n<p>However, a package name has to be a valid Rust identifier, which periods are not. If you do this, there's <em>no way to use the package</em>.</p>\n\n<h1>It's redundant anyway</h1>\n\n<p>More opinion based, such a name is completely pointless. You don't need to say \"rs\" or \"rust\" in the name because <em>of course</em> it's Rust code. If it wasn't, you couldn't use it as a dependency in the first place. </p>\n\n<p>We don't call our packages \"computer-source-code-awesome-tool\" for the same reason \u2014 that much is implied.</p>\n\n<h1>Package names are different from source control</h1>\n\n<p>Cargo and Rust don't care what the name of your source control repository is. It's separate from the package name. While it's better to have them be somewhat similar, there's no real reason they have to be whatsoever related.</p>\n\n<h1>Package names are different from library names</h1>\n\n<p>This is a feature with a <strong>very small</strong> number of uses, but the name of your <em>package</em> (a.k.a. name of the crate on Crates.io) can be different from the name of your <em>library</em> (what is imported into the code).</p>\n\n<p>Piston is the biggest \"offender\" of this that I know of:</p>\n\n<pre><code>[package]\nname = \"piston2d-graphics\"\nversion = \"0.30.0\"\n\n[lib]\nname = \"graphics\"\n</code></pre>\n\n<p><strong>Please</strong> do not use this as it's simply maddening to attempt to debug.</p>\n"}], "owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 1, "accepted_answer_id": 54661651, "answer_count": 1, "score": 0, "last_activity_date": 1550028567, "creation_date": 1550021003, "last_edit_date": 1550024404, "question_id": 54661124, "link": "https://stackoverflow.com/questions/54661124/is-there-a-problem-with-naming-a-crate-containing-the-string-rs", "title": "Is there a problem with naming a crate containing the string &quot;.rs&quot;?", "body": "<p>Could there be any future problem in naming a dependency .rs for example, </p>\n\n<pre><code>[dependencies]\ngccjit.rs = { git = \"https://github.com/swgillespie/gccjit.rs.git\" }\n</code></pre>\n\n<p>In the above code, I use <code>.rs</code> for something which is not a Rust source code file. Is that not ideal or is it okay because it would be easier to default to the same name as the repository?</p>\n\n<p>If an object is named <code>.rs</code> it could maybe be automatically recognized as Rust source code but in this case it is not. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1550007090, "post_id": 54658894, "comment_id": 96109479, "body": "<i>to be able to compare them</i> \u2014 <b>why</b> do you think you need this? Why not use value-based equality? Literally writing <code>#[derive(PartialEq)]</code> before the <code>struct</code> will allow you to compare two instances for equality."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550007298, "post_id": 54658894, "comment_id": 96109563, "body": "<i>I could make the <code>id</code> mutable</i> \u2014 you cannot make fields mutable. Mutability is a property of the variable binding, not the type. <i>there is no need to change the variable after initialisation</i> \u2014 that&#39;s extremely suspicious, considering that the memory address of the variable can change every time you move it, starting with when you return it from your constructor."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1550007366, "post_id": 54658894, "comment_id": 96109590, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/32935808/155423\">Generate sequential IDs for each instance of a struct</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/54658894/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1550007399, "post_id": 54658894, "comment_id": 96109607, "body": "That being said, I think you are suffering from a strong case of <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">the X-Y problem</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550007901, "post_id": 54658894, "comment_id": 96109814, "body": "If you are deadset on using the memory address (with the knowledge that values can move in memory), then see <a href=\"https://stackoverflow.com/q/30157258/155423\">Are unique object ids tracked and can we print them?</a>; <a href=\"https://stackoverflow.com/q/37706596/155423\">Is there a way to distingush between different <code>Rc</code>s of the same value?</a>; <a href=\"https://stackoverflow.com/q/39463760/155423\">How to check if two variables point to the same object in memory?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1550009137, "post_id": 54658894, "comment_id": 96110281, "body": "If what you want is reference equality, the Q I flagged is your duplicate. But if you&#39;re going for motonically increasing IDs, mcarton&#39;s is a closer match. What isn&#39;t clear is what happens when a value is moved: should its ID change or not?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1550009407, "post_id": 54658894, "comment_id": 96110362, "body": "Your idea cannot work. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e6f2877de1b6e0e0c3aa2056b277b05d\" rel=\"nofollow noreferrer\">The stack address of the temporary players in <code>new</code> will always be the same, and thus they will all have the same id.</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1550009591, "post_id": 54658894, "comment_id": 96110428, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2b74478624dcbc25fd5a9147ff50efbb\" rel=\"nofollow noreferrer\">Inlining works</a>, until <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3889fcee2b2412bfdcfb8778a2edf1ca\" rel=\"nofollow noreferrer\">it doesn&#39;t</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1550010464, "post_id": 54658894, "comment_id": 96110727, "body": "@mcarton Not sure if that was partially directed at me or not; to be clear, if all you need is reference equality, you would not store an <code>id</code> in the object because all you need is a reference to it."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1550010918, "post_id": 54658894, "comment_id": 96110895, "body": "It wasn&#39;t directed at you, but at the OP."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1550012331, "post_id": 54658894, "comment_id": 96111359, "body": "@mcarton It will not <i>always</i> be the same. It will depend on where you are in the stack. For example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a3198e416a9cb419d83e56605a47605d\" rel=\"nofollow noreferrer\">this here essentially makes the id depend on the number of stack frames of function <code>p</code></a>... which is just as useless."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1550012622, "post_id": 54658894, "comment_id": 96111447, "body": "Yes, as long as it is <i>sometimes</i> the same, this method is useless."}, {"owner": {"reputation": 131, "user_id": 1934514, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4983de2f80dd835d7e2eab6b98afdc66?s=128&d=identicon&r=PG", "display_name": "Patrick", "link": "https://stackoverflow.com/users/1934514/patrick"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1550131601, "post_id": 54658894, "comment_id": 96159602, "body": "@trentcl It was indeed the duplicate you flagged. I needed to know if two references point to the same struct. Thanks for the pointer! I was searching using the wrong keywords en thus did not find that question."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1550148840, "post_id": 54658894, "comment_id": 96169228, "body": "No problem! That&#39;s what duplicates are for -- connecting lots of questions that all relate to the same answer but use different keywords to describe it."}], "owner": {"reputation": 131, "user_id": 1934514, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4983de2f80dd835d7e2eab6b98afdc66?s=128&d=identicon&r=PG", "display_name": "Patrick", "link": "https://stackoverflow.com/users/1934514/patrick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1582, "favorite_count": 0, "closed_date": 1550016204, "answer_count": 0, "score": 3, "last_activity_date": 1598129291, "creation_date": 1550006752, "last_edit_date": 1598129291, "question_id": 54658894, "link": "https://stackoverflow.com/questions/54658894/how-do-i-create-a-unique-id-for-a-rust-object", "closed_reason": "Duplicate", "title": "How do I create a unique ID for a Rust object?", "body": "<p>I would like to give my object a unique ID (to be able to compare them). I figured to do something along these lines:</p>\n\n<pre><code>pub struct Player {\n    id: i32,\n    score: usize,\n}\n\nimpl Player {\n    fn new() -&gt; Player {\n        let mut player = Player {};\n        player.id = &amp;player as *const i32;\n        player\n    }\n}\n</code></pre>\n\n<p>I run into the problem that I need to set the variables when defining the <code>Player</code>, but there is no memory address at that point.</p>\n\n<p>I could make the <code>id</code> mutable, but there is no need to change the variable after initialisation.</p>\n\n<p>How can I do something like this?</p>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550003211, "post_id": 54658155, "comment_id": 96107713, "body": "You&#39;ve <a href=\"https://stackoverflow.com/q/41042767/155423\">already answered this question</a> \u2014 why do you believe that these questions are not duplicates?"}, {"owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1550003628, "post_id": 54658155, "comment_id": 96107927, "body": "The best way to solve the use case in your link (a Deserialize impl) is not the best way to solve this use case (not a Deserialize impl). Notice that there are three materially different places where insignificant nesting arises -- adjacent to other fields (observed in your link), by itself at the top level, and by itself below the top level (both observed in this question) and they require three different approaches."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550003902, "post_id": 54658155, "comment_id": 96108060, "body": "Do you have any suggestions on how the <i>questions</i> can be improved to better highlight these differences to increase searchability?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550004151, "post_id": 54658155, "comment_id": 96108181, "body": "I&#39;ve edited your comment into your post; Is it correct to say that #3 is addressed via <code>serde(with)</code> and #2 is addressed via directly using <code>Wrapper</code>?"}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 3, "last_activity_date": 1550004065, "last_edit_date": 1550004065, "creation_date": 1550002954, "answer_id": 54658155, "question_id": 54657873, "link": "https://stackoverflow.com/questions/54657873/is-there-a-way-to-omit-wrapper-root-objects-when-deserializing-objects-with-serd/54658155#54658155", "title": "Is there a way to omit wrapper/root objects when deserializing objects with Serde?", "body": "<p>I would implement this using a wrapper struct that can be used directly for dropping the top level of nesting as well as through a <code>#[serde(with = \"...\")]</code> attribute for eliminating levels of nesting within the deserialized data structure.</p>\n\n<hr>\n\n<pre><code>use serde::{Deserialize, Deserializer};\n\n#[derive(Deserialize, Debug)]\nstruct Continent {\n    id: u64,\n    name: String,\n    #[serde(with = \"Wrapper\")]\n    countries: Vec&lt;Country&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Country {\n    id: u64,\n    name: String,\n    capital: String,\n}\n\n#[derive(Deserialize)]\nstruct Wrapper&lt;T&gt; {\n    data: T,\n}\n\nimpl&lt;T&gt; Wrapper&lt;T&gt; {\n    fn deserialize&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;T, D::Error&gt;\n    where\n        T: Deserialize&lt;'de&gt;,\n        D: Deserializer&lt;'de&gt;,\n    {\n        let wrapper = &lt;Self as Deserialize&gt;::deserialize(deserializer)?;\n        Ok(wrapper.data)\n    }\n}\n\nfn main() -&gt; serde_json::Result&lt;()&gt; {\n    let j = r#\"\n        {\n          \"data\": {\n            \"id\": 1,\n            \"name\": \"South America\",\n            \"countries\": {\n              \"data\": [\n                {\n                  \"id\": 122,\n                  \"name\": \"Brazil\",\n                  \"capital\": \"Brasilia\"\n                }\n              ]\n            }\n          }\n        }\"#;\n\n    let wrapper: Wrapper&lt;Continent&gt; = serde_json::from_str(j)?;\n    println!(\"{:#?}\", wrapper.data);\n\n    Ok(())\n}\n</code></pre>\n\n<hr>\n\n<p>There are three materially different places where insignificant nesting arises:</p>\n\n<ol>\n<li>adjacent to other fields </li>\n<li>by itself at the top level</li>\n<li>by itself below the top level</li>\n</ol>\n\n<p>All three require different approaches. #2 and #3 are observed in this question.</p>\n\n<p>To solve #1, see <a href=\"https://stackoverflow.com/q/41042767/155423\">Is it possible to flatten sub-object fields while parsing with serde_json?</a></p>\n"}], "owner": {"reputation": 790, "user_id": 3018232, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fe61ad7deac14f5426932c774c2e39a9?s=128&d=identicon&r=PG", "display_name": "tehAnswer", "link": "https://stackoverflow.com/users/3018232/tehanswer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 571, "favorite_count": 1, "accepted_answer_id": 54658155, "answer_count": 1, "score": 3, "last_activity_date": 1550004065, "creation_date": 1550001783, "last_edit_date": 1550002268, "question_id": 54657873, "link": "https://stackoverflow.com/questions/54657873/is-there-a-way-to-omit-wrapper-root-objects-when-deserializing-objects-with-serd", "title": "Is there a way to omit wrapper/root objects when deserializing objects with Serde?", "body": "<p>I have the following object:</p>\n\n<pre><code>{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"South America\",\n    \"countries\": {\n      \"data\": [\n        {\n          \"id\": 122,\n          \"name\": \"Brazil\",\n          \"capital\": \"Brasilia\"\n        }\n      ]\n    }\n  }\n}\n</code></pre>\n\n<p>I'd like to define two structs, <code>Continent</code> and <code>Country</code>, omitting the <code>data</code> wrappings which don't add value.</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549996851, "post_id": 54656078, "comment_id": 96104695, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7b750dcdd855aaef06ccb7133d93c9ee\" rel=\"nofollow noreferrer\">The duplicate applied to your situation</a>"}, {"owner": {"reputation": 213, "user_id": 47818, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4213282c1d0ea6103923392ac77b36ed?s=128&d=identicon&r=PG", "display_name": "robson", "link": "https://stackoverflow.com/users/47818/robson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549997463, "post_id": 54656078, "comment_id": 96104950, "body": "Thanks. I knew I could work around with an index. But my real use case is that I have a semaphore and a vector of mutexes. The idea is that I would try each mutex in the vector with try_lock and return the MutexGuard and a SemaphoreGuard together. When all mutexes are locked the semaphore will block and it will avoid a busy loop trying try_lock() in all mutexes until one was free. In that case I can&#39;t use indexes."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549997812, "post_id": 54656078, "comment_id": 96105111, "body": "I generally can&#39;t solve problems with code I can&#39;t see, so I don&#39;t have much help to give here. It&#39;s <i>possible</i> that this could be a place to make judicious use of <code>unsafe</code> code to sidestep the borrow checker."}, {"owner": {"reputation": 213, "user_id": 47818, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4213282c1d0ea6103923392ac77b36ed?s=128&d=identicon&r=PG", "display_name": "robson", "link": "https://stackoverflow.com/users/47818/robson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549998531, "post_id": 54656078, "comment_id": 96105456, "body": "Something like this: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3d04fbf943ffcbbc57f618f0a82e92ad\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> Except that the playground won&#39;t let me use a crate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549998649, "post_id": 54656078, "comment_id": 96105522, "body": "Not <a href=\"https://play.rust-lang.org/help#features-crates\" rel=\"nofollow noreferrer\">that specific crate, no</a>."}, {"owner": {"reputation": 213, "user_id": 47818, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4213282c1d0ea6103923392ac77b36ed?s=128&d=identicon&r=PG", "display_name": "robson", "link": "https://stackoverflow.com/users/47818/robson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550002764, "post_id": 54656078, "comment_id": 96107516, "body": "Is there an unsafe version of vector::push?"}, {"owner": {"reputation": 213, "user_id": 47818, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4213282c1d0ea6103923392ac77b36ed?s=128&d=identicon&r=PG", "display_name": "robson", "link": "https://stackoverflow.com/users/47818/robson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550003259, "post_id": 54656078, "comment_id": 96107731, "body": "I&#39;ve found out that RUSTFLAGS=&quot;-Z borrowck=mir -Z polonius&quot; cargo run accepts the original code I posted."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550016924, "post_id": 54656078, "comment_id": 96112553, "body": "There&#39;s no concept of an unsafe push, no. You have to re-create the reference so that the compiler doesn&#39;t know they are associated. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=15c10911ef09190e7d1113ebce7bebd2\" rel=\"nofollow noreferrer\">An example</a>. That being said, your concept has larger problems that the compiler cannot see through because mutating the <code>Vec</code> invalidates the references to everything inside of it."}, {"owner": {"reputation": 213, "user_id": 47818, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4213282c1d0ea6103923392ac77b36ed?s=128&d=identicon&r=PG", "display_name": "robson", "link": "https://stackoverflow.com/users/47818/robson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1550017350, "post_id": 54656078, "comment_id": 96112641, "body": "I think the concept doesn&#39;t really have problems. The mutation only happens if I&#39;m not holding the reference anymore. The compiler even agrees with me when I use the -Z polonius flag. Thanks for posting the example on how to work around the borrow checker in this case."}], "owner": {"reputation": 213, "user_id": 47818, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4213282c1d0ea6103923392ac77b36ed?s=128&d=identicon&r=PG", "display_name": "robson", "link": "https://stackoverflow.com/users/47818/robson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 0, "closed_date": 1549996399, "answer_count": 0, "score": 1, "last_activity_date": 1549995989, "creation_date": 1549994472, "last_edit_date": 1549995444, "question_id": 54656078, "link": "https://stackoverflow.com/questions/54656078/return-a-reference-to-an-existing-vector-element-or-a-newly-inserted-element", "closed_reason": "Duplicate", "title": "Return a reference to an existing vector element or a newly-inserted element", "body": "<pre><code>struct Foo {\n    a: Vec&lt;i32&gt;,\n}\n\nimpl Foo {\n    fn bar(&amp;mut self) -&gt; &amp;i32 {\n        if let Some(x) = self.a.iter().find(|i| **i == 0) {\n            return x;\n        }\n        self.a.push(0);\n        self.a.last().unwrap()\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=efac1933a7cf6e86e986101c88987fee\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>This code looks semantically correct to me. It should either return a reference to an existing element in the vector or create a new element and return a reference to it. But I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `self.a` as mutable because it is also borrowed as immutable\n  --&gt; src/lib.rs:10:9\n   |\n6  |     fn bar(&amp;mut self) -&gt; &amp;i32 {\n   |            - let's call the lifetime of this reference `'1`\n7  |         if let Some(x) = self.a.iter().find(|i| **i == 0) {\n   |                          ------ immutable borrow occurs here\n8  |             return x;\n   |                    - returning this value requires that `self.a` is borrowed for `'1`\n9  |         }\n10 |         self.a.push(0);\n   |         ^^^^^^^^^^^^^^ mutable borrow occurs here\n</code></pre>\n\n<p>Is there a way to make this code compile?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549937242, "post_id": 54641688, "comment_id": 96075311, "body": "Welcome to Stack Overflow! I believe your question may be answered by the answers of <a href=\"https://stackoverflow.com/questions/53545506/does-rust-libc-crate-inhibit-the-compilation-of-custom-panic-handler\">Does Rust libc crate inhibit the compilation of custom panic handler?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/54641688/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 49, "user_id": 11048053, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c525852c929fffce762c4cde387ed68c?s=128&d=identicon&r=PG&f=1", "display_name": "jlb6740", "link": "https://stackoverflow.com/users/11048053/jlb6740"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549938431, "post_id": 54641688, "comment_id": 96075505, "body": "@Shepmaster, Hi, thanks for the suggestion. I did happen to see that post and had forgotten about it. Since there was only one answer (with one vote) and no solution, I didn&#39;t know what to make of it. Not shown in my code above was an inclusion <code>extern crate libc</code> but when I remove this code it does not prevent the error. The one answer though points to a cargo bug where use_std is included unexpectedly. I did not quite follow all the thread and I do not use xcargo but looking at verbose output of my build I do not see use_std being included. Still, I will look deeper into this bug to confirm."}, {"owner": {"reputation": 49, "user_id": 11048053, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c525852c929fffce762c4cde387ed68c?s=128&d=identicon&r=PG&f=1", "display_name": "jlb6740", "link": "https://stackoverflow.com/users/11048053/jlb6740"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549943137, "post_id": 54641688, "comment_id": 96076526, "body": "@Shepmaster .. I just noticed the part about please edit or have this marked as already answered. I think it is impossible to call this question already having been answered by the one pointed to considering has no accepted solution. There is only one response with one up vote and no comments from the questioner. The proposed answer points to a bug on github that I do see some parallels but certainly can&#39;t say it is a duplicate. I&#39;d much rather give people time to view this issue and comment and help rather than dismissing as a duplicate to a post that has almost no activity and no solution."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549964962, "post_id": 54641688, "comment_id": 96085541, "body": "Note that a question does not have to hold an accepted answer to be considered useful (only the asker can do that, and they might forget/choose not to do it for arbitrary reasons). The answer there suggests that any build dependency could be pushing a panic handler. But considering that I don&#39;t see any other dependencies in your example other than <code>wasmi</code>, there <i>could</i> be something else at play that makes it worth investigating further."}, {"owner": {"reputation": 49, "user_id": 11048053, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c525852c929fffce762c4cde387ed68c?s=128&d=identicon&r=PG&f=1", "display_name": "jlb6740", "link": "https://stackoverflow.com/users/11048053/jlb6740"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549998890, "post_id": 54641688, "comment_id": 96105648, "body": "Thanks @E_net4 .. I agree with @shipmaster there are parallels and that each of our questions could be prompted by the same underlying issue. I don&#39;t though see output in the <code>--verbose</code> build that makes it clear something is causing std lib to be used. I really want suggestions to help explain how to figure out what crate or code is causing std code to be brought in. There is a command <code>cargo metadata</code> that I can run and see a bunch of dependencies. In particular scopeguard appears to have a use_std feature, but when I do an nm on that rlib I can&#39;t see any unwind or other std lib functions."}], "answers": [{"tags": [], "owner": {"reputation": 49, "user_id": 11048053, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c525852c929fffce762c4cde387ed68c?s=128&d=identicon&r=PG&f=1", "display_name": "jlb6740", "link": "https://stackoverflow.com/users/11048053/jlb6740"}, "is_accepted": true, "score": -1, "last_activity_date": 1550177129, "creation_date": 1550177129, "answer_id": 54698807, "question_id": 54641688, "link": "https://stackoverflow.com/questions/54641688/how-to-troubleshoot-why-cargo-rustc-links-in-rust-standard-library-symbols-even/54698807#54698807", "title": "How to troubleshoot why cargo/rustc links in rust standard library symbols even when no_std is used?", "body": "<p>I resolved this after seeking some help in the rust forums. <a href=\"https://users.rust-lang.org/t/solved-how-to-troubleshoot-why-and-prevent-cargo-rustc-links-in-crate-std-when-no-std-is-specified/25233\" rel=\"nofollow noreferrer\">enter link description here</a>. Specifically, was not able to determine what was responsible for rust std lib being linked into my executable ... was it an issue with a crate or an issue with cargo or an issue with rustc or an issue with the linker. I did not know where the problem was born, but based on similar bugs filed I figured that somehow a crate was being compiled to bring in std lib unexpected. Turns out bug <a href=\"https://stackoverflow.com/questions/53545506/does-rust-libc-crate-inhibit-the-compilation-of-custom-panic-handler\">enter link description here</a> was not related even though the error message was the same. I did not have an issue with unexpected propagations form different type of dependencies (dev-dependencies and build-dependencies). I tried all these techniques to pinpoint what was bringing in std lib:</p>\n\n<ol>\n<li><p>I tried using cargo tree to list dependencies to list all the crate\ndependencies:</p>\n\n<p>wasmi v0.4.3 (/home/jlb6740/github_dev/wasmi)<br>\n\u251c\u2500\u2500 byteorder v1.3.1 (/home/jlb6740/github_dev/byteorder)<br>\n\u251c\u2500\u2500 hashbrown v0.1.8 (/home/jlb6740/github_dev/hashbrown)<br>\n\u2502   \u251c\u2500\u2500 byteorder v1.3.1 (/home/jlb6740/github_dev/byteorder) (<em>)<br>\n\u2502   \u2514\u2500\u2500 scopeguard v0.3.3 (/home/jlb6740/github_dev/scopeguard)<br>\n\u251c\u2500\u2500 libm v0.1.2<br>\n\u251c\u2500\u2500 memory_units v0.3.0<br>\n\u2514\u2500\u2500 parity-wasm v0.31.0 (/home/jlb6740/github_dev/parity-wasm)<br>\n    \u2514\u2500\u2500 byteorder v1.3.1 (/home/jlb6740/github_dev/byteorder) (</em>)<br></p></li>\n<li><p>I tried using cargo rustc --verbose \u2026 but at this time verbose does\nnot indicate anything was using default features which may include\nusing std</p></li>\n<li><p>I tried using cargo metadata \u2026 this generated a long list of\ndependencies that was hard to parse, but I did see some instances\nwhere scopeguard and byteorder had default features requiring std\nsupport. I downloaded all of these crates and just hardcoded\nattributes so that the crates would only build with no_std support.</p></li>\n<li><p>I tried looking at the deps/ output and did an nm on all of the\nrlibs to see if any of the libraries used symbols found in std. I\ncould not find that that was the case. I thought rlibs were like\nstatic libraries and that anything they used would be included in\nthe rlib but apparently not.</p></li>\n<li><p>I looked at cargo rustc -- -C --print-link-args to check out linker\nflags but I could not find anything obvious telling me it was\nbringing in std lib.</p></li>\n</ol>\n\n<p>None of these things helped me to pinpoint what was introducing std lib. Ultimately the suggestion at the rust forums was to use cargo check for a target that does not allow std lib at all. Those with a <code>*</code> listed here: <a href=\"https://forge.rust-lang.org/platform-support.html#tier-3\" rel=\"nofollow noreferrer\">enter link description here</a> have only core support. I tried that, running with <code>--target=thumbv7m-none-eabi</code> and saw:</p>\n\n<p>error[E0463]: can\u2019t find crate for alloc<br>\n\u2013> /home/jlb6740/github_dev/hashbrown/src/lib.rs:44:1<br>\n|<br>\n44 | extern crate std as alloc;<br>\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^ can\u2019t find crate<br></p>\n\n<p>Turns out it was hashbrown which was a dependency of a dependency of my executable. It built no_std by default but had an extern std linked under a different name and which was guarded by a feature called \u201cnightly\u201d. The guard was disabled in my efforts to not build anything but no_std. Nothing I\u2019d tried alerted me to the crate which was responsible until this. Seems there should be a better way to get a more comprehensive list of crate dependencies than what cargo tree provided, but changing the wasmi cargo to make sure the nightly feature was set solved my issue.</p>\n"}], "owner": {"reputation": 49, "user_id": 11048053, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c525852c929fffce762c4cde387ed68c?s=128&d=identicon&r=PG&f=1", "display_name": "jlb6740", "link": "https://stackoverflow.com/users/11048053/jlb6740"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 608, "favorite_count": 2, "accepted_answer_id": 54698807, "answer_count": 1, "score": 5, "last_activity_date": 1550177129, "creation_date": 1549935738, "last_edit_date": 1550000223, "question_id": 54641688, "link": "https://stackoverflow.com/questions/54641688/how-to-troubleshoot-why-cargo-rustc-links-in-rust-standard-library-symbols-even", "title": "How to troubleshoot why cargo/rustc links in rust standard library symbols even when no_std is used?", "body": "<p>I am trying to create an embed-friendly executable (small footprint and without dependency on the Rust standard library) that uses a library (wasmi) that already has support for a <code>no_std</code> build. New to Rust, I am simply piecing together instructions, but the gist of it appears to be <a href=\"https://os.phil-opp.com/freestanding-rust-binary/\" rel=\"nofollow noreferrer\">follow the steps</a>.</p>\n\n<p>For the executable:</p>\n\n<pre><code>#![no_std]\n#![no_main]\n\nuse core::panic::PanicInfo;\n\n/// This function is called on panic.\n#[panic_handler]\nfn panic(_info: &amp;PanicInfo) -&gt; ! {\n    loop {}\n}\n\n#[no_mangle]\npub extern \"C\" fn _start(_argc: isize, _argv: *const *const u8) -&gt; ! {\n    interpret(_argc, _argv);\n    loop {}\n}\n</code></pre>\n\n<p>That is to:</p>\n\n<ul>\n<li>include <code>#![no_std]</code></li>\n<li>define our entry (not <code>main</code> since we don't have a runtime that will call it)</li>\n<li>and define a panic handler since the Rust std lib is not included to define it for us.</li>\n</ul>\n\n<p>My Cargo file to compile this looks like this:</p>\n\n<pre><code>[package]\n name = \"driver\"\n version = \"0.1.0\"\n edition = \"2018\"\n\n[dependencies.wasmi]\n path = \"../../github_dev/wasmi\" \n features = [\"core\"]\n default-features = false\n test=false\n bench=false\n\n [profile.release]\n panic = \"abort\"\n lto = true\n incremental=false\n debug=true\n opt-level = \"z\"\n test=false\n bench=false\n</code></pre>\n\n<p>and produces a very small binary that excludes any standard library symbols (using <code>nm</code> to check) and runs as expected.</p>\n\n<p>The problem occurs when I actually try to call a function from the wasmi library. It is built with <code>no_std</code> via the <code>features=core</code> line. Doing an <code>nm</code> on the files in <code>release/deps/libwasmi-*.rlib</code> shows no standard library symbols. However when linking occurs with this command:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc --release --verbose -- -C link-arg=-nostartfiles\n</code></pre>\n\n<p>it leads to:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling driver v0.1.0 (/home/my_home/wasmi_embed/driver)\n     Running rustc --edition=2018 --crate-name driver src/main.rs --color always --crate-type bin --emit=dep-info,link -C opt-level=3 -C panic=abort -C lto -C link-arg=-nostartfiles -C metadata=957eda2e590447ba -C extra-filename=-957eda2e590447ba --out-dir /home/my_home/wasmi_embed/driver/target/release/deps -L dependency=/home/my_home/wasmi_embed/driver/target/release/deps --extern libc=/home/my_home/wasmi_embed/driver/target/release/deps/liblibc-f7fb773c7b059a14.rlib --extern wasmi=/home/my_home/wasmi_embed/driver/target/release/deps/libwasmi-534aef1926b4eb6c.rlib\n</code></pre>\n\n<p>and an error occurs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0152]: duplicate lang item found: panic_impl.\n  --&gt; src/main.rs:31:1\n   |\n31 | / pub extern fn panic(_info: &amp;PanicInfo) -&gt; ! {\n32 | |     loop {}\n33 | | }\n   | |_^\n   |\n   = note: first defined in crate `std`.\n</code></pre>\n\n<p>It seems Rust is trying to link in standard library support for at least panic handling, but I don't know why.</p>\n\n<p>I would like help to understand why and to understand how to prevent it.</p>\n\n<p>If I remove the <code>panic_impl</code> attribute then my executable compiles, but it includes a lot of  standard library symbols that I am trying to prevent. </p>\n\n<p>The example symbols I see are:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>my_home@my_puter:~/wasmi_embed/driver/target/release$ nm --demangle -A -a -B -s --line-number test_2018 2&gt;/dev/null | grep std\ndriver:00000000000264c0 t rust_begin_unwind  /rustc/8e2063d02062ee9f088274690a97826333847e17//src/libstd/panicking.rs:311\ndriver:00000000000264a0 t rust_oom   /rustc/8e2063d02062ee9f088274690a97826333847e17//src/libstd/alloc.rs:203\ndriver:000000000001f490 t rust_panic /rustc/8e2063d02062ee9f088274690a97826333847e17//src/libstd/panicking.rs:524\ndriver:0000000000025aa0 t _$LT$std..panicking..continue_panic_fmt..PanicPayload$LT$$u27$a$GT$$u20$as$u20$core..panic..BoxMeUp$GT$::get::he4f810e299a2e0b4    /rustc/8e2063d02062ee9f088274690a97826333847e17//src/libstd/panicking.rs:372\ndriver:00000000000259a0 t _$LT$std..panicking..continue_panic_fmt..PanicPayload$LT$$u27$a$GT$$u20$as$u20$core..panic..BoxMeUp$GT$::box_me_up::hd8430725259668a8     /rustc/8e2063d02062ee9f088274690a97826333847e17//src/libstd/panicking.rs:367\ndriver:0000000000021520 t _$LT$std..sys_common..process..DefaultEnvKey$u20$as$u20$core..borrow..Borrow$LT$std..ffi..os_str..OsStr$GT$$GT$::borrow::hbacd0cd7d7fbf1c1/rustc/8e2063d02062ee9f088274690a97826333847e17//src/libstd/sys_common/process.rs:27\ndriver:0000000000021570 t _$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$$LP$dyn$u20$std..error..Err\n... plus more\n</code></pre>\n\n<p>The above symbols are not found in any of the rlib files under the <code>dep</code> directory including libwasmi, nor are they found in the driver executable when not calling libwasmi code.</p>\n\n<p>I've read <a href=\"https://github.com/rust-lang/cargo/issues/5978\" rel=\"nofollow noreferrer\">a similar issue</a> (hence my <code>test=false</code> and <code>bench=false</code> in the Cargo.toml) but that did not help. I've tried to build with just <code>rustc</code> with varying commands (excluding Cargo) but the error is the same. I've tried to compile wasmi as a static library (ar) and link it in, but being new to Rust I was spending a lot of time trying to link it in and it just wasn't happening.</p>\n"}, {"tags": ["rust", "mutable", "unsafe", "aliasing"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549905142, "post_id": 54633535, "comment_id": 96063626, "body": "@rodrigo FWIW, I <a href=\"https://github.com/solson/miri/issues/628\" rel=\"nofollow noreferrer\">filed an issue for the discrepancy</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1549914544, "last_edit_date": 1549914544, "creation_date": 1549897851, "answer_id": 54633535, "question_id": 54633474, "link": "https://stackoverflow.com/questions/54633474/is-aliasing-of-mutable-references-correct-in-unsafe-code/54633535#54633535", "title": "Is aliasing of mutable references correct in unsafe code?", "body": "<blockquote>\n  <p>Is aliasing of mutable references correct</p>\n</blockquote>\n\n<p>No, it is <strong>never correct</strong> to alias mutable references (mutable <em>pointers</em> are a more nuanced concept). That's breaking one of the principal <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">rules of references</a>.</p>\n\n<p>None of the qualifications you've provided matter \u2014 you cannot have mutable aliasing of references. The code being inside of an <code>unsafe</code> block makes no difference. Doing so is <em>automatic and instant undefined behavior</em>.</p>\n\n<hr>\n\n<pre><code>fn main() {\n    let mut x = [42, 84];\n    let x_raw = &amp;mut x as *mut _;\n\n    let x_even: &amp;mut [i32; 2] = unsafe { &amp;mut *x_raw };\n    let x_odd: &amp;mut [i32; 2] = unsafe { &amp;mut *x_raw };\n\n    println!(\"{}, {}\", x_even[0], x_odd[1]);\n}\n</code></pre>\n\n<p>Miri states:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0080]: constant evaluation error: Borrow being dereferenced (Uniq(1772)) does not exist on the stack\n --&gt; src/main.rs:8:24\n  |\n8 |     println!(\"{}, {}\", x_even[0], x_odd[1]);\n  |                        ^^^^^^^^^ Borrow being dereferenced (Uniq(1772)) does not exist on the stack\n  |\n  = note: inside call to `main` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:64:34\n  = note: inside call to closure at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:52:53\n  = note: inside call to closure at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297:40\n  = note: inside call to `std::panicking::try::do_call::&lt;[closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:293:5\n  = note: inside call to `std::panicking::try::&lt;i32, [closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe]&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:388:9\n  = note: inside call to `std::panic::catch_unwind::&lt;[closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:52:25\n  = note: inside call to `std::rt::lang_start_internal` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:64:5\n  = note: inside call to `std::rt::lang_start::&lt;()&gt;`\n</code></pre>\n\n<p>While an <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\"><code>UnsafeCell</code></a> can help you build safe abstractions, you still have to adhere to the rules of references. Replacing a type with <code>UnsafeCell</code> will <em>not</em> make things magically work:</p>\n\n<pre><code>use std::cell::UnsafeCell;\n\nfn main() {\n    let x = UnsafeCell::new([42, 84]);\n\n    let x_even: &amp;mut [i32; 2] = unsafe { &amp;mut *x.get() };\n    let x_odd: &amp;mut [i32; 2] = unsafe { &amp;mut *x.get() };\n\n    println!(\"{}, {}\", x_even[0], x_odd[1]);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0080]: constant evaluation error: Borrow being dereferenced (Uniq(1776)) does not exist on the stack\n --&gt; src/main.rs:9:24\n  |\n9 |     println!(\"{}, {}\", x_even[0], x_odd[1]);\n  |                        ^^^^^^^^^ Borrow being dereferenced (Uniq(1776)) does not exist on the stack\n  |\n  = note: inside call to `main` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:64:34\n  = note: inside call to closure at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:52:53\n  = note: inside call to closure at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297:40\n  = note: inside call to `std::panicking::try::do_call::&lt;[closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:293:5\n  = note: inside call to `std::panicking::try::&lt;i32, [closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe]&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:388:9\n  = note: inside call to `std::panic::catch_unwind::&lt;[closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:52:25\n  = note: inside call to `std::rt::lang_start_internal` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:64:5\n  = note: inside call to `std::rt::lang_start::&lt;()&gt;`\n</code></pre>\n\n<p><code>UnsafeCell</code>'s docs explicitly call this out:</p>\n\n<blockquote>\n  <p>A <code>&amp;mut T</code> reference may be released to safe code provided neither other <code>&amp;mut T</code> nor <code>&amp;T</code> co-exist with it. A <code>&amp;mut T</code> must always be unique.</p>\n</blockquote>\n\n<p>In fact, even if your slices don't start at the same point but they overlap somehow, that's also aliasing and undefined behavior:</p>\n\n<pre><code>fn main() {\n    let mut x = [0, 1, 2];\n    let x_raw = &amp;mut x as *mut [i32];\n\n    let x_0: &amp;mut [i32] = unsafe { &amp;mut (*x_raw)[0..2] };\n    let x_1: &amp;mut [i32] = unsafe { &amp;mut (*x_raw)[1..3] };\n\n    if x_0 == x_1 {\n        println!(\"They are equal\");\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0080]: constant evaluation error: Borrow being dereferenced (Uniq(1807)) does not exist on the stack\n    --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/cmp.rs:1041:65\n     |\n1041 |         fn eq(&amp;self, other: &amp;&amp;'b mut B) -&gt; bool { PartialEq::eq(*self, *other) }\n     |                                                                 ^^^^^ Borrow being dereferenced (Uniq(1807)) does not exist on the stack\n     |\nnote: inside call to `std::cmp::impls::&lt;impl std::cmp::PartialEq&lt;&amp;'b mut B&gt; for &amp;'a mut A&gt;&lt;[i32], [i32]&gt;::eq` at src/main.rs:8:8\n    --&gt; src/main.rs:8:8\n     |\n8    |     if x_0 == x_1 {\n     |        ^^^^^^^^^^\n     = note: inside call to `main` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:64:34\n     = note: inside call to closure at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:52:53\n     = note: inside call to closure at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297:40\n     = note: inside call to `std::panicking::try::do_call::&lt;[closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:293:5\n     = note: inside call to `std::panicking::try::&lt;i32, [closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe]&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:388:9\n     = note: inside call to `std::panic::catch_unwind::&lt;[closure@DefId(1/1:1900 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:52:25\n     = note: inside call to `std::rt::lang_start_internal` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:64:5\n     = note: inside call to `std::rt::lang_start::&lt;()&gt;`\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 2, "last_activity_date": 1549897996, "creation_date": 1549897996, "answer_id": 54633589, "question_id": 54633474, "link": "https://stackoverflow.com/questions/54633474/is-aliasing-of-mutable-references-correct-in-unsafe-code/54633589#54633589", "title": "Is aliasing of mutable references correct in unsafe code?", "body": "<p>The documentation for <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\"><code>UnsafeCell</code></a> states:</p>\n\n<blockquote>\n  <p>The <code>UnsafeCell&lt;T&gt;</code> type is the only legal way to obtain aliasable data that is considered mutable.<br>\n  [...]<br>\n  The compiler makes optimizations based on the knowledge that <code>&amp;T</code> is not mutably aliased or mutated, and that <code>&amp;mut T</code> is unique.  </p>\n</blockquote>\n\n<p>So no, what you are trying to is not valid, unless you use an <code>UnsafeCell</code>. </p>\n"}], "owner": {"reputation": 2322, "user_id": 1987178, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YS4r1.png?s=128&g=1", "display_name": "rom1v", "link": "https://stackoverflow.com/users/1987178/rom1v"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 1, "accepted_answer_id": 54633535, "answer_count": 2, "score": 5, "last_activity_date": 1549914544, "creation_date": 1549897648, "last_edit_date": 1549900237, "question_id": 54633474, "link": "https://stackoverflow.com/questions/54633474/is-aliasing-of-mutable-references-correct-in-unsafe-code", "title": "Is aliasing of mutable references correct in unsafe code?", "body": "<p>In <em>unsafe</em> code, is it correct to have several mutable references (not pointers) to the same array, as long as they are not used to write to the same indices?</p>\n\n<h2>Context</h2>\n\n<p>I would like to yield several (distinct) mutable views of an underlying array, that I can modify from different threads.</p>\n\n<p>If the disjoint parts are contiguous, this is trivial, by just calling <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\"><code>split_at_mut</code></a> on the slice:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut v = [1, 2, 3, 4];\n{\n    let (left, right) = v.split_at_mut(2);\n    left[0] = 5;\n    right[0] = 6;\n}\nassert!(v == [5, 2, 6, 4]);\n</code></pre>\n\n<p>But I also want to expose non-contiguous disjoint parts. For simplicity, let's say we want to retrieve a mutable \"view\" for even indices, and another mutable \"view\" for odd indices.</p>\n\n<p>Contrary to <code>split_at_mut()</code>, we could not retrieve two mutable references (we want a safe abstraction!), so we use two structure instances instead, exposing only mutable access to even (resp. odd) indices:</p>\n\n<pre><code>let data = &amp;mut [0i32; 11];\nlet (mut even, mut odd) = split_fields(data);\n// \u2026\n</code></pre>\n\n<p>With some <em>unsafe</em> code, it is easy to get such a safe abstraction. Here is <a href=\"https://github.com/rom1v/rust-split/\" rel=\"nofollow noreferrer\">a possible implementation</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::marker::PhantomData;\n\nstruct SliceField&lt;'a&gt; {\n    ptr: *mut i32,\n    len: usize,\n    field: usize,\n    marker: PhantomData&lt;&amp;'a mut i32&gt;,\n}\n\nimpl SliceField&lt;'_&gt; {\n    fn inc(&amp;mut self) {\n        unsafe {\n            for i in (self.field..self.len).step_by(2) {\n                *self.ptr.add(i) += 1;\n            }\n        }\n    }\n\n    fn dec(&amp;mut self) {\n        unsafe {\n            for i in (self.field..self.len).step_by(2) {\n                *self.ptr.add(i) -= 1;\n            }\n        }\n    }\n}\n\nunsafe impl Send for SliceField&lt;'_&gt; {}\n\nfn split_fields(array: &amp;mut [i32]) -&gt; (SliceField&lt;'_&gt;, SliceField&lt;'_&gt;) {\n    (\n        SliceField {\n            ptr: array.as_mut_ptr(),\n            len: array.len(),\n            field: 0,\n            marker: PhantomData,\n        },\n        SliceField {\n            ptr: array.as_mut_ptr(),\n            len: array.len(),\n            field: 1,\n            marker: PhantomData,\n        },\n    )\n}\n\nfn main() {\n    let data = &amp;mut [0i32; 11];\n    {\n        let (mut even, mut odd) = split_fields(data);\n        rayon::join(|| even.inc(), || odd.dec());\n    }\n    // this prints [1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1]\n    println!(\"{:?}\", data);\n}\n</code></pre>\n\n<p>So far, so good.</p>\n\n<h2>Problem</h2>\n\n<p>However, accessing a raw pointer is far for convenient: contrary to slices, we cannot use operator <code>[]</code> or iterators.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>unsafe {\n    for i in (self.field..self.len).step_by(2) {\n        *self.ptr.add(i) += 1;\n    }\n}\n</code></pre>\n\n<p>The obvious idea is to convert locally the raw pointer to a slice in the unsafe implementation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let slice = unsafe { slice::from_raw_parts_mut(self.ptr, self.len) };\n</code></pre>\n\n<p>Then we could, for example, rewrite our implementation in functional style:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>slice.iter_mut().skip(self.field).step_by(2).for_each(|x| *x += 1);\n</code></pre>\n\n<p>For this sample, it may not worth it, but for more complex code, it could be far more convenient to use slices instead of raw pointers.</p>\n\n<h2>Question</h2>\n\n<p>Is this correct?</p>\n\n<p>This obviously violates the <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">borrowing rules</a>: two threads may simultaneously hold a mutable reference to the very same memory location. However, they may never write to the same indices.</p>\n\n<p>Mutable reference aliasing is not listed as an <a href=\"https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html\" rel=\"nofollow noreferrer\">unsafe superpower</a>, but the list is not presented as exhaustive.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1549897429, "post_id": 54632524, "comment_id": 96058925, "body": "It works when you introduce types: <code>box [foo, bar] as Box&lt;[fn() -&gt; u32]&gt;;</code>"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1549897670, "post_id": 54633326, "comment_id": 96059069, "body": "Why would <code>let tmp = [foo, bar]</code> cause a coercion to <code>[_]</code>? In fact, <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ade10d51f16fa1781c64724fb9580619\" rel=\"nofollow noreferrer\"><code>tmp</code> has the type <code>[fn() -&gt; u32; 2]</code></a>. And I&#39;m also not quite sure that <code>Box::new([foo, bar])</code> coerces its argument to <code>[_]</code> just because of the cast. I would assume that <code>Box::new([foo, bar])</code> has the type <code>Box&lt;[fn() -&gt; u32; 2]&gt;</code> until it is explicitly casted. (But you are probably right about <code>box</code> just being kinda buggy)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1549897688, "post_id": 54633326, "comment_id": 96059081, "body": "I believe a <code>let</code> binding is only a coercion site if it is explicitly typed."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1549897173, "creation_date": 1549897173, "answer_id": 54633326, "question_id": 54632524, "link": "https://stackoverflow.com/questions/54632524/why-does-boxing-an-array-of-function-pointers-with-box-syntax-only-work-with-a/54633326#54633326", "title": "Why does boxing an array of function pointers with `box` syntax only work with a temporary `let` binding?", "body": "<p><code>[T; N]</code> to <code>[T]</code> is an <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">unsizing coercion</a>.</p>\n\n<blockquote>\n  <p><code>CoerceUnsized&lt;Pointer&lt;U&gt;&gt; for Pointer&lt;T&gt; where T: Unsize&lt;U&gt;</code> is\n  implemented for all pointer types (including smart pointers like <code>Box</code>\n  and <code>Rc</code>). Unsize is only implemented automatically, and enables the\n  following transformations:</p>\n  \n  <ul>\n  <li><code>[T; n]</code> => <code>[T]</code></li>\n  </ul>\n</blockquote>\n\n<p>These coercions only happen at certain <em>coercion sites</em>:</p>\n\n<blockquote>\n  <p>Coercions occur at a coercion site. Any location that is explicitly\n  typed will cause a coercion to its type. If inference is necessary,\n  the coercion will not be performed. Exhaustively, the coercion sites\n  for an expression <code>e</code> to type <code>U</code> are:</p>\n  \n  <ul>\n  <li>let statements, statics, and consts: <code>let x: U = e</code></li>\n  <li>Arguments to functions: <code>takes_a_U(e)</code></li>\n  <li>Any expression that will be returned: <code>fn foo() -&gt; U { e }</code></li>\n  <li>Struct literals: <code>Foo { some_u: e }</code></li>\n  <li>Array literals: <code>let x: [U; 10] = [e, ..]</code></li>\n  <li>Tuple literals: <code>let x: (U, ..) = (e, ..)</code></li>\n  <li>The last expression in a block: <code>let x: U = { ..; e }</code></li>\n  </ul>\n</blockquote>\n\n<p>Your case B is a <code>let</code> statement, your case C is a function argument. Your case A is not covered.</p>\n\n<hr>\n\n<p>Going on pure instinct, I'd point out that <code>box</code> is an unstable magic keyword, so it's possible that it's just half-implemented. Maybe it <em>should</em> have coercions applied to the argument but no one has needed it and thus it was never supported.</p>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1549913540, "creation_date": 1549913540, "answer_id": 54637784, "question_id": 54632524, "link": "https://stackoverflow.com/questions/54632524/why-does-boxing-an-array-of-function-pointers-with-box-syntax-only-work-with-a/54637784#54637784", "title": "Why does boxing an array of function pointers with `box` syntax only work with a temporary `let` binding?", "body": "<p>This looks like an idiosyncracy of the type inference algorithm to me, and there probably is no deeper reason for this except that the current inference algorithm happens to behave like it does. There is no formal specification of when type inference works and when it doesn't. If you encounter a situation that the type inference engine cannot handle, you need to add type annotations, or rewrite the code in a way that the compiler can infer the types correctly, and that is exactly what you need to do here.</p>\n\n<p>Each function in Rust has its own individual <a href=\"https://doc.rust-lang.org/reference/types/function-item.html\" rel=\"nofollow noreferrer\">function item type</a>, which cannot be directly named by syntax, but is diplayed as e.g. <code>fn() -&gt; u32 {foo}</code> in error messages. There is a special coercion that converts function item types with identical signatures to the corresponding function pointer type if they occur in different arms of a <code>match</code>, in different branches of an <code>if</code> or in different elements of an array. This coercion is different than other coercions, since it does not only occur in explicitly typed context (\"coercion sites\"), and this special treatment is the likely cause for this idiosyncracy.</p>\n\n<p>The special coercion is triggered by the binding</p>\n\n<pre><code>let tmp = [foo, bar];\n</code></pre>\n\n<p>so the type of <code>tmp</code> is completely determined as <code>[fn() -&gt; u32; 2]</code>. However, it appears the special coercion is not triggered early enough in the type inference algorithm when writing</p>\n\n<pre><code>let b = box [foo, bar] as Box&lt;[_]&gt;;\n</code></pre>\n\n<p>The compiler first assumes the item type of an array is the type of its first element, and apparently when trying to determine what <code>_</code> denotes here, the compiler still hasn't updated this notion \u2013 according to the error message, <code>_</code> is inferred to mean <code>fn() -&gt; u32 {foo}</code> here. Interestingly, the compiler has already correctly inferred the full type of <code>box [foo, bar]</code> when printing the error message, so the behaviour is indeed rather weird. A full explanation can only be given when looking at the compiler sources in detail.</p>\n\n<p>Rust's type solver engine often can't handle situations it should theoretically be able to solve. Niko Matsakis' <a href=\"https://github.com/nikomatsakis/chalk-ndm\" rel=\"nofollow noreferrer\">chalk engine</a> is meant to provide a general solution for all these cases at some point in the future, but I don't know what the status and the timeline of that project is.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 147, "favorite_count": 0, "accepted_answer_id": 54637784, "answer_count": 2, "score": 6, "last_activity_date": 1549913540, "creation_date": 1549894641, "question_id": 54632524, "link": "https://stackoverflow.com/questions/54632524/why-does-boxing-an-array-of-function-pointers-with-box-syntax-only-work-with-a", "title": "Why does boxing an array of function pointers with `box` syntax only work with a temporary `let` binding?", "body": "<p>I have two dummy functions:</p>\n\n<pre><code>fn foo() -&gt; u32 { 3 }\nfn bar() -&gt; u32 { 7 }\n</code></pre>\n\n<p>And I want to create a boxed slice of function pointer: <code>Box&lt;[fn() -&gt; u32]&gt;</code>. I want to do it with the <code>box</code> syntax (I know that it's not necessary for two elements, but my real use case is different).</p>\n\n<p>I tried several things (<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=6118ed2f7399c59604e7e3b8300d562e\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>// Version A\nlet b = box [foo, bar] as Box&lt;[_]&gt;;\n\n// Version B\nlet tmp = [foo, bar];\nlet b = box tmp as Box&lt;[_]&gt;;\n\n// Version C\nlet b = Box::new([foo, bar]) as Box&lt;[_]&gt;;\n</code></pre>\n\n<p>Version B and C work fine (C won't work for me though, as it uses <code>Box::new</code>), but Version A errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0605]: non-primitive cast: `std::boxed::Box&lt;[fn() -&gt; u32; 2]&gt;` as `std::boxed::Box&lt;[fn() -&gt; u32 {foo}]&gt;`\n --&gt; src/main.rs:8:13\n  |\n8 |     let b = box [foo, bar] as Box&lt;[_]&gt;;\n  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n</code></pre>\n\n<p>Apparently, for some reason, in the version A, the compiler isn't able to coerce the function items to function pointers. <strong>Why is that? And why does it work with the additional temporary <code>let</code> binding?</strong></p>\n\n<hr>\n\n<p><em>This question was inspired by <a href=\"https://stackoverflow.com/questions/28151073/how-can-i-store-function-pointers-in-an-array\">this other question</a>. I wondered why <code>vec![foo, bar]</code> errors, but <code>[foo, bar]</code> works fine. I looked at <a href=\"https://github.com/rust-lang/rust/blob/57d7cfc3cf50f0c427ad3043ff09eaef20671320/src/liballoc/macros.rs#L38-L46\" rel=\"noreferrer\">the definition of <code>vec![]</code></a> and found this part which confused me.</em></p>\n"}, {"tags": ["macos", "rust", "mips", "cross-compiling", "openwrt"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549878506, "post_id": 54627521, "comment_id": 96047710, "body": "Which rust version do you use? Afaik <code>lld</code> is the default linker for rust, but your error message states that it uses <code>ld</code>. Can you try to change that by creating a <code>.cargo&#47;config</code> with <code>rustflags = [ &quot;-C&quot;, &quot;linker=lld&quot; ]</code>"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549879958, "post_id": 54627521, "comment_id": 96048550, "body": "@hellow updated question with version (1.32.0 nightly) and linker attempts. I found a pre-compiled macOS GCC for MIPS - not sure how to specify it though: <a href=\"https://github.com/a3f/cross-gcc-hosted-on-macOS/releases\" rel=\"nofollow noreferrer\">github.com/a3f/cross-gcc-hosted-on-macOS/releases</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549880089, "post_id": 54627521, "comment_id": 96048620, "body": "Same as with lld, just with the correct name (and an absolute path propably). You could install lld though or use the precompiled binaries via <code>rustup component add llvm-tools-preview</code>)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549880288, "post_id": 54627521, "comment_id": 96048732, "body": "It sounds like <a href=\"https://stackoverflow.com/q/34403155/1233251\">this question</a> will help."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549881890, "post_id": 54627521, "comment_id": 96049812, "body": "To be honest, this is not a good question for SO. Maybe you should better ask this at <a href=\"https://users.rust-lang.org\" rel=\"nofollow noreferrer\">users.rust-lang.org</a>"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1549883148, "post_id": 54627521, "comment_id": 96050563, "body": "@hellow why is this MIPS cross-compilation problem, shared by many embedded engineers, not a good question for SO?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549883332, "post_id": 54627521, "comment_id": 96050664, "body": "Because it&#39;s your setup that doesn&#39;t work. It isn&#39;t a specific problem with rust or the code you are using (which you didn&#39;t show, but it doesn&#39;t matter this time). You are lacking the correct binaries. SuperUser would be also a good platform to ask. Why I choose the forum is, because one have to ask for certain tools and your environment you are developing on."}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1207, "favorite_count": 1, "answer_count": 0, "score": 4, "last_activity_date": 1549893689, "creation_date": 1549877715, "last_edit_date": 1549893689, "question_id": 54627521, "link": "https://stackoverflow.com/questions/54627521/cross-compile-for-mips-mt7688-openwrt-on-osx-mipsel-unknown-linux-musl", "title": "Cross-compile for MIPS MT7688 OpenWRT on OSX (mipsel-unknown-linux-musl)", "body": "<p>When I try to cross-compile a Cargo starter main.rs file for little-endian MIPS (MT7688 processor running OpenWRT) on OSX using rustc 1.32.0-nightly, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo build --target=mipsel-unknown-linux-musl\n   Compiling led v0.1.0 (/Users/petrus/Projects/led)\nerror: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-Wl,--eh-frame-hdr\" \"-L\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps/led-fb2a88ec64854daf.2kthj4han7xcr84g.rcgu.o\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps/led-fb2a88ec64854daf.440j3fk0cam0b0pu.rcgu.o\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps/led-fb2a88ec64854daf.482rers61msj2848.rcgu.o\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps/led-fb2a88ec64854daf.498udk2wtgjsw4ib.rcgu.o\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps/led-fb2a88ec64854daf.4uh6jdaux45o6bh1.rcgu.o\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps/led-fb2a88ec64854daf.5fq5qqfqkwjepod2.rcgu.o\" \"-o\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps/led-fb2a88ec64854daf\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps/led-fb2a88ec64854daf.49n6u1xnbbs66t12.rcgu.o\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-nodefaultlibs\" \"-L\" \"/Users/petrus/Projects/led/target/mipsel-unknown-linux-musl/debug/deps\" \"-L\" \"/Users/petrus/Projects/led/target/debug/deps\" \"-L\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib\" \"-Wl,--start-group\" \"-Wl,-Bstatic\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/libstd-27a0dffe96f2ad3e.rlib\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/libpanic_unwind-fe8b80af161a561e.rlib\" \"/var/folders/rl/b7dvjss14wj6415t0v4f7z3m0000gn/T/rustcFd840X/libunwind-ecc019d8c6cb3f8a.rlib\" \"/var/folders/rl/b7dvjss14wj6415t0v4f7z3m0000gn/T/rustcFd840X/liblibc-5d68beb2e4661bda.rlib\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/liballoc-de565f8c0b8e0971.rlib\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/librustc_std_workspace_core-0a55bee6cc97e346.rlib\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/libcore-4075eb2b0854a330.rlib\" \"-Wl,--end-group\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/libcompiler_builtins-ecf284221505c8a3.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lc\"\n  = note: clang: warning: argument unused during compilation: '-pie' [-Wunused-command-line-argument]\n          ld: unknown option: --as-needed\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<p>Running with <code>RUSTFLAGS=\"-C linker=lld\"</code> throws:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>RUSTFLAGS=\"-C linker=lld\" cargo build --target=mipsel-unknown-linux-musl\n   Compiling led v0.1.0 (/Users/petrus/Projects/led)\nerror: linker `lld` not found\n  |\n  = note: No such file or directory (os error 2)\n\nerror: aborting due to previous error\n\nerror: Could not compile `led`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>Also tried with <code>RUSTFLAGS=\"-C linker=rust-lld\"</code>, which throws:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rust-lld: error: unable to find library -lgcc_s\nrust-lld: error: unable to find library -lc\n</code></pre>\n\n<p>As I understand, I need to specify a linker toolchain, which I don't know how to procure. I also tried compiling with xargo and cross and dockcross/linux-mipsel, with no luck.</p>\n\n<p>I would build it on the device itself, but rustup won't install Rust on the MT7688. How do I get and specify the correct MIPS (little-endian) linker toolchain?</p>\n\n<p><strong>Update:</strong> I found a <a href=\"https://github.com/a3f/cross-gcc-hosted-on-macOS/releases\" rel=\"nofollow noreferrer\">pre-compiled MIPS GCC for macOS</a>, which throws `mipsel-elf/bin/ld: unrecognized option '-Wl,--as-needed' or  \"error adding symbols: Bad value\" when I try to specify mipsel-elf-gcc it as the linker:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc --target=mipsel-unknown-linux-musl -C linker=/Users/petrus/Projects/wallfly/respeaker/bin/gcc-mips/bin/mipsel-elf-gcc ./src/main.rs\nerror: linking with `/Users/petrus/Projects/bin/gcc-mips/bin/mipsel-elf-gcc` failed: exit code: 1\n  |\n  = note: \"/Users/petrus/Projects/bin/gcc-mips/bin/mipsel-elf-gcc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-Wl,--eh-frame-hdr\" \"-L\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib\" \"main.main.7rcbfp3g-cgu.0.rcgu.o\" \"main.main.7rcbfp3g-cgu.1.rcgu.o\" \"main.main.7rcbfp3g-cgu.2.rcgu.o\" \"main.main.7rcbfp3g-cgu.3.rcgu.o\" \"main.main.7rcbfp3g-cgu.4.rcgu.o\" \"main.main.7rcbfp3g-cgu.5.rcgu.o\" \"-o\" \"main\" \"main.4s37gsrti678ik8u.rcgu.o\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-nodefaultlibs\" \"-L\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib\" \"-Wl,--start-group\" \"-Wl,-Bstatic\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/libstd-27a0dffe96f2ad3e.rlib\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/libpanic_unwind-fe8b80af161a561e.rlib\" \"/var/folders/rl/b7dvjss14wj6415t0v4f7z3m0000gn/T/rustcLDTUyV/libunwind-ecc019d8c6cb3f8a.rlib\" \"/var/folders/rl/b7dvjss14wj6415t0v4f7z3m0000gn/T/rustcLDTUyV/liblibc-5d68beb2e4661bda.rlib\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/liballoc-de565f8c0b8e0971.rlib\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/librustc_std_workspace_core-0a55bee6cc97e346.rlib\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/libcore-4075eb2b0854a330.rlib\" \"-Wl,--end-group\" \"/Users/petrus/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/mipsel-unknown-linux-musl/lib/libcompiler_builtins-ecf284221505c8a3.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lc\"\n  = note: /Users/petrus/Projects/bin/gcc-mips/bin/../lib/gcc/mipsel-elf/7.1.0/../../../../mipsel-elf/bin/ld: /Users/petrus/Projects/bin/gcc-mips/bin/../lib/gcc/mipsel-elf/7.1.0/crtbegin.o: relocation R_MIPS_HI16 against `a local symbol' can not be used when making a shared object; recompile with -fPIC\n          /Users/petrus/Projects/bin/gcc-mips/bin/../lib/gcc/mipsel-elf/7.1.0/crtbegin.o: error adding symbols: Bad value\n          collect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>Maybe I'm specifying it wrong?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1549842643, "post_id": 54622317, "comment_id": 96037327, "body": "Due to the current limitations of array types, only arrays up to length 32 implement a good portion of traits in the standard library, including <code>IntoIterator</code>. You can  turn that array into a slice (<code>[...].as_ref()</code>), which does implement <code>IntoIterator</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1549843567, "post_id": 54622317, "comment_id": 96037477, "body": "Or via <code>&amp;[&#47;* elements *&#47;][..]</code>."}], "owner": {"reputation": 2308, "user_id": 1120799, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/IRCQ4.jpg?s=128&g=1", "display_name": "Abhishek Chanda", "link": "https://stackoverflow.com/users/1120799/abhishek-chanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 147, "favorite_count": 0, "closed_date": 1549843458, "answer_count": 0, "score": 0, "last_activity_date": 1549843621, "creation_date": 1549842460, "last_edit_date": 1549843507, "question_id": 54622317, "link": "https://stackoverflow.com/questions/54622317/intoiterator-for-larger-slices", "closed_reason": "Duplicate", "title": "IntoIterator for larger slices", "body": "<p>I am trying to write an API server that uses <code>RegexSet</code>. Here is the code that uses it.</p>\n\n<pre><code>fn main() {\n    let path_regex = regex::RegexSet = regex::RegexSet::new(&amp;[\n        r\"^/api/$\",\n        ...\n        r\"^/logs/$\",\n        r\"^/logs/(?P&lt;logpath&gt;[^/?#]*)$\",\n        r\"^/version/$\"\n    ]).unwrap();\n}\n</code></pre>\n\n<p>The slice passed to <code>RegexSet</code> has 346 elements. When I run this, I get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `&amp;[&amp;str; 346]` is not an iterator\n   --&gt; src/server/mod.rs:650:60\n    |\n650 |         pub static ref GLOBAL_REGEX_SET: regex::RegexSet = regex::RegexSet::new(&amp;[\n    |                                                            ^^^^^^^^^^^^^^^^^^^^ `&amp;[&amp;str; 346]` is not an iterator\n    |\n    = help: the trait `std::iter::Iterator` is not implemented for `&amp;[&amp;str; 346]`\n    = note: required because of the requirements on the impl of `std::iter::IntoIterator` for `&amp;[&amp;str; 346]`\n    = note: required by `server::paths::regex::RegexSet::new`\n</code></pre>\n\n<p>Looking at the documentation, <code>IntoIterator</code> has only been <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html#impl-IntoIterator-40\" rel=\"nofollow noreferrer\">implemented for arrays of size up to 32</a></p>\n\n<p>I tried to implement that trait, resulting in the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `std::iter::IntoIterator` for type `&amp;[_; 346]`:\n   --&gt; src/server/mod.rs:651:5\n    |\n651 |     impl&lt;'a, T&gt; IntoIterator for &amp;'a [T; 346] {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: conflicting implementation in crate `core`:\n            - impl&lt;I&gt; std::iter::IntoIterator for I\n              where I: std::iter::Iterator;\n    = note: upstream crates may add new impl of trait `std::iter::Iterator` for type `&amp;[_; 346]` in future versions\n</code></pre>\n\n<p>How do I work around this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1549841822, "post_id": 54622029, "comment_id": 96037167, "body": "Is there a reason you need a reference instead of a slice? You can create slices from arrays and vectors"}, {"owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1549843190, "post_id": 54622029, "comment_id": 96037423, "body": "I&#39;m implementing a library, so this is for user convenience."}], "answers": [{"comments": [{"owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "edited": false, "score": 0, "creation_date": 1549842913, "post_id": 54622266, "comment_id": 96037373, "body": "Wow, this is very close to what I was trying to achieve, and thank you for the clear explanation, but unfortunately the following does not work yet: let x = vec![1, 2, 3]; let xvar = DataVar::new(&quot;x&quot;, &amp;x);"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "edited": false, "score": 0, "creation_date": 1549843508, "post_id": 54622266, "comment_id": 96037466, "body": "Ugh, that&#39;s what I had feared from the beginning. Inference works for the array reference because <code>AsRef&lt;T&gt;</code> is only implemented on <code>[T; n]</code> for <i>one</i> particular <code>T</code>, which is <code>[T]</code>. However, <code>Vec&lt;T&gt;</code> implements <code>AsRef&lt;[T]&gt;</code> <i>and</i> <code>AsRef&lt;Vec&lt;T&gt;&gt;</code>; that causes the compiler to give up and you thus need to specify <code>U</code> by writing <code>let xvar = DataVar::new::&lt;_, [i32]&gt;(&quot;x&quot;, &amp;x);</code>. I guess that misses the point of providing a convenient API. :("}, {"owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "edited": false, "score": 0, "creation_date": 1549872768, "post_id": 54622266, "comment_id": 96044774, "body": "So if I understand correctly there&#39;s no solution to this, neither writing other <code>from</code> methods, or using macros or unsafe code. I guess I would hit the same issue if I used trait objects instead of enum variants, could you please confirm?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "edited": false, "score": 0, "creation_date": 1549940438, "post_id": 54622266, "comment_id": 96075958, "body": "That wouldn&#39;t change anything. When you take a generic parameter on a function, that completely disables implicit coercions (such as the coercion of an array to a slice, as seen here), unfortunately."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1549841985, "creation_date": 1549841985, "answer_id": 54622266, "question_id": 54622029, "link": "https://stackoverflow.com/questions/54622029/how-to-modify-my-constructor-in-order-to-accept-either-a-slice-or-a-reference-to/54622266#54622266", "title": "How to modify my constructor in order to accept either a slice or a reference to array or vector", "body": "<p>We can use the <a href=\"https://doc.rust-lang.org/stable/std/convert/trait.AsRef.html\" rel=\"nofollow noreferrer\"><code>AsRef</code></a> trait to convert references to arrays or vectors to slices. <code>AsRef</code> is a generic trait, so we need to introduce a second type parameter to represent the \"intermediate type\" (the slice type). After calling <code>as_ref</code>, we've got a slice that can be converted to a <code>Data</code> using <code>into</code>.</p>\n\n<pre><code>impl&lt;'a&gt; DataVar&lt;'a&gt; {\n    fn new&lt;T, U&gt;(name: &amp;'a str, data: &amp;'a T) -&gt; Self\n    where\n        T: AsRef&lt;U&gt; + ?Sized,\n        U: ?Sized + 'a,\n        &amp;'a U: Into&lt;Data&lt;'a&gt;&gt;,\n    {\n        Self {\n            name,\n            data: data.as_ref().into(),\n        }\n    }\n}\n</code></pre>\n\n<p>Note however that the <code>data</code> parameter is now a reference: this is necessary because the lifetime of the reference returned by <code>as_ref</code> is bound by the lifetime of the <code>self</code> parameter passed to <code>as_ref</code>. If we changed the parameter back to <code>data: T</code>, then <code>data.as_ref()</code> now implicitly references <code>data</code> in order to call <code>as_ref</code>, which expects a shared reference to <code>self</code> (<code>&amp;self</code>). But <code>data</code> here is a local parameter, which means that the lifetime of the reference created by this implicit referencing operation is limited to the local function, and so is the reference returned by <code>data.as_ref()</code>. This lifetime is shorter than <code>'a</code>, so we can't store it in the <code>DataVar</code> and return it.</p>\n\n<p>If you need to handle <code>data</code> values that are not references in addition to values that are references, this solution cannot support that, unfortunately.</p>\n"}, {"tags": [], "owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "is_accepted": false, "score": 2, "last_activity_date": 1550006941, "creation_date": 1550006941, "answer_id": 54658923, "question_id": 54622029, "link": "https://stackoverflow.com/questions/54622029/how-to-modify-my-constructor-in-order-to-accept-either-a-slice-or-a-reference-to/54658923#54658923", "title": "How to modify my constructor in order to accept either a slice or a reference to array or vector", "body": "<p>This is actually the best solution for my case:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; DataVar&lt;'a&gt; {\n    fn new&lt;T, U&gt;(name: &amp;'a str, data: &amp;'a T) -&gt; Self\n    where\n        T: AsRef&lt;[U]&gt; + ?Sized,\n        U: 'a,\n        &amp;'a [U]: Into&lt;Data&lt;'a&gt;&gt;,\n    {\n        Self {\n            name,\n            data: data.as_ref().into(),\n        }\n    }\n}\n</code></pre>\n\n<p>It works with slices, references to vectors, and references to arrays up to length 32 which implement <code>AsRef&lt;[T]&gt;</code> <a href=\"https://doc.rust-lang.org/beta/std/convert/trait.AsRef.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/beta/std/convert/trait.AsRef.html</a></p>\n\n<p>Thanks @Francis for your hints!</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1550151750, "creation_date": 1550151750, "answer_id": 54691834, "question_id": 54622029, "link": "https://stackoverflow.com/questions/54622029/how-to-modify-my-constructor-in-order-to-accept-either-a-slice-or-a-reference-to/54691834#54691834", "title": "How to modify my constructor in order to accept either a slice or a reference to array or vector", "body": "<p>To me, <code>AsRef</code> doesn't seem to be the right abstraction for two reasons: first, because it's possible (if unlikely) for a type to implement both <code>AsRef&lt;[i32]&gt;</code> and <code>AsRef&lt;[f64]&gt;</code>, and it's not clear what should happen in that case; and second, because there's already a built-in language feature (<a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">coercion</a>) that can turn <code>Vec&lt;T&gt;</code> or <code>&amp;[T; n]</code> into <code>&amp;[T]</code>, and you're not taking advantage of it.</p>\n\n<p>What I'd like is to write a <code>new</code> function that looks basically like this:</p>\n\n<pre><code>    fn new&lt;T&gt;(name: &amp;'a str, data: &amp;'a [T]) -&gt; Self\n    where\n        // what goes here?\n</code></pre>\n\n<p>This will automatically work with <code>&amp;[T; n]</code>, <code>&amp;Vec&lt;T&gt;</code>, <code>&amp;Cow&lt;T&gt;</code>, etc. if we can tell the compiler what to do with <code>T</code>. It makes sense that you could make a trait that knows how to convert <code>&amp;'a [Self]</code> to <code>Data</code> and is implemented for <code>i32</code> and <code>f64</code>, so let's do that:</p>\n\n<pre><code>trait Item: Sized {\n    fn into_data&lt;'a&gt;(v: &amp;'a [Self]) -&gt; Data&lt;'a&gt;;\n}\n\nimpl Item for i32 {\n    fn into_data&lt;'a&gt;(v: &amp;'a [i32]) -&gt; Data&lt;'a&gt; {\n        Data::I32(v)\n    }\n}\n\nimpl Item for f64 {\n    fn into_data&lt;'a&gt;(v: &amp;'a [f64]) -&gt; Data&lt;'a&gt; {\n        Data::F64(v)\n    }\n}\n</code></pre>\n\n<p>The trait bound on <code>new</code> becomes trivial:</p>\n\n<pre><code>impl&lt;'a&gt; DataVar&lt;'a&gt; {\n    fn new&lt;T&gt;(name: &amp;'a str, data: &amp;'a [T]) -&gt; Self\n    where\n        T: Item,\n    {\n        Self {\n            name,\n            data: T::into_data(data),\n        }\n    }\n}\n</code></pre>\n\n<p>I find this more readable than the version with <code>From</code> and <code>AsRef</code>, but if you still want <code>From</code>, you can easily add it with a generic <code>impl</code>:</p>\n\n<pre><code>impl&lt;'a, T&gt; From&lt;&amp;'a [T]&gt; for Data&lt;'a&gt;\nwhere\n    T: Item,\n{\n    fn from(v: &amp;'a [T]) -&gt; Self {\n        T::into_data(v)\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "is_accepted": false, "score": 0, "last_activity_date": 1550252763, "creation_date": 1550252763, "answer_id": 54714552, "question_id": 54622029, "link": "https://stackoverflow.com/questions/54622029/how-to-modify-my-constructor-in-order-to-accept-either-a-slice-or-a-reference-to/54714552#54714552", "title": "How to modify my constructor in order to accept either a slice or a reference to array or vector", "body": "<p>@trentcl your solution is brilliant! Now I see how to leverage coercion.</p>\n\n<p>However I tweaked it a little bit as follows, I will finally use this code unless you see any drawbacks in it, thanks!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Clone, Copy)]\nenum Data&lt;'a&gt; {\n    I32(&amp;'a [i32]),\n    F64(&amp;'a [f64]),\n}\n\ntrait IntoData&lt;'a&gt;: Sized {\n    fn into_data(&amp;self) -&gt; Data&lt;'a&gt;;\n}\n\nimpl&lt;'a&gt; IntoData&lt;'a&gt; for &amp;'a [i32] {\n    fn into_data(&amp;self) -&gt; Data&lt;'a&gt; {\n        Data::I32(&amp;self)\n    }\n}\n\nimpl&lt;'a&gt; IntoData&lt;'a&gt; for &amp;'a [f64] {\n    fn into_data(&amp;self) -&gt; Data&lt;'a&gt; {\n        Data::F64(&amp;self)\n    }\n}\n\n#[derive(Debug, Clone, Copy)]\nstruct DataVar&lt;'a&gt; {\n    name: &amp;'a str,\n    data: Data&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; DataVar&lt;'a&gt; {\n    fn new&lt;T&gt;(name: &amp;'a str, data: &amp;'a [T]) -&gt; Self\n    where\n        &amp;'a [T]: IntoData&lt;'a&gt;,\n    {\n        Self {\n            name,\n            data: data.into_data(),\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "is_accepted": true, "score": 1, "last_activity_date": 1550253516, "creation_date": 1550253516, "answer_id": 54714731, "question_id": 54622029, "link": "https://stackoverflow.com/questions/54622029/how-to-modify-my-constructor-in-order-to-accept-either-a-slice-or-a-reference-to/54714731#54714731", "title": "How to modify my constructor in order to accept either a slice or a reference to array or vector", "body": "<p>Actually, this is IMHO the best solution... so similar to my initial code, I just needed a small fix in the <code>new</code> constructor:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Clone, Copy)]\nenum Data&lt;'a&gt; {\n    I32(&amp;'a [i32]),\n    F64(&amp;'a [f64]),\n}\n\nimpl&lt;'a&gt; From&lt;&amp;'a [i32]&gt; for Data&lt;'a&gt; {\n    fn from(data: &amp;'a [i32]) -&gt; Data&lt;'a&gt; {\n        Data::I32(data)\n    }\n}\n\nimpl&lt;'a&gt; From&lt;&amp;'a [f64]&gt; for Data&lt;'a&gt; {\n    fn from(data: &amp;'a [f64]) -&gt; Data&lt;'a&gt; {\n        Data::F64(data)\n    }\n}\n\n#[derive(Debug, Clone, Copy)]\nstruct DataVar&lt;'a&gt; {\n    name: &amp;'a str,\n    data: Data&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; DataVar&lt;'a&gt; {\n    fn new&lt;T&gt;(name: &amp;'a str, data: &amp;'a [T]) -&gt; Self\n    where\n        &amp;'a [T]: Into&lt;Data&lt;'a&gt;&gt;,\n    {\n        Self {\n            name,\n            data: data.into(),\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 505, "user_id": 4731971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e60ab9e7a02af85398cc7b7da4dafe9?s=128&d=identicon&r=PG", "display_name": "lucatrv", "link": "https://stackoverflow.com/users/4731971/lucatrv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 604, "favorite_count": 0, "accepted_answer_id": 54714731, "answer_count": 5, "score": 2, "last_activity_date": 1550253516, "creation_date": 1549839995, "last_edit_date": 1549901999, "question_id": 54622029, "link": "https://stackoverflow.com/questions/54622029/how-to-modify-my-constructor-in-order-to-accept-either-a-slice-or-a-reference-to", "title": "How to modify my constructor in order to accept either a slice or a reference to array or vector", "body": "<p>This is a simplified example of my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Clone, Copy)]\nenum Data&lt;'a&gt; {\n    I32(&amp;'a [i32]),\n    F64(&amp;'a [f64]),\n}\n\nimpl&lt;'a&gt; From&lt;&amp;'a [i32]&gt; for Data&lt;'a&gt; {\n    fn from(v: &amp;'a [i32]) -&gt; Data&lt;'a&gt; {\n        Data::I32(v)\n    }\n}\n\nimpl&lt;'a&gt; From&lt;&amp;'a [f64]&gt; for Data&lt;'a&gt; {\n    fn from(v: &amp;'a [f64]) -&gt; Data&lt;'a&gt; {\n        Data::F64(v)\n    }\n}\n\n#[derive(Debug, Clone, Copy)]\nstruct DataVar&lt;'a&gt; {\n    name: &amp;'a str,\n    data: Data&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; DataVar&lt;'a&gt; {\n    fn new&lt;T&gt;(name: &amp;'a str, data: T) -&gt; Self\n    where\n        T: Into&lt;Data&lt;'a&gt;&gt;,\n    {\n        Self {\n            name,\n            data: data.into(),\n        }\n    }\n}\n</code></pre>\n\n<p>First of all, considering that I need to cast different <code>DataVar</code>s to the same vector, and I would like to avoid using trait objects, do you think my implementation is correct or do you have suggestions for improvement?</p>\n\n<p>Now my main question. I can define new <code>DataVar</code>s passing a slice, for instance as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x = [1, 2, 3];\nlet xvar = DataVar::new(\"x\", &amp;x[..]);\n</code></pre>\n\n<p>How can I modify my constructor so that it works not only with a slice, but also with a reference to array or vector? For instance I would like the following to work as well:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x = [1, 2, 3];\nlet xvar = DataVar::new(\"x\", &amp;x);\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>Now I tried implementing the same code using a trait object instead of an enum, but the result is even worse... isn't there really any solution to this?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Data: std::fmt::Debug {}\n\nimpl Data for &amp;[i32] {}\n\nimpl Data for &amp;[f64] {}\n\n#[derive(Debug, Clone, Copy)]\nstruct DataVar&lt;'a&gt; {\n    name: &amp;'a str,\n    data: &amp;'a dyn Data,\n}\n\nimpl&lt;'a&gt; DataVar&lt;'a&gt; {\n    fn new&lt;T&gt;(name: &amp;'a str, data: &amp;'a T) -&gt; Self\n    where\n        T: Data,\n    {\n        Self { name, data }\n    }\n}\n\nlet x = [1, 2, 3];\nlet xvar = DataVar::new(\"x\", &amp;&amp;x[..]);\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 4, "last_activity_date": 1549885779, "last_edit_date": 1549885779, "creation_date": 1549882124, "answer_id": 54628841, "question_id": 54621937, "link": "https://stackoverflow.com/questions/54621937/generic-parameter-bounded-by-another-parameter/54628841#54628841", "title": "Generic parameter bounded by another parameter", "body": "<p>Rust also knows about these kinds of \"compatibility\" of types: it's all about <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">subtyping and variance</a>. The trick is to simply <strong>make both arguments have the same type, at least as far as the function is concerned</strong>. </p>\n\n<p>Let's try something easier first:</p>\n\n<pre><code>// Both arguments have the same type (including the same lifetime)\nfn foo&lt;'a&gt;(x: &amp;'a i32, y: &amp;'a i32) -&gt; &amp;'a i32 { \n    x \n}\n\nlet outer = 3;\n{\n    let inner = 27;\n    println!(\"{}\", foo(&amp;outer, &amp;inner));\n}\n</code></pre>\n\n<p>Why does this work? <code>outer</code> and <code>inner</code> clearly have different lifetimes! Because when calling the function, Rust considers subtyping to see if the function can be called. In particular, the type <code>&amp;'outer i32</code> is a subtype of <code>&amp;'inner i32</code> so it can be turned into a <code>&amp;'inner i32</code> without a problem and the function can be called. </p>\n\n<hr>\n\n<p>Applying this idea to your problem means that your function only has one function type and both arguments (<code>base</code> and <code>subs</code>) have that type:</p>\n\n<pre><code>fn selector&lt;U, V, F: Fn(U) -&gt; V&gt;(base: F, subs: F, arg: U, use_base: bool) -&gt; V {\n    match use_base {\n        true =&gt; base(arg),\n        false =&gt; subs(arg),\n    }\n}\n</code></pre>\n\n<p>If we try it like that, we unfortunately still get an error: \"<em>expected fn item, found a different fn item</em>\". This has to do with the \"function item vs. function pointer\" problem. You can learn more about that <a href=\"https://stackoverflow.com/a/54629954/2408867\">in this answer</a> or <a href=\"https://doc.rust-lang.org/beta/reference/types/function-item.html\" rel=\"nofollow noreferrer\">in the Rust reference</a>. The coercion to function pointer is sadly not kicking in in this situation, so one way would be to cast the functions explicitly:</p>\n\n<pre><code>type FnStatic = fn(&amp;str) -&gt; &amp;'static str;\ntype FnWeaker = fn(&amp;str) -&gt; &amp;str;\n\nselector(foo as FnStatic, baz as FnStatic, \"local\", false);\nselector(bar as FnWeaker, baz as FnStatic, \"local\", false);\nselector(foo as FnStatic, bar as FnWeaker, \"local\", false); \n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cb0b9e5bd1026ec77721eb497b9034c8\" rel=\"nofollow noreferrer\"><strong>Playground</strong></a>)</p>\n\n<p>This actually works as expected: the first two calls are fine, but the third errors with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:7:31\n  |\n7 |     selector(foo as FnStatic, bar as FnWeaker, \"local\", false); \n  |                               ^^^^^^^^^^^^^^^ expected concrete lifetime, found bound lifetime parameter\n  |\n  = note: expected type `for&lt;'r&gt; fn(&amp;'r str) -&gt; &amp;str`\n             found type `for&lt;'r&gt; fn(&amp;'r str) -&gt; &amp;'r str`\n</code></pre>\n\n<p>However, it's still a bit ugly to cast the function types explicitly at call site. Unfortunately, I haven't found a way to hide this. I tried writing a macro that enforced the coercion, but that didn't work for when the function pointer had different types (including the second example). </p>\n"}], "owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1549895578, "creation_date": 1549839098, "last_edit_date": 1549895578, "question_id": 54621937, "link": "https://stackoverflow.com/questions/54621937/generic-parameter-bounded-by-another-parameter", "title": "Generic parameter bounded by another parameter", "body": "<p>I'm writing a mocking framework. To do so, I need to accept a function which can be used as a replacement of another function and store it. My current design does that by forcing the same input and output types, but it fails completely at forcing correct lifetimes. </p>\n\n<p>Instead, I need to write a generic function, which accepts a base function and its substitute:</p>\n\n<pre><code>fn main() {\n    selector(foo, baz, \"local\", false);\n    selector(bar, baz, \"local\", false);\n    selector(foo, bar, \"local\", false); // SHOULD FAIL, bar is NOT substitute of foo\n}\n\nfn foo(_: &amp;str) -&gt; &amp;'static str {\n    \"foo\"\n}\nfn bar(s: &amp;str) -&gt; &amp;str {\n    s\n}\nfn baz(_: &amp;str) -&gt; &amp;'static str {\n    \"baz\"\n}\n\n// DOES NOT COMPILE\n// fn selector&lt;U, V, F: Fn(U) -&gt; V, G: F&gt;(base: F, subs: G, arg: U, use_base: bool) -&gt; V {\n//     match use_base {\n//         true =&gt; base(arg),\n//         false =&gt; subs(arg),\n//     }\n// }\n\n// COMPILES, but is too weak\nfn selector&lt;U, V, F: Fn(U) -&gt; V, G: Fn(U) -&gt; V&gt;(base: F, subs: G, arg: U, use_base: bool) -&gt; V {\n    match use_base {\n        true =&gt; base(arg),\n        false =&gt; subs(arg),\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c84cebb9b27ace3b0824f68ed2924510\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>By \"substitute\", I mean a function which accepts at least every argument accepted by base and for each of them returns value at least usable in every place, where value returned from base are. For example:</p>\n\n<pre><code>fn foo(_: &amp;str) -&gt; &amp;'static str {\n    \"foo\"\n}\nfn bar(s: &amp;str) -&gt; &amp;str {\n    s\n}\nfn baz(_: &amp;str) -&gt; &amp;'static str {\n    \"baz\"\n}\n</code></pre>\n\n<p><code>baz</code> is a substitute of <code>foo</code> and <code>bar</code> because its returned string can be used either instead of a <code>'static</code> one or be dependent on a borrow. <code>bar</code> is <strong>not</strong> a substitute of <code>foo</code> because a borrowed value can't be used in place of a <code>'static</code> one.</p>\n\n<p>I want to create something like this, but it doesn't compile:</p>\n\n<pre><code>//                            FAILURE\n//                               V\nfn selector&lt;U, V, F: Fn(U) -&gt; V, G: F&gt;(base: F, subs: G) {...}\n</code></pre>\n\n<p>The problem is that I can't express the relation between <code>F</code> and <code>G</code>. Rust does not seem to have a notion of supertype of concrete type.</p>\n"}, {"tags": ["rust", "cryptography", "hmac", "hmacsha1"], "answers": [{"comments": [{"owner": {"reputation": 586, "user_id": 2738247, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wBoWJzL5n2I/AAAAAAAAAAI/AAAAAAAAADg/lEWJ2PPAVT8/photo.jpg?sz=128", "display_name": "robertohuertasm", "link": "https://stackoverflow.com/users/2738247/robertohuertasm"}, "edited": false, "score": 0, "creation_date": 1549826144, "post_id": 54619739, "comment_id": 96032918, "body": "Thanks for your answer! I was going in circles. Finally just enconding the resulting hash to hexadecimal as you suggested worked perfectly. I used <a href=\"https://crates.io/crates/base16\" rel=\"nofollow noreferrer\">base16</a> to encode it."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1549826264, "last_edit_date": 1549826264, "creation_date": 1549824089, "answer_id": 54619739, "question_id": 54619582, "link": "https://stackoverflow.com/questions/54619582/hmac-sha1-in-rust/54619739#54619739", "title": "HMAC-SHA1 in Rust", "body": "<p>The correct hash is returned, it's just not in the representation you expected. The hash is returned as raw bytes, not as bytes converted to ASCII hexadecimal digits.</p>\n\n<p>If we print the hash code array as hex, like this:</p>\n\n<pre><code>println!(\"{:02x?}\", code);\n</code></pre>\n\n<p>then we can see that it matches your string:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[97, 04, 96, 23, b0, e5, d2, 0b, f6, be, b5, 31, 3d, 80, 60, 0e, 3d, 6a, be, 56]\n// 97049623b0e5d20bf6beb5313d80600e3d6abe56\n</code></pre>\n\n<p>whereas the string <code>\"97049623b0e5d20bf6beb5313d80600e3d6abe56\"</code> looks like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[39, 37, 30, 34, 39, 36, 32, 33, 62, 30, 65, 35, 64, 32, 30, 62, 66, 36, 62, 65,\n 62, 35, 33, 31, 33, 64, 38, 30, 36, 30, 30, 65, 33, 64, 36, 61, 62, 65, 35, 36]\n</code></pre>\n\n<p>Using <a href=\"https://crates.io/crates/itertools\" rel=\"nofollow noreferrer\">itertools</a>, we can convert the former to the latter like this:</p>\n\n<pre><code>assert_eq!(\n    COMPUTED_HMAC,\n    code.iter().format_with(\"\", |byte, f| f(&amp;format_args!(\"{:02x}\", byte))).to_string());\n</code></pre>\n"}], "owner": {"reputation": 586, "user_id": 2738247, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wBoWJzL5n2I/AAAAAAAAAAI/AAAAAAAAADg/lEWJ2PPAVT8/photo.jpg?sz=128", "display_name": "robertohuertasm", "link": "https://stackoverflow.com/users/2738247/robertohuertasm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1191, "favorite_count": 1, "accepted_answer_id": 54619739, "answer_count": 1, "score": 4, "last_activity_date": 1549826264, "creation_date": 1549823015, "last_edit_date": 1549824581, "question_id": 54619582, "link": "https://stackoverflow.com/questions/54619582/hmac-sha1-in-rust", "title": "HMAC-SHA1 in Rust", "body": "<p>I'm trying to apply HMAC-SHA1 in order to check some content but I'm unable to make it work.</p>\n\n<p>These are the tests I have:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n\n    use crypto::hmac::Hmac;\n    use crypto::mac::Mac;\n\n    use crypto::sha1::Sha1;\n    use std::str::from_utf8;\n\n    const BODY_CONTENT: &amp;'static str = r#\"bodystring\"#;\n    const KEY: &amp;[u8] = b\"secret_key\";\n    const COMPUTED_HMAC: &amp;'static str = \"97049623b0e5d20bf6beb5313d80600e3d6abe56\";\n\n    #[test]\n    fn test_hmac_sha1() {\n        let mut mac= Hmac::new(Sha1::new(), KEY);\n        mac.input(BODY_CONTENT.as_bytes());\n        let result = mac.result();\n        let code = result.code();\n        assert_eq!(COMPUTED_HMAC.as_bytes(), code);\n        assert_eq!(COMPUTED_HMAC, from_utf8(&amp;code).unwrap_or(\"failed\"));\n    }\n\n    #[test]\n    fn test_hmac_sha1_direct() {\n        let hash = hmacsha1::hmac_sha1(KEY, BODY_CONTENT.as_bytes());\n        assert_eq!(COMPUTED_HMAC.as_bytes(), hash);\n        assert_eq!(COMPUTED_HMAC, from_utf8(&amp;hash).unwrap_or(\"failed\"));\n    }\n}\n</code></pre>\n\n<p>I've used this <a href=\"https://www.freeformatter.com/hmac-generator.html\" rel=\"nofollow noreferrer\">website</a> in order to get the <code>COMPUTED_HMAC</code> by using one string (<code>BODY_CONTENT</code>) and a secret key (<code>KEY</code>).</p>\n\n<p>As you can see, I'm trying to leverage both <a href=\"https://crates.io/crates/rust-crypto\" rel=\"nofollow noreferrer\">rust-crypto</a> and <a href=\"https://crates.io/crates/hmac-sha1\" rel=\"nofollow noreferrer\">hmac-sha1</a> crates and I obtain the same result with both of them. </p>\n\n<p>The thing is that this result doesn't match with what I get in the website (<code>97049623b0e5d20bf6beb5313d80600e3d6abe56</code>) and the tests fail. You may think that the website is wrong but that's not the case as I'm using it to validate some other hashes generated by Github (I'm working in a Github App) and it works.</p>\n\n<p>Then, obviously, I'm missing some step here but I'm unable to figure it out and I would really appreciate your help.</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 11066, "user_id": 147057, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/cf9d83a95db2460ccb18f311fa8a766c?s=128&d=identicon&r=PG", "display_name": "max taldykin", "link": "https://stackoverflow.com/users/147057/max-taldykin"}, "is_accepted": true, "score": 1, "last_activity_date": 1549821159, "creation_date": 1549821159, "answer_id": 54619268, "question_id": 54618158, "link": "https://stackoverflow.com/questions/54618158/references-to-captured-variables-in-an-actix-server-causes-argument-requires-th/54619268#54619268", "title": "References to captured variables in an Actix server causes &quot;argument requires that it must outlive &#39;static&quot;", "body": "<p>I don't understand what compiler is trying to say but it obvious that you need <code>move</code> in handler closures:</p>\n\n<pre><code>if verbose {\n    App::new()\n        .middleware(middleware::Logger::default())\n        .resource(\"/\", move |r| r.method(Method::GET).f(index))\n} else {\n    App::new().resource(\"/\", move |r| r.method(Method::GET).f(index))\n}\n</code></pre>\n\n<p>This is because you need to move <code>index</code> from the outer closure.</p>\n"}], "owner": {"reputation": 1128, "user_id": 1460746, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/409dc054620959a36f797f0b720ffd7d?s=128&d=identicon&r=PG", "display_name": "calben", "link": "https://stackoverflow.com/users/1460746/calben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "accepted_answer_id": 54619268, "answer_count": 1, "score": 1, "last_activity_date": 1549844027, "creation_date": 1549813888, "last_edit_date": 1549844027, "question_id": 54618158, "link": "https://stackoverflow.com/questions/54618158/references-to-captured-variables-in-an-actix-server-causes-argument-requires-th", "title": "References to captured variables in an Actix server causes &quot;argument requires that it must outlive &#39;static&quot;", "body": "<p>In the below example, I have parameters <code>verbose</code> and <code>data_source</code> that are set by command line parameters. <code>verbose</code> is a boolean flag, but <code>data_source</code> is used to select a default from a set of available functions that can be used depending on the data source for the application.</p>\n\n<p>Actix uses a closure to set up a server, so I need to get these parameters into the closure. I added <code>move</code> for the bool, but I'm having trouble passing in the function to be used for the index and am getting lifetime errors. I've tried boxing the function, but that doesn't seem to help.</p>\n\n<p>If I'm understanding the error message correctly, it's actually the closure itself that is failing to outlive <code>'static</code>.</p>\n\n<p>What should I do to solve this issue?</p>\n\n<pre><code>extern crate actix;\nextern crate actix_web;\nextern crate env_logger;\n\nuse actix_web::http::Method;\nuse actix_web::{middleware, server, App, HttpRequest, HttpResponse};\n\nenum DataSource {\n    Postgres,\n    HDF5,\n}\n\nfn index_postgres(req: &amp;HttpRequest) -&gt; HttpResponse {\n    HttpResponse::Ok().body(\"not implemented\")\n}\n\nfn index_hdf5(req: &amp;HttpRequest) -&gt; HttpResponse {\n    HttpResponse::Ok().body(\"not implemented\")\n}\n\nfn main() {\n    let mut verbose = false;\n    verbose = true;\n    let mut data_source = DataSource::Postgres;\n    data_source = DataSource::HDF5;\n\n    let index = match data_source {\n        DataSource::Postgres =&gt; index_postgres,\n        DataSource::HDF5 =&gt; index_hdf5,\n    };\n\n    ::std::env::set_var(\"RUST_LOG\", \"actix_web=info\");\n    env_logger::init();\n    let sys = actix::System::new(\"test\");\n\n    server::new(move || {\n        if verbose {\n            App::new()\n                .middleware(middleware::Logger::default())\n                .resource(\"/\", |r| r.method(Method::GET).f(index))\n        } else {\n            App::new().resource(\"/\", |r| r.method(Method::GET).f(index))\n        }\n    })\n    .bind(\"127.0.0.1:8080\")\n    .unwrap()\n    .start();\n\n    println!(\"Started http server: 127.0.0.1:8080\");\n    let _ = sys.run();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: unsatisfied lifetime constraints\n  --&gt; src\\main.rs:50:13\n   |\n48 |       server::new(move || {\n   |                   ------- lifetime `'1` represents this closure's body\n49 |           if verbose {\n50 | /             App::new()\n51 | |                 .middleware(middleware::Logger::default())\n52 | |                 .resource(\"/\", |r| r.method(Method::GET).f(index))\n   | |__________________________________________________________________^ argument requires that `'1` must outlive `'static`\n   |\n   = note: closure implements `Fn`, so references to captured variables can't escape the closure\n</code></pre>\n"}, {"tags": ["heroku", "rust", "http2", "actix-web"], "answers": [{"comments": [{"owner": {"reputation": 4878, "user_id": 682754, "user_type": "registered", "accept_rate": 67, "profile_image": "https://graph.facebook.com/501636708/picture?type=large", "display_name": "Carlton", "link": "https://stackoverflow.com/users/682754/carlton"}, "edited": false, "score": 2, "creation_date": 1601323132, "post_id": 54618895, "comment_id": 113366331, "body": "Unbelievable that they don&#39;t support HTTP/2 yet"}], "tags": [], "owner": {"reputation": 790, "user_id": 3018232, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fe61ad7deac14f5426932c774c2e39a9?s=128&d=identicon&r=PG", "display_name": "tehAnswer", "link": "https://stackoverflow.com/users/3018232/tehanswer"}, "is_accepted": true, "score": 4, "last_activity_date": 1549826128, "last_edit_date": 1549826128, "creation_date": 1549818778, "answer_id": 54618895, "question_id": 54617570, "link": "https://stackoverflow.com/questions/54617570/using-actix-web-with-http2-support-in-heroku/54618895#54618895", "title": "Using actix-web with HTTP2 support in Heroku", "body": "<p>I've just found that Heroku does not support HTTP/2 at the time (<a href=\"https://help.heroku.com/JAOCNZ25/does-heroku-have-plans-to-support-http-2\" rel=\"nofollow noreferrer\">source</a>):</p>\n\n<blockquote>\n  <p>HTTP/2 is not currently supported on Heroku although this may change in future. You can find out about our currently supported HTTP protocols here: <a href=\"https://devcenter.heroku.com/articles/http-routing#http-versions-supported\" rel=\"nofollow noreferrer\">https://devcenter.heroku.com/articles/http-routing#http-versions-supported</a></p>\n  \n  <p>For any future developments we recommend subscribing to the <a href=\"https://devcenter.heroku.com/changelog\" rel=\"nofollow noreferrer\">Heroku Changelog</a>. This will let you know about updates, improvements and deprecations ahead of time so that you can make any necessary adjustments.</p>\n</blockquote>\n"}], "owner": {"reputation": 790, "user_id": 3018232, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fe61ad7deac14f5426932c774c2e39a9?s=128&d=identicon&r=PG", "display_name": "tehAnswer", "link": "https://stackoverflow.com/users/3018232/tehanswer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 952, "favorite_count": 0, "accepted_answer_id": 54618895, "answer_count": 1, "score": 1, "last_activity_date": 1549826208, "creation_date": 1549810185, "last_edit_date": 1549826208, "question_id": 54617570, "link": "https://stackoverflow.com/questions/54617570/using-actix-web-with-http2-support-in-heroku", "title": "Using actix-web with HTTP2 support in Heroku", "body": "<p>I am trying to deploy <a href=\"https://github.com/actix/examples/tree/master/rustls\" rel=\"nofollow noreferrer\">one of the actix-web</a> examples that offers HTTP/2 support in Heroku, after having slightly modified it to listen at the provided <code>$PORT</code> number, as well as the way in which certs are loaded -- rather than read from a file, it obtains the public and private key from the environment. </p>\n\n<p>The problem is that, on each request, the Heroku router logs that the connection is closed without a response.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>heroku[router]: \nat=error\ncode=H13\ndesc=\"Connection closed without response\"\nmethod=GET\nstatus=503\nbytes=0\nprotocol=https\n</code></pre>\n\n<p>As it worked locally, I suspect the issue is at my dyno's configuration, which is a Hobby ($7/mo), especially at the certs section. As the application expects to receive the cert info from the environmental variables and having that Heroku does not provide you access to their certificates (e.g cert for xxxxx.herokuapp.com), I bought a domain name with the hopes of generating my own. I did, using the <a href=\"https://zerossl.com\" rel=\"nofollow noreferrer\">following page</a>.</p>\n\n<p>With a self-generated cert, I've tried so far the following, resulting in any of cases in the following errors:</p>\n\n<ol>\n<li>To provide the same pair of keys to the dyno and application. The logs yield the error mentioned above.</li>\n<li>Not to provide SSL configuration to the dyno, but to the application. Therefore, <code>https</code> access is disabled and the dyno is not even hit.</li>\n<li>Not to provide certs configuration to the app, but to the dyno. The app crashes on boot time.</li>\n</ol>\n\n<p>However, if I remove the related <code>rustls</code> lines, everything works smoothly, but the protocol used is <code>HTTP/1.1</code>.</p>\n\n<p>Therefore, I'd like to kindly ask you:</p>\n\n<ul>\n<li>Is there anything fundamentally bad about having the application expecting to load the certs?</li>\n<li>Should I try other providers? (e.g DigitalOcean, AWS, Google Cloud)</li>\n<li>Do you have any idea what might make it work in Heroku?</li>\n</ul>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549805800, "post_id": 54616914, "comment_id": 96026720, "body": "This somehow looks familiar: <a href=\"https://stackoverflow.com/questions/54260772/how-to-use-functions-from-one-file-among-multiple-files/54261498#54261498\">How to use functions from one file among multiple files?</a>; <a href=\"https://stackoverflow.com/questions/26224947/rust-basic-imports-includes\">Rust basic imports (includes)</a>."}, {"owner": {"reputation": 1464, "user_id": 2166181, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/SGSBm.jpg?s=128&g=1", "display_name": "Alban Dericbourg", "link": "https://stackoverflow.com/users/2166181/alban-dericbourg"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549805977, "post_id": 54616914, "comment_id": 96026780, "body": "Indeed, but I get for src/alter.rs:1:5 when for <code>use other</code>: &quot;no <code>other</code> external crate&quot;. I don&#39;t get what I miss..."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549806039, "post_id": 54616914, "comment_id": 96026802, "body": "Prepend <code>crate::</code> to <code>other</code>: <code>use crate::other;</code>. That&#39;s a recent change in edition 2018, I&#39;ll update one of the linked answers."}, {"owner": {"reputation": 1464, "user_id": 2166181, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/SGSBm.jpg?s=128&g=1", "display_name": "Alban Dericbourg", "link": "https://stackoverflow.com/users/2166181/alban-dericbourg"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549806189, "post_id": 54616914, "comment_id": 96026841, "body": "Yes, indeed. That&#39;s all good, thanks a lot Andrey!"}], "owner": {"reputation": 1464, "user_id": 2166181, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/SGSBm.jpg?s=128&g=1", "display_name": "Alban Dericbourg", "link": "https://stackoverflow.com/users/2166181/alban-dericbourg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 630, "favorite_count": 0, "closed_date": 1549808699, "answer_count": 0, "score": 0, "last_activity_date": 1549808806, "creation_date": 1549805542, "last_edit_date": 1549808775, "question_id": 54616914, "link": "https://stackoverflow.com/questions/54616914/using-a-module-from-another", "closed_reason": "Duplicate", "title": "Using a module from another", "body": "<p>There is something that I don't get about Rust modules.</p>\n\n<h1>With a single file used in <code>main.rs</code></h1>\n\n<p>With a <code>main</code> and another file, I get how to use them. This is quite straightforward.</p>\n\n<p><em>main.rs</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod other;\n\nfn main() {\n    let whatever = other::Whatever {\n        foo: 32,\n    };\n    println!(\"Whatever is {}\", whatever.foo);\n}\n</code></pre>\n\n<p><em>other.rs</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Whatever {\n    pub foo: u32,\n}\n</code></pre>\n\n<p>This is fine.</p>\n\n<h1>What about using it somewhere else than in <code>main.rs</code>?</h1>\n\n<p>What I don't get is when it comes to using that other module in another module. </p>\n\n<p>Here is what sounded good to me but did not work.</p>\n\n<p><em>main.rs</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub mod other;\npub mod alter;\n\nfn main() {\n    let whatever = other::Whatever {\n        foo: 32,\n    };\n    alter::say(whatever);\n}\n</code></pre>\n\n<p><em>other.rs</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Whatever {\n    pub foo: u32,\n}\n</code></pre>\n\n<p><em>alter.rs</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod other;\n\npub fn say(whatever: other::Whatever) {\n    println!(\"Whatever is {}\", whatever.foo);\n}\n</code></pre>\n\n<p>Compilation fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0583]: file not found for module `other`\n --&gt; src/alter.rs:1:5\n  |\n1 | mod other;\n  |     ^^^^^\n  |\n</code></pre>\n\n<p>How can I use <code>other</code> from <code>alter</code>?</p>\n\n<p>I already saw <a href=\"https://stackoverflow.com/questions/48071513/how-to-use-one-module-from-another-module-in-a-rust-cargo-project\">How to use one module from another module in a Rust cargo project?</a> but from what I understand, it refers to a module and its submodule.</p>\n\n<p>Here, <code>other</code> is not a submodule of <code>alter</code> (you may consider <code>other</code> as an application-wide shared configuration for instance).</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1549797913, "post_id": 54613966, "comment_id": 96024807, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=88c1604fe205e3c34e23fb3401612a6e\" rel=\"nofollow noreferrer\">Super minimal example</a>. This indeed just looks like a bug."}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1549896076, "post_id": 54617718, "comment_id": 96058155, "body": "Very interesting! I completely forgot that a closure can depend on the generic parameters of the outer function. E.g. we could make the recursive call like <code>foo(false, || println!(&quot;{}&quot;, mem::size_of::&lt;F&gt;()))</code> which makes it very obvious that this is a problem."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1549811171, "creation_date": 1549811171, "answer_id": 54617718, "question_id": 54613966, "link": "https://stackoverflow.com/questions/54613966/error-reached-the-recursion-limit-while-instantiating-funcclosure/54617718#54617718", "title": "Error: reached the recursion limit while instantiating `func::&lt;[closure]&gt;`", "body": "<p>@Lukas Kalbertodt provides a simpler example, which I'll use as a basis for the explanation:</p>\n\n<pre><code>fn foo&lt;F: Fn()&gt;(x: bool, _: F) {\n    if x {\n        foo(false, || {}) // line 3\n    }\n}\n\nfn main() {\n    foo(true, || {}); // line 8\n}\n</code></pre>\n\n<p>The important point here is that each closure has a unique type, so let's instantiate this program:</p>\n\n<ul>\n<li>1st closure, in <code>main</code>, let's name the type <code>main#8</code>.</li>\n<li>1st instantiation of <code>foo</code>, in <code>main</code>, <code>foo&lt;[main#8]&gt;</code>.</li>\n<li>2nd closure, in <code>foo</code>, let's name the type <code>{foo&lt;[main#8]&gt;}#3</code>.</li>\n<li>2nd instantiation of <code>foo</code>, in <code>foo</code>, <code>foo&lt;[{foo&lt;[main#8]&gt;}#3]&gt;</code>.</li>\n<li>3rd closure, in <code>foo</code>, let's name type <code>{foo&lt;[{foo&lt;[main#8]&gt;}#3]&gt;}#3</code>.</li>\n<li>3rd instantiation of <code>foo</code>, in <code>foo</code>, <code>foo&lt;[{foo&lt;[{foo&lt;[main#8]&gt;}#3]&gt;}#3]&gt;</code>.</li>\n<li>...</li>\n</ul>\n\n<p>Each new instantiation of <code>foo</code> creates a new closure type, each new closure type creates a new instantiation of <code>foo</code>, this is a recursion without a base case: <strong>stack overflow</strong>.</p>\n\n<hr>\n\n<p>You can solve the problem by NOT creating a closure when recursively calling <code>preorder_traverse</code>:</p>\n\n<ul>\n<li>either using type erasure, although there's a runtime overhead,</li>\n<li>or simply by using a separate inner function for recursion, since it's independent of <code>F</code>.</li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>fn preorder_traverse_impl(\n    root: Option&lt;&amp;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n    parent_value: i32,\n    predict: fn(i32, i32) -&gt; bool\n)\n    -&gt; bool\n{\n    if let Some(node) = root {\n        let root_val = root.as_ref().unwrap().borrow().val;\n        if !predict(root_val, parent_value) {\n            return false;\n        }\n        preorder_traverse_impl(node.borrow().left.as_ref(), root_val, lessThan)\n            &amp;&amp; preorder_traverse_impl(node.borrow().right.as_ref(), root_val, greaterThan)\n    } else {\n        true\n    }\n}\n\nfn preorder_traverse&lt;F: Fn(i32) -&gt; bool&gt;(root: Option&lt;&amp;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, predict: F) -&gt; bool {\n    if let Some(node) = root {\n        let root_val = root.as_ref().unwrap().borrow().val;\n        if !predict(root_val) {\n            return false;\n        }\n        preorder_traverse_impl(node.borrow().left.as_ref(), root_val, lessThan)\n            &amp;&amp; preorder_traverse_impl(node.borrow().right.as_ref(), root_val, greaterThan)\n    } else {\n        true\n    }\n}\n</code></pre>\n\n<p>On nightly you could also create a predicate type and implement <code>Fn</code> for it (<code>LessThan&lt;i32&gt;</code> and <code>GreaterThan&lt;i32&gt;</code>).</p>\n"}], "owner": {"reputation": 118, "user_id": 5878035, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a659cd8d50fd9529d899c27fc71cd295?s=128&d=identicon&r=PG", "display_name": "Aylei", "link": "https://stackoverflow.com/users/5878035/aylei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 581, "favorite_count": 0, "accepted_answer_id": 54617718, "answer_count": 1, "score": 4, "last_activity_date": 1549811171, "creation_date": 1549780443, "last_edit_date": 1549807441, "question_id": 54613966, "link": "https://stackoverflow.com/questions/54613966/error-reached-the-recursion-limit-while-instantiating-funcclosure", "title": "Error: reached the recursion limit while instantiating `func::&lt;[closure]&gt;`", "body": "<p>I am trying to test if a binary search tree is valid:</p>\n\n<pre><code>use std::{cell::RefCell, rc::Rc};\n\npub struct TreeNode {\n    val: i32,\n    left: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n    right: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n}\n\npub fn is_valid_bst(root: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;) -&gt; bool {\n    preorder_traverse(root.as_ref(), |_| true)\n}\n\nfn preorder_traverse&lt;F: Fn(i32) -&gt; bool&gt;(root: Option&lt;&amp;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, predict: F) -&gt; bool {\n    if let Some(node) = root {\n        let root_val = root.as_ref().unwrap().borrow().val;\n        if !predict(root_val) {\n            return false;\n        }\n        preorder_traverse(node.borrow().left.as_ref(), |v| v &lt; root_val)\n            &amp;&amp; preorder_traverse(node.borrow().right.as_ref(), |v| v &gt; root_val)\n    } else {\n        true\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=3479b2ffde9eac1c64c934ba30362142\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<p>This code triggers the following error message and that seems non-sense to me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: reached the recursion limit while instantiating `preorder_traverse::&lt;[closure@src/lib.rs:19:56: 19:72 root_val:&amp;i32]&gt;`\n  --&gt; src/lib.rs:13:1\n   |\n13 | / fn preorder_traverse&lt;F: Fn(i32) -&gt; bool&gt;(root: Option&lt;&amp;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, predict: F) -&gt; bool {\n14 | |     if let Some(node) = root {\n15 | |         let root_val = root.as_ref().unwrap().borrow().val;\n16 | |         if !predict(root_val) {\n...  |\n23 | |     }\n24 | | }\n   | |_^\n</code></pre>\n\n<p>I've found <a href=\"https://github.com/rust-lang/rust/issues/43520\" rel=\"nofollow noreferrer\">a potentially related Rust issue</a>, but it seems outdated and I cannot understand the quoted message in the original issue well.</p>\n\n<ul>\n<li>What hit the recursion limit?</li>\n<li>How can I work around this if I want to encapsulate the predication logic in a closure or something else?</li>\n</ul>\n\n<p>The <strong>algorithm</strong> to validate binary search tree in this code is not correct, but I still think the original code <strong>should compile</strong>.</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1549796703, "post_id": 54613341, "comment_id": 96024528, "body": "Hi there! I am pretty sure your question is answered by the linked answer. If that&#39;s not the case, please explain why and tell us so we can reopen your question. Summary of the linked answer: it&#39;s not really possible in a nice way, no. Proc macros are probably the right solution here. Or you could do what OP in the linked question does: add <code>parse_defines!{ .. }</code> to the <code>.c</code> file."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1549797557, "post_id": 54613341, "comment_id": 96024711, "body": "Thanks. Not sure why I&#39;ve missed this."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1549797973, "post_id": 54613341, "comment_id": 96024822, "body": "No problem! :-)"}], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 29, "favorite_count": 0, "closed_date": 1549796625, "answer_count": 0, "score": 0, "last_activity_date": 1549772738, "creation_date": 1549772738, "question_id": 54613341, "link": "https://stackoverflow.com/questions/54613341/use-included-text-as-macro-argument", "closed_reason": "Duplicate", "title": "Use included text as macro argument", "body": "<p>I'm trying to create the possibility to parse C header file at compile-time (and generate a bunch of numeric constants to be used in other code). I don't need to get all the header file constructs parsed, since I control its contents and know that this file will have only <code>#define</code>s in it. So I tried the following:</p>\n\n<pre><code>macro_rules! parse_defines {\n    ($(#define $x:ident $v:expr)+) =&gt; {$(\n        const $x: isize = $v;\n    )+};\n}\n</code></pre>\n\n<p>It works <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=381bad8e71f583885b481fd8ffc3e8cc\" rel=\"nofollow noreferrer\">when I write <code>#define</code>s in the code itself</a>, but not when I use <code>include!</code>, since the <code>include!</code> macro isn't expanded before my macro is, and it fails with \"no rules expected the token\" error. Is there any workaround for this, or do I have to go for the proc macro?</p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1549772328, "post_id": 54612971, "comment_id": 96020501, "body": "The overhead for calling <code>handle_rx.recv()</code> should be relatively small, correct? Just thinking if I should use <code>lazy_static</code> or if dynamic access would be sufficient."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1549776171, "post_id": 54612971, "comment_id": 96021010, "body": "Perhaps a larger issue for a general use case (including mine), how would one go about sharing the tx/rx channel between files? The obvious way is via a <code>pub static</code>, but <code>lazy_static</code> doesn&#39;t allow for destructuring a tuple, and the tuple&#39;s fields are private."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1549940583, "post_id": 54612971, "comment_id": 96075998, "body": "@jhpratt Yes, I&#39;d expect the single transfer of the <code>Handle</code> to be very lightweight. I don&#39;t understand your other question; &quot;files&quot; aren&#39;t a meaningful unit here. You need to provide each thread with a copy of the <code>Handle</code> somehow, and that&#39;s going to vary based on how you spin them up."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1549940890, "post_id": 54612971, "comment_id": 96076065, "body": "Actually figured it out (sorta). What I ended up doing was creating a mutable static (<code>Option&lt;Handle&gt;</code>). It needs <code>unsafe</code>, but given the strict ordering of things, I don&#39;t see that as an issue. If the cloning becomes an issue, I&#39;ll certainly look into <code>Rc</code> and whatnot."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1549975067, "post_id": 54612971, "comment_id": 96091722, "body": "@jhpratt using a <code>static mut</code> is almost guaranteed to introduce undefined behavior into your program and you shouldn\u2019t use it. You seem to be making it more complicated than it really needs to be."}, {"owner": {"reputation": 17430, "user_id": 309483, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/d797538504a367f277d19bd8369e9a19?s=128&d=identicon&r=PG", "display_name": "Janus Troelsen", "link": "https://stackoverflow.com/users/309483/janus-troelsen"}, "edited": false, "score": 0, "creation_date": 1595013368, "post_id": 54612971, "comment_id": 111338705, "body": "this answer no longer compiles, i was told on irc that you can do this without channels with handles now"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17430, "user_id": 309483, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/d797538504a367f277d19bd8369e9a19?s=128&d=identicon&r=PG", "display_name": "Janus Troelsen", "link": "https://stackoverflow.com/users/309483/janus-troelsen"}, "edited": false, "score": 1, "creation_date": 1595254922, "post_id": 54612971, "comment_id": 111403210, "body": "@JanusTroelsen updated. Neither answer requires channels <b>for spawning the task</b>. The channels are used to transfer the handle between threads and to tell the runtime when to exit. If you have a different organization, your code may not need either of those."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1606317186, "last_edit_date": 1606317186, "creation_date": 1549767982, "answer_id": 54612971, "question_id": 54612970, "link": "https://stackoverflow.com/questions/54612970/how-do-i-add-tasks-to-a-tokio-event-loop-that-is-running-on-another-thread/54612971#54612971", "title": "How do I add tasks to a Tokio event loop that is running on another thread?", "body": "<p>As <a href=\"https://docs.rs/tokio/0.2.21/tokio/runtime/struct.Runtime.html#method.handle\" rel=\"nofollow noreferrer\">the documentation states</a>:</p>\n<blockquote>\n<p>The returned handle can be used to spawn tasks that run on this runtime, and can be cloned to allow moving the <code>Handle</code> to other threads.</p>\n</blockquote>\n<p>Here is an example of spinning up the event loop in one thread and having a second thread spawn tasks on it.</p>\n<pre><code>use futures::future; // 0.3.5\nuse std::{thread, time::Duration};\nuse tokio::{runtime::Runtime, time}; // 0.2.21\n\nfn main() {\n    let (shutdown_tx, shutdown_rx) = tokio::sync::oneshot::channel();\n    let (handle_tx, handle_rx) = std::sync::mpsc::channel();\n\n    let tokio_thread = thread::spawn(move || {\n        let mut runtime = Runtime::new().expect(&quot;Unable to create the runtime&quot;);\n\n        eprintln!(&quot;Runtime created&quot;);\n\n        // Give a handle to the runtime to another thread.\n        handle_tx\n            .send(runtime.handle().clone())\n            .expect(&quot;Unable to give runtime handle to another thread&quot;);\n\n        // Continue running until notified to shutdown\n        runtime.block_on(async {\n            shutdown_rx.await.expect(&quot;Error on the shutdown channel&quot;);\n        });\n\n        eprintln!(&quot;Runtime finished&quot;);\n    });\n\n    let another_thread = thread::spawn(move || {\n        let handle = handle_rx\n            .recv()\n            .expect(&quot;Could not get a handle to the other thread's runtime&quot;);\n\n        eprintln!(&quot;Another thread created&quot;);\n\n        let task_handles: Vec&lt;_&gt; = (0..10)\n            .map(|value| {\n                // Run this future in the other thread's runtime\n                handle.spawn(async move {\n                    eprintln!(&quot;Starting task for value {}&quot;, value);\n                    time::delay_for(Duration::from_secs(2)).await;\n                    eprintln!(&quot;Finishing task for value {}&quot;, value);\n                })\n            })\n            .collect();\n\n        // Finish all pending tasks\n        handle.block_on(async move {\n            future::join_all(task_handles).await;\n        });\n\n        eprintln!(&quot;Another thread finished&quot;);\n    });\n\n    another_thread.join().expect(&quot;Another thread panicked&quot;);\n\n    shutdown_tx\n        .send(())\n        .expect(&quot;Unable to shutdown runtime thread&quot;);\n\n    tokio_thread.join().expect(&quot;Tokio thread panicked&quot;);\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>Runtime created\nAnother thread created\nStarting task for value 0\nStarting task for value 1\nStarting task for value 2\nStarting task for value 3\nStarting task for value 4\nStarting task for value 5\nStarting task for value 6\nStarting task for value 7\nStarting task for value 8\nStarting task for value 9\nFinishing task for value 0\nFinishing task for value 5\nFinishing task for value 4\nFinishing task for value 3\nFinishing task for value 9\nFinishing task for value 2\nFinishing task for value 1\nFinishing task for value 7\nFinishing task for value 8\nFinishing task for value 6\nAnother thread finished\nRuntime finished\n</code></pre>\n<p>The <a href=\"https://stackoverflow.com/revisions/54612971/1\">solution for Tokio 0.1 is available in the revision history of this post</a>.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/61292425/155423\">How to run an asynchronous task from a non-main thread in Tokio?</a></li>\n</ul>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1538, "favorite_count": 0, "accepted_answer_id": 54612971, "answer_count": 1, "score": 3, "last_activity_date": 1606317186, "creation_date": 1549767982, "question_id": 54612970, "link": "https://stackoverflow.com/questions/54612970/how-do-i-add-tasks-to-a-tokio-event-loop-that-is-running-on-another-thread", "title": "How do I add tasks to a Tokio event loop that is running on another thread?", "body": "<p><a href=\"https://stackoverflow.com/questions/54279989/is-there-a-way-to-launch-a-tokiodelay-on-a-new-thread-to-allow-the-main-loop-t/54280186?noredirect=1#comment95826753_54280186\">I'd like to</a> spin up a Tokio event loop alongside a Rocket server, then add events to this loop later on. I read <a href=\"https://stackoverflow.com/q/54279989/155423\">Is there a way to launch a tokio::Delay on a new thread to allow the main loop to continue?</a>, but it's still not clear to me how to achieve my goal.</p>\n"}, {"tags": ["rust", "streaming", "rust-actix"], "comments": [{"owner": {"reputation": 652, "user_id": 10500566, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b383503f8579bf5faa16188e68e6ce75?s=128&d=identicon&r=PG", "display_name": "Sajjad Pourali", "link": "https://stackoverflow.com/users/10500566/sajjad-pourali"}, "edited": false, "score": 0, "creation_date": 1549738812, "post_id": 54609316, "comment_id": 96014034, "body": "you muse use <code>.timeout()</code> to changing timeout, in client request, also content-length must be set by user."}], "answers": [{"comments": [{"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1562540350, "post_id": 56926683, "comment_id": 100394973, "body": "@Shepmaster editing <i>all</i> rust answers to collect internet points? Not even sure what your edit was, changing <code>,</code> to <code>:</code>?"}], "tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": false, "score": 3, "last_activity_date": 1566804454, "last_edit_date": 1566804454, "creation_date": 1562539683, "answer_id": 56926683, "question_id": 54609316, "link": "https://stackoverflow.com/questions/54609316/how-do-i-prevent-a-timeout-problem-while-streaming-large-files-with-an-actix-web/56926683#56926683", "title": "How do I prevent a timeout problem while streaming large files with an actix-web proxy?", "body": "<p>You should stream the body: use <code>.streaming</code> instead of <code>.body</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_web::client::Client;\nuse actix_web::{web, App, Error, HttpResponse, HttpServer};\nuse futures::future::Future;\n\nfn main() {\n    HttpServer::new(|| {\n        App::new()\n            .data(Client::new())\n            .route(\"/\", web::to_async(handler))\n    })\n    .bind(\"127.0.0.1:8000\")\n    .expect(\"Cannot bind to port 8000\")\n    .run()\n    .expect(\"Unable to run server\");\n}\n\nfn handler(client: web::Data&lt;Client&gt;) -&gt; impl Future&lt;Item = HttpResponse, Error = Error&gt; {\n    client.get(\"https://gensho.ftp.acc.umu.se/debian-cd/current/amd64/iso-cd/debian-10.0.0-amd64-netinst.iso\")\n        .send()\n        .map_err(Error::from)\n        .and_then(|res| {\n            HttpResponse::build(res.status()).streaming(res)\n        })\n}\n</code></pre>\n\n<p>For proxying, note that <a href=\"https://github.com/actix/examples/blob/master/http-proxy/\" rel=\"nofollow noreferrer\">the proxy example</a> has been updated to fix <a href=\"https://github.com/actix/examples/issues/142\" rel=\"nofollow noreferrer\">issues with the content length header</a>.</p>\n"}], "owner": {"reputation": 87, "user_id": 10903524, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0746494ecc1b6ab1be36ae024db6d1a2?s=128&d=identicon&r=PG&f=1", "display_name": "David Tex", "link": "https://stackoverflow.com/users/10903524/david-tex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1445, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1566804454, "creation_date": 1549736910, "last_edit_date": 1562539877, "question_id": 54609316, "link": "https://stackoverflow.com/questions/54609316/how-do-i-prevent-a-timeout-problem-while-streaming-large-files-with-an-actix-web", "title": "How do I prevent a timeout problem while streaming large files with an actix-web proxy?", "body": "<p>I would like to use actix-web as a simple proxy server, but when I'm using huge files in streaming mode, the server has a timeout error and only a small part of the file will be downloaded.</p>\n\n<p>I'm really confused because this is a sample code from the actix-web examples!</p>\n\n<pre><code>extern crate actix;\nextern crate actix_web;\nextern crate env_logger;\nextern crate futures;\n\nuse actix_web::{\n    client, middleware, server, App, AsyncResponder, Body, Error, HttpMessage,\n    HttpRequest, HttpResponse,\n};\nuse futures::{Future, Stream};\n\n/// Stream client request response and then send body to a server response\nfn index(_req: &amp;HttpRequest) -&gt; Box&lt;Future&lt;Item = HttpResponse, Error = Error&gt;&gt; {\n    client::ClientRequest::get(\"http://127.0.0.1:8081/\")\n        .finish().unwrap()\n        .send()\n        .map_err(Error::from)          // &lt;- convert SendRequestError to an Error\n        .and_then(\n            |resp| resp.body()         // &lt;- this is MessageBody type, resolves to complete body\n                .from_err()            // &lt;- convert PayloadError to an Error\n                .and_then(|body| {     // &lt;- we got complete body, now send as server response\n                    Ok(HttpResponse::Ok().body(body))\n                }))\n        .responder()\n}\n\n/// streaming client request to a streaming server response\nfn streaming(_req: &amp;HttpRequest) -&gt; Box&lt;Future&lt;Item = HttpResponse, Error = Error&gt;&gt; {\n    // send client request\n    client::ClientRequest::get(\"https://gemmei.ftp.acc.umu.se/debian-cd/current/amd64/iso-cd/debian-9.7.0-amd64-netinst.iso\")\n        .finish().unwrap()\n        .send()                         // &lt;- connect to host and send request\n        .map_err(Error::from)           // &lt;- convert SendRequestError to an Error\n        .and_then(|resp| {              // &lt;- we received client response\n            Ok(HttpResponse::Ok()\n               // read one chunk from client response and send this chunk to a server response\n               // .from_err() converts PayloadError to an Error\n               .body(Body::Streaming(Box::new(resp.payload().from_err()))))\n        })\n        .responder()\n}\n\nfn main() {\n    ::std::env::set_var(\"RUST_LOG\", \"actix_web=info\");\n    env_logger::init();\n    let sys = actix::System::new(\"http-proxy\");\n\n    server::new(|| {\n        App::new()\n            .middleware(middleware::Logger::default())\n            .resource(\"/streaming\", |r| r.f(streaming))\n            .resource(\"/\", |r| r.f(index))\n    }).workers(1)\n        .bind(\"127.0.0.1:8080\")\n        .unwrap()\n        .start();\n\n    println!(\"Started http server: 127.0.0.1:8080\");\n    let _ = sys.run();\n}\n</code></pre>\n\n<p>Dependencies:</p>\n\n<pre><code>[dependencies]\nenv_logger = \"0.5\"\nfutures = \"0.1\"\nactix = \"0.7\"\nactix-web = { version=\"0.7\", features=[\"ssl\"] }\n</code></pre>\n\n<p>This code logs an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ERROR 2019-02-09T18:10:16Z: actix_web::pipeline: Error occurred during request handling: Timeout while waiting for response\nERROR 2019-02-09T18:10:16Z: actix_web::server::h1: Unhandled error1: Timeout while waiting for response\n</code></pre>\n\n<p>The downloaded data doesn't have the right content length and file name:</p>\n\n<p><a href=\"https://i.stack.imgur.com/k1Hyf.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/k1Hyf.png\" alt=\"Sample Picture\"></a></p>\n"}, {"tags": ["string", "rust"], "answers": [{"comments": [{"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1549735431, "post_id": 54609054, "comment_id": 96013023, "body": "I should have looked more closely at the docs ... thank you for your time"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 5, "last_activity_date": 1549735317, "creation_date": 1549735317, "answer_id": 54609054, "question_id": 54608972, "link": "https://stackoverflow.com/questions/54608972/is-there-a-differencee-between-stras-bytes-and-cstringas-bytes-with-nul/54609054#54609054", "title": "Is there a differencee between str::as_bytes and CString::as_bytes_with_nul?", "body": "<p>The documentation of <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.as_bytes_with_nul\" rel=\"noreferrer\"><code>as_bytes_with_nul</code></a> starts with:</p>\n\n<blockquote>\n  <p>Equivalent to the <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.as_bytes\" rel=\"noreferrer\"><code>as_bytes</code></a> function except that the returned slice includes the trailing nul terminator.</p>\n</blockquote>\n\n<p>While <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.as_bytes\" rel=\"noreferrer\"><code>as_bytes</code></a> is:</p>\n\n<blockquote>\n  <p>The returned slice does <strong>not</strong> contain the trailing nul terminator</p>\n</blockquote>\n\n<p>(emphasis in the original quote)</p>\n\n<p>It is up to you whether you need to transfer the nul byte, and this depends on how you send data over the network (TCP/UDP? raw binary data over TCP? if so, how do you intend to separate messages? JSON? etc.).</p>\n"}, {"tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": false, "score": 1, "last_activity_date": 1549739906, "last_edit_date": 1549739906, "creation_date": 1549737585, "answer_id": 54609447, "question_id": 54608972, "link": "https://stackoverflow.com/questions/54608972/is-there-a-differencee-between-stras-bytes-and-cstringas-bytes-with-nul/54609447#54609447", "title": "Is there a differencee between str::as_bytes and CString::as_bytes_with_nul?", "body": "<p>As long as there is no <code>0</code> UTF-8 code unit in your string, <code>name.as_bytes()</code> and <code>CString::new(name)?.as_bytes()</code> should give you exactly the same bytes. Additionally, <code>CString</code>'s <code>.as_bytes_with_null()</code> will simply append a <code>0</code> byte. Here is a little demo with a reasonably complicated UTF-8 string:</p>\n\n<pre><code>use std::ffi::CString;\n\nfn main() {\n    let message: String = \"\\n\u00df\u0449\\u{1F601}\".to_string();\n    println!(\"bytes_1: {:?}\", message.as_bytes());\n    println!(\"bytes_2: {:?}\", CString::new(message.clone()).unwrap().as_bytes());\n    println!(\"bytes_3: {:?}\", CString::new(message.clone()).unwrap().as_bytes_with_nul());\n}\n</code></pre>\n\n<p>The result is as expected (you might recognize the <code>10</code>, which corresponds to the ASCII-character <code>\\n</code>, which is encoded in the same way in UTF-8):</p>\n\n<pre><code>bytes_1: [10, 195, 159, 209, 137, 240, 159, 152, 129]\nbytes_2: [10, 195, 159, 209, 137, 240, 159, 152, 129]\nbytes_3: [10, 195, 159, 209, 137, 240, 159, 152, 129, 0]\n</code></pre>\n\n<p>The problem arises if your string contains the <a href=\"https://www.fileformat.info/info/unicode/char/0000/index.htm\" rel=\"nofollow noreferrer\"><code>U+0000</code></a>, <a href=\"https://stackoverflow.com/a/6907327/2707792\">which is a valid Unicode code point</a>, is encoded by a single <code>0</code> byte in <code>UTF-8</code>, and can occur in ordinary Strings. For example:</p>\n\n<pre><code>use std::ffi::CString;\n\nfn main() {\n    let message: String = \"\\n\\u{0000}\\n\\u{0000}\".to_string();\n    println!(\"bytes_1: {:?}\", message.as_bytes());\n    println!(\n        \"bytes_2: {:?}\",\n        match CString::new(message.clone()) {\n            Err(e) =&gt; format!(\"an error: {:?}, as expected\", e),\n            Ok(_) =&gt; panic!(\"won't happen. .as_bytes() must fail.\"),\n        }\n    );\n}\n</code></pre>\n\n<p>will give you</p>\n\n<pre><code>bytes_1: [10, 0, 10, 0]\nbytes_2: \"an error: NulError(1, [10, 0, 10, 0]), as expected\"\n</code></pre>\n\n<p>So, the simple <code>.as_bytes()</code> succeeds, but the <code>CString</code>-version fails. I'd suggest to stick to <code>name.as_bytes()</code> and UTF-8 if possible, there is no reason to convert it into a CString first.</p>\n"}], "owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1549743531, "creation_date": 1549734798, "last_edit_date": 1549743531, "question_id": 54608972, "link": "https://stackoverflow.com/questions/54608972/is-there-a-differencee-between-stras-bytes-and-cstringas-bytes-with-nul", "title": "Is there a differencee between str::as_bytes and CString::as_bytes_with_nul?", "body": "<p>Is there any difference between doing this:</p>\n\n<pre><code>name.as_bytes()\n</code></pre>\n\n<p>and this:</p>\n\n<pre><code>CString::new(name)?.as_bytes_with_nul()\n</code></pre>\n\n<p>I want to get the bytes from <code>name</code> (which is <code>String</code>) in a way that I can easily send them over the network, and I am not sure whether <code>CString</code> is even necessary here.</p>\n"}, {"tags": ["rust", "lr1"], "comments": [{"owner": {"reputation": 149, "user_id": 5639961, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/V2RDo.jpg?s=128&g=1", "display_name": "yyyy", "link": "https://stackoverflow.com/users/5639961/yyyy"}, "edited": false, "score": 0, "creation_date": 1549775579, "post_id": 54608938, "comment_id": 96020920, "body": "What about <code>BlockBody = (Begin End)+; Block = BlockBody BlockHeader; pub Blocks = BlockHeader Block+ BlockBody;</code>?"}, {"owner": {"reputation": 336, "user_id": 1893087, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1924b039024f0c5b8266b86b2d9d0b56?s=128&d=identicon&r=PG", "display_name": "Alec Thilenius", "link": "https://stackoverflow.com/users/1893087/alec-thilenius"}, "reply_to_user": {"reputation": 149, "user_id": 5639961, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/V2RDo.jpg?s=128&g=1", "display_name": "yyyy", "link": "https://stackoverflow.com/users/5639961/yyyy"}, "edited": false, "score": 0, "creation_date": 1549820212, "post_id": 54608938, "comment_id": 96031091, "body": "Unfortunately it&#39;s still ambiguous, <a href=\"https://gist.github.com/AThilenius/f202e12f5bd5e10f8e6cde2e30ca6d1e\" rel=\"nofollow noreferrer\">error output</a>. I&#39;m starting to think it&#39;s not possible in one pass with an LR(1) grammar :,("}], "answers": [{"comments": [{"owner": {"reputation": 336, "user_id": 1893087, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1924b039024f0c5b8266b86b2d9d0b56?s=128&d=identicon&r=PG", "display_name": "Alec Thilenius", "link": "https://stackoverflow.com/users/1893087/alec-thilenius"}, "edited": false, "score": 0, "creation_date": 1549819833, "post_id": 54610248, "comment_id": 96030970, "body": "A detailed and thoughtful answer, thank you Chris! I started looking into combining tokens as well, but still want to parse the actual timestamp [YYYY-MM-DD HH:MM] in the same pass. If my (very murky but solidifying) understanding of parsers is correct, than this is simply not possible in LR(1) because it by definition will only ever look 1 token ahead, and 1 token ahead will always be ambiguous. I played with some PEG grammars as well, which I like a lot more but the libraries for them aren&#39;t as slick as LALRPOP, which combines AST generation into parsing."}, {"owner": {"reputation": 100407, "user_id": 16406, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/fadf252892475e9b177d5cd5e8b24145?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Dodd", "link": "https://stackoverflow.com/users/16406/chris-dodd"}, "reply_to_user": {"reputation": 336, "user_id": 1893087, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1924b039024f0c5b8266b86b2d9d0b56?s=128&d=identicon&r=PG", "display_name": "Alec Thilenius", "link": "https://stackoverflow.com/users/1893087/alec-thilenius"}, "edited": false, "score": 0, "creation_date": 1549826171, "post_id": 54610248, "comment_id": 96032926, "body": "If you need to parse the timestamp as well, that&#39;s probably too much lookahead to do easily in the lexer, so you&#39;re probably best off with the approach above, parsing the input into a simple list of items and then post-processing that into blocks.  Depending on your parser generator that may be doable on-the-fly (parsing into a queue of items and processing that queue as you go, just needing some limited lookahead in the queue).  You might even be able to structure it as two-level parser (one parser that generates a sequence of items that are considered as tokens to a second parser.)"}], "tags": [], "owner": {"reputation": 100407, "user_id": 16406, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/fadf252892475e9b177d5cd5e8b24145?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Dodd", "link": "https://stackoverflow.com/users/16406/chris-dodd"}, "is_accepted": true, "score": 2, "last_activity_date": 1549742787, "creation_date": 1549742787, "answer_id": 54610248, "question_id": 54608938, "link": "https://stackoverflow.com/questions/54608938/lr1-shift-reduce-disambiguation/54610248#54610248", "title": "LR(1) Shift/Reduce Disambiguation", "body": "<p>Unfortunately this kind of 'need more lookahead' problem is hard to solve without completely restructuring the grammar, which often loses desirable structure of the input, and sometime accepts degenerate inputs the original grammar would reject.  You can usually reject those inputs and get that structure back by post-processing the parse tree, but that is more work.  In your case, the grammar:</p>\n\n<pre><code>Timestamp = \"[TIMESTAMP]\";\nBlockHeader = Timestamp \"BLOCK\";\nBegin = Timestamp \"BEGIN\" \"EVENT\";\nEnd = Timestamp \"END\" \"EVENT\";\nEvent = Begin End;\nItem = BlockHeader | Event;\npub Input = Item*\n</code></pre>\n\n<p>should do the trick, but has the problem that it loses the block structure (instead giving you an unstructured sequence of block headers and events), and it accepts empty blocks.  You can readily deal with both problems by post-processing the list of items.</p>\n\n<p>An alternative option when the required lookahead is small and bounded is to deal with it in your tokenizer.  I'm not familiar with LALRPOP, but it should be possible to \"combine\" the <code>[TIMESTAMP]</code> tokens with the immediately following keyword tokens (so the timestamps would not be present in the grammar, instead just being an attribute on the keywords), in which case everything would work fine with single token lookahead.</p>\n"}], "owner": {"reputation": 336, "user_id": 1893087, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1924b039024f0c5b8266b86b2d9d0b56?s=128&d=identicon&r=PG", "display_name": "Alec Thilenius", "link": "https://stackoverflow.com/users/1893087/alec-thilenius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 54610248, "answer_count": 1, "score": 1, "last_activity_date": 1549742787, "creation_date": 1549734531, "question_id": 54608938, "link": "https://stackoverflow.com/questions/54608938/lr1-shift-reduce-disambiguation", "title": "LR(1) Shift/Reduce Disambiguation", "body": "<p>Given input with repeating <code>BLOCK</code>s, where each block has repeating <code>BEGIN EVENT</code> and <code>END EVENT</code> entries (<code>END EVENT</code> always follows a <code>BEGIN EVENT</code>):</p>\n\n<pre><code>[TIMESTAMP] BLOCK\n[TIMESTAMP] BEGIN EVENT\n[TIMESTAMP] END EVENT\n[TIMESTAMP] BEGIN EVENT\n[TIMESTAMP] END EVENT\n...\n[TIMESTAMP] BLOCK\n</code></pre>\n\n<p>How do you disambiguate this grammar with LR(1)? I'm using <a href=\"http://lalrpop.github.io/lalrpop/\" rel=\"nofollow noreferrer\">LALRPOP</a>, and the minimum example of this is:</p>\n\n<pre><code>Timestamp = \"[TIMESTAMP]\";\nBlockHeader = Timestamp \"BLOCK\";\nBegin = Timestamp \"BEGIN\" \"EVENT\";\nEnd = Timestamp \"END\" \"EVENT\";\n\nBlock = BlockHeader (Begin End)+;\npub Blocks = Block*\n</code></pre>\n\n<p>Because LR(1) can only look one token ahead though, this grammar is ambigious, as LALRPOP helpfully tells you (partial error):</p>\n\n<pre><code>Local ambiguity detected\n\n  The problem arises after having observed the following symbols in the input:\n    BlockHeader (Begin End)+\n  At that point, if the next token is a `\"[TIMESTAMP]\"`, then the parser can proceed in two different ways.\n\n  First, the parser could execute the production at\n  /home/&lt;snip&gt;.lalrpop:51:9: 51:32, which would consume\n  the top 2 token(s) from the stack and produce a `Block`. This might then yield a parse tree like\n    BlockHeader (Begin End)+ Block\n    \u251c\u2500Block\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524     \u2502\n    \u251c\u2500Block+\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2502\n    \u2514\u2500Block+\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n  Alternatively, the parser could shift the `\"[TIMESTAMP]\"` token and later use it to construct a\n  `Timestamp`. This might then yield a parse tree like\n    (Begin End)+ \"[TIMESTAMP]\" \"BEGIN\" \"EVENT\" End\n    \u2502            \u251c\u2500Timestamp\u2500\u2518               \u2502   \u2502\n    \u2502            \u2514\u2500Begin\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n    \u2514\u2500(Begin End)+\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>\n\n<p>I see that it is telling me, after parsing a BlockHeader, Begin and End it can't figure out if the next token is another Begin, or the start of another Block. I have not found a way to disambiguate this in LR(1), but I can only assume this is a lack of understanding on my part though, and not an inherit limitation of LR(1) grammars?</p>\n"}, {"tags": ["arrays", "vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1549725429, "post_id": 54607560, "comment_id": 96010193, "body": "So there is no concise way to: append <code>x</code> or <code>&amp;x[..]</code> to the vector in the same line as <code>vec![5]</code>, then do something with the result before assigning to <code>y</code>?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1549725578, "post_id": 54607560, "comment_id": 96010248, "body": "@laptou references alone can only point to an existing value (for slices, this would be a contiguous section of values <code>[T]</code>), so no new values can be appended through a slice. Dynamic manipulation of sequences is usually performed with vectors, so that they may own that memory."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1549725714, "post_id": 54607560, "comment_id": 96010285, "body": "@laptou as far as I remember there was once a suggestion to implement <code>Add</code> between <code>Vec&lt;T&gt;</code> and <code>&amp;[T]</code>, as it is already possible with <code>String</code> and <code>&amp;[str]</code>, but it was rejected."}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549725806, "post_id": 54607560, "comment_id": 96010312, "body": "@E_net4 I understand, but since these are primitive values that implement <code>Copy</code> (in my specific use case, I am trying to concatenate a <code>Vec&lt;u8&gt;</code> with <code>[u8; 2]</code> in a single line) I was hoping there might be a shortcut."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1549726008, "post_id": 54607560, "comment_id": 96010380, "body": "@laptou yep, found it: <a href=\"https://github.com/rust-lang/rust/pull/38573\" rel=\"nofollow noreferrer\">Implement Add for Vec</a>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1549726031, "post_id": 54607560, "comment_id": 96010389, "body": "@laptou Indeed, appending values to an existing vector is possible, although there is currently no standard syntax for doing that in a single line. <code>Extend</code> is a suitable trait to use here once you already built a vector somewhere."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549726165, "post_id": 54607560, "comment_id": 96010433, "body": "With that said, Rust arrays having a fixed length would not be an impediment to array spreading as part of the language&#39;s syntax, so long as the inputs and outputs were also arrays. I wouldn&#39;t be surprised if someone already proposed such a syntax into an RFC or just built a macro to achieve a similar effect."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 5, "last_activity_date": 1549726183, "last_edit_date": 1549726183, "creation_date": 1549725114, "answer_id": 54607560, "question_id": 54607493, "link": "https://stackoverflow.com/questions/54607493/what-is-the-rust-equivalent-of-javascripts-spread-operator-for-arrays/54607560#54607560", "title": "What is the Rust equivalent of JavaScript&#39;s spread operator for arrays?", "body": "<p><a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"noreferrer\">Rust's arrays have a fixed length</a>, so there is no way of just combining them together; the usual way to achieve this result would be to have a mutable vector and to <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.extend_from_slice\" rel=\"noreferrer\">extend it</a> with a slice:</p>\n\n<pre><code>fn main() {\n    let x = [3, 4];\n    let mut y = vec![5];\n    y.extend_from_slice(&amp;x);\n\n    println!(\"{:?}\", y); // [5, 3, 4]\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1549735341, "post_id": 54609041, "comment_id": 96012990, "body": "This works. Are there any significant performance implications in doing it this way?"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "reply_to_user": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "edited": false, "score": 0, "creation_date": 1549736952, "post_id": 54609041, "comment_id": 96013488, "body": "@laptou: I doubt it. But you can compare the output assembly here: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=e67df670ea90e0aae9471112336337ed\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "edited": false, "score": 0, "creation_date": 1550748827, "post_id": 54609041, "comment_id": 96388488, "body": "@BenjaminLindley they defenitely will be since array is created on stack, and Vec is a heap-allocated structure."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "reply_to_user": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "edited": false, "score": 0, "creation_date": 1550763473, "post_id": 54609041, "comment_id": 96398408, "body": "@AlexZhukovskiy: What are you comparing it to? I assumed we were comparing it to Ijedrz solution, which also uses a vector. Do you have a method that doesn&#39;t?"}, {"owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "edited": false, "score": 0, "creation_date": 1550763553, "post_id": 54609041, "comment_id": 96398466, "body": "I was comparing with manual implementation. It could be written as method then const generics gets stabilized."}], "tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 4, "last_activity_date": 1549736735, "last_edit_date": 1549736735, "creation_date": 1549735258, "answer_id": 54609041, "question_id": 54607493, "link": "https://stackoverflow.com/questions/54607493/what-is-the-rust-equivalent-of-javascripts-spread-operator-for-arrays/54609041#54609041", "title": "What is the Rust equivalent of JavaScript&#39;s spread operator for arrays?", "body": "<p>If you just need <code>y</code> to be iterable, you can do:</p>\n\n<pre><code>let x = [3,4];\nlet y = [5].iter().chain(&amp;x);\n</code></pre>\n\n<p>If you need it to be indexable, then you'll want to collect it into a vector.</p>\n\n<pre><code>let y: Vec&lt;_&gt; = [5].iter().chain(&amp;x).map(|&amp;x|x).collect();\n</code></pre>\n"}], "owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1594, "favorite_count": 1, "accepted_answer_id": 54609041, "answer_count": 2, "score": 5, "last_activity_date": 1549736735, "creation_date": 1549724656, "last_edit_date": 1549731042, "question_id": 54607493, "link": "https://stackoverflow.com/questions/54607493/what-is-the-rust-equivalent-of-javascripts-spread-operator-for-arrays", "title": "What is the Rust equivalent of JavaScript&#39;s spread operator for arrays?", "body": "<p>In JavaScript, there is an operator called the spread operator that allows you to combine arrays very concisely.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>let x = [3, 4];\nlet y = [5, ...x]; // y is [5, 3, 4]\n</code></pre>\n\n<p>Is there a way to do something like this in Rust?</p>\n"}, {"tags": ["rust", "rust-2018"], "answers": [{"tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": true, "score": 9, "last_activity_date": 1549760845, "last_edit_date": 1549760845, "creation_date": 1549725586, "answer_id": 54607642, "question_id": 54607488, "link": "https://stackoverflow.com/questions/54607488/why-does-my-trait-definition-compile-with-the-2015-edition-but-not-with-the-2018/54607642#54607642", "title": "Why does my trait definition compile with the 2015 edition but not with the 2018 edition?", "body": "<p>Anonymous trait parameters have been removed in 2018 edition: <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/trait-system/no-anon-params.html\" rel=\"nofollow noreferrer\">No more anonymous trait parameters</a>. </p>\n\n<p>Add <code>_:</code> before <code>&amp;mut T</code> if you want to ignore the parameter:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Command&lt;T&gt; {\n    fn execute(&amp;self, _: &amp;mut T);\n}\n</code></pre>\n\n<p>Compiling with <code>rustc main.rs</code> works, because it defaults to <code>--edition=2015</code>.</p>\n\n<hr>\n\n<p>Indeed, if you put your <code>main.rs</code> in a new Cargo project, then remove <code>edition = \"2018\"</code> from <code>Cargo.toml</code>, and run </p>\n\n<pre><code>cargo fix --edition\n</code></pre>\n\n<p>then Cargo will add the missing <code>_:</code> automatically. See <a href=\"https://rust-lang-nursery.github.io/edition-guide/editions/transitioning-an-existing-project-to-a-new-edition.html\" rel=\"nofollow noreferrer\">Transitioning an existing project to a new edition</a>.</p>\n"}], "owner": {"reputation": 83, "user_id": 10053103, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89c25d4037cb2fa71dcad3c6b16e0e57?s=128&d=identicon&r=PG&f=1", "display_name": "T.Shin", "link": "https://stackoverflow.com/users/10053103/t-shin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 54607642, "answer_count": 1, "score": 8, "last_activity_date": 1549760845, "creation_date": 1549724636, "last_edit_date": 1549760107, "question_id": 54607488, "link": "https://stackoverflow.com/questions/54607488/why-does-my-trait-definition-compile-with-the-2015-edition-but-not-with-the-2018", "title": "Why does my trait definition compile with the 2015 edition but not with the 2018 edition?", "body": "<p>I wrote this simple program:</p>\n\n<pre><code>trait Command&lt;T&gt; {                                                                                                      \n    fn execute(&amp;self, &amp;mut T);                                                                                          \n}                                                                                                                       \n\nfn main() {                                                                                                             \n    let x = 0;                                                                                                          \n}    \n</code></pre>\n\n<p>I compiled this with <code>rustc --edition=2018 main.rs</code> and get the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `:` or `@`, found `)`\n --&gt; main.rs:2:29\n  |\n2 |     fn execute(&amp;self, &amp;mut T);\n  |                             ^ expected one of `:` or `@` here\n</code></pre>\n\n<p>Compiling via <code>rustc --edition=2015 main.rs</code> or <code>rustc main.rs</code> doesn't cause this error, although there are some warnings.</p>\n\n<p>What's the problem with this code?</p>\n"}, {"tags": ["enums", "rust", "comparison"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1549720574, "post_id": 54606664, "comment_id": 96008970, "body": "Can you describe what the function should do? It seems like you return <code>Equal</code> when the values are equal, <code>Different</code> when the values are different but with the same variant, and <code>NotFound</code> when the variants are different, which seems to be a weird name. Can you confirm?"}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549721078, "post_id": 54606664, "comment_id": 96009099, "body": "@mcarton Yes, you are correct, <code>NotFound</code> is a bad name, but basically I want to distinguish when the two JSON nodes 1) have the same key and value, 2) have the same key but different value, 3) have the same key but different type/variant (ex first is a number and second is a string), 4) (not in the code yet) a key in node1 does not exist in node2 and vice-versa."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549721476, "post_id": 54606664, "comment_id": 96009187, "body": "<a href=\"https://play.integer32.com/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=d9286f0e6564ac46c20398a2664fabfa\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>, you could do that and implement it with a macro."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549724341, "post_id": 54606664, "comment_id": 96009888, "body": "You could <code>#[derive(PartialEq)]</code> and in case of non equality you could do another check. Would help you to get the &quot;correct&quot; checks away"}], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 3, "last_activity_date": 1549759587, "last_edit_date": 1549759587, "creation_date": 1549725217, "answer_id": 54607573, "question_id": 54606664, "link": "https://stackoverflow.com/questions/54606664/how-to-avoid-code-duplication-when-comparing-two-enums-variants-and-their-value/54607573#54607573", "title": "How to avoid code duplication when comparing two enums&#39; variants and their values?", "body": "<p>You can match against 2 values simultaneously:</p>\n\n<pre><code>let cmp = match (val1, val2) {\n    (Value::Null, Value::Null) =&gt; Diff::Equal,\n    _ =&gt; {\n        // etc...\n        Diff::NotFound\n    }\n};\n</code></pre>\n\n<p>You can also implement a conversion function or trait and use it:</p>\n\n<pre><code>impl Diff {\n    fn new&lt;T: PartialEq&gt;(lhs: T, rhs: T) -&gt; Diff {\n        if lhs == rhs { Diff::Equal } else { Diff::Different }\n    }\n}\n\nfn compare(val1: &amp;Value, val2: &amp;Value) {\n    let cmp = match (val1, val2) {\n        (Value::Null, Value::Null) =&gt; Diff::Equal,\n        (Value::Bool(b1), Value::Bool(b2)) =&gt; Diff::new(b1, b2),\n        _ =&gt; Diff::NotFound,\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 0, "accepted_answer_id": 54607573, "answer_count": 1, "score": 1, "last_activity_date": 1549759587, "creation_date": 1549718807, "last_edit_date": 1549731491, "question_id": 54606664, "link": "https://stackoverflow.com/questions/54606664/how-to-avoid-code-duplication-when-comparing-two-enums-variants-and-their-value", "title": "How to avoid code duplication when comparing two enums&#39; variants and their values?", "body": "<p>I need to compare two <a href=\"https://docs.rs/serde_json/1.0.38/serde_json/enum.Value.html\" rel=\"nofollow noreferrer\"><code>serde_json::Value</code></a>s:</p>\n\n<pre><code>enum Value {\n    Null,\n    Bool(bool),\n    Number(Number),\n    String(String),\n    Array(Vec&lt;Value&gt;),\n    Object(Map&lt;String, Value&gt;),\n}\n</code></pre>\n\n<p>The comparison will return another enum:</p>\n\n<pre><code>enum Diff {\n    Equal,\n    Different,\n    NotFound,\n}\n</code></pre>\n\n<p>I started writing the code structured as follow:</p>\n\n<pre><code>fn compare(val1: &amp;Value, val2: &amp;Value) {\n    let cmp = match val1 {\n        Value::Null =&gt; {\n            if let Value::Null = val2 {\n                Diff::Equal\n            } else {\n                Diff::NotFound\n            }\n        }\n        Value::Bool(b1) =&gt; {\n            if let Value::Bool(b2) = val2 {\n                if b1 == b2 {\n                    Diff::Equal\n                } else {\n                    Diff::Different\n                }\n            } else {\n                Diff::NotFound\n            }\n        }\n        Value::Number(ref n1) =&gt; {\n            if let Value::Number(ref n2) = val2 {\n                if n1 == n2 {\n                    Diff::Equal\n                } else {\n                    Diff::Different\n                }\n            } else {\n                Diff::NotFound\n            }\n        }\n        Value::String(ref s1) =&gt; {\n            if let Value::String(ref s2) = val2 {\n                if s1 == s2 {\n                    Diff::Equal\n                } else {\n                    Diff::Different\n                }\n            } else {\n                Diff::NotFound\n            }\n        }\n        _ =&gt; {\n            // etc...\n            Diff::NotFound\n        }\n    };\n\n}\n</code></pre>\n\n<p>There is a lot of code duplication that I'd like to avoid.</p>\n\n<ol>\n<li>Is there a better way to compare enums in general?</li>\n<li>How can I avoid this type of duplication (in C++ you could use macro for example)</li>\n</ol>\n"}, {"tags": ["multithreading", "rust", "rayon"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1549733692, "last_edit_date": 1549733692, "creation_date": 1549732559, "answer_id": 54608606, "question_id": 54605692, "link": "https://stackoverflow.com/questions/54605692/will-rayon-avoid-spawning-threads-for-a-small-amount-of-work/54608606#54608606", "title": "Will Rayon avoid spawning threads for a small amount of work?", "body": "<p>You can empirically see that such a behavior is not guaranteed:</p>\n\n<pre><code>use rayon::prelude::*; // 1.0.3\n\nuse std::thread;\n\nfn main() {\n    let ids: Vec&lt;_&gt; = (0..2)\n        .into_par_iter()\n        .map(|_| thread::current().id())\n        .collect();\n    println!(\"{:?}\", ids);\n}\n</code></pre>\n\n<p>Various runs of the program show:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[ThreadId(1), ThreadId(2)]\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>[ThreadId(1), ThreadId(1)]\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>[ThreadId(2), ThreadId(1)]\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>[ThreadId(2), ThreadId(2)]\n</code></pre>\n\n<hr>\n\n<p>That being said, you should perform your own benchmarking. By default, Rayon creates a global threadpool and uses work stealing to balance the work between the threads. The threadpool is a one-time setup cost per process and work-stealing helps ensure that work only crosses thread boundaries when needed. This is why there are outputs above where both use the same thread.</p>\n"}, {"tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 0, "last_activity_date": 1550091529, "last_edit_date": 1592644375, "creation_date": 1550091529, "answer_id": 54679322, "question_id": 54605692, "link": "https://stackoverflow.com/questions/54605692/will-rayon-avoid-spawning-threads-for-a-small-amount-of-work/54679322#54679322", "title": "Will Rayon avoid spawning threads for a small amount of work?", "body": "<p>Weight API was deprecated in favor of <a href=\"https://github.com/rayon-rs/rayon/pull/260\" rel=\"nofollow noreferrer\">split length control</a>.\nBy default Rayon will split at <strong>every item</strong>, effectively making all computation parallel, this behavior can be configured via\n<a href=\"https://docs.rs/rayon/1.0.3/rayon/iter/trait.IndexedParallelIterator.html#method.with_min_len\" rel=\"nofollow noreferrer\">with_min_len</a>.</p>\n<blockquote>\n<p>Sets the minimum length of iterators desired to process in each thread. Rayon will not split any smaller than this length, but of course an iterator could already be smaller to begin with.</p>\n<p>Producers like zip and interleave will use greater of the two minimums. Chained iterators and iterators inside flat_map may each use their own minimum length.</p>\n</blockquote>\n<pre><code>extern crate rayon; // 1.0.3\nuse rayon::prelude::*;\nuse std::thread;\n\nfn main() {\n    println!(&quot;Main thread: {:?}&quot;, thread::current().id());\n    let ids: Vec&lt;_&gt; = (0..4)\n        .into_par_iter()\n        .with_min_len(4)\n        .map(|_| thread::current().id())\n        .collect();\n    println!(&quot;Iterations: {:?}&quot;, ids);\n}\n</code></pre>\n<p>Output:</p>\n<pre><code>Main thread: ThreadId(0)\nIterations: [ThreadId(0), ThreadId(0), ThreadId(0), ThreadId(0)]\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6e9b756eb8c2c86677f4aa3ee059771a\" rel=\"nofollow noreferrer\">Playground</a> (thanks to @shepmaster for code)</p>\n"}], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 693, "favorite_count": 0, "accepted_answer_id": 54679322, "answer_count": 2, "score": 2, "last_activity_date": 1550091529, "creation_date": 1549711048, "last_edit_date": 1549732136, "question_id": 54605692, "link": "https://stackoverflow.com/questions/54605692/will-rayon-avoid-spawning-threads-for-a-small-amount-of-work", "title": "Will Rayon avoid spawning threads for a small amount of work?", "body": "<p>I was thinking about using Rayon's parallel iterator feature, but I'm concerned about performance for iterating over small collections. </p>\n\n<p>Parallelism overhead sometimes can cause a slowdown on small collections. Iterating over 2 elements is slower if I do the necessary preparations for multi-threading than if I used a single-threaded version. If I have 40 million elements, parallelism will give me a linear performance improvement.</p>\n\n<p>I read about <a href=\"https://docs.rs/rayon/0.6.0/rayon/par_iter/trait.ParallelIterator.html#method.weight\" rel=\"nofollow noreferrer\"><code>ParallelIterator::weight</code> (0.6.0)</a>, but I don't understand if I should optimize such corner cases for small collections or if Rayon is smart and handles everything under the under the hood.</p>\n\n<pre><code>if collection_is_small() {\n    // Run single threaded version... \n} else {\n    // Use parallel iterator.\n}\n</code></pre>\n\n<p>The <a href=\"https://docs.rs/rayon/0.6.0/rayon/par_iter/trait.ParallelIterator.html#method.weight\" rel=\"nofollow noreferrer\"><code>ParallelIterator::weight</code></a> of the processed element is 1. See relevant documentation for good definition, but processing of a single element is cheap.</p>\n\n<p>Google sent me to an old documentation page. <code>Weight</code> was deprecated and <a href=\"https://github.com/rayon-rs/rayon/blob/master/RELEASES.md#rayon-080\" rel=\"nofollow noreferrer\">removed</a> since version 0.8.0.</p>\n"}, {"tags": ["performance", "optimization", "rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 3, "creation_date": 1549687712, "post_id": 54603226, "comment_id": 96002390, "body": "How about this: <code>v1.iter().zip(v2).map(|(&amp;i1, &amp;i2)| i1 * i2).collect()</code>?"}, {"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 0, "creation_date": 1549688414, "post_id": 54603226, "comment_id": 96002490, "body": "Consider vectorized operations. Perhaps it might be beneficial to use a linear algebra or numeric array library. &lt;s&gt;You&#39;re also unnecessarily dynamically resizing the <code>Vec</code> with multiple calls to <code>.push</code>.&lt;/s&gt;"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 0, "creation_date": 1549688512, "post_id": 54603226, "comment_id": 96002510, "body": "@MateenUlhaq <code>Vec::with_capacity</code> preallocates enough memory; the <code>Vec</code> should never have to be resized here. <code>Iterator::collect</code> also uses <code>Vec::with_capacity</code>."}, {"owner": {"reputation": 733, "user_id": 7061703, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e0c5bf45cdd05865a0f0111981adfdc?s=128&d=identicon&r=PG&f=1", "display_name": "ryn1x", "link": "https://stackoverflow.com/users/7061703/ryn1x"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1549689429, "post_id": 54603226, "comment_id": 96002661, "body": "@Francis Gagn&#233; that worked! Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1549723095, "post_id": 54603724, "comment_id": 96009564, "body": "<a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.zip_eq\" rel=\"nofollow noreferrer\"><code>zip_eq</code></a>"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1549692559, "creation_date": 1549692559, "answer_id": 54603724, "question_id": 54603226, "link": "https://stackoverflow.com/questions/54603226/how-can-i-improve-the-performance-of-element-wise-multiplication-in-rust/54603724#54603724", "title": "How can I improve the performance of element-wise multiplication in Rust?", "body": "<p>When you use the indexer operator on a <code>Vec</code> or a slice, the compiler has to check whether the index is in bounds or out of bounds.</p>\n\n<p>However, when you use iterators, these bounds checks are omitted, because the iterators have been carefully written to ensure that they never read out of bounds. Furthermore, due to how borrowing works in Rust, a data structure cannot be mutated while an iterator exists over that data structure (except via that iterator itself), so it's impossible for the valid bounds to change during iteration.</p>\n\n<p>Since you are iterating over two different data structures concurrently, you'll want to use the <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.zip\" rel=\"noreferrer\"><code>zip</code></a> iterator adapter. <code>zip</code> stops as soon as one iterator is exhausted, so it's still relevant to validate that both vectors have the same length. <code>zip</code> produces an iterator of tuples, where each tuple contains the items at the same position in the two original iterators. Then you can use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.map\" rel=\"noreferrer\"><code>map</code></a> to transform each tuple into the product of the two values. Finally, you'll want to <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.collect\" rel=\"noreferrer\"><code>collect</code></a> the new iterator produced by <code>map</code> into a <code>Vec</code> which you can then return from your function. <code>collect</code> uses <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.size_hint\" rel=\"noreferrer\"><code>size_hint</code></a> to preallocate memory for the vector using <code>Vec::with_capacity</code>.</p>\n\n<pre><code>/// element-wise multiplication for vecs\npub fn vec_mul&lt;T&gt;(v1: &amp;[T], v2: &amp;[T]) -&gt; Vec&lt;T&gt;\nwhere\n    T: std::ops::Mul&lt;Output = T&gt; + Copy,\n{\n    if v1.len() != v2.len() {\n        panic!(\"Cannot multiply vectors of different lengths!\")\n    }\n\n    v1.iter().zip(v2).map(|(&amp;i1, &amp;i2)| i1 * i2).collect()\n}\n</code></pre>\n\n<hr>\n\n<p>Note: I've changed the signature to take slices instead of references to vectors. See <a href=\"https://stackoverflow.com/q/40006219/234590\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a> for more information.</p>\n"}], "owner": {"reputation": 733, "user_id": 7061703, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e0c5bf45cdd05865a0f0111981adfdc?s=128&d=identicon&r=PG&f=1", "display_name": "ryn1x", "link": "https://stackoverflow.com/users/7061703/ryn1x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 720, "favorite_count": 0, "accepted_answer_id": 54603724, "answer_count": 1, "score": 6, "last_activity_date": 1549731768, "creation_date": 1549687113, "last_edit_date": 1549731768, "question_id": 54603226, "link": "https://stackoverflow.com/questions/54603226/how-can-i-improve-the-performance-of-element-wise-multiplication-in-rust", "title": "How can I improve the performance of element-wise multiplication in Rust?", "body": "<p>I will be doing element-wise multiplication on multiple vectors with 10^6+ elements. This is being flagged in profiling as one of the slowest parts of my code, so how can I improve it?</p>\n\n<pre><code>/// element-wise multiplication for vecs\npub fn vec_mul&lt;T&gt;(v1: &amp;Vec&lt;T&gt;, v2: &amp;Vec&lt;T&gt;) -&gt; Vec&lt;T&gt;\nwhere\n    T: std::ops::Mul&lt;Output = T&gt; + Copy,\n{\n    if v1.len() != v2.len() {\n        panic!(\"Cannot multiply vectors of different lengths!\")\n    }\n    let mut out: Vec&lt;T&gt; = Vec::with_capacity(v1.len());\n    for i in 0..(v1.len()) {\n        out.push(v1[i] * v2[i]);\n    }\n    out\n}\n</code></pre>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 421, "user_id": 7347548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2d3ca59ba3af015f001193bc70657cd?s=128&d=identicon&r=PG&f=1", "display_name": "Ali Zeinali", "link": "https://stackoverflow.com/users/7347548/ali-zeinali"}, "edited": false, "score": 0, "creation_date": 1549667207, "post_id": 54600588, "comment_id": 95999155, "body": "why just don&#39;t implement Add in crate where you defined Vec3? Because as you can find <a href=\"https://stackoverflow.com/questions/29789877/can-not-implement-trait-from-another-crate-for-generic-type-from-another-crate-p?rq=1\">here</a> there is now way to do such thing in rust."}, {"owner": {"reputation": 1684, "user_id": 9339801, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9129ca0bc0fff14fc84a290529f14b14?s=128&d=identicon&r=PG", "display_name": "oniondomes", "link": "https://stackoverflow.com/users/9339801/oniondomes"}, "reply_to_user": {"reputation": 421, "user_id": 7347548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2d3ca59ba3af015f001193bc70657cd?s=128&d=identicon&r=PG&f=1", "display_name": "Ali Zeinali", "link": "https://stackoverflow.com/users/7347548/ali-zeinali"}, "edited": false, "score": 0, "creation_date": 1549667278, "post_id": 54600588, "comment_id": 95999171, "body": "@ali-zeinali thats&#39;s what I do. I&#39;m not really sure, but I think the problem is I use <code>Float</code> trait wrong in this case."}, {"owner": {"reputation": 421, "user_id": 7347548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2d3ca59ba3af015f001193bc70657cd?s=128&d=identicon&r=PG&f=1", "display_name": "Ali Zeinali", "link": "https://stackoverflow.com/users/7347548/ali-zeinali"}, "edited": false, "score": 0, "creation_date": 1549669130, "post_id": 54600588, "comment_id": 95999583, "body": "would <code>let res = vec + 1.0</code> solve your problem?"}, {"owner": {"reputation": 1684, "user_id": 9339801, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9129ca0bc0fff14fc84a290529f14b14?s=128&d=identicon&r=PG", "display_name": "oniondomes", "link": "https://stackoverflow.com/users/9339801/oniondomes"}, "reply_to_user": {"reputation": 421, "user_id": 7347548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2d3ca59ba3af015f001193bc70657cd?s=128&d=identicon&r=PG&f=1", "display_name": "Ali Zeinali", "link": "https://stackoverflow.com/users/7347548/ali-zeinali"}, "edited": false, "score": 0, "creation_date": 1549669333, "post_id": 54600588, "comment_id": 95999629, "body": "@AliZeinali I got this implementation, but I\u2019d like it to work both ways. Thanks for the link btw. I\u2019ll take a look"}, {"owner": {"reputation": 421, "user_id": 7347548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2d3ca59ba3af015f001193bc70657cd?s=128&d=identicon&r=PG&f=1", "display_name": "Ali Zeinali", "link": "https://stackoverflow.com/users/7347548/ali-zeinali"}, "edited": false, "score": 2, "creation_date": 1549670948, "post_id": 54600588, "comment_id": 95999995, "body": "Seems it is impossible to use <code>let res = 1.0 + vec</code> because you have to implement <code>Add&lt;Vect3&lt;T&gt;&gt;</code> trait for <code>Float</code> while it&#39;s not allowed in rust"}, {"owner": {"reputation": 421, "user_id": 7347548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2d3ca59ba3af015f001193bc70657cd?s=128&d=identicon&r=PG&f=1", "display_name": "Ali Zeinali", "link": "https://stackoverflow.com/users/7347548/ali-zeinali"}, "edited": false, "score": 0, "creation_date": 1549671367, "post_id": 54600588, "comment_id": 96000069, "body": "And I don&#39;t understand while <code>let res = 1.0 + vec</code> would be same as <code>let res = vec + 1.0 </code> why you insist to implement such a thing?"}, {"owner": {"reputation": 1684, "user_id": 9339801, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9129ca0bc0fff14fc84a290529f14b14?s=128&d=identicon&r=PG", "display_name": "oniondomes", "link": "https://stackoverflow.com/users/9339801/oniondomes"}, "reply_to_user": {"reputation": 421, "user_id": 7347548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2d3ca59ba3af015f001193bc70657cd?s=128&d=identicon&r=PG&f=1", "display_name": "Ali Zeinali", "link": "https://stackoverflow.com/users/7347548/ali-zeinali"}, "edited": false, "score": 0, "creation_date": 1549714500, "post_id": 54600588, "comment_id": 96007420, "body": "@AliZeinali the idea behind that was the addition operation working both ways on primitives, so I though it would be nice to have the same behaviour on vectors as well"}], "owner": {"reputation": 1684, "user_id": 9339801, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9129ca0bc0fff14fc84a290529f14b14?s=128&d=identicon&r=PG", "display_name": "oniondomes", "link": "https://stackoverflow.com/users/9339801/oniondomes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 871, "favorite_count": 0, "closed_date": 1549676599, "answer_count": 0, "score": 3, "last_activity_date": 1549676648, "creation_date": 1549661909, "last_edit_date": 1549675957, "question_id": 54600588, "link": "https://stackoverflow.com/questions/54600588/how-to-implement-add-trait-for-another-trait-from-external-crate", "closed_reason": "Duplicate", "title": "How to implement Add trait for another trait from external crate", "body": "<p>I am trying to implement a <code>Vector</code> struct. It is declared as follows:</p>\n\n<pre><code>use num_traits::Float;\n\npub struct Vec3&lt;T&gt; {\n    pub x: T,\n    pub y: T,\n    pub z: T,\n}\n\nimpl&lt;T&gt; Vec3&lt;T&gt;\nwhere\n    T: Float,\n{\n    pub fn new(x: T, y: T, z: T) -&gt; Vec3&lt;T&gt; {\n        Vec3 { x, y, z }\n    }\n}\n</code></pre>\n\n<p>I would like to have the ability to add an instance of this struct to a generic float value. I think in my case I would be anything that implements the <code>Float</code> trait:</p>\n\n<pre><code>let vec = Vec3::new(1.0, 1.0, 1.0);\nlet res = 1.0 + vec; // this should work for both f32 and f64\n</code></pre>\n\n<p>I was going to just implement the <code>Add</code> trait for <code>Float</code>, so I wrote:</p>\n\n<pre><code>use std::ops::Add;\n\nimpl&lt;T: Float&gt; Add&lt;Vec3&lt;T&gt;&gt; for T {\n    type Output = Vec3&lt;T&gt;;\n\n    fn add(self, other: Vec3&lt;T&gt;) -&gt; Vec3&lt;T&gt; {\n        Vec3::new(self + other.x, self + other.y, self + other.z)\n    }\n}\n</code></pre>\n\n<p>Which gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g. `MyStruct&lt;T&gt;`)\n  --&gt; src/lib.rs:20:1\n   |\n20 | impl&lt;T: Float&gt; Add&lt;Vec3&lt;T&gt;&gt; for T {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n   |\n   = note: only traits defined in the current crate can be implemented for a type parameter\n</code></pre>\n\n<p>The closest related solution I could find online is the same that error message suggest: to wrap the <code>Float</code> trait with a struct, which does not fit with my requirements. I also tried to declare a local trait that contains <code>Float</code>, but that didn't really help.</p>\n"}, {"tags": ["webpack", "rust", "webassembly", "wasm-bindgen"], "answers": [{"tags": [], "owner": {"reputation": 94, "user_id": 1011395, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d9ec62091bcb2130d5fad343e75f2899?s=128&d=identicon&r=PG", "display_name": "Jonathan Reyes", "link": "https://stackoverflow.com/users/1011395/jonathan-reyes"}, "is_accepted": true, "score": 2, "last_activity_date": 1549928264, "creation_date": 1549928264, "answer_id": 54640729, "question_id": 54598317, "link": "https://stackoverflow.com/questions/54598317/rust-wasm-module-not-found-error-cant-resolve-env-in/54640729#54640729", "title": "Rust/Wasm: Module not found: Error: Can&#39;t resolve &#39;env&#39; in", "body": "<p>It looks like this could be an issue with the C code used by the <code>clear_on_drop</code> dependency, as mentioned <a href=\"https://github.com/rustwasm/wasm-bindgen/issues/763\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Try enabling the <code>nightly</code> feature on the <code>schnorrkel</code> crate, which in turn enables the <code>nightly</code> feature on <code>clear_on_drop</code> that disables its usage of C. On your <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nwasm-bindgen = \"0.2\"\nschnorrkel = { git = \"https://github.com/w3f/schnorrkel.git\", features = [\"nightly\"] }\n</code></pre>\n\n<p>Alternatively, you can use <code>wasm2wat</code> (there's <a href=\"https://webassembly.github.io/wabt/demo/wasm2wat/\" rel=\"nofollow noreferrer\">an online version</a>) on your compiled <code>.wasm</code> binary to inspect which <code>env</code> import is failing.</p>\n"}], "owner": {"reputation": 999, "user_id": 3798072, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/9JV4G.jpg?s=128&g=1", "display_name": "kianenigma", "link": "https://stackoverflow.com/users/3798072/kianenigma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1648, "favorite_count": 0, "accepted_answer_id": 54640729, "answer_count": 1, "score": 1, "last_activity_date": 1549928264, "creation_date": 1549650669, "last_edit_date": 1549708230, "question_id": 54598317, "link": "https://stackoverflow.com/questions/54598317/rust-wasm-module-not-found-error-cant-resolve-env-in", "title": "Rust/Wasm: Module not found: Error: Can&#39;t resolve &#39;env&#39; in", "body": "<p>I am trying to port a <a href=\"https://github.com/w3f/schnorrkel.git\" rel=\"nofollow noreferrer\">wrapper for this crate</a> into wasm. My current toolchain is: </p>\n\n<ul>\n<li>wasm-pack</li>\n<li>webpack</li>\n<li>wasm-bindgen</li>\n</ul>\n\n<p>A bit more info on the build system:</p>\n\n<p>In my rust crate (which is a <code>--lib</code> crate), I only call <code>wasm-pack build --target browser</code>. This will create a <code>pkg</code> folder containing wasm blobs and associated js files. No complaints from the compiler here. </p>\n\n<p>Then, inside <code>pkg</code>, I run <code>npm link</code> (just once).</p>\n\n<p>Then, <code>cargo generate --git https://github.com/rustwasm/wasm-pack-template</code> creates the required web-app boilerplate. Inside the folder generated by this command, I run <code>npm link schnorrkel-js</code> to make it visible. <code>npm run start</code> runs the webpack dev server.  </p>\n\n<p>initial tests like binding simple calculation functions and alert work fine. </p>\n\n<p>Everything breaks when I start using <em>some</em> (not <strong>any</strong>) functions from the mentioned crate (<a href=\"https://github.com/w3f/schnorrkel/blob/master/src/sign.rs#L190\" rel=\"nofollow noreferrer\">example</a>). Unfortunately, the error message that I get is quite un-informative and does not help at all:</p>\n\n<pre><code>Entrypoint main = bootstrap.js\n[../pkg/schnorrkel_js.js] 3.53 KiB {0} [built]\n[../pkg/schnorrkel_js_bg.wasm] 93.7 KiB {0} [built]\n    + 27 hidden modules\n\nERROR in ../pkg/schnorrkel_js_bg.wasm\nModule not found: Error: Can't resolve 'env' in '.../schnorrkel-js/pkg'\n @ ../pkg/schnorrkel_js_bg.wasm\n @ ../pkg/schnorrkel_js.js\n @ ./index.js\n @ ./bootstrap.js\n @ multi (webpack)-dev-server/client?http://localhost:8080 ./bootstrap.js\n</code></pre>\n\n<p>What is the cause of this? I have a strong guess that some underlying functionality is not portable to wasm but which one exactly, why, and what is the error message trying to say? </p>\n\n<hr>\n\n<p>notes: </p>\n\n<ul>\n<li><p>I am using the latest rust nightly version (<code>rustc 1.34.0-nightly (d17318011 2019-02-07)</code>)</p></li>\n<li><p>rest of the setup steps are taken directly from the <a href=\"https://rustwasm.github.io/book/game-of-life/setup.html\" rel=\"nofollow noreferrer\">Rust and Webassembly book</a>. </p></li>\n<li><p>Cargo.toml</p></li>\n</ul>\n\n<pre><code>[package]\nname = \"schnorrkel-js\"\nedition = \"2018\"\n\n[lib]\ncrate-type = [\"cdylib\"]\n\n[dependencies]\nwasm-bindgen = \"0.2\"\nschnorrkel = { git = \"https://github.com/w3f/schnorrkel.git\" }\n</code></pre>\n\n<p>Example code: </p>\n\n<pre><code>#[wasm_bindgen] \npub fn verify(signature: &amp;[u8], message: &amp;[u8], pubkey: &amp;[u8]) -&gt; bool {\n    let sig = match Signature::from_bytes(signature) {\n        Ok(some_sig) =&gt; some_sig,\n        Err(_) =&gt; return false\n    };\n    let pk = match PublicKey::from_bytes(pubkey) {\n        Ok(some_pk) =&gt; some_pk,\n        Err(_) =&gt; return false\n    };\n\n    // works up until here if I return a boolean. \n    // calling this breaks everything.\n    pk.verify_simple(SIGNING_CTX, message, &amp;sig)\n}\n\n</code></pre>\n"}, {"tags": ["rust", "closures", "borrow-checker"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549643295, "post_id": 54596442, "comment_id": 95989208, "body": "<code>row_minmax[row_index]:MinMax</code> This is not valid. I suggest you read <a href=\"https://doc.rust-lang.org/book/ch06-00-enums.html\" rel=\"nofollow noreferrer\">the chapter of The Book about <code>enum</code>s and pattern matching</a>."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549643405, "post_id": 54596442, "comment_id": 95989268, "body": "@AndreyTyukin It&#39;s supposed index (row_index) a vector (row_minmax) and get the 0 element of the MinMax tuple. That&#39;s the plan, anyway"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549643504, "post_id": 54596442, "comment_id": 95989332, "body": "@Alex But what is the colon <code>:</code> doing there? It&#39;s definitely not a type ascription. It doesn&#39;t look like anything at all, it&#39;s just unparsable stream of tokens. And it also doesn&#39;t look like a typo either, because you repeated it twice..."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549643588, "post_id": 54596442, "comment_id": 95989384, "body": "@AndreyTyukin I thought it was supposed to get the MinMax out of the MinMaxResult enum. I&#39;m very new to this."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549643596, "post_id": 54596442, "comment_id": 95989388, "body": "@Alex the enum can be either one of 3 variants. You can&#39;t just ignore the 2 that you don&#39;t like like this."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549643641, "post_id": 54596442, "comment_id": 95989416, "body": "@mcarton Ok, would you mind being a bit more descriptive about how this can be done. I&#39;m very new to rust"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549643691, "post_id": 54596442, "comment_id": 95989451, "body": "Did you mean something like <code>match (row_minmax[row_idx], col_minmax[col_idx]) { (MinMax(a, _b), MinMax(_c, d)) =&gt; &#47;* do sth with &#39;a&#39; and &#39;d&#39; *&#47; }</code>? Or maybe <code>if let (MinMax(a, _), MinMax(_, d)) = (row_minmax[row_idx], col_minmax[col_idx]) { &#47;* do sth. with &#39;a&#39; and &#39;d&#39; *&#47; }</code>."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549643770, "post_id": 54596442, "comment_id": 95989499, "body": "@AndreyTyukin Yep, that looks promising"}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "edited": false, "score": 0, "creation_date": 1549646111, "post_id": 54596442, "comment_id": 95990741, "body": "Does anybody want to bother explaining the reason for the close votes, and the downvote?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549648432, "post_id": 54596442, "comment_id": 95991781, "body": "I did not downvote, and I retracted my close vote because I decided it was the wrong reason. However, when you&#39;re having trouble, if your normal course of action is to <i>invent syntax</i> and ask on SO why it doesn&#39;t work, you&#39;re likely to have a bad time. <code>enum</code>s are explained in the book and it tells you that you have to use <code>match</code> to get values out."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549648522, "post_id": 54596442, "comment_id": 95991823, "body": "I think this is a duplicate of <a href=\"https://stackoverflow.com/q/37516448/3650362\">Accessing tuple from within an enum</a>"}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549648577, "post_id": 54596442, "comment_id": 95991844, "body": "@trentcl I appreciate your explanation, but in my defence, I looked at this: <a href=\"https://doc.rust-lang.org/book/ch06-02-match.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch06-02-match.html</a> which does give the example: <code>Coin::Penny</code>. I appreciate that I was incorrect, but I didn&#39;t completely pluck the syntax out of thin air."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 1, "creation_date": 1549648585, "post_id": 54596442, "comment_id": 95991847, "body": "@Alex I voted to close as &quot;Unclear what you&#39;re asking&quot;, because the code contains variations of <code>row_minmax[row_index]:MinMax.0</code> multiple times, which looks like an meaningless token sequence. While I didn&#39;t downvote, the reason seems obvious: 1) it&#39;s impossible to envision what one could possibly have <i>researched</i> to come up with this character sequence -&gt; <i>&quot;does not show research effort&quot;</i>; 2) As already explained, it&#39;s <i>&quot;unclear&quot;</i>; 3) The probability that anyone else will come up with this or similar character sequence is virtually zero, so this question is likely <i>&quot;not useful&quot;</i>."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549648757, "post_id": 54596442, "comment_id": 95991910, "body": "@Alex Can you please point out at least one occurrence of a single standing <code>:</code> separating two expressions in the entire book chapter that you just linked? Or anything at least vaguely similar to <code>row_minmax[row_index]:MinMax.0</code>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549648765, "post_id": 54596442, "comment_id": 95991913, "body": "It would have been a little more understandable, then, if you had written <code>row_minmax[row_index]::MinMax.0</code>. Even though it&#39;s not correct (and demonstrates some kind of confusion about what enum variants are), it&#39;s not as completely out of left field as <code>:</code>."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549648833, "post_id": 54596442, "comment_id": 95991952, "body": "@AndreyTyukin I&#39;m not going to argue with you. It was clearly a mistake. If I knew the correct syntax, I wouldn&#39;t be asking a question, would I?"}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549648869, "post_id": 54596442, "comment_id": 95991975, "body": "@trentcl Yes, I did try that, and cargo complained, so I tried with a single colon, and cargo complained. I just posted the second iteration, for which I apologise, but I did try the former first."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549649648, "post_id": 54596442, "comment_id": 95992317, "body": "@Alex I&#39;m not trying to argue with anyone, I&#39;m just responding to the little inbox notifications in a hopefully somewhat helpful way. Are you sure that you posted the changes of your &quot;second iteration&quot;? There are no edits on this post, and no recent changes. Was the hint with <code>if let (MinMax(a, b), MinMax(c, d)) = (row[idx], col[some_other_idx]) { ... }</code> helpful in any way, or have you just ignored that? I think this question could be greatly improved if it had an <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>`."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549649810, "post_id": 54596442, "comment_id": 95992387, "body": "@AndreyTyukin, sorry, when I say second iteration, I mean when I was writing the code myself, on my machine. I first tried with <code>::</code>, and it failed, so then I tried with <code>:</code>, and it failed, so then I went to SO, and I happened to paste the second guess into my question. Your suggestion was very helpful (I did post &#39;Yep, that looks promising&#39; underneath it), so thank you very much for that. I am still getting problems with the borrow checker, but it has fixed the immediate problem in this question. Thank you."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549650011, "post_id": 54596442, "comment_id": 95992504, "body": "@Alex Well, if you are getting borrow-checker errors, then it means that you definitely got through the parsing and the symbol resolution phase, so it would be really great if you could edit the question and provide the updated code together with the borrow-checker errors. <i>That</i> would be the right way to get rid of downvotes and close votes."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 1, "creation_date": 1549650202, "post_id": 54596442, "comment_id": 95992613, "body": "@AndreyTyukin Ok, will do."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549651866, "post_id": 54596442, "comment_id": 95993331, "body": "@AndreyTyukin I&#39;ve added the rest of the function code in a rust playground, as I think the borrow error comes from further up in the code than this question."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 2, "creation_date": 1549655821, "post_id": 54596442, "comment_id": 95995013, "body": "@Alex In the future, please provide all the necessary details in your question. Links to the Playground are a nice extra, but it&#39;s insufficient. I now extracted an MCVE out of your code, and also updated the Playground gist. It will now probably get closed as a duplicate of something, but this is roughly what&#39;s expected when someone requests an MCVE (or rather, you shouldn&#39;t wait until someone downvotes and asks for MCVE, just provide it right away)."}], "answers": [{"tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": true, "score": 2, "last_activity_date": 1549659254, "creation_date": 1549659254, "answer_id": 54600044, "question_id": 54596442, "link": "https://stackoverflow.com/questions/54596442/rust-errore0373-closure-may-outlive-the-current-function-but-it-borrows-ite/54600044#54600044", "title": "Rust error[E0373]: closure may outlive the current function, but it borrows `iteration_index`", "body": "<p>Your linked gist has a whole bunch of the typical \"wrestling with the borrow-checker\" errors. Here is how to solve them:</p>\n\n<ul>\n<li>use <code>move</code> as the compiler proposes, but make sure that all moved values implement <code>Copy</code>.</li>\n<li>Iteration indices of type <code>usize</code> already implement <code>Copy</code>, so there is nothing to do here.</li>\n<li>The vectors are problematic, so just take immutable references of them, and pass the immutable references into the closures instead.</li>\n<li>Your <code>into_par_iter</code> causes an unrelated ownership problem. Just use <code>par_iter</code> instead, then you will iterate over references, not the actual values, and you will not destroy your matrix while you are iterating over it.</li>\n</ul>\n\n<p>This here compiles:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::MinMaxResult; // itertools = \"0.8.0\"\nuse itertools::MinMaxResult::*;\nuse itertools::Itertools;\nuse rayon::prelude::*; // rayon = \"1.0.3\"\n\npub fn find_saddle_points(input: &amp;[Vec&lt;u64&gt;]) -&gt; Vec&lt;(usize, usize)&gt; {\n    let flattened_matrix: Vec&lt;(&amp;u64)&gt; = input.into_par_iter().flatten().collect();\n    if flattened_matrix.is_empty() {\n        vec![]\n    } else {\n        let num_rows = input.len();\n        let num_cols = input[0].len();\n\n        let row_minmax: Vec&lt;MinMaxResult&lt;&amp;u64&gt;&gt; = input\n            .iter()\n            .map(|row| row.iter().minmax())\n            .collect::&lt;Vec&lt;MinMaxResult&lt;&amp;u64&gt;&gt;&gt;();\n\n        let input_tranpose: Vec&lt;Vec&lt;u64&gt;&gt; = (0_usize..num_cols)\n            .into_par_iter()\n            .map(|col_index| {\n                (0_usize..num_rows)\n                    .map(|row_index| input[row_index][col_index])\n                    .collect::&lt;Vec&lt;u64&gt;&gt;()\n            })\n            .collect();\n\n        // don't take ownership! \n        // Use `par_iter` instead, then `col` will be a reference,\n        // and the borrow-checker is happy.\n        let col_minmax: Vec&lt;MinMaxResult&lt;&amp;u64&gt;&gt; = input_tranpose\n            .par_iter()   \n            .map(|col| col.iter().minmax())\n            .collect();\n\n        let rmm_ref = &amp;row_minmax;\n        let cmm_ref = &amp;col_minmax;\n        (0_usize..num_rows)\n            .flat_map(|row_index| {\n                (0_usize..num_cols).filter_map(move |col_index| {\n                    match (rmm_ref[row_index], cmm_ref[col_index]) {\n                        (MinMax(a, _b), MinMax(_c, d)) if a == d =&gt; \n                            Some((row_index, col_index)),\n                        (MinMax(_a, b), MinMax(c, _d)) if b == c =&gt; \n                            Some((row_index, col_index)),\n                        _ =&gt; None,\n                    }\n                })\n            })\n            .collect::&lt;Vec&lt;(usize, usize)&gt;&gt;()\n    }\n}\n\nfn main(){}\n</code></pre>\n"}], "owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 807, "favorite_count": 0, "accepted_answer_id": 54600044, "answer_count": 1, "score": 0, "last_activity_date": 1549677084, "creation_date": 1549642820, "last_edit_date": 1549677084, "question_id": 54596442, "link": "https://stackoverflow.com/questions/54596442/rust-errore0373-closure-may-outlive-the-current-function-but-it-borrows-ite", "title": "Rust error[E0373]: closure may outlive the current function, but it borrows `iteration_index`", "body": "<p>I have two vectors of <a href=\"https://docs.rs/itertools/0.8.0/itertools/enum.MinMaxResult.html\" rel=\"nofollow noreferrer\"><code>itertools::MinMaxResult</code></a>. I need to iterate through the first vector, and for each element, iterate through the second vector, checking if the minimum of the first vector is equal to the maximum of any elements of the second vector, and vice versa. Here is an MCVE of what I tried:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::MinMaxResult; // itertools = \"0.8.0\"\nuse itertools::MinMaxResult::*;\n\npub fn mcve() -&gt; Vec&lt;(usize, usize)&gt; {\n\n    // dummy variables to make the MCVE compile\n    let num_rows = 0;\n    let num_cols = 0;\n    let row_minmax: Vec&lt;MinMaxResult&lt;&amp;u64&gt;&gt; = vec![];\n    let col_minmax: Vec&lt;MinMaxResult&lt;&amp;u64&gt;&gt; = vec![];\n\n    // Problematic code:\n    (0..num_rows)\n            .flat_map(|row_index| {\n                (0_usize..num_cols).filter_map(|col_index| {\n                    match (row_minmax[row_index], col_minmax[col_index]) {\n                        (MinMax(a, _b), MinMax(_c, d)) if a == d =&gt;\n                            Some((row_index, col_index)),\n                        (MinMax(_a, b), MinMax(c, _d)) if b == c =&gt;\n                            Some((row_index, col_index)),\n                        _ =&gt; None,\n                    }\n                })\n            })\n            .collect::&lt;Vec&lt;(usize, usize)&gt;&gt;()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c67c37b5172388c1f8830ed871b4397d\" rel=\"nofollow noreferrer\">Link to the Playground with full code</a></p>\n\n<p>I'm getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `row_index`,\nwhich is owned by the current function\n  --&gt; src/main.rs:15:48\n   |\n15 |                 (0_usize..num_cols).filter_map(|col_index| {\n   |                                                ^^^^^^^^^^^ may outlive \n                                                    borrowed value `row_index`\n16 |                     match (row_minmax[row_index], col_minmax[col_index]) {\n   |                                       --------- `row_index` is borrowed here\n   |\nnote: closure is returned here\n  --&gt; src/main.rs:15:17\n   |\n15 | /                 (0_usize..num_cols).filter_map(|col_index| {\n16 | |                     match (row_minmax[row_index], col_minmax[col_index]) {\n17 | |                         (MinMax(a, _b), MinMax(_c, d)) if a == d =&gt; \n                                   Some((row_index, col_index)),\n18 | |                         (MinMax(_a, b), MinMax(c, _d)) if b == c =&gt; \n                                   Some((row_index, col_index)),\n19 | |                         _ =&gt; None,\n20 | |                     }\n21 | |                 })\n   | |__________________^\nhelp: to force the closure to take ownership of `row_index` \n(and any other referenced variables), use the `move` keyword\n   |\n15 |                 (0_usize..num_cols).filter_map(move |col_index| {\n   |                                                ^^^^^^^^^^^^^^^^\n\n</code></pre>\n\n<p>If I add a <code>move</code>, as the compiler suggests, I get <em>twice as many</em> errors, so that doesn't help. How do I get rid of this error?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 18385, "user_id": 1773434, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9HhFs.png?s=128&g=1", "display_name": "Govind Parmar", "link": "https://stackoverflow.com/users/1773434/govind-parmar"}, "is_accepted": false, "score": 19, "last_activity_date": 1549639098, "creation_date": 1549639098, "answer_id": 54595409, "question_id": 54595345, "link": "https://stackoverflow.com/questions/54595345/what-does-let-x-x-do-in-rust/54595409#54595409", "title": "What does &#39;let x = x&#39; do in Rust?", "body": "<p>The statement <code>let var = var;</code> makes <code>var</code> immutable and bound to its current value. <code>fields</code> was declared as <code>mut</code> earlier.</p>\n"}, {"comments": [{"owner": {"reputation": 33796, "user_id": 45525, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/TKzgD.png?s=128&g=1", "display_name": "Synesso", "link": "https://stackoverflow.com/users/45525/synesso"}, "edited": false, "score": 45, "creation_date": 1549681560, "post_id": 54595440, "comment_id": 96001601, "body": "Or &quot;upgrading&quot;, depending upon your perspective."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 8, "creation_date": 1550047715, "post_id": 54595440, "comment_id": 96122175, "body": "IMO your another way to write that is the way to go: the mutable variable is scoped the time we need to use it, and then it is moved. It is better semantically."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551295358, "post_id": 54595440, "comment_id": 96592459, "body": "@DarthBoiethios Does one or the other changes anything to compiled code? Like adding an additional, useless instruction? Or enabling more aggressive optimisations by the compiler based on immutability assumptions?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 1, "creation_date": 1551296856, "post_id": 54595440, "comment_id": 96593143, "body": "@iago-lito Honestly, I&#39;m not sure, but my uneducated guess is that is does not change anything."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 1, "creation_date": 1551298438, "post_id": 54595440, "comment_id": 96593839, "body": "@iago-lito <a href=\"https://github.com/rust-lang/rust/issues/58622\" rel=\"nofollow noreferrer\">Right now it actually does!</a> However this is considered a bug and is likely to be fixed at some point."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1551299447, "post_id": 54595440, "comment_id": 96594295, "body": "Oh, and a quite recent bug it seems. Cristal clear. Thanks :)"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 151, "last_activity_date": 1549639928, "last_edit_date": 1549639928, "creation_date": 1549639173, "answer_id": 54595440, "question_id": 54595345, "link": "https://stackoverflow.com/questions/54595345/what-does-let-x-x-do-in-rust/54595440#54595440", "title": "What does &#39;let x = x&#39; do in Rust?", "body": "<p>It makes <code>fields</code> immutable again.</p>\n\n<p><code>fields</code> was previously defined as mutable (<code>let mut fields = \u2026;</code>), to be used with <code>sort_by_key</code> which sorts in-place and requires the target to be mutable. The author has chosen here to explicitly prevent further mutability.</p>\n\n<p>\"Downgrading\" a mutable binding to immutable is quite common in Rust.</p>\n\n<p>Another common way to do this is to use a block expression:</p>\n\n<pre><code>let fields = {\n    let mut fields = \u2026;\n    fields.sort_by_key(\u2026);\n    fields\n};\n</code></pre>\n"}], "owner": {"reputation": 2304, "user_id": 2126889, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ZLkKF.jpg?s=128&g=1", "display_name": "timthelion", "link": "https://stackoverflow.com/users/2126889/timthelion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5799, "favorite_count": 11, "accepted_answer_id": 54595440, "answer_count": 2, "score": 119, "last_activity_date": 1549743566, "creation_date": 1549638834, "last_edit_date": 1549743566, "question_id": 54595345, "link": "https://stackoverflow.com/questions/54595345/what-does-let-x-x-do-in-rust", "title": "What does &#39;let x = x&#39; do in Rust?", "body": "<p>I saw this code <a href=\"https://github.com/danburkert/prost/blob/5f54a1be5e4a3c85734f14c3ec23a09bd9cfa609/prost-derive/src/lib.rs#L86\" rel=\"noreferrer\">in the wild</a>:</p>\n\n<pre><code>fields.sort_by_key(|&amp;(_, ref field)| field.tags().into_iter().min().unwrap());\nlet fields = fields;\n</code></pre>\n\n<p>What does the <code>let fields = fields;</code> line do? Why is it there?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549638601, "post_id": 54595196, "comment_id": 95986561, "body": "<code>itertools::MinMaxResult</code> is a generic type, you would need to specify a type, for example <code>itertools::MinMaxResult&lt;u32&gt;</code>."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549638692, "post_id": 54595196, "comment_id": 95986620, "body": "That seems to have fixed it, thank you! If you put it as an answer, I&#39;ll accept it"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549639595, "post_id": 54595196, "comment_id": 95987174, "body": "You need to re-evaluate whatever tool you are using to make sure it shows the <i>complete</i> errors. They guide you to the solution."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1549639862, "post_id": 54595196, "comment_id": 95987346, "body": "Please do not put <i>answers</i> in your <i>question</i>. You are welcome to answer your own question below and even accept that answer. This is better because it allows additional answers and those answers to be voted on by the community."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1549643540, "creation_date": 1549643540, "answer_id": 54596623, "question_id": 54595196, "link": "https://stackoverflow.com/questions/54595196/how-do-i-explictly-collect-a-vector-of-itertoolsminmaxresult/54596623#54596623", "title": "How do I explictly collect a vector of itertools::MinMaxResult?", "body": "<p><code>itertools::MinMaxResult</code> is a generic type. You need to either specify the type parameter, or use <code>_</code> to let the compiler infer it.</p>\n\n<pre><code>let row_minmax = input\n    .into_par_iter()\n    .map(|row| row.iter().minmax())\n    .collect::&lt;Vec&lt;MinMaxResult&lt;u32&gt;&gt;&gt;();\n</code></pre>\n"}], "owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 54596623, "answer_count": 1, "score": 2, "last_activity_date": 1549643540, "creation_date": 1549638334, "last_edit_date": 1549639431, "question_id": 54595196, "link": "https://stackoverflow.com/questions/54595196/how-do-i-explictly-collect-a-vector-of-itertoolsminmaxresult", "title": "How do I explictly collect a vector of itertools::MinMaxResult?", "body": "<p>I'm using the <code>minmax</code> function from the itertools crate:</p>\n\n<pre><code>use itertools::Itertools;\n\nlet row_minmax: Vec&lt;MinMaxResult&gt; = input\n    .into_par_iter()\n    .map(|row| row.iter().minmax())\n    .collect::&lt;Vec&lt;MinMaxResult&gt;&gt;();\n</code></pre>\n\n<p>I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0412]: cannot find type `MinMaxResult` in this scope\n --&gt; src/main.rs:4:25\n  |\n4 |     let row_minmax: Vec&lt;MinMaxResult&gt; = input\n  |                         ^^^^^^^^^^^^ not found in this scope\nhelp: possible candidate is found in another module, you can import it into scope\n  |\n1 | use itertools::MinMaxResult;\n</code></pre>\n\n<p>I've tried replacing <code>MinMaxResult</code> with <code>itertools::MinMaxResult</code> and variants thereupon, to no effect:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0107]: wrong number of type arguments: expected 1, found 0\n --&gt; src/main.rs:4:25\n  |\n4 |     let row_minmax: Vec&lt;itertools::MinMaxResult&gt; = input\n  |                         ^^^^^^^^^^^^^^^^^^^^^^^ expected 1 type argument\n</code></pre>\n\n<p>I am aware that I can use <code>Vec&lt;_&gt;</code>, but I am very new to Rust, so I prefer to explicitly type everything (even if it is not idiomatic) to make sure that what goes through my head correlates with what the compiler is doing. I know this makes the code look like sick, but it helps me learn.</p>\n"}, {"tags": ["multithreading", "rust", "thread-safety"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 5, "creation_date": 1549637160, "post_id": 54594647, "comment_id": 95985640, "body": "&quot;In C, this would be very easy to get through and would print out <code>i</code> easily&quot;, no, in C this could just as well print garbage because you are non-atomically reading a value while it is being written. Rust prevents this."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549637218, "post_id": 54594647, "comment_id": 95985683, "body": "Your code has more issues than the main ones in focus here. Please seek to make a more adequate <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. In particular, you cannot make <code>i += 1;</code> because it&#39;s not a <code>mut</code> variable. There are Rust-specific tips on asking questions in the <a href=\"https://stackoverflow.com/tags/rust/info\">tag&#39;s info page</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549637287, "post_id": 54594647, "comment_id": 95985732, "body": "Also see <a href=\"https://stackoverflow.com/q/42849210/3650362\">Share i32 mutably between threads</a> (the answer there applies more generally than just <code>i32</code>)."}, {"owner": {"reputation": 29, "user_id": 7769996, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cumNl.jpg?s=128&g=1", "display_name": "anymate98", "link": "https://stackoverflow.com/users/7769996/anymate98"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549637343, "post_id": 54594647, "comment_id": 95985772, "body": "@mcarton So is there any &quot;atomic&quot; way to access &amp; modify variable in Rust?"}, {"owner": {"reputation": 29, "user_id": 7769996, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cumNl.jpg?s=128&g=1", "display_name": "anymate98", "link": "https://stackoverflow.com/users/7769996/anymate98"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549637420, "post_id": 54594647, "comment_id": 95985835, "body": "@E_net4 yeah forgot to put <code>mut</code> before <code>i</code>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1549637490, "post_id": 54594647, "comment_id": 95985876, "body": "<a href=\"https://doc.rust-lang.org/stable/book/ch16-00-concurrency.html\" rel=\"nofollow noreferrer\">The Rust Programming Language</a> has an entire chapter on concurrency. There is also a module in the standard library for <a href=\"https://doc.rust-lang.org/std/sync/atomic/index.html\" rel=\"nofollow noreferrer\">atomic primitives</a>."}, {"owner": {"reputation": 29, "user_id": 7769996, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cumNl.jpg?s=128&g=1", "display_name": "anymate98", "link": "https://stackoverflow.com/users/7769996/anymate98"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549637651, "post_id": 54594647, "comment_id": 95985977, "body": "@E_net4 Maybe I should try to use Arc. Thanks for the link."}, {"owner": {"reputation": 29, "user_id": 7769996, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cumNl.jpg?s=128&g=1", "display_name": "anymate98", "link": "https://stackoverflow.com/users/7769996/anymate98"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549637717, "post_id": 54594647, "comment_id": 95986016, "body": "@trentcl This is what I wanted. Thanks."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549637734, "post_id": 54594647, "comment_id": 95986026, "body": "@anymate98 <code>Arc</code> does not enable concurrent access. Before trying to use it, please read the book chapter above."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549637977, "post_id": 54594647, "comment_id": 95986173, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c7c689268fa2d886e10277b6465f5d8a\" rel=\"nofollow noreferrer\">The duplicates applied to your problem</a>"}], "owner": {"reputation": 29, "user_id": 7769996, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cumNl.jpg?s=128&g=1", "display_name": "anymate98", "link": "https://stackoverflow.com/users/7769996/anymate98"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 663, "favorite_count": 2, "closed_date": 1549637581, "answer_count": 0, "score": 0, "last_activity_date": 1549638058, "creation_date": 1549636552, "last_edit_date": 1549638058, "question_id": 54594647, "link": "https://stackoverflow.com/questions/54594647/modifying-and-using-variable-at-a-same-time-from-different-threads-in-rust", "closed_reason": "Duplicate", "title": "Modifying and using variable at a same time from different threads in Rust", "body": "<p>I'm trying to use thread to use and change the value of a variable at a same time in Rust.</p>\n\n<p>There are things like <code>Box</code> and <code>Mutex</code> to share objects, but none of these seem to be helpful with my problem. I want to access a variable and change a value, while on the other side, use that variable for other stuff like the code below.</p>\n\n<pre><code>use std::thread;\n\nfn main() {\n    let mut val = 0;\n    thread::spawn(|| {\n        let mut i = 0;\n        loop {\n            val = i;\n            i += 1;\n        }\n    });\n\n    loop {\n        println!(\"val: {}\", val);\n    }\n}\n\n</code></pre>\n\n<p>In C, this would be very easy to get through and would print out <code>i</code> easily, but because of the ownership management techniques in Rust, the thread above takes the ownership and can't compile the code.</p>\n\n<p>Is there any way to solve this problem?</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549635940, "post_id": 54594292, "comment_id": 95984925, "body": "You can use <code>result.map_err(|err| { println!(&quot;error occurred : {:?}&quot;, err.to_string()); Ok(()) });</code> This way you will consume the error and log it."}, {"owner": {"reputation": 363, "user_id": 4514393, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PYwMM.png?s=128&g=1", "display_name": "jeevcat", "link": "https://stackoverflow.com/users/4514393/jeevcat"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549638065, "post_id": 54594292, "comment_id": 95986232, "body": "@AkinerAlkan This doesn&#39;t seem to work, as it still thinks <code>Ok(())</code> is an <code>Err</code> ---  <code>thread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Ok(())&#39;,</code>"}], "answers": [{"comments": [{"owner": {"reputation": 363, "user_id": 4514393, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PYwMM.png?s=128&g=1", "display_name": "jeevcat", "link": "https://stackoverflow.com/users/4514393/jeevcat"}, "edited": false, "score": 0, "creation_date": 1549651415, "post_id": 54597125, "comment_id": 95993150, "body": "Great answer that really explained the thought process of considering all available functions."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1549652414, "last_edit_date": 1549652414, "creation_date": 1549645320, "answer_id": 54597125, "question_id": 54594292, "link": "https://stackoverflow.com/questions/54594292/how-can-i-remove-or-otherwise-ignore-errors-when-processing-a-stream/54597125#54597125", "title": "How can I remove or otherwise ignore errors when processing a stream?", "body": "<ul>\n<li><p><a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.map_err\" rel=\"nofollow noreferrer\"><code>Stream::map_err</code></a> \u2014 provided with error values, it can convert the type but it leaves it as an error.</p></li>\n<li><p><a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.or_else\" rel=\"nofollow noreferrer\"><code>Stream::or_else</code></a> \u2014 provided with error values, it can convert the error into a success, leaving success values unchanged.</p></li>\n<li><p><a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.then\" rel=\"nofollow noreferrer\"><code>Stream::then</code></a> \u2014 provided with both success and error values and can do whatever you want.</p></li>\n</ul>\n\n<p><code>Stream::map</code> does not give you the ability to convert errors into success, so it's not useful. <code>Stream::or_else</code> <em>does</em> give the ability, but it's used when you can convert the error type into the success type. Only <code>Stream::then</code> gives you the ability to convert both types at once.</p>\n\n<p><a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.flatten\" rel=\"nofollow noreferrer\"><code>Stream::flatten</code></a> can be used to convert a stream of streams into a single stream.</p>\n\n<p>Combine this with the fact that <code>Result</code> can be treated as an iterator, and you can create this:</p>\n\n<pre><code>stream\n    .then(|r| future::ok(stream::iter_ok::&lt;_, ()&gt;(r)))\n    .flatten()\n</code></pre>\n\n<p>Regardless if the stream's item is <code>Ok</code> or <code>Err</code>, we convert it to an iterator and create a stream from it. We then flatten out the stream of streams. </p>\n\n<p>If you wanted to print out errors, I'd use <a href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html#method.inspect_err\" rel=\"nofollow noreferrer\"><code>Stream::inspect_err</code></a>:</p>\n\n<pre><code>stream.inspect_err(|err| println!(\"Error on {:?}\", err))\n</code></pre>\n\n<p>Complete code:</p>\n\n<pre><code>use futures::{\n    future,\n    stream::{self, Stream},\n}; // 0.1.25;\nuse tokio; // 0.1.14\n\nfn main() {\n    let stream = stream::iter_ok({\n        (0..10).map(|num| {\n            println!(\"Started {}\", num);\n            match num % 3 {\n                0 =&gt; future::ok(num),\n                _ =&gt; future::err(num),\n            }\n        })\n    })\n    .buffer_unordered(2);\n\n    let stream = stream\n        .inspect_err(|err| println!(\"Error on {:?}\", err))\n        .then(|r| future::ok(stream::iter_ok::&lt;_, ()&gt;(r)))\n        .flatten();\n\n    tokio::run({\n        stream.for_each(|n| {\n            println!(\"Success on {:?}\", n);\n            Ok(())\n        })\n    });\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Started 0\nStarted 1\nSuccess on 0\nStarted 2\nError on 1\nStarted 3\nError on 2\nStarted 4\nSuccess on 3\nStarted 5\nError on 4\nStarted 6\nError on 5\nStarted 7\nSuccess on 6\nStarted 8\nError on 7\nStarted 9\nError on 8\nSuccess on 9\n</code></pre>\n"}], "owner": {"reputation": 363, "user_id": 4514393, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PYwMM.png?s=128&g=1", "display_name": "jeevcat", "link": "https://stackoverflow.com/users/4514393/jeevcat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 975, "favorite_count": 2, "accepted_answer_id": 54597125, "answer_count": 1, "score": 2, "last_activity_date": 1549652414, "creation_date": 1549635328, "last_edit_date": 1549652181, "question_id": 54594292, "link": "https://stackoverflow.com/questions/54594292/how-can-i-remove-or-otherwise-ignore-errors-when-processing-a-stream", "title": "How can I remove or otherwise ignore errors when processing a stream?", "body": "<p>I have a long list of futures which I'd like to run using <code>Stream::buffer_unordered</code>/<code>Stream::buffered</code>. I combine this stream into a single future with <code>for_each</code> and then execute it all with Tokio. It is quite common that one of the futures will return an error. According to the documentation, <code>for_each</code> will stop when an error is returned.</p>\n\n<p>How can I ignore or just print a message when these errors are returned and keep executing subsequent futures?</p>\n\n<p>Here is general code similar to my situation: </p>\n\n<pre><code>use futures::stream;\nuse futures::stream::Stream;\nuse futures::future::err;\nuse futures::future::ok;\nuse tokio;\n\nfn main() {\n    let queries: Vec&lt;u32&gt; = (0..10).collect();\n    let futures = queries.into_iter().map(move |num| {\n        println!(\"Started {}\", num);\n        // Maybe throw error\n        let future = match num % 3 {\n            0 =&gt; ok::&lt;u32, u32&gt;(num),\n            _ =&gt; err::&lt;u32, u32&gt;(num)\n        };\n        future\n    });\n\n    let stream = stream::iter_ok(futures);\n    let num_workers = 8;\n    let future = stream\n        .buffer_unordered(num_workers)\n        .map_err(|err| {\n            println!(\"Error on {:?}\", err);\n        })\n        .for_each(|n| {\n            println!(\"Success on {:?}\", n);\n            Ok(())\n        });\n\n    tokio::runtime::run(future);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f2b3d00f9a6cf9890fb2b9abf32e2a71\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>If you try this example, the queue of futures will stop executing early when an <code>Err</code> is thrown.</p>\n"}, {"tags": ["rust", "macros", "rust-proc-macros"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1549637091, "post_id": 54593472, "comment_id": 95985601, "body": "I don&#39;t think there is a good solution to that problem yet. <a href=\"https://github.com/rust-lang/rust/issues/54363\" rel=\"nofollow noreferrer\">Related Rust issue</a> and <a href=\"https://stackoverflow.com/questions/44950574/using-crate-in-rusts-procedural-macros\">somewhat related SO question</a>."}], "owner": {"reputation": 5008, "user_id": 3594526, "user_type": "registered", "accept_rate": 30, "profile_image": "https://i.stack.imgur.com/VfPew.jpg?s=128&g=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/3594526/felix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 241, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1578340750, "creation_date": 1549632582, "last_edit_date": 1578340750, "question_id": 54593472, "link": "https://stackoverflow.com/questions/54593472/how-do-i-write-a-procedural-macro-that-expands-to-a-macro-invocation-without-req", "title": "How do I write a procedural macro that expands to a macro invocation without requiring users to import the crate for the macro?", "body": "<p>I'm trying to write a function-like procedural macro <code>my_macro</code> that expands to a <code>lazy_static</code> macro invocation. I want to write it in a way that users of <code>my_macro</code> don't need to list <code>lazy_static</code> in their crate's dependencies and explicitly use it (<code>use lazy_static::lazy_static</code>).</p>\n\n<p>This is the minimal example code:</p>\n\n<p><strong>lib.rs (my_macro crate)</strong></p>\n\n<pre><code>extern crate proc_macro;\nuse proc_macro::TokenStream;\nuse quote::quote;\n\n#[proc_macro]\npub fn my_macro(_item: TokenStream) -&gt; TokenStream {\n    quote!(\n        lazy_static! {\n            static ref EXAMPLE: u8 = 42;\n        }\n    ).into()\n}\n</code></pre>\n\n<p><strong>Cargo.toml (my_macro crate)</strong></p>\n\n<pre><code>[package]\nname = \"my_macro\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nquote = \"0.6\"\nlazy_static = \"1.2.0\"\n\n[lib]\nproc-macro = true\n</code></pre>\n\n<p><strong>lib.rs (usage crate)</strong></p>\n\n<pre><code>use my_macro::my_macro;\n// use lazy_static::lazy_static;\n\nmy_macro!();\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    #[test]\n    fn it_works() {\n        assert_eq!(*EXAMPLE, 42);\n    }\n}\n</code></pre>\n\n<p><strong>Cargo.toml (usage crate)</strong></p>\n\n<pre><code>[package]\nname = \"import_test\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nmy_macro = { path = \"./my_macro\" }\n# lazy_static = \"1.2.0\"\n</code></pre>\n\n<p>The code above results in a compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot find macro `lazy_static!` in this scope\n --&gt; src/lib.rs:6:1\n  |\n6 | my_macro!();\n  | ^^^^^^^^^^^^\n</code></pre>\n\n<p>I understand the error and I know that I can solve it by letting the <code>usage</code> crate depend on <code>lazy_static</code> and <code>use</code> it in <code>lib.rs</code> (see commented lines).</p>\n\n<p>The problem is that this would mean that all crates that use <code>my_macro</code> would have to list <code>lazy_static</code> in their dependencies. This doesn't seem right and I'd like to know if there's an alternative. I already tried a couple of things but nothing solved the problem.</p>\n"}, {"tags": ["rust", "nix"], "answers": [{"tags": [], "owner": {"reputation": 583, "user_id": 1630083, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/41bd958b820be8240c15687f848c6056?s=128&d=identicon&r=PG", "display_name": "qknight", "link": "https://stackoverflow.com/users/1630083/qknight"}, "is_accepted": false, "score": 0, "last_activity_date": 1549702686, "creation_date": 1549702686, "answer_id": 54604750, "question_id": 54593384, "link": "https://stackoverflow.com/questions/54593384/create-nix-store-path-with-cargo-registry-by-running-cargo-using-nix-mkderiv/54604750#54604750", "title": "create nix store path with .cargo/registry by running &#39;cargo&#39; using nix (mkDerivation or similar)", "body": "<p>this is the code i came up with finally:</p>\n\n<pre><code>let \n  pkgs = import &lt;nixpkgs&gt; {};\n  fetchcargo = import &lt;nixpkgs/pkgs/build-support/rust/fetchcargo.nix&gt; {\n    inherit (pkgs) stdenv cacert git rust cargo-vendor;\n  };\n  myVendoredSrcFetchCargo = fetchcargo rec {\n    name = \"myVendoredSrcFetchCargo\";\n    sourceRoot = null;\n    srcs = null;\n    src = ../artiq/firmware;\n    cargoUpdateHook = \"\";\n    patches = [];\n    sha256 = \"1xzjn9i4rkd9124v2gbdplsgsvp1hlx7czdgc58n316vsnrkbr86\";\n  };\n\n  myVendoredSrc = pkgs.stdenv.mkDerivation {\n    name = \"myVendoredSrc\";\n    src = myVendoredSrcFetchCargo;\n    phases = [ \"unpackPhase\" \"installPhase\" ];\n    installPhase = ''\n      mkdir -p $out/.cargo/registry\n      cat &gt; $out/.cargo/config &lt;&lt; EOF\n        [source.crates-io]\n        registry = \"https://github.com/rust-lang/crates.io-index\"\n        replace-with = \"vendored-sources\"\n        [source.\"https://github.com/m-labs/libfringe\"]\n        git = \"https://github.com/m-labs/libfringe\"\n        rev = \"b8a6d8f\"\n        replace-with = \"vendored-sources\"\n        [source.vendored-sources]\n        directory = \"$out/.cargo/registry\"\n      EOF\n      cp -R * $out/.cargo/registry\n    '';\n  };\n\n  buildenv = import ./artiq-dev.nix { inherit pkgs; };\n\nin pkgs.stdenv.mkDerivation {\n  name = \"artiq-board\";\n  src = null;\n  phases = [ \"buildPhase\" \"installPhase\" ];\n  buildPhase = \n    ''\n    ${buildenv}/bin/artiq-dev -c \"HOME=${myVendoredSrc} python -m artiq.gateware.targets.kasli -V satellite --no-compile-gateware\"\n    '';\n  installPhase =\n    ''\n    mkdir $out\n    #cp artiq_kasli/satellite/gateware/top.bit $out\n    cp artiq_kasli/satellite/software/bootloader/bootloader.bin $out\n    cp artiq_kasli/satellite/software/satman/satman.{elf,fbi} $out\n    '';\n}\n</code></pre>\n"}], "owner": {"reputation": 583, "user_id": 1630083, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/41bd958b820be8240c15687f848c6056?s=128&d=identicon&r=PG", "display_name": "qknight", "link": "https://stackoverflow.com/users/1630083/qknight"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 143, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1549702686, "creation_date": 1549632274, "last_edit_date": 1549650159, "question_id": 54593384, "link": "https://stackoverflow.com/questions/54593384/create-nix-store-path-with-cargo-registry-by-running-cargo-using-nix-mkderiv", "title": "create nix store path with .cargo/registry by running &#39;cargo&#39; using nix (mkDerivation or similar)", "body": "<h1>hacky way</h1>\n\n<p>i have this code in nix to generate a <code>.cargo</code> cache:</p>\n\n<pre><code>myVendoredSrc = pkgs.stdenv.mkDerivation {\n    name = \"myVendoredSrc\";\n    # i renamed .cargo into cargo to make this work\n    src = /home/joachim/cargo;\n    phases = [ \"unpackPhase\" \"installPhase\" ];\n    installPhase = ''\n      mkdir -p $out/.cargo\n      cp -R registry $out/.cargo\n    '';\n  };\n</code></pre>\n\n<p>i use this cargo-cache in a <code>nix-build</code> project like this:</p>\n\n<pre><code>  buildenv = import ./artiq-dev.nix {\n    extraProfile = ''\n      export HOME=${myVendoredSrc}\n    '';\n    # --no-compile-gateware to disable vivado build\n    runScript = \"python -m artiq.gateware.targets.kasli -V satellite --no-compile-gateware\";\n  };\n</code></pre>\n\n<p>this later calls <code>cargo build</code> and uses the cache without the reqirement to connect to the internet. </p>\n\n<p>in nixpkgs there is fetchcargo, see <a href=\"https://github.com/alexcrichton/cargo-vendor\" rel=\"nofollow noreferrer\">https://github.com/alexcrichton/cargo-vendor</a></p>\n\n<h1>question</h1>\n\n<p>idea: figure out how to use <code>&lt;nixpkgs&gt;/pkgs/build-support/rust/fetchcargo.nix</code> in my own nix files...</p>\n\n<h1>what i tried before</h1>\n\n<p>please don't hint me to use <code>carnix</code> (i tried it build it didn't work every well and i also found out that i can't use it for this project) or <code>buildRustPackage</code> or <code>buildRustCrate</code> (same reason, this can't be used for the project i'm working on since it is a cross compiler setup which is setup form a python script creating serveral environment variables)</p>\n"}, {"tags": ["rust", "pattern-matching"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549631592, "post_id": 54592999, "comment_id": 95982480, "body": "The &quot;why doesn&#39;t it infer&quot; question is answered here: <a href=\"https://stackoverflow.com/q/24977365/3650362\">Differences in Type inference for closures and functions in rust</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549637138, "post_id": 54592999, "comment_id": 95985625, "body": "<i>gracefully_shutdown</i> \u2014 this is not really a &quot;graceful shutdown&quot;; the rest of your program never has a chance to clean up."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549637790, "post_id": 54592999, "comment_id": 95986055, "body": "@Shepmaster, Yes I know that, it is the code that I will be change later on. Just wanted to know the main reason behind the compiler error. <code>Never type</code> is the key answer that I was looking for. However if you know good example for gracefully shutdown, i would be gladly look into this topic as well :)"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549637076, "post_id": 54593041, "comment_id": 95985593, "body": "See also <a href=\"https://stackoverflow.com/q/31082098/155423\">Why would I use divergent functions?</a>."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 8, "last_activity_date": 1549637065, "last_edit_date": 1549637065, "creation_date": 1549630983, "answer_id": 54593041, "question_id": 54592999, "link": "https://stackoverflow.com/questions/54592999/how-do-i-tell-the-compiler-that-my-function-terminates-the-program-like-process/54593041#54593041", "title": "How do I tell the compiler that my function terminates the program like process::exit()?", "body": "<p>Change the signature of <code>gracefully_shutdown</code> to</p>\n\n<pre><code>fn gracefully_shutdown() -&gt; ! {\n    process::exit(7);\n}\n</code></pre>\n\n<p>This will tell the compiler that this function <strong>never</strong> returns! The <code>!</code> is called the <a href=\"https://doc.rust-lang.org/nightly/std/primitive.never.html\" rel=\"nofollow noreferrer\">never type</a>.</p>\n\n<p>For more information see</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/51832396/why-does-rust-have-a-never-primitive-type\">Why does Rust have a &quot;Never&quot; primitive type?</a></li>\n</ul>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 1, "accepted_answer_id": 54593041, "answer_count": 1, "score": 5, "last_activity_date": 1549637065, "creation_date": 1549630765, "last_edit_date": 1549631565, "question_id": 54592999, "link": "https://stackoverflow.com/questions/54592999/how-do-i-tell-the-compiler-that-my-function-terminates-the-program-like-process", "title": "How do I tell the compiler that my function terminates the program like process::exit()?", "body": "<p>I have the following function that includes some error recovery logic and the <code>process::exit(0)</code> in the end:</p>\n\n<pre><code>fn gracefully_shutdown() {\n    // Do some logic for the recover\n    process::exit(7);\n}\n</code></pre>\n\n<p>I want to call that function in the error case but <code>match</code> complains about <code>incompatible arms</code>. But it does not complain when I write it explicitly into a match arm like the following:</p>\n\n<pre><code>fn handle_result(my_result: Result&lt;i32, MyError&gt;) -&gt; i32 {\n    match my_result {\n        Ok(val) =&gt; val,\n        //Err(_error) =&gt; { process::exit(0); } // Does not complain\n        Err(_error) =&gt; {\n            gracefully_shutdown();\n        } // Does complain\n    }\n}\n</code></pre>\n\n<p>Is it really hard for the compiler to understand that <code>gracefully_shutdown()</code> contains <code>process::exit(0)</code> in itself? </p>\n\n<p>I would expect that I could have written the code in this way:</p>\n\n<pre><code>fn handle_result(my_result: Result&lt;i32, MyError&gt;) -&gt; i32 {\n    match my_result {\n        Ok(val) =&gt; val,\n        Err(_error) =&gt; {\n            gracefully_shutdown();\n        }\n    }\n}\n</code></pre>\n\n<p>Any ideas to make this work?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c462f198ced7fcf69c38e361c7d1d635\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust", "rayon"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549629494, "post_id": 54592637, "comment_id": 95981395, "body": "Please try to shorten the code next time to the necessary part."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549629536, "post_id": 54592637, "comment_id": 95981413, "body": "@hellow I&#39;m very happy to edit it, but since I&#39;m so new to rust, it&#39;s not impossible that I have made a mistake further up, so I thought it might be good to include it."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549629719, "post_id": 54592637, "comment_id": 95981502, "body": "@hellow edited to highlight the important bit"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549629950, "post_id": 54592637, "comment_id": 95981623, "body": "As a note: <a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#match_bool\" rel=\"nofollow noreferrer\">Don&#39;t use match to differentiate between true/false</a>. You are doing some useless <code>Some</code> comparision: <code>Some(a) == Some(b) &lt;==&gt; a == b</code>. You don&#39;t need to specify the type of variables most of the time, try to leave them out."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549630073, "post_id": 54592637, "comment_id": 95981673, "body": "Why do you always write <code>- 1_usize</code> for the iterator? <code>a..b</code> means [a, b), which means inclusive a, but exclusive b (if you want [a, b] you have to write <code>a..=b</code>). Is that on purpose?"}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549630192, "post_id": 54592637, "comment_id": 95981736, "body": "The purpose of the _usize is to make sure I&#39;m getting the types correct (I&#39;m a python dev, so I&#39;m trying to be super explicit about types while I learn, just to make sure I don&#39;t screw up). The reason I didn&#39;t use a..=b is because I didn&#39;t know about it. Thank you! :)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549630319, "post_id": 54592637, "comment_id": 95981817, "body": "Please reread my comment. I told you , that <code>-1</code> seems wrong to me. <code>a..=b</code> is equal to <code>a..(b+1)</code>! Plus, not minus."}, {"owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549630405, "post_id": 54592637, "comment_id": 95981862, "body": "Sorry, I guess I thought that a..b meant inclusive, so I was correcting for the list being zero-indexed"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "edited": false, "score": 0, "creation_date": 1549630466, "post_id": 54592637, "comment_id": 95981902, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/188112/discussion-between-hellow-and-alex\">continue this discussion in chat</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549637443, "post_id": 54592637, "comment_id": 95985847, "body": "Read the information <a href=\"https://stackoverflow.com/tags/rust/info\">in the Rust tag info page</a> for tips on how to reduce your code."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1549637406, "post_id": 54593642, "comment_id": 95985821, "body": "Please transcribe the relevant parts of the chat into the answer. <b>Why</b> do <code>flat_map</code> / <code>filter_map</code> have an effect here?"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1549633113, "creation_date": 1549633113, "answer_id": 54593642, "question_id": 54592637, "link": "https://stackoverflow.com/questions/54592637/trying-to-collect-into-vector-but-failing-with-a-collection-cannot-be-built-ove/54593642#54593642", "title": "Trying to collect into vector but failing with &quot;a collection cannot be built over elements of type &lt;...&gt;&quot;", "body": "<p>(<a href=\"https://chat.stackoverflow.com/transcript/188112\">The chat transcript</a> will guide you through the solution of this problem, because it's kind of complex)</p>\n\n<p>TL;DR use a combination of <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>Iterator::flat_map</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter_map\" rel=\"nofollow noreferrer\"><code>Iterator::filter_map</code></a> to solve the problem.</p>\n\n<pre><code>(0_usize..(num_rows - 1_usize))\n    .flat_map(|row_index| {\n        (0_usize..(num_cols - 1_usize)).flat_map(|col_index| {\n            match row_minima[row_index] == col_maxima[col_index]\n                || row_maxima[row_index] == col_minima[col_index]\n            {\n                true =&gt; Some((row_index, col_index)),\n                false =&gt; None,\n            }\n        })\n    })\n    .collect::&lt;Vec&lt;(usize, usize)&gt;&gt;()\n</code></pre>\n\n<p>Please note, that this code is very unidiomatic, but shows the solution.</p>\n"}], "owner": {"reputation": 1543, "user_id": 3560724, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8405071cb6c766f5842267de9714aa0e?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/3560724/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 834, "favorite_count": 0, "accepted_answer_id": 54593642, "answer_count": 1, "score": 0, "last_activity_date": 1549637336, "creation_date": 1549629407, "last_edit_date": 1549637336, "question_id": 54592637, "link": "https://stackoverflow.com/questions/54592637/trying-to-collect-into-vector-but-failing-with-a-collection-cannot-be-built-ove", "title": "Trying to collect into vector but failing with &quot;a collection cannot be built over elements of type &lt;...&gt;&quot;", "body": "<p>I am trying to find the saddle points of a matrix, a borrowed array of vectors. For the purposes of this, a saddle point is an element of the matrix that is either the smallest in its column and the largest in its row, or the largest in its column, and the smallest in its row.</p>\n\n<pre><code>use rayon::prelude::*;\n\npub fn find_saddle_points(input: &amp;[Vec&lt;u64&gt;]) -&gt; Vec&lt;(usize, usize)&gt; {\n    let flattened_matrix: Vec&lt;(&amp;u64)&gt; = input.into_par_iter().flatten().collect::&lt;Vec&lt;&amp;u64&gt;&gt;();\n    match flattened_matrix == vec![] { //Check for empty input\n        true =&gt; vec![],\n        false =&gt; {\n            let num_rows: usize = input.len();\n            let num_cols: usize = input[0].len();\n\n            let row_minima: Vec&lt;Option&lt;&amp;u64&gt;&gt; = (0_usize..(num_rows - 1_usize))\n                .into_par_iter()\n                .map(|row_index| input[row_index].iter().min())\n                .collect::&lt;Vec&lt;Option&lt;&amp;u64&gt;&gt;&gt;();\n\n            let row_maxima: Vec&lt;Option&lt;&amp;u64&gt;&gt; = (0_usize..(num_rows - 1_usize))\n                .into_par_iter()\n                .map(|row_index| input[row_index].iter().max())\n                .collect::&lt;Vec&lt;Option&lt;&amp;u64&gt;&gt;&gt;();\n\n            let input_tranpose: Vec&lt;Vec&lt;u64&gt;&gt; = (0_usize..(num_cols - 1_usize)) //Transpose the matrix to make it easier to get column information\n                .into_par_iter()\n                .map(|col_index| {\n                    (0_usize..(num_rows - 1_usize))\n                        .map(|row_index| input[row_index][col_index])\n                        .collect::&lt;Vec&lt;u64&gt;&gt;() //Individual column\n                })\n                .collect::&lt;Vec&lt;Vec&lt;u64&gt;&gt;&gt;();\n\n            let col_minima: Vec&lt;Option&lt;&amp;u64&gt;&gt; = (0_usize..(num_cols - 1_usize))\n                .into_par_iter()\n                .map(|col_index| input_tranpose[col_index].iter().min())\n                .collect::&lt;Vec&lt;Option&lt;&amp;u64&gt;&gt;&gt;();\n\n            let col_maxima: Vec&lt;Option&lt;&amp;u64&gt;&gt; = (0_usize..(num_cols - 1_usize))\n                .into_par_iter()\n                .map(|col_index| input_tranpose[col_index].iter().max())\n                .collect::&lt;Vec&lt;Option&lt;&amp;u64&gt;&gt;&gt;();\n\n            //All fine up to this point\n\n            (0_usize..(num_rows - 1_usize))\n                .map(|row_index| {\n                    (0_usize..(num_cols - 1_usize)).map(|col_index| {\n                        match (Some(row_minima[row_index]) == Some(col_maxima[col_index])\n                            || Some(row_maxima[row_index]) == Some(col_minima[col_index]))\n                        {\n                            true =&gt; Some((row_index, col_index)),\n                            false =&gt; None,\n                        }\n                    })\n                })\n                .collect::&lt;Vec&lt;(usize, usize)&gt;&gt;()\n        }\n    }\n}\n</code></pre>\n\n<p>The error is in the final <code>.collect</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: a collection of type `std::vec::Vec&lt;(usize, usize)&gt;` cannot be built from an iterator over elements of type `std::iter::Map&lt;std::ops::Range&lt;usize&gt;, [closure@src/lib.rs:45:57: 52:22 row_minima:_, row_index:_, col_maxima:_, row_maxima:_, col_minima:_]&gt;`\n  --&gt; src/lib.rs:54:18\n   |\n54 |                 .collect::&lt;Vec&lt;(usize, usize)&gt;&gt;()\n   |                  ^^^^^^^ a collection of type `std::vec::Vec&lt;(usize, usize)&gt;` cannot be built from `std::iter::Iterator&lt;Item=std::iter::Map&lt;std::ops::Range&lt;usize&gt;, [closure@src/lib.rs:45:57: 52:22 row_minima:_, row_index:_, col_maxima:_, row_maxima:_, col_minima:_]&gt;&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;std::iter::Map&lt;std::ops::Range&lt;usize&gt;, [closure@src/lib.rs:45:57: 52:22 row_minima:_, row_index:_, col_maxima:_, row_maxima:_, col_minima:_]&gt;&gt;` is not implemented for `std::vec::Vec&lt;(usize, usize)&gt;`\n</code></pre>\n\n<p>I know that this is caused by the iterator being subjected to the <code>collect</code> function not being of the expected type, but to me it should be correct, and I'm not clear on why it isn't.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549626943, "post_id": 54591765, "comment_id": 95979930, "body": "Well, not what you expect, but this would work <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d953f6e706cf72f64983fe93cd3a192b\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1, "user_id": 11033344, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/458f09703237f96690a30f8cc015de17?s=128&d=identicon&r=PG&f=1", "display_name": "scottd", "link": "https://stackoverflow.com/users/11033344/scottd"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549665299, "post_id": 54591765, "comment_id": 95998658, "body": "Thank you hellow - nice suggestion - i may very well need to use two loops/iterations - i was hoping that i could do it in one -"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549802024, "post_id": 54591765, "comment_id": 96025778, "body": "You can easily do it in one iteration if you just defer pushing the <code>Total</code> until after you&#39;ve processed the other items; or, with slightly more thought, by saving its index / reference and doing the mutation after the loop."}], "answers": [{"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549635490, "post_id": 54592131, "comment_id": 95984671, "body": "@trentcl, oh yeah i missed that. Thanks.. Fixed it in the answer."}, {"owner": {"reputation": 1, "user_id": 11033344, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/458f09703237f96690a30f8cc015de17?s=128&d=identicon&r=PG&f=1", "display_name": "scottd", "link": "https://stackoverflow.com/users/11033344/scottd"}, "edited": false, "score": 0, "creation_date": 1549665477, "post_id": 54592131, "comment_id": 95998712, "body": "Thank you Akiner - my &#39;real&#39; problem is very much more complex and pulling the values out beforehand is less attractive.  I was hoping there was some &#39;trick&#39;  i could use -"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1549635452, "last_edit_date": 1549635452, "creation_date": 1549627617, "answer_id": 54592131, "question_id": 54591765, "link": "https://stackoverflow.com/questions/54591765/borrowing-within-a-vector-of-structures/54592131#54592131", "title": "Borrowing within a vector of structures", "body": "<p>You are trying to set spreadsheet vector element while iterating inside of it. Since you always wanting to use <code>spreadsheet[0].amount</code> and  <code>spreadsheet[1].amount</code> you can clone this values into another variable and work with them instead of using them inside of spreadsheet.</p>\n\n<p>Here is the working code:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Column {\n    header: String,\n    amount: i32,\n}\n\nfn main() {\n    let mut spreadsheet: Vec&lt;Column&gt; = Vec::new();\n\n    spreadsheet.push(Column {\n        header: \"Car\".to_string(),\n        amount: 30300,\n    });\n    spreadsheet.push(Column {\n        header: \"House\".to_string(),\n        amount: 210800,\n    });\n    spreadsheet.push(Column {\n        header: \"Total\".to_string(),\n        amount: 0,\n    });\n\n    let car_amount = spreadsheet[0].amount;\n    let header_amount = spreadsheet[1].amount;\n\n    spreadsheet.iter_mut().for_each(|column| {\n        if column.header == \"Total\" {\n            column.amount = car_amount + header_amount;\n        } else {\n            column.amount -= 300;\n        }\n    });\n\n    for column in spreadsheet {\n        println!(\"{:?}\", column);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e96f8297f525d4359d78722cdb474bec\" rel=\"nofollow noreferrer\">Playground with using <code>iter()</code></a></p>\n\n<p>Since you want to do these operations in a for loop instead of iterator you can change the <code>spreadsheet.iter_mut()...</code> code block to the following:</p>\n\n<pre><code>for column in &amp;mut spreadsheet {\n    if column.header == \"Total\" {\n        column.amount = car_amount + header_amount;\n    } else {\n        column.amount -= 300;\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=567693edcdae2f07dfec1de2f3650477\" rel=\"nofollow noreferrer\">Playground with using <code>for loop</code></a></p>\n"}], "owner": {"reputation": 1, "user_id": 11033344, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/458f09703237f96690a30f8cc015de17?s=128&d=identicon&r=PG&f=1", "display_name": "scottd", "link": "https://stackoverflow.com/users/11033344/scottd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1549635452, "creation_date": 1549626422, "last_edit_date": 1549626603, "question_id": 54591765, "link": "https://stackoverflow.com/questions/54591765/borrowing-within-a-vector-of-structures", "title": "Borrowing within a vector of structures", "body": "<p>I have a vector of structures and i would like to update one structure with values in another. For my use case, I prefer to do it in a loop. I'm hitting the borrow-checker but it seems like there must be a simple solution to this type of problem.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Column {\n    header: String,\n    amount: i32,\n}\n\nfn main() {\n    let mut spreadsheet: Vec&lt;Column&gt; = Vec::new();\n\n    spreadsheet.push(Column {\n        header: \"Car\".to_string(),\n        amount: 30300,\n    });\n    spreadsheet.push(Column {\n        header: \"House\".to_string(),\n        amount: 210800,\n    });\n    spreadsheet.push(Column {\n        header: \"Total\".to_string(),\n        amount: 0,\n    });\n\n    for column in &amp;mut spreadsheet {\n        //mutable borrow here\n        if column.header == \"Total\" {\n            column.amount = spreadsheet[0].amount //immutable borrow here\n                        + spreadsheet[1].amount;\n        } else {\n            column.amount -= 300;\n        }\n    }\n\n    for column in spreadsheet {\n        println!(\"{:?}\", column);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549627485, "post_id": 54590437, "comment_id": 95980240, "body": "Note <code>char</code> != <code>u8</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 1, "last_activity_date": 1549624431, "creation_date": 1549624431, "answer_id": 54591230, "question_id": 54590437, "link": "https://stackoverflow.com/questions/54590437/how-can-i-memcpy-between-c-char-and-vecu8/54591230#54591230", "title": "How can I memcpy between *c_char and Vec&lt;u8&gt;", "body": "<p>use <code>Cstring::from_raw(buf).into_bytes()</code> and vice versa (<a href=\"https://doc.rust-lang.org/stable/std/ffi/struct.CString.html#method.from_raw\" rel=\"nofollow noreferrer\">documentation</a>) to convert <code>buf</code> to/from byte slice, then <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.copy_from_slice\" rel=\"nofollow noreferrer\">copy_from_slice</a> to copy data to <code>DISK</code> - this function uses memcpy internally</p>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1549624570, "creation_date": 1549624570, "answer_id": 54591259, "question_id": 54590437, "link": "https://stackoverflow.com/questions/54590437/how-can-i-memcpy-between-c-char-and-vecu8/54591259#54591259", "title": "How can I memcpy between *c_char and Vec&lt;u8&gt;", "body": "<p>Use <a href=\"https://doc.rust-lang.org/stable/std/ptr/fn.copy_nonoverlapping.html\" rel=\"noreferrer\"><code>std::ptr::copy_nonoverlapping</code></a>.</p>\n\n<pre><code>use std::ptr;\n\n// Copy from disk to buffer\nextern \"C\" unsafe fn pread(\n    _h: *mut c_void,\n    buf: *mut c_char,\n    count: uint32_t,\n    offset: uint64_t,\n    _flags: uint32_t,\n) -&gt; c_int {\n    // TODO: bounds check\n    ptr::copy_nonoverlapping(&amp;DISK.lock()[offset], buf as *mut u8, count);\n    count\n}\n</code></pre>\n"}], "owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 775, "favorite_count": 0, "accepted_answer_id": 54591259, "answer_count": 2, "score": 1, "last_activity_date": 1549639827, "creation_date": 1549621840, "last_edit_date": 1549639827, "question_id": 54590437, "link": "https://stackoverflow.com/questions/54590437/how-can-i-memcpy-between-c-char-and-vecu8", "title": "How can I memcpy between *c_char and Vec&lt;u8&gt;", "body": "<p>I have a <code>Vec&lt;u8&gt;</code> which is pretending to be a large disk:</p>\n\n<pre><code>lazy_static! {\n    static ref DISK: Mutex&lt;Vec&lt;u8&gt;&gt; = Mutex::new(vec![0; 100 * 1024 * 1024]);\n}\n</code></pre>\n\n<p>My Rust code (called from C directly) has some functions to read and write into this disk, but I don't understand what I'd write in those functions to memcpy between the disk and the C caller (or if <code>Vec</code> is the best structure to use here at all):</p>\n\n<pre><code>extern \"C\" fn pread(\n    _h: *mut c_void,\n    buf: *mut c_char,\n    _count: uint32_t,\n    offset: uint64_t,\n    _flags: uint32_t,\n) -&gt; c_int {\n    // ?\n}\n\nextern \"C\" fn pwrite(\n    _h: *mut c_void,\n    buf: *const c_char,\n    _count: uint32_t,\n    offset: uint64_t,\n    _flags: uint32_t,\n) -&gt; c_int {\n    // ?\n}\n</code></pre>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549621620, "post_id": 54590338, "comment_id": 95977019, "body": "Please use <code>rustfmt</code> to ensure that your code matches the style guidelines"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549621830, "post_id": 54590338, "comment_id": 95977136, "body": "Please note, that this has nothing to do with <code>extern &quot;C&quot;</code>. It segfaults nevertheless <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3cedf8eca72de930e79d093ea22a9212\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "edited": false, "score": 0, "creation_date": 1549621917, "post_id": 54590338, "comment_id": 95977189, "body": "How can I make the Box not be dropped?  Although in the example my handle is empty, in the real code I want to return a handle which is passed back later to other functions, then freed in close."}, {"owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "edited": false, "score": 0, "creation_date": 1549622418, "post_id": 54590338, "comment_id": 95977499, "body": "Can you give an example of how to call it?  It seems like <code>leak</code> returns the inner T, but that can&#39;t be cast to the final <code>void*</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549623370, "post_id": 54590338, "comment_id": 95978050, "body": "Oddly, this only seems to segfault when <code>Handle</code> is zero-sized."}, {"owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "edited": false, "score": 0, "creation_date": 1549623786, "post_id": 54590338, "comment_id": 95978336, "body": "Adding some more debugging to the C side shows that the pointer returned by open == <code>0x1</code> which is obviously completely wrong.  This does explain why it crashes in the close function, but not why <code>Box::into_raw</code> returns a non-pointer ..."}, {"owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "edited": false, "score": 0, "creation_date": 1549623949, "post_id": 54590338, "comment_id": 95978427, "body": "OK it turns out the whole code works if I put some dummy fields in the handle (without using <code>leak</code>)."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1549624158, "post_id": 54590338, "comment_id": 95978542, "body": "@E4_net_or_something_like_that <code>Box::into_raw</code> &quot;forgets&quot; the <code>Box</code>, so the <code>Box</code> is <i>not</i> dropped when <code>open</code> returns."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 4, "last_activity_date": 1549623573, "creation_date": 1549623573, "answer_id": 54590983, "question_id": 54590338, "link": "https://stackoverflow.com/questions/54590338/why-does-a-box-pointer-passed-to-c-and-back-to-rust-segfault/54590983#54590983", "title": "Why does a Box pointer passed to C and back to Rust segfault?", "body": "<p>The problem is you didn't cast the pointer back to a <code>Handle</code> pointer while transforming it back to a <code>Box</code>, and got a <code>Box</code> of the wrong type.</p>\n\n<p>This works:</p>\n\n<pre><code>fn close(h: *mut c_void) {\n    let h = unsafe { Box::from_raw(h as *mut Handle) };\n    //                               ^^^^^^^^^^^^^^\n    drop(h);\n}\n</code></pre>\n\n<p>In your code, <code>h</code> is a <code>std::boxed::Box&lt;std::ffi::c_void&gt;</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1549623952, "post_id": 54591058, "comment_id": 95978431, "body": "Ah! I was still searching <i>why</i> it segfaults to add in my answer. I suspected something like that, but wasn&#39;t sure yet. I beat you by a few minutes, but your answer is much better!"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1549624071, "last_edit_date": 1549624071, "creation_date": 1549623813, "answer_id": 54591058, "question_id": 54590338, "link": "https://stackoverflow.com/questions/54590338/why-does-a-box-pointer-passed-to-c-and-back-to-rust-segfault/54591058#54591058", "title": "Why does a Box pointer passed to C and back to Rust segfault?", "body": "<p>In <code>close</code>, you end up creating a <code>Box&lt;c_void&gt;</code> instead of a <code>Box&lt;Handle&gt;</code> because you didn't cast the <code>*mut c_void</code> back to <code>*mut Handle</code> before invoking <code>Box::from_raw</code>.</p>\n\n<pre><code>fn close(h: *mut c_void) {\n    let h = unsafe { Box::from_raw(h as *mut Handle) };\n    drop(h);\n}\n</code></pre>\n\n<p>By the way, <code>Box</code> doesn't actually allocate any memory for a zero-sized type (such as <code>Handle</code> here) and uses a fixed, non-zero pointer value instead (which, in the current implementation, is the alignment of the type; a zero-sized type has an alignment of 1 by default). The destructor for a boxed zero-sized type knows not to try to deallocate memory at this fictitious memory address, but <code>c_void</code> is not a zero-sized type (it has size 1), so the destructor for <code>Box&lt;c_void&gt;</code> tries to free memory at address <code>0x1</code>, which causes the segfault.</p>\n"}], "owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 794, "favorite_count": 0, "accepted_answer_id": 54591058, "answer_count": 2, "score": 5, "last_activity_date": 1549636888, "creation_date": 1549621510, "last_edit_date": 1549636888, "question_id": 54590338, "link": "https://stackoverflow.com/questions/54590338/why-does-a-box-pointer-passed-to-c-and-back-to-rust-segfault", "title": "Why does a Box pointer passed to C and back to Rust segfault?", "body": "<p>Some C code calls into the Rust <code>open</code> call below which returns a pointer.  Later the C code passes the exact same pointer back to the <code>close</code> function which tries to drop (free) it.  It segfaults in <code>free(3)</code>.  Why?</p>\n\n<pre><code>use std::os::raw::{c_int, c_void};\n\nstruct Handle;\n\nextern \"C\" fn open(_readonly: c_int) -&gt; *mut c_void {\n    let h = Handle;\n    let h = Box::new(h);\n    return Box::into_raw(h) as *mut c_void;\n}\n\nextern \"C\" fn close(h: *mut c_void) {\n    let h = unsafe { Box::from_raw(h) };\n    // XXX This segfaults - why?\n    drop(h);\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "owner": {"reputation": 5146, "user_id": 851835, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/20bf44ece0e0db121f9a44812b113e03?s=128&d=identicon&r=PG", "display_name": "updogliu", "link": "https://stackoverflow.com/users/851835/updogliu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 0, "closed_date": 1549622504, "answer_count": 0, "score": 1, "last_activity_date": 1549606960, "creation_date": 1549606960, "question_id": 54586997, "link": "https://stackoverflow.com/questions/54586997/why-do-mut-and-non-mut-referrence-fields-have-different-lifetimes-when-retur", "closed_reason": "Duplicate", "title": "Why do `mut` and non-`mut` referrence fields have different lifetimes when returned from a getter?", "body": "<p>The code example below seems to be showing that the lifetimes of <code>mut</code> and non-<code>mut</code> reference field are different. Is that intended?</p>\n\n<p>This code compiles successfully.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo&lt;'a&gt; {\n    data: &amp;'a u32,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn foo(&amp;self) -&gt; &amp;'a u32 {\n        self.data\n    }\n}\n</code></pre>\n\n<p>However, after adding <code>mut</code> to the <code>data</code> field, it fails due to a lifetime problem.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo&lt;'a&gt; {\n    data: &amp;'a mut u32,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn foo(&amp;self) -&gt; &amp;'a u32 {\n        self.data\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src/main.rs:10:9\n   |\n10 |         self.data\n   |         ^^^^^^^^^\n   |\nnote: ...the reference is valid for the lifetime 'a as defined on the impl at 8:6...\n  --&gt; src/main.rs:8:6\n   |\n8  | impl&lt;'a&gt; Foo&lt;'a&gt; {\n   |      ^^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the method body at 9:5\n  --&gt; src/main.rs:9:5\n   |\n9  | /     fn foo(&amp;self) -&gt; &amp;'a u32 {\n10 | |         self.data\n11 | |     }\n   | |_____^\n</code></pre>\n\n<p>Why didn't the non-mut version of <code>self.data</code> have lifetime of <code>anonymous lifetime #1</code> as well?</p>\n\n<p>(BTW, changing <code>fn foo(&amp;self)</code> to <code>fn foo(&amp;'a self)</code> will compile, but  still, why does the non-<code>mut</code> version compiles without this change?)</p>\n"}, {"tags": ["unit-testing", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 19, "last_activity_date": 1573114793, "last_edit_date": 1573114793, "creation_date": 1549601620, "answer_id": 54586148, "question_id": 54585804, "link": "https://stackoverflow.com/questions/54585804/how-to-run-a-specific-unit-test-in-rust/54586148#54586148", "title": "How to run a specific unit test in Rust?", "body": "<p>Using <code>cargo test test-name</code> filters tests that start with <strong>test-name</strong>. It is possible that it can run multiple tests. It doesn't matter if the test function is in some <code>mod</code> or not, it still able to execute multiple test.</p>\n\n<p>You can avoid this by adding  <code>-- --exact</code> as argument. </p>\n\n<p>If your test is not in any mod you can simply execute like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo test test_fn_name -- --exact\n</code></pre>\n\n<p>Otherwise you need to provide test with full namespace:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo test test_mod_name::test_fn_name -- --exact\n</code></pre>\n\n<p>For your case the solution will be : </p>\n\n<pre><code>cargo test --package school_info repeat_students_should_not_get_full_marks -- --exact\n</code></pre>\n"}], "owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5359, "favorite_count": 2, "accepted_answer_id": 54586148, "answer_count": 1, "score": 14, "last_activity_date": 1573114793, "creation_date": 1549598338, "last_edit_date": 1549873611, "question_id": 54585804, "link": "https://stackoverflow.com/questions/54585804/how-to-run-a-specific-unit-test-in-rust", "title": "How to run a specific unit test in Rust?", "body": "<p>I have unit tests in a package named <code>school-info</code> and there is a test function called <code>repeat_students_should_not_get_full_marks</code>.</p>\n\n<p>I can run all tests in the module by <code>cargo test --package school_info</code>.</p>\n\n<p><code>cargo test test-name</code> will match and run tests which contain <code>test_name</code> though this wasn't helpful.</p>\n\n<p>How can I run only the test <code>repeat_students_should_not_get_full_marks</code> without running all the tests? I could not find a command in the documentation to do it.</p>\n"}, {"tags": ["compiler-errors", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 10230, "user_id": 2427222, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4h1qN.png?s=128&g=1", "display_name": "ymonad", "link": "https://stackoverflow.com/users/2427222/ymonad"}, "edited": false, "score": 1, "creation_date": 1549598436, "post_id": 54585780, "comment_id": 95968233, "body": "Which version of rust are you using ? it compiles with <code>rust roman_numerals.rs</code> using <code>rustc 1.32.0-nightly</code>"}, {"owner": {"reputation": 10230, "user_id": 2427222, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4h1qN.png?s=128&g=1", "display_name": "ymonad", "link": "https://stackoverflow.com/users/2427222/ymonad"}, "edited": false, "score": 1, "creation_date": 1549598946, "post_id": 54585780, "comment_id": 95968346, "body": "Maybe I got it, your link to <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/run-pass-fulldeps/auxiliary/roman_numerals.rs\" rel=\"nofollow noreferrer\">github-repo</a>, and <a href=\"https://doc.rust-lang.org/unstable-book/language-features/plugin.html#syntax-extensions\" rel=\"nofollow noreferrer\">code in the book</a> is different. try the code in github."}, {"owner": {"reputation": 10230, "user_id": 2427222, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4h1qN.png?s=128&g=1", "display_name": "ymonad", "link": "https://stackoverflow.com/users/2427222/ymonad"}, "edited": false, "score": 1, "creation_date": 1549599498, "post_id": 54585780, "comment_id": 95968456, "body": "And the code in github says that <code>This code also appears in src&#47;doc&#47;unstable-book&#47;src&#47;language-features&#47;plugin.md. Please keep the two copies in sync!  FIXME: have rustdoc read this file</code>, but not yet sync&#39;ed until now."}, {"owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "reply_to_user": {"reputation": 10230, "user_id": 2427222, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4h1qN.png?s=128&g=1", "display_name": "ymonad", "link": "https://stackoverflow.com/users/2427222/ymonad"}, "edited": false, "score": 0, "creation_date": 1549599765, "post_id": 54585780, "comment_id": 95968507, "body": "@ymonad Yes, I used the code from the book. Using the code from the github repo instead of the code from the book made it compile. Thank you very much. I was stuck on this for days."}, {"owner": {"reputation": 10230, "user_id": 2427222, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4h1qN.png?s=128&g=1", "display_name": "ymonad", "link": "https://stackoverflow.com/users/2427222/ymonad"}, "edited": false, "score": 1, "creation_date": 1549600051, "post_id": 54585780, "comment_id": 95968582, "body": "Glad that you solved the problem. maybe I should post it as answer for someone who might stuck in the future."}], "answers": [{"comments": [{"owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "edited": false, "score": 0, "creation_date": 1549847439, "post_id": 54586031, "comment_id": 96038142, "body": "Thanks for getting me unstuck. I learn from this. You may check in my repo if you like <a href=\"https://www.gitlab.com/montao/forbasilers\" rel=\"nofollow noreferrer\">gitlab.com/montao/forbasilers</a>"}], "tags": [], "owner": {"reputation": 10230, "user_id": 2427222, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4h1qN.png?s=128&g=1", "display_name": "ymonad", "link": "https://stackoverflow.com/users/2427222/ymonad"}, "is_accepted": true, "score": 2, "last_activity_date": 1549601027, "last_edit_date": 1592644375, "creation_date": 1549600488, "answer_id": 54586031, "question_id": 54585780, "link": "https://stackoverflow.com/questions/54585780/cannot-build-plugin-example/54586031#54586031", "title": "Cannot build plugin example", "body": "<p>The <a href=\"https://doc.rust-lang.org/unstable-book/language-features/plugin.html#syntax-extensions\" rel=\"nofollow noreferrer\">code in the unstable book</a> and <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/run-pass-fulldeps/auxiliary/roman_numerals.rs\" rel=\"nofollow noreferrer\">code in current source of rust</a> is different.</p>\n<p>In the code, it says that:</p>\n<blockquote>\n<p>This code also appears in src/doc/unstable-book/src/language-features/plugin.md.</p>\n<p>Please keep the two copies in sync!  FIXME: have rustdoc read this file</p>\n</blockquote>\n<p>But seems not yet fixed until now.</p>\n<p>Your error occurs from <code>use syntax::ext::quote::rt::Span;</code> in the unstable book, which should currently be <code>use syntax_pos::Span;</code></p>\n<p>Since the book is for unstable features in rust, and according to <a href=\"https://doc.rust-lang.org/unstable-book/the-unstable-book.html\" rel=\"nofollow noreferrer\">top page of the book</a>,</p>\n<blockquote>\n<p>Because this documentation relates to unstable features, we make no guarantees that what is contained here is accurate or up to date. It's developed on a best-effort basis. Each page will have a link to its tracking issue with the latest developments; you might want to check those as well.</p>\n</blockquote>\n<p>Therefore, there might be similar problem in other code of the book.</p>\n"}], "owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 34, "favorite_count": 0, "accepted_answer_id": 54586031, "answer_count": 1, "score": 0, "last_activity_date": 1549601027, "creation_date": 1549598088, "question_id": 54585780, "link": "https://stackoverflow.com/questions/54585780/cannot-build-plugin-example", "title": "Cannot build plugin example", "body": "<p>I'm trying to build <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/run-pass-fulldeps/auxiliary/roman_numerals.rs\" rel=\"nofollow noreferrer\">the plugin example</a> from the book but it won't work:</p>\n\n<pre><code>rustc failed to resolve: could not find `quote` in `ext`\n</code></pre>\n\n<p>What am I supposed to do? The example does not even have any build instructions. Is this on purpose?</p>\n"}, {"tags": ["rust", "char"], "answers": [{"comments": [{"owner": {"reputation": 565, "user_id": 7370354, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53334b0e9fb1675ff5fd29ec589f29c?s=128&d=identicon&r=PG", "display_name": "Kartik Soneji", "link": "https://stackoverflow.com/users/7370354/kartik-soneji"}, "edited": false, "score": 0, "creation_date": 1585511608, "post_id": 54583437, "comment_id": 107779343, "body": "There are several valid reasons to perform arithmetic on character code. One example is implement the ceaser cypher as: <code>char new = &#39;a&#39; + (old - &#39;a&#39; + 1) % 26</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 565, "user_id": 7370354, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53334b0e9fb1675ff5fd29ec589f29c?s=128&d=identicon&r=PG", "display_name": "Kartik Soneji", "link": "https://stackoverflow.com/users/7370354/kartik-soneji"}, "edited": false, "score": 1, "creation_date": 1585513041, "post_id": 54583437, "comment_id": 107779830, "body": "@KartikSoneji which is meaningless in a Unicode world and barely meaningful in an ASCII world. You&#39;d do that on bytes after checking that they are indeed letters of the Latin alphabet."}, {"owner": {"reputation": 565, "user_id": 7370354, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53334b0e9fb1675ff5fd29ec589f29c?s=128&d=identicon&r=PG", "display_name": "Kartik Soneji", "link": "https://stackoverflow.com/users/7370354/kartik-soneji"}, "edited": false, "score": 0, "creation_date": 1585514998, "post_id": 54583437, "comment_id": 107780483, "body": "Of course, but it saves a step, and feels more intuitive to me at least. Another example is to check if a character is a valid character between a and m (for whatever reason): <code>if(&#39;a&#39; &lt;= ch &amp;&amp; ch &lt;= &#39;m&#39;)</code>. It eliminates magic numbers in the code and the meaning can be immediately grasped."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 565, "user_id": 7370354, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53334b0e9fb1675ff5fd29ec589f29c?s=128&d=identicon&r=PG", "display_name": "Kartik Soneji", "link": "https://stackoverflow.com/users/7370354/kartik-soneji"}, "edited": false, "score": 1, "creation_date": 1585515538, "post_id": 54583437, "comment_id": 107780668, "body": "@KartikSoneji I&#39;m not sure where you&#39;re going here. <code>char</code> does implement <code>PartialOrd</code>, this is completely orthogonal from <code>Sub</code>."}, {"owner": {"reputation": 565, "user_id": 7370354, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53334b0e9fb1675ff5fd29ec589f29c?s=128&d=identicon&r=PG", "display_name": "Kartik Soneji", "link": "https://stackoverflow.com/users/7370354/kartik-soneji"}, "edited": false, "score": 0, "creation_date": 1585515721, "post_id": 54583437, "comment_id": 107780718, "body": "I come from languages like Java and C++, and am new to Rust. I assumed that if char did not implement <code>Sub</code> then it would not implement <code>PartialOrd</code> as well. Seems strange to me."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 565, "user_id": 7370354, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53334b0e9fb1675ff5fd29ec589f29c?s=128&d=identicon&r=PG", "display_name": "Kartik Soneji", "link": "https://stackoverflow.com/users/7370354/kartik-soneji"}, "edited": false, "score": 0, "creation_date": 1585516235, "post_id": 54583437, "comment_id": 107780878, "body": "@KartikSoneji For example, in C++, Java and Rust, strings are comparable, but not subtractable."}, {"owner": {"reputation": 565, "user_id": 7370354, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53334b0e9fb1675ff5fd29ec589f29c?s=128&d=identicon&r=PG", "display_name": "Kartik Soneji", "link": "https://stackoverflow.com/users/7370354/kartik-soneji"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1585516402, "post_id": 54583437, "comment_id": 107780923, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/210548/discussion-between-kartik-soneji-and-mcarton\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 14, "last_activity_date": 1549585004, "last_edit_date": 1549585004, "creation_date": 1549579366, "answer_id": 54583437, "question_id": 54583399, "link": "https://stackoverflow.com/questions/54583399/how-do-i-subtract-one-character-from-another-in-rust/54583437#54583437", "title": "How do I subtract one character from another in Rust?", "body": "<p>The operation is meaningless in a Unicode world, and barely ever meaningful in an ASCII world, this is why Rust doesn't provide it directly, but there are two ways to do this depending on your use case:</p>\n\n<ul>\n<li>Cast the characters to their scalar value: <code>'Z' as u32 - 'A' as u32</code></li>\n<li>Use byte character literals: <code>b'Z' - b'A'</code></li>\n</ul>\n"}], "owner": {"reputation": 571, "user_id": 6780089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcb6413d5c1778241f37cc86901c957a?s=128&d=identicon&r=PG&f=1", "display_name": "YLyu", "link": "https://stackoverflow.com/users/6780089/ylyu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1479, "favorite_count": 0, "accepted_answer_id": 54583437, "answer_count": 1, "score": 10, "last_activity_date": 1549585851, "creation_date": 1549579095, "last_edit_date": 1549585851, "question_id": 54583399, "link": "https://stackoverflow.com/questions/54583399/how-do-i-subtract-one-character-from-another-in-rust", "title": "How do I subtract one character from another in Rust?", "body": "<p>In Java, I could do this.</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>int diff = 'Z' - 'A'; // 25\n</code></pre>\n\n<p>I have tried the same in Rust:</p>\n\n<pre><code>fn main() {\n    'Z' - 'A';\n}\n</code></pre>\n\n<p>but the compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `-` cannot be applied to type `char`\n --&gt; src/main.rs:2:5\n  |\n2 |     'Z' - 'A';\n  |     ^^^^^^^^^\n  |\n  = note: an implementation of `std::ops::Sub` might be missing for `char`\n</code></pre>\n\n<p>How can I do the equivalent operation in Rust?</p>\n"}, {"tags": ["unit-testing", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1549576091, "post_id": 54582761, "comment_id": 95962619, "body": "I guess that your functions have a side effect, you can check this effect."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549578649, "post_id": 54582761, "comment_id": 95963639, "body": "I have absolutely no idea what it is or what it does, but the project name looks somewhat promising: <a href=\"https://github.com/DavidDeSimone/mock_derive\" rel=\"nofollow noreferrer\">mock_derive</a>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549612517, "post_id": 54582761, "comment_id": 95972461, "body": "Follow-up of <a href=\"https://users.rust-lang.org/t/rust-how-to-check-whether-a-function-being-called-or-not/25045\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": true, "score": 5, "last_activity_date": 1549592733, "last_edit_date": 1549592733, "creation_date": 1549577574, "answer_id": 54583128, "question_id": 54582761, "link": "https://stackoverflow.com/questions/54582761/how-to-check-if-a-function-has-been-called-in-rust/54583128#54583128", "title": "How to check if a function has been called in Rust?", "body": "<p>Here is a na\u00efve attempt using <code>#[cfg(test)]</code> in multiple places:</p>\n\n<pre><code>struct Registration {\n    students: Vec&lt;String&gt;,\n    #[cfg(test)]\n    function_1_called: bool,\n}\n\nimpl Registration {\n    fn new() -&gt; Self {\n        Registration {\n            students: Vec::new(),\n            #[cfg(test)]\n            function_1_called: false,\n        }\n    }\n\n    fn function_1(&amp;mut self, students: Vec&lt;String&gt;) {\n        self.students.extend(students);\n        #[cfg(test)]\n        {\n            self.function_1_called = true;\n        }\n    }\n\n    fn function_2(&amp;mut self, students: Vec&lt;String&gt;) {}\n\n    fn f(&amp;mut self, students: Vec&lt;String&gt;) {\n        if students.len() &lt; 100 {\n            self.function_1(students);\n        } else {\n            self.function_2(students);\n        }\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n    let r = Registration::new();\n    // won't compile during `run`:\n    // println!(\"{}\", r.function_1_called);\n}\n\n#[cfg(test)]\nmod test {\n    use super::*;\n    #[test]\n    fn test_f() {\n        let mut r = Registration::new();\n        r.function_1(vec![\"Alice\".to_string(), \"Bob\".to_string()]);\n        assert!(r.function_1_called);\n    }\n}\n</code></pre>\n\n<p>The code is loosely based on the snippets that you provided. There is a <code>Registration</code> struct that holds a list of student names, two methods <code>function_1</code> and <code>function_2</code> for registering students, and a function <code>f</code> that chooses between <code>function_1</code> and <code>function_2</code> depending o how many students there are.</p>\n\n<p>During tests, <code>Registration</code> is compiled with an additional Boolean variable <code>function_1_called</code>. This variable is set only if <code>function_1</code> is called (the block of code that does that is also marked with <code>#[cfg(test)]</code>).</p>\n\n<p>In combination, this makes an additional Boolean flag available during the tests, so that you can make assertions like the following one:</p>\n\n<pre><code>assert!(r.function_1_called);\n</code></pre>\n\n<p>Obviously, this could work for structures much more complicated than a single boolean flag (which does not at all mean that you should actually do it).</p>\n\n<p>I cannot comment on whether this is idiomatic in Rust or not. The whole setup feels as if it should be hidden behind fancy macros, so if this style of testing is used in Rust at all, there should already be crates that provide those (or similar) macros.</p>\n"}, {"comments": [{"owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "edited": false, "score": 1, "creation_date": 1549592278, "post_id": 54584732, "comment_id": 95967130, "body": "I guess your opinion depends on the language you are most familiar with, unit tests should test the functionality not the other functions , Intention here was to test whether other function being called from the method"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "edited": false, "score": 2, "creation_date": 1549592969, "post_id": 54584732, "comment_id": 95967253, "body": "@Kalanamith Since you are not simply testing the external behavior of your function (comparing the return result), but you also want to see whether a certain other method is invoked, you are essentially testing the side effects (because the method invocation by itself is a sort of &quot;side-effect&quot;, albeit a rather strange one). The usual practice when dealing with any kind of side-effects in tests would be to make the function <i>generic over an interpreter that performs the side effects</i>, and then to <i>inject</i> a special test-interpreter during the tests."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "edited": false, "score": 2, "creation_date": 1549593089, "post_id": 54584732, "comment_id": 95967286, "body": "@Kalanamith In this sense, what Shepmaster proposed here is much closer to what I would usually do when writing my Scala code (this approach seems increasingly language agnostic, and applicable in many different ecosystems). I tried the <code>cfg</code>-approach mostly because I was curious whether it would compile at all, not because I would suggest it as a best practice."}, {"owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549593708, "post_id": 54584732, "comment_id": 95967414, "body": "@AndreyTyukin Yep, Agree."}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 1, "creation_date": 1549593854, "post_id": 54584732, "comment_id": 95967442, "body": "This bit <code>impl&lt;R: Registration&gt; Registration for &amp;&#39;_ mut R</code> looks a bit like black magic. Can you add a little on why its needed and what it does?"}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1549593916, "post_id": 54584732, "comment_id": 95967456, "body": "Also - Can you avoid the need for changing <code>&amp;self</code> to <code>&amp;mut self</code> in the signature by using a RefCell for interior mutablity?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1549595058, "post_id": 54584732, "comment_id": 95967672, "body": "@MichaelAnderson yes, interior mutability is a good and common solution when your test implementations need mutability but your real code does/can not. That implementation is just <a href=\"https://stackoverflow.com/q/28799372/155423\">implementing the trait for all references to types that implement the trait</a>. That&#39;s what allows us to pass in <code>&amp;mut reg</code> in the test while holding onto our own copy. You could also use something like an <code>Rc</code> / <code>Arc</code> to keep a shared reference (and then you <i>need</i> to use interior mutability)."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549634104, "post_id": 54584732, "comment_id": 95983899, "body": "@Shepmaster In the accepted answer to the last question you linked, it is said: <i>&quot;For this reason, taking the parameter to <code>runner()</code> by value is probably undesirable; you should instead be taking it by reference.&quot;</i> Wouldn&#39;t it also apply here if <code>mut registration: impl Trait</code> is replaced by <code>registration: &amp;mut impl Trait</code>? Looks as if it could simplify the example a little bit."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 1, "creation_date": 1549635946, "post_id": 54584732, "comment_id": 95984929, "body": "@AndreyTyukin you are right that it would simplify this example, but I&#39;d say that&#39;s largely because there&#39;s only the test code to look at. In a bigger example, you&#39;d want to prioritize the production code. Maybe you&#39;d want the <code>R</code> to be owned by the struct containing the method <code>registration</code> so that it can be returned from a function that created <code>R</code>. See the semi-related <a href=\"https://rust-lang-nursery.github.io/api-guidelines/interoperability.html#generic-readerwriter-functions-take-r-read-and-w-write-by-value-c-rw-value\" rel=\"nofollow noreferrer\">API guideline about taking <code>Read</code> / <code>Write</code> by value</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 9, "last_activity_date": 1549591435, "last_edit_date": 1549591435, "creation_date": 1549588045, "answer_id": 54584732, "question_id": 54582761, "link": "https://stackoverflow.com/questions/54582761/how-to-check-if-a-function-has-been-called-in-rust/54584732#54584732", "title": "How to check if a function has been called in Rust?", "body": "<p>Strong opinion alert: <em>you are doing your testing wrong</em>. This is on the same level as \"how do I test a private method\". You shouldn't care about the implementation of <code>registration</code> to this level of detail.</p>\n\n<p>That being said, if it's actually important to know which <code>if</code> branch is taken, then use dependency injection:</p>\n\n<pre><code>fn registration(mut registration: impl Registration, registrar: i32) {\n    let num_of_students = 0;\n    let student_limit = 0;\n\n    if num_of_students &lt; student_limit {\n        registration.function_one(registrar, num_of_students);\n    } else {\n        registration.function_two(num_of_students);\n    }\n}\n\ntrait Registration {\n    fn function_one(&amp;mut self, registrar: i32, num_of_students: i32);\n    fn function_two(&amp;mut self, num_of_students: i32);\n}\n\nimpl&lt;R: Registration&gt; Registration for &amp;'_ mut R {\n    fn function_one(&amp;mut self, registrar: i32, num_of_students: i32) {\n        (**self).function_one(registrar, num_of_students)\n    }\n    fn function_two(&amp;mut self, num_of_students: i32) {\n        (**self).function_two(num_of_students)\n    }\n}\n\n/*\n// An example implementation for production\nstruct DatabaseRegistration;\n\nimpl Registration for DatabaseRegistration {\n    fn function_one(&amp;mut self, registrar: i32, num_of_students: i32) {\n        eprintln!(\"Do DB work: {}, {}\", registrar, num_of_students)\n    }\n    fn function_two(&amp;mut self, num_of_students: i32) {\n        eprintln!(\"Do DB work: {}\", num_of_students)\n    }\n}\n*/\n\n#[cfg(test)]\nmod test {\n    use super::*;\n\n    #[derive(Debug, Copy, Clone, Default)]\n    struct TestRegistration {\n        calls_to_one: usize,\n        calls_to_two: usize,\n    }\n\n    impl Registration for TestRegistration {\n        fn function_one(&amp;mut self, _: i32, _: i32) {\n            self.calls_to_one += 1;\n        }\n        fn function_two(&amp;mut self, _: i32) {\n            self.calls_to_two += 1;\n        }\n    }\n\n    #[test]\n    fn calls_the_right_one() {\n        let mut reg = TestRegistration::default();\n        registration(&amp;mut reg, 42);\n        assert_eq!(1, reg.calls_to_two)\n    }\n}\n</code></pre>\n\n<p>Once you have done this, then you can see that <code>registration</code> calls the appropriate trait function (as shown in the example test). </p>\n\n<p>This prevents your production code from having test-specific detritus strewn about while also giving you the ability to be more flexible and test more cases rapidly.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28370126/155423\">How can I test stdin and stdout?</a></li>\n<li><a href=\"https://stackoverflow.com/q/51919079/155423\">How to mock external dependencies in tests?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47077925/155423\">Is there a cleaner way to test functions that use functions that require user input in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35858323/155423\">How can I test Rust methods that depend on environment variables?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50888225/155423\">Is there a way of detecting whether code is being called from tests in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 914, "favorite_count": 1, "accepted_answer_id": 54583128, "answer_count": 2, "score": 2, "last_activity_date": 1549592733, "creation_date": 1549575704, "last_edit_date": 1549586837, "question_id": 54582761, "link": "https://stackoverflow.com/questions/54582761/how-to-check-if-a-function-has-been-called-in-rust", "title": "How to check if a function has been called in Rust?", "body": "<p>I have a function as follows</p>\n\n<pre><code>pub fn registration(student_id: &amp;T::StudentId, registrar: &amp;T::RegistrarID) {\n    // More code here.\n    if num_of_students &lt; student_limit {\n        Self::function_one(&amp;registrar, &amp;num_of_students);\n    } else {\n        Self::function_two(&amp;num_of_students);\n    }\n}\n</code></pre>\n\n<p>In unit tests, I am planning to check whether <code>function_one</code> or <code>function_two</code> was called.</p>\n\n<pre><code>#[test]\nfn registration_more_students_should_call_functon_one() {\n    with_test_data(\n        &amp;mut TestBuilder::default().num_of_students(1000).build(),\n        || {\n            //assert_called!(module_name::registration(\"TV:009\", \"DF-000-09\"));\n        },\n    );\n}\n</code></pre>\n\n<p>How can I test if a function was called in Rust?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 2, "creation_date": 1549564335, "post_id": 54578859, "comment_id": 95957303, "body": "That&#39;s probably not the main issue here, but... Do you always compile and run random untrusted code pulled from the internet under <code>&#47;root</code>? :)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1549569286, "post_id": 54578859, "comment_id": 95959574, "body": "The <i>encoding</i> may be unchanged, but that only affects programs run <i>in</i> the terminal. The terminal has its own setting determining what <i>charset</i> to use and, by some coincidence, you&#39;ve convinced Cargo to emit one of the control sequences that tells the terminal to change the charset (like changing the font). Type <code>reset</code> to get it back and maybe consider using a different terminal if you want to see all the pretty colors."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1549564834, "creation_date": 1549564834, "answer_id": 54580158, "question_id": 54578859, "link": "https://stackoverflow.com/questions/54578859/why-does-the-output-of-cargo-build-contain-unreadable-characters-when-the-build/54580158#54580158", "title": "Why does the output of cargo build contain unreadable characters when the build fails?", "body": "<p>You can use <code>cargo build --color=never</code> to not use colors.</p>\n\n<hr>\n\n<p>To help you fix the problem while keeping colors, we would need more information. Eg. what terminal emulator you use, what is your locale, etc.</p>\n"}], "owner": {"reputation": 834, "user_id": 9295224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f257d8a2c3096d45044d0807a2f8e43?s=128&d=identicon&r=PG&f=1", "display_name": "bogdan tudose", "link": "https://stackoverflow.com/users/9295224/bogdan-tudose"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 54580158, "answer_count": 1, "score": 1, "last_activity_date": 1549571798, "creation_date": 1549559961, "last_edit_date": 1549571798, "question_id": 54578859, "link": "https://stackoverflow.com/questions/54578859/why-does-the-output-of-cargo-build-contain-unreadable-characters-when-the-build", "title": "Why does the output of cargo build contain unreadable characters when the build fails?", "body": "<p>I am trying to build a simple <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">guessing-game</a> as described in the documentation. </p>\n\n<pre><code>use std::io;\n//use rand::Rng; is not included \n\nfn main() {\n     println!(\"Guess the number!\");\n     let secret_number = rand::thread_rng().gen_range(1, 101);\n     println!(\"The secret number is: {}\", secret_number);\n     println!(\"Please input your guess.\");\n     let mut guess = String::new();\n     io::stdin().read_line(&amp;mut guess)\n          .expect(\"Failed to read line\");\n     println!(\"You guessed: {}\", guess);\n}\n</code></pre>\n\n<p>The above code will not compile due to missing <code>rand::Rng</code> library (note comment). </p>\n\n<p>The problem is that the result of the <code>cargo build</code> command consists of unreadable characters:</p>\n\n<p><a href=\"https://i.stack.imgur.com/rGqpA.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/rGqpA.png\" alt=\"enter image description here\"></a></p>\n\n<p>I am using CentOS 7, Rust version 1.32.0 and Cargo Version 1.32.0. I was able to verify the terminal encoding before and after running <code>cargo-build</code> and it was not changed.</p>\n\n<p>Can someone please explain this behavior?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1549555178, "post_id": 54577215, "comment_id": 95952191, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fde9a8b3939a937d601b2879d89817ba\" rel=\"nofollow noreferrer\">Minimal example to reproduce the error</a>. That&#39;s really not a helpful error message :/  (it get&#39;s better if you use something from that module)"}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 0, "last_activity_date": 1549557173, "last_edit_date": 1549557173, "creation_date": 1549555800, "answer_id": 54577532, "question_id": 54577215, "link": "https://stackoverflow.com/questions/54577215/use-module-inside-module-from-src-folder/54577532#54577532", "title": "use module inside module from src folder", "body": "<p><a href=\"https://stackoverflow.com/a/54577897/2408867\"><strong>The main part of this answer was moved to the duplicate question!</strong></a></p>\n\n<p>So your problem is that <code>use models;</code> looks for <code>models</code> relative to the current module (<code>lib</code>). But <code>models</code> is not a sub module of <code>lib</code>, but of <code>main</code>. So the <strong>correct way to refer to these top level modules</strong> is like that:</p>\n\n<pre><code>use crate::{\n    models,\n    schema::sent_sms,\n}; \n</code></pre>\n\n<hr>\n\n<p>Additional notes:</p>\n\n<ul>\n<li>If you have a executable project and just need a module to have some utility functions in, you usually wouldn't call it <code>lib</code> as that name is the default name for library crates' roots.</li>\n<li>This <code>use</code> statement behavior changed with Rust 2018 (\u2265 1.31))</li>\n<li>Read <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"nofollow noreferrer\">this guide</a> for more information about use statements and how they changed in Rust 2018</li>\n</ul>\n"}], "owner": {"reputation": 5, "user_id": 10368747, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-xfc9kdlDgzo/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaMTL5w9tvgwcCa8tAgtr7rOD2YWDA/mo/photo.jpg?sz=128", "display_name": "Octav", "link": "https://stackoverflow.com/users/10368747/octav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 326, "favorite_count": 0, "closed_date": 1549557182, "accepted_answer_id": 54577532, "answer_count": 1, "score": 0, "last_activity_date": 1549557173, "creation_date": 1549554775, "question_id": 54577215, "link": "https://stackoverflow.com/questions/54577215/use-module-inside-module-from-src-folder", "closed_reason": "Duplicate", "title": "use module inside module from src folder", "body": "<p>I want to separate the application logic to keep my main.rs file clean. I am using diesel for a simple project and I have the following files inside /src folder</p>\n\n<ul>\n<li><strong>main.rs</strong></li>\n<li><em>lib.rs</em></li>\n<li><em>models.rs</em></li>\n<li><em>schema.rs</em></li>\n</ul>\n\n<p>I tried declaring the modules inside <em>main.rs</em> file and using them in the <em>lib.rs</em> file but that produces the following error:</p>\n\n<blockquote>\n  <p>unresolved import <code>models</code>; no <code>models</code> external crate [E0432]</p>\n</blockquote>\n\n<p><strong>main.rs</strong> looks like this:</p>\n\n<pre><code>pub mod lib;\npub mod schema;\npub mod models;\n</code></pre>\n\n<p><strong>lib.rs</strong> produces error with this:</p>\n\n<pre><code>pub use models;\npub use schema::sent_sms;\n</code></pre>\n\n<p>I do not understand why things need to be so awfully complicated in this language, or maybe I am too stupid to understand it.\nPlease help me understand.</p>\n"}, {"tags": ["rust", "gzip", "reqwest"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 5, "creation_date": 1549551185, "post_id": 54575984, "comment_id": 95949616, "body": "You forgot to test the result coming out of <code>.build()</code>. Notice the <code>?</code> operator in the original example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549551755, "post_id": 54575984, "comment_id": 95950003, "body": "Or use <code>.build().expect(&quot;Could not build the client&quot;)</code>, etc."}, {"owner": {"reputation": 1069, "user_id": 5417164, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/9cb24e9b54605c9f72cf40cf425fc814?s=128&d=identicon&r=PG&f=1", "display_name": "joydeep bhattacharjee", "link": "https://stackoverflow.com/users/5417164/joydeep-bhattacharjee"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549551765, "post_id": 54575984, "comment_id": 95950011, "body": "This got me through. Thanks @E_net4"}], "owner": {"reputation": 1069, "user_id": 5417164, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/9cb24e9b54605c9f72cf40cf425fc814?s=128&d=identicon&r=PG&f=1", "display_name": "joydeep bhattacharjee", "link": "https://stackoverflow.com/users/5417164/joydeep-bhattacharjee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 87, "favorite_count": 0, "closed_date": 1549551721, "answer_count": 0, "score": 0, "last_activity_date": 1549551795, "creation_date": 1549550981, "last_edit_date": 1549551716, "question_id": 54575984, "link": "https://stackoverflow.com/questions/54575984/reqwestclient-does-not-have-get-method", "closed_reason": "Duplicate", "title": "reqwest::client does not have get method", "body": "<p>According to <a href=\"https://docs.rs/reqwest/0.8.4/reqwest/struct.ClientBuilder.html#example-3\" rel=\"nofollow noreferrer\">this example</a>, I should be able to run <code>get</code> on a client instantiated with client builder:</p>\n\n<pre><code>use reqwest::header;\nlet mut headers = header::Headers::new();\nheaders.set(header::Authorization(\"secret\".to_string()));\n\n// get a client builder\nlet client = reqwest::Client::builder()\n    .default_headers(headers)\n    .build()?;\nlet res = client.get(\"https://www.rust-lang.org\").send()?;\n</code></pre>\n\n<p>Below is the code that I have written.</p>\n\n<pre><code>let client = Client::builder()\n        .gzip(true)\n        .timeout(Duration::from_secs(10))\n        .build();\nlet resp = client.get(\"https://wiki.mozilla.org/images/f/ff/Example.json.gz\");\n</code></pre>\n\n<p>This is the error that I am getting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `get` found for type `std::result::Result&lt;reqwest::Client, reqwest::Error&gt;` in the current scope\n  --&gt; examples/gzipped_http_files.rs:86:23\n   |\n86 |     let resp = client.get(\"https://wiki.mozilla.org/images/f/ff/Example.json.gz\");\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1549542004, "post_id": 54573185, "comment_id": 95944089, "body": "Attributes are read only at compile-time. You must write a compiler plugin, <i>aka</i> proc-macro to do that."}], "answers": [{"comments": [{"owner": {"reputation": 2304, "user_id": 2126889, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ZLkKF.jpg?s=128&g=1", "display_name": "timthelion", "link": "https://stackoverflow.com/users/2126889/timthelion"}, "edited": false, "score": 0, "creation_date": 1549561886, "post_id": 54578601, "comment_id": 95956061, "body": "If I understand this correctly, this requires modifying the file with the attributes. In my case, that can be done, since prost generates the file in build.rs and I can just add another bit of code that runs sed or something, but it&#39;s not ideal. I also wonder, if I were to then polish this method and send it as a PR to the prost developer, whether this is actually the right way(tm) to do this. It seems very awkward."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 2304, "user_id": 2126889, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ZLkKF.jpg?s=128&g=1", "display_name": "timthelion", "link": "https://stackoverflow.com/users/2126889/timthelion"}, "edited": false, "score": 0, "creation_date": 1549564450, "post_id": 54578601, "comment_id": 95957359, "body": "The code itself is not prost specific. It can be applied to any attribute value, so as in example it is serde attribute. The third party library of the attribute should not matter for that solution."}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 1, "creation_date": 1549586090, "post_id": 54578601, "comment_id": 95965794, "body": "It looks to me like this doesn&#39;t actually apply the attributes to the fields in the resulting <code>struct</code>. I think you need to change <code>$($field_name: $field_type,)*</code> to <code>$(#[$field_attribute] $field_name: $field_type)*</code>."}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 1, "creation_date": 1549586220, "post_id": 54578601, "comment_id": 95965835, "body": "Also you need to watch out as you need to have a <code>,</code> after the last field (which isn&#39;t normally required on a struct)."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1549603174, "post_id": 54578601, "comment_id": 95969280, "body": "@Michael Anderson, wow nice caught the mistakes, let mef ix attribute applying and noting the <code>,</code> out with an edit in the answer"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 2, "last_activity_date": 1549603358, "last_edit_date": 1549603358, "creation_date": 1549559120, "answer_id": 54578601, "question_id": 54573185, "link": "https://stackoverflow.com/questions/54573185/how-do-i-read-attributes-programatically-in-rust/54578601#54578601", "title": "How do I read attributes programatically in Rust", "body": "<p>Since attributes are read only at compile time you need to write a procedural macro to solve such issue. </p>\n\n<p>You can find information with following designators in your macro.</p>\n\n<ul>\n<li>Field name with <code>ident</code></li>\n<li>Attribute contents with <code>meta</code></li>\n</ul>\n\n<p>After you find your field name and your meta, then you can match the stringified result with given input parameter in macro like following:</p>\n\n<pre><code>macro_rules! my_macro {\n    (struct $name:ident {\n        $(#[$field_attribute:meta] $field_name:ident: $field_type:ty,)*\n    }) =&gt; {\n        struct $name {\n            $(#[$field_attribute] $field_name: $field_type,)*\n        }\n\n        impl $name {\n            fn get_field_attribute(field_name_prm : &amp;str) -&gt; &amp;'static str {\n                let fields = vec![$(stringify!($field_name,$field_attribute)),*];\n                let mut ret_val = \"Field Not Found\";\n\n                fields.iter().for_each(|field_str| {\n                    let parts : Vec&lt;&amp;str&gt; = field_str.split(' ').collect();\n                    if parts[0] == field_name_prm{\n                        ret_val = parts[2];\n                    }\n                });\n                ret_val\n            }\n        }\n    }\n}\n\nmy_macro! {\n    struct S {\n        #[serde(default)]\n        field1: String,\n        #[serde(default)]\n        field2: String,\n    }\n}\n</code></pre>\n\n<p><em>Please note that it assumes that every field in the struct has an attribute. And every field declaration is ending with <code>,</code> including last field. But with some modification on regex you can make it available for optional attributes as well.</em></p>\n\n<p>Here working solution in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=61898a61f4fd4c9e0c7cd8c383b2d9e2\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>For further info about designators here is the <a href=\"https://doc.rust-lang.org/reference/macros-by-example.html\" rel=\"nofollow noreferrer\">reference</a></p>\n\n<p>Also you can take a quick look for procedural macros <a href=\"https://doc.rust-lang.org/reference/procedural-macros.html\" rel=\"nofollow noreferrer\">here</a></p>\n"}], "owner": {"reputation": 2304, "user_id": 2126889, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ZLkKF.jpg?s=128&g=1", "display_name": "timthelion", "link": "https://stackoverflow.com/users/2126889/timthelion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 357, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1549603358, "creation_date": 1549541890, "last_edit_date": 1549571432, "question_id": 54573185, "link": "https://stackoverflow.com/questions/54573185/how-do-i-read-attributes-programatically-in-rust", "title": "How do I read attributes programatically in Rust", "body": "<p>I'd like to read <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"nofollow noreferrer\">attributes</a> programatically. For example, I have a struct which has attributes attached to each field:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Debug, PartialEq, Message)]\npub struct Person {\n    #[prost(string, tag=\"1\")]\n    pub name: String,\n    /// Unique ID number for this person.\n    #[prost(int32, tag=\"2\")]\n    pub id: i32,\n    #[prost(string, tag=\"3\")]\n    pub email: String,\n    #[prost(message, repeated, tag=\"4\")]\n    pub phones: Vec&lt;person::PhoneNumber&gt;,\n}\n</code></pre>\n\n<p>(<a href=\"https://github.com/danburkert/prost\" rel=\"nofollow noreferrer\">source</a>)</p>\n\n<p>I'd like to find the tag associated with the email field.</p>\n\n<p>I expect there is some code like this to get the tag at runtime:</p>\n\n<pre><code>let tag = Person::email::prost::tag;\n</code></pre>\n"}, {"tags": ["c", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549541576, "post_id": 54572985, "comment_id": 95943832, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/44708483/idiomatic-rust-plugin-system\">Idiomatic Rust plugin system</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549541614, "post_id": 54572985, "comment_id": 95943856, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/22461457/does-rust-have-a-dlopen-equivalent\">Does Rust have a dlopen equivalent</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1549544148, "post_id": 54572985, "comment_id": 95945437, "body": "You say that your Rust example doesn&#39;t compile. How do you try to compile it and what errors do you get?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549544584, "post_id": 54572985, "comment_id": 95945685, "body": "<code>dlopen</code> is the wrong half of the equation: that&#39;s how you load a shared library. OP&#39;s C program presumably already does that, which is why they want to <i>create</i> a shared library (although I&#39;m not clear on what the actual problem is)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549548370, "post_id": 54572985, "comment_id": 95947873, "body": "<a href=\"https://github.com/rust-lang/rust/issues/8730\" rel=\"nofollow noreferrer\">This (very old) issue may help with your compilation problems a little</a>"}, {"owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "edited": false, "score": 0, "creation_date": 1549548394, "post_id": 54572985, "comment_id": 95947889, "body": "I added the <code>Cargo.toml</code> file I&#39;m using."}, {"owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "edited": false, "score": 0, "creation_date": 1549548709, "post_id": 54572985, "comment_id": 95948086, "body": "I&#39;ve added the error message above."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549549719, "post_id": 54572985, "comment_id": 95948709, "body": "The problem doesn&#39;t seem to have anything to do with creating a shared library (I get the same error in the playground), so I&#39;ve changed the title to point to the part you&#39;re having trouble with right now."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1600793451, "last_edit_date": 1600793451, "creation_date": 1549550525, "answer_id": 54575841, "question_id": 54572985, "link": "https://stackoverflow.com/questions/54572985/how-do-i-make-a-struct-for-ffi-that-contains-a-nullable-function-pointer/54575841#54575841", "title": "How do I make a struct for FFI that contains a nullable function pointer?", "body": "<p><strong>tl;dr</strong> Use <code>Option</code> to represent nullable function pointers and <code>None</code> for null.</p>\n<p>The error message is confusing, first, because <code>std::ptr::null_mut</code> isn't a pointer; it's a generic function that <em>returns</em> a pointer, and you haven't called it. So Rust is seeing you pass a function that has the wrong signature and calling convention, and complaining about that.</p>\n<p>But once you fix that, you'll get this error instead:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:29:16\n   |\n29 |         hello: std::ptr::null_mut(),\n   |                ^^^^^^^^^^^^^^^^^^^^ expected fn pointer, found *-ptr\n   |\n   = note: expected type `extern &quot;C&quot; fn()`\n              found type `*mut _`\n</code></pre>\n<p>Function pointers and object pointers are not compatible (this is also the case in C), so you can't cast between them. <code>null_mut</code> returns an object pointer, so you need to find another way to create a null function pointer.</p>\n<p>Function pointers (values of type <code>fn(...) -&gt; _</code>) have another interesting property: unlike raw pointers (<code>*const _</code> and <code>*mut _</code>), they can't be null. You don't need an <code>unsafe</code> block to call a function via pointer, and so creating a null function pointer is unsafe, like creating a null reference.</p>\n<p>How do you make something nullable? Wrap it in <code>Option</code>:</p>\n<pre><code>#[repr(C)]\npub struct api {\n    // ...\n    load: Option&lt;extern fn ()&gt;,\n    hello: Option&lt;extern fn ()&gt;, // assuming hello can also be null\n}\n</code></pre>\n<p>And populate it with <code>Some(function)</code> or <code>None</code>:</p>\n<pre><code>let api = Box::new (api {\n    // ...\n    load: Some(hello_load),\n    hello: None,\n});\n</code></pre>\n<p>It's not usually a good idea to use <code>enum</code>s, including <code>Option</code>, in a <code>repr(C)</code> struct, because C doesn't have an <code>enum</code> equivalent and so you don't know what you're going to get on the other side. But in the case of <code>Option&lt;T&gt;</code> where <code>T</code> is something non-nullable, <code>None</code> is represented by the null value, so it should be okay.</p>\n<p>The use of <code>Option</code> to represent a nullable function pointer for FFI is documented in the <a href=\"https://rust-lang.github.io/unsafe-code-guidelines/layout/function-pointers.html\" rel=\"nofollow noreferrer\">Unsafe Code Guidelines</a>:</p>\n<blockquote>\n<p>null values are not supported by the Rust function pointer types -- just like references, the expectation is that you use <code>Option</code> to create nullable pointers. <code>Option&lt;fn(Args...) -&gt; Ret&gt;</code> will have the exact same ABI as <code>fn(Args...) -&gt; Ret</code>, but additionally allows null pointer values.</p>\n</blockquote>\n"}], "owner": {"reputation": 782, "user_id": 2505159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ec39948aca0fe41ac29e3e9f8a2649?s=128&d=identicon&r=PG", "display_name": "Rich", "link": "https://stackoverflow.com/users/2505159/rich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1197, "favorite_count": 0, "accepted_answer_id": 54575841, "answer_count": 1, "score": 4, "last_activity_date": 1600793451, "creation_date": 1549541183, "last_edit_date": 1549549652, "question_id": 54572985, "link": "https://stackoverflow.com/questions/54572985/how-do-i-make-a-struct-for-ffi-that-contains-a-nullable-function-pointer", "title": "How do I make a struct for FFI that contains a nullable function pointer?", "body": "<p>I have an existing C program that loads shared library plugins.  The main C program interacts with those plugins through a C struct containing integers, strings, function pointers, etc.  How can I create such a plugin from Rust?</p>\n\n<p>Note that the (real) C program cannot be changed, nor can the API be changed, those are fixed, existing things, so this is not a question about \"how best to support plugins in Rust\", it's how can Rust make <code>*.so</code> files which interoperate with an existing C program.</p>\n\n<p>Here's a simplified example of a C program + C plugin:</p>\n\n<pre><code>/* gcc -g -Wall test.c -o test -ldl\n   ./test ./test-api.so\n */\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;inttypes.h&gt;\n#include &lt;dlfcn.h&gt;\n\nstruct api {\n  uint64_t i64;\n  int i;\n  const char *name;                /* can be NULL */\n  void (*load) (void);             /* must not be NULL */\n  void (*hello) (const char *str); /* can be NULL */\n};\n\nint\nmain (int argc, char *argv[])\n{\n  void *dl = dlopen (argv[1], RTLD_NOW);\n  if (!dl) { fprintf (stderr, \"%s: %s\\n\", argv[1], dlerror ()); exit (1); }\n  struct api *(*get_api) (void) = dlsym (dl, \"get_api\");\n  printf (\"calling get_api ...\\n\");\n  struct api *api = get_api ();\n  printf (\"api-&gt;i64 = %\" PRIi64 \"\\n\", api-&gt;i64);\n  printf (\"api-&gt;i = %d\\n\", api-&gt;i);\n  if (api-&gt;name)\n    printf (\"api-&gt;name = %s\\n\", api-&gt;name);\n  printf (\"calling api-&gt;load ...\\n\");\n  api-&gt;load ();\n  if (api-&gt;hello) {\n    printf (\"calling api-&gt;hello ...\\n\");\n    api-&gt;hello (\"world\");\n  }\n  printf (\"exiting\\n\");\n  exit (0);\n}\n</code></pre>\n\n<pre><code>/* gcc -g -shared -fPIC -Wall test-api.c -o test-api.so */\n\n#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n\nstatic void\nload (void)\n{\n  printf (\"this is the load function in the plugin\\n\");\n}\n\nstatic void\nhello (const char *str)\n{\n  printf (\"hello %s\\n\", str);\n}\n\nstatic struct api {\n  uint64_t i64;\n  int i;\n  const char *name;\n  void (*load) (void);\n  void (*hello) (const char *str);\n} api = {\n  1042,\n  42,\n  \"this is the plugin\",\n  load,\n  hello,\n};\n\nstruct api *\nget_api (void)\n{\n  return &amp;api;\n}\n</code></pre>\n\n<p>Here's what I wrote in Rust to try to get a plugin, but it doesn't compile:</p>\n\n<pre><code>extern crate libc;\n\nuse libc::*;\nuse std::ffi::*;\nuse std::ptr;\nuse std::os::raw::c_int;\n\n#[repr(C)]\npub struct api {\n    i64: uint64_t,\n    i: c_int,\n\n    name: *const c_char,\n\n    load: extern fn (),\n    hello: extern fn (), // XXX\n}\n\nextern fn hello_load () {\n    println! (\"hello this is the load method\");\n}\n\n#[no_mangle]\npub extern fn get_api () -&gt; *const api {\n    println! (\"hello from the plugin\");\n\n    let api = Box::new (api {\n        i64: 4201,\n        i: 24,\n        name: CString::new(\"hello\").unwrap().into_raw(), // XXX memory leak?\n        load: hello_load,\n        hello: std::ptr::null_mut,\n    });\n\n    return Box::into_raw(api); // XXX memory leak?\n}\n</code></pre>\n\n<p>This is compiled using <code>Cargo.toml</code> containing:</p>\n\n<pre><code>[package]\nname = \"embed\"\nversion = \"0.1.0\"\n\n[dependencies]\nlibc = \"0.2\"\n\n[lib]\nname = \"embed\"\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<p>The error is:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:32:16\n   |\n32 |         hello: std::ptr::null_mut,\n   |                ^^^^^^^^^^^^^^^^^^ expected \"C\" fn, found \"Rust\" fn\n   |\n   = note: expected type `extern \"C\" fn()`\n              found type `fn() -&gt; *mut _ {std::ptr::null_mut::&lt;_&gt;}`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>I didn't get to try loading the module but when I tried this before with the real program the fields were all wrong indicating something much more fundamental was wrong.</p>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 2, "last_activity_date": 1549552698, "last_edit_date": 1549552698, "creation_date": 1549536294, "answer_id": 54571541, "question_id": 54569843, "link": "https://stackoverflow.com/questions/54569843/shutting-down-actix-with-more-than-one-system-running/54571541#54571541", "title": "Shutting down actix with more than one system running", "body": "<p>You can catch <code>Ctrl+C</code> signal with the usage of <a href=\"https://docs.rs/ctrlc/3.1.1/ctrlc/\" rel=\"nofollow noreferrer\">ctrlc</a> crate.</p>\n\n<p>The usage in main thread can be found in <a href=\"https://rust-lang-nursery.github.io/cli-wg/in-depth/signals.html#first-off-handling-ctrlc\" rel=\"nofollow noreferrer\">Rust-Lang-Nursery</a></p>\n\n<p>Since you create your threads from your main thread and after you catched the signal in your main thread, Then you can gracefully shutdown other threads via watching shared boolean value  in these threads.</p>\n\n<p>As an addition there is a <a href=\"https://docs.rs/actix/0.7.3/actix/struct.System.html#method.stop\" rel=\"nofollow noreferrer\">stop</a> functionality which is specific to Actix.</p>\n\n<p>You can also use chan-signal crate and write your custom implementation like answered <a href=\"https://stackoverflow.com/questions/26280859/how-to-catch-signals-in-rust\">here</a></p>\n\n<p><strong>To create your own shutdown logic</strong></p>\n\n<p>Check a shared Arc atomic boolean value in all the threads and stop the execution when this variable is changed in the main thread. Since you catch the <code>ctrl-c</code> signal on main thread it can notify other actor threads like following:</p>\n\n<pre><code>use ctrlc;\nuse std::sync::atomic::{AtomicBool, Ordering};\nuse std::sync::Arc;\nuse std::thread;\n\nfn main() {\n    let running = Arc::new(AtomicBool::new(true));\n    let running2 = running.clone();\n    let r = running.clone();\n\n    let thandle = thread::spawn(move || {\n        while running2.load(Ordering::Relaxed) {\n            //Do your logic here\n        }\n        println!(\"Thread1 stopped.\")\n    });\n\n    let thandle2 = thread::spawn(move || {\n        while running.load(Ordering::Relaxed) {\n            //Do your different logic here\n        }\n        println!(\"Thread2 stopped.\")\n    });\n\n    ctrlc::set_handler(move || {\n        r.store(false, Ordering::Relaxed);\n    })\n    .expect(\"Error setting Ctrl-C handler\");\n\n    println!(\"Waiting for Ctrl-C...\");\n    let _ = thandle.join();\n    let _ = thandle2.join();\n}\n</code></pre>\n"}], "owner": {"reputation": 496, "user_id": 3283654, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/a4020e2f314034d159cd6973930c8c78?s=128&d=identicon&r=PG&f=1", "display_name": "zakum1", "link": "https://stackoverflow.com/users/3283654/zakum1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 820, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1549552698, "creation_date": 1549530834, "last_edit_date": 1549531253, "question_id": 54569843, "link": "https://stackoverflow.com/questions/54569843/shutting-down-actix-with-more-than-one-system-running", "title": "Shutting down actix with more than one system running", "body": "<p>My application is based around a library (Library-A) that uses actix and actix-web. I am adding a second library (Library-B) that runs an http server, also using actix-web. I use a separate thread and <code>actix::system</code> for this. On a SIGINT, only the Library-B actix systems closes, leaving the Library-A running. No subsequent SIGINT closes the running actix system.</p>\n\n<p>What is the correct way to gracefully close down two running actix systems?</p>\n\n<p>The code for Library-B, to start a new actix system and run an http server:</p>\n\n<pre><code>thread::spawn(move || {\n    let sys = actix::System::new(\"monitor\");\n    server::new(|| App::new()\n        .route(\"/metrics\", http::Method::GET, endpoint))\n        .bind(format!(\"0.0.0.0:{}\", port))\n        .unwrap()\n        .start();\n    sys.run();\n    println!(\"Closing monitor actix system\");\n    // --- SIGINT gets me here... how do I shut down gracefully?\n});\n</code></pre>\n\n<p>Is it correct for me to start a new system for an independent library?  How do I shut down gracefully?</p>\n"}]