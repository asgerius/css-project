[{"tags": ["rust", "template-engine", "zola", "tera"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1556170269, "post_id": 55838642, "comment_id": 98347461, "body": "Why did you tag it with the <a href=\"https://stackoverflow.com/questions/tagged/tera\">tera</a> tag, when you ask about zola?"}, {"owner": {"reputation": 2683, "user_id": 3540057, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wr61M.jpg?s=128&g=1", "display_name": "6754534367", "link": "https://stackoverflow.com/users/3540057/6754534367"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556184458, "post_id": 55838642, "comment_id": 98354127, "body": "@hellow Zola uses Tera, a template engine for Rust and otherwise the post wouldn&#39;t have any visibility at all because it&#39;s just starting out."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1556184987, "post_id": 55838642, "comment_id": 98354447, "body": "<i>&quot;Zola uses Tera&quot;</i> that combined with that the <a href=\"https://stackoverflow.com/questions/tagged/zola\">zola</a> is new is okay-ish. But because you use <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a> gives it enough visbility I guess. Leave it for now :)"}], "answers": [{"tags": [], "owner": {"reputation": 14545, "user_id": 42188, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/0b0abbefc6a9375882ea3cc0c6da61c8?s=128&d=identicon&r=PG", "display_name": "muhuk", "link": "https://stackoverflow.com/users/42188/muhuk"}, "is_accepted": false, "score": 1, "last_activity_date": 1572175553, "creation_date": 1572175553, "answer_id": 58578929, "question_id": 55838642, "link": "https://stackoverflow.com/questions/55838642/how-can-i-iterate-over-the-terms-in-a-taxonomy-outside-the-list-html-using-zola/58578929#58578929", "title": "How can I iterate over the terms in a taxonomy outside the list.html using Zola?", "body": "<p><code>get_taxonomy</code> returns a struct with keys <code>items</code> &amp; <code>kind</code>.  You can debug using:</p>\n\n<pre><code>{% set posts = get_taxonomy(kind=\"posts\") %}\n\n&lt;code&gt;{{ posts.kind | json_encode(pretty=true) }}\n\n{{ posts.items | json_encode(pretty=true) }}&lt;/code&gt;\n</code></pre>\n\n<p><code>kind</code> seems to have <a href=\"https://www.getzola.org/documentation/templates/taxonomies/\" rel=\"nofollow noreferrer\"><code>TaxonomyConfig</code></a> structure and each element in <code>items</code> seems to have <code>TaxonomyTerm</code> structure.</p>\n"}], "owner": {"reputation": 2683, "user_id": 3540057, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wr61M.jpg?s=128&g=1", "display_name": "6754534367", "link": "https://stackoverflow.com/users/3540057/6754534367"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 2, "answer_count": 1, "score": 4, "last_activity_date": 1572175553, "creation_date": 1556140409, "question_id": 55838642, "link": "https://stackoverflow.com/questions/55838642/how-can-i-iterate-over-the-terms-in-a-taxonomy-outside-the-list-html-using-zola", "title": "How can I iterate over the terms in a taxonomy outside the list.html using Zola?", "body": "<p>I've found out you can use   </p>\n\n<pre><code>{% set posts = get_taxonomy(kind=\"posts\") %}\n</code></pre>\n\n<p>to retrieve a taxonomy but I'm clueless how to iterate over the terms of the taxonomy in for example single.html of this taxonomy.</p>\n\n<p>I tried things like the following, but I get: </p>\n\n<blockquote>\n  <p>\"Tried to iterate using key value on variable 'posts', but it is\n  missing a key\"</p>\n</blockquote>\n\n<pre><code>{% set posts = get_taxonomy(kind=\"posts\") %}\n{% for term in posts %}\n  &lt;li class=\"list__item\"&gt;\n    &lt;a href=\"{{ term.permalink }}\"&gt;\n      {{ term.name }}\n    &lt;/a&gt;\n  &lt;/li&gt;\n{% endfor %}\n</code></pre>\n"}, {"tags": ["image", "rust"], "answers": [{"comments": [{"owner": {"reputation": 614, "user_id": 5407910, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/2kff4.png?s=128&g=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/5407910/greg"}, "edited": false, "score": 0, "creation_date": 1556188244, "post_id": 55839624, "comment_id": 98356417, "body": "Nice! But it is weird that all imageops functions are duplicated in DynamicImage."}, {"owner": {"reputation": 317, "user_id": 1430172, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eec739b7c4be422fce5ecfc80307f676?s=128&d=identicon&r=PG", "display_name": "Cory", "link": "https://stackoverflow.com/users/1430172/cory"}, "edited": false, "score": 1, "creation_date": 1556210614, "post_id": 55839624, "comment_id": 98369659, "body": "The <code>DynamicImage</code> versions wrap the output <code>ImageBuffer&lt;&gt;</code> in a new <code>DynamicImage</code>, so it keeps your code much cleaner when only working with DynamicImages."}], "tags": [], "owner": {"reputation": 317, "user_id": 1430172, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eec739b7c4be422fce5ecfc80307f676?s=128&d=identicon&r=PG", "display_name": "Cory", "link": "https://stackoverflow.com/users/1430172/cory"}, "is_accepted": true, "score": 1, "last_activity_date": 1556146481, "creation_date": 1556146481, "answer_id": 55839624, "question_id": 55838142, "link": "https://stackoverflow.com/questions/55838142/dynamicimage-from-subimagedynamicimage/55839624#55839624", "title": "DynamicImage from SubImage&lt;&amp;DynamicImage&gt;", "body": "<p>You can pass a subimage to <a href=\"https://docs.rs/image/0.21.1/image/imageops/fn.thumbnail.html\" rel=\"nofollow noreferrer\">image::imageops::thumbnail()</a>.</p>\n"}], "owner": {"reputation": 614, "user_id": 5407910, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/2kff4.png?s=128&g=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/5407910/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 55839624, "answer_count": 1, "score": 1, "last_activity_date": 1556146481, "creation_date": 1556137998, "question_id": 55838142, "link": "https://stackoverflow.com/questions/55838142/dynamicimage-from-subimagedynamicimage", "title": "DynamicImage from SubImage&lt;&amp;DynamicImage&gt;", "body": "<p>Using the <a href=\"https://docs.rs/image/0.21.1/image/index.html\" rel=\"nofollow noreferrer\">image crate</a>, I'm trying to crop an image and resize it without copying the whole image.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let img: DynamicImage = image.open(\"image.jpg\").unwrap();\nlet square: SubImage&lt;&amp;DynamicImage&gt; = image.view(0, 0, 100, 100);\nlet small_square = square.thumbnail(25, 25); &lt;-- no method named `thumbnail` for type SubImage\n</code></pre>\n\n<p>How can I use <a href=\"https://docs.rs/image/0.21.1/image/enum.DynamicImage.html\" rel=\"nofollow noreferrer\">DynamicImage</a>'s methods on a <a href=\"https://docs.rs/image/0.21.1/image/struct.SubImage.html\" rel=\"nofollow noreferrer\">SubImage</a> directly ?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1556118406, "post_id": 55833113, "comment_id": 98331048, "body": "<i>&quot;even though it isn&#39;t a reference&quot;</i> But it does contain a lifetime parameter, as presented in the documentation of <a href=\"https://docs.rs/mio/0.6.16/mio/unix/struct.EventedFd.html\" rel=\"nofollow noreferrer\"><code>EventedFd</code></a>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1556128988, "post_id": 55833113, "comment_id": 98336456, "body": "From the examples in the docs linked by E_net4, it looks like <code>EventedFd</code> is not meant to be stored. Just store a <code>RawFd</code> and create a temporary <code>EventedFd</code> when needed."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1556170523, "post_id": 55833113, "comment_id": 98347525, "body": "@rodrigo <i>&quot;it looks like EventedFd is not meant to be stored&quot;</i> Why do you think that? You can store evertything everywhere as long as you respect the lifetimes."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556170644, "post_id": 55833113, "comment_id": 98347561, "body": "@Ulrar please <b>always</b> include the <b>complete</b> error message. You can do that best by using <code>none</code> as language specifier (look at <a href=\"https://stackoverflow.com/q/55830219\">stackoverflow.com/q/55830219</a> to see what I mean)."}, {"owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "edited": false, "score": 0, "creation_date": 1556177046, "post_id": 55833113, "comment_id": 98350171, "body": "I get it, EventedFd takes a reference, so whatever I do I&#39;m stuck with whatever I&#39;m passing to it, there&#39;s no way to have it take ownership of the fd. Alright then, I will store the fd and construct EventedFd on the fly, thanks !"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556177157, "post_id": 55833113, "comment_id": 98350224, "body": "@hellow: Sure you can, but look at the examples in the documentation. This type is used as <code>EventedFd(&amp;self.fd).register(...)</code>. That is, an object is created on the stack to call a utility function and then immediately dropped. They keep the <code>RawFd</code> and construct a temporary <code>EventedFd</code> when needed. It has zero cost construction, after all, and its sole purpose is to implement <code>Evented</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1556192965, "post_id": 55833113, "comment_id": 98359007, "body": "I found <a href=\"https://stackoverflow.com/q/42538463/3650362\">Value doesn&#39;t live long enough when put in struct</a> <a href=\"https://stackoverflow.com/q/39127218/3650362\">and</a> <a href=\"https://stackoverflow.com/q/50955374/3650362\">these</a> <a href=\"https://stackoverflow.com/q/28949524/3650362\">five</a> <a href=\"https://stackoverflow.com/q/53719894/3650362\">other</a> <a href=\"https://stackoverflow.com/q/43712228/3650362\">questions</a> all exhibit minor variants on the same problem. I&#39;m beginning to think that lifetime elision for non-references was always a bad idea."}], "owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 636, "favorite_count": 0, "closed_date": 1556371139, "answer_count": 0, "score": 1, "last_activity_date": 1556371198, "creation_date": 1556117990, "last_edit_date": 1556170414, "question_id": 55833113, "link": "https://stackoverflow.com/questions/55833113/expected-lifetime-parameter-in-a-struct", "closed_reason": "Duplicate", "title": "expected lifetime parameter in a struct", "body": "<p>I'm a bit lost with a struct I have :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Blah {\n    pub efd: mio::unix::EventedFd,\n}\n</code></pre>\n\n<p>When compiling that I get <code>expected lifetime parameter</code> for the <code>EventedFd</code> even though it isn't a reference. I tried wrapping it in a Box but the error stays the same.\nI could add a lifetime parameter but I feel like I'm missing something important, I don't get why I'd need it right there. I actually have another Box in that same struct which works perfectly fine without a lifetime parameter, so I assume it has something to do with the type of <code>EventedFd</code>.</p>\n\n<p>I just want to store that EventedFd in there, like this (I tried with and without the Box, as mentioned) :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let efd = Box::new(EventedFd(&amp;fd.as_raw_fd()));\nBlah {efd}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1556187674, "post_id": 55829221, "comment_id": 98356080, "body": "To be honest, I&#39;ve always found this confusing; wish it was named FileCursor to make it clearer."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1556189102, "post_id": 55829221, "comment_id": 98356886, "body": "@MatthieuM. you might be right, but AFAIK every language works this way (probably due to how linux handles files). This is something that needs to be learnt, I&#39;m afraid ^^"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 2, "last_activity_date": 1556114123, "last_edit_date": 1556114123, "creation_date": 1556105978, "answer_id": 55829221, "question_id": 55829045, "link": "https://stackoverflow.com/questions/55829045/iterating-the-bytes-of-a-file-is-empty-after-iterating-the-lines-of-the-same-fil/55829221#55829221", "title": "Iterating the bytes of a File is empty after iterating the lines of the same file", "body": "<p>Your problem is that you open the file once, read the complete file and then assume that it will be reset magically.</p>\n\n<p>A <code>File</code> has a position \"pointer\" to know which byte to read next. After you have read one byte, that position will be incremented by one, so the next read call will read the next byte and not the same one.</p>\n\n<p>You can change this position by using <a href=\"https://doc.rust-lang.org/std/io/trait.Seek.html#tymethod.seek\" rel=\"nofollow noreferrer\"><code>File::seek</code></a> between your calls to <code>count_lines</code>, <code>count_bytes</code> and <code>count_words</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io::{Seek, SeekFrom};\n\nfn main() {\n    let arg = &amp;std::env::args()\n        .nth(1)\n        .expect(\"No file operand found\")\n        .to_owned();\n    let mut file = File::open(arg).expect(\"Unable to open file for reading\");\n\n    let lines = count_lines(&amp;file);\n    print!(\"{} \", lines);\n\n    file.seek(SeekFrom::Start(0)).expect(\"Seek failed\");\n    let bytes = count_bytes(&amp;file);\n    println!(\"{}\", bytes);\n\n    file.seek(SeekFrom::Start(0)).expect(\"Seek failed\");\n    let words = count_words(&amp;file);\n    print!(\"{} \", words);\n}\n</code></pre>\n\n<hr>\n\n<p>To further address your code, it is not considered very \"rusty\". Your manual counting can be simplified by using <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.count\" rel=\"nofollow noreferrer\"><code>Iterator::count</code></a>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn count_lines(file: &amp;File) -&gt; u32 {\n    BufReader::new(file).lines().count() as u32\n}\n\nfn count_bytes(file: &amp;File) -&gt; u32 {\n    BufReader::new(file).bytes().count() as u32\n}\n</code></pre>\n\n<hr>\n\n<p>The reason why your <code>count_words</code> function \"hangs\" is because you ignore the amount of read bytes. When <code>read_until</code> reaches EOF (end of file) it will return <code>0</code> as amount. You have to introduce a break condition, e.g.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn count_words(file: &amp;File) -&gt; u32 {\n    let mut count: u32 = 0;\n\n    let mut buf: Vec&lt;u8&gt; = Vec::new();\n    let mut reader = BufReader::new(file);\n    while let Ok(amount) = reader.read_until(b' ', &amp;mut buf) {\n        if amount == 0 {\n            break\n        }\n        count += 1;\n    }\n\n    count\n}\n</code></pre>\n\n<p>Please note, that this is implementation is not really correct, because <code>\"hello  \"</code> (two spaces at the end) will give you <code>2</code> instead of <code>1</code>, but this is up to you to fix. Make sure to <a href=\"https://doc.rust-lang.org/book/ch11-00-testing.html\" rel=\"nofollow noreferrer\">add some tests</a> to make sure everything works correctly.</p>\n"}], "owner": {"reputation": 59, "user_id": 3787885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/893077d248568e425cc9855e08bb4677?s=128&d=identicon&r=PG&f=1", "display_name": "Neffarion", "link": "https://stackoverflow.com/users/3787885/neffarion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "accepted_answer_id": 55829221, "answer_count": 1, "score": 2, "last_activity_date": 1556114123, "creation_date": 1556105375, "last_edit_date": 1556106208, "question_id": 55829045, "link": "https://stackoverflow.com/questions/55829045/iterating-the-bytes-of-a-file-is-empty-after-iterating-the-lines-of-the-same-fil", "title": "Iterating the bytes of a File is empty after iterating the lines of the same file", "body": "<p>I'm creating something similar to the <code>wc</code> command. Counting lines seems to work fine, but counting bytes always returns a 0. Counting words also doesn't work; the output seems to \"hang\" like it's waiting for something.</p>\n\n<p>I realize that the way it is made (reading the file 3 times over) isn't the most optimal way to do this, but I just want a working and simple example</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fs::File;\nuse std::io::{BufRead, BufReader, Read};\n\nfn main() {\n    let arg = &amp;std::env::args()\n        .nth(1)\n        .expect(\"No file operand found\")\n        .to_owned();\n    let file = File::open(arg).expect(\"Unable to open file for reading\");\n\n    let lines = count_lines(&amp;file);\n    print!(\"{} \", lines);\n    let bytes = count_bytes(&amp;file);\n    println!(\"{}\", bytes);\n    let words = count_words(&amp;file);\n    print!(\"{} \", words);\n}\n\nfn count_lines(file: &amp;File) -&gt; u32 {\n    let mut count: u32 = 0;\n    BufReader::new(file).lines().for_each(|f| {\n        if f.is_ok() {\n            count += 1;\n        }\n    });\n\n    count\n}\n\nfn count_bytes(file: &amp;File) -&gt; u32 {\n    let mut count: usize = 0;\n    BufReader::new(file).bytes().for_each(|f| {\n        if f.is_ok() {\n            count += 1;\n        }\n    });\n\n    count as u32\n}\n\nfn count_words(file: &amp;File) -&gt; u32 {\n    let mut count: u32 = 0;\n\n    let mut buf: Vec&lt;u8&gt; = Vec::new();\n    let mut reader = BufReader::new(file);\n    while let Ok(_) = reader.read_until(b' ', &amp;mut buf) {\n        count += 1;\n    }\n\n    count\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556103938, "post_id": 55828321, "comment_id": 98321703, "body": "Your question seems to come down to how to do reflection in Rust. Relevant questions: <a href=\"https://stackoverflow.com/q/30486227/1233251\">1</a> <a href=\"https://stackoverflow.com/q/20445975/1233251\">2</a> You most likely do need to specify a trait for your plugin types. And in order to be usable, the trait would need to have the necessary methods to gain access to that plugin&#39;s features."}], "answers": [{"comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1556107080, "post_id": 55828524, "comment_id": 98323658, "body": "If you want to be ABI compatible, you can define an unsafe C style ABI, with the object being   <code>*const c_void</code>."}, {"owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "edited": false, "score": 0, "creation_date": 1556108548, "post_id": 55828524, "comment_id": 98324525, "body": "That&#39;s completely fine for now, I&#39;ll just avoid dylib and compile the &quot;plugins&quot; directly into the main project for now, I just want to have the option to make it into actual plugins later if it ends up making sense. Thanks !"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 5, "last_activity_date": 1556103657, "creation_date": 1556103657, "answer_id": 55828524, "question_id": 55828321, "link": "https://stackoverflow.com/questions/55828321/how-to-deal-with-unknown-types/55828524#55828524", "title": "How to deal with unknown types", "body": "<p>The Rust method for this is <code>Box&lt;dyn Any&gt;</code>, which the plugin can then safely cast back to its own type.</p>\n\n<p>But you should be aware that Rust has no stable ABI, so if you have anything in your plugin interface which isn't just C-compatible, your plugins and your main program have to be compiled with the same compiler version and options in order to safely work.</p>\n"}], "owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 55828524, "answer_count": 1, "score": -1, "last_activity_date": 1556103993, "creation_date": 1556103012, "last_edit_date": 1556103993, "question_id": 55828321, "link": "https://stackoverflow.com/questions/55828321/how-to-deal-with-unknown-types", "title": "How to deal with unknown types", "body": "<p>I've been working on re-developing a project of mine in Rust to try it out, and one of the things I'd like to do is a plugin system. I haven't looked much into dylib yet, but for now I'd like to get the architecture right so that adding dylib later wouldn't be too hard.</p>\n\n<p>My question is about plugins config, I'd like to call for each plugin an init function, and allow them to return an object that would then be passed to every call of their functions. I don't really care about what is in that object; that's the plugin's business.</p>\n\n<p>I tried using a <code>Box&lt;dyn&gt;</code> but of course it doesn't work without a trait. Does that mean the only way would be to declare an empty trait, like <code>PluginConfig</code> for example, and use dyn with that? Then the plugins could just implement that trait and return that from their init. Or am I missing the correct way to do it completely ? If I understood the book correctly, doing that would make it impossible for the plugin later on to access their fields, since they aren't defined in the Trait, and thus would not work properly.</p>\n\n<p>tl;dr I'm just looking for the rust equivalent of storing a <code>void *</code>.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 11, "user_id": 9787405, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40500eb8be0e77ce35edc31b23fd5ed4?s=128&d=identicon&r=PG&f=1", "display_name": "user24225", "link": "https://stackoverflow.com/users/9787405/user24225"}, "edited": false, "score": 0, "creation_date": 1556103642, "post_id": 55828145, "comment_id": 98321530, "body": "I new a example project in git <a href=\"https://github.com/idotial/testlinks.git\" rel=\"nofollow noreferrer\">github.com/idotial/testlinks.git</a> , this project can show the problem more clearly."}], "owner": {"reputation": 11, "user_id": 9787405, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40500eb8be0e77ce35edc31b23fd5ed4?s=128&d=identicon&r=PG&f=1", "display_name": "user24225", "link": "https://stackoverflow.com/users/9787405/user24225"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 204, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1556102558, "creation_date": 1556102443, "last_edit_date": 1556102558, "question_id": 55828145, "link": "https://stackoverflow.com/questions/55828145/the-package-xxx-links-to-the-native-library-yyy-but-it-conflicts-with-a-previou", "title": "the package XXX links to the native library YYY, but it conflicts with a previous package which links to YYY as well:package ZZZ", "body": "<p>I have a project depends on xxx(xxx have links to a native c library 'a'),and i want to introduce a new dependency yyy which also have links to 'a'(some library different version). when i run 'cargo update', it fait and logged 'failed to select a version for <code>xxx</code>....the package <code>xxx</code> links to the native library <code>a</code>, but it conflicts with a previous package which links to <code>a</code> as well:\npackage <code>yyy</code>'</p>\n\n<p>i have read some document, and it seem practical to make the links global by add some code in cargo.toml,and build.rs, but i not sure how to do and can two different dependency have the same links?</p>\n\n<pre><code>error: failed to select a version for `parity-rocksdb-sys`.\n    ... required by package `parity-rocksdb v0.5.0`\n    ... which is depended on by `kvdb-rocksdb v0.1.4`\n    ... which is depended on by `storage v0.0.1 (/Users/chenrui/Desktop/blockchain/WendingWorkStation/ipfs/filesys-rust/runtime/storage)`\n    ... which is depended on by `beacon v0.0.1 (/Users/chenrui/Desktop/blockchain/WendingWorkStation/ipfs/filesys-rust/chain/beacon)`\n    ... which is depended on by `client v0.1.0 (/Users/chenrui/Desktop/blockchain/WendingWorkStation/ipfs/filesys-rust/chain/client)`\n    ... which is depended on by `alphanet v0.1.0 (/Users/chenrui/Desktop/blockchain/WendingWorkStation/ipfs/filesys-rust/chain/alphanet)`\n    ... which is depended on by `devnet v0.1.0 (/Users/chenrui/Desktop/blockchain/WendingWorkStation/ipfs/filesys-rust/chain/devnet)`\n    ... which is depended on by `filesys v0.1.0 (/Users/chenrui/Desktop/blockchain/WendingWorkStation/ipfs/filesys-rust)`\nversions that meet the requirements `^0.5` are: 0.5.5, 0.5.4, 0.5.3, 0.5.2, 0.5.1, 0.5.0\n\nthe package `parity-rocksdb-sys` links to the native library `rocksdb`, but it conflicts with a previous package which links to `rocksdb` as well:\npackage `librocksdb-sys v5.17.2`\n    ... which is depended on by `rocksdb v0.12.0`\n    ... which is depended on by `filecoin-proofs v0.1.0 (https://github.com/idotial/rust-fil-proofs.git#53676171)`\n    ... which is depended on by `filesys v0.1.0 (/Users/chenrui/Desktop/blockchain/WendingWorkStation/ipfs/filesys-rust)`\n\nfailed to select a version for `parity-rocksdb-sys` which could resolve this conflict\n\nfix this error, and finish cargo update\n</code></pre>\n"}, {"tags": ["generics", "rust", "existential-type", "associated-types"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 4, "creation_date": 1556104607, "post_id": 55826693, "comment_id": 98322173, "body": "Are you asking (1) why a Work In Progress feature does not seem to be fully implemented OR (2) whether there is a fundamental limitation linked to existential types?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1556105356, "post_id": 55826693, "comment_id": 98322642, "body": "@Matthieu The latter."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1556181842, "post_id": 55826693, "comment_id": 98352652, "body": "To me, this just looks like the feature isn&#39;t fully polished. You should report a bug."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1556187659, "post_id": 55826693, "comment_id": 98356068, "body": "I <a href=\"https://github.com/rust-lang/rust/issues/34511#issuecomment-486614871\" rel=\"nofollow noreferrer\">filed this</a>."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1556203659, "post_id": 55826693, "comment_id": 98365850, "body": "@oli-obk <a href=\"https://github.com/rust-lang/rust/issues/34511#issuecomment-486698629\" rel=\"nofollow noreferrer\">replied to this</a>: <i>I&#39;m not 100% sure we can support this case out of the box</i> and proposed the same solution as in my first code snippet as workaround."}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 445, "favorite_count": 0, "answer_count": 0, "score": 11, "last_activity_date": 1565987861, "creation_date": 1556097931, "last_edit_date": 1565987861, "question_id": 55826693, "link": "https://stackoverflow.com/questions/55826693/why-does-an-existential-type-require-a-generic-instead-of-an-associated-type", "title": "Why does an existential type require a generic instead of an associated type?", "body": "<p>I have an <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2071-impl-trait-existential-types.md#guide-existential-types\" rel=\"nofollow noreferrer\">existential type</a> defined like this:</p>\n\n<pre><code>trait Collection {\n    type Element;\n}\nimpl&lt;T&gt; Collection for Vec&lt;T&gt; {\n    type Element = T;\n}\n\ntype Existential&lt;T&gt; = impl Collection&lt;Element = T&gt;;\n</code></pre>\n\n<p>A function, which takes a type implementing a trait with an associated type, returns this type.\nWhy does this code work:</p>\n\n<pre><code>fn return_existential&lt;I, T&gt;(iter: I) -&gt; Existential&lt;T&gt;\nwhere\n    I: IntoIterator&lt;Item = T&gt;,\n    I::Item: Collection,\n{\n    let item = iter.into_iter().next().unwrap();\n    vec![item]\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ec849873aba09e9f7c4888083d2dba1b\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>while this does not:</p>\n\n<pre><code>fn return_existential&lt;I&gt;(iter: I) -&gt; Existential&lt;I::Item&gt;\nwhere\n    I: IntoIterator,\n    I::Item: Collection,\n{\n    let item = iter.into_iter().next().unwrap();\n    vec![item]\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: type parameter `I` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n  --&gt; src/lib.rs:16:1\n   |\n16 | / {\n17 | |     let item = iter.into_iter().next().unwrap();\n18 | |     vec![item]\n19 | | }\n   | |_^\n\nerror: defining opaque type use does not fully define opaque type\n  --&gt; src/lib.rs:12:1\n   |\n12 | / fn return_existential&lt;I&gt;(iter: I) -&gt; Existential&lt;I::Item&gt;\n13 | | where\n14 | |     I: IntoIterator,\n15 | |     I::Item: Collection,\n...  |\n18 | |     vec![item]\n19 | | }\n   | |_^\n\nerror: could not find defining uses\n  --&gt; src/lib.rs:10:1\n   |\n10 | type Existential&lt;T&gt; = impl Collection&lt;Element = T&gt;;\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=1fc59c81bbc6d54bac317911e074ba6e\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>When using a <code>Vec</code> directly, this works fine:</p>\n\n<pre><code>fn return_existential&lt;I&gt;(iter: I) -&gt; Vec&lt;I::Item&gt;\nwhere\n    I: IntoIterator,\n    I::Item: Collection,\n{\n    let item = iter.into_iter().next().unwrap();\n    vec![item]\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=000b2ad6956592756ddc3e4b88467f9d\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p><em>Note:</em> Those examples are constructed while playing around with this feature. I won't use it anyway as long as my IDE is not aware of existential types. Additionally, the exact syntax is subject to change.</p>\n"}, {"tags": ["rust", "traits", "type-bounds"], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 105, "favorite_count": 0, "closed_date": 1556102562, "answer_count": 0, "score": 4, "last_activity_date": 1556069916, "creation_date": 1556069916, "question_id": 55821205, "link": "https://stackoverflow.com/questions/55821205/how-can-i-add-a-trait-bound-to-a-public-type-that-refers-to-a-private-type", "closed_reason": "Duplicate", "title": "How can I add a trait bound to a public type that refers to a private type?", "body": "<p>I have a public generic type that wraps a private generic type. I'd like to state that my public type implements a trait whenever the private type does as well:</p>\n\n<pre><code>pub trait Example {}\n\npub struct PubliclyVisible&lt;T&gt;(Inner&lt;T&gt;);\n\nimpl&lt;T&gt; Example for PubliclyVisible&lt;T&gt; where Inner&lt;T&gt;: Example {}\n\nstruct Inner&lt;T&gt;(T);\nimpl&lt;T&gt; Example for Inner&lt;T&gt; {}\n</code></pre>\n\n<p>This generates an error because <code>Inner</code> is not public:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0446]: private type `Inner&lt;T&gt;` in public interface\n --&gt; src/lib.rs:5:1\n  |\n5 | impl&lt;T&gt; Example for PubliclyVisible&lt;T&gt; where Inner&lt;T&gt;: Example {}\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't leak private type\n6 | \n7 | struct Inner&lt;T&gt;(T);\n  | - `Inner&lt;T&gt;` declared as private\n</code></pre>\n\n<p>Is there some way of stating \"<code>PubliclyVisible&lt;T&gt;</code> implements <code>Example</code> whenever <code>Inner&lt;T&gt;</code> implements <code>Example</code>\" without requiring that <code>Inner</code> become public?</p>\n"}, {"tags": ["rust", "lifetime", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1556087310, "post_id": 55821052, "comment_id": 98312622, "body": "Let me get this straight then: in the identity function the copy of <code>s</code> (the type of which is a reference) isn&#39;t the copy of the reference itself but also entire object it is referencing (in our case the slice)?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556089691, "post_id": 55821052, "comment_id": 98313673, "body": "No, the copy of <code>s</code> is indeed the copy of the reference. However in your case it is a reference to the <code>&#39;static</code> string <code>&quot;Available?&quot;</code> defined in your <code>main</code> function that will never be dropped since it&#39;s <code>&#39;static</code>."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556095290, "post_id": 55821052, "comment_id": 98316659, "body": "@Jmb that&#39;s exactly what I thought earlier, but as you can see -- I updated the example -- even if I create a <code>String</code> on the heap, add some characters to it, and then passing to the <code>Context</code> (at which point I don&#39;t think that the underlying <code>&amp;str</code> has <code>&#39;static</code> anymore) the code still compiles and working without a problem..  Why?"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1556095697, "post_id": 55821052, "comment_id": 98316899, "body": "Just a thought: is this snippet valid, because the temporary <code>Context</code> created in the <code>main</code>&#39;s scope will only be dropped at the end of the <code>if let</code>&#39;s scope because that is taking ownership of the return value of <code>.parse()</code>?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1556095816, "post_id": 55821052, "comment_id": 98316964, "body": "It&#39;s no longer <code>&#39;static</code>, but it&#39;s still a reference to the string defined in <code>main</code>, so it&#39;s still valid for the duration of <code>main</code>. IOW, lifetime <code>&#39;s</code> is inferred as &quot;until the end of function <code>main</code>&quot;."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556097061, "post_id": 55821052, "comment_id": 98317768, "body": "@Jmb I think I understand now, posted an answer explaining my understanding of this.  Do you think it is correct now?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 2, "creation_date": 1556101845, "post_id": 55821052, "comment_id": 98320531, "body": "@PeterVaro it\u2019s not \u201cmy\u201d style, it\u2019s the Rust community style as agreed upon via RFCs and enacted by rustfmt. I edit every Rust Q&amp;A to provide a uniform experience for people looking for answers to problems without wanting to learn an arbitrary posters white space whims. The point of SO is to quickly read a question to see if it is relevant and the answer to gain information. Non-idiomatic style choices detract from that goal."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 1, "creation_date": 1556110487, "post_id": 55821052, "comment_id": 98325703, "body": "@Shepmaster yeah, except neither the standard library, nor other <i>official</i> code snippets are following the exact same rules as I found out so far, and <code>rustfmt</code> (thank god) is configurable and not as stupidly aggressive as <code>gofmt</code> or <code>prettier</code>.."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1556086500, "last_edit_date": 1556086500, "creation_date": 1556065365, "answer_id": 55821052, "question_id": 55820491, "link": "https://stackoverflow.com/questions/55820491/why-can-i-return-a-reference-to-an-owned-value-of-a-function/55821052#55821052", "title": "Why can I return a reference to an owned value of a function?", "body": "<p>You are <strong>not</strong> returning a reference to the owned value of the function. You are returning a copy of the reference passed in.</p>\n\n<p>Your function is an elaborate version of the identity function:</p>\n\n<pre><code>fn parse_context(s: &amp;str) -&gt; &amp;str {\n    s\n}\n</code></pre>\n\n<p>In your real code, you take a reference to a struct containing a string slice, then another reference to the string slice, but all of those references are thrown away.</p>\n\n<p>For example, there's an unneeded reference in <code>parse</code>:</p>\n\n<pre><code>fn parse(&amp;self) -&gt; Result&lt;(), &amp;'s str&gt; {\n    Err( self.context.0)\n    //  ^ no &amp; needed\n}\n</code></pre>\n\n<p>Additionally, if you enable some more lints, you'll be forced to add more lifetimes to your function signature, which might make things more clear:</p>\n\n<pre><code>#![deny(rust_2018_idioms)]\n\nfn parse_context(context: Context&lt;'_&gt;) -&gt; Result&lt;(), &amp;'_ str&gt; {\n    Parser { context: &amp;context }.parse()\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28519997/155423\">What are Rust&#39;s exact auto-dereferencing rules?</a></li>\n</ul>\n\n<blockquote>\n  <p>Although I couldn't find a detailed explanation of this new elision rule,</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/ownership-and-lifetimes/inference-in-structs.html\" rel=\"nofollow noreferrer\"><code>T: 'a</code> inference in structs</a> in the edition guide.</p>\n"}, {"tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": false, "score": -1, "last_activity_date": 1556110171, "last_edit_date": 1556110171, "creation_date": 1556097019, "answer_id": 55826386, "question_id": 55820491, "link": "https://stackoverflow.com/questions/55820491/why-can-i-return-a-reference-to-an-owned-value-of-a-function/55826386#55826386", "title": "Why can I return a reference to an owned value of a function?", "body": "<p>Thank to the comments of Jmb and some bits of Shepmaster's answer it is indeed clear to me now that my confusion was about the RAII rules and the ownership.</p>\n\n<p>That is, the string was created in the <code>main</code> scope, the anonymous <code>Context</code> instance is <strong>not</strong> taking ownership of the string it is only borrowing a reference, therefore even when the instance is dropped at the end of <code>parse_context</code> along with the borrowed reference, a reference copied to the <code>Err</code> object still exists and points to the existing string -- hence we are using the constrained lifetime variables and the compiler is able to reason about the lifetime of the internal string reference.</p>\n"}, {"comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1556097761, "post_id": 55826568, "comment_id": 98318201, "body": "It is a much more detailed explanation of the same conclusion that I summarised in my answer.  This was exactly what I was looking for.  Thanks!"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556111343, "post_id": 55826568, "comment_id": 98326250, "body": "Please always use <code>rustfmt</code> to format your code according to the guidelines. You can find it under tools in the upper right corner of <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">the playground</a>"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1556129418, "last_edit_date": 1556129418, "creation_date": 1556097559, "answer_id": 55826568, "question_id": 55820491, "link": "https://stackoverflow.com/questions/55820491/why-can-i-return-a-reference-to-an-owned-value-of-a-function/55826568#55826568", "title": "Why can I return a reference to an owned value of a function?", "body": "<pre><code>struct Context&lt;'s&gt;(&amp;'s str);\n</code></pre>\n\n<p>\u2192 Values of type <code>Context</code> hold a string with some lifetime <code>'s</code>. This lifetime is implicitly at least as long as the lifetime of the context, but it may be longer.</p>\n\n<pre><code>struct Parser&lt;'c, 's&gt;\n{\n    context: &amp;'c Context&lt;'s&gt;,\n}\n</code></pre>\n\n<p>\u2192 Values of type <code>Parser</code> hold a a reference to context with some lifetime <code>'c</code>. This context holds a string with some <em>other</em> lifetime <code>'s</code>.</p>\n\n<pre><code>impl&lt;'c, 's&gt; Parser&lt;'c, 's&gt;\n{\n    fn parse(&amp;self) -&gt; Result&lt;(), &amp;'s str&gt;\n    {\n        Err(self.context.0)\n    }\n}\n</code></pre>\n\n<p>\u2192 Function <code>parse</code> returns a value with lifetime <code>'s</code>, ie. with <em>the same lifetime as the string that is stored inside the context,</em> which is not the same as the lifetime of the context itself.</p>\n\n<pre><code>fn parse_context(context: Context) -&gt; Result&lt;(), &amp;str&gt;\n{\n    Parser { context: &amp;context }.parse()\n}\n</code></pre>\n\n<p>\u2192 I'm not sure exactly where this is specified, but obviously the compiler infers that the lifetime for the returned string is the same as the <code>'s</code> parameter used for the context. Note that even though the context itself is moved into <code>parse_context</code>, this only affects the context itself, not the string that it contains.</p>\n\n<pre><code>fn main()\n{\n    let mut s = String::new();\n</code></pre>\n\n<p>\u2192 Create a new string valid until the end of <code>main</code></p>\n\n<pre><code>    s += \"Avail\";\n    s += \"able?\";\n    if let Err(text) = parse_context(Context(&amp;s))\n</code></pre>\n\n<p>\u2192 Create a new context and move it into <code>parse_context</code>. It will automatically be dropped at the end of <code>parse_context</code>. It holds a reference to string <code>s</code> which is valid until the end of <code>main</code> and <code>parse_context</code> returns a string with the same lifetime as <code>s</code> \u21d2 <code>text</code> is valid until the end of <code>main</code>.</p>\n\n<pre><code>    {\n        println!(\"{}\", text);\n    }\n}\n</code></pre>\n\n<p>\u2192 No problem: <code>text</code> is valid until the end of <code>main</code>.</p>\n"}], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 2, "accepted_answer_id": 55826568, "answer_count": 3, "score": 1, "last_activity_date": 1556129418, "creation_date": 1556060421, "last_edit_date": 1556129291, "question_id": 55820491, "link": "https://stackoverflow.com/questions/55820491/why-can-i-return-a-reference-to-an-owned-value-of-a-function", "title": "Why can I return a reference to an owned value of a function?", "body": "<p>In chapter 19.2 of <em>The Rust Programming Language</em>, the following example compiles without any error. I found out from <a href=\"https://github.com/rust-lang/book/issues/1834\" rel=\"nofollow noreferrer\">issue #1834</a> that there is a new lifetime elision rule that implicitly makes <code>'s</code> longer than <code>'c</code>.</p>\n\n<p>Although I couldn't find a detailed explanation of this new elision rule, I guess that it is not more than <em>just</em> an implicit version of the longer, more explicit constraint: <code>&lt;'c, 's: 'c&gt;</code>.  I think however my confusion is probably not about this new elision rule but of course I could be wrong about this.</p>\n\n<p>My understanding is, that <code>parse_context</code> takes ownership of <code>context</code> as it has not been borrowed but actually moved to the function.  That alone implies to me that the lifetime of <code>context</code> should match the lifetime of the function it is owned by regardless of the lifetimes and constraint we defined in <code>Context</code>, and <code>Parser</code>.</p>\n\n<p>Based on those definitions, the part where <code>context</code> outlives the temporary <code>Parser</code> makes perfect sense to me (after all, we defined a longer lifetime), but the part where the <code>&amp;str</code> reference is not dropped when <code>context</code> goes out of scope at the end of <code>parse_context</code> and I can still safely return it -- makes me puzzled.</p>\n\n<p>What have I missed?  How can the compiler reason about the lifetime of the returned <code>&amp;str</code>?</p>\n\n<p><strong>UPDATED EXAMPLE</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Context&lt;'s&gt;(&amp;'s str);\n\nstruct Parser&lt;'c, 's&gt;\n{\n    context: &amp;'c Context&lt;'s&gt;,\n}\n\nimpl&lt;'c, 's&gt; Parser&lt;'c, 's&gt;\n{\n    fn parse(&amp;self) -&gt; Result&lt;(), &amp;'s str&gt;\n    {\n        Err(self.context.0)\n    }\n}\n\nfn parse_context(context: Context) -&gt; Result&lt;(), &amp;str&gt;\n{\n    Parser { context: &amp;context }.parse()\n}\n\nfn main()\n{\n    let mut s = String::new();\n    s += \"Avail\";\n    s += \"able?\";\n    if let Err(text) = parse_context(Context(&amp;s))\n    {\n        println!(\"{}\", text);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "embedded"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556052713, "post_id": 55818993, "comment_id": 98304874, "body": "To answer question 2: You&#39;re right that Copy matters. Types that are Copy are always copied instead of moved. So <code>foo</code> now owns a <i>copy</i> of <code>a</code> even though <code>a</code> was &quot;moved&quot;."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556055099, "post_id": 55818993, "comment_id": 98305803, "body": "Please include the full error message in your question. Error messages are always relevant, and often include valuable details, and this case is no exception. The impl mentioned in the error message <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html#impl-FnMut%3CA%3E\" rel=\"nofollow noreferrer\">can be found here</a>. (I don&#39;t have time for a full answer, but the link should give a clue why the compiler is expecting <code>Fn()</code>.)"}, {"owner": {"reputation": 488, "user_id": 10085, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/27c29e5380a6a6373691f6c95eb76cac?s=128&d=identicon&r=PG", "display_name": "Brian Cully", "link": "https://stackoverflow.com/users/10085/brian-cully"}, "edited": false, "score": 0, "creation_date": 1556057641, "post_id": 55818993, "comment_id": 98306594, "body": "I&#39;ve added the compiler errors."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556132487, "post_id": 55818993, "comment_id": 98338012, "body": "@Brian as I said before, the impl mentioned in the error message is linked above, and you can see that it requires the referent to be <code>Fn</code>, which <code>dyn FnMut</code> isn&#39;t, so no surprises there. Objects of type <code>&amp;&#39;a dyn FnMut()</code> can&#39;t be called without triggering undefined behaviour, so there is no easy fix for your code."}, {"owner": {"reputation": 488, "user_id": 10085, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/27c29e5380a6a6373691f6c95eb76cac?s=128&d=identicon&r=PG", "display_name": "Brian Cully", "link": "https://stackoverflow.com/users/10085/brian-cully"}, "edited": false, "score": 0, "creation_date": 1556154344, "post_id": 55818993, "comment_id": 98344273, "body": "What I don&#39;t understand is <i>why</i> <code>Fn&lt;()&gt;</code> is expected: the type of variable <code>h</code> is explicitly <code>*mut FnMut()</code>. Where is the compiler pulling <code>Fn&lt;()&gt;</code> from? Additionally, isn&#39;t any reference to an <code>FnMut()</code>  always <code>&amp;&#39;a dyn FnMut()</code>? i.e., a reference to an object implementing FnMut with an arbitrary lifetime of <code>a</code>? How is calling that undefined?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556215480, "post_id": 55818993, "comment_id": 98371802, "body": "You declared <code>h</code> to be <code>*mut FnMut()</code>, but the right-hand side expression is of type <code>*mut &amp;dyn FnMut()</code>. A trait object reference like <code>&amp;dyn MyTrait</code> does not implement the trait <code>MyTrait</code> by default. You need and explicit impl for this, and such an impl is linked in my comment above. The impl requires that the referent is <code>Fn()</code>, since the <code>where</code> clause says so."}, {"owner": {"reputation": 488, "user_id": 10085, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/27c29e5380a6a6373691f6c95eb76cac?s=128&d=identicon&r=PG", "display_name": "Brian Cully", "link": "https://stackoverflow.com/users/10085/brian-cully"}, "edited": false, "score": 0, "creation_date": 1556304285, "post_id": 55818993, "comment_id": 98406597, "body": "I must be missing something basic here. I don&#39;t get why <code>&amp;dyn MyTrait</code> wouldn&#39;t implement <code>MyTrait</code>. Isn&#39;t that rather the point of trait objects? How is it possible to call <code>write_str</code> on something you got in your argument list as <code>&amp;dyn core::fmt::Write</code>? I did manage to figure out why <code>Fn()</code> was expected: I let off a <code>mut</code> qualifier on the type signature for <code>h</code>. Adding that in turned it into the expected <code>FnMut()</code>, but left me with needing to assign a mutable in a static."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556310299, "post_id": 55818993, "comment_id": 98408751, "body": "@BrianCully The trait object reference type <code>&amp;dyn MyTrait</code> does not implement <code>MyTrait</code>, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a7c09ff4693d99d705ba865997c1b633\" rel=\"nofollow noreferrer\">as you can see by building this playground example</a>. You still can call methods of the trait taking <code>self</code> by reference on trait objects due to <a href=\"https://stackoverflow.com/a/28552082\">Rust&#39;s method call semantics</a>, but this does not mean the reference type itself implements the trait."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556310513, "post_id": 55818993, "comment_id": 98408842, "body": "I  don&#39;t have time to think deeply about this, but I still can&#39;t see an easy way of fixing the code without introducing undefined behaviour. Maybe you are better off using <code>Arc&lt;RwLock&lt;\u2026&gt;&gt;</code>?"}, {"owner": {"reputation": 488, "user_id": 10085, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/27c29e5380a6a6373691f6c95eb76cac?s=128&d=identicon&r=PG", "display_name": "Brian Cully", "link": "https://stackoverflow.com/users/10085/brian-cully"}, "edited": false, "score": 0, "creation_date": 1556327563, "post_id": 55818993, "comment_id": 98412610, "body": "Thanks for your help so far, I appreciate it. Since the purpose of this exercise is to call a closure through an interrupt handler called potentially many millions of times per second, I was hoping to avoid as much run time overhead as possible and guarantee the exclusivity of the reference in other ways, and the indirection of calling the closure will probably be bad enough. Your comment about <code>self</code> being useful on trait objects did get me thinking: would it be possible to do something like <code>(*h).call_mut()</code>, invoking the behavior via <code>self</code>?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556522610, "post_id": 55818993, "comment_id": 98453425, "body": "@BrianCully You need to @mention me for me to get notifications of your replies. Otherwise I only see your comments if I remember to come back to this question. I don&#39;t fully understand the question in your last comment. For what it&#39;s worth, if you want to call the function from an interrupt handler, I believe your are better off using a plain function pointer rather than an <code>FnMut</code> trait object. You can still access mutable statics from inside the handler if this is what you need to do, but you will have to deal with that inside the handler."}], "answers": [{"tags": [], "owner": {"reputation": 488, "user_id": 10085, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/27c29e5380a6a6373691f6c95eb76cac?s=128&d=identicon&r=PG", "display_name": "Brian Cully", "link": "https://stackoverflow.com/users/10085/brian-cully"}, "is_accepted": true, "score": 2, "last_activity_date": 1556741292, "last_edit_date": 1556741292, "creation_date": 1556472879, "answer_id": 55892884, "question_id": 55818993, "link": "https://stackoverflow.com/questions/55818993/using-fnmut-closures-in-a-static-function/55892884#55892884", "title": "Using FnMut() closures in a static function", "body": "<p>I have found a way to do what I want. It is grossly unsafe for general use, and appropriate mechanisms to hide its lack of safety have to be investigated, and may not even be possible. The main trick is to convert the mutable trait object into a dynamic one using an <code>as</code> cast, and using <code>core::mem::transmute</code> to change its lifetime to <code>static</code>. Here's the code:</p>\n\n<pre><code>use core::cell::UnsafeCell;\nuse core::mem::transmute;\n\nstruct Handler {\n    h: UnsafeCell&lt;*const dyn FnMut()&gt;,\n}\n\nimpl Handler {\n    unsafe fn replace(&amp;self, f: &amp;dyn FnMut()) {\n        let f_static: &amp;'static dyn FnMut() = transmute(f);\n        *self.h.get() = f_static;\n    }\n\n    unsafe fn call(&amp;self) {\n        let f: &amp;mut dyn FnMut() = &amp;mut *(*self.h.get() as *mut dyn FnMut());\n        f();\n    }\n}\nunsafe impl Sync for Handler {}\n\nfn default_handler() {}\nstatic HANDLER: Handler = Handler {\n    h: UnsafeCell::new(&amp;default_handler),\n};\n\nfn main() {\n    let mut x: u32 = 0;\n    let closure = || x += 2;\n\n    unsafe {\n        HANDLER.replace(&amp;closure);\n        HANDLER.call();\n    };\n    println!(\"x: {}\", x); // Prints 2\n}\n</code></pre>\n\n<p>The closure wrapped by <code>Handler.h</code> is inside an <code>UnsafeCell</code> to facilitate its replacement at runtime (inside, and only inside, the main loop).</p>\n"}], "owner": {"reputation": 488, "user_id": 10085, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/27c29e5380a6a6373691f6c95eb76cac?s=128&d=identicon&r=PG", "display_name": "Brian Cully", "link": "https://stackoverflow.com/users/10085/brian-cully"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 764, "favorite_count": 1, "accepted_answer_id": 55892884, "answer_count": 1, "score": 2, "last_activity_date": 1556741292, "creation_date": 1556051546, "last_edit_date": 1556057620, "question_id": 55818993, "link": "https://stackoverflow.com/questions/55818993/using-fnmut-closures-in-a-static-function", "title": "Using FnMut() closures in a static function", "body": "<p><strong>Background:</strong> I'm trying to avoid the use of <code>Mutex</code>/<code>RefCell</code>/<code>Option</code> dance in an interrupt handler for an embedded system. I do not want to use the heap (and I don't think it should be necessary -- but feel free to show me wrong). I can't use <code>std</code>. I've looked at <code>cortex-m-rtfm</code> and it's neat, but pretty invasive. And anyway, this is a bit of a learning exercise. If it works out, I would prefer to use closures to handle interrupts since it feels closer to bare Rust. I am a total Rust newbie -- I've been working with it for about a week. I have tried a <em>lot</em> of different variants of this as I've read through documentation, re-read the Rust book, blog posts, etc.,. I cannot figure what I'm doing wrong here.</p>\n\n<p>Here's the sample code. Questions to follow:</p>\n\n<pre><code>use core::cell::UnsafeCell;\n\npub struct Handler&lt;'a&gt; {\n    h: UnsafeCell&lt;&amp;'a dyn FnMut()&gt;,\n}\n\nimpl&lt;'a&gt; Handler&lt;'a&gt; {\n    pub fn new&lt;T: FnMut()&gt;(closure: &amp;'a dyn FnMut()) -&gt; Self {\n        Handler {\n            h: UnsafeCell::new(closure),\n        }\n    }\n\n    pub fn call(&amp;self) {\n        unsafe {\n            // NOTE: type returned by `self.h.get()` is\n            // `*mut &amp;'a (dyn std::ops::FnMut() + 'a)`\n            let h: *mut FnMut() = self.h.get();\n            h();\n        }\n    }\n}\nunsafe impl&lt;'a&gt; Sync for Handler&lt;'a&gt; {}\n\nfn default_handler() {}\n\nstatic HANDLER: Handler = Handler {\n    h: UnsafeCell::new(&amp;default_handler),\n};\n\n#[test]\nfn call_handler() {\n    let mut a: u32 = 0;\n    let foo = move || a += 1;\n    let mut handler = Handler::new(&amp;foo);\n    handler.call();\n    a += 2; // Shouldn't this cause compilation failure because `a`\n            // was moved into the closure above?\n    assert_eq!(a, 1);\n}\n</code></pre>\n\n<p><strong>Error</strong></p>\n\n<pre><code>error[E0618]: expected function, found `*mut dyn std::ops::FnMut()`\n  --&gt; src/lib.rs:19:13\n   |\n18 |             let h: *mut FnMut() = self.h.get();\n   |                 - `*mut dyn std::ops::FnMut()` defined here\n19 |             h();\n   |             ^--\n   |             |\n   |             call expression requires function\n\nerror[E0277]: expected a `std::ops::Fn&lt;()&gt;` closure, found `(dyn std::ops::FnMut() + 'a)`\n  --&gt; src/lib.rs:18:35\n   |\n18 |             let h: *mut FnMut() = self.h.get();\n   |                                   ^^^^^^^^^^^^ expected an `Fn&lt;()&gt;` closure, found `(dyn std::ops::FnMut() + 'a)`\n   |\n   = help: the trait `std::ops::Fn&lt;()&gt;` is not implemented for `(dyn std::ops::FnMut() + 'a)`\n   = note: wrap the `(dyn std::ops::FnMut() + 'a)` in a closure with no arguments: `|| { /* code */ }\n   = note: required because of the requirements on the impl of `std::ops::FnMut&lt;()&gt;` for `&amp;'a (dyn std::ops::FnMut() + 'a)`\n   = note: required for the cast to the object type `dyn std::ops::FnMut()`\n</code></pre>\n\n<p><strong>Explanation:</strong> Hopefully, my intentions are obvious: I'll set up the closure for <code>HANDLER</code> in <code>main</code>, before going into a busy-loop that never exits. The closure will mutably borrow the stuff the interrupt handler needs for its operation, preventing its use in other contexts. Since <code>main</code> never exits, stack-allocated variables within it are effectively <code>'static</code>, so there shouldn't be a problem with referencing them at any point after the closure is set. The interrupt handler itself (not shown) will simply call the closure to do its work. To work around the storage of a closure (which is not <code>Sized</code>) in a static, I need to store a reference to the closure. <code>UnsafeCell</code> isn't necessarily required, but since I'm using <code>FnMut()</code> its referents need to be mutable, which runs into <code>statics require immutable values</code> when trying to set up <code>default_handler</code> during the creation of a <code>static mut HANDLER</code>.</p>\n\n<p><strong>Questions:</strong></p>\n\n<ol>\n<li><p>As posted, this code doesn't compile. For some reason, the\nassignment <code>let h: *mut FnMut() = self.h.get()</code> tells me that it <code>\nexpected an Fn&lt;()&gt; closure, found (dyn std::ops::FnMut() + 'a)</code>. Well, I know why it found that type. But why is it expecting <code>Fn&lt;()&gt;</code>?</p></li>\n<li><p>In the <code>call_handler</code> test, why is this compiling at all? The <code>foo</code> closure <code>move</code>s its captured variable <code>a</code>. How is it possible to mutate it after the closure definition? When I've tried this code with a type that doesn't implement <code>Copy</code>, it fails as expected, but I'm frankly surprised that trait matters. Isn't the point that <code>foo</code> owns <code>a</code> now?</p></li>\n</ol>\n\n<p>I realize there are potential issues with changing <code>HANDLER.h</code> at arbitrary points in the code, but I will worry about solving those later, after there's a viable proof-of-concept.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "edited": false, "score": 0, "creation_date": 1556082931, "post_id": 55819551, "comment_id": 98311085, "body": "Seems pretty obvious in hindsight ;) thanks for confirming <code>Read</code> is the trait for this."}], "tags": [], "owner": {"reputation": 9772, "user_id": 3963, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9pDQ8.png?s=128&g=1", "display_name": "hao", "link": "https://stackoverflow.com/users/3963/hao"}, "is_accepted": true, "score": 1, "last_activity_date": 1556059158, "last_edit_date": 1556059158, "creation_date": 1556054296, "answer_id": 55819551, "question_id": 55818973, "link": "https://stackoverflow.com/questions/55818973/what-trait-should-i-use-for-reading-stream-of-bytes-from-files-tcp-connections/55819551#55819551", "title": "What trait should I use for reading stream of bytes from files, TCP connections, simple strings...?", "body": "<p>You may find it help to use the <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#impl-Read-10\" rel=\"nofollow noreferrer\"><code>impl&lt;'_&gt; Read for &amp;' [u8]</code> trait</a> for reading bytes from a string. As the type indicates, you'll have to first convert your nice string into a slice of bytes. Here is a short, dumb example.</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{Error, Read, BufReader};\n\nfn whoo&lt;T: Read&gt;(mut readable: T) {\n    let mut buffer = [0; 10];\n    readable.read(&amp;mut buffer).expect(\"panic\");\n    println!(\"{:?}\", buffer);\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    whoo(\"hello there\".as_bytes());\n    whoo(\"\".as_bytes());\n\n    let dict = File::open(\"/usr/share/dict/words\")?;\n    let reader = BufReader::new(dict);\n    whoo(reader);\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 55819551, "answer_count": 1, "score": 0, "last_activity_date": 1556059158, "creation_date": 1556051436, "question_id": 55818973, "link": "https://stackoverflow.com/questions/55818973/what-trait-should-i-use-for-reading-stream-of-bytes-from-files-tcp-connections", "title": "What trait should I use for reading stream of bytes from files, TCP connections, simple strings...?", "body": "<p>I want to write some code that can read bytes from:</p>\n\n<ul>\n<li>stdin</li>\n<li>files</li>\n<li>a string</li>\n<li>TCP</li>\n</ul>\n\n<p>and maybe others. What is the best way to do this in Rust?</p>\n\n<p>I thought the <code>std::io::Read</code> trait was the way to go, but it seems to be lacking implementations for string at least (I just needed this particular one for testing - maybe I can use something else)?</p>\n"}, {"tags": ["rest", "rust", "iterator"], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 1, "last_activity_date": 1556053976, "creation_date": 1556053976, "answer_id": 55819498, "question_id": 55818912, "link": "https://stackoverflow.com/questions/55818912/iterator-for-rest-api-skip-and-take/55819498#55819498", "title": "Iterator for REST API: skip and take", "body": "<p>The <code>Iterator</code> trait only has a single <em>required</em> method, to wit, the <code>next()</code> method. This method <em>must</em> be implemented for all types implementing the trait. All other methods of the <code>Iterator</code> trait are <em>provided</em> methods. They have default implementations, and you don't <em>have to</em> implement them, but you are still allowed to override them for specific types.</p>\n\n<p>However, you cannot change the declarations of <code>skip()</code> and <code>take()</code>:</p>\n\n<pre><code>fn skip(self, n: usize) -&gt; Skip&lt;Self&gt; where Self: Sized;\nfn take(self, n: usize) -&gt; Take&lt;Self&gt; where Self: Sized;\n</code></pre>\n\n<p>So these methods <em>consume</em> the old iterator, and return <em>new</em> iterators of type <code>std::iter::Skip&lt;Self&gt;</code> or <code>std::iter::Take&lt;Self&gt;</code>, respectively. After calling one of the methods, you won't be able to control the semantics of the second method in the chain, since that method will be called on one of these two type from the standard library rather than your custom type, so you will end up calling the default implementation of the method.</p>\n\n<p>You can make <code>skip()</code> mostly work as you intend by overriding <code>nth()</code> on the iterator, since the implementations of <code>Skip</code> and <code>Take</code> forward <code>nth()</code> to the underlying iterator, but making <code>take()</code> work properly is not possible.</p>\n\n<p>I recommend separating the parts of the API building the query and iterating over the results. For the latter, the <code>Iterator</code> trait is fine, but for the former you should define a custom interface.</p>\n"}], "owner": {"reputation": 277, "user_id": 886448, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e74a60f984378e486a78b9c4b14e926b?s=128&d=identicon&r=PG", "display_name": "roqvist", "link": "https://stackoverflow.com/users/886448/roqvist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1556053976, "creation_date": 1556051171, "question_id": 55818912, "link": "https://stackoverflow.com/questions/55818912/iterator-for-rest-api-skip-and-take", "title": "Iterator for REST API: skip and take", "body": "<p>I'm thinking about implementing <code>std::iter::Iterator</code> for an existing REST API. The API accepts parameters for <code>skip</code> and <code>take</code>, simply by adding to the query parameters (<code>...&amp;skip=10&amp;take=10</code>).</p>\n\n<p>It would be nice if I could make use of these parameters by sending in whatever is used for the Iterators <code>skip()</code> and <code>take()</code>. Since Rust iterators are lazy it feels like this would be doable. But all I find when looking for implementing Iterator is the <code>next()</code> method.</p>\n\n<p>Example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let result = api.search(\"something\").skip(5).take(10).collect();\n\n// In my iterator implementation I'd like to make the following request:\n// https://my.api.endpoint/?search=something&amp;skip=5&amp;take=10\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556045483, "post_id": 55817458, "comment_id": 98301840, "body": "The note about downstream creates isn&#39;t the error. The error is that you have a blanket implementation for all <code>Option&lt;T&gt;</code> where T might be a reference type. If there was a type <code>T</code> such that <code>T: Foo</code> and <code>&amp;T: Foo</code> then there&#39;s no way to decide which function to use for <code>Option&lt;&amp;T&gt;::my_from</code>."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556046026, "post_id": 55817458, "comment_id": 98302033, "body": "@turbulencetoo I understand that, but as you see my crate have no such thing: type <code>X</code> that <code>X: Foo + &amp;X: Foo</code>, and because of <code>trait Foo</code> impossible to use outside crate, that it is not clear why compiler emit error."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556046802, "post_id": 55817458, "comment_id": 98302333, "body": "Here&#39;s an even more simple example that is very similar to yours: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e75a40b5f8ef053cd7fbc5942c8ce05d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> It is a conflict because a <code>T</code> <i>could</i> implement both <code>Foo</code> and <code>Bar</code>. Just because there isn&#39;t currently have such a type doesn&#39;t mean that this isn&#39;t a footgun."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556047460, "post_id": 55817458, "comment_id": 98302615, "body": "@turbulencetoo But this compiler can check all crate, and it found such issue then emit error, why it emit error before I do anything wrong, there is no error in my code, it may be in the future, but when it appear then it should emit error."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556047575, "post_id": 55817458, "comment_id": 98302661, "body": "@turbulencetoo If <code>trait</code> will be public, then error clear, it is impossible to control all crates that use my crate, but <code>trait</code> private, so why complain about <code>trait</code> usage before real error?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1556047878, "post_id": 55817458, "comment_id": 98302789, "body": "@user1244932 please check the error back it is not a root cause it is a note that if everything is right then this note may cause this error."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1556048275, "post_id": 55817458, "comment_id": 98302966, "body": "@&#214;merErden Sorry, I don&#39;t understand you completly. I have compilation error about possible error in the future. I can not understand why I should care about future instead of present."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1556055368, "post_id": 55817458, "comment_id": 98305885, "body": "@user1244932 Please remove <code>Foo</code> boundary from both implementation then you&#39;ll have same compiler error without the note. But i don&#39;t understand why did you ask this question in different shape, you should already have the answer in <a href=\"https://stackoverflow.com/questions/50012745/is-there-a-way-to-tell-the-compiler-that-nobody-will-implement-a-trait-for-a-ref\">here</a>"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1556869553, "post_id": 55817458, "comment_id": 98581526, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/50012745/is-there-a-way-to-tell-the-compiler-that-nobody-will-implement-a-trait-for-a-ref\">Is there a way to tell the compiler that nobody will implement a trait for a reference to a generic type?</a>"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 253, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1556048410, "creation_date": 1556044618, "last_edit_date": 1556048410, "question_id": 55817458, "link": "https://stackoverflow.com/questions/55817458/private-trait-and-e0119", "title": "Private trait and E0119?", "body": "<p>Is Rust has thing like \"private trait\"?\nI mean trait defined without <code>pub</code> keyword is private?</p>\n\n<p>Code bellow gives compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `MyFrom&lt;i64&gt;` for type `std::option::Option&lt;&amp;_&gt;`:\n  --&gt; src/main.rs:22:1\n   |\n16 | impl&lt;T: Foo&gt; MyFrom&lt;i64&gt; for Option&lt;T&gt; {\n   | -------------------------------------- first implementation here\n...\n22 | impl&lt;T: Foo&gt; MyFrom&lt;i64&gt; for Option&lt;&amp;T&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `std::option::Option&lt;&amp;_&gt;`\n   |\n   = note: downstream crates may implement trait `Foo` for type `&amp;_`\n</code></pre>\n\n<p>But this is not public trait, and this is exe , how can \" downstream crates may implement trait <code>Foo</code> for type <code>&amp;_</code>\" ? It is impossible to import trait from exe crate, and even if possible this is not <code>pub</code> trait,\nso <code>rustc</code> doesn't support private traits?</p>\n\n<pre><code>fn main() {\n    trait MyFrom&lt;T&gt; {\n        fn my_from(_: T) -&gt; Self;\n    }\n\n    trait Foo {}\n\n    impl&lt;T: Foo&gt; MyFrom&lt;i64&gt; for Option&lt;T&gt; {\n        fn my_from(x: i64) -&gt; Self {\n            unimplemented!();\n        }\n    }\n\n    impl&lt;T: Foo&gt; MyFrom&lt;i64&gt; for Option&lt;&amp;T&gt; {\n        fn my_from(x: i64) -&gt; Self {\n            unimplemented!();\n        }\n    }\n}\n\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 3986007, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2dd88be1dd3669406b07004bc7dbac78?s=128&d=identicon&r=PG", "display_name": "Darshak Parikh", "link": "https://stackoverflow.com/users/3986007/darshak-parikh"}, "edited": false, "score": 0, "creation_date": 1556039304, "post_id": 55816136, "comment_id": 98299166, "body": "But in that case, why does it fail to compile when we return a slice instead of an integer? (See the red listing on <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html\" rel=\"nofollow noreferrer\">this page</a>, at ~75% scroll position.)"}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 107, "user_id": 3986007, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2dd88be1dd3669406b07004bc7dbac78?s=128&d=identicon&r=PG", "display_name": "Darshak Parikh", "link": "https://stackoverflow.com/users/3986007/darshak-parikh"}, "edited": false, "score": 1, "creation_date": 1556039674, "post_id": 55816136, "comment_id": 98299336, "body": "@DarshakParikh: it&#39;s the same principle as the code I&#39;ve shown you that returns <code>-&gt; String&amp;</code>. The borrow survives outside of the scope of <code>first_word</code>, which means that <code>s</code> is still borrowed in <code>main</code> after we return to it."}, {"owner": {"reputation": 107, "user_id": 3986007, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2dd88be1dd3669406b07004bc7dbac78?s=128&d=identicon&r=PG", "display_name": "Darshak Parikh", "link": "https://stackoverflow.com/users/3986007/darshak-parikh"}, "edited": false, "score": 0, "creation_date": 1556039984, "post_id": 55816136, "comment_id": 98299466, "body": "I see, thanks for the explanation. But why does it still survive once the borrower function has returned? What is so special with returning a reference instead of a primitive type?"}, {"owner": {"reputation": 107, "user_id": 3986007, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2dd88be1dd3669406b07004bc7dbac78?s=128&d=identicon&r=PG", "display_name": "Darshak Parikh", "link": "https://stackoverflow.com/users/3986007/darshak-parikh"}, "edited": false, "score": 1, "creation_date": 1556040669, "post_id": 55816136, "comment_id": 98299745, "body": "Never mind, I got it. It&#39;s because we&#39;re assigning the returned reference to a variable and that makes the variable the new borrower."}], "tags": [], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "is_accepted": true, "score": 5, "last_activity_date": 1556050412, "last_edit_date": 1556050412, "creation_date": 1556038964, "answer_id": 55816136, "question_id": 55816067, "link": "https://stackoverflow.com/questions/55816067/why-does-this-not-count-as-an-immutable-borrow/55816136#55816136", "title": "Why does this not count as an immutable borrow?", "body": "<p>The string <code>s</code> is immutably borrowed for the duration of the call to <code>first_word</code>. As soon as the control is returned to <code>main</code> after <code>first_word</code>, the string is not considered borrowed anymore and can be mutated as you have observed.</p>\n\n<hr>\n\n<p>If <code>first_word</code> were to return a <code>&amp;String</code> which you extended the lifetime of by assigning it to a variable, then you would see the error you expected. E.g.</p>\n\n<pre><code>fn first_word(s: &amp;String) -&gt; &amp;String {\n    &amp;s\n}\n\nfn main() {\n    let mut s = String::from(\"hello world\");\n    let word = first_word(&amp;s);\n    s.clear();\n}\n</code></pre>\n\n<blockquote>\n  <p>cannot borrow <code>s</code> as mutable because it is also borrowed as immutable</p>\n</blockquote>\n\n<p><a href=\"https://rust.godbolt.org/z/cMVdVf\" rel=\"nofollow noreferrer\">https://rust.godbolt.org/z/cMVdVf</a></p>\n\n<p>In that case, adding an extra scope would fix that:</p>\n\n<pre><code>fn main() {\n    let mut s = String::from(\"hello world\");\n\n    {\n        let word = first_word(&amp;s);\n    }\n\n    s.clear();\n}\n</code></pre>\n"}], "owner": {"reputation": 107, "user_id": 3986007, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2dd88be1dd3669406b07004bc7dbac78?s=128&d=identicon&r=PG", "display_name": "Darshak Parikh", "link": "https://stackoverflow.com/users/3986007/darshak-parikh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 55816136, "answer_count": 1, "score": 3, "last_activity_date": 1556050412, "creation_date": 1556038653, "question_id": 55816067, "link": "https://stackoverflow.com/questions/55816067/why-does-this-not-count-as-an-immutable-borrow", "title": "Why does this not count as an immutable borrow?", "body": "<p>I am reading <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html\" rel=\"nofollow noreferrer\">the official Rust Book</a> and looking at listing 4-8 in Section 4.3.</p>\n\n<p>The code looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn first_word(s: &amp;String) -&gt; usize {\n    let bytes = s.as_bytes();\n\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b' ' {\n            return i;\n        }\n    }\n\n    s.len()\n}\n\nfn main() {\n    let mut s = String::from(\"hello world\");\n\n    let word = first_word(&amp;s);\n\n    s.clear();\n}\n</code></pre>\n\n<p>This line:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let word = first_word(&amp;s);\n</code></pre>\n\n<p>seems to borrow an immutable reference to <code>s</code>. (This is where I guess I'm wrong; I just don't know why.)</p>\n\n<p>In the next line, we mutate <code>s</code> by calling the <code>clear()</code> method.</p>\n\n<p>I was expecting the compiler to throw:</p>\n\n<pre><code>cannot borrow `s` as mutable because it is also borrowed as immutable\n</code></pre>\n\n<p>Why does this compile?</p>\n"}, {"tags": ["rust", "llvm", "address-sanitizer"], "comments": [{"owner": {"reputation": 549, "user_id": 10669139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19d3f400144916a9acfe0eed271211ed?s=128&d=identicon&r=PG&f=1", "display_name": "Avm-x", "link": "https://stackoverflow.com/users/10669139/avm-x"}, "edited": false, "score": 1, "creation_date": 1556036713, "post_id": 55815380, "comment_id": 98297868, "body": "have you checked this <a href=\"https://github.com/rust-lang/rustc-guide/blob/master/src/compiler-debugging.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rustc-guide/blob/master/src/&hellip;</a>"}, {"owner": {"reputation": 61, "user_id": 1290383, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9877c5f4661827d6254702180668c8be?s=128&d=identicon&r=PG", "display_name": "obraunsdorf", "link": "https://stackoverflow.com/users/1290383/obraunsdorf"}, "reply_to_user": {"reputation": 549, "user_id": 10669139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19d3f400144916a9acfe0eed271211ed?s=128&d=identicon&r=PG&f=1", "display_name": "Avm-x", "link": "https://stackoverflow.com/users/10669139/avm-x"}, "edited": false, "score": 0, "creation_date": 1556101486, "post_id": 55815380, "comment_id": 98320315, "body": "Thank you! Yes, I checked that before, but I overlooked the link to <a href=\"https://rust-lang.github.io/rustc-guide/codegen/debugging.html\" rel=\"nofollow noreferrer\">rust-lang.github.io/rustc-guide/codegen/debugging.html</a> . There, the usage of &quot;-C llvm-args&quot; is presented briefly. I will use this and write the answer."}], "answers": [{"tags": [], "owner": {"reputation": 61, "user_id": 1290383, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9877c5f4661827d6254702180668c8be?s=128&d=identicon&r=PG", "display_name": "obraunsdorf", "link": "https://stackoverflow.com/users/1290383/obraunsdorf"}, "is_accepted": false, "score": 1, "last_activity_date": 1556201233, "creation_date": 1556201233, "answer_id": 55851252, "question_id": 55815380, "link": "https://stackoverflow.com/questions/55815380/llvm-debug-output-through-rust/55851252#55851252", "title": "LLVM debug output through rust", "body": "<p>The equivalent compiler argument for rustc is </p>\n\n<pre><code>-C llvm-args=-debug-only=&lt;LLVM DEBUG_TYPE&gt;\n</code></pre>\n\n<p>The <code>-C</code> part gives access to the options for code generation of rust.</p>\n\n<p>The <code>llvm-args</code> part tells rustc to forward every subsequent flag to LLVM. If I understand correctly, you can specify every LLVM option that is evaluated with <code>cl::opt()</code> in LLVM source code.</p>\n\n<p>So the full command to build a rust application with ASAN and see only the log output of ASAN would be:</p>\n\n<pre><code>cargo clean &amp;&amp; RUSTFLAGS=\"-C llvm-args=-debug-only=asan -Zsanitizer=address\" cargo build\n</code></pre>\n\n<p>Side note: I think debug mode for LLVM must be enabled in config.toml when building rust to see the respective log output.</p>\n"}], "owner": {"reputation": 61, "user_id": 1290383, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9877c5f4661827d6254702180668c8be?s=128&d=identicon&r=PG", "display_name": "obraunsdorf", "link": "https://stackoverflow.com/users/1290383/obraunsdorf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1556201233, "creation_date": 1556035951, "question_id": 55815380, "link": "https://stackoverflow.com/questions/55815380/llvm-debug-output-through-rust", "title": "LLVM debug output through rust", "body": "<p>I am looking for a way to read the LLVM debug output by invoking the rust compiler (through cargo). I am especially interested in output of LLVMs ASAN. </p>\n\n<p>To run a build with ASAN I can do:</p>\n\n<pre><code>cargo clean &amp;&amp; RUSTFLAGS=\"-Zsanitizer=address\" cargo build\n</code></pre>\n\n<p>but I don't know the command to get the debug log ouput. </p>\n\n<p>With clang I think one can add </p>\n\n<pre><code>-mllvm -debug-only=asan\n</code></pre>\n\n<p>as compiler-flag.</p>\n\n<p>How can I supply something like this flag through rustc?</p>\n\n<p>I am using the current rust source (<a href=\"https://github.com/rust-lang/rust/\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/</a> commit 31f5d69) to build rustc myself.</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556034310, "post_id": 55814869, "comment_id": 98296581, "body": "<a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_boxed_slice\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/vec/&hellip;</a>"}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556034420, "post_id": 55814869, "comment_id": 98296641, "body": "and Read is already implemented <code>Impl&lt;&#39;_&gt; Read for &amp;&#39;_ [u8]</code>"}, {"owner": {"reputation": 41, "user_id": 9992969, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97148ce422644009c567993da3f72a02?s=128&d=identicon&r=PG&f=1", "display_name": "Eugenio Tampieri", "link": "https://stackoverflow.com/users/9992969/eugenio-tampieri"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1556034431, "post_id": 55814869, "comment_id": 98296646, "body": "@turbulencetoo the compiler says that <code>the trait bound `[u8]: std::io::Read` is not satisfied. the trait `std::io::Read` is not implemented for `[u8]`</code>"}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1556034616, "post_id": 55814869, "comment_id": 98296768, "body": "But it is implemented for &amp;[u8], and A Box&lt;[u8]&gt; should deref to a &amp;[u8]"}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556034960, "post_id": 55814869, "comment_id": 98296924, "body": "actually looking at it on the playground I had to so something like <code>(&amp;my_box_u8 as &amp;[u8]).read(buffer_to_read_into);</code> which is weird and I&#39;m sure someone else has a more elegant way of getting a <code>&amp;[u8]</code> out of a <code>Box&lt;[u8]&gt;</code>"}, {"owner": {"reputation": 41, "user_id": 9992969, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97148ce422644009c567993da3f72a02?s=128&d=identicon&r=PG&f=1", "display_name": "Eugenio Tampieri", "link": "https://stackoverflow.com/users/9992969/eugenio-tampieri"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556035118, "post_id": 55814869, "comment_id": 98296999, "body": "@turbulencetoo thanks for your support. First of all, I&#39;m a novice in Rust, so pardon my ignorance. Then, why are you trying to get a <code>&amp;[u8]</code> out of a <code>Box&lt;[u8]&gt;</code>? I just need a  <code>Box&lt;&gt;</code> that implements the <code>Read</code> trait, which I&#39;m not able to get."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556035245, "post_id": 55814869, "comment_id": 98297081, "body": "Well that first link I shared is the way to go from` Vec&lt;u8&gt;` to <code>Box&lt;[u8]&gt;</code>... but I am similarly having trouble with the fact that <code>Box&lt;[u8]&gt;</code> doesn&#39;t implement <code>Read</code>. I am a Rust novice too"}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1556035608, "post_id": 55814869, "comment_id": 98297268, "body": "Also It looks like doing <code>(&amp;*my_box_u8)</code> is a better way to get something Read-able than my previous suggestion of<code>(&amp;my_box_u8 as &amp;[u8])</code>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 2, "creation_date": 1556035672, "post_id": 55814869, "comment_id": 98297312, "body": "Could you provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> with the corresponding error message? The <a href=\"https://stackoverflow.com/tags/rust/info\">Rust tag info</a> contains tips on how to create this. I guess your question is not related to the actual problem you want to solve."}, {"owner": {"reputation": 41, "user_id": 9992969, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97148ce422644009c567993da3f72a02?s=128&d=identicon&r=PG&f=1", "display_name": "Eugenio Tampieri", "link": "https://stackoverflow.com/users/9992969/eugenio-tampieri"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1556049876, "post_id": 55814869, "comment_id": 98303597, "body": "@TimDiekmann I&#39;ve posted the code you requested. I see there&#39;s the unknown size at compile time thing that could mess up the code but I don&#39;t know how could I fix it because the vec contains a file, which has variable size"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556091877, "post_id": 55814869, "comment_id": 98314731, "body": "I think your example may be a little too minimal. It looks like the compiler can&#39;t infer the type of data that is stored into your <code>Vec</code>. Can you try to create is with: <code>let mut doc_bytes = Vec::&lt;u8&gt;::new();</code>?"}, {"owner": {"reputation": 41, "user_id": 9992969, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97148ce422644009c567993da3f72a02?s=128&d=identicon&r=PG&f=1", "display_name": "Eugenio Tampieri", "link": "https://stackoverflow.com/users/9992969/eugenio-tampieri"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556099968, "post_id": 55814869, "comment_id": 98319457, "body": "@Jmb I&#39;ve made some edits and I&#39;ve specified the maximum size of the Vec"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556101461, "post_id": 55814869, "comment_id": 98320299, "body": "<code>Vec&lt;u8&gt;</code> dereferences to <code>&amp;[u8]</code>, so you shouldn&#39;t need to call <code>into_boxed_slice</code>. Instead <code>&amp;(&amp;doc_bytes as &amp;[u8]) as &amp;Read</code> gives you a reference to a <code>Read</code>."}], "answers": [{"tags": [], "owner": {"reputation": 41, "user_id": 9992969, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97148ce422644009c567993da3f72a02?s=128&d=identicon&r=PG&f=1", "display_name": "Eugenio Tampieri", "link": "https://stackoverflow.com/users/9992969/eugenio-tampieri"}, "is_accepted": true, "score": 0, "last_activity_date": 1556273500, "creation_date": 1556273500, "answer_id": 55865368, "question_id": 55814869, "link": "https://stackoverflow.com/questions/55814869/is-there-a-way-to-create-a-box-from-a-vecu8-that-implements-the-read-trait/55865368#55865368", "title": "Is there a way to create a Box from a Vec&lt;u8&gt; that implements the Read trait?", "body": "<p>Ok, found the answer (<a href=\"https://github.com/dremon/ipp.rs/issues/6\" rel=\"nofollow noreferrer\">https://github.com/dremon/ipp.rs/issues/6</a>)</p>\n\n<pre><code>let mut doc = Document::load(\"pettorina.pdf\").unwrap();\nlet mut doc_bytes = Vec::new();\nlet mut num = \" \".repeat(((4.0 -(pettorina.numero as f32).log10().floor())/2.0) as usize);\nnum.push_str(&amp;pettorina.numero.to_string());\ndoc.version = \"1.4\".to_string();\ndoc.replace_text(1, \"num\", &amp;num);\ndoc.replace_text(1, \"NOME\", &amp;pettorina.nome.to_ascii_uppercase());\ndoc.save_to(&amp;mut doc_bytes);\nlet client = ipp::IppClient::new(\"printer_url\");\nlet print_job = ipp::operation::PrintJob::new(Box::new(std::io::Cursor::new(doc_bytes)), &amp;\"pettorine\", None);\nclient.send(print_job).unwrap();\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 9992969, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97148ce422644009c567993da3f72a02?s=128&d=identicon&r=PG&f=1", "display_name": "Eugenio Tampieri", "link": "https://stackoverflow.com/users/9992969/eugenio-tampieri"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 523, "favorite_count": 1, "accepted_answer_id": 55865368, "answer_count": 1, "score": -2, "last_activity_date": 1556273500, "creation_date": 1556034110, "last_edit_date": 1556099832, "question_id": 55814869, "link": "https://stackoverflow.com/questions/55814869/is-there-a-way-to-create-a-box-from-a-vecu8-that-implements-the-read-trait", "title": "Is there a way to create a Box from a Vec&lt;u8&gt; that implements the Read trait?", "body": "<p>I'm writing a piece of code that using the lopdf crate writes a PDF on a Vec. Then I want to print the PDF via the IPP crate but it requires a Box that I'm not able to create</p>\n\n<p>I've tried many things, but I'm always stuck with ownerships problems.\nAnother thing I tried was creating the Box from a raw pointer but it did crash the program.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut doc = Document::load(\"file.pdf\").unwrap();\nlet mut doc_bytes = Vec::new();\n//redacted\ndoc.save_to(&amp;mut doc_bytes);\nlet doc_slice = doc_bytes.as_slice();\nlet buffer = std::io::BufReader::new(doc_slice.to_vec().as_slice());\nlet doc_box = Box::from(buffer);\nlet client = ipp::IppClient::new(\"printer URL\");\nlet print_job = ipp::operation::PrintJob::new(doc_box, &amp;\"username\", None)\nclient.send(print_job).unwrap();\n</code></pre>\n\n<p>It should print the file on the printer. It won't compile saying that</p>\n\n<pre><code>temporary value dropped while borrowed\n\ncreates a temporary which is freed while still in use rustc(E0716)\nmain.rs(6, 70): creates a temporary which is freed while still in use\nmain.rs(6, 100): temporary value is freed at the end of this statement\nmain.rs(9, 79): cast requires that borrow lasts for `'static`\n</code></pre>\n\n<p>on <code>doc_slice.to_vec()</code>.</p>\n\n<p>Essentially, I'm trying to do something like this (<a href=\"https://github.com/dremon/ipp.rs/blob/master/ipp-client/examples/print-job.rs\" rel=\"nofollow noreferrer\">https://github.com/dremon/ipp.rs/blob/master/ipp-client/examples/print-job.rs</a>), but without reading from a file.</p>\n\n<h2>Minimal, Complete, and Verifiable example</h2>\n\n<p><code>Cargo.toml</code></p>\n\n<pre><code>[package]\nname = \"example\"\nversion = \"0.1.0\"\nauthors = [\"you &lt;you@example.com&gt;\"]\nedition = \"2018\"\n\n[dependencies]\nipp = \"0.2.1\"\n</code></pre>\n\n<p><code>main.rs</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main(){\n  let mut doc_bytes = Vec::&lt;u8&gt;::new();\n  doc_bytes.set_len(720000);\n  let client = ipp::IppClient::new(\"http://printer_url\");\n  let print_job = ipp::operation::PrintJob::new(doc_bytes.into_boxed_slice(), &amp;\"user\", None);\n  client.send(print_job).unwrap();\n}\n</code></pre>\n\n<p>With this code I get two errors:</p>\n\n<pre><code>   Compiling example v0.1.0 (/path)\nerror[E0277]: the trait bound `[u8]: std::io::Read` is not satisfied\n --&gt; src/main.rs:5:49\n  |\n5 |   let print_job = ipp::operation::PrintJob::new(doc_bytes.into_boxed_slice(), &amp;\"username\", None);\n  |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::io::Read` is not implemented for `[u8]`\n  |\n  = help: the following implementations were found:\n            &lt;&amp;'a [u8] as std::io::Read&gt;\n  = note: required for the cast to the object type `dyn std::io::Read`\n\nerror[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n --&gt; src/main.rs:5:49\n  |\n5 |   let print_job = ipp::operation::PrintJob::new(doc_bytes.into_boxed_slice(), &amp;\"username\", None);\n  |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = note: required for the cast to the object type `dyn std::io::Read`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: Could not compile `pettorine`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>I've noticed that I get a new error!</p>\n\n<p>Thanks in advance for all your support</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556032981, "post_id": 55814114, "comment_id": 98295835, "body": "Playground: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a42b29f4e0bbb411ee2c6db66120fee4\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1556034684, "post_id": 55814114, "comment_id": 98296800, "body": "Previous discussion: <a href=\"https://i.stack.imgur.com/Xt6L3.png\" rel=\"nofollow noreferrer\">i.stack.imgur.com/Xt6L3.png</a>"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 5, "last_activity_date": 1556068706, "last_edit_date": 1556068706, "creation_date": 1556034041, "answer_id": 55814844, "question_id": 55814114, "link": "https://stackoverflow.com/questions/55814114/why-does-boxt-need-16-bytes-in-memory-but-a-referenced-slice-needs-only-8/55814844#55814844", "title": "Why does Box&lt;[T]&gt; need 16 bytes in memory, but a referenced slice needs only 8? (on x64 machine)", "body": "<p>The size of a reference depends on the \"sizedness\" of the referenced type:</p>\n\n<ul>\n<li>A reference to a sized type is a single pointer to the memory address.</li>\n<li><p>A reference to an unsized type is a pointer to the memory <strong>and</strong> the size of the pointed datum. That's what is called a <a href=\"https://doc.rust-lang.org/1.34.0/src/core/slice/mod.rs.html#54\" rel=\"nofollow noreferrer\">fat pointer</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C)]\nstruct FatPtr&lt;T&gt; {\n    data: *const T,\n    len: usize,\n}\n</code></pre></li>\n</ul>\n\n<p>A <code>Box</code> is a special kind of pointer that points to the heap, but it is still a pointer.</p>\n\n<p>Knowing that, you understand that:</p>\n\n<ul>\n<li><code>Box&lt;i8&gt;</code> is 8 bytes because <code>i8</code> is sized,</li>\n<li><code>Box&lt;&amp;[i8]&gt;</code> is 8 bytes because a reference is sized,</li>\n<li><code>Box&lt;[i8]&gt;</code> is 16 bytes because a slice is unsized.</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 19, "last_activity_date": 1556063951, "last_edit_date": 1556063951, "creation_date": 1556034223, "answer_id": 55814914, "question_id": 55814114, "link": "https://stackoverflow.com/questions/55814114/why-does-boxt-need-16-bytes-in-memory-but-a-referenced-slice-needs-only-8/55814914#55814914", "title": "Why does Box&lt;[T]&gt; need 16 bytes in memory, but a referenced slice needs only 8? (on x64 machine)", "body": "<p><code>Box&lt;T&gt;</code> is basically <code>*const T</code> (Actually it's a newtype around <code>Unique&lt;T&gt;</code>, which itself is a <code>NonNull&lt;T&gt;</code> with <code>PhantomData&lt;T&gt;</code> (for <a href=\"https://doc.rust-lang.org/nightly/nomicon/dropck.html\" rel=\"noreferrer\">dropck</a>), but let's stick to <code>*const T</code> for simplicity).</p>\n\n<p>A pointer in Rust normally has the same size as <code>size_of::&lt;usize&gt;()</code> except when <code>T</code> is a <a href=\"https://doc.rust-lang.org/reference/dynamically-sized-types.html\" rel=\"noreferrer\">dynamically sized type</a> (DST). Currently, a <code>Box&lt;DST&gt;</code> is <code>2 * size_of::&lt;usize&gt;()</code> in size (the exact representation is not stable at the time of writing). A pointer to a DST is called <code>FatPtr</code>.</p>\n\n<p>Currently, there are two kinds of DSTs: Slices and traits. A <code>FatPtr</code> to a slice is defined like this:</p>\n\n<pre><code>#[repr(C)]\nstruct FatPtr&lt;T&gt; {\n    data: *const T,\n    len: usize,\n}\n</code></pre>\n\n<p><em>Note:</em> For a trait pointer, <code>len</code> is replaced by a pointer to the <code>vtable</code>.</p>\n\n<p>With those information, your question can be answered:</p>\n\n<ul>\n<li><code>Box&lt;i8&gt;</code>: <code>i8</code> is a sized type => basically the same as <code>*const i8</code> => 8 bytes in size (with 64 bit pointer width)</li>\n<li><code>Box&lt;[i8]&gt;</code>: <code>[i8]</code> is a DST => basically the same as <code>FatPtr&lt;i8&gt;</code> => 16 bytes in size (with 64 bit pointer width)</li>\n<li><code>Box&lt;&amp;[i8]&gt;</code>: <code>&amp;[i8]</code> is <strong>not</strong> a DST. It's basically the same as <code>*const FatPtr&lt;i8&gt;</code> => 8 bytes in size (with 64 bit pointer width)</li>\n</ul>\n"}], "owner": {"reputation": 2826, "user_id": 1575632, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/SPw2f.jpg?s=128&g=1", "display_name": "amin", "link": "https://stackoverflow.com/users/1575632/amin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 802, "favorite_count": 0, "accepted_answer_id": 55814914, "answer_count": 2, "score": 15, "last_activity_date": 1556068706, "creation_date": 1556031679, "last_edit_date": 1556058309, "question_id": 55814114, "link": "https://stackoverflow.com/questions/55814114/why-does-boxt-need-16-bytes-in-memory-but-a-referenced-slice-needs-only-8", "title": "Why does Box&lt;[T]&gt; need 16 bytes in memory, but a referenced slice needs only 8? (on x64 machine)", "body": "<p>Consider:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    // Prints 8, 8, 16\n    println!(\n        \"{}, {}, {}\",\n        std::mem::size_of::&lt;Box&lt;i8&gt;&gt;(),\n        std::mem::size_of::&lt;Box&lt;&amp;[i8]&gt;&gt;(),\n        std::mem::size_of::&lt;Box&lt;[i8]&gt;&gt;(),\n    );\n}\n</code></pre>\n\n<p>Why do owned slices take 16 bytes, but referenced slices take only 8?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1962, "user_id": 982364, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/8f7fcd81979b29f5fd4ddf155987e588?s=128&d=identicon&r=PG", "display_name": "Tom", "link": "https://stackoverflow.com/users/982364/tom"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556043298, "post_id": 55813962, "comment_id": 98300944, "body": "@FrenchBoiethios I saw that question, but it doesn&#39;t solve my problem or maybe I just really don&#39;t understand this part of rust."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1556043648, "post_id": 55813962, "comment_id": 98301105, "body": "Read the part about dispatches. TLDR: you should use generics: <code>impl Distribution</code>"}], "owner": {"reputation": 1962, "user_id": 982364, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/8f7fcd81979b29f5fd4ddf155987e588?s=128&d=identicon&r=PG", "display_name": "Tom", "link": "https://stackoverflow.com/users/982364/tom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1556095715, "answer_count": 0, "score": 0, "last_activity_date": 1556043269, "creation_date": 1556031247, "last_edit_date": 1556043269, "question_id": 55813962, "link": "https://stackoverflow.com/questions/55813962/rust-traits-as-interfaces-to-different-functions", "closed_reason": "Duplicate", "title": "rust traits as interfaces to different functions", "body": "<p>I'm using the statrs crate for some statistical work. There is a part where I sample data from various distributions and I would like to write that code only once. However, I am using several different distribution functions.</p>\n\n<p>My idea is something like this:</p>\n\n<pre><code>let norm = Normal::new(x,y);\nlet lognorm: LogNormal::new(a,b);\n\nsample(norm);\nsample(lognorm);\n\nfn sample (d: Distribution) {\n   for i in 1..100 {\n      let a = d.sample();\n   }\n}\n</code></pre>\n\n<p>but since Traits are not interfaces, it isn't quite so simple. Rust seems to require me to specify \"Normal\" and not \"Distribution\".</p>\n\n<p>There are some other questions touching on this question, but none of them seems to me to answer to my problem. I understand that traits are not interfaces, what I don't get is how to basically pass a reference to a trait with different implementations into further processing.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556028800, "post_id": 55813017, "comment_id": 98293175, "body": "You can of course get rid of the <code>unsafe { RawFdReader::from_raw_fd(0) }</code> if you implement a static method (e.g. <code>new</code>) and pass a <code>RawFd</code> there because you know it&#39;s safe to construct."}, {"owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "edited": false, "score": 0, "creation_date": 1556029863, "post_id": 55813017, "comment_id": 98293806, "body": "Looks like this works fine indeed, thanks a lot ! I figured using read directly would work, but I imagined something like this would already exist"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 2, "last_activity_date": 1556029117, "last_edit_date": 1556029117, "creation_date": 1556028071, "answer_id": 55813017, "question_id": 55812291, "link": "https://stackoverflow.com/questions/55812291/bufreader-from-a-raw-fd/55813017#55813017", "title": "BufReader from a raw fd", "body": "<p>Unfortunately <code>FromRawFd</code> is only implemented for a <a href=\"https://doc.rust-lang.org/std/os/unix/io/trait.FromRawFd.html#implementors\" rel=\"nofollow noreferrer\">hand full of structs</a>. You need to know beforehand what kind of \"file\" you want to read or you risk undefined behavoir (because Rust assumes that a FD is a type that it isn't).</p>\n\n<p>You can however implement your own struct which does nothing else than reading which is fine for all file descriptor. This can be done by a function call to <code>man (2) read</code>.</p>\n\n<pre><code>use libc;\nuse std::ffi::OsStr;\nuse std::io::{Error, Read, Result};\nuse std::os::unix::ffi::OsStrExt;\nuse std::os::unix::io::{FromRawFd, RawFd};\n\npub struct RawFdReader {\n    fd: RawFd,\n}\n\nimpl FromRawFd for RawFdReader {\n    unsafe fn from_raw_fd(fd: RawFd) -&gt; Self {\n        Self { fd }\n    }   \n}\n\nimpl Read for RawFdReader {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; Result&lt;usize&gt; {\n        assert!(buf.len() &lt;= isize::max_value() as usize);\n        match unsafe { libc::read(self.fd, buf.as_mut_ptr() as _, buf.len()) } { \n            x if x &lt; 0 =&gt; Err(Error::last_os_error()),\n            x =&gt; Ok(x as usize),\n        }\n    }   \n}\n\nfn main() -&gt; Result&lt;()&gt; {\n    let mut reader = unsafe { RawFdReader::from_raw_fd(0) };\n    let mut buffer = vec![0; 10];\n    let len = reader.read(&amp;mut buffer)?;\n    println!(\"{:?}\", OsStr::from_bytes(&amp;buffer[..len]));\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 273, "favorite_count": 0, "accepted_answer_id": 55813017, "answer_count": 1, "score": 2, "last_activity_date": 1556029117, "creation_date": 1556025879, "last_edit_date": 1556026486, "question_id": 55812291, "link": "https://stackoverflow.com/questions/55812291/bufreader-from-a-raw-fd", "title": "BufReader from a raw fd", "body": "<p>I'm using the <a href=\"https://crates.io/crates/fdpass\" rel=\"nofollow noreferrer\">fdpass crate</a> to send file descriptors from one process to another over an unix socket (I don't care about compatibility, unix only is fine).</p>\n\n<p>Using mio I manage to listen for events on those file descriptors :</p>\n\n<pre><code>let fd = fdpass::recv_fd(&amp;mut client, vec!(0u8)).unwrap();\nlet efd = EventedFd(&amp;fd.into_raw_fd());\n\npoll.register(&amp;efd, Token(0), Ready::readable(), PollOpt::level()).unwrap();\n</code></pre>\n\n<p>That works perfectly fine, but I'd like to use a <code>BufReader</code> to read that file descriptor line by line. I've been trying to figure out a way to use <code>from_raw_fd()</code> on something that would implement <code>BufReader</code> unsucessfully. It seems to exist only for things like files or network streams. The only other thing is <code>Stdio</code> which does not implement Read, required for <code>BufRead</code>.</p>\n\n<p>Any suggestions as to how I could get a <code>BufReader</code> from a raw fd without making mio unsafe to use?</p>\n\n<p>The file descriptors by the way are not files (although they might be at some point) so I can't use <code>File::</code>, right now I'm just sending the client's stdin as a raw fd through fdpass.</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556020579, "post_id": 55810518, "comment_id": 98288357, "body": "I&#39;m afraid (but no expert) that there isn&#39;t much you can do. Did you compile your program with <code>--release</code>?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556021531, "post_id": 55810518, "comment_id": 98288844, "body": "@hellow yes, and I replaced work <code>File</code> with <code>fs::read_to_string</code> + <code>serde_json::from_str</code>, because of <a href=\"https://github.com/serde-rs/json/issues/160\" rel=\"nofollow noreferrer\">github.com/serde-rs/json/issues/160</a> . Still too slow."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1556029991, "post_id": 55810518, "comment_id": 98293876, "body": "As you mention in your question, allocating a new <code>String</code> for each deserialization is likely contributiing to the performance issue here. Serde provides an <code>impl Deserialize for &amp;str</code>. Can you use that instead of the <code>String</code> impl?"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1556031769, "post_id": 55810518, "comment_id": 98295019, "body": "Instead of <code>let s = String::deserialize(deserializer)?;</code>, try this: <code>let s = &lt;&amp;str as Deserialize&lt;&#39;de&gt;&gt;::deserialize(deserializer)?;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 6, "last_activity_date": 1556038610, "creation_date": 1556038610, "answer_id": 55816056, "question_id": 55810518, "link": "https://stackoverflow.com/questions/55810518/serde-speedup-custom-enum-deserialization/55816056#55816056", "title": "serde: speedup custom enum deserialization", "body": "<p>The custom impl you've written is in a form that serde_derive can generate:</p>\n\n<pre><code>#[derive(Deserialize, Debug)]\npub enum FooDocumentType {\n    #[serde(rename = \"Text\", alias = \"Type not detected\", alias = \"---\")]\n    Unknown,\n    #[serde(rename = \"tir lim bom bom\")]\n    Var1,\n    #[serde(rename = \"hgga;hghau\")]\n    Var2,\n    #[serde(rename = \"hgueoqtyhit4t\")]\n    Var3,\n}\n</code></pre>\n\n<p>The resulting derived code does not allocate memory and is about 2\u00d7 faster in a quick microbenchmark compared to your code when I measure the following:</p>\n\n<pre><code>serde_json::from_str::&lt;FooDocument&gt;(r#\"{\"type\":\"hgga;hghau\"}\"#).unwrap()\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 495, "favorite_count": 0, "accepted_answer_id": 55816056, "answer_count": 1, "score": 2, "last_activity_date": 1556038610, "creation_date": 1556019984, "last_edit_date": 1556025169, "question_id": 55810518, "link": "https://stackoverflow.com/questions/55810518/serde-speedup-custom-enum-deserialization", "title": "serde: speedup custom enum deserialization", "body": "<p>My program parse big enough json document (30MB),\non machine with slow CPU it takes 70ms, I want to speedup the process,\nand I find out that 27% of parsing take place into my <code>foo_document_type_deserialize</code>,\nis it possible to improve this function, may be there is way to skip <code>String</code> allocation here: <code>let s = String::deserialize(deserializer)?;</code>? </p>\n\n<p>I completly sure that strings that represent enum values doesn't contain special json characters like <code>\\b \\f \\n  \\r \\t \\\" \\\\</code>, so it should be safe to work with unescaped string.</p>\n\n<pre><code>use serde::{Deserialize, Deserializer};\n\n#[derive(Deserialize, Debug, Clone)]\n#[serde(rename_all = \"camelCase\")]\npub struct FooDocument {\n    // other fields...\n    #[serde(rename = \"type\")]\n    #[serde(deserialize_with = \"foo_document_type_deserialize\")]\n    doc_type: FooDocumentType,\n}\n\nfn foo_document_type_deserialize&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;FooDocumentType, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    use self::FooDocumentType::*;\n    let s = String::deserialize(deserializer)?;\n    match s.as_str() {\n        \"tir lim bom bom\" =&gt; Ok(Var1),\n        \"hgga;hghau\" =&gt; Ok(Var2),\n        \"hgueoqtyhit4t\" =&gt; Ok(Var3),\n        \"Text\" | \"Type not detected\" | \"---\" =&gt; Ok(Unknown),\n        _ =&gt; Err(serde::de::Error::custom(format!(\n            \"Unsupported foo document type '{}'\",\n            s\n        ))),\n    }\n}\n\n#[derive(Debug, Clone, Copy)]\npub enum FooDocumentType {\n    Unknown,\n    Var1,\n    Var2,\n    Var3,\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1556018413, "post_id": 55809419, "comment_id": 98287180, "body": "It might be good if you share the link of the tutorial you are following. It might be mentioned somewhere how to find your <code>rust-lld</code>."}, {"owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556031005, "post_id": 55809419, "comment_id": 98294519, "body": "It was a Mozilla Development  Network  tutorial, I think <a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Rust_to_wasm\" rel=\"nofollow noreferrer\">developer.mozilla.org/en-US/docs/WebAssembly/Rust_to_wasm</a>"}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 3, "last_activity_date": 1556017845, "creation_date": 1556017845, "answer_id": 55809900, "question_id": 55809419, "link": "https://stackoverflow.com/questions/55809419/rust-lld-is-missing-how-do-i-install-it/55809900#55809900", "title": "rust-lld is missing, how do I install it?", "body": "<p><code>rust-lld</code> is in a non <code>$PATH</code>-path which means you have to use either the full path or add the path to your <code>$PATH</code> environment variable.</p>\n\n<p>In my case it can be found in <code>~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/rust-lld</code></p>\n\n<p>Of course the path may vary by architecture and version.</p>\n"}], "owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1528, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1556017845, "creation_date": 1556016013, "question_id": 55809419, "link": "https://stackoverflow.com/questions/55809419/rust-lld-is-missing-how-do-i-install-it", "title": "rust-lld is missing, how do I install it?", "body": "<p>When I try compiling for webasm, I get an error \u201crust-lld not found\u201d. What should I do?</p>\n\n<p>I have been following the instructions in the rust webasm book with a dummy program,  and everything worked up till the initial compile,  which failed with this error which apparently means that some linker has not been installed. </p>\n\n<p>My context is Ubuntu on an ARM 64 bit box.</p>\n"}, {"tags": ["loops", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556014958, "post_id": 55808054, "comment_id": 98285430, "body": "<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=0e4d069ea460591e8560f22559049fc8\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, but that very unclear what you are trying to do with your <code>push</code> function"}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556021937, "post_id": 55808054, "comment_id": 98289044, "body": "@Stargateur that wouldn&#39;t work if I am not mistaken. You are cloning the values, and by doing that the entry that the function returns will not see it&#39;s values updated by the loop."}], "answers": [{"comments": [{"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1556026558, "post_id": 55810313, "comment_id": 98291776, "body": "If I <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=cf2e1199ad6d1e958d2339ea9f27e261\" rel=\"nofollow noreferrer\">use recursion</a> I can populate the same data structure without any problem. Do you know if there is a better way (especially without recursion) to achieve the same?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1556027273, "post_id": 55810313, "comment_id": 98292214, "body": "@Nick What is your usecase?"}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1556031107, "post_id": 55810313, "comment_id": 98294579, "body": "I need to recreate the filesystem data structure of two directories, to then compare their content."}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1559241146, "post_id": 55810313, "comment_id": 99367739, "body": "Because it may cause stack overflow."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1559280033, "post_id": 55810313, "comment_id": 99377430, "body": "Did you have a stack overflow? It is hypotetical to hit one."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1556019275, "creation_date": 1556019275, "answer_id": 55810313, "question_id": 55808054, "link": "https://stackoverflow.com/questions/55808054/multiple-borrow-in-previous-iteration-of-loop/55810313#55810313", "title": "Multiple borrow in previous iteration of loop", "body": "<ul>\n<li><p><code>entry</code> borrows <code>parent</code> mutably in the line:</p>\n\n<pre><code>let entry = parent.push(&amp;path).unwrap();\n</code></pre></li>\n<li><p>Then, you do not release <code>entry</code>, because you store it in <code>queue</code>. So, <code>parent</code> is still borrowed mutably when this is the 2nd iteration in the loop. This is unsafe to do that.</p></li>\n</ul>\n\n<p>What you are trying to do is a tree of mutable references. That won't work in Rust, and this is generally a bad idea. You should modify the way you want to implement that.</p>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 0, "accepted_answer_id": 55810313, "answer_count": 1, "score": 3, "last_activity_date": 1556019275, "creation_date": 1556011343, "last_edit_date": 1556011895, "question_id": 55808054, "link": "https://stackoverflow.com/questions/55808054/multiple-borrow-in-previous-iteration-of-loop", "title": "Multiple borrow in previous iteration of loop", "body": "<p>Following is the code I'm working on, I explore a directory path with a queue and I want to store the filesystem tree in my data structure (the enum <code>Entry</code>):</p>\n\n<pre><code>use failure::Error;\nuse std::collections::VecDeque;\nuse std::fs;\nuse std::io;\nuse std::path::{Path, PathBuf};\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let paths = visit_dir(Path::new(\".\")).map_err(Error::from)?;\n    Ok(())\n}\n\n#[derive(Debug)]\nenum Entry {\n    Dir(PathBuf, Vec&lt;Entry&gt;),\n    File(PathBuf),\n}\n\nimpl Entry {\n    fn new_dir(path: &amp;Path) -&gt; Entry {\n        Entry::Dir(path.to_path_buf(), Vec::new())\n    }\n\n    fn new_file(path: &amp;Path) -&gt; Entry {\n        Entry::File(path.to_path_buf())\n    }\n\n    /// Append a new Entry to self if self is a directory.\n    fn push(&amp;mut self, path: &amp;Path) -&gt; Option&lt;&amp;mut Entry&gt; {\n        if let Entry::Dir(_, ref mut content) = self {\n            let entry = if path.is_dir() {\n                Entry::new_dir(path)\n            } else {\n                Entry::new_file(path)\n            };\n            content.push(entry);\n            return content.last_mut();\n        }\n        None\n    }\n\n    fn path(&amp;self) -&gt; &amp;Path {\n        match self {\n            Entry::Dir(path, _) =&gt; path,\n            Entry::File(path) =&gt; path,\n        }\n    }\n}\n\nfn visit_dir(root: &amp;Path) -&gt; io::Result&lt;Entry&gt; {\n    let mut dir = Entry::new_dir(root);\n    let mut queue = VecDeque::new();\n    queue.push_back(&amp;mut dir);\n\n    while !queue.is_empty() {\n        let parent = queue.pop_front().unwrap();\n        let path = parent.path();\n        if path.is_dir() {\n            for entry in fs::read_dir(path)? {\n                let entry = entry?;\n                let path = entry.path();\n                let entry = parent.push(&amp;path).unwrap();\n\n                if path.is_dir() {\n                    queue.push_back(entry);\n                }\n            }\n        }\n    }\n\n    Ok(dir)\n}\n</code></pre>\n\n<p>Link to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=edb19d22c36e849bfd2c8b72055a4583\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The error I am getting is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*parent` as mutable more than once at a time\n  --&gt; src/main.rs:61:29\n   |\n61 |                 let entry = parent.push(&amp;path).unwrap();\n   |                             ^^^^^^ mutable borrow starts here in previous iteration of loop\n</code></pre>\n\n<p>My questions are:</p>\n\n<ul>\n<li>Why exactly do I get this error?</li>\n<li>Are there any workaround to solve it?</li>\n</ul>\n"}, {"tags": ["rust", "any", "syntactic-sugar"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1556009767, "post_id": 55807530, "comment_id": 98282729, "body": "The &quot;longer&quot; expression is shorter in Rust... <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7afc4b8fc7505c413b472c519a495047\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> What is your actual question?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556009972, "post_id": 55807530, "comment_id": 98282833, "body": "What do you mean by &quot;longer&quot;? Please specify it (e.g. by a link to the doc or by code)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1556010069, "post_id": 55807530, "comment_id": 98282882, "body": "If you are working with a <code>Vec</code>/<code>slice</code> anyway, you can use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.contains\" rel=\"nofollow noreferrer\"><code>contains</code></a> which <a href=\"https://doc.rust-lang.org/1.34.0/src/core/slice/mod.rs.html#5160\" rel=\"nofollow noreferrer\">uses any under the hood</a>"}, {"owner": {"reputation": 2503, "user_id": 7442673, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iTfit.jpg?s=128&g=1", "display_name": "m.raynal", "link": "https://stackoverflow.com/users/7442673/m-raynal"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556010138, "post_id": 55807530, "comment_id": 98282927, "body": "My question was answered by @French .... I&#39;m still a newbie in rust, so I did not think straight about using clojure, nor did I know about <code>any</code>. So thanks a lot, exactly what I was looking for :)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1556010192, "post_id": 55807530, "comment_id": 98282954, "body": "@m.raynal 3rd result: <a href=\"https://doc.rust-lang.org/std/?search=any\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/?search=any</a>"}, {"owner": {"reputation": 2503, "user_id": 7442673, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iTfit.jpg?s=128&g=1", "display_name": "m.raynal", "link": "https://stackoverflow.com/users/7442673/m-raynal"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556010518, "post_id": 55807530, "comment_id": 98283143, "body": "@French, sorry, I ended up on the <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"nofollow noreferrer\"><code>Any</code></a> page when searching, so I came up here to ask ... should have searched longer, my bad. But still, I would not have come up with a clojure, there&#39;s a bunch of new reflexes to acquire when learning rust."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 5, "last_activity_date": 1556010721, "creation_date": 1556010721, "answer_id": 55807877, "question_id": 55807530, "link": "https://stackoverflow.com/questions/55807530/is-there-an-equivalent-to-the-any-method-in-python/55807877#55807877", "title": "Is there an equivalent to the `any` method in python", "body": "\n\n<p>Yes. There is <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.any\" rel=\"noreferrer\"><code>Iterator::any</code></a> which is a method on an Iterator (in contrast to Python where it is a free-standing function which accepts an Iterator).</p>\n\n<p>You can call it like any other method.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let my_list = vec![1, 3, 4, 5, 8];\n    println!(\"{}\", my_list.iter().any(|&amp;i| i == 4));\n}\n</code></pre>\n\n<hr>\n\n<p>If you are using a <code>Vec</code> or a <code>slice</code> anyway, you can use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.contains\" rel=\"noreferrer\"><code>contains</code></a> which will use the <code>any</code> method in <a href=\"https://doc.rust-lang.org/1.34.0/src/core/slice/mod.rs.html#5160\" rel=\"noreferrer\">its implementation</a>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let my_list = vec![1, 3, 4, 5, 8];\n    println!(\"{}\", my_list.contains(&amp;4));\n}\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"noreferrer\">API doc</a> will also list other useful methods, e.g. <code>all</code>, <code>chain</code>, <code>zip</code>, <code>map</code> or <code>filter</code>. Also there are examples to those methods in the documentation which are all worth reading.</p>\n"}], "owner": {"reputation": 2503, "user_id": 7442673, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iTfit.jpg?s=128&g=1", "display_name": "m.raynal", "link": "https://stackoverflow.com/users/7442673/m-raynal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 55807877, "answer_count": 1, "score": 1, "last_activity_date": 1556010721, "creation_date": 1556009573, "last_edit_date": 1556010245, "question_id": 55807530, "link": "https://stackoverflow.com/questions/55807530/is-there-an-equivalent-to-the-any-method-in-python", "title": "Is there an equivalent to the `any` method in python", "body": "<p>There is a very convenient function called <a href=\"https://docs.python.org/3/library/functions.html#any\" rel=\"nofollow noreferrer\"><code>any</code></a> in the standard library of Python, that allows to check given if any item in a given iterable verifies some condition.</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>my_list = [1, 3, 4, 5, 8]\n\n# using any\nfour_is_present = any(elem == 4 for elem in my_list)\n\n# is equivalent to\nfour_is_present = False\nfor elem in my_list:\n    if elem == 4:\n        four_is_present = True\n        break\n</code></pre>\n\n<p>I am wondering if there is an equivalent syntactic sugar in Rust, or if I have to go for the \"longer\" expression.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1555996486, "post_id": 55804275, "comment_id": 98277262, "body": "Just to clarify, are <code>a</code> <code>b</code> and <code>c</code> constants or generated at runtime?"}, {"owner": {"reputation": 197, "user_id": 6802376, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DsJ1r.png?s=128&g=1", "display_name": "flmng0", "link": "https://stackoverflow.com/users/6802376/flmng0"}, "reply_to_user": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1555997320, "post_id": 55804275, "comment_id": 98277489, "body": "@User Yes, they are."}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1555997375, "post_id": 55804275, "comment_id": 98277510, "body": "If they&#39;re generated at runtime, they aren&#39;t constants (in Rust anyway). Which one is it?"}, {"owner": {"reputation": 197, "user_id": 6802376, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DsJ1r.png?s=128&g=1", "display_name": "flmng0", "link": "https://stackoverflow.com/users/6802376/flmng0"}, "reply_to_user": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1555997683, "post_id": 55804275, "comment_id": 98277580, "body": "@User Sorry that&#39;s not what I meant. I misread your question and thought you asked if they were constants. They are constants."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1555997771, "post_id": 55804275, "comment_id": 98277606, "body": "I recommend you to read <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">the book</a> to learn Rust. It seems that you haven&#39;t read it yet. Especially look at <a href=\"https://doc.rust-lang.org/stable/book/ch06-02-match.html\" rel=\"nofollow noreferrer\">chapter 6</a> for an answer."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1556032735, "post_id": 55804275, "comment_id": 98295683, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/26544430/is-it-possible-to-use-statements-in-pattern-matching-branch\">Is it possible to use statements in pattern matching branch?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1555999146, "post_id": 55805049, "comment_id": 98278033, "body": "You could also mention, that you can use literals in your patterns, e.g. <code>match input { 8 =&gt; {}, 16 =&gt; {}, 30 =&gt; {} }</code>"}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 14, "last_activity_date": 1556015894, "last_edit_date": 1556015894, "creation_date": 1555998570, "answer_id": 55805049, "question_id": 55804275, "link": "https://stackoverflow.com/questions/55804275/are-there-traditional-style-switch-statements-in-rust/55805049#55805049", "title": "Are there traditional style switch statements in Rust?", "body": "<p>The simplest way to do this sort of case analysis is when you know the values of the cases beforehand and don't mind having them in the middle of the code. In this case, a simple <code>match</code> expression is what you want.</p>\n\n<pre><code>fn main() {\n    for &amp;input in &amp;[16, 23, 42, 43] {\n        match input {\n            23 =&gt; println!(\"Input is equal to a\"),\n            16 =&gt; println!(\"Input is equal to b\"),\n            43 =&gt; println!(\"Input is equal to c\"),\n            _ =&gt; println!(\"Input does not equal any value\"),\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=971ca806830a6db240a8ae53dc431786\" rel=\"noreferrer\">(playground link)</a></p>\n\n<p>If your <code>a</code> <code>b</code> and <code>c</code> are compile-time constants (either a known value or generated with <code>const</code> functions), then you can still directly match on them.</p>\n\n<pre><code>const A: i32 = 23;\nconst B: i32 = 16;\nconst C: i32 = generate_c();\n\nconst fn generate_c() -&gt; i32 {\n    A + B + 4\n}\n\nfn main() {\n    for &amp;input in &amp;[16, 23, 42, 43] {\n        match input {\n            A =&gt; println!(\"Input is equal to a\"),\n            B =&gt; println!(\"Input is equal to b\"),\n            C =&gt; println!(\"Input is equal to c\"),\n            _ =&gt; println!(\"Input does not equal any value\"),\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9abfdde57361e21144620884a8eecc66\" rel=\"noreferrer\">(playground link)</a></p>\n\n<p>However, if you try this with non-constant variables, you'll get weird outputs.</p>\n\n<pre><code>fn generate_c(a: i32, b: i32) -&gt; i32 {\n    a + b + 4\n}\n\nfn main() {\n    let a = 23;\n    let b = 16;\n    let c = generate_c(a, b);\n\n    for &amp;input in &amp;[16, 23, 42, 43] {\n        match input {\n            a =&gt; println!(\"Input is equal to a\"),\n            b =&gt; println!(\"Input is equal to b\"),\n            c =&gt; println!(\"Input is equal to c\"),\n            _ =&gt; println!(\"Input does not equal any value\"),\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c4c879824931404860dda35faab9bcde\" rel=\"noreferrer\">(playground link)</a></p>\n\n<p>If you run this, the compiler will give you lots of warnings about \"unreachable patterns\" and the output will be \"Input is equal to a\" all four times. The problem with this is that the left side of each line in a match statement is not simply an expression, but rather a <em>pattern</em>.</p>\n\n<p>A pattern is an expression like <code>(x, [_, z], Some(_))</code>. It's built up from basic variables (like <code>x</code> and <code>z</code>), underscores (<code>_</code>), all the literal expressions (integers, floats, tuples, arrays) and a few other things. </p>\n\n<p>When Rust runs a match statement like this, it tries to syntactically match the input with the pattern. Basic variables will match anything and the value of that variable is set to whatever it matched for the scope of that branch of the match statement. Underscores (as used in all of the above examples) match anything too, but don't bind any variables.</p>\n\n<p>With the <code>const</code> version above, the constants <code>A</code> <code>B</code> and <code>C</code> are replaced with their respective literal values everywhere in the code, so the input is matched on those literal values.</p>\n\n<p>With the variable version, when we match with <code>a</code> <code>b</code> and <code>c</code>, these letters are interpreted as basic variables that match anything. The values of the variables aren't considered at all in the pattern. In the code</p>\n\n<pre><code>let a = 14;\nlet b = 15;\nlet c = 16;\nlet input = 16;\nmatch input {\n    a =&gt; println!(\"Input is equal to a\"),\n    b =&gt; println!(\"Input is equal to b\"),\n    c =&gt; println!(\"Input is equal to c\"),\n    _ =&gt; println!(\"Input does not equal any value\"),\n}\n</code></pre>\n\n<p>the first branch will always match, giving the input the name <code>a</code> for the scope of the branch.</p>\n\n<p>If you need to match on variables <code>a</code> <code>b</code> and <code>c</code>, you could add a guard to each branch. A guard filters the branch a little more by adding an additional condition for a branch to match. In this case, we match anything and bind it to the variable <code>x</code>, but then check that <code>x</code> is equal to <code>a</code> (and <code>b</code> and <code>c</code>).</p>\n\n<pre><code>fn generate_c(a: i32, b: i32) -&gt; i32 {\n    a + b + 4\n}\n\nfn main() {\n    let a = 23;\n    let b = 16;\n    let c = generate_c(a, b);\n\n    for &amp;input in &amp;[16, 23, 42, 43] {\n        match input {\n            x if x == a =&gt; println!(\"Input is equal to a\"),\n            x if x == b =&gt; println!(\"Input is equal to b\"),\n            x if x == c =&gt; println!(\"Input is equal to c\"),\n            _ =&gt; println!(\"Input does not equal any value\"),\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=94f77fd80b415f564dd37ee2572cbaed\" rel=\"noreferrer\">(playground link)</a></p>\n\n<p>This is a little bit more verbose than the switch/case construction, but I hope it's clear what's going on. At each branch, the variable x is bound to 16, then if that's equal to the variable <code>A</code> (or <code>B</code> or <code>C</code>), then that branch is taken. Otherwise, we try the next branch.</p>\n"}, {"tags": [], "owner": {"reputation": 4690, "user_id": 2019549, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/900a3735d55a0473c975ba9266bf0c68?s=128&d=identicon&r=PG", "display_name": "cambunctious", "link": "https://stackoverflow.com/users/2019549/cambunctious"}, "is_accepted": false, "score": 2, "last_activity_date": 1597429657, "creation_date": 1597429657, "answer_id": 63418214, "question_id": 55804275, "link": "https://stackoverflow.com/questions/55804275/are-there-traditional-style-switch-statements-in-rust/63418214#63418214", "title": "Are there traditional style switch statements in Rust?", "body": "<blockquote>\n<p>Can I compare a variable to constant values in Rust using a match statement?</p>\n</blockquote>\n<p>I wrote a <a href=\"https://github.com/camsteffen/switch-statement-rust\" rel=\"nofollow noreferrer\">macro</a> to (almost) do this. It expands to a <code>match</code> with <code>if</code> guards.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>switch! { input;\n    a =&gt; println!(&quot;Input is equal to a&quot;),\n    b =&gt; println!(&quot;Input is equal to b&quot;),\n    c =&gt; println!(&quot;Input is equal to c&quot;),\n    _ =&gt; println!(&quot;Input does not equal any value&quot;),\n}\n</code></pre>\n"}], "owner": {"reputation": 197, "user_id": 6802376, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DsJ1r.png?s=128&g=1", "display_name": "flmng0", "link": "https://stackoverflow.com/users/6802376/flmng0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5908, "favorite_count": 1, "accepted_answer_id": 55805049, "answer_count": 2, "score": 8, "last_activity_date": 1602781218, "creation_date": 1555993280, "last_edit_date": 1602781218, "question_id": 55804275, "link": "https://stackoverflow.com/questions/55804275/are-there-traditional-style-switch-statements-in-rust", "title": "Are there traditional style switch statements in Rust?", "body": "<p>I want to compare a value to constants, or other values. In another language (e.g JavaScript) I would do:</p>\n<pre><code>// Pretend these are values that are generated another way\nlet a = 23;\nlet b = 16;\nlet c = 43;\nlet input = 23;\n\nswitch (input) {\n    case a: console.log(&quot;Input is equal to a&quot;); break;\n    case b: console.log(&quot;Input is equal to b&quot;); break;\n    case c: console.log(&quot;Input is equal to c&quot;); break;\n    default: console.log(&quot;Input does not equal any value&quot;); break;\n}\n</code></pre>\n<p>How would I do this neatly in Rust? I know I could do it with if statements, but I think this is messy and I am comparing to many more values.</p>\n<p><em>Can I compare a variable to constant values in Rust using a match statement?</em></p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1555998116, "post_id": 55802372, "comment_id": 98277711, "body": "TBH the Rust compiler is pretty good in optimizing, so if you are using constants in an <code>if</code> expression it will eliminate that for you, so it has no impact on runtime."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1555998428, "post_id": 55802372, "comment_id": 98277809, "body": "Very related (if not dup): <a href=\"https://stackoverflow.com/q/39349286\">stackoverflow.com/q/39349286</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 3, "creation_date": 1556007379, "post_id": 55802372, "comment_id": 98281509, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/39349286/can-macros-match-against-constant-arguments-instead-of-literals\">Can macros match against constant arguments instead of literals?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 623, "user_id": 10962821, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-2LR2CPhrhu0/AAAAAAAAAAI/AAAAAAAAAAc/OGsF9pFiFOU/photo.jpg?sz=128", "display_name": "sn99", "link": "https://stackoverflow.com/users/10962821/sn99"}, "is_accepted": false, "score": 3, "last_activity_date": 1582362256, "last_edit_date": 1582362256, "creation_date": 1556009062, "answer_id": 55807389, "question_id": 55802372, "link": "https://stackoverflow.com/questions/55802372/rust-macros-calling-function-dependent-on-expression/55807389#55807389", "title": "Rust macros: Calling function dependent on expression", "body": "<p>You can see the macro expansion by calling <code>cargo +nightly rustc --profile=check -- -Zunstable-options --pretty=expanded</code> or using <a href=\"https://github.com/dtolnay/cargo-expand\" rel=\"nofollow noreferrer\">cargo-expand</a></p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>fn f1() {\n    {\n        ::std::io::_print(::std::fmt::Arguments::new_v1(\n            &amp;[\"\", \"\\n\"],\n            &amp;match (&amp;(100 / 100),) {\n                (arg0,) =&gt; [::std::fmt::ArgumentV1::new(arg0, ::std::fmt::Debug::fmt)],\n            },\n        ));\n    };\n    ();\n}\n</code></pre>\n\n<p>You can see the last <code>();</code> which should have been <code>func_100()</code></p>\n\n<p>This is beacuse there is no token rule in <code>generate_func_call</code> of type <code>($number: expr)</code> i.e. there is no rule which matches the expansion. This is beacuse <code>$number</code> is not replaced by <code>100</code> as you would expect in a function. The macro simply creates more rust code based on the <a href=\"https://doc.rust-lang.org/reference/macros-by-example.html\" rel=\"nofollow noreferrer\">fragment types</a> it receives, it does not try to evaluate anything.</p>\n\n<p>Change the code to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! generate_func_call {\n    ($number: expr) =&gt; {\n        match $number {\n            100 =&gt; func_100(),\n            200 =&gt; func_200(),\n            300 =&gt; func_300(),\n            _ =&gt; (),\n        }\n    };\n}\n</code></pre>\n\n<p>And finally <code>();</code> changes to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match 300 {\n    100 =&gt; func_100(),\n    200 =&gt; func_200(),\n    300 =&gt; func_300(),\n    _ =&gt; (),\n};\n\n</code></pre>\n\n<p>You don't have to worry about an extra jump statement or such, it's gets optimized as <code>300</code> is compile time constant. and it just changes into <code>func_300()</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 73, "user_id": 2014691, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/514ca6f7c7691651b6422f61e593b493?s=128&d=identicon&r=PG", "display_name": "Dzejkop", "link": "https://stackoverflow.com/users/2014691/dzejkop"}, "is_accepted": false, "score": 0, "last_activity_date": 1556011073, "creation_date": 1556011073, "answer_id": 55807980, "question_id": 55802372, "link": "https://stackoverflow.com/questions/55802372/rust-macros-calling-function-dependent-on-expression/55807980#55807980", "title": "Rust macros: Calling function dependent on expression", "body": "<p>Looks like it's simply not supported.</p>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/25875\" rel=\"nofollow noreferrer\">Simmilar Issue #1</a>\n<a href=\"https://github.com/rust-lang/rust/issues/41472\" rel=\"nofollow noreferrer\">Simmilar Issue #2</a></p>\n\n<p>A possible workaround is to match against the literal in the first macro, like in this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3e083470934dc1b2c3959e45ab3a65be\" rel=\"nofollow noreferrer\">playground</a>. Although that just introduces more code repetition.</p>\n\n<p>In the future it might be possible to do this using the <code>const fn</code> feature like in this <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=8a3c5bd77315dbc3e35d5e87f1a69687\" rel=\"nofollow noreferrer\">playground</a>. But you'll have to wait for the <a href=\"https://github.com/rust-lang/rust/issues/57563\" rel=\"nofollow noreferrer\">feature to be implemented</a>.</p>\n\n<p>Right now I'd advise to simply match against the value at runtime using a regular <code>match</code>.</p>\n"}], "owner": {"reputation": 21, "user_id": 11321005, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/35f462319a8797f35d63ef393607184a?s=128&d=identicon&r=PG&f=1", "display_name": "MLStudent", "link": "https://stackoverflow.com/users/11321005/mlstudent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1105, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1582362256, "creation_date": 1555975966, "question_id": 55802372, "link": "https://stackoverflow.com/questions/55802372/rust-macros-calling-function-dependent-on-expression", "title": "Rust macros: Calling function dependent on expression", "body": "<p>I have a three different functions, of which I want to call one based on a macro argument. This argument should be pre-processed, which is why I thought I need to write it as <code>expr</code>. However, I can't seem to find a way to distinguish different cases for an <code>expr</code> in a macro. Here is my code:</p>\n\n<pre><code>fn func_100(){\n    println!(\"Func 100!\");\n}\nfn func_200(){\n    println!(\"Func 200!\");\n}\nfn func_300(){\n    println!(\"Func 300!\");\n}\n\nmacro_rules! generate_func_call {\n    (100) =&gt; {\n        func_100();\n    };\n    (200) =&gt; {\n        func_200();\n    };\n    (300) =&gt; {\n        func_300();\n    }\n}\n\nmacro_rules! generate_func_call_wrapper {\n    ($func: ident, $number: expr) =&gt; {\n        fn $func(){\n            println!(\"{:?}\", $number / 100);\n            generate_func_call!($number);\n        }\n    };\n}\n\ngenerate_func_call_wrapper!(f1,100);\ngenerate_func_call_wrapper!(f2,200);\ngenerate_func_call_wrapper!(f3,300);\n\nfn main(){\n    f1();\n}\n</code></pre>\n\n<p>which generates the following compile time error:</p>\n\n<pre><code>    generate_func_call!($number);\n                        ^^^^^^^ no rules expected this token in macro call\n</code></pre>\n\n<p>How can I fix this program so that calls a different function based on the <code>$number</code> expression?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555983681, "post_id": 55801794, "comment_id": 98274737, "body": "TL;DR: The compiler doesn&#39;t know what the implementation of <code>clear</code> is."}], "owner": {"reputation": 566, "user_id": 1478396, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/0e46fa9f212dee2aea16c633a395e357?s=128&d=identicon&r=PG", "display_name": "Kriszti&#225;n Szab&#243;", "link": "https://stackoverflow.com/users/1478396/kriszti%c3%a1n-szab%c3%b3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "closed_date": 1555983628, "answer_count": 0, "score": 2, "last_activity_date": 1589472923, "creation_date": 1555971314, "last_edit_date": 1589472923, "question_id": 55801794, "link": "https://stackoverflow.com/questions/55801794/how-to-let-borrow-checker-know-reference-is-no-longer-present", "closed_reason": "Duplicate", "title": "How to let borrow checker know reference is no longer present?", "body": "<p>I have a problem with the borrow checker in the following scenario: First I store an immutable reference to a mutable variable <code>x</code>, which I later use elsewhere in my code. Now I come to a point where I want to change the value of <code>x</code>. Knowing that there is an immutable reference to it inside <code>foo.bar</code>, first I remove the reference by calling <code>foo.bar.clear()</code>.</p>\n\n<p>Now that there are no immutable borrows, I'd expect that I can mutate the object, but that's not case. I assume that the problem is that the compiler has no way of knowing that <code>clear()</code> drops the references inside <code>foo.bar</code>, but I'm clueless how to proceed in this situation.</p>\n\n<p>Minimal example:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    bar: Vec&lt;&amp;'a i32&gt;\n}\n\nfn main() {\n    let mut x = 42;\n    let mut foo = Foo { bar: vec![&amp;x] };\n    // Do immutable stuff with foo.bar[0]... then:\n    foo.bar.clear();\n    x += 1;\n    foo.bar.push(&amp;x);\n    println!(\"X is: {}\", foo.bar[0]);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5f1c6d1a2b538c18598d5e6bf6310fc5\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["function", "rust", "ffi"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1555969762, "post_id": 55800868, "comment_id": 98271808, "body": "I don&#39;t fully understand this issue, but I&#39;m guessing that taking a <code>&amp;mut</code> of an external function is somewhat making a temporary variable and returning the address of that variable. If that is the case &#39;d say that this is a compiler bug, although I don&#39;t know if taking a <code>*mut</code> to code is well defined to begin with."}, {"owner": {"reputation": 285, "user_id": 1622390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/220879866d95befeb82ef4718be6b42a?s=128&d=identicon&r=PG", "display_name": "burtonageo", "link": "https://stackoverflow.com/users/1622390/burtonageo"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1555971962, "post_id": 55800868, "comment_id": 98272371, "body": "Yes, I think that&#39;s probably it - in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c4733b24c3adb25e84675b9ec3b80940\" rel=\"nofollow noreferrer\">this playground</a>, taking an immutable reference to a function pointer returns the same address each time, whereas taking a mutable reference gives a different address each time. I&#39;m guessing that the mutable reference operator creates a new temporary function on the stack, which is then used - that would explain the segfaults as well."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1556006054, "last_edit_date": 1556006054, "creation_date": 1555984186, "answer_id": 55803224, "question_id": 55800868, "link": "https://stackoverflow.com/questions/55800868/why-does-function-pointer-behaviour-differ-in-rust-depending-on-the-mutability-o/55803224#55803224", "title": "Why does function pointer behaviour differ in Rust depending on the mutability of the function pointer?", "body": "<p><code>fn() -&gt; ()</code> is a function pointer. <code>*const fn() -&gt; ()</code> and <code>*mut fn() -&gt; ()</code> are <em>function pointer pointers</em>.</p>\n\n<p>You want to use much simpler code, which also means there's no difference between the two implementations:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Eq, PartialEq)]\npub struct FunctionHolder {\n    function: Option&lt;ExternFn&gt;,\n}\n\nimpl FunctionHolder {\n    pub fn new() -&gt; Self {\n        FunctionHolder {\n            function: Some(test_fn as ExternFn),\n        }\n    }\n\n    pub fn call(&amp;self) {\n        if let Some(f) = self.function {\n            unsafe { f(); }\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>As mentioned in the comments, taking a mutable reference to a literal value constructs a new value each time:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(\"{:p}\", &amp;42);\n    println!(\"{:p}\", &amp;42);\n    println!(\"{:p}\", &amp;42);\n\n    println!(\"{:p}\", &amp;mut 42);\n    println!(\"{:p}\", &amp;mut 42);\n    println!(\"{:p}\", &amp;mut 42);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>0x55a551c03a34\n0x55a551c03a34\n0x55a551c03a34\n0x7ffd40dbb95c\n0x7ffd40dbb9bc\n0x7ffd40dbba1c\n</code></pre>\n\n<p>Immutable references to literals have implicit <code>static</code> promotion:</p>\n\n<pre><code>let a = &amp;42;\n// More-or-less\nstatic HIDDEN: i32 = 42;\nlet a = &amp;HIDDEN;\n</code></pre>\n\n<p>Mutable references to literals desugar to effectively:</p>\n\n<pre><code>let mut hidden: i32 = 42;\nlet a = &amp;mut hidden;\n</code></pre>\n\n<p>By using raw pointers, you lose the support of the borrow checker to point out that your references don't live long enough for the mutable case.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47662253/155423\">Why is it legal to borrow a temporary?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50345139/155423\">Why can I return a reference to a local literal but not a variable?</a></li>\n<li><a href=\"https://stackoverflow.com/q/51344979/155423\">What are the semantics of mutably borrowing a literal in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 285, "user_id": 1622390, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/220879866d95befeb82ef4718be6b42a?s=128&d=identicon&r=PG", "display_name": "burtonageo", "link": "https://stackoverflow.com/users/1622390/burtonageo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 0, "accepted_answer_id": 55803224, "answer_count": 1, "score": 5, "last_activity_date": 1556006054, "creation_date": 1555965717, "last_edit_date": 1555983815, "question_id": 55800868, "link": "https://stackoverflow.com/questions/55800868/why-does-function-pointer-behaviour-differ-in-rust-depending-on-the-mutability-o", "title": "Why does function pointer behaviour differ in Rust depending on the mutability of the function pointer?", "body": "<p>When storing raw pointers to functions in structs in Rust, the behaviour of the program can change in unexpected ways depending on the mutability of the raw pointer.</p>\n\n<p>Using <code>const</code> pointers gives the expected result.</p>\n\n<p>The following code can also be viewed on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=753332583d84dbba9e2d88c66ea7c07c\" rel=\"nofollow noreferrer\">playground</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type ExternFn = unsafe extern \"C\" fn() -&gt; ();\n\nunsafe extern \"C\" fn test_fn() {\n    println!(\"Hello!\");\n}\n\nmod mut_ptr {\n    use super::{ExternFn, test_fn};\n\n    #[derive(Debug, Eq, PartialEq)]\n    pub struct FunctionHolder {\n        function: *mut ExternFn,\n    }\n\n    impl FunctionHolder {\n        pub fn new() -&gt; Self {\n            FunctionHolder {\n                function: (&amp;mut (test_fn as ExternFn) as *mut _),\n            }\n        }\n\n        pub fn call(&amp;self) {\n            if !self.function.is_null() {\n                unsafe { (&amp;*self.function)(); }\n            }\n        }\n    }\n}\n\nmod const_ptr {\n    use super::{ExternFn, test_fn};\n    #[derive(Debug, Eq, PartialEq)]\n    pub struct FunctionHolder {\n        function: *const ExternFn,\n    }\n\n    impl FunctionHolder {\n        pub fn new() -&gt; Self {\n            FunctionHolder {\n                function: (&amp;(test_fn as ExternFn) as *const _),\n            }\n        }\n\n        pub fn call(&amp;self) {\n            if !self.function.is_null() {\n                unsafe { (&amp;*self.function)(); }\n            }\n        }\n    }\n}\n\n// use const_ptr::FunctionHolder;\nuse mut_ptr::FunctionHolder;\n\nfn check_holder(holder: &amp;FunctionHolder) -&gt; bool {\n    let good = FunctionHolder::new();\n    println!(\"parameter = {:#?}\", holder);\n    println!(\"expected = {:#?}\", good);\n    holder == &amp;good\n}\n\nfn main() {\n    let f0 = FunctionHolder::new();\n    println!(\"{:?}\", f0);\n\n    let f1 = FunctionHolder::new();\n    println!(\"{:?}\", f1);\n\n    // uncomment this line to cause a segfault if using the\n    // mut_ptr version :-(\n    // f1.call(); \n\n    assert!(check_holder(&amp;f1));\n}\n</code></pre>\n\n<p>In the <code>const_ptr</code> module, the code behaves as expected: The pointer value stored in the <code>FunctionHolder</code> struct is the same regardless of where the function is called, and using the <code>FunctionHolder::call</code> method calls the function as required.</p>\n\n<p>In the <code>mut_ptr</code> module, there are some unexpected differences:</p>\n\n<ul>\n<li><p>The <code>FunctionHolder::new</code> method returns a struct holding a different value depending on the function in which it is called,</p></li>\n<li><p>The <code>FunctionHolder::call</code> method causes a segfault.</p></li>\n</ul>\n"}, {"tags": ["rust", "compiler-construction", "compiler-optimization", "llvm-codegen"], "comments": [{"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 1, "creation_date": 1555966756, "post_id": 55800833, "comment_id": 98270858, "body": "Haskell has something with rather similar effects that happens before LLVM starts. But for all I know the Rust compiler could do it completely differently. (none of the folders in the rustc source had a name that jumped out to me as &quot;this is the one to look at&quot;)"}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 0, "creation_date": 1555970400, "post_id": 55800833, "comment_id": 98271999, "body": "@JeremyList Ah, then this may be more language-specific than I thought. I&#39;ve added the <code>rust</code> tag."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1555972781, "post_id": 55800833, "comment_id": 98272575, "body": "This equivalence is really the combination of a handful of other equivalences -- (partial) loop unrolling, constant folding, reordering of arithmetic operations -- all of which the compiler (actually LLVM&#39;s optimizer) is capable of doing. I&#39;m not sure whether you would consider that &quot;from first principles&quot;, but I wouldn&#39;t find it too surprising that it can figure out the equivalence on its own."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1556024138, "post_id": 55800833, "comment_id": 98290236, "body": "@trentcl: I am doubtful. I can see a &quot;dumb&quot; optimizer computing any pure functions whose arguments are known at compile-time; however deriving a formula like that is a tad more complicated. Deriving the closed-form requires some symbolic reasoning."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1556479567, "post_id": 55800833, "comment_id": 98444108, "body": "@trentcl: I have amended my answer thanks to <a href=\"https://kristerw.blogspot.com/2019/04/how-llvm-optimizes-geometric-sums.html\" rel=\"nofollow noreferrer\">this article by Krister Walfridsson</a>. It seems LLVM goes partway: pattern-matching to build up chains of recurrences, which can then be &quot;simplified&quot; to closed-form, allowing it to apply the optimizations to a large number of loops."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 7, "last_activity_date": 1556479469, "last_edit_date": 1556479469, "creation_date": 1556004547, "answer_id": 55806249, "question_id": 55800833, "link": "https://stackoverflow.com/questions/55800833/can-compilers-specifically-rustc-really-simplify-triangle-summation-to-avoid-a/55806249#55806249", "title": "Can compilers (specifically rustc) really simplify triangle-summation to avoid a loop? How?", "body": "<p>First of all, let's demonstrate that this actually happens.</p>\n\n<p>Starting with this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn sum(start: i32, end: i32) -&gt; i32 {\n    let mut result = 0;\n    for i in start..end {\n        result += i;\n    }\n    return result;\n}\n</code></pre>\n\n<p>And <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=f57ada205914d2ca4e51e99a06ef5403\" rel=\"nofollow noreferrer\">compiling in Release</a>, we get:</p>\n\n<pre><code>; playground::sum\n; Function Attrs: nounwind nonlazybind readnone uwtable\ndefine i32 @_ZN10playground3sum17h41f12649b0533596E(i32 %start1, i32 %end) {\nstart:\n    %0 = icmp slt i32 %start1, %end\n    br i1 %0, label %bb5.preheader, label %bb6\n\nbb5.preheader:                                    ; preds = %start\n    %1 = xor i32 %start1, -1\n    %2 = add i32 %1, %end\n    %3 = add i32 %start1, 1\n    %4 = mul i32 %2, %3\n    %5 = zext i32 %2 to i33\n    %6 = add i32 %end, -2\n    %7 = sub i32 %6, %start1\n    %8 = zext i32 %7 to i33\n    %9 = mul i33 %5, %8\n    %10 = lshr i33 %9, 1\n    %11 = trunc i33 %10 to i32\n    %12 = add i32 %4, %start1\n    %13 = add i32 %12, %11\n    br label %bb6\n\nbb6:                                              ; preds = %bb5.preheader, %start\n    %result.0.lcssa = phi i32 [ 0, %start ], [ %13, %bb5.preheader ]\n    ret i32 %result.0.lcssa\n}\n</code></pre>\n\n<p>Where we can indeed observe that there is no loop any longer.</p>\n\n<p>Thus we validate the claim by Bandy and Orendorff.</p>\n\n<hr>\n\n<p>As for how this occurs, my understanding is that this all happens in <a href=\"https://llvm.org/doxygen/ScalarEvolution_8cpp_source.html\" rel=\"nofollow noreferrer\">ScalarEvolution.cpp</a> in LLVM. Unfortunately, that file is a 12,000+ lines monstruosity, so navigating it is a tad complicated; still, the head comment hints that we should be in the right place, and points to the papers it used which mention optimizing loops and closed-form functions<sup>1</sup>:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code> //===----------------------------------------------------------------------===//\n //\n // There are several good references for the techniques used in this analysis.\n //\n //  Chains of recurrences -- a method to expedite the evaluation\n //  of closed-form functions\n //  Olaf Bachmann, Paul S. Wang, Eugene V. Zima\n //\n //  On computational properties of chains of recurrences\n //  Eugene V. Zima\n //\n //  Symbolic Evaluation of Chains of Recurrences for Loop Optimization\n //  Robert A. van Engelen\n //\n //  Efficient Symbolic Analysis for Optimizing Compilers\n //  Robert A. van Engelen\n //\n //  Using the chains of recurrences algebra for data dependence testing and\n //  induction variable substitution\n //  MS Thesis, Johnie Birch\n //\n //===----------------------------------------------------------------------===//\n</code></pre>\n\n<p>According to <a href=\"https://kristerw.blogspot.com/2019/04/how-llvm-optimizes-geometric-sums.html\" rel=\"nofollow noreferrer\">this blog article</a> by Krister Walfridsson, it builds up <em>chains of recurrences</em>, which can be used to obtain a closed-form formula for each inductive variable.</p>\n\n<p>This is a mid-point between full reasoning and full hardcoding:</p>\n\n<ul>\n<li>Pattern-matching is used to build the chains of recurrence, so LLVM may not recognize all ways of expressing a certain computation.</li>\n<li>A large variety of formulas can be optimized, not only the triangle sum.</li>\n</ul>\n\n<p>The article also notes that the optimization may end up pessimizing the code: a small number of iterations can be faster if the \"optimized\" code requires a larger number of operations compared to the inner body of the loop.</p>\n\n<p><sup>1</sup> <em><code>n * (n+1) / 2</code> is the closed-form function to compute the sum of numbers in <code>[0, n]</code>.</em></p>\n"}], "owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 3, "answer_count": 1, "score": 10, "last_activity_date": 1564862472, "creation_date": 1555965544, "last_edit_date": 1564862472, "question_id": 55800833, "link": "https://stackoverflow.com/questions/55800833/can-compilers-specifically-rustc-really-simplify-triangle-summation-to-avoid-a", "title": "Can compilers (specifically rustc) really simplify triangle-summation to avoid a loop? How?", "body": "<p>On page 322 of <em>Programming Rust</em> by Blandy and Orendorff is this claim:</p>\n\n<blockquote>\n  <p>...Rust...recognizes that there's a simpler way to sum the numbers from one to <code>n</code>: the sum is always equal to <code>n * (n+1) / 2</code>.</p>\n</blockquote>\n\n<p>This is of course a fairly well-known equivalence, but how does the compiler recognize it? I'm guessing it's in an LLVM optimization pass, but is LLVM somehow deriving the equivalence from first principles, or does it just have some set of \"common loop computations\" that can be simplified to arithmetic operations?</p>\n"}, {"tags": ["rust", "wasm-bindgen"], "comments": [{"owner": {"reputation": 623, "user_id": 10962821, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-2LR2CPhrhu0/AAAAAAAAAAI/AAAAAAAAAAc/OGsF9pFiFOU/photo.jpg?sz=128", "display_name": "sn99", "link": "https://stackoverflow.com/users/10962821/sn99"}, "edited": false, "score": 3, "creation_date": 1555965411, "post_id": 55800693, "comment_id": 98270393, "body": "Use <code>Ok</code> instead of <code>OK</code> small <code>k</code>"}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "reply_to_user": {"reputation": 623, "user_id": 10962821, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-2LR2CPhrhu0/AAAAAAAAAAI/AAAAAAAAAAc/OGsF9pFiFOU/photo.jpg?sz=128", "display_name": "sn99", "link": "https://stackoverflow.com/users/10962821/sn99"}, "edited": false, "score": 0, "creation_date": 1555982121, "post_id": 55800693, "comment_id": 98274422, "body": "I can&#39;t believe that I didn&#39;t see it.  The help message should have been helpful. I just kept re-reading it and wondering how Ok could have multiple tuple variants, and missed the capitalization difference.  Thank you @sn99 !"}], "answers": [{"tags": [], "owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "is_accepted": true, "score": 2, "last_activity_date": 1570989328, "last_edit_date": 1570989328, "creation_date": 1555981945, "answer_id": 55802994, "question_id": 55800693, "link": "https://stackoverflow.com/questions/55800693/whats-a-a-tuple-variant-understanding-compiler-error-message/55802994#55802994", "title": "What&#39;s a a tuple variant? (understanding compiler error message)", "body": "<p>the answer was provided as a comment.  <code>Ok</code> is spelled with lower-case <code>k</code> but it didn't explain the meaning of error message.</p>\n\n<p>First, here is the working code with that one small change:</p>\n\n<pre><code>#[wasm_bindgen]\npub fn hello_hash(count: i32) -&gt; Result&lt;JsValue, JsValue&gt; {\n    set_panic_hook();\n    let mut book_reviews = HashMap::new();\n\n    book_reviews.insert(\n        \"Grimms' Fairy Tales\".to_string(),\n        \"Masterpiece.\".to_string(),\n    );\n    let data = BookStoreData {\n        h: book_reviews,\n        name: \"My Book Store\".to_string(),\n    };\n\n    let js_result: JsValue = JsValue::from_serde(&amp;data).unwrap();\n\n    Ok(js_result)    \n\n}\n</code></pre>\n\n<p>Second, what's a tuple variant?</p>\n\n<p>In this context, the line in question could be a function or a <em>tuple variant</em> of a struct or an enum (via <a href=\"https://twitter.com/ekuber/status/1183410450123255808\" rel=\"nofollow noreferrer\">tweet</a> by friendly Rustacean):</p>\n\n<p>tuples can be used in a struct or an enum:</p>\n\n<pre><code>struct S(usize); // tuple-like struct\nenum E {\n    T(usize), // tuple variatn\n}\n</code></pre>\n\n<p>More detail in blog post: <a href=\"https://www.ultrasaurus.com/2019/10/rust-whats-a-tuple-variant/\" rel=\"nofollow noreferrer\">What's a tuple variant?</a></p>\n\n<p>This particular confusing error message may be improved in the future.  Blog post and subsequent <a href=\"https://twitter.com/ultrasaurus/status/1183402662340907008\" rel=\"nofollow noreferrer\">twitter discussion</a> led to this error report: <a href=\"https://github.com/rust-lang/rust/issues/65386\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/65386</a></p>\n"}], "owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 839, "favorite_count": 0, "accepted_answer_id": 55802994, "answer_count": 1, "score": 0, "last_activity_date": 1570989328, "creation_date": 1555964891, "last_edit_date": 1570938320, "question_id": 55800693, "link": "https://stackoverflow.com/questions/55800693/whats-a-a-tuple-variant-understanding-compiler-error-message", "title": "What&#39;s a a tuple variant? (understanding compiler error message)", "body": "<p>Using <code>wasm_bindgen</code> with <code>serde</code>, I'm trying to return a <code>JsValue</code> for a complex structure using idiomatic rust.  I've created an isolated example to illustrate the error that I'm seeing.</p>\n\n<p>struct declaration:</p>\n\n<pre><code>#[derive(Serialize)]\npub struct BookStoreData {\n    pub h: HashMap&lt;String, String&gt;,\n    pub name: String,\n}\n</code></pre>\n\n<p>function definition:</p>\n\n<pre><code>#[wasm_bindgen]\npub fn hello_hash(count: i32) -&gt; Result&lt;JsValue, JsValue&gt; {\n    set_panic_hook();\n    let mut book_reviews = HashMap::new();\n\n    book_reviews.insert(\n        \"Grimms' Fairy Tales\".to_string(),\n        \"Masterpiece.\".to_string(),\n    );\n    let data = BookStoreData {\n        h: book_reviews,\n        name: \"My Book Store\".to_string(),\n    };\n\n    let js_result: JsValue = JsValue::from_serde(&amp;data).unwrap();\n\n    OK(js_result)    \n\n}\n</code></pre>\n\n<p>I get this compilation error: </p>\n\n<pre><code>error[E0425]: cannot find function `OK` in this scope\n  --&gt; src/hello_whatever.rs:46:5\n   |\n46 |     OK(js_result)    \n   |     ^^ help: a tuple variant with a similar name exists: `Ok`\n</code></pre>\n\n<p>You can see the<a href=\"https://github.com/ultrasaurus/hello-rust-parcel/tree/ok-error\" rel=\"nofollow noreferrer\">full example</a> based on <a href=\"https://github.com/rustwasm/rust-parcel-template\" rel=\"nofollow noreferrer\">rust-parcel-template</a></p>\n\n<p>To reproduce the the error, from the root of the repo, run <code>npm run start</code> or <code>cd crate &amp;&amp; cargo build</code> </p>\n"}, {"tags": ["json", "serialization", "rust"], "comments": [{"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "edited": false, "score": 0, "creation_date": 1555952101, "post_id": 55797975, "comment_id": 98264954, "body": "When I came across this in the Serde docs as a built-in feature, I had to share, after <a href=\"https://stackoverflow.com/q/6886283/1114\">it having been such a pain to get this behaviour in Python</a>. :)"}], "answers": [{"comments": [{"owner": {"reputation": 697, "user_id": 4882895, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-QYTVgVg85qw/AAAAAAAAAAI/AAAAAAAAEWk/aIZpOp6_nSM/photo.jpg?sz=128", "display_name": "Andr&#233; Heringer", "link": "https://stackoverflow.com/users/4882895/andr%c3%a9-heringer"}, "edited": false, "score": 3, "creation_date": 1584490573, "post_id": 55797976, "comment_id": 107451440, "body": "Leving ths comment just to thank Jeremy for comming here living this version of a question he asked 8 YEARS ago and saving my undergraduate a*s. Thank you Jeremy. Stay safe"}], "tags": [], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "is_accepted": true, "score": 6, "last_activity_date": 1555958177, "last_edit_date": 1555958177, "creation_date": 1555952056, "answer_id": 55797976, "question_id": 55797975, "link": "https://stackoverflow.com/questions/55797975/how-i-can-i-lazily-read-multiple-json-values-from-a-file-stream-in-rust/55797976#55797976", "title": "How I can I lazily read multiple JSON values from a file/stream in Rust?", "body": "<p>This was a pain when <a href=\"https://stackoverflow.com/q/6886283/1114\">I wanted to do it in Python</a>, but fortunately in Rust this is a directly-supported feature of the de-facto-standard <code>serde_json</code> crate! It isn't exposed as a single convenience function, but we just need to create <a href=\"https://docs.rs/serde_json/1.0.39/serde_json/struct.Deserializer.html\" rel=\"noreferrer\">a <code>serde_json::Deserializer</code></a> reading from our file/reader, then use its <code>.into_iter()</code> method to get <a href=\"https://docs.rs/serde_json/1.0.39/serde_json/struct.StreamDeserializer.html\" rel=\"noreferrer\">a <code>StreamDeserializer</code> iterator</a> yielding <code>Result</code>s containing <code>serde_json::Value</code> JSON values.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   let stdin = std::io::stdin();\n   let stdin = stdin.lock();\n\n   let deserializer = serde_json::Deserializer::from_reader(stdin);\n   let iterator = deserializer.into_iter::&lt;serde_json::Value&gt;();\n   for item in iterator {\n     println!(\"Got {:?}\", item?);\n   }\n\n   Ok(())\n}\n</code></pre>\n\n<p>One thing to be aware of: if a syntax error is encountered, the iterator will start to produce an infinite sequence of error results and never move on. You need to make sure you handle the errors inside of the loop, or the loop will never end. In the snippet above, we do this by using the <code>?</code> question mark operator to break the loop and return the first <code>serde_json::Result::Err</code> from our function.</p>\n"}], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 860, "favorite_count": 4, "accepted_answer_id": 55797976, "answer_count": 1, "score": 5, "last_activity_date": 1555958177, "creation_date": 1555952056, "question_id": 55797975, "link": "https://stackoverflow.com/questions/55797975/how-i-can-i-lazily-read-multiple-json-values-from-a-file-stream-in-rust", "title": "How I can I lazily read multiple JSON values from a file/stream in Rust?", "body": "<p>I'd like to read multiple JSON objects from a file/reader in Rust, one at a time. Unfortunately <code>serde_json::from_reader(...)</code> just reads until end-of-file; there doesn't seem to be any way to use it to read a single object or to lazily iterate over the objects.</p>\n\n<p>Is there any way to do this? Using <code>serde_json</code> would be ideal, but if there's a different library I'd be willing use that instead.</p>\n\n<p>At the moment I'm putting each object on a separate line and parsing them individually, but I would really prefer not to need to do this.</p>\n\n<h2>Example Use</h2>\n\n<h3>main.rs</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n   let stdin = std::io::stdin();\n   let stdin = stdin.lock();\n\n   for item in serde_json::iter_from_reader(stdin) {\n     println!(\"Got {:?}\", item);\n   }\n\n   Ok(())\n}\n</code></pre>\n\n<h3>in.txt</h3>\n\n<pre><code>{\"foo\": [\"bar\", \"baz\"]} 1 2 [] 4 5 6\n</code></pre>\n\n<h3>example session</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>Got Object({\"foo\": Array([String(\"bar\"), String(\"baz\")])})\nGot Number(1)\nGot Number(2)\nGot Array([])\nGot Number(4)\nGot Number(5)\nGot Number(6)\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "subprocess"], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 0, "creation_date": 1556009691, "post_id": 55802076, "comment_id": 98282681, "body": "I can&#39;t get option one to compile. In <code>thread::spawn</code> it complains about reader needing a static lifetime. However, I don&#39;t think option one is viable anyway, since the underlying child process will be killed and restarted several hundred times and it is not guaranteed that it will answer. This would result in several hundred listener threads, wouldn&#39;t it?  I am trying option two now."}], "tags": [], "owner": {"reputation": 26, "user_id": 1572175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7dbfdcd5706a917012ac24f1ae0c9429?s=128&d=identicon&r=PG", "display_name": "Eigenrick", "link": "https://stackoverflow.com/users/1572175/eigenrick"}, "is_accepted": true, "score": 1, "last_activity_date": 1555974956, "last_edit_date": 1555974956, "creation_date": 1555973617, "answer_id": 55802076, "question_id": 55797769, "link": "https://stackoverflow.com/questions/55797769/how-to-handle-i-o-of-a-subprocess-asynchronously/55802076#55802076", "title": "How to handle I/O of a subprocess asynchronously?", "body": "<p>There are two approaches.  </p>\n\n<ol>\n<li>You can spin up a separate thread, and then use some mechanism (probably a channel) to signal success or failure to your waiting thread.</li>\n<li>You can use async IO as  you mentioned, such as the futures and tokio lib. </li>\n</ol>\n\n<p>I'll demo both.  I prefer the futures/Tokio approach, but if you're not familiar with the futures model, then option one might be better. </p>\n\n<p>The Rust stdlib has a Channels API, and this channel actually features a <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv_timeout\" rel=\"nofollow noreferrer\">recv_timeout</a> which can help us out quite a bit. </p>\n\n<pre><code>use std::thread;\nuse std::time::Duration;\nuse std::sync::mpsc;\n\n// this spins up a separate thread in which to wait for stuff to read\n// from the BufReader&lt;ChildStdout&gt; \n// If we successfully read, we send the string over the Channel.\n// Back in the original thread, we wait for an answer over the channel\n// or timeout in wait_time secs. \npub fn wait_for_or_exit(\n    reader: &amp;BufReader&lt;&amp;mut std::process::ChildStdout&gt;,\n    wait_time: u64,\n    cmd: &amp;str,\n) -&gt; Option&lt;String&gt; {\n    let (sender, receiver) = mpsc::channel();\n\n    thread::spawn(move || {\n        let line = reader.read_line();\n        sender.send(line);\n    });\n\n    match receiver.recv_timeout(Duration::from_secs(wait_time)) {\n        Ok(line) =&gt; if line.starts_with(cmd) \n           { Some(line) } else \n           { None },\n        Err(mpsc::RecvTimeoutError::Timeout) =&gt; None,\n        Err(mpsc::RecvTimeoutError::Disconnected) =&gt; None  \n\n    }\n}\n</code></pre>\n\n<p>Option two assumes that you're building a future's based app.  In order to accomplish what you want using Async IO is a file descriptor that will let us set <code>NON_BLOCKING</code>.  Luckily we don't have to do that ourselves. The Futures and Tokio APIs handle this nicely.  The trade-off, is that you have to compose your code out of non-blocking futures.  </p>\n\n<p>The code below was taken almost entirely from <a href=\"https://github.com/alexcrichton/tokio-process\" rel=\"nofollow noreferrer\">Tokio Process</a> with a Futures timeout that comes from the  Tokio API.</p>\n\n<pre><code>extern crate futures;\nextern crate tokio;\nextern crate tokio_process;\n\nuse std::process::Command;\nuse std::time::{Duration};\n\nuse futures::Future;\nuse tokio_process::CommandExt;\nuse tokio::prelude::*;\n\nconst TIMEOUT_SECS: u64 = 3;\n\nfn main() {\n    // Like above, but use `output_async` which returns a future instead of\n    // immediately returning the `Child`.\n    let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")\n                        .output_async();\n\n    let future = output.map_err(|e| panic!(\"failed to collect output: {}\", e))\n        .map(|output| {\n            assert!(output.status.success());\n            assert_eq!(output.stdout, b\"hello world\\n\");\n            println!(\"received output: {}\",     String::from_utf8(output.stdout).unwrap());\n        })\n        .timeout(Duration::from_secs(TIMEOUT_SECS)) // here is where we say we only want to wait TIMETOUT seconds\n        .map_err(|_e| { println!(\"Timed out waiting for data\"); });\n\n    tokio::run(future);\n}\n</code></pre>\n"}], "owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 400, "favorite_count": 0, "closed_date": 1555983519, "accepted_answer_id": 55802076, "answer_count": 1, "score": 0, "last_activity_date": 1555983551, "creation_date": 1555951013, "last_edit_date": 1555962429, "question_id": 55797769, "link": "https://stackoverflow.com/questions/55797769/how-to-handle-i-o-of-a-subprocess-asynchronously", "closed_reason": "Duplicate", "title": "How to handle I/O of a subprocess asynchronously?", "body": "<p>I have a subprocess, which may or may not write something to it's stdout in a specific amount of time, e.g. 3 seconds.</p>\n\n<p>If a new line in the subprocess stdout starts with  the correct thing, I want to return the line.\nOptimally I would like to realize something like this:</p>\n\n<pre><code>use std::io::{BufRead, BufReader};\nuse std::thread;\nuse std::time::Duration;\n\npub fn wait_for_or_exit(\n    reader: &amp;BufReader&lt;&amp;mut std::process::ChildStdout&gt;,\n    wait_time: u64,\n    cmd: &amp;str,\n) -&gt; Option&lt;String&gt; {\n    let signal: Arc&lt;AtomicBool&gt; = Arc::new(AtomicBool::new(false));\n    let signal_clone = signal.clone();\n    let child = thread::spawn(move || {\n        thread::sleep(Duration::from_millis(wait_time));\n        signal_clone.store(true, Ordering::Relaxed);\n    });\n    let mut line = String::new();\n    while !signal.load(Ordering::Relaxed) {\n        //Sleep a really small amount of time not to block cpu\n        thread::sleep(Duration::from_millis(10));\n        //This line is obviously invalid!\n        if reader.has_input() {\n            line.clear();\n            reader.read_line(&amp;mut line).unwrap();\n            if line.starts_with(cmd) {\n                return Some(line);\n            }\n        }\n    }\n    None\n}\n</code></pre>\n\n<p>The only line not working here is <code>reader.has_input()</code>.</p>\n\n<p>Obviously, if the subprocess answers much faster than the <code>wait_time</code> for a repeated amount of times, there will be a lot of sleeping threads, but I can take care of that with channels.</p>\n"}, {"tags": ["rust", "udp"], "comments": [{"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 1, "creation_date": 1555948728, "post_id": 55797170, "comment_id": 98263407, "body": "Are you sure you&#39;re supposed to be using UDP? The URL you have in the example specifies HTTP."}, {"owner": {"reputation": 118, "user_id": 5018923, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AUWcq.png?s=128&g=1", "display_name": "William", "link": "https://stackoverflow.com/users/5018923/william"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1555965370, "post_id": 55797170, "comment_id": 98270377, "body": "I build a torrent client, all the network requets use udp. the url is a tracker url"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1555968009, "post_id": 55797170, "comment_id": 98271265, "body": "<a href=\"https://pastebin.com/saCpNi6d\" rel=\"nofollow noreferrer\">Although it does seem like <code>torrent.ubuntu.com</code> is using TCP.</a> In my torrent client, I see both <code>http:&#47;&#47;</code> and <code>udp:&#47;&#47;</code> trackers."}], "answers": [{"comments": [{"owner": {"reputation": 118, "user_id": 5018923, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AUWcq.png?s=128&g=1", "display_name": "William", "link": "https://stackoverflow.com/users/5018923/william"}, "edited": false, "score": 0, "creation_date": 1555963882, "post_id": 55797362, "comment_id": 98269834, "body": "thanks for the help but UdpSocket::bind(&quot;torrent.ubuntu.com:6969&quot;) give me an error <code>{ code: 99, kind: AddrNotAvailable, message: &quot;Cannot assign requested address&quot; } </code>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 118, "user_id": 5018923, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AUWcq.png?s=128&g=1", "display_name": "William", "link": "https://stackoverflow.com/users/5018923/william"}, "edited": false, "score": 0, "creation_date": 1555967786, "post_id": 55797362, "comment_id": 98271183, "body": "Well, yes actually that&#39;s normal. <code>bind</code> is meant to be used on the <i>server</i>, not the client. The client is supposed to use <a href=\"https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.connect\" rel=\"nofollow noreferrer\"><code>connect</code></a>."}, {"owner": {"reputation": 118, "user_id": 5018923, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AUWcq.png?s=128&g=1", "display_name": "William", "link": "https://stackoverflow.com/users/5018923/william"}, "edited": false, "score": 0, "creation_date": 1556009546, "post_id": 55797362, "comment_id": 98282584, "body": "Are you sure ? I see in the docs that you can use connect only with sockets and sockets are always create by a bind."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 118, "user_id": 5018923, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AUWcq.png?s=128&g=1", "display_name": "William", "link": "https://stackoverflow.com/users/5018923/william"}, "edited": false, "score": 0, "creation_date": 1556015275, "post_id": 55797362, "comment_id": 98285614, "body": "<b>Listening</b> sockets are created by <code>bind</code>. That&#39;s not what you are doing here."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 0, "last_activity_date": 1555949270, "creation_date": 1555949270, "answer_id": 55797362, "question_id": 55797170, "link": "https://stackoverflow.com/questions/55797170/using-stdnetudpsocket-with-string-url/55797362#55797362", "title": "Using std::net::UdpSocket with string url", "body": "<p>The <code>bind</code> functions works with anything that implements <a href=\"https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html\" rel=\"nofollow noreferrer\"><code>ToSocketAddrs</code></a>.</p>\n\n<p>From the documentation, you can use a hostname/port string with this trait:</p>\n\n<blockquote>\n  <p>Creating a <a href=\"https://doc.rust-lang.org/std/net/enum.SocketAddr.html\" rel=\"nofollow noreferrer\"><code>SocketAddr</code></a> iterator from a hostname:</p>\n  \n  <pre class=\"lang-rust prettyprint-override\"><code>use std::net::{SocketAddr, ToSocketAddrs};\n\n// assuming 'localhost' resolves to 127.0.0.1\nlet mut addrs_iter = \"localhost:443\".to_socket_addrs().unwrap();\nassert_eq!(addrs_iter.next(), Some(SocketAddr::from(([127, 0, 0, 1], 443))));\nassert!(addrs_iter.next().is_none());\n\n// assuming 'foo' does not resolve\nassert!(\"foo:443\".to_socket_addrs().is_err());\n</code></pre>\n</blockquote>\n\n<p>However the link <code>http://torrent.ubuntu.com:6969/announce</code> is a <a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" rel=\"nofollow noreferrer\">HTTP</a> URL, and it is extremely uncommon to use UDP with HTTP, but assume this server does listen on UDP, you could connect to it using <code>UdpSocket::bind(\"torrent.ubuntu.com:6969\")</code>.</p>\n"}], "owner": {"reputation": 118, "user_id": 5018923, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AUWcq.png?s=128&g=1", "display_name": "William", "link": "https://stackoverflow.com/users/5018923/william"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 268, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1555949270, "creation_date": 1555948431, "question_id": 55797170, "link": "https://stackoverflow.com/questions/55797170/using-stdnetudpsocket-with-string-url", "title": "Using std::net::UdpSocket with string url", "body": "<p>I'm want to send a message by using udp protocol. I have an url like\nthis: <code>http://torrent.ubuntu.com:6969/announce</code>. </p>\n\n<p>But in documentation and all examples that i saw the method <code>bind</code> only accept ip address and port.</p>\n\n<p>It's possible to convert url address ?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1555947037, "post_id": 55795933, "comment_id": 98262700, "body": "I would recommend you to ask this question in the <a href=\"https://users.rust-lang.org\" rel=\"nofollow noreferrer\">rust user forum</a> because I know that the authors of the book check the forum very regularly."}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 1, "creation_date": 1555995719, "post_id": 55795933, "comment_id": 98277064, "body": "The source code for the book content seems to be here: <a href=\"https://github.com/rust-lang/book\" rel=\"nofollow noreferrer\">github.com/rust-lang/book</a> but I don&#39;t see code samples"}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 1, "creation_date": 1555997318, "post_id": 55795933, "comment_id": 98277487, "body": "seems like others have the same request: <a href=\"https://github.com/rust-lang/book/issues/1889\" rel=\"nofollow noreferrer\">github.com/rust-lang/book/issues/1889</a>"}], "answers": [{"comments": [{"owner": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "edited": false, "score": 0, "creation_date": 1563891086, "post_id": 57165574, "comment_id": 100845891, "body": "Hey, thanks for getting this link but as you can see in the <a href=\"https://stackoverflow.com/help/on-topic\">help center</a>, asking for external resource is off-topic so your question is probably going to be closed as such. I&#39;m not entirely sure where on the network such a question would belong, sadly =/"}], "tags": [], "owner": {"reputation": 167, "user_id": 2891944, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iJFwu.jpg?s=128&g=1", "display_name": "Jman", "link": "https://stackoverflow.com/users/2891944/jman"}, "is_accepted": true, "score": 1, "last_activity_date": 1563889480, "creation_date": 1563889480, "answer_id": 57165574, "question_id": 55795933, "link": "https://stackoverflow.com/questions/55795933/where-do-i-find-the-source-code-rs-files-mentioned-in-the-rust-programming-la/57165574#57165574", "title": "Where do I find the source code (.rs files) mentioned in The Rust Programming Language book?", "body": "<p>Here is the link to get the source code files:\n<a href=\"https://github.com/rust-lang/book/tree/extract-files\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/book/tree/extract-files</a></p>\n\n<p>Download the ZIP file by clicking \"Clone or Download\" button.\nOnce the ZIP file is extracted the source code is here:\n/book-extract-files/book-extract-files/listings</p>\n\n<p>Thanks to Ultrasaurus for giving me the initial link several months ago to find this.</p>\n"}], "owner": {"reputation": 167, "user_id": 2891944, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iJFwu.jpg?s=128&g=1", "display_name": "Jman", "link": "https://stackoverflow.com/users/2891944/jman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 622, "favorite_count": 0, "accepted_answer_id": 57165574, "answer_count": 1, "score": 1, "last_activity_date": 1563891234, "creation_date": 1555943027, "last_edit_date": 1563891234, "question_id": 55795933, "link": "https://stackoverflow.com/questions/55795933/where-do-i-find-the-source-code-rs-files-mentioned-in-the-rust-programming-la", "title": "Where do I find the source code (.rs files) mentioned in The Rust Programming Language book?", "body": "<p>The Rust Programming Language book (ISBN \n9781593278281) has a link on page xxvii to download the source code for the files used in the book here: <a href=\"https://www.nostarch.com/rust\" rel=\"nofollow noreferrer\">https://www.nostarch.com/rust</a></p>\n\n<p>The link is no longer there so I assume that link has been removed since the Rust book is still a work in progress.  I did find the source code for actually making the book itself on GitHub, but not the .rs files used as examples in the book.</p>\n\n<p>Was I misunderstanding that the link mentioned in the book was only for building the most recent copy of the Rust book itself OR was there an actual repository of the .rs files that were used in the examples from the book.</p>\n\n<p>I have searched over GitHub but have not found an actual repo of .rs files used as examples in the Rust book. If one does exist, please post a link to it. (I have however stumbled across a lot of other good info I have saved such as rustlings).</p>\n"}, {"tags": ["rust", "mutability"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1555934293, "post_id": 55794021, "comment_id": 98256941, "body": "Well think like you have built a house. Let&#39;s say that you wanna change the room. When you change the room, Does the house itself change too?"}, {"owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1555934996, "post_id": 55794021, "comment_id": 98257232, "body": "Yeah it does. To continue the analogy: if we declare that this house is allowed to be changed, why does it imply that <i>all</i> of its rooms may be changed? What if we only want some rooms to be mutable?"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1555935295, "post_id": 55794021, "comment_id": 98257354, "body": "Besides from the analogy you are accessing the inner struct via outer struct. Thus it needs to be mutable too. You could have put the instance reference inside the outer struct and only change the inner without the need of outer. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e71145f517b9dc25d577bb3523605254\" rel=\"nofollow noreferrer\">Here</a> you do not need to mutate it over the outer. Thus you do not need to declare it as mutable."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1555935516, "post_id": 55794021, "comment_id": 98257465, "body": "There are a few things at play here. One is that the mutability of the binding does not mean that the value will never be modified during its lifetime. The other is that the mutability of a struct applies to all its fields. Relevant questions: <a href=\"https://stackoverflow.com/q/50124680/1233251\">stackoverflow.com/q/50124680/1233251</a> <a href=\"https://stackoverflow.com/q/47915905/1233251\">stackoverflow.com/q/47915905/1233251</a> <a href=\"https://stackoverflow.com/q/23743566/1233251\">stackoverflow.com/q/23743566/1233251</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1555935618, "post_id": 55794021, "comment_id": 98257516, "body": "Moreover, the implications of adding <code>mut</code> are described <a href=\"https://stackoverflow.com/q/28587698/1233251\">here</a>."}], "owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "closed_date": 1555936336, "answer_count": 0, "score": 0, "last_activity_date": 1555937000, "creation_date": 1555934133, "last_edit_date": 1555936611, "question_id": 55794021, "link": "https://stackoverflow.com/questions/55794021/why-does-an-inner-struct-become-mutable-if-the-outer-struct-is-mutable-in-rust", "closed_reason": "Duplicate", "title": "Why does an inner struct become mutable if the outer struct is mutable in Rust?", "body": "<p>I have the following code which does not compile:</p>\n\n<pre><code>struct Inner {\n    val: i32,\n}\n\nstruct Outer {\n    obj: Inner,\n}\n\nfn main() {\n    let inner_instance = Inner { val: 123 };\n    let outer_instance = Outer {\n        obj: inner_instance,\n    };\n\n    outer_instance.obj.val = 456;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to `outer_instance.obj.val`, as `outer_instance` is not declared as mutable\n  --&gt; src/main.rs:15:5\n   |\n11 |     let outer_instance = Outer {\n   |         -------------- help: consider changing this to be mutable: `mut outer_instance`\n...\n15 |     outer_instance.obj.val = 456;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign\n</code></pre>\n\n<p>So far so good. I change the <code>outer_instance</code> to be mutable:</p>\n\n<pre><code>let mut outer_instance = Outer { /* ... */ };\n</code></pre>\n\n<p>and now the code compiles. It appears that mutability of inner structs (enums too?) is decided by the mutability of the outer struct. Is that a correct conclusion?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555936085, "post_id": 55792152, "comment_id": 98257712, "body": "<code>#error Unsupported architecture</code> is a C compiler error (you can see the .c files in the surrounding lines). You have chosen a crate that actually compiles a C library to do all of the heavy work of compressing, but that C library cannot be compiled to WASM (at least with your configuration). The easiest thing is to find a pure Rust implementation."}, {"owner": {"reputation": 21, "user_id": 9812139, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Thomas Huched&#233;", "link": "https://stackoverflow.com/users/9812139/thomas-huched%c3%a9"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555941399, "post_id": 55792152, "comment_id": 98259985, "body": "Thanks a lot.  I ended up disabling bzip support from this crate, since the author left the possibility to do so through features flags using the following configuration in my Cargo.toml: <code>zip = { version = &quot;0.5.2&quot;, default-features = false, features = [&quot;deflate&quot;] }</code>"}], "answers": [{"tags": [], "owner": {"reputation": 618, "user_id": 10440128, "user_type": "registered", "profile_image": "https://graph.facebook.com/1167851946696270/picture?type=large", "display_name": "Mila Nautikus", "link": "https://stackoverflow.com/users/10440128/mila-nautikus"}, "is_accepted": false, "score": 0, "last_activity_date": 1607295217, "creation_date": 1607295217, "answer_id": 65173940, "question_id": 55792152, "link": "https://stackoverflow.com/questions/55792152/how-to-solve-error-unsupported-architecture-when-building-rust-code-with-wasm/65173940#65173940", "title": "How to solve &quot;#error Unsupported architecture&quot; when building Rust code with wasm-pack?", "body": "<p>choose one of</p>\n<ul>\n<li>replace <code>wasm32-unknown-unknown</code> with <code>wasm32-unknown-emscripten</code></li>\n<li>remove <code>#include &lt;stdio.h&gt;</code>, <code>printf</code> and other standard-library calls from the C sources</li>\n<li>implement the needed functions (printf?) for wasm32-unknown-unknown, or extract-and-copy emscripten's implementation</li>\n</ul>\n"}], "owner": {"reputation": 21, "user_id": 9812139, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Thomas Huched&#233;", "link": "https://stackoverflow.com/users/9812139/thomas-huched%c3%a9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 992, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1607295217, "creation_date": 1555925120, "last_edit_date": 1555935985, "question_id": 55792152, "link": "https://stackoverflow.com/questions/55792152/how-to-solve-error-unsupported-architecture-when-building-rust-code-with-wasm", "title": "How to solve &quot;#error Unsupported architecture&quot; when building Rust code with wasm-pack?", "body": "<p>I'm trying to learn Rust and WebAssembly by building a demo app to manipulate some archive files.</p>\n\n<p>After I added the \"zip\" crate, I was able to run <code>cargo build</code> successfully but not <code>wasm-pack build</code> (nor <code>cargo build --target wasm32-unknown-unknown</code>).</p>\n\n<p>I am getting <code>cargo:warning=#error Unsupported architecture</code> when trying to build my file and clang seems somehow not happy with it.</p>\n\n<p>At first I was getting some <code>stdio.h not found</code>, so I ran </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg\n</code></pre>\n\n<p>to install them. </p>\n\n<p>I am now having the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling bzip2-sys v0.1.7\nerror: failed to run custom build command for `bzip2-sys v0.1.7`\nprocess didn't exit successfully: `/Users/projects/rust/hello-wasm/target/release/build/bzip2-sys-b7b1e1aeb1e6f42f/build-script-build` (exit code: 101)\n--- stdout\nTARGET = Some(\"wasm32-unknown-unknown\")\nOPT_LEVEL = Some(\"s\")\nHOST = Some(\"x86_64-apple-darwin\")\nCC_wasm32-unknown-unknown = None\nCC_wasm32_unknown_unknown = None\nTARGET_CC = None\nCC = None\nCFLAGS_wasm32-unknown-unknown = None\nCFLAGS_wasm32_unknown_unknown = None\nTARGET_CFLAGS = None\nCFLAGS = None\nCRATE_CC_NO_DEFAULTS = None\nDEBUG = Some(\"false\")\nrunning: \"clang\" \"-Os\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"--target=wasm32-unknown-unknown\" \"-I\" \"bzip2-1.0.6\" \"-D_FILE_OFFSET_BITS=64\" \"-DBZ_NO_STDIO\" \"-o\" \"/Users/projects/rust/hello-wasm/target/wasm32-unknown-unknown/release/build/bzip2-sys-3be942e6fa7d3879/out/lib/bzip2-1.0.6/blocksort.o\" \"-c\" \"bzip2-1.0.6/blocksort.c\"\ncargo:warning=In file included from bzip2-1.0.6/blocksort.c:22:\ncargo:warning=In file included from bzip2-1.0.6/bzlib_private.h:25:\ncargo:warning=In file included from /usr/include/stdlib.h:62:\ncargo:warning=/usr/include/sys/cdefs.h:784:2: error: Unsupported architecture\ncargo:warning=#error Unsupported architecture\ncargo:warning= ^\ncargo:warning=In file included from bzip2-1.0.6/blocksort.c:22:\ncargo:warning=In file included from bzip2-1.0.6/bzlib_private.h:25:\ncargo:warning=In file included from /usr/include/stdlib.h:64:\ncargo:warning=In file included from /usr/include/_types.h:27:\ncargo:warning=In file included from /usr/include/sys/_types.h:33:\ncargo:warning=/usr/include/machine/_types.h:34:2: error: architecture not supported\ncargo:warning=#error architecture not supported\ncargo:warning= ^\ncargo:warning=In file included from bzip2-1.0.6/blocksort.c:22:\ncargo:warning=In file included from bzip2-1.0.6/bzlib_private.h:25:\ncargo:warning=In file included from /usr/include/stdlib.h:64:\ncargo:warning=In file included from /usr/include/_types.h:27:\ncargo:warning=/usr/include/sys/_types.h:55:9: error: unknown type name '__int64_t'; did you mean '__int128_t'?\ncargo:warning=typedef __int64_t       __darwin_blkcnt_t;      /* total blocks */\ncargo:warning=        ^\ncargo:warning=note: '__int128_t' declared here\n[...]\nInternal error occurred: Command \"clang\" \"-Os\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"--target=wasm32-unknown-unknown\" \"-I\" \"bzip2-1.0.6\" \"-D_FILE_OFFSET_BITS=64\" \"-DBZ_NO_STDIO\" \"-o\" \"/Users/projects/rust/hello-wasm/target/wasm32-unknown-unknown/release/build/bzip2-sys-3be942e6fa7d3879/out/lib/bzip2-1.0.6/blocksort.o\" \"-c\" \"bzip2-1.0.6/blocksort.c\" with args \"clang\" did not execute successfully (status code exit code: 1).\n</code></pre>\n\n<p>I then ran:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup target add wasm32-unknown-unknown --toolchain nightly\nrustup default nightly\n</code></pre>\n\n<p>to install target wasm32-unknown-unknown but I am still getting the error.</p>\n\n<p>What am I missing to compile the \"zip\" crate for wasm ?</p>\n\n<h1>Environment</h1>\n\n<p>macOS 10.14.4</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>gcc -v\nConfigured with: --prefix=/Library/Developer/CommandLineTools/usr --with-gxx-include-dir=/usr/include/c++/4.2.1\nApple LLVM version 10.0.1 (clang-1001.0.46.4)\nTarget: x86_64-apple-darwin18.5.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc --version                                             \nrustc 1.36.0-nightly (31a75a172 2019-04-21)\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup show                                                                \nDefault host: x86_64-apple-darwin\n\ninstalled toolchains\n--------------------\n\nstable-x86_64-apple-darwin\nnightly-2019-04-16-x86_64-apple-darwin\nnightly-x86_64-apple-darwin (default)\n\ninstalled targets for active toolchain\n--------------------------------------\n\nwasm32-unknown-unknown\nx86_64-apple-darwin\n\nactive toolchain\n----------------\n\nnightly-x86_64-apple-darwin (default)\nrustc 1.36.0-nightly (31a75a172 2019-04-21)\n</code></pre>\n"}, {"tags": ["casting", "rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1555925748, "post_id": 55791966, "comment_id": 98253662, "body": "Hum... yet, apparently, <code>dyn Any  + &#39;static + Sync</code> is convertible to <code>dyn Any + &#39;static</code> automatically, since the function-style call works."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1555926520, "post_id": 55791966, "comment_id": 98253994, "body": "But why is it not implemented for this permutation?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1555927767, "post_id": 55791966, "comment_id": 98254467, "body": "I guess it was just forgotten and there was no PR yet."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1555930888, "post_id": 55791966, "comment_id": 98255545, "body": "@PeterHall: I found an interesting discussion <a href=\"https://github.com/rust-lang/rust/issues/18737\" rel=\"nofollow noreferrer\">in the issue</a> in which Niko introduced the impl for <code>Any + Send</code>. There seems to be a limitation in the &quot;subtype&quot; relationship which prevents stripping <code>Sync</code> from <code>Any + Sync</code> to consider the impl on just <code>Any</code>. It seems to be more an implementation limitation than a fundamental type system limitation."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1555937460, "last_edit_date": 1555937460, "creation_date": 1555924361, "answer_id": 55791966, "question_id": 55790807, "link": "https://stackoverflow.com/questions/55790807/why-is-the-downcast-ref-method-not-found-for-the-dyn-any-type/55791966#55791966", "title": "Why is the downcast_ref method not found for the dyn Any type?", "body": "<p>That is because <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"nofollow noreferrer\"><code>Any::downcast_ref()</code></a> is not implemented for <code>dyn Any + 'static + Sync</code>, only for:</p>\n\n<ul>\n<li><code>dyn Any + 'static</code></li>\n<li><code>dyn Any + 'static + Send</code></li>\n<li><code>dyn Any + 'static + Send + Sync</code></li>\n</ul>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 589, "favorite_count": 0, "accepted_answer_id": 55791966, "answer_count": 1, "score": 5, "last_activity_date": 1555937460, "creation_date": 1555918464, "last_edit_date": 1555936391, "question_id": 55790807, "link": "https://stackoverflow.com/questions/55790807/why-is-the-downcast-ref-method-not-found-for-the-dyn-any-type", "title": "Why is the downcast_ref method not found for the dyn Any type?", "body": "<p>I am trying to create my own mocking framework and I've bumped into this problem. When I try to downcast my <code>Any</code> type, it does not find the <code>downcast_ref</code> method:</p>\n\n<pre><code>use std::any::Any;\nuse std::collections::HashMap;\n\nstruct X;\nstruct Y;\n\nfn main() {\n    let mut map: HashMap&lt;&amp;'static str, Box&lt;Any + Sync&gt;&gt; = HashMap::new();\n    map.insert(\"x\", Box::new(X));\n    map.insert(\"y\", Box::new(Y));\n\n    get_x(map);\n}\n\nfn get_x(map: HashMap&lt;&amp;'static str, Box&lt;Any + Sync&gt;&gt;) {\n    let ref any = map[\"x\"];\n    let res = Any::downcast_ref::&lt;X&gt;(any); // Works\n    let res = any.downcast_ref::&lt;X&gt;();     // Fails\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cbb9ce9a0467a5af5b28e4c38b1d5602\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `downcast_ref` found for type `&amp;std::boxed::Box&lt;(dyn std::any::Any + std::marker::Sync + 'static)&gt;` in the current scope\n  --&gt; src/main.rs:18:19\n   |\n18 |     let res = any.downcast_ref::&lt;X&gt;();\n   |                   ^^^^^^^^^^^^\n</code></pre>\n\n<p>If I call it using the associated function syntax, it finds the function and works with no problem.</p>\n\n<p>Why can the compiler not find the <code>downcast_ref()</code> method from the variable <code>any</code> which is a <code>dyn Any</code> type?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555918211, "post_id": 55790558, "comment_id": 98250998, "body": "Why not just test your code with some long input and check the result ???!!!"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555918433, "post_id": 55790558, "comment_id": 98251072, "body": "I did that and I know that it works, but I want to have an automated test. Testing by hand is not an option."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1555919527, "post_id": 55790558, "comment_id": 98251498, "body": "You can get the logger from a trait object and Inject it as mock logger which implements the same trait. In your mock logger, you can add your desired logic and get the call count from it."}, {"owner": {"reputation": 6508, "user_id": 997958, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/d9vLc.jpg?s=128&g=1", "display_name": "Kraylog", "link": "https://stackoverflow.com/users/997958/kraylog"}, "edited": false, "score": 1, "creation_date": 1555919888, "post_id": 55790558, "comment_id": 98251629, "body": "What you&#39;re describing is called a Spy. <a href=\"https://blog.cleancoder.com/uncle-bob/2014/05/14/TheLittleMocker.html\" rel=\"nofollow noreferrer\">blog.cleancoder.com/uncle-bob/2014/05/14/TheLittleMocker.htm&zwnj;&#8203;l</a>"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1555920230, "post_id": 55790558, "comment_id": 98251759, "body": "I know what a <code>spy</code> is, the question was how to do it with plain rust. In the end I replaced the function/closure with a trait object. Now in the tests I&#39;m able to pass another implementation that accumulates the values using a channel. But still I have no idea how to do it if was a function/closure as in my MCVE."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 6508, "user_id": 997958, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/d9vLc.jpg?s=128&g=1", "display_name": "Kraylog", "link": "https://stackoverflow.com/users/997958/kraylog"}, "edited": false, "score": 0, "creation_date": 1555921646, "post_id": 55790558, "comment_id": 98252187, "body": "@Kraylog, I was just describing the blog :) Could not wanted to just call it spy, instead wanted to give insight about implementation"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555944420, "post_id": 55790558, "comment_id": 98261445, "body": "@Shepmaster The linked duplicate does not answer the question. It makes the assumption that the function belongs to a struct which can conditionally contain the test state. My function is not associated with a struct, hence I cannot conditionally add a new field to the struct. As I had control over the whole codebase  I easily changed it to use a trait instead of function reference, but that might not have been possible if I was not in control of the API."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555944577, "post_id": 55790558, "comment_id": 98261535, "body": "I don\u2019t understand how you answer differs from <a href=\"https://stackoverflow.com/a/54584732/155423\">this one</a>.  Both use traits to solve the problem (although you chose to use dynamic dispatch)"}], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": true, "score": 1, "last_activity_date": 1555922019, "last_edit_date": 1555922019, "creation_date": 1555920561, "answer_id": 55791197, "question_id": 55790558, "link": "https://stackoverflow.com/questions/55790558/verify-that-method-was-called-the-expected-number-of-times-with-correct-paramete/55791197#55791197", "title": "Verify that method was called the expected number of times with correct parameters", "body": "<p>I was able to do this by replacing the function/closure with a trait object:</p>\n\n<pre><code>trait Logger: Send + Sync {\n    fn log(&amp;mut self, log_name: &amp;str, data: &amp;str);\n}\n\nstruct StandardLogger;\n\nimpl Logger for StandardLogger {\n    fn log(&amp;mut self, log_name: &amp;str, data: &amp;str) {\n        log::logger().log(\n            &amp;log::Record::builder()\n                .level(log::Level::Info)\n                .target(log_name)\n                .args(format_args!(\"{}\", data))\n                .build(),\n        );\n    }\n}\n</code></pre>\n\n<p>For the tests I use another implementation:</p>\n\n<pre><code>struct DummyLogger {\n    tx: Mutex&lt;Sender&lt;String&gt;&gt;,\n}\n\nimpl DummyLogger {\n    pub fn new() -&gt; (DummyLogger, Receiver&lt;String&gt;) {\n        let (tx, rx) = std::sync::mpsc::channel();\n        let logger = DummyLogger { tx: Mutex::new(tx) };\n        (logger, rx)\n    }\n}\n\nimpl Logger for DummyLogger {\n    fn log(&amp;mut self, log_name: &amp;str, data: &amp;str) {\n        let tx = self.tx.lock().unwrap();\n        tx.send(data.to_owned());\n    }\n}\n</code></pre>\n\n<p>Which allows me to verify that it was both called the correct number of times, with the correct parameters:</p>\n\n<pre><code>let actual: Vec&lt;String&gt; = rx.iter().collect();\nassert_eq!(actual, vec![\"1\", \"2\", \"3\", \"4\"]);\n</code></pre>\n"}], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "closed_date": 1555935370, "accepted_answer_id": 55791197, "answer_count": 1, "score": 0, "last_activity_date": 1555935431, "creation_date": 1555917160, "question_id": 55790558, "link": "https://stackoverflow.com/questions/55790558/verify-that-method-was-called-the-expected-number-of-times-with-correct-paramete", "closed_reason": "Duplicate", "title": "Verify that method was called the expected number of times with correct parameters", "body": "<h2>Summary</h2>\n\n<p>I have an application that starts another process and transfers its StdOut/StdErr to a log file using the <code>log</code> crate. My application transfers the output line by line (<code>buf_read.read_line()</code>). As it can be any arbitrary process, my application makes the assumption that the other process may be malicious and may try to print to stdout/sterr enormous amounts of data without a single newline, thus causing OOM in my application. Hence my application limits the number of bytes the <code>BufReader</code> can read at a time using <code>BufReader.take()</code>.</p>\n\n<h2>The problem</h2>\n\n<p>Ignoring all the details about chunking the input, how can I test that my logger was called X times with the correct parameters ? Let's assume my app has read one huge line and has split it in 3 parts like the MCVE below. </p>\n\n<h2>MCVE:</h2>\n\n<pre><code>use std::thread::JoinHandle;\n\nfn main() {\n    let handle = start_transfer_thread(&amp;|x| {\n        println!(\"X={}\", x);\n    }).join();\n}\n\nfn start_transfer_thread&lt;F&gt;(logger: &amp;'static F) -&gt; JoinHandle&lt;()&gt; where F: Send + Sync + Fn(&amp;str) -&gt; () {\n    std::thread::spawn(move || {\n        logger(\"1\");\n        logger(\"2\");\n        logger(\"3\");\n    })\n}\n\n#[cfg(test)]\nmod test {\n    use super::*;\n\n    #[test]\n    fn test_logged_in_order() {\n        let result = start_transfer_thread(&amp;|x| {\n            match x {\n                \"1\" =&gt; (),\n                \"2\" =&gt; (),\n                \"3\" =&gt; (),\n                x =&gt; panic!(\"unexpected token: {}\", x)\n            }\n        }).join();\n        assert!(result.is_ok());\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1555938399, "post_id": 55790685, "comment_id": 98258615, "body": "The <code>match</code> statement is really not needed here; <code>if n % a == 0 { return false; }</code> is much simpler and avoids the extra <code>continue</code>. The whole function could be <code>!(2..n).any(|a| n % a == 0)</code> or <code>(2..n).all(|a| n % a != 0)</code>"}], "tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": true, "score": 3, "last_activity_date": 1589219482, "last_edit_date": 1589219482, "creation_date": 1555917844, "answer_id": 55790685, "question_id": 55790537, "link": "https://stackoverflow.com/questions/55790537/calculating-prime-numbers-in-rust/55790685#55790685", "title": "Calculating prime numbers in Rust", "body": "<p>The problem with your code is that you are using the variable <code>result</code> <strong>while defining it</strong></p>\n\n<pre><code>...\nlet mut result: bool = for a in 2..n { // declared here\n    result = if n % a == 0 { // used here, but it is still not initialized\n...\n</code></pre>\n\n<p>You can easily do without the <code>result</code> variable, is not necessary:</p>\n\n<pre><code>fn is_prime(n: u32) -&gt; bool {\n    if n &lt;= 1 {\n        return false;\n    }\n    for a in 2..n {\n        if n % a == 0 {\n            return false; // if it is not the last statement you need to use `return`\n        }\n    }\n    true // last value to return\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1f93c0a907212674770f52ba13ee07c2\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555938492, "post_id": 55790712, "comment_id": 98258645, "body": "Explicit <code>return</code> statements at the end of a block are non-idiomatic. See the <a href=\"https://stackoverflow.com/questions/55790537/calculating-prime-numbers-in-rust#comment98258615_55790685\">other comment</a> which shows how to use iterator methods instead of writing the for loop explicitly."}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555944099, "post_id": 55790712, "comment_id": 98261274, "body": "That&#39;s the thing that annoys me most in Rust - I really hate to be able to do such a simple operation in 2 different ways."}, {"owner": {"reputation": 2908, "user_id": 1910355, "user_type": "registered", "accept_rate": 6, "profile_image": "https://i.stack.imgur.com/79e5C.png?s=128&g=1", "display_name": "Jim", "link": "https://stackoverflow.com/users/1910355/jim"}, "edited": false, "score": 0, "creation_date": 1589337408, "post_id": 55790712, "comment_id": 109251566, "body": "@SveltinZarev the <code>return</code> keyword is necessary so you can break out of a function early while returning a value so I don&#39;t see how you could remove it from the language entirely although possibly this could be a compiler warning, &quot;don&#39;t use <code>return</code> in the final statement/expression of a function&quot;? \ud83e\udd14"}], "tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": false, "score": 3, "last_activity_date": 1555944123, "last_edit_date": 1555944123, "creation_date": 1555918028, "answer_id": 55790712, "question_id": 55790537, "link": "https://stackoverflow.com/questions/55790537/calculating-prime-numbers-in-rust/55790712#55790712", "title": "Calculating prime numbers in Rust", "body": "<p>You have several issues in your code (ignoring that it does not compile):</p>\n\n<ul>\n<li>you overwrite the result -> imagine <code>n = 4</code>. When you divide by 2 you get <code>result = true</code>,  but in the next iteration when you divide by 3 you get <code>result = false</code></li>\n<li>if <code>n&lt;=2</code> your loop will never be executed, hence what will result be</li>\n</ul>\n\n<p>Instead of trying to use any new piece of syntax, try to write it to be as readable as possible:</p>\n\n<pre><code>fn is_prime(n: u32) -&gt; bool {\n    let limit = (n as f64).sqrt() as u32;\n\n    for i in 2..=limit {\n        if n % i == 0 {\n            return false;\n        }\n    }\n\n    true\n}\n</code></pre>\n"}], "owner": {"reputation": 327, "user_id": 11180444, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PwV4h.jpg?s=128&g=1", "display_name": "Muhammad Areeb Siddiqui", "link": "https://stackoverflow.com/users/11180444/muhammad-areeb-siddiqui"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1903, "favorite_count": 0, "accepted_answer_id": 55790685, "answer_count": 2, "score": 0, "last_activity_date": 1589219482, "creation_date": 1555917067, "last_edit_date": 1555935510, "question_id": 55790537, "link": "https://stackoverflow.com/questions/55790537/calculating-prime-numbers-in-rust", "title": "Calculating prime numbers in Rust", "body": "<p>I am trying to calculate prime numbers in Rust but having some issues. I getting two errors. I am not understanding how the value is returning to the main function. </p>\n\n<pre><code>fn main() {\n    let x = is_prime(25); //function calling\n    println!(\"{}\", x);\n}\n\nfn is_prime(n: u32) -&gt; bool {\n    let mut result: bool = for a in 2..n {\n        result = if n % a == 0 { false } else { true };\n    };\n    result\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find value `result` in this scope\n --&gt; src/main.rs:8:9\n  |\n8 |         result = if n % a == 0 { false } else { true };\n  |         ^^^^^^ not found in this scope\nhelp: possible candidates are found in other modules, you can import them into scope\n  |\n1 | use futures::future::result;\n  |\n1 | use tokio::prelude::future::result;\n  |\n\nerror[E0308]: mismatched types\n --&gt; src/main.rs:7:28\n  |\n6 |   fn is_prime(n: u32) -&gt; bool {\n  |                          ---- expected `bool` because of return type\n7 |       let mut result: bool = for a in 2..n {\n  |  ____________________________^\n8 | |         result = if n % a == 0 { false } else { true };\n9 | |     };\n  | |_____^ expected bool, found ()\n  |\n  = note: expected type `bool`\n             found type `()`\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker", "lifetime-scoping"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555912028, "post_id": 55789450, "comment_id": 98249087, "body": "You was close, <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=91088e29b5192d2e2475c7387ec7d88b\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>, consider use <a href=\"https://docs.rs/bufstream/0.1.4/bufstream/\" rel=\"nofollow noreferrer\"><code>bufstream</code></a>"}, {"owner": {"reputation": 2659, "user_id": 826820, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1f621f6e2cb4857b185c1e00efd6fa8?s=128&d=identicon&r=PG", "display_name": "twe4ked", "link": "https://stackoverflow.com/users/826820/twe4ked"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555912688, "post_id": 55789450, "comment_id": 98249279, "body": "@Stargateur thanks for taking a look. I wasn&#39;t clear enough in my original question but I&#39;d really like the API to look like the un-commented code. So the <code>::new()</code> function is responsible for creating the <code>TcpStream</code>. I don&#39;t think the other question is a duplicate because I&#39;m still not clear on where to \u201cstore\u201d the stream."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1555913219, "post_id": 55789450, "comment_id": 98249444, "body": "You can&#39;t see: <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>"}, {"owner": {"reputation": 2659, "user_id": 826820, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1f621f6e2cb4857b185c1e00efd6fa8?s=128&d=identicon&r=PG", "display_name": "twe4ked", "link": "https://stackoverflow.com/users/826820/twe4ked"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555914183, "post_id": 55789450, "comment_id": 98249716, "body": "Aha! <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\" title=\"why cant i store a value and a reference to that value in the same struct\">stackoverflow.com/questions/32300132/&hellip;</a> explains it perfectly. Thanks very much."}, {"owner": {"reputation": 2659, "user_id": 826820, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1f621f6e2cb4857b185c1e00efd6fa8?s=128&d=identicon&r=PG", "display_name": "twe4ked", "link": "https://stackoverflow.com/users/826820/twe4ked"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555973391, "post_id": 55789450, "comment_id": 98272709, "body": "If anyone has any other ideas on how to structure this code, please let me know."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1555978908, "post_id": 55789450, "comment_id": 98273857, "body": "As I said, use bufstream, <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3e4faf993fc0c49cf5d9da45d5938ec6\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}], "owner": {"reputation": 2659, "user_id": 826820, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1f621f6e2cb4857b185c1e00efd6fa8?s=128&d=identicon&r=PG", "display_name": "twe4ked", "link": "https://stackoverflow.com/users/826820/twe4ked"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 257, "favorite_count": 0, "closed_date": 1555936734, "answer_count": 0, "score": 0, "last_activity_date": 1555936748, "creation_date": 1555910153, "question_id": 55789450, "link": "https://stackoverflow.com/questions/55789450/where-to-store-tcpstream-to-share-with-bufreader-and-bufwriter", "closed_reason": "Duplicate", "title": "Where to store TcpStream to share with BufReader and BufWriter", "body": "<p>I'm trying to build a simple client crate for a program that has it's own simple TCP protocol.</p>\n\n<p>Most of the communication works by sending a command and immediately reading a single line response. Some of the commands need to read multiple responses. I've been using <code>BufReader::read_line()</code> to read single lines but this seems to fall down when it reads too much, the second <code>read_line()</code> can be missing the start of the line.</p>\n\n<p>My assumption is that I'm meant to be keeping the <code>BufReader</code> around so that it keeps its internal state.</p>\n\n<p>I'm doing this by passing a reference of the <code>TcpStream</code> to the <code>BufReader</code> and <code>BufWriter</code> but I'm getting \u201cborrowed value does not live long enough\u201d. My question is; where do I \u201cstore\u201d the <code>TcpStream</code> so that it does live long enough?</p>\n\n<p>I've tried different iterations of trying to store the <code>stream</code> on the <code>Connection</code> struct but I can't seem to get it to work.</p>\n\n<p>Here is a cut down version of the code:</p>\n\n<pre><code>use std::io::{self, BufReader, BufWriter};\nuse std::net::TcpStream;\n\n#[derive(Debug)]\npub struct Connection&lt;'a&gt; {\n    reader: BufReader&lt;&amp;'a TcpStream&gt;,\n    writer: BufWriter&lt;&amp;'a TcpStream&gt;,\n}\n\nimpl&lt;'a&gt; Connection&lt;'a&gt; {\n    pub fn new(stream: TcpStream) -&gt; io::Result&lt;Self&gt; {\n        let connection = Self {\n            reader: BufReader::new(&amp;stream),\n            writer: BufWriter::new(&amp;stream),\n        };\n\n        Ok(connection)\n    }\n}\n\npub struct Search&lt;'a&gt; {\n    connection: Connection&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; Search&lt;'a&gt; {\n    // fn new(stream: &amp;'a TcpStream) -&gt; Self {\n    fn new() -&gt; Self {\n        let stream = TcpStream::connect(\"127.0.0.1:100\").unwrap();\n        let connection = Connection::new(stream).unwrap();\n\n        Self { connection }\n    }\n}\n\nfn main() {\n    // let stream = TcpStream::connect(\"127.0.0.1:100\").unwrap();\n    // Search::new(&amp;stream);\n\n    Search::new();\n}\n</code></pre>\n\n<p>If I uncomment the commented-out lines it works.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 138, "user_id": 10827651, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-JNBmJA0hPw0/AAAAAAAAAAI/AAAAAAAAADc/FCzwJHCNpfE/photo.jpg?sz=128", "display_name": "Niall Moore", "link": "https://stackoverflow.com/users/10827651/niall-moore"}, "edited": false, "score": 2, "creation_date": 1555903627, "post_id": 55788725, "comment_id": 98247606, "body": "What have you tried so far?"}, {"owner": {"reputation": 107, "user_id": 10474463, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3OhE_gdVLk/AAAAAAAAAAI/AAAAAAAAAgQ/lA1l0vYVtDU/photo.jpg?sz=128", "display_name": "Ricardo Prieto", "link": "https://stackoverflow.com/users/10474463/ricardo-prieto"}, "reply_to_user": {"reputation": 138, "user_id": 10827651, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-JNBmJA0hPw0/AAAAAAAAAAI/AAAAAAAAADc/FCzwJHCNpfE/photo.jpg?sz=128", "display_name": "Niall Moore", "link": "https://stackoverflow.com/users/10827651/niall-moore"}, "edited": false, "score": 0, "creation_date": 1555903989, "post_id": 55788725, "comment_id": 98247648, "body": "Hi I tried <code>println!(&quot;{:?}&quot;, vec.sort());</code> and <code>println!(&quot;{}&quot;, vec.sort_by(|a,b| b.cmp(a)));</code> and both response is <code>()</code>"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 2, "creation_date": 1555909686, "post_id": 55788725, "comment_id": 98248570, "body": "The response () is because the sort method modifies the vector itself."}, {"owner": {"reputation": 107, "user_id": 10474463, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3OhE_gdVLk/AAAAAAAAAAI/AAAAAAAAAgQ/lA1l0vYVtDU/photo.jpg?sz=128", "display_name": "Ricardo Prieto", "link": "https://stackoverflow.com/users/10474463/ricardo-prieto"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1555910938, "post_id": 55788725, "comment_id": 98248821, "body": "Thanks for your answer @SvetlinZarev , I&#39;m new in Rust, the question can be very silly."}], "answers": [{"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 12, "last_activity_date": 1555907095, "creation_date": 1555907095, "answer_id": 55789085, "question_id": 55788725, "link": "https://stackoverflow.com/questions/55788725/how-do-i-sort-a-vector-of-strings-alphabetically/55789085#55789085", "title": "How do I sort a vector of Strings alphabetically?", "body": "<p><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.sort\" rel=\"noreferrer\"><code>sort</code></a> function is defined on slices (and on <code>Vec</code>s, as they can <code>Deref</code> to slices) as <code>pub fn sort(&amp;mut self)</code>, i.e. it performs sorting <em>in place</em>, mutating the existing piece of data. So to achieve what you're trying to do, you can try the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut vec = Vec::new();\n    vec.push(\"richard\");\n    vec.push(\"charles\");\n    vec.push(\"Peter\");\n    vec.sort();\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n\n<p>Unhappily, this isn't quite the thing you want, since this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fd99ca1fb8ced6abc7c45329045ae256\" rel=\"noreferrer\">will sort \"Peter\" before \"charles\"</a> - the default comparator of strings is case-sensitive (in fact, it's even locale-agnostic, since it <a href=\"https://doc.rust-lang.org/std/primitive.str.html#impl-Ord\" rel=\"noreferrer\">compares basing on Unicode code points</a>). So, if you want to perform case-insensitive sorting, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=02f5da845c95cfb23e2e265069f34e60\" rel=\"noreferrer\">here's the modification</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut vec = Vec::new();\n    vec.push(\"richard\");\n    vec.push(\"charles\");\n    vec.push(\"Peter\");\n    vec.sort_by(|a, b| a.to_lowercase().cmp(&amp;b.to_lowercase()));\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n"}], "owner": {"reputation": 107, "user_id": 10474463, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3OhE_gdVLk/AAAAAAAAAAI/AAAAAAAAAgQ/lA1l0vYVtDU/photo.jpg?sz=128", "display_name": "Ricardo Prieto", "link": "https://stackoverflow.com/users/10474463/ricardo-prieto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3096, "favorite_count": 0, "closed_date": 1555935615, "accepted_answer_id": 55789085, "answer_count": 1, "score": 6, "last_activity_date": 1555935674, "creation_date": 1555902880, "last_edit_date": 1555935611, "question_id": 55788725, "link": "https://stackoverflow.com/questions/55788725/how-do-i-sort-a-vector-of-strings-alphabetically", "closed_reason": "Duplicate", "title": "How do I sort a vector of Strings alphabetically?", "body": "<p>I want to order a Strings vector alphabetically</p>\n\n<pre><code>fn main() {\n    let mut vec = Vec::new();\n    vec.push(\"richard\");\n    vec.push(\"charles\");\n    vec.push(\"Peter\");\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n\n<p>I tried <code>println!(\"{:?}\", vec.sort());</code> and <code>println!(\"{}\", vec.sort_by(|a,b| b.cmp(a)));</code> and both response is <code>()</code>.</p>\n\n<p>And I expect the following result</p>\n\n<pre><code>[\"charles\", \"Peter\", \"richard\"]\n</code></pre>\n"}, {"tags": ["rust", "nix"], "answers": [{"comments": [{"owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "edited": false, "score": 0, "creation_date": 1563123394, "post_id": 56094481, "comment_id": 100587766, "body": "I finally got back to this, and I have a complete project that I&#39;m trying to package. Unfortunately, while things appear to be right and I am certainly seeing some version of Rust start to build things, it is always failing in attempting to build libc <code>Failed to get rustc version</code>. This is very frustrating because the shell environment builds libc flawlessly. So, clearly, something is quite different."}, {"owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "edited": false, "score": 0, "creation_date": 1563142934, "post_id": 56094481, "comment_id": 100591992, "body": "Finally resolved. Nix 18.09 had a bug in the Rust build infrastructure, which has been fixed in Nix 19.03. The Mozilla overlay is necessary for the <code>rustChannelOf</code> function, which provides binary patchups that are needed for running Rust on NixOS. buildRustCrate in nixpkgs-19.03 allows rustc to be overridden now."}], "tags": [], "owner": {"reputation": 415, "user_id": 6096134, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a184a33aaad53c49455ba7424e7dd6?s=128&d=identicon&r=PG&f=1", "display_name": "erictapen", "link": "https://stackoverflow.com/users/6096134/erictapen"}, "is_accepted": true, "score": 3, "last_activity_date": 1557610988, "creation_date": 1557610988, "answer_id": 56094481, "question_id": 55787068, "link": "https://stackoverflow.com/questions/55787068/how-can-i-use-a-specific-build-of-rust-in-a-nixpkgs-derivation/56094481#56094481", "title": "How can I use a specific build of Rust in a nixpkgs derivation?", "body": "<p>I recently had a similar problem, so I can provide my approach here. My version of rustc came from the <a href=\"https://github.com/mozilla/nixpkgs-mozilla#rust-overlay\" rel=\"nofollow noreferrer\">Mozilla overlay</a>, but I guess the difference should be minimal.</p>\n\n<pre><code>{ moz_overlay ? builtins.fetchTarball https://github.com/mozilla/nixpkgs-ozilla/archive/master.tar.gz\n, nixpkgs ? &lt;nixpkgs&gt;\n}:\nlet\n  moz_nixpkgs = import \"${nixpkgs}\" { overlays = [ (import \"${moz_overlay}\") ]; };\n  rustc = (moz_nixpkgs.rustChannelOf { date = \"2019-03-15\"; channel = \"nightly\"; }).rust;\n  crates = (import ./Cargo.nix {\n    inherit (moz_nixpkgs) lib buildPlatform buildRustCrateHelpers fetchgit;\n    buildRustCrate = moz_nixpkgs.buildRustCrate.override {\n      inherit rustc; # I guess that injection happens here?\n    };\n    cratesIO = import ./nix/crates-io.nix {\n      inherit (moz_nixpkgs) lib buildRustCrate buildRustCrateHelpers;\n    };\n  });\nin {\n  myapp = crates.myapp {};\n}\n\n</code></pre>\n"}], "owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 442, "favorite_count": 1, "accepted_answer_id": 56094481, "answer_count": 1, "score": 2, "last_activity_date": 1557610988, "creation_date": 1555883438, "last_edit_date": 1555886377, "question_id": 55787068, "link": "https://stackoverflow.com/questions/55787068/how-can-i-use-a-specific-build-of-rust-in-a-nixpkgs-derivation", "title": "How can I use a specific build of Rust in a nixpkgs derivation?", "body": "<p>I am trying to build a derivation for one of my executable projects and it requires a version of Rust that is not yet in the nixpkgs channels, so I have built a nix derivation that installs that version that I need:</p>\n\n<pre><code>{ mkDerivation, stdenv, fetchurl }:\nrec {\n    version = \"1.33.0\";\n    platform = mkDerivation rec {\n        ver = version;\n        name = \"rust-${ver}\";\n        platform = if stdenv.system == \"x86_64-linux\" then \"x86_64-unknown-linux-gnu\"\n            else if stdenv.system == \"x86_64-darwin\" then \"x86_64-apple-darwin\"\n            else abort \"unsupported platform\";\n        pkgSha = if stdenv.system == \"x86_64-linux\" then \"6623168b9ee9de79deb0d9274c577d741ea92003768660aca184e04fe774393f\"\n            else if stdenv.system == \"x86_64-darwin\" then \"864e7c074a0b88e38883c87c169513d072300bb52e1d320a067bd34cf14f66bd\"\n            else abort \"unsupported platform\";\n\n        src = fetchurl {\n            url = \"https://static.rust-lang.org/dist/rust-${ver}-${platform}.tar.gz\";\n            sha256 = pkgSha;\n        };\n\n        phases = [\"unpackPhase\" \"installPhase\"];\n        installPhase = ''\n            mkdir -p $out\n            ./install.sh --prefix=$out\n        '';\n    };\n\n    rustc = platform;\n    cargo = platform;\n}\n</code></pre>\n\n<p>This is very easy for me to incorporate into my shell environment, as I just have to include <code>buildInputs = [ rust.rustc rust.cargo ]</code>, and immediately I have Rust 1.33.</p>\n\n<p>I used carnix-0.9.8 to set up a <code>Cargo.nix</code>, <code>crates-io.nix</code>, and <code>crates-io.list</code> file. Because of that, the libraries that I depend on get installed into the nix store like any other derivation, and my build process theoretically ends up not using Cargo at all.</p>\n\n<p>I already require a macOS native security library, so I have already created a <code>default.nix</code> file:</p>\n\n<pre><code>{ pkgs ? import &lt;nixpkgs-18.09&gt; {}\n, unstable ? import &lt;nixpkgs&gt; {}\n, stdenv ? pkgs.stdenv\n, licenses ? pkgs.lib.licenses\n, maintainers ? pkgs.stdenv.maintainers }:\nlet\n    rust = import ./nixpkgs/rust-1.33.nix {\n      mkDerivation = pkgs.stdenv.mkDerivation;\n      fetchurl = pkgs.fetchurl;\n      stdenv = pkgs.stdenv;\n    };\n\n    cratesIO = import ./crates-io.nix {\n        lib = stdenv.lib;\n        buildRustCrate = unstable.buildRustCrate;\n        buildRustCrateHelpers = unstable.buildRustCrateHelpers;\n    };\n    cargo = ...\n\n    frameworks = ...\n    security = ...\n    orizentic = (cargo.orizentic {}).override { ... };\n\nin pkgs.symlinkJoin rec {\n    ...\n}\n</code></pre>\n\n<p>And then I set up a <code>build.rs</code> file that errors out if the Rust version being used for building isn't at least version 1.33.0.</p>\n\n<p>How do I inject <em>my</em> Rust derivation into <code>buildRustCrate</code> and <code>buildRustCrateHelpers</code>?</p>\n\n<p>For reference, here is <a href=\"https://github.com/luminescent-dreams/orizentic/tree/nix-packaging/rust\" rel=\"nofollow noreferrer\">the entire Rust version of my project</a>.</p>\n"}, {"tags": ["process", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1555878597, "post_id": 55786441, "comment_id": 98243541, "body": "Why are there escaped quotes inside your call to <code>new</code>?"}, {"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555878717, "post_id": 55786441, "comment_id": 98243568, "body": "@Shepmaster Right, solved. I need those to start an executable from cmd and figured I would need them here too. Can&#39;t see how the OS Error comes from that"}], "answers": [{"tags": [], "owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "is_accepted": false, "score": 0, "last_activity_date": 1555878754, "creation_date": 1555878754, "answer_id": 55786511, "question_id": 55786441, "link": "https://stackoverflow.com/questions/55786441/permission-denied-error-when-trying-to-start-another-executable-from-rust/55786511#55786511", "title": "Permission denied Error when trying to start another executable from Rust", "body": "<p>When removing the escaped quotes( which I set as they are needed to start the process in cmd.exe) it works.</p>\n"}], "owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 199, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1555878754, "creation_date": 1555878111, "question_id": 55786441, "link": "https://stackoverflow.com/questions/55786441/permission-denied-error-when-trying-to-start-another-executable-from-rust", "title": "Permission denied Error when trying to start another executable from Rust", "body": "<p>I am trying to start a subprocess in Rust. It is another executable.</p>\n\n<p>Minimal Code looks like this: </p>\n\n<pre><code>use std::process::{Command, Stdio};\n\nfn main() {\n    let mut child = Command::new(\"\\\"./target/release/path_to_binary.exe\\\"\")\n        .stdin(Stdio::piped())\n        .stdout(Stdio::piped())\n        .output()\n        .expect(\"Failed to execute command!\");\n}\n</code></pre>\n\n<p>I get the following error: </p>\n\n<pre><code>thread 'main' panicked at 'Failed to execute command!: Os { code: 5, kind: Permi\nssionDenied, message: \"Zugriff verweigert\" }', src\\libcore\\result.rs:997:5\n</code></pre>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1555879496, "post_id": 55786404, "comment_id": 98243743, "body": "Using such a construct seems like a bad idea. In Rust, the type system will prevent you from accidentally using the success value in an error case and vice versa, but nothing provides that security in JavaScript. Returning a pair of values means you can trivially ignore the error, and in fact are almost <i>encouraged</i> to do so. It seems a better idea to use the language&#39;s natural error handling strategy."}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1555881877, "post_id": 55786404, "comment_id": 98244259, "body": "well, I wanted to ask about best practices for error handling across the boundary of Rust / wasm / Javascript, but stackoverflow warned me against that.  The examples I&#39;ve found so far don&#39;t seem to illustrate error handling."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1555898260, "post_id": 55786404, "comment_id": 98246761, "body": "Isn&#39;t <code>try</code> / <code>catch</code> the proper error handling strategy for JavaScript? Using a <code>Result</code> is certainly the correct one for Rust. I&#39;d expect that the automatic conversion of a failed <code>Result</code> into an exception <b>is</b> the best practice. <code>var [greeting, err] = wasm.hello(&quot;world&quot;)</code> feels very Go-like, not idiomatic JS."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555899119, "post_id": 55786404, "comment_id": 98246904, "body": "<a href=\"https://rustwasm.github.io/docs/wasm-bindgen/reference/types/result.html\" rel=\"nofollow noreferrer\">rustwasm.github.io/docs/wasm-bindgen/reference/types/&hellip;</a>, I don&#39;t see any information about an alternative."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555899142, "post_id": 55786404, "comment_id": 98246913, "body": "@Stargateur The wasm-bindgen guide <a href=\"https://rustwasm.github.io/docs/wasm-bindgen/reference/types/result.html\" rel=\"nofollow noreferrer\">has a section on Supported Types</a>: <i>Whenever <code>Ok(val)</code> is encountered it&#39;s converted to JS and handed off, and whenever <code>Err(error)</code> is encountered an exception is thrown in JS with <code>error</code>.</i>"}, {"owner": {"reputation": 691, "user_id": 1510777, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e1f1271d3e099ca520c334f22d27ed?s=128&d=identicon&r=PG", "display_name": "Aaron Queenan", "link": "https://stackoverflow.com/users/1510777/aaron-queenan"}, "edited": false, "score": 0, "creation_date": 1566524210, "post_id": 55786404, "comment_id": 101692248, "body": "At least for undefined and null, throwing an exception doesn&#39;t make sense because only a local exception handler could understand it. <a href=\"https://github.com/rustwasm/wasm-bindgen/issues/1734\" rel=\"nofollow noreferrer\">github.com/rustwasm/wasm-bindgen/issues/1734</a>."}], "owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 923, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1555879264, "creation_date": 1555877740, "last_edit_date": 1555879264, "question_id": 55786404, "link": "https://stackoverflow.com/questions/55786404/how-to-handle-rusts-errors-from-result-as-a-return-value-instead-of-throwing-an", "title": "How to handle Rust&#39;s errors from Result as a return value instead of throwing an exception in JavaScript?", "body": "<p>I'd like to write JavaScript like:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var [greeting, err] = wasm.hello(\"world\");\n</code></pre>\n\n<p>It appears that if I use the standard <code>Result</code> type, then I need to use a <code>try</code>/<code>catch</code>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>try {\n  greeting = wasm.hello()\n}\ncatch(error) {\n  console.error(error);\n}\n</code></pre>\n\n<p>Rust code that generates the error: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[wasm_bindgen]\npub fn hello(name: &amp;str) -&gt; Result&lt;String, JsValue&gt; {\n    if name == \"\" {\n        return Err(JsValue::from(\"name required!\"));\n    }\n\n    let greeting = format!(\"Hello {}!\", name);\n\n    Ok(greeting)\n}\n</code></pre>\n\n<p>This is based on the example in <a href=\"https://github.com/rustwasm/rust-parcel-template\" rel=\"nofollow noreferrer\">rust-parcel-template</a>. The full webapp with Rust + WASM + JS with the little example above is on <a href=\"https://github.com/ultrasaurus/hello-rust-parcel/blob/hello/js/index.js\" rel=\"nofollow noreferrer\">GitHub</a>.  </p>\n"}, {"tags": ["generics", "types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 6108, "user_id": 87207, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/677f6ada59932964b9150aba814fedd6?s=128&d=identicon&r=PG", "display_name": "Willi Ballenthin", "link": "https://stackoverflow.com/users/87207/willi-ballenthin"}, "edited": false, "score": 0, "creation_date": 1555910968, "post_id": 55786122, "comment_id": 98248828, "body": "thanks for the rapid response and providing an example in the playground!"}], "tags": [], "owner": {"reputation": 183, "user_id": 5019531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21b6a4e99e6e1b47d32090ad238de5de?s=128&d=identicon&r=PG&f=1", "display_name": "Pavel Arnold", "link": "https://stackoverflow.com/users/5019531/pavel-arnold"}, "is_accepted": true, "score": 7, "last_activity_date": 1555879088, "last_edit_date": 1555879088, "creation_date": 1555875639, "answer_id": 55786122, "question_id": 55785858, "link": "https://stackoverflow.com/questions/55785858/can-i-provide-a-group-of-related-types-with-a-single-type-parameter-in-rust/55786122#55786122", "title": "Can I provide a group of related types with a single type parameter in Rust?", "body": "<p>You can do something similar to your made up syntax using\ntraits with associated types and zero sized structs as markers.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Arch {\n    type VA;\n    type RVA;\n}\n\n#[derive(Debug)]\nstruct Arch32;\nimpl Arch for Arch32 {\n    type VA = u32;\n    type RVA = i32;\n}\n\n#[derive(Debug)]\nstruct Arch64;\nimpl Arch for Arch64 {\n    type VA = u64;\n    type RVA = i64;\n}\n\n#[derive(Debug)]\nstruct Header&lt;T: Arch&gt; {\n    image_base: T::VA,\n    section_offsets: Vec&lt;T::RVA&gt;,\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2015&amp;gist=6ddf226599b7d21ef583486fd660931e\" rel=\"noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 6108, "user_id": 87207, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/677f6ada59932964b9150aba814fedd6?s=128&d=identicon&r=PG", "display_name": "Willi Ballenthin", "link": "https://stackoverflow.com/users/87207/willi-ballenthin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 1, "accepted_answer_id": 55786122, "answer_count": 1, "score": 4, "last_activity_date": 1556038720, "creation_date": 1555873693, "last_edit_date": 1556038720, "question_id": 55785858, "link": "https://stackoverflow.com/questions/55785858/can-i-provide-a-group-of-related-types-with-a-single-type-parameter-in-rust", "title": "Can I provide a group of related types with a single type parameter in Rust?", "body": "<p>I'm developing a library that works with PE files for both 32- and 64-bit architectures. Some structures will reference both virtual addresses (VA, e.g. <code>ImageBase</code>) and relative virtual addresses (RVA, e.g. section offset), for example:</p>\n\n<pre><code>type VA32 = u32;\ntype RVA32 = i32;\n\nstruct Header32 {\n    image_base: VA32,\n    section_offsets: Vec&lt;RVA32&gt;,\n}\n\nlet hdr = Header32 { /* ... */ };\n</code></pre>\n\n<p>When dealing with 32-bit PE files, a VA should be 32-bits and unsigned, and an RVA should be 32-bits and signed. For 64-bit PE files, both types should be 64-bits.</p>\n\n<p>I'd like my structs to use the appropriate width for these types, probably by making them generic:</p>\n\n<pre><code>struct Header&lt;VA, RVA&gt; {\n    image_base: VA,\n    section_offsets: Vec&lt;RVA&gt;,\n}\n\ntype VA32 = u32;\ntype RVA32 = i32;\n\nlet hdr: Header&lt;VA32, RVA32&gt; = Header { /* ... */ };\n</code></pre>\n\n<p>But <code>VA32</code> only ever goes with <code>RVA32</code>, and <code>VA64</code> should only ever be provided with <code>RVA64</code>. Is there an idiomatic way that I can express this? </p>\n\n<p>Using a completely made up syntax, I desire to do something like:</p>\n\n<pre><code>struct Header&lt;Arch&gt; {\n    image_base: arch.VA,\n    section_offsets: Vec&lt;arch.RVA&gt;,\n}\n\ntype Arch32 = { VA: u32, RVA: i32 }\n\nlet hdr: Header&lt;Arch32&gt; = Header { /* ... */ };\n</code></pre>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 222, "user_id": 10084665, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-FnOW9iD0N1U/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7pwrO--yv-cnkbhPgCtsqaJLa8xhQ/mo/photo.jpg?sz=128", "display_name": "FireCubez", "link": "https://stackoverflow.com/users/10084665/firecubez"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555864836, "post_id": 55784587, "comment_id": 98240078, "body": "@Shepmaster Strange, it compiles for me on rustc <code>1.32.0</code>"}, {"owner": {"reputation": 222, "user_id": 10084665, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-FnOW9iD0N1U/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7pwrO--yv-cnkbhPgCtsqaJLa8xhQ/mo/photo.jpg?sz=128", "display_name": "FireCubez", "link": "https://stackoverflow.com/users/10084665/firecubez"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555865033, "post_id": 55784587, "comment_id": 98240131, "body": "@Shepmaster Well that is pretty much what my code is. I haven&#39;t changed anything except the fact that my vector is wrapped in another vector."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555865145, "post_id": 55784587, "comment_id": 98240158, "body": "My comment was before you edited your comment to include the version. The version is part of the MCVE; I&#39;ve edited your question to include the pertinent details."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555865220, "post_id": 55784587, "comment_id": 98240176, "body": "You are encouraged to start using <code>dyn</code> to denote trait objects: <a href=\"https://stackoverflow.com/q/50650070/155423\">What does \u201cdyn\u201d mean in a type?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555865280, "post_id": 55784587, "comment_id": 98240191, "body": "I won&#39;t have time to answer now, but I&#39;m pretty sure your current code is broken and I don&#39;t think there&#39;s an easy way without something like <a href=\"https://stackoverflow.com/q/33687447/155423\">How to get a reference to a concrete type from a trait object?</a>"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 1, "creation_date": 1555868447, "post_id": 55784587, "comment_id": 98240970, "body": "Why do you need to get a reference to the concrete type in the first place? Can you expose the necessary behavior via the trait instead, so that you can simply use the trait object?"}, {"owner": {"reputation": 222, "user_id": 10084665, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-FnOW9iD0N1U/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7pwrO--yv-cnkbhPgCtsqaJLa8xhQ/mo/photo.jpg?sz=128", "display_name": "FireCubez", "link": "https://stackoverflow.com/users/10084665/firecubez"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1555868890, "post_id": 55784587, "comment_id": 98241060, "body": "@apemanzilla The actual context is that the <code>add_inst</code> function is in an impl for the concrete type and is named <code>new</code>. Usually <code>new</code> functions return the concrete type."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555883376, "post_id": 55784587, "comment_id": 98244581, "body": "<i>Usually <code>new</code> functions return the concrete type</i> \u2014 <code>new</code> doesn&#39;t <i>usually</i> add the returned value to some vector of values or return a reference either. Perhaps you want to rename your function and/or drop returning the concrete type."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555901239, "post_id": 55784587, "comment_id": 98247245, "body": "Why not just return as <code>dyn Trait</code> ? Why make your life complicated ?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555882664, "post_id": 55786761, "comment_id": 98244423, "body": "Can you point to any guarantees that creating a trait object from a boxed value doesn&#39;t move/copy/invalidate the pointer?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555884588, "post_id": 55786761, "comment_id": 98244811, "body": "@Shepmaster: I don&#39;t have any direct reference that a pointer to a boxed value is not invalidated when casting to a trait object. But from I understand  I expect that to be true from the way boxes and allocators work. My code works also with <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=6bf0054788fed8d5bed5b88dfc01b9c3\" rel=\"nofollow noreferrer\">pinned boxes</a>, which I interpret as evidence that this code is indeed safe."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555886439, "post_id": 55786761, "comment_id": 98245132, "body": "@Shepmaster: Reading a bit more, <code>Box&lt;X&gt;</code> is converted into <code>Box&lt;T&gt;</code> via <a href=\"https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\" rel=\"nofollow noreferrer\"><code>CoerceUnsized</code></a> trait, that has no function members, hence the coercion is done automatically by the compiler, and no reallocation is possible. Also note that this also works with <code>Rc&lt;T&gt;</code> and <code>Arc&lt;T&gt;</code> and here the object <i>must not</i> be moved."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555886513, "post_id": 55786761, "comment_id": 98245148, "body": "I&#39;d certainly <i>hope</i> that such a transformation couldn&#39;t do anything, but having <i>extra</i> certainty with unsafe code is always the right thing, IMO."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 3, "last_activity_date": 1555887263, "last_edit_date": 1555887263, "creation_date": 1555880878, "answer_id": 55786761, "question_id": 55784587, "link": "https://stackoverflow.com/questions/55784587/how-do-i-return-a-reference-to-a-concrete-type-that-was-added-to-a-vector-of-tra/55786761#55786761", "title": "How do I return a reference to a concrete type that was added to a vector of trait objects?", "body": "<p>I think that this code is safe:</p>\n\n<pre><code>fn add_inst(vec: &amp;mut Vec&lt;Box&lt;dyn T&gt;&gt;) -&gt; &amp;X {\n    let x = X {};\n    let b = Box::new(x);\n    let ptr = &amp;*b as *const X;\n    vec.push(b);\n    unsafe { &amp;*ptr }\n}\n</code></pre>\n\n<p>The trick is to save a raw pointer to <code>*const X</code> before converting it to a <code>Box&lt;dyn T&gt;</code>. Then you can convert it back to a reference before returning it from the function.\nIt is safe because a boxed value is never moved, (unless it it moved out of the <code>Box</code>, of course), so <code>ptr</code> survives the cast of <code>b</code> into <code>Box&lt;dyn T&gt;</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1555887034, "last_edit_date": 1555887034, "creation_date": 1555882543, "answer_id": 55786974, "question_id": 55784587, "link": "https://stackoverflow.com/questions/55784587/how-do-i-return-a-reference-to-a-concrete-type-that-was-added-to-a-vector-of-tra/55786974#55786974", "title": "How do I return a reference to a concrete type that was added to a vector of trait objects?", "body": "<p>Your \"ugly hack\" is actually completely incorrect and unsafe. You were unlucky that Rust 1.32 doesn't report the error, but thankfully Rust 1.34 does.</p>\n\n<p>When you store a boxed value, you create a <em>thin pointer</em>. This takes up the platform-native size of an integer (e.g. 32-bit on 32-bit x86, 64-bit on 64-bit x86, etc.):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+----------+\n| pointer  |\n| (0x1000) |\n+----------+\n</code></pre>\n\n<p>When you store a boxed trait object, you create a <em>fat pointer</em>. This contains the same pointer to the data and a reference to the <em>vtable</em>. This pointer is <strong>two</strong> native integers in size:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+----------+----------+\n| pointer  | vtable   |\n| (0x1000) | (0xBEEF) |\n+----------+----------+\n</code></pre>\n\n<p>By attempting to perform a transmute from the trait object to the reference, you are losing one of those pointers, but it's <strong>not defined which one</strong>. There's no guarantee which comes first: the data pointer or the vtable.</p>\n\n<p>One solution would use <a href=\"https://doc.rust-lang.org/std/raw/struct.TraitObject.html\" rel=\"nofollow noreferrer\"><code>std::raw::TraitObject</code></a>, but this is unstable because the layout of fat pointers is still up in the air.</p>\n\n<p>The solution I would recommend, which requires no <code>unsafe</code> code, is to use <code>Any</code>:</p>\n\n<pre><code>use std::any::Any;\n\ntrait T: Any {}\n\nstruct X {}\nimpl T for X {}\n\nfn add_inst(vec: &amp;mut Vec&lt;Box&lt;dyn T&gt;&gt;) -&gt; &amp;X {\n    let x = X {};\n    vec.push(Box::new(x));\n    let l = vec.last().unwrap();\n    Any::downcast_ref(l).unwrap()\n}\n</code></pre>\n\n<p>If you couldn't / don't want to use <code>Any</code>, <a href=\"https://stackoverflow.com/questions/47489449/why-can-comparing-two-seemingly-equal-pointers-with-return-false#comment81937050_47490007\">I've been told</a> that casting a trait object pointer to a pointer to a concrete type will only keep the data pointer. Unfortunately, I cannot find an official reference for this, which means I can't fully vouch for this code, although it empirically works: </p>\n\n<pre><code>fn add_inst(vec: &amp;mut Vec&lt;Box&lt;dyn T&gt;&gt;) -&gt; &amp;X {\n    let x = X {};\n    vec.push(Box::new(x));\n    let last: &amp;dyn T = &amp;**vec.last().unwrap();\n\n    // I copied this code from Stack Overflow without reading\n    // it and it may not actually be safe.\n    unsafe {\n        let trait_obj_ptr = last as *const dyn T;\n        let value_ptr = trait_obj_ptr as *const X;\n        &amp;*value_ptr\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47489449/155423\">Why can comparing two seemingly equal pointers with == return false?</a></li>\n<li><a href=\"https://stackoverflow.com/q/33687447/155423\">How to get a reference to a concrete type from a trait object?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28280035/155423\">Accessing the last element of a Vec or a slice</a></li>\n</ul>\n"}], "owner": {"reputation": 222, "user_id": 10084665, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-FnOW9iD0N1U/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7pwrO--yv-cnkbhPgCtsqaJLa8xhQ/mo/photo.jpg?sz=128", "display_name": "FireCubez", "link": "https://stackoverflow.com/users/10084665/firecubez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 362, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1555887263, "creation_date": 1555864338, "last_edit_date": 1555883201, "question_id": 55784587, "link": "https://stackoverflow.com/questions/55784587/how-do-i-return-a-reference-to-a-concrete-type-that-was-added-to-a-vector-of-tra", "title": "How do I return a reference to a concrete type that was added to a vector of trait objects?", "body": "<p>In this code, I take a vector, create a struct instance, and add it to the vector boxed:</p>\n\n<pre><code>trait T {}\n\nstruct X {}\nimpl T for X {}\n\nfn add_inst(vec: &amp;mut Vec&lt;Box&lt;T&gt;&gt;) -&gt; &amp;X {\n    let x = X {};\n    vec.push(Box::new(x));\n    // Ugly, unsafe hack I made\n    unsafe { std::mem::transmute(&amp;**vec.last().unwrap()) }\n}\n</code></pre>\n\n<p>Obviously, it uses <code>mem::transmute</code>, which makes me feel it's not the right way to do this. Is this ugly hack the only way to do it?</p>\n\n<p>Additionally, while this compiles in Rust 1.32, it fails in Rust 1.34:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0512]: cannot transmute between types of different sizes, or dependently-sized types\n  --&gt; src/lib.rs:10:14\n   |\n10 |     unsafe { std::mem::transmute(&amp;**vec.last().unwrap()) }\n   |              ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: source type: `&amp;dyn T` (128 bits)\n   = note: target type: `&amp;X` (64 bits)\n</code></pre>\n"}, {"tags": ["postgresql", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555854344, "post_id": 55783064, "comment_id": 98237321, "body": "What purpose does providing the struct <code>Thread</code> serve? Is it <i>required</i> to reproduce the error? Please ensure your <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is <b>minimal</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555854525, "post_id": 55783064, "comment_id": 98237366, "body": "Please also attempt to format your question in a readable manner. The editor provides UI buttons to help you format it correctly, there is <a href=\"https://stackoverflow.com/editing-help\">a help document</a> if you are unfamiliar with Markdown, you can look at the existing edits that have been made to your question, and there&#39;s a live preview so you know what you are going to submit."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555854732, "post_id": 55783064, "comment_id": 98237415, "body": "The code you have provided does not report the error you are asking about. Instead: <i>The attribute <code>table_name</code> is currently unknown to the compiler and may have meaning added to it in the future</i>. Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/55783064/edit\">edit</a> your question to include it. Try to reproduce your error in a <b>brand new Cargo project</b>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> and <a href=\"https://stackoverflow.com/tags/rust-diesel/info\">Diesel tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555854842, "post_id": 55783064, "comment_id": 98237448, "body": "Is it <b>required</b> to include all of those dependencies, such as &quot;sparkpost&quot;, to produce the error? Are the fields <code>Title</code>, <code>Bounty</code>, etc <b>required</b>? Please ensure your <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is <b>minimal</b>."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user583824"}, "edited": false, "score": 2, "creation_date": 1555856329, "post_id": 55783407, "comment_id": 98237799, "body": "Thank you Shepmaster. A small aside, I had to downgrade my BigDecimal version to 0.0.14. Does diesel have compatibility versions listings or the like for external crate dependencies such as this?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555856721, "post_id": 55783407, "comment_id": 98237906, "body": "@user583824 that&#39;s why I provided the &quot;see also&quot; link, which is how I figured it out."}, {"owner": {"reputation": 73, "user_id": 4360539, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qjlwY.jpg?s=128&g=1", "display_name": "mox", "link": "https://stackoverflow.com/users/4360539/mox"}, "edited": false, "score": 0, "creation_date": 1618507800, "post_id": 55783407, "comment_id": 118628611, "body": "If you are coming to this question with a similar problem but other types, also check the &quot;extras&quot; feature. I just spent two hours trying to figure out why my Date/NaiveDate would not work."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 14, "last_activity_date": 1555855328, "creation_date": 1555855328, "answer_id": 55783407, "question_id": 55783064, "link": "https://stackoverflow.com/questions/55783064/the-trait-dieselexpression-is-not-implemented-for-bigdecimalbigdecimal/55783407#55783407", "title": "the trait `diesel::Expression` is not implemented for `bigdecimal::BigDecimal`", "body": "<p>Diesel uses <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"noreferrer\">Cargo features</a> to opt-in to enhanced functionality.</p>\n\n<p>I haven't found a clear documentation page for these, but they are listed in <a href=\"https://github.com/diesel-rs/diesel/blob/v1.4.2/diesel/Cargo.toml\" rel=\"noreferrer\">its Cargo.toml</a>:</p>\n\n<pre><code>[features]\ndefault = [\"with-deprecated\", \"32-column-tables\"]\nextras = [\"chrono\", \"serde_json\", \"uuid\", \"deprecated-time\", \"network-address\", \"numeric\", \"r2d2\"]\nunstable = [\"diesel_derives/nightly\"]\nlarge-tables = [\"32-column-tables\"]\nhuge-tables = [\"64-column-tables\"]\nx32-column-tables = [\"32-column-tables\"]\n32-column-tables = []\nx64-column-tables = [\"64-column-tables\"]\n64-column-tables = [\"32-column-tables\"]\nx128-column-tables = [\"128-column-tables\"]\n128-column-tables = [\"64-column-tables\"]\npostgres = [\"pq-sys\", \"bitflags\", \"diesel_derives/postgres\"]\nsqlite = [\"libsqlite3-sys\", \"diesel_derives/sqlite\"]\nmysql = [\"mysqlclient-sys\", \"url\", \"diesel_derives/mysql\"]\nwith-deprecated = []\ndeprecated-time = [\"time\"]\nnetwork-address = [\"ipnetwork\", \"libc\"]\nnumeric = [\"num-bigint\", \"bigdecimal\", \"num-traits\", \"num-integer\"]\n</code></pre>\n\n<p>You need to enable the <strong>numeric</strong> feature and ensure you use a version of bigdecimal that is compatible with Diesel:</p>\n\n<pre><code>[dependencies]\ndiesel = { version = \"1.4.2\", features = [\"numeric\"] }\nbigdecimal = \"0.0.14\"\n</code></pre>\n\n<p>And the code compiles:</p>\n\n<pre><code>#[macro_use]\nextern crate diesel;\n\nuse crate::schema::threads;\nuse bigdecimal::BigDecimal;\n\nmod schema {\n    table! {\n        threads (id) {\n            id -&gt; Int4,\n            bounty -&gt; Numeric,\n        }\n    }\n}\n\n#[derive(Debug, Insertable)]\n#[table_name = \"threads\"]\npub struct InsertableThread {\n    pub bounty: BigDecimal,\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1588798542, "post_id": 61645094, "comment_id": 109042289, "body": "What does this answer have to do with the question, which is about <code>bigdecimal::BigDecimal</code>?"}, {"owner": {"reputation": 2261, "user_id": 1833602, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c3fbb2fac1915098cacb685ba8ca2013?s=128&d=identicon&r=PG", "display_name": "tobias47n9e", "link": "https://stackoverflow.com/users/1833602/tobias47n9e"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1588833708, "post_id": 61645094, "comment_id": 109052925, "body": "@Shepmaster Thanks for the comment. I added an explanation. When searching error messages it is really easy to end up on this page not having noticed that the error message is slightly different."}, {"owner": {"reputation": 1063, "user_id": 390491, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/652a230defd8c5852853b4421621f2e1?s=128&d=identicon&r=PG", "display_name": "Stanislav Dvoychenko", "link": "https://stackoverflow.com/users/390491/stanislav-dvoychenko"}, "edited": false, "score": 1, "creation_date": 1594302383, "post_id": 61645094, "comment_id": 111083475, "body": "I exactly came to this question because I reached 33 columns and should tell that given the verbosity of the error, here is my +1^32 for you."}, {"owner": {"reputation": 481, "user_id": 617232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1fd29e558765db544be2245cf953912?s=128&d=identicon&r=PG", "display_name": "Hoang Tran", "link": "https://stackoverflow.com/users/617232/hoang-tran"}, "edited": false, "score": 1, "creation_date": 1601143336, "post_id": 61645094, "comment_id": 113316251, "body": "this is exactly what happened to me. Thank you."}], "tags": [], "owner": {"reputation": 2261, "user_id": 1833602, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c3fbb2fac1915098cacb685ba8ca2013?s=128&d=identicon&r=PG", "display_name": "tobias47n9e", "link": "https://stackoverflow.com/users/1833602/tobias47n9e"}, "is_accepted": false, "score": 2, "last_activity_date": 1588833541, "last_edit_date": 1588833541, "creation_date": 1588798021, "answer_id": 61645094, "question_id": 55783064, "link": "https://stackoverflow.com/questions/55783064/the-trait-dieselexpression-is-not-implemented-for-bigdecimalbigdecimal/61645094#61645094", "title": "the trait `diesel::Expression` is not implemented for `bigdecimal::BigDecimal`", "body": "<p>You might reach this question by searching an error message that is really similar:</p>\n\n<pre><code>the trait `diesel::Expression` is not implemented for `(schema::..., schema::..., schema::...)`\n</code></pre>\n\n<p>This is just a reminder to count the number of columns you have in the <code>table!{}</code> macro because you might be reaching the default 32 column limit.</p>\n\n<p>According to the <a href=\"https://github.com/diesel-rs/diesel/blob/master/CHANGELOG.md#121---2018-04-11\" rel=\"nofollow noreferrer\">Diesel changelog</a> you should use the following features if you use more than the <strong>default 32 columns</strong>.</p>\n\n<h1>64 columns (<strong>Cargo.toml</strong>)</h1>\n\n<pre class=\"lang-toml prettyprint-override\"><code>diesel = { version = \"1.4\", features = [..., \"64-column-tables\"] }\n</code></pre>\n\n<h1>128 columns (<strong>Cargo.toml</strong>):</h1>\n\n<pre class=\"lang-toml prettyprint-override\"><code>diesel = { version = \"1.4\", features = [..., \"128-column-tables\"] }\n</code></pre>\n\n<p>Using more columns is not possible and might be a hint that the table design is not ideal (See: <a href=\"https://github.com/diesel-rs/diesel/issues/2312#issuecomment-591623303\" rel=\"nofollow noreferrer\">https://github.com/diesel-rs/diesel/issues/2312#issuecomment-591623303</a>).</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user583824"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4909, "favorite_count": 1, "accepted_answer_id": 55783407, "answer_count": 2, "score": 9, "last_activity_date": 1588833541, "creation_date": 1555852540, "last_edit_date": 1555855853, "question_id": 55783064, "link": "https://stackoverflow.com/questions/55783064/the-trait-dieselexpression-is-not-implemented-for-bigdecimalbigdecimal", "title": "the trait `diesel::Expression` is not implemented for `bigdecimal::BigDecimal`", "body": "<p>I am trying to create a struct that I can use in diesel for insertion. Specifically I am making the struct Insertable. On compile I get this error. </p>\n\n<p>I have a struct that I am trying to make <code>Insertable</code> via the derive attribute. I have a field called <code>Bounty</code> which is supposed to represent money, so I'm using <code>BigDecimal</code> as the type. Upon compilation, I get the error in the title. I've also tried using <code>f64</code> but that gives the same error.</p>\n\n<pre><code>#[macro_use]\nextern crate diesel;\nextern crate bigdecimal;\n\nmod schema {\n    use bigdecimal::BigDecimal;\n    table! {\n        Threads (Id) {\n            Id -&gt; Int8,\n            Views -&gt; Int4,\n            Points -&gt; Int4,\n            FlagPoints -&gt; Int4,\n            IsDisabled -&gt; Bool,\n            IsAnswered -&gt; Bool,\n            Bounty -&gt; Numeric,\n            Title -&gt; Varchar,\n            Body -&gt; Text,\n            UserId -&gt; Int8,\n            CreatedBy -&gt; Varchar,\n            CreatedOn -&gt; Timestamptz,\n            LastModifiedBy -&gt; Varchar,\n            LastModifiedOn -&gt; Timestamptz,\n        }\n    }\n\n    #[allow(non_snake_case)]\n    #[derive(Debug, Insertable)]\n    #[table_name = \"Threads\"]\n    pub struct InsertableThread { \n        pub Bounty: BigDecimal,\n        pub Title: String,\n        pub Body: String,\n        pub UserId: i64\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I have my struct inside it's own file and this is the entire code. The struct <code>Thread</code> compiles without issue. The error happens on <code>InsertableThread</code> as it is the one using <code>BigDecimal</code>. This is the error that results.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `bigdecimal::BigDecimal: diesel::Expression` is not satisfied\n  --&gt; src/main.rs:29:21\n   |\n29 |     #[derive(Debug, Insertable)]\n   |                     ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `bigdecimal::BigDecimal`\n   |\n   = note: required because of the requirements on the impl of `diesel::expression::AsExpression&lt;diesel::sql_types::Numeric&gt;` for `bigdecimal::BigDecimal`\n\nerror[E0277]: the trait bound `bigdecimal::BigDecimal: diesel::Expression` is not satisfied\n  --&gt; src/main.rs:29:21\n   |\n29 |     #[derive(Debug, Insertable)]\n   |                     ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `bigdecimal::BigDecimal`\n   |\n   = note: required because of the requirements on the impl of `diesel::Expression` for `&amp;bigdecimal::BigDecimal`\n   = note: required because of the requirements on the impl of `diesel::expression::AsExpression&lt;diesel::sql_types::Numeric&gt;` for `&amp;bigdecimal::BigDecimal`\n\nerror[E0277]: the trait bound `bigdecimal::BigDecimal: diesel::Expression` is not satisfied\n  --&gt; src/main.rs:29:21\n   |\n29 |     #[derive(Debug, Insertable)]\n   |                     ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `bigdecimal::BigDecimal`\n   |\n   = note: required because of the requirements on the impl of `diesel::Expression` for `&amp;'insert bigdecimal::BigDecimal`\n   = note: required because of the requirements on the impl of `diesel::expression::AsExpression&lt;diesel::sql_types::Numeric&gt;` for `&amp;'insert bigdecimal::BigDecimal`\n</code></pre>\n\n<p>I am using Rust 1.34, diesel 1.4.2 and Postgres 11.</p>\n\n<p>I am willing to change the types either in the database, Postgres, or in the Rust code. The database uses <code>numeric</code> and in the Rust code I've tried both <code>f64</code> and <code>BigDecimal</code>. I am also willing to implement the trait directly myself, but I need some guidance on how to do that as I could not find samples.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555810244, "post_id": 55779147, "comment_id": 98229879, "body": "TL;DR the duplicate: <code>&#39;static</code>"}, {"owner": {"reputation": 305, "user_id": 1362584, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0979f4ba4647bb61e2d33b208de4c9f?s=128&d=identicon&r=PG", "display_name": "hanmomhanda", "link": "https://stackoverflow.com/users/1362584/hanmomhanda"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555812530, "post_id": 55779147, "comment_id": 98230129, "body": "Thanks. But a little different thing is that <code>my_fun</code> has a lifetime parameter <code>&#39;a</code> in the result type, not <code>&#39;static</code>.  How can <code>my_fun</code> return a static reference even though it has <code>&#39;a</code> as a lifetime parameter in the result type? <code>&#39;a</code> can include <code>&#39;static</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555813155, "post_id": 55779147, "comment_id": 98230188, "body": "<code>&#39;a</code> is a generic lifetime that will be replaced by whatever concrete lifetime is in use. <code>&amp;111</code> always generates a <code>&amp;&#39;static i32</code>, so <code>&#39;a</code> is <code>&#39;static</code> for this call. Just like if you had <code>foo&lt;T&gt;(_: T)</code> and called it with <code>foo(true)</code> \u2014 <code>T</code> is <code>bool</code> for that call."}, {"owner": {"reputation": 305, "user_id": 1362584, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0979f4ba4647bb61e2d33b208de4c9f?s=128&d=identicon&r=PG", "display_name": "hanmomhanda", "link": "https://stackoverflow.com/users/1362584/hanmomhanda"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555813626, "post_id": 55779147, "comment_id": 98230251, "body": "Oh, I thought <code>&#39;a</code>&#39; can not be a <code>&#39;static</code> because there exists the <code>&#39;static</code> as a separate keyword. Thanks for the quick and kind answer. Now it&#39;s clear!"}, {"owner": {"reputation": 305, "user_id": 1362584, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0979f4ba4647bb61e2d33b208de4c9f?s=128&d=identicon&r=PG", "display_name": "hanmomhanda", "link": "https://stackoverflow.com/users/1362584/hanmomhanda"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555851846, "post_id": 55779147, "comment_id": 98236744, "body": "@Shepmaster Can I ask one more thing? <code>&#39;a</code> can include <code>&#39;static</code> only when used in return type? In below code, the lifetime parameter is used in the input param, not return type, and the code does not compile.  ``` static mut GLOBAL: &amp;i32 = &amp;111; static STATIC: &amp;i32 = &amp;222;  fn my_fun&lt;&#39;a&gt;(r: &amp;&#39;a i32) {     GLOBAL = r; }  fn main() {     my_fun(STATIC); } ```"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555853157, "post_id": 55779147, "comment_id": 98237015, "body": "That&#39;s because each function is checked independently, regardless of how it is called. Using <code>&#39;a</code> in <code>my_fun</code> means that <i>any</i> lifetime might be passed, including those that are not <code>&#39;static</code>. Those can never compile, so the program is invalid. Also, it&#39;s a <b>really bad idea</b> to use <code>static mut</code> \u2014 so much that it&#39;s been considered removing them from the language."}], "owner": {"reputation": 305, "user_id": 1362584, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0979f4ba4647bb61e2d33b208de4c9f?s=128&d=identicon&r=PG", "display_name": "hanmomhanda", "link": "https://stackoverflow.com/users/1362584/hanmomhanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1555810220, "answer_count": 0, "score": 0, "last_activity_date": 1555810111, "creation_date": 1555810111, "question_id": 55779147, "link": "https://stackoverflow.com/questions/55779147/what-is-the-lifetime-of-111", "closed_reason": "Duplicate", "title": "What is the lifetime of &amp;111", "body": "<pre><code>fn my_fun&lt;'a&gt;(r: &amp;'a i32) -&gt; &amp;'a i32 {\n    if *r &gt; 5 {\n        r\n    } else {\n        &amp;5\n    }\n}\n\nfn main() {\n    let result;\n    {\n        result = my_fun(&amp;111); \n    }\n    println!(\"result: {}\", result);\n}\n</code></pre>\n\n<p>I expected the compile error but it works good.</p>\n\n<p>What is the lifetime of <code>&amp;111</code> in the example above?</p>\n"}, {"tags": ["rust", "ffi", "unsafe"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555781218, "post_id": 55775886, "comment_id": 98224328, "body": "If you understand what it does, how can you not know what a line of code does? What exactly do you expect from an answer?"}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555781330, "post_id": 55775886, "comment_id": 98224359, "body": "@Shepmaster basically I was trying to understand the strange syntax of casting to function pointers in Rust. I added an answer with my notes that details the pieces I don&#39;t understand yet."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555781437, "post_id": 55775886, "comment_id": 98224392, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/54572985/155423\">How do I make a struct for FFI that contains a nullable function pointer?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55775886/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "is_accepted": false, "score": -1, "last_activity_date": 1555781378, "last_edit_date": 1555781378, "creation_date": 1555781279, "answer_id": 55776004, "question_id": 55775886, "link": "https://stackoverflow.com/questions/55775886/what-does-transmutemut-c-void-optionunsafe-extern-c-fn-mean/55776004#55776004", "title": "What does transmute::&lt;*mut c_void, Option&lt;unsafe extern &quot;C&quot; fn() -&gt; ()&gt;&gt; mean?", "body": "<p>We're trying to call an <code>unsafe extern \"C\" fn() -&gt; ()</code>, which is basically a function with no arguments and no return type. My first attempt was to just use the <code>as</code> keyword, as defined in <code>transmute</code>'s documentation. I got the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0605]: non-primitive cast: `*mut libc::c_void` as `unsafe extern \"C\" fn()`\n  --&gt; wx.rs:32:9\n   |\n32 |         (buf as unsafe extern \"C\" fn() -&gt; ())();\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n</code></pre>\n\n<p>It looks like the function is a non-primitive type and this is why I need <code>transmute</code>. I tried the following:</p>\n\n<pre><code>transmute::&lt;\n    *mut c_void,\n    unsafe extern \"C\" fn() -&gt; ()\n&gt;(buf)();\n</code></pre>\n\n<p>And the code compiled and actually ran as expected.</p>\n\n<p>What I still don't understand is why <code>Option</code> was used by c2rust, but the code works fine without it. It appears that <code>unsafe</code> and <code>extern \"C\"</code> can also be dropped and the code still works, at least for me.</p>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 255, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1555781749, "creation_date": 1555780345, "last_edit_date": 1555781749, "question_id": 55775886, "link": "https://stackoverflow.com/questions/55775886/what-does-transmutemut-c-void-optionunsafe-extern-c-fn-mean", "title": "What does transmute::&lt;*mut c_void, Option&lt;unsafe extern &quot;C&quot; fn() -&gt; ()&gt;&gt; mean?", "body": "<p>Here's some code I generated using <a href=\"https://c2rust.com\" rel=\"nofollow noreferrer\">c2rust</a> and then cleaned up a bit:</p>\n\n<pre><code>#![feature(libc)]\nextern crate libc;\n\nuse libc::*;\nuse std::mem::transmute;\n\nextern \"C\" {\n    #[no_mangle]\n    fn read(__fd: c_int, __buf: *mut c_void, __nbytes: c_ulong) -&gt; c_long;\n    #[no_mangle]\n    fn mmap(\n        __addr: *mut c_void,\n        __len: c_ulong,\n        __prot: c_int,\n        __flags: c_int,\n        __fd: c_int,\n        __offset: c_long,\n    ) -&gt; *mut c_void;\n}\n\npub fn main() {\n    unsafe {\n        let buf: *mut c_void = mmap(\n            0 as *mut c_void,\n            256i32 as c_ulong,\n            0x1i32 | 0x2i32 | 0x4i32,\n            0x2i32 | 0x20i32,\n            -1i32,\n            0i32 as c_long,\n        );\n        read(0i32, buf, 256i32 as c_ulong);\n        transmute::&lt;*mut c_void, Option&lt;unsafe extern \"C\" fn() -&gt; ()&gt;&gt;(buf).unwrap()();\n    }\n}\n</code></pre>\n\n<p>While I understand what it does, I'm not sure how to interpret the last expression. What does <code>Option&lt;unsafe extern \"C\" fn() -&gt; ()&gt;</code> mean?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555768342, "post_id": 55774088, "comment_id": 98220779, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/47662253/155423\">Why is it legal to borrow a temporary?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55774088/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 884, "user_id": 5843012, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/b04705017856e8e7ace28c5fdb4d1617?s=128&d=identicon&r=PG&f=1", "display_name": "MFave", "link": "https://stackoverflow.com/users/5843012/mfave"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555775865, "post_id": 55774088, "comment_id": 98222786, "body": "Yes, that question answers this one."}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1555804135, "post_id": 55774088, "comment_id": 98229133, "body": "<i>I&#39;m confused about the ownership rules of a collection that&#39;s been turned into an iterable.</i> -- calling <code>.iter()</code> does not turn it into an iterator, it returns an iterator that references the original. <code>.into_iter()</code> actually turns it into an iterator that owns the collection - you can use that instead."}], "owner": {"reputation": 884, "user_id": 5843012, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/b04705017856e8e7ace28c5fdb4d1617?s=128&d=identicon&r=PG&f=1", "display_name": "MFave", "link": "https://stackoverflow.com/users/5843012/mfave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 1, "closed_date": 1555777211, "answer_count": 0, "score": 0, "last_activity_date": 1555768295, "creation_date": 1555767574, "last_edit_date": 1555768295, "question_id": 55774088, "link": "https://stackoverflow.com/questions/55774088/why-does-this-iterator-drop-when-not-called-directly-as-a-function-argument", "closed_reason": "Duplicate", "title": "Why does this iterator drop when not called directly as a function argument?", "body": "<p>I'm confused about Rust's behavior in the following example.</p>\n\n<p>This example fails:</p>\n\n<pre><code>let mut coll = vec![1, 2, 3].iter();\nsome_consuming_fn(&amp;mut coll);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n --&gt; src/main.rs:4:20\n  |\n4 |     let mut coll = vec![1, 2, 3].iter();\n  |                    ^^^^^^^^^^^^^       - temporary value is freed at the end of this statement\n  |                    |\n  |                    creates a temporary which is freed while still in use\n5 |     some_consuming_fn(&amp;mut coll);\n  |                       --------- borrow later used here\n  |\n  = note: consider using a `let` binding to create a longer lived value\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>However, if you call the iterable conversion as a function argument everything works fine.</p>\n\n<pre><code>let coll = vec![1, 2, 3];\nsome_consuming_fn(&amp;mut coll.iter());\n</code></pre>\n\n<p>I'm confused about the ownership rules of a collection that's been turned into an iterable. Why would a call to <code>some_iterable.iter()</code> drop immediately after being called?</p>\n\n<p>For reference, <code>some_consuming_fn</code> has the signature:</p>\n\n<pre><code>some_consuming_fn(x: &amp;mut Iter&lt;u32&gt;) -&gt; Foo;\n</code></pre>\n"}, {"tags": ["types", "rust", "literals"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1555765135, "post_id": 55773296, "comment_id": 98220028, "body": "Careful with your notations: <code>2e31</code> is 2 &#215; 10^31 = , not 2^31. <code>2e31 - 1</code> is 19999999999999999999999999999999 (modulo rounding error)."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 8, "last_activity_date": 1555763374, "last_edit_date": 1555763374, "creation_date": 1555761903, "answer_id": 55773342, "question_id": 55773296, "link": "https://stackoverflow.com/questions/55773296/why-do-i-not-get-a-literal-out-of-range-error-when-storing-a-number-larger-than/55773342#55773342", "title": "Why do I not get a literal out of range error when storing a number larger than an i32 into a variable?", "body": "<p>Constant literals such as <code>2e100</code> are not integer literals but floating point literals. This can be shown with</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let () = 2e100;\n}\n</code></pre>\n\n<p>which produces</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:2:9\n  |\n2 |     let () = 2e100;\n  |         ^^ expected floating-point number, found ()\n  |\n  = note: expected type `{float}`\n             found type `()`\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/21747136/how-do-i-print-the-type-of-a-variable-in-rust\">How do I print the type of a variable in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 1384, "user_id": 10240085, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HBxgL.jpg?s=128&g=1", "display_name": "Muhammad Naufil", "link": "https://stackoverflow.com/users/10240085/muhammad-naufil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "accepted_answer_id": 55773342, "answer_count": 1, "score": 2, "last_activity_date": 1555763544, "creation_date": 1555761554, "last_edit_date": 1555763544, "question_id": 55773296, "link": "https://stackoverflow.com/questions/55773296/why-do-i-not-get-a-literal-out-of-range-error-when-storing-a-number-larger-than", "title": "Why do I not get a literal out of range error when storing a number larger than an i32 into a variable?", "body": "<p>The Rust documentation says the default integer type is <code>i32</code>, which means the biggest number a variable can save by default is <code>2147483647</code> i.e <code>2e31 - 1</code> . This turned out to be true too: if I try to save greater number than <code>2e31 - 1</code> in the <code>x</code> variable, I get the error <code>literal out of range</code>. </p>\n\n<p><strong>Code</strong></p>\n\n<pre><code>fn main() {\n    let x = 2147483647;\n    println!(\"Maximum signed integer: {}\", x);\n    let x = 2e100;\n    println!(\"x evalues to: {}\", x);\n}\n</code></pre>\n\n<p>but why do I not get error if I save value <code>2e100</code> in the <code>x</code> variable? It surely evaluates to greater than <code>2e31 - 1</code>.</p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Maximum signed integer: 2147483647\nx evalues to: 20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n</code></pre>\n\n<p><strong>Code</strong></p>\n\n<pre><code>fn main() {\n    let x = 2147483648;\n    println!(\"Maximum signed integer: {}\", x);\n}\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: literal out of range for i32\n --&gt; src/main.rs:2:11\n  |\n2 |     let x=2147483648;\n  |           ^^^^^^^^^^\n  |\n  = note: #[deny(overflowing_literals)] on by default\n</code></pre>\n"}, {"tags": ["rust", "traits", "trait-objects"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1555749670, "post_id": 55771631, "comment_id": 98216511, "body": "Once you get this past the type checker, the borrow checker will kill you (the <code>BufWriter</code> doesn&#39;t live long enough)."}], "answers": [{"comments": [{"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1555753830, "post_id": 55772107, "comment_id": 98217379, "body": "Thanks, starblue. Actually, I think I may have found another answer using Option&lt;Box&lt;dyn std::io::Write&gt;&gt; - I&#39;ll post it here for comment once I&#39;ve finished checking it out."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": false, "score": 0, "last_activity_date": 1555767463, "last_edit_date": 1555767463, "creation_date": 1555752365, "answer_id": 55772107, "question_id": 55771631, "link": "https://stackoverflow.com/questions/55771631/how-to-put-a-reference-to-a-trait-object-in-an-option/55772107#55772107", "title": "How to put a reference to a trait object in an Option?", "body": "<p>You have to somehow explicitly type the <code>BufWriter</code> with the trait type, and you also have to be more careful with lifetimes.</p>\n\n<p>Here is a sketch of how this could work:</p>\n\n<pre><code>use std::io;\nuse std::io::BufWriter;\nuse std::str::from_utf8;\n\npub struct Parameters&lt;'a&gt; {\n    pub log: Option&lt;&amp;'a mut io::Write&gt;,\n    // Other elements removed\n}\n\nfn main() {\n    let mut w = BufWriter::new(Vec::new());\n    let rw: &amp;mut std::io::Write = &amp;mut w;\n    let logstream = Some(rw);\n\n    let parameters = Parameters {\n        log: logstream,\n        // Other elements removed\n    };\n    parameters.log.unwrap().write(b\"hello world\").ok();\n\n    println!(\"{}\", from_utf8(&amp;w.into_inner().unwrap()).unwrap());\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555765914, "post_id": 55772286, "comment_id": 98220209, "body": "<i>removed the lifetime constraint on the trait object</i> \u2014 <a href=\"https://stackoverflow.com/q/42028470/155423\">Why is adding a lifetime to a trait with the plus operator (Iterator&lt;Item = &amp;Foo&gt; + &#39;a) needed?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555767547, "post_id": 55772286, "comment_id": 98220576, "body": "You are allowed to read and write to the filesystem in the playground."}, {"owner": {"reputation": 3422, "user_id": 1091208, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/507510b4df35587c853d93c2d2cdda22?s=128&d=identicon&r=PG", "display_name": "amnn", "link": "https://stackoverflow.com/users/1091208/amnn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555776119, "post_id": 55772286, "comment_id": 98222875, "body": "@Shepmaster, that&#39;s good to know!  Here is a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=66c62e25e7a496706390b68364afd092\" rel=\"nofollow noreferrer\">Rust playground</a> using a file."}], "tags": [], "owner": {"reputation": 3422, "user_id": 1091208, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/507510b4df35587c853d93c2d2cdda22?s=128&d=identicon&r=PG", "display_name": "amnn", "link": "https://stackoverflow.com/users/1091208/amnn"}, "is_accepted": false, "score": 0, "last_activity_date": 1555767526, "last_edit_date": 1555767526, "creation_date": 1555753842, "answer_id": 55772286, "question_id": 55771631, "link": "https://stackoverflow.com/questions/55771631/how-to-put-a-reference-to-a-trait-object-in-an-option/55772286#55772286", "title": "How to put a reference to a trait object in an Option?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>use std::io;\nuse std::io::BufWriter;\n\npub struct P&lt;'a&gt; {\n    pub log: Option&lt;&amp;'a mut io::Write&gt;,\n}\n\nfn file() -&gt; Option&lt;Vec&lt;u8&gt;&gt; {\n    Some(Vec::new())\n}\n\nfn main() {\n    let mut ow = file().map(|f| BufWriter::new(f));\n    let p = P {\n        log: ow.as_mut().map(|w| w as &amp;mut io::Write),\n    };\n\n    p.log.unwrap().write(b\"Hi!\").ok();\n\n    println!(\n        \"{}\",\n        String::from_utf8(ow.unwrap().into_inner().unwrap()).unwrap()\n    );\n}\n</code></pre>\n\n<p>Rather than taking an <code>Option&lt;W&gt;</code> and try and convert it into an <code>Option&lt;&amp;mut io::Write&gt;</code> in one go, do it in three steps:</p>\n\n<ul>\n<li><code>Option&lt;W&gt;</code> -> <code>Option&lt;io::BufWriter&lt;W&gt;&gt;</code> to make <code>ow</code>.  This is the thing that will own the <code>BufWriter</code>.  As pointed out in the other answer, if you try and create a <code>BufWriter</code> within the pattern match and then immediately take a reference to it, that reference's lifetime is scoped within the branch of the pattern match, so the borrow checker will complain.</li>\n<li>The next step is to convert from <code>Option&lt;io::BufWriter&lt;W&gt;&gt;</code> to <code>Option&lt;&amp;mut io::BufWriter&lt;W&gt;&gt;</code> using <code>as_mut()</code>.</li>\n<li>Finally convert from a reference to the implementation, to the generic trait object.  In this case with a map containing a cast.  I had tried using <code>into</code>, but there doesn't seem to be an implementation for convert between a reference to the implementor of a trait and a reference to the trait object.</li>\n</ul>\n\n<p>In this example, <code>file()</code> returns a <code>Vec&lt;u8&gt;</code> as the underlying writer, I did this so that the solution was <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fbc3b8ff36c2753779e38e5aa0aa5e6f\" rel=\"nofollow noreferrer\">testable in a Rust playground</a>, but this could as well be a <code>File</code>.</p>\n\n<p>Finally, I removed the lifetime constraint on the trait object, the type system/borrow checker didn't seem to think it was necessary.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555791096, "post_id": 55777218, "comment_id": 98226786, "body": "This doesn&#39;t answer the question as originally posed: <i>How to put a <b>reference</b> to a trait object in an <code>Option</code>?</i>"}, {"owner": {"reputation": 3422, "user_id": 1091208, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/507510b4df35587c853d93c2d2cdda22?s=128&d=identicon&r=PG", "display_name": "amnn", "link": "https://stackoverflow.com/users/1091208/amnn"}, "edited": false, "score": 0, "creation_date": 1555842202, "post_id": 55777218, "comment_id": 98234736, "body": "Rust has an extremely rich standard library that captures a lot of the idioms that you&#39;ve written from scratch here.  For example, you can use <code>env::args().nth(1)</code> to optionally get the 1st argument, and rather than using <code>process::exit</code>, I would change the return type of <code>main</code> to <code>io::Result&lt;()&gt;</code> and use the <code>?</code> operator to propagate the error.  Here&#39;s an adapted <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fe8288d55cf505f1c156362a6b7e1141\" rel=\"nofollow noreferrer\">Rust playground</a>"}, {"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556083440, "post_id": 55777218, "comment_id": 98311240, "body": "@Shepmaster - Thanks for your help. Maybe this doesn&#39;t really answer the question as written, though as I understand it a Box is a type of reference to an object on the heap. Maybe my question wasn&#39;t clear enough as this did achieve what I needed - to optionally create the writer externally to my library and pass it in."}, {"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "reply_to_user": {"reputation": 3422, "user_id": 1091208, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/507510b4df35587c853d93c2d2cdda22?s=128&d=identicon&r=PG", "display_name": "amnn", "link": "https://stackoverflow.com/users/1091208/amnn"}, "edited": false, "score": 0, "creation_date": 1556083590, "post_id": 55777218, "comment_id": 98311282, "body": "@amnn - Thanks for the tip about args().nth(1) - I&#39;m still learning Rust and the library is large so it takes a while to realise these things exist. As for the process::exit() - yes, that was just for a quick-and-dirty demo - usually I would return a Result() object and use ? (I use ? quite extensively in my real code)"}], "tags": [], "owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "is_accepted": false, "score": 0, "last_activity_date": 1555790170, "creation_date": 1555790170, "answer_id": 55777218, "question_id": 55771631, "link": "https://stackoverflow.com/questions/55771631/how-to-put-a-reference-to-a-trait-object-in-an-option/55777218#55777218", "title": "How to put a reference to a trait object in an Option?", "body": "<p>Thanks for the answers above. Prior to them being posted I had an idea myself and came up with this (cut down to a minimal example that shows more or less what I'm trying to do):</p>\n\n<pre><code>use std::{env, process};\nuse std::fs::File;\nuse std::io::{self, BufWriter};\n\npub struct Parameters {\n    pub log: Option&lt;Box&lt;dyn io::Write&gt;&gt;,\n}\n\n\nfn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n    let logfile = if args.len() &gt; 1 {\n        Some(&amp;args[1])\n    } else {\n        None\n    };\n\n    let logstream: Option&lt;Box&lt;dyn io::Write&gt;&gt; = match logfile {\n        Some(logfile) =&gt; {\n            let f = File::create(logfile).unwrap_or_else(|err| {\n                eprintln!(\"ERROR opening logfile: {}\", err);\n                process::exit(1);\n            });\n            let logstream = BufWriter::new(f);\n            Some(Box::new(logstream))\n        }\n        None =&gt; {\n            None\n        },\n    };\n\n    let parameters = Parameters {\n        log: logstream,\n    };\n    play(parameters);\n}\n\nfn play(parameters: Parameters) {\n    // Rest of code removed\n    if let Some(mut stream) = parameters.log {\n        stream.write(\"Testing\\n\".as_bytes()).unwrap_or_else(|err| {\n            eprintln!(\"ERROR writing to logfile: {}\", err);\n            process::exit(1);\n        });\n    }\n}\n</code></pre>\n\n<p>Is this a good solution or would one of the ones suggested above be better?</p>\n"}], "owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 496, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1555790170, "creation_date": 1555748295, "last_edit_date": 1555767275, "question_id": 55771631, "link": "https://stackoverflow.com/questions/55771631/how-to-put-a-reference-to-a-trait-object-in-an-option", "title": "How to put a reference to a trait object in an Option?", "body": "<p>I'd like to store a reference to an <code>io::Write</code> trait object inside an <code>Option</code> in a struct but I can't figure out how. I can put the reference in directly like this:</p>\n\n<pre><code>pub struct Parameters&lt;'a&gt; {\n    pub log: &amp;'a (io::Write + 'a),\n    // Other elements removed\n}\n</code></pre>\n\n<p>and then assign it from (for example) a <code>BufWriter</code> like this:</p>\n\n<pre><code>let logstream = &amp;BufWriter::new(f);\nlet parameters = Parameters {\n    log: logstream, // Other elements removed\n};\n</code></pre>\n\n<p>This works, but I'd like the <code>logstream</code> to be optional. If I try:</p>\n\n<pre><code>pub struct Parameters&lt;'a&gt; {\n    pub log: Option&lt;&amp;'a(io::Write + 'a)&gt;,\n    // Other elements removed\n}\n</code></pre>\n\n<p>and </p>\n\n<pre><code>let logstream = match f {\n    Some(f) =&gt; Some(&amp;BufWriter::new(f)),\n    None =&gt; None,\n};\n\nlet parameters = Parameters {\n    log: logstream,\n    // Other elements removed\n};\n</code></pre>\n\n<p>I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:17:14\n   |\n17 |         log: logstream,\n   |              ^^^^^^^^^ expected trait std::io::Write, found struct `std::io::BufWriter`\n   |\n   = note: expected type `std::option::Option&lt;&amp;dyn std::io::Write&gt;`\n              found type `std::option::Option&lt;&amp;std::io::BufWriter&lt;std::vec::Vec&lt;u8&gt;&gt;&gt;`\n</code></pre>\n\n<p>What is a suitable approach here?</p>\n"}, {"tags": ["compilation", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1555743574, "post_id": 55770816, "comment_id": 98215315, "body": "If you run <code>cargo build --release</code> and then <code>cargo run --release</code>, does it recompile too?"}, {"owner": {"reputation": 1384, "user_id": 10240085, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HBxgL.jpg?s=128&g=1", "display_name": "Muhammad Naufil", "link": "https://stackoverflow.com/users/10240085/muhammad-naufil"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1555743786, "post_id": 55770816, "comment_id": 98215372, "body": "@Cerberus no it doesn&#39;t. Thanks. The documentation doesn&#39;t teaches that"}, {"owner": {"reputation": 337, "user_id": 4091452, "user_type": "registered", "accept_rate": 82, "profile_image": "https://graph.facebook.com/100002156861277/picture?type=large", "display_name": "Andrei Damian", "link": "https://stackoverflow.com/users/4091452/andrei-damian"}, "edited": false, "score": 0, "creation_date": 1555748279, "post_id": 55770816, "comment_id": 98216250, "body": "If you look a bit at the run times, you can see it just checks to see if there are new changes, but it exits imediately because it doesn&#39;t have changes. Then it just runs."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1555749671, "creation_date": 1555749671, "answer_id": 55771794, "question_id": 55770816, "link": "https://stackoverflow.com/questions/55770816/why-does-rust-compile-my-project-again-with-cargo-build-release-followed-by/55771794#55771794", "title": "Why does Rust compile my project again with `cargo build --release` followed by `cargo run`?", "body": "<p><strong><code>cargo run</code> attempts to run the debug build of your project. Use <code>cargo run --release</code> instead.</strong> A <code>cargo build --release</code> followed by <code>cargo run --release</code> won't compile again.</p>\n\n<p>Cargo maintains two pretty much completely independent sets of build artifacts:</p>\n\n<ul>\n<li>The debug build, stored in <code>target/debug/</code></li>\n<li>The release build, stored in <code>target/release/</code></li>\n</ul>\n\n<hr>\n\n<p>All of these sub-commands allow you to specify which of these profiles to use (not necessarily an exhaustive list):</p>\n\n<ul>\n<li><strong>Default: debug</strong> (switch to release mode with <code>--release</code>)\n\n<ul>\n<li><code>cargo build</code> </li>\n<li><code>cargo run</code> </li>\n<li><code>cargo test</code> </li>\n<li><code>cargo check</code></li>\n</ul></li>\n<li><strong>Default: release</strong> (switch to debug mode with <code>--debug</code>)\n\n<ul>\n<li><code>cargo bench</code></li>\n<li><code>cargo install</code> </li>\n</ul></li>\n</ul>\n"}], "owner": {"reputation": 1384, "user_id": 10240085, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HBxgL.jpg?s=128&g=1", "display_name": "Muhammad Naufil", "link": "https://stackoverflow.com/users/10240085/muhammad-naufil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1426, "favorite_count": 2, "accepted_answer_id": 55771794, "answer_count": 1, "score": 7, "last_activity_date": 1555749671, "creation_date": 1555740834, "last_edit_date": 1555749082, "question_id": 55770816, "link": "https://stackoverflow.com/questions/55770816/why-does-rust-compile-my-project-again-with-cargo-build-release-followed-by", "title": "Why does Rust compile my project again with `cargo build --release` followed by `cargo run`?", "body": "<p><a href=\"https://doc.rust-lang.org/book/ch01-03-hello-cargo.html\" rel=\"noreferrer\">Rust documentation</a> teaches us that <code>cargo build</code> creates a binary file  after compiling, which we can execute with <code>cargo run</code>. <code>cargo run</code> will again compile the code if it notices any change after <code>cargo build</code> command is executed. It also says that <code>cargo build --release</code> command creates the final program, which will run faster.</p>\n\n<p>My question is, why is that when I do <code>cargo build --release</code>, it compiles the code, which is fine. But when I execute <code>cargo run</code>, it again compiles the code, even though I haven't changed any code since. It is working normally with <code>cargo build</code>, followed by <code>cargo run</code> i.e compiling one time with the former command.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>naufil@naufil-Inspiron-7559:~/Desktop/rust/20April/variables$ cargo build\n   Compiling variables v0.1.0 (/home/naufil/Desktop/rust/20April/variables)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.35s\nnaufil@naufil-Inspiron-7559:~/Desktop/rust/20April/variables$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.02s\n     Running `target/debug/variables`\nHello, world! 6\nnaufil@naufil-Inspiron-7559:~/Desktop/rust/20April/variables$ cargo build --release\n   Compiling variables v0.1.0 (/home/naufil/Desktop/rust/20April/variables)\n    Finished release [optimized] target(s) in 0.34s\nnaufil@naufil-Inspiron-7559:~/Desktop/rust/20April/variables$ cargo run\n   Compiling variables v0.1.0 (/home/naufil/Desktop/rust/20April/variables)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.23s\n     Running `target/debug/variables`\nHello, world! 6\n</code></pre>\n"}, {"tags": ["r", "rust", "gganimate"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555725918, "post_id": 55769591, "comment_id": 98212928, "body": "Only <code>export PATH=&quot;$HOME&#47;.cargo&#47;bin:$PATH&quot;</code> is needed. Did you do all 4 of those lines at once?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555726056, "post_id": 55769591, "comment_id": 98212948, "body": "<i>I reset my machine</i> \u2014 did you save the modifications to your <code>PATH</code> anywhere? rustup should have added the setup line to a file like <code>~&#47;.profile</code>. If it didn&#39;t, or you undid the changes for some reason, then you&#39;d have to re-set the environment in the shell before opening R."}, {"owner": {"reputation": 73, "user_id": 11365695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2e574fc88cafb8efc0ba5c91735d302?s=128&d=identicon&r=PG&f=1", "display_name": "ivan", "link": "https://stackoverflow.com/users/11365695/ivan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555728848, "post_id": 55769591, "comment_id": 98213270, "body": "I did the lines separately. How do I save my modifications to path?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556515721, "post_id": 55769591, "comment_id": 98450977, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/13046624/how-to-permanently-export-a-variable-in-linux\">How to permanently export a variable in Linux?</a>"}], "owner": {"reputation": 73, "user_id": 11365695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2e574fc88cafb8efc0ba5c91735d302?s=128&d=identicon&r=PG&f=1", "display_name": "ivan", "link": "https://stackoverflow.com/users/11365695/ivan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 699, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1589159424, "creation_date": 1555725245, "last_edit_date": 1555725792, "question_id": 55769591, "link": "https://stackoverflow.com/questions/55769591/rust-compiler-not-found-when-installing-gifski", "title": "Rust compiler not found when installing gifski", "body": "<p>I'm trying to install <code>gifski</code> which is a dependency for <code>gganimate</code>.</p>\n\n<p>I get this error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>------------------ RUST COMPILER NOT FOUND --------------------\n\nCargo was not found on the PATH. Please install cargo / rustc:\n\n - yum install cargo         (Fedora/CentOS)\n - apt-get install cargo     (Debian/Ubuntu)\n - brew install rustc        (MacOS)\n\nAlternatively install Rust from: &lt;https://www.rust-lang.org&gt;\n\n---------------------------------------------------------------\n</code></pre>\n\n<p>The <code>yum install cargo</code> command didn't work, so I installed Rust with </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>curl https://sh.rustup.rs -sSf | sh\n</code></pre>\n\n<p>The installation prompt said I needed to add <code>$HOME/.cargo/bin</code> to my path environment variable, so I tried this.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ source $HOME/.cargo/env\n$ export PATH=$PATH:$HOME/.cargo/bin\n$ export PATH=$PATH:/.cargo/bin\n$ export PATH=$HOME/.cargo/bin\n</code></pre>\n\n<p>I reset my machine and I continue to receive the same error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; sessionInfo()\nR version 3.5.3 (2019-03-11)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Amazon Linux AMI 2018.03\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555716306, "post_id": 55768806, "comment_id": 98211773, "body": "<i>I have a <code>random_choice()</code> function and it picks a random <code>i32</code></i> \u2014 why not just pick a random <code>usize</code> instead of performing <i>any</i> casts?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555716353, "post_id": 55768806, "comment_id": 98211781, "body": "Also, it&#39;s helpful to think up one level of abstraction: <a href=\"https://stackoverflow.com/q/34215280/155423\">How can I randomly select one element from a vector or array?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555716524, "post_id": 55768806, "comment_id": 98211804, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, fields and modules; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>attack</code>, <code>defense</code>, <code>cost</code>, <code>pay</code>, etc. instead, please."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555716918, "post_id": 55768806, "comment_id": 98211851, "body": "Anyway, applying the duplicates / suggestions <code>fn random_choice_deck(deck: Deck) -&gt; Card { let idx = rand::thread_rng().gen_range(0, deck.Cards.len()); deck.Cards[idx] }</code>"}], "owner": {"reputation": 1, "user_id": 11337190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f898a78db9cd7d12909154d6a603888a?s=128&d=identicon&r=PG&f=1", "display_name": "Rusty", "link": "https://stackoverflow.com/users/11337190/rusty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 950, "favorite_count": 0, "closed_date": 1555716043, "answer_count": 0, "score": 0, "last_activity_date": 1555716263, "creation_date": 1555715615, "last_edit_date": 1555716263, "question_id": 55768806, "link": "https://stackoverflow.com/questions/55768806/change-i32-to-usize", "closed_reason": "Duplicate", "title": "Change i32 to usize", "body": "<p>I am making a card game and want to draw a card.  I have a <code>random_choice()</code> function and it picks a random <code>i32</code> and then uses that as a slice.  Instead of doing the expected, it says that a slice must be a <code>usize</code>.</p>\n\n<p>I have tried converting the <code>i32</code> to a <code>u16</code> and then to a <code>usize</code>, but that didn't work, either.  I also tried directly converting the <code>i32</code> to a <code>usize</code>.</p>\n\n<p>These are the structures of my data sets:</p>\n\n<pre><code>struct Card {\n    Attack: i32,\n    Defense: i32,\n    Cost: i32,\n    Pay: i32,\n    Name: String,\n    Type: String,\n    Effect: String,\n}\n\nstruct Deck {\n    Cards: Vec&lt;Card&gt;,\n}\n</code></pre>\n\n<p>Here are the functions:</p>\n\n<pre><code>fn random_choice_deck(deck: Deck) -&gt; Card {\n    let slice = rand::thread_rng().gen_range(i32::from(0), i32::from(deck.Cards.len()));\n    return deck.Cards[usize::from(u16::from(slice))];\n}\nfn Draw_Cards(deck: Deck) {\n    let cards = vec![\n        random_choice(deck),\n        random_choice(deck),\n        random_choice(deck),\n    ];\n    for a in cards {\n        println!(\n            \"{} : C{}, A{}, D{}, P{}\",\n            a.Name, a.Cost, a.Attack, a.Defense, a.Pay\n        );\n    }\n}\n</code></pre>\n\n<p>The output should be something from the deck.  For example, I have my air deck:</p>\n\n<pre><code>Cards: vec![\n    wildcat, wildcat, wildcat, wildcat, zero, zero, zero, flying_gun, flying_gun,\n]\n</code></pre>\n\n<p>And the things in it:</p>\n\n<pre><code>let mut wildcat = Card {\n    Attack: i32::from(10),\n    Defense: i32::from(50),\n    Name: String::from(\"Wildcat\"),\n    Type: String::from(\"Air\"),\n    Effect: String::from(\"None\"),\n    Cost: i32::from(25),\n    Pay: i32::from(50),\n};\nlet mut zero = Card {\n    Attack: i32::from(20),\n    Defense: i32::from(35),\n    Name: String::from(\"A6M Zero\"),\n    Type: String::from(\"Air\"),\n    Effect: String::from(\"Air only\"),\n    Cost: i32::from(25),\n    Pay: i32::from(50),\n};\nlet mut flying_gun = Card {\n    Attack: i32::from(5),\n    Defense: i32::from(1),\n    Name: String::from(\"Flying Gun\"),\n    Type: String::from(\"Air\"),\n    Effect: String::from(\"None\"),\n    Cost: i32::from(5),\n    Pay: i32::from(5),\n};\n</code></pre>\n\n<p>It should output either <code>wildcat</code>, <code>zero</code>, or <code>flying_gun</code>, but it outputs this among other errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `u16: std::convert::From&lt;i32&gt;` is not satisfied\n\nreturn deck.Cards[usize::from(u16::from(slice))\n                              ^^^^^^^^^ the trait 'std::convert::From&lt;i32&gt;' is not implemented for 'u16'\n</code></pre>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555719024, "post_id": 55766428, "comment_id": 98212139, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/55766428/edit\">edit</a> your question to include it. We cannot tell what crates (and their versions), types, traits, fields, etc. are present in the code. Specifically, is <code>crate::io::e::State</code> or <code>crate::io::e::V</code> needed? If so, provide them. Most likely, they are not, and your example can be minimized. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555719592, "post_id": 55766428, "comment_id": 98212212, "body": "TL;DR the duplicate: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5858a272e367da4d2d6581c110529984\" rel=\"nofollow noreferrer\">pass in a closure instead of a token tree</a>. <code>cb_arc!(&quot;Exit&quot;, |v, s| { eprintln!(&quot;Value: {:?}, State: {:?}&quot;, v, s); });</code>"}], "owner": {"reputation": 71, "user_id": 3072719, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/LESKH.jpg?s=128&g=1", "display_name": "AlterionX", "link": "https://stackoverflow.com/users/3072719/alterionx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "closed_date": 1555719535, "answer_count": 0, "score": 0, "last_activity_date": 1555719678, "creation_date": 1555699704, "last_edit_date": 1555719678, "question_id": 55766428, "link": "https://stackoverflow.com/questions/55766428/how-to-use-an-identifier-defined-by-a-macro-in-code-passed-to-the-macro", "closed_reason": "Duplicate", "title": "How to use an identifier defined by a macro in code passed to the macro?", "body": "<p>I have a macro <code>cb_arc</code> that's used for creating a callback with deeply nested types. I have a few inputs to the callback for use in a different part of the the macro.</p>\n\n<p>After digging through (slightly incoherent) documentation for procedural macros, I more or less gave up and went to the declarative macros and wrote this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_export]\nmacro_rules! cb_arc {\n    ( $name:literal, $v:ident, $s:ident, {$($head:tt)*} ) =&gt; {\n        {\n            use log::trace;\n            let arc = std::sync::Arc::new(std::sync::Mutex::new(\n                move |$s: &amp;$crate::io::e::State, $v: &amp;$crate::io::e::V| {\n                    trace!(\"{:?} update fired with {:?}\", $name, $v);\n                    $($head)*;\n                    trace!(\"{:?} handler completed.\", $name);\n                }\n            ));\n            // might want to do more things here w/ arc later\n            arc\n        }\n    }\n}\n</code></pre>\n\n<p>This works, but I have to write the macro invocation as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>cb_arc!(\"Exit\", v, s, {\n    debug!(\"Value: {:?}, State: {:?}\", v, s);\n    // do stuff to set exit flag/properly handle event/etc\n})\n</code></pre>\n\n<p>The whole point of the exercise was to eliminate the long function call, so it's fine as it is now, but this was the goal:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>cb_arc!(\"Exit\", {\n    debug!(\"Value: {:?}, State: {:?}\", v, s);\n    // do stuff to set exit flag/properly handle event/etc\n})\n</code></pre>\n\n<p>How should I accomplish this? Is it even possible? Also, is it possible to feed the wildcard (<code>_</code>) as an identifier?</p>\n"}, {"tags": ["windows", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555695085, "post_id": 55765544, "comment_id": 98205618, "body": "Welcome to Stack Overflow! I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/50337099/155423\"><code>cargo build</code> fails with linking error \u201clink.exe failed: exit code: 325595\u201d</a> or <a href=\"https://stackoverflow.com/q/55603111/155423\">Unable to compile Rust hello world on Windows: linker link.exe not found</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55765544/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555695106, "post_id": 55765544, "comment_id": 98205624, "body": "TL;DR: use a newer version of the tools. 2017+ should be good."}, {"owner": {"reputation": 21, "user_id": 11385187, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1d3ac5d385836fb610e3463a9ab088b?s=128&d=identicon&r=PG&f=1", "display_name": "jackie", "link": "https://stackoverflow.com/users/11385187/jackie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555695294, "post_id": 55765544, "comment_id": 98205679, "body": "I tried to install 2017 and get following message : &#39;Cannot install a product when a newer version is installed&#39;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555695344, "post_id": 55765544, "comment_id": 98205694, "body": "What newer version have you installed?"}, {"owner": {"reputation": 21, "user_id": 11385187, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1d3ac5d385836fb610e3463a9ab088b?s=128&d=identicon&r=PG&f=1", "display_name": "jackie", "link": "https://stackoverflow.com/users/11385187/jackie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555695911, "post_id": 55765544, "comment_id": 98205884, "body": "I have installed visual studio 2017/2019,but only installed .net core..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555695999, "post_id": 55765544, "comment_id": 98205913, "body": "What happens when you install the C / C++ build tools for the 2019 version (as suggested in the duplicate links)?"}, {"owner": {"reputation": 21, "user_id": 11385187, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1d3ac5d385836fb610e3463a9ab088b?s=128&d=identicon&r=PG&f=1", "display_name": "jackie", "link": "https://stackoverflow.com/users/11385187/jackie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555696596, "post_id": 55765544, "comment_id": 98206121, "body": "I need to install &#39;MSVC v142 \u2013 VS 2019 C++ x64/x86 &#39; right?  Those translations are not the same during my installation process....."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555696896, "post_id": 55765544, "comment_id": 98206222, "body": "Seems believable. I&#39;d just pick whatever contains &quot;C&quot; or &quot;C++&quot;"}, {"owner": {"reputation": 21, "user_id": 11385187, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1d3ac5d385836fb610e3463a9ab088b?s=128&d=identicon&r=PG&f=1", "display_name": "jackie", "link": "https://stackoverflow.com/users/11385187/jackie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555837491, "post_id": 55765544, "comment_id": 98233662, "body": "Thank you so much. I install the  &#39;MSVC v142 \u2013 VS 2019 C++ x64/x86 &#39; and it&#39;s work fine."}], "owner": {"reputation": 21, "user_id": 11385187, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1d3ac5d385836fb610e3463a9ab088b?s=128&d=identicon&r=PG&f=1", "display_name": "jackie", "link": "https://stackoverflow.com/users/11385187/jackie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 850, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1555695037, "creation_date": 1555694894, "last_edit_date": 1555695037, "question_id": 55765544, "link": "https://stackoverflow.com/questions/55765544/cant-find-link-exe-even-after-installing-microsoft-build-tools-2015", "title": "Can&#39;t find link.exe even after installing Microsoft Build Tools 2015", "body": "<p>I want to build the environment of Rust, but when I install racer, the following error occurred</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linker `link.exe` not found\n</code></pre>\n\n<p>I tried to install 'Microsoft Build Tools 2015' but I still can't succeed.</p>\n"}, {"tags": ["rust", "containers"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555681944, "post_id": 55762906, "comment_id": 98200364, "body": "You can wrap your objects into a <code>Rc</code>."}, {"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555682278, "post_id": 55762906, "comment_id": 98200484, "body": "That would work, but would also incur overhead. I hope to find a solution, which wouldn&#39;t."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555682403, "post_id": 55762906, "comment_id": 98200536, "body": "I&#39;m with you: unfortunately, I think that this would require a new method."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555682517, "post_id": 55762906, "comment_id": 98200576, "body": "In your situation, I would use a <code>HashMap</code> to retrieve the value easily."}, {"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555682595, "post_id": 55762906, "comment_id": 98200617, "body": "Can you clear this out as an answer possibly?"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1555682782, "post_id": 55762906, "comment_id": 98200683, "body": "Are you looking for something like this? <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=b39ea14bea827fb135914776207bc6da\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1555682919, "post_id": 55762906, "comment_id": 98200741, "body": "You can refer to the value from the <code>HashSet</code> using <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.HashSet.html#method.get\" rel=\"nofollow noreferrer\"><code>get</code></a>. However this requires an additional lookup. I don&#39;t think there is a way to do it in a single step."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555683240, "post_id": 55762906, "comment_id": 98200875, "body": "You should create an issue to add this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555684227, "post_id": 55762906, "comment_id": 98201295, "body": "A <code>HashSet&lt;T&gt;</code> is a <code>HashMap&lt;T, ()&gt;</code>; thus the duplicate"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555684234, "post_id": 55762906, "comment_id": 98201299, "body": "@NikitaVolkov I mean, you could create your own handle as a key to retrieve the value easily, but that&#39;s specific to your need."}], "owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "closed_date": 1555684174, "answer_count": 0, "score": 1, "last_activity_date": 1555681754, "creation_date": 1555681754, "question_id": 55762906, "link": "https://stackoverflow.com/questions/55762906/inserting-a-value-into-hashset-getting-a-reference-to-it", "closed_reason": "Duplicate", "title": "Inserting a value into HashSet getting a reference to it", "body": "<p>I need to refer to a value after inserting it into set. However after inserting the container becomes the owner of the element and I can no longer refer to it. Is this achievable without updating the containers API?</p>\n\n<p>Ideally I'm looking for some function with the following signature:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn insert_referring&lt;A&gt;(set: &amp;mut HashSet&lt;A&gt;, element: A) -&gt; &amp;A\n</code></pre>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1555676022, "post_id": 55761613, "comment_id": 98197834, "body": "BTW, you should implement the <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html\" rel=\"nofollow noreferrer\"><code>Display</code> trait</a> for what you want to do."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1555676377, "post_id": 55761613, "comment_id": 98197972, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=99bdb2b02aef8262fdf46443098c742f\" rel=\"nofollow noreferrer\">Playground</a> Are you looking for something like this?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1555677454, "post_id": 55761613, "comment_id": 98198453, "body": "Hi there! Short answer: return <code>String</code> instead of <code>&amp;String</code>. Or more idiomatic, as @FrenchBoiethios mentioned, implement <code>Display</code> (you can then use <code>.to_string()</code> to obtain a <code>String</code>). If the linked Q&amp;A does not answer your question, please let us know."}, {"owner": {"reputation": 19, "user_id": 10564261, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-fTrvDZkWiiw/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbDVlX3qlsE-GwhX7oEUSqlVstpQjA/mo/photo.jpg?sz=128", "display_name": "Riccardo Ripanti", "link": "https://stackoverflow.com/users/10564261/riccardo-ripanti"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1555677756, "post_id": 55761613, "comment_id": 98198578, "body": "@LukasKalbertodt But if I do so than the value will be moved, or wouldn&#39;t it?"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1555677949, "post_id": 55761613, "comment_id": 98198654, "body": "You must then clone the value to prevent it from being moved, e.g. <code>pub fn string(&amp;self) -&gt; String { self.string.clone() }</code>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1555677974, "post_id": 55761613, "comment_id": 98198670, "body": "<code>to_string()</code> borrows the receiver, not move it."}, {"owner": {"reputation": 19, "user_id": 10564261, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-fTrvDZkWiiw/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbDVlX3qlsE-GwhX7oEUSqlVstpQjA/mo/photo.jpg?sz=128", "display_name": "Riccardo Ripanti", "link": "https://stackoverflow.com/users/10564261/riccardo-ripanti"}, "edited": false, "score": 0, "creation_date": 1555678151, "post_id": 55761613, "comment_id": 98198737, "body": "I mean if I make it like that I&#39;ll have to write it like that <code>pub fn string(&amp;self) -&gt; String {     if self.negative {         (&quot;-&quot;.to_string() + self.string.as_str())     }     else { self.string.clone() } }</code>"}, {"owner": {"reputation": 19, "user_id": 10564261, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-fTrvDZkWiiw/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbDVlX3qlsE-GwhX7oEUSqlVstpQjA/mo/photo.jpg?sz=128", "display_name": "Riccardo Ripanti", "link": "https://stackoverflow.com/users/10564261/riccardo-ripanti"}, "edited": false, "score": 0, "creation_date": 1555678272, "post_id": 55761613, "comment_id": 98198786, "body": "But what if I don&#39;t want to clone it, how can I do? this is what I was asking for"}, {"owner": {"reputation": 19, "user_id": 10564261, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-fTrvDZkWiiw/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbDVlX3qlsE-GwhX7oEUSqlVstpQjA/mo/photo.jpg?sz=128", "display_name": "Riccardo Ripanti", "link": "https://stackoverflow.com/users/10564261/riccardo-ripanti"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1555678428, "post_id": 55761613, "comment_id": 98198853, "body": "@LukasKalbertodt the linked Q&amp;A does not answer my question (completely) because I wanted to know if I could have made it without cloning"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555678681, "post_id": 55761613, "comment_id": 98198963, "body": "You string is local, you cannot return a reference to it."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1555679180, "post_id": 55761613, "comment_id": 98199201, "body": "In the case when you insert a <code>-</code> in front, you can&#39;t avoid making a copy with the <code>-</code> added (and your current code already does). If you want to avoid the copy in the case where you don&#39;t need to insert a <code>-</code>, you can return <a href=\"https://doc.rust-lang.org/stable/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow&lt;&#39;a, &amp;&#39;a str&gt;</code></a>. (Would have posted as an answer, but I can&#39;t since the question has been closed)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1555684360, "post_id": 55761613, "comment_id": 98201359, "body": "@Jmb no worries, as that&#39;s covered by <a href=\"https://stackoverflow.com/a/51332822/155423\">this duplicate</a>"}], "owner": {"reputation": 19, "user_id": 10564261, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-fTrvDZkWiiw/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbDVlX3qlsE-GwhX7oEUSqlVstpQjA/mo/photo.jpg?sz=128", "display_name": "Riccardo Ripanti", "link": "https://stackoverflow.com/users/10564261/riccardo-ripanti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "closed_date": 1555677318, "answer_count": 0, "score": 0, "last_activity_date": 1555684333, "creation_date": 1555675712, "last_edit_date": 1555679231, "question_id": 55761613, "link": "https://stackoverflow.com/questions/55761613/how-can-i-return-a-reference-of-two-concatenated-strings-in-rust", "closed_reason": "Duplicate", "title": "How can I return a reference of two concatenated strings in Rust", "body": "<p>I started learning Rust three days ago so I'm just starting to understand things like memory ownership and while making an exercise I have encountered this problem:\nMy goal was to create a converter between bases and to do so I implemented a <code>Number</code> struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Number {\n    string: String, // String that represents the number\n    base: u32,      // Base of the number\n    negative: bool  // Sign of the number (true: negative, false: positive)\n}\n</code></pre>\n\n<p>In the implementation I wanted a method <code>.string()</code> which would have returned the string that represents the number and the problem occurred when I tried to insert the '-' in front of the string when the number was negative. This what I wrote:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn string(&amp;self) -&gt; &amp;String {\n    if self.negative {\n        &amp;(\"-\".to_string() + self.string.as_str())\n    }\n    else { &amp;self.string }\n}\n</code></pre>\n\n<p>The compiler says:</p>\n\n<pre><code>error[E0515]: cannot return reference to temporary value\n   --&gt; src\\number.rs:119:13\n    |\n119 |             &amp;(\"-\".to_string() + self.string.as_str())\n    |             ^----------------------------------------\n    |             ||\n    |             |temporary value created here\n    |             returns a reference to data owned by the current function\n</code></pre>\n\n<p>So my question is, how can I do that without creating a temporary value or creating a copy of the string?</p>\n"}, {"tags": ["vector", "rust", "protocol-buffers", "proto3"], "answers": [{"tags": [], "owner": {"reputation": 166, "user_id": 2518959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52b093d819e97a4b1de36224961ca73b?s=128&d=identicon&r=PG", "display_name": "galka", "link": "https://stackoverflow.com/users/2518959/galka"}, "is_accepted": true, "score": 2, "last_activity_date": 1560890623, "last_edit_date": 1560890623, "creation_date": 1560876121, "answer_id": 56653637, "question_id": 55759398, "link": "https://stackoverflow.com/questions/55759398/is-it-possible-to-include-vector-fields-in-a-protobuf-message-to-generate-rust-s/56653637#56653637", "title": "Is it possible to include vector fields in a protobuf message to generate Rust struct?", "body": "<p>You could use <a href=\"https://developers.google.com/protocol-buffers/docs/proto3\" rel=\"nofollow noreferrer\">protobuf repeated fields</a>:</p>\n\n<blockquote>\n  <p><code>repeated</code>: this field can be repeated any number of times (including zero) in a well-formed message. The order of the repeated values will be preserved.</p>\n</blockquote>\n\n<p>Like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>message bool_vec{\n    repeated bool element = 1;\n}\nmessage bool_vec_vec{\n    repeated bool_vec element = 1;\n}\nmessage myStruct {\n    ...\n    bool_vec v = 100;\n    bool_vec_vec vv = 101;\n    ...\n}\n</code></pre>\n\n<p>The <a href=\"https://developers.google.com/protocol-buffers/docs/reference/cpp/google.protobuf.repeated_field#RepeatedField\" rel=\"nofollow noreferrer\">documentation of <code>RepeatedField</code></a> from the protobuf C++ library (which represents repeated fields like the repeated <code>bool</code> here)  shows that it has what we would expect from vectors: access by index and iterators. Your generated code will also have access by index and add/remove last methods.</p>\n"}], "owner": {"reputation": 2503, "user_id": 7442673, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iTfit.jpg?s=128&g=1", "display_name": "m.raynal", "link": "https://stackoverflow.com/users/7442673/m-raynal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 0, "accepted_answer_id": 56653637, "answer_count": 1, "score": 0, "last_activity_date": 1560890623, "creation_date": 1555665161, "last_edit_date": 1555686343, "question_id": 55759398, "link": "https://stackoverflow.com/questions/55759398/is-it-possible-to-include-vector-fields-in-a-protobuf-message-to-generate-rust-s", "title": "Is it possible to include vector fields in a protobuf message to generate Rust struct?", "body": "<p>I have a protobuf file used to generate types in a project. One of the types looks like:  </p>\n\n<pre class=\"lang-proto prettyprint-override\"><code>syntax = \"proto3\";\n\n// ...\n\nmessage myStruct {\n    int32 obj_id = 1;\n    string obj_code = 2;\n    string obj_name = 3;\n    // ... some more fields\n}\n// ... some more message, enum, etc ....\n</code></pre>\n\n<p>Then I can launch a tiny script that generates some Go code though <code>protoc-gen-go</code>, that gets later translated into Rust though another script using <code>protoc-gen-rust</code>.  </p>\n\n<p>The result is a Rust file that looks like:  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// This file is generated by rust-protobuf 2.0.0. Do not edit\n// @generated\n\n// ...\n\npub struct myStruct {\n    // message fields\n    pub obj_id: i32,\n    pub obj_code: ::std::string::String,\n    pub obj_name: ::std::string::String,\n    // ... some more fields\n}\nimpl myStruct {\n    // ... lots of constructors, getters, setters, etc\n}\n</code></pre>\n\n<p>I don't want a better way to do generate the Rust types altogether, the project is massive and in prod, my job is not to rewrite/reorganize it but just to add some functionalities, for which I need some nice little vectors of flags to be added in a couple of structures.</p>\n\n<p>I'd like to add some <code>Vec</code> fields in the <code>myStruct</code> struct, like those:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct myClass {\n    // ... some fields like obj_id etc ...\n\n    // the fields I want to add\n    bool_vec: Vec&lt;bool&gt;,\n    bool_vec_vec: Vec&lt;Vec&lt;bool&gt;&gt;,\n    // ...\n}\n</code></pre>\n\n<p>Is it possible to do so using the proto-buf thing, or not? If yes, how can I do it?</p>\n"}, {"tags": ["linux", "rust", "ld", "rust-cargo", "amethyst"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555662846, "post_id": 55758892, "comment_id": 98193007, "body": "Depending of your distro, just install the &quot;libxcb&quot; package"}, {"owner": {"reputation": 521, "user_id": 1031060, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/UQH9F.jpg?s=128&g=1", "display_name": "neogeek23", "link": "https://stackoverflow.com/users/1031060/neogeek23"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1555662976, "post_id": 55758892, "comment_id": 98193058, "body": "I&#39;m on Ubuntu 18.04.  I think that package would be <code>libx11-scb-dev</code>, which I have already installed.  How can I find out what package these libraries(?) belong to?  I&#39;ll edit to include this package output now.  Thanks :)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555663386, "post_id": 55758892, "comment_id": 98193190, "body": "Not saying that SO is not the right place, but you may have more answers asking in the Amethyst discord"}, {"owner": {"reputation": 7668, "user_id": 2554472, "user_type": "registered", "profile_image": "https://graph.facebook.com/1119155584/picture?type=large", "display_name": "Mark Plotnick", "link": "https://stackoverflow.com/users/2554472/mark-plotnick"}, "edited": false, "score": 1, "creation_date": 1555665810, "post_id": 55758892, "comment_id": 98194072, "body": "You can search for the library names. <a href=\"https://packages.ubuntu.com/bionic/amd64/libxcb-shape0-dev/filelist\" rel=\"nofollow noreferrer\">packages.ubuntu.com/bionic/amd64/libxcb-shape0-dev/filelist</a> <a href=\"https://packages.ubuntu.com/bionic/amd64/libxcb-render0-dev/filelist\" rel=\"nofollow noreferrer\">packages.ubuntu.com/bionic/amd64/libxcb-render0-dev/filelist</a>"}, {"owner": {"reputation": 7668, "user_id": 2554472, "user_type": "registered", "profile_image": "https://graph.facebook.com/1119155584/picture?type=large", "display_name": "Mark Plotnick", "link": "https://stackoverflow.com/users/2554472/mark-plotnick"}, "edited": false, "score": 1, "creation_date": 1555690086, "post_id": 55758892, "comment_id": 98203784, "body": "It&#39;s possible that <code>apt-cache search</code> can be used to find those libraries, but I&#39;m not near an Ubuntu system to verify."}], "answers": [{"comments": [{"owner": {"reputation": 552, "user_id": 1552178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3fda576d8f6de000161712bcc2a3d09?s=128&d=identicon&r=PG", "display_name": "deive", "link": "https://stackoverflow.com/users/1552178/deive"}, "edited": false, "score": 0, "creation_date": 1581439943, "post_id": 55780589, "comment_id": 106430736, "body": "I also needed <code>libx11-dev</code>"}], "tags": [], "owner": {"reputation": 521, "user_id": 1031060, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/UQH9F.jpg?s=128&g=1", "display_name": "neogeek23", "link": "https://stackoverflow.com/users/1031060/neogeek23"}, "is_accepted": true, "score": 2, "last_activity_date": 1555829616, "creation_date": 1555829616, "answer_id": 55780589, "question_id": 55758892, "link": "https://stackoverflow.com/questions/55758892/missing-libraries-on-linux-with-rust-and-amethyst/55780589#55780589", "title": "Missing Libraries on Linux with Rust and Amethyst", "body": "<p>It looks like I missed installing some dependencies.</p>\n\n<p><code>sudo apt install pkg-config libasound2-dev libssl-dev cmake libfreetype6-dev libexpat1-dev libxcb-composite0-dev\n</code></p>\n\n<p><a href=\"https://github.com/amethyst/amethyst#debianubuntu\" rel=\"nofollow noreferrer\">https://github.com/amethyst/amethyst#debianubuntu</a></p>\n"}], "owner": {"reputation": 521, "user_id": 1031060, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/UQH9F.jpg?s=128&g=1", "display_name": "neogeek23", "link": "https://stackoverflow.com/users/1031060/neogeek23"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 904, "favorite_count": 0, "accepted_answer_id": 55780589, "answer_count": 1, "score": 0, "last_activity_date": 1555829616, "creation_date": 1555662688, "last_edit_date": 1555686947, "question_id": 55758892, "link": "https://stackoverflow.com/questions/55758892/missing-libraries-on-linux-with-rust-and-amethyst", "title": "Missing Libraries on Linux with Rust and Amethyst", "body": "<p>When I try to <code>cargo build</code> the 'hello world' of <a href=\"https://www.amethyst.rs/\" rel=\"nofollow noreferrer\">amethyst</a> on Ubuntu 18.04, I get an error about missing libraries from lxbcb.  I'm not sure what this error is trying to tell me or how to fix it.  It seems like I'm missing libraries <code>-lxcb-render</code>, <code>-lxcb-shap</code>, and <code>-lxcb-xfixes</code>, but I can't seem to find them.</p>\n\n<p>The hello world code of amethyst</p>\n\n<pre><code>extern crate amethyst;\n\nuse amethyst::{\n    prelude::*,\n    renderer::{DisplayConfig, DrawFlat, Pipeline, PosNormTex, RenderBundle, Stage, VirtualKeyCode},\n    utils::application_root_dir,\n    input::is_key_down,\n};\n\nstruct Example;\n\nimpl SimpleState for Example {}\n\nfn main() -&gt; amethyst::Result&lt;()&gt; {\n    amethyst::start_logger(Default::default());\n\n    let path = format!(\n        \"{}/resources/display_config.ron\",\n        application_root_dir()\n    );\n    let config = DisplayConfig::load(&amp;path);\n\n    let pipe = Pipeline::build().with_stage(\n        Stage::with_backbuffer()\n            .clear_target([0.00196, 0.23726, 0.21765, 1.0], 1.0)\n            .with_pass(DrawFlat::&lt;PosNormTex&gt;::new()),\n    );\n\n    let game_data =\n        GameDataBuilder::default().with_bundle(RenderBundle::new(pipe, Some(config)))?;\n    let mut game = Application::new(\"./\", Example, game_data)?;\n\n    game.run();\n\n    Ok(())\n}\n</code></pre>\n\n<p><code>cargo build</code> output (some of the <code>rustc</code> command removed since there is a character limit)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>brad@rhyme:~/Development/amethyst_setup/gametest$ cargo run --verbose\n       Fresh unicode-xid v0.1.0\n       Fresh cc v1.0.35\n       Fresh semver-parser v0.7.0\n       Fresh cfg-if v0.1.7\n       Fresh nodrop v0.1.13\n       Fresh rand_core v0.4.0\n       Fresh autocfg v0.1.2\n       Fresh xml-rs v0.8.0\n       Fresh scopeguard v0.3.3\n       Fresh memoffset v0.2.1\n       Fresh lazy_static v1.3.0\n       Fresh stable_deref_trait v1.1.1\n       Fresh void v1.0.2\n       Fresh bitflags v1.0.4\n       Fresh crossbeam-utils v0.5.0\n       Fresh pkg-config v0.3.14\n       Fresh same-file v1.0.4\n       Fresh linked-hash-map v0.5.2\n       Fresh downcast-rs v1.0.4\n       Fresh either v1.5.2\n       Fresh atom v0.3.5\n       Fresh mopa v0.2.2\n       Fresh xdg v2.2.0\n       Fresh rawpointer v0.1.0\n       Fresh rustc-demangle v0.1.14\n       Fresh futures v0.1.26\n       Fresh fnv v1.0.6\n       Fresh tuple_utils v0.2.0\n       Fresh libm v0.1.2\n       Fresh mint v0.5.1\n       Fresh adler32 v1.0.3\n       Fresh unicode-xid v0.0.4\n       Fresh percent-encoding v1.0.1\n       Fresh lzw v0.10.0\n       Fresh approx v0.1.1\n       Fresh color_quant v1.0.1\n       Fresh quote v0.3.15\n       Fresh build_const v0.2.1\n       Fresh scoped_threadpool v0.1.9\n       Fresh siphasher v0.2.3\n       Fresh xi-unicode v0.1.0\n       Fresh wavefront_obj v5.1.0\n       Fresh hetseq v0.2.0\n       Fresh ansi_term v0.11.0\n       Fresh unicode-width v0.1.5\n       Fresh claxon v0.3.2\n       Fresh hound v3.4.0\n       Fresh matches v0.1.8\n       Fresh strsim v0.8.0\n       Fresh vec_map v0.8.1\n       Fresh hashbrown v0.2.2\n       Fresh float-ord v0.2.0\n       Fresh fluent-locale v0.4.1\n       Fresh unicode-segmentation v1.2.1\n       Fresh semver v0.9.0\n       Fresh crossbeam-utils v0.2.2\n       Fresh proc-macro2 v0.3.8\n       Fresh cmake v0.1.38\n       Fresh rand_core v0.3.1\n       Fresh crossbeam-utils v0.6.5\n       Fresh rand_jitter v0.1.3\n       Fresh colored v1.7.0\n       Fresh owning_ref v0.4.0\n       Fresh owning_ref v0.3.3\n       Fresh xml-rs v0.7.0\n       Fresh walkdir v2.2.7\n       Fresh itertools v0.7.11\n       Fresh synom v0.11.3\n       Fresh inflate v0.4.5\n       Fresh gif v0.10.1\n       Fresh phf_shared v0.7.24\n       Fresh annotate-snippets v0.1.0\n       Fresh textwrap v0.11.0\n       Fresh proc-macro2 v0.4.27\n       Fresh rustc_version v0.2.3\n       Fresh libc v0.2.51\n       Fresh arrayvec v0.4.10\n       Fresh rand_hc v0.1.0\n       Fresh rand_xorshift v0.1.1\n       Fresh rand_isaac v0.1.1\n       Fresh quote v0.5.2\n       Fresh num-traits v0.2.6\n       Fresh byteorder v1.3.1\n       Fresh lock_api v0.1.5\n       Fresh khronos_api v2.2.0\n       Fresh khronos_api v3.1.0\n       Fresh typenum v1.10.0\n       Fresh nonzero_signed v1.0.3\n       Fresh matrixmultiply v0.1.15\n       Fresh syn v0.11.11\n       Fresh quote v0.6.12\n       Fresh libloading v0.5.0\n       Fresh crossbeam-epoch v0.3.1\n       Fresh rand v0.5.6\n       Fresh rand v0.4.6\n       Fresh num_cpus v1.10.0\n       Fresh nix v0.13.0\n       Fresh crossbeam-epoch v0.7.1\n       Fresh rand_os v0.1.3\n       Fresh crossbeam-epoch v0.5.2\n       Fresh crossbeam-epoch v0.6.1\n       Fresh memmap v0.7.0\n       Fresh shared_library v0.1.9\n       Fresh time v0.1.42\n       Fresh slice-deque v0.1.16\n       Fresh phf v0.7.24\n       Fresh atty v0.2.11\n       Fresh memmap v0.6.2\n       Fresh fluent-syntax v0.1.1\n       Fresh dirs v1.0.5\n       Fresh ordered-float v1.0.2\n       Fresh approx v0.3.2\n       Fresh line_drawing v0.7.0\n       Fresh backtrace-sys v0.1.28\n       Fresh num-integer v0.1.39\n       Fresh syn v0.13.11\n       Fresh num-traits v0.1.43\n       Fresh minimp3-sys v0.3.1\n       Fresh rand_chacha v0.1.1\n       Fresh rustc-hash v1.0.1\n       Fresh stb_truetype v0.2.6\n       Fresh rand_pcg v0.1.2\n       Fresh fxhash v0.2.1\n       Fresh deflate v0.7.19\n       Fresh base64 v0.10.1\n       Fresh ogg v0.7.0\n       Fresh syn v0.15.32\n       Fresh wayland-scanner v0.21.12\n       Fresh generic-array v0.11.1\n       Fresh x11-dl v2.18.3\n       Fresh gfx_macros v0.2.1\n       Fresh alsa-sys v0.1.2\n       Fresh crc v1.8.1\n       Fresh dlib v0.4.1\n       Fresh crossbeam-deque v0.2.0\n       Fresh crossbeam-deque v0.7.1\n       Fresh rand v0.3.23\n       Fresh crossbeam-deque v0.5.2\n       Fresh osmesa-sys v0.1.2\n       Fresh intl_pluralrules v1.0.3\n       Fresh clap v2.33.0\n       Fresh backtrace v0.3.15\n       Fresh num-bigint v0.2.2\n       Fresh num-iter v0.1.37\n       Fresh chrono v0.4.6\n       Fresh cgmath v0.16.1\n       Fresh glsl-layout-derive v0.1.1\n       Fresh servo-freetype-sys v4.0.5\n       Fresh expat-sys v2.1.6\n       Fresh minimp3 v0.3.2\n       Fresh rand v0.6.5\n       Fresh serde_derive v1.0.90\n       Fresh derivative v1.0.2\n       Fresh shred-derive v0.5.1\n       Fresh num-derive v0.2.4\n       Fresh euclid_macros v0.1.0\n       Fresh synstructure v0.10.1\n       Fresh amethyst_derive v0.3.0\n       Fresh getset v0.0.7\n       Fresh wayland-sys v0.21.12\n       Fresh rayon-core v1.4.1\n       Fresh rusttype v0.7.6\n       Fresh cpal v0.8.2\n       Fresh cgmath v0.14.1\n       Fresh error-chain v0.12.0\n       Fresh num-rational v0.2.1\n       Fresh png v0.12.0\n       Fresh rustc_version_runtime v0.1.5\n       Fresh serde v1.0.90\n       Fresh genmesh v0.6.2\n       Fresh servo-fontconfig-sys v4.0.7\n       Fresh twox-hash v1.2.0\n       Fresh freetype v0.4.1\n       Fresh tiff v0.2.2\n       Fresh euclid v0.19.8\n       Fresh failure_derive v0.1.5\n       Fresh wayland-commons v0.21.12\n       Fresh rayon v1.0.3\n       Fresh andrew v0.2.1\n       Fresh glyph_brush_layout v0.1.5\n       Fresh vergen v2.1.3\n       Fresh smallvec v0.6.9\n       Fresh log v0.4.6\n       Fresh num-complex v0.2.1\n       Fresh draw_state v0.8.0\n       Fresh ron v0.4.2\n       Fresh bincode v1.1.3\n       Fresh uuid v0.7.4\n       Fresh lyon_geom v0.12.4\n       Fresh servo-fontconfig v0.4.0\n       Fresh failure v0.1.5\n       Fresh parking_lot_core v0.3.1\n       Fresh parking_lot_core v0.2.14\n       Fresh wayland-client v0.21.12\n       Fresh gl_generator v0.9.0\n       Fresh parking_lot_core v0.4.0\n       Fresh hibitset v0.5.4\n       Fresh shred v0.7.2\n       Fresh gl_generator v0.10.0\n       Fresh alga v0.7.2\n       Fresh jpeg-decoder v0.1.15\n       Fresh xcb v0.8.2\n       Fresh lewton v0.9.4\n       Fresh num v0.2.0\n       Fresh glyph_brush v0.4.2\n       Fresh unicode-normalization v0.1.8\n       Fresh crossbeam-channel v0.3.8\n       Fresh fern v0.5.8\n       Fresh gfx_core v0.8.3\n       Fresh parking_lot v0.6.4\n       Fresh parking_lot v0.5.5\n       Fresh amethyst_config v0.9.0\n       Fresh lyon_path v0.12.0\n       Fresh laminar v0.1.0\n       Fresh fluent v0.4.3\n       Fresh wayland-protocols v0.21.12\n       Fresh parking_lot v0.7.1\n       Fresh nalgebra v0.16.13\n       Fresh image v0.20.1\n       Fresh x11-clipboard v0.3.1\n       Fresh rodio v0.8.1\n       Fresh crossbeam-channel v0.2.6\n       Fresh glsl-layout v0.1.1\n       Fresh gfx v0.17.1\n       Fresh minterpolate v0.4.0\n       Fresh shrev v1.0.1\n       Fresh smithay-client-toolkit v0.4.5\n       Fresh font-kit v0.1.0\n       Fresh crossbeam v0.4.1\n       Fresh clipboard v0.5.0\n       Fresh gfx_glyph v0.13.3\n       Fresh specs v0.14.3\n       Fresh winit v0.18.1\n       Fresh gfx_gl v0.5.0\n       Fresh specs-hierarchy v0.3.0\n       Fresh glutin v0.19.0\n       Fresh amethyst_core v0.5.0\n       Fresh gfx_device_gl v0.15.5\n       Fresh amethyst_assets v0.6.0\n       Fresh gfx_window_glutin v0.27.0\n       Fresh amethyst_network v0.3.0\n       Fresh amethyst_renderer v0.10.4\n       Fresh amethyst_audio v0.5.0\n       Fresh amethyst_locale v0.4.0\n       Fresh amethyst_input v0.6.0\n       Fresh amethyst_animation v0.5.0\n       Fresh amethyst_controls v0.4.0\n       Fresh amethyst_ui v0.5.0\n       Fresh amethyst_utils v0.5.0\n       Fresh amethyst v0.10.0\n   Compiling gametest v0.1.0 (/home/brad/Development/amethyst_setup/gametest)\n     Running `rustc --edition=2018 --crate-name gametest src/main.rs --color always --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=8a344c992f010775 -C extra-filename=-8a344c992f010775 --out-dir /home/brad/Development/amethyst_setup/gametest/target/debug/deps -C incremental=/home/brad/Development/amethyst_setup/gametest/target/debug/incremental -L dependency=/home/brad/Development/amethyst_setup/gametest/target/debug/deps --extern amethyst=/home/brad/Development/amethyst_setup/gametest/target/debug/deps/libamethyst-618119f166e173bf.rlib -L native=/home/brad/Development/amethyst_setup/gametest/target/debug/build/backtrace-sys-af21dccdd6a6a2ad/out -L native=/home/brad/Development/amethyst_setup/gametest/target/debug/build/libloading-ec1dd9ac5a65377a/out ...-Wl,--end-group\" \"/home/brad/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-c4b4b16c70e666d9.rlib\" \"-Wl,-Bdynamic\" \"-lexpat\" \"-lxcb\" \"-lxcb\" \"-lxcb\" \"-lxcb\" \"-lxcb-render\" \"-lxcb-shape\" \"-lxcb-xfixes\" \"-lasound\" \"-ldl\" \"-ldl\" \"-lutil\" \"-lutil\" \"-ldl\" \"-lrt\" \"-lpthread\" \"-lgcc_s\" \"-lc\" \"-lm\" \"-lrt\" \"-lpthread\" \"-lutil\" \"-lutil\"\n  = note: /usr/bin/ld: cannot find -lxcb-render\n          /usr/bin/ld: cannot find -lxcb-shape\n          /usr/bin/ld: cannot find -lxcb-xfixes\n          collect2: error: ld returned 1 exit status\n\n\nerror: aborting due to previous error\n\nerror: Could not compile `gametest`.\n\nCaused by:\n  process didn't exit successfully: `rustc --edition=2018 --crate-name gametest src/main.rs --color always --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=8a344c992f010775 -C extra-filename=-8a344c992f010775 --out-dir /home/brad/Development/amethyst_setup/gametest/target/debug/deps -C incremental=/home/brad/Development/amethyst_setup/gametest/target/debug/incremental -L dependency=/home/brad/Development/amethyst_setup/gametest/target/debug/deps --extern amethyst=/home/brad/Development/amethyst_setup/gametest/target/debug/deps/libamethyst-618119f166e173bf.rlib -L native=/home/brad/Development/amethyst_setup/gametest/target/debug/build/backtrace-sys-af21dccdd6a6a2ad/out -L native=/home/brad/Development/amethyst_setup/gametest/target/debug/build/libloading-ec1dd9ac5a65377a/out -L native=/usr/lib/x86_64-linux-gnu -L native=/home/brad/Development/amethyst_setup/gametest/target/debug/build/minimp3-sys-23d2f40602e9e7e8/out -L native=/home/brad/Development/amethyst_setup/gametest/target/debug/build/servo-freetype-sys-3c5b6f9e4acfbf1c/out/lib -L native=/home/brad/Development/amethyst_setup/gametest/target/debug/build/servo-fontconfig-sys-e66049aa5a9b8f2a/out -L native=/usr/lib/x86_64-linux-gnu` (exit code: 1)\n</code></pre>\n\n<p>Package Info (I think this is the package that would contain what I'm missing)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>brad@rhyme:~/Development/amethyst_setup/gametest$ sudo apt-get install libx11-xcb-dev\n[sudo] password for brad: \nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nlibx11-xcb-dev is already the newest version (2:1.6.4-3ubuntu0.2).\n0 upgraded, 0 newly installed, 0 to remove and 25 not upgraded.\n</code></pre>\n"}, {"tags": ["rust", "thread-safety", "uci"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1555662600, "post_id": 55758835, "comment_id": 98192920, "body": "You want to use AtomicBool. I advice you to read more about Rust before playing with threads."}, {"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555663035, "post_id": 55758835, "comment_id": 98193078, "body": "@FrenchBoiethios If I replace my bools with AtomicBool , I get the compile error: <code>error[E0382]: borrow of moved value: </code>stop`   --&gt; src\\uci\\uci_parser.rs:34:18    | 34 |                 *stop.get_mut()=false;;    |                  ^^^^ value borrowed here after move ... 42 |                 thread::spawn(move || {    |                               ------- value moved into closure here, in pre vious iteration of loop    |    = note: move occurs because <code>stop</code> has type <code>std::sync::atomic::AtomicBool</code>, which does not implement the <code>Copy</code> trait`"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1555663169, "post_id": 55758835, "comment_id": 98193118, "body": "You need a little more than an atomicBool. You need an Arc. Here&#39;s an example (without sleep): <a href=\"https://github.com/Canop/broot/blob/master/src/app.rs#L240\" rel=\"nofollow noreferrer\">github.com/Canop/broot/blob/master/src/app.rs#L240</a> Do you want an answer for that?"}, {"owner": {"reputation": 623, "user_id": 10962821, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-2LR2CPhrhu0/AAAAAAAAAAI/AAAAAAAAAAc/OGsF9pFiFOU/photo.jpg?sz=128", "display_name": "sn99", "link": "https://stackoverflow.com/users/10962821/sn99"}, "edited": false, "score": 0, "creation_date": 1555663338, "post_id": 55758835, "comment_id": 98193174, "body": "You have to use <code>Arc</code> to obtain your goal"}], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 0, "creation_date": 1555664009, "post_id": 55759077, "comment_id": 98193398, "body": "Thanks this worked. However I had to move <code>Arc:.clone(&amp;stop)</code> outside of the closure, else I got a compiler error"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "edited": false, "score": 0, "creation_date": 1555664288, "post_id": 55759077, "comment_id": 98193515, "body": "@Fabianv.d.W right. Edited."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1555664542, "post_id": 55759077, "comment_id": 98193615, "body": "Is there an issue to write: <code>stop.clone()</code>?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1555664588, "post_id": 55759077, "comment_id": 98193628, "body": "@FrenchBoiethios yes, see the doc of Arc: &quot;The Arc::clone(&amp;from) syntax is the most idiomatic because it conveys more explicitly the meaning of the code&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555686547, "post_id": 55759077, "comment_id": 98202283, "body": "See also <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>; which allows you to avoid the <code>Arc</code> entirely."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 3, "last_activity_date": 1555686510, "last_edit_date": 1555686510, "creation_date": 1555663601, "answer_id": 55759077, "question_id": 55758835, "link": "https://stackoverflow.com/questions/55758835/how-to-share-a-pointer-to-a-mutable-variable-to-a-thread/55759077#55759077", "title": "How to share a pointer to a mutable variable to a thread?", "body": "<p>You'll need to use a special reference, an <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\">Arc</a> to share the boolean value between threads:</p>\n\n<pre><code>pub fn main() {\n    let stop = Arc::new(AtomicBool::new(false));\n    loop {\n        //...\n\n        let stop = Arc::clone(&amp;stop);\n        thread::spawn(move || {\n            start_search(stop);\n        })\n    }\n}\n</code></pre>\n\n<pre><code>pub fn start_search(stop: Arc&lt;AtomicBool&gt;) {\n    loop {\n        if stop.load(Ordering::Relaxed) {\n            // STOP\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 452, "favorite_count": 0, "closed_date": 1555686584, "accepted_answer_id": 55759077, "answer_count": 1, "score": 1, "last_activity_date": 1555686644, "creation_date": 1555662356, "last_edit_date": 1555663481, "question_id": 55758835, "link": "https://stackoverflow.com/questions/55758835/how-to-share-a-pointer-to-a-mutable-variable-to-a-thread", "closed_reason": "Duplicate", "title": "How to share a pointer to a mutable variable to a thread?", "body": "<p>I have to implement the UCI <a href=\"http://wbec-ridderkerk.nl/html/UCIProtocol.html\" rel=\"nofollow noreferrer\">protocol</a> for my chess engine.</p>\n\n<p>It requires to read commands from command line. When the <code>go</code> command is sent, a search has to be started. However, during this search, other commands such as <code>stop</code> still have to be received. In the case of <code>stop</code>, the search has to quit altogether.</p>\n\n<p>This is how the code looks (with leaving out non-important details).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn main() {\n    let mut stop: bool = false;\n    loop {\n        line.clear();\n        stdin.read_line(&amp;mut line).ok().unwrap();\n        let arg: Vec&lt;&amp;str&gt; = line.split_whitespace().collect();\n        let cmd = arg[0];\n        match cmd.trim() {\n            \"\" =&gt; continue,\n            \"go\" =&gt; {\n                stop = false;\n                thread::spawn(move || start_search(&amp;stop, GameState, History, Timecontrol));\n            }\n            \"stop\" =&gt; {\n                stop = true;\n                thread::sleep(Duration::from_millis(50));\n            }\n            \"quit\" =&gt; {\n                stop = true;\n                thread::sleep(Duration::from_millis(50));\n                break;\n            }\n            _ =&gt; {\n                println!(\"Unknown command {}\", line);\n            }\n        }\n    }\n}\n\npub fn start_search(stop_reference: &amp;bool, _: GameState, _: History, _: Timecontrol) {\n    /* Do search stuff here...\n     */\n    //Has to break when stop_reference is set to true\n}\n</code></pre>\n\n<p>This code doesn't work because I assume the field just get's copied. However I have tried giving structs and then the code complains because you can't have a mutable reference and a normal reference both at once. I have also looked into ways to communicate with a thread. However most of the solutions used a channel to achieve that, but I think a channel doesn't work in my case since the thread is always calculating, so it would only receive the channels' command after it has terminated anyway.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1555663003, "post_id": 55758511, "comment_id": 98193069, "body": "I don&#39;t understand why using type parameter is tought to do but instead you can <code>Box</code> the <code>Fn</code> -&gt;  <code>Func(Box&lt;Fn(&amp;Vec&lt;RispExp&gt;) -&gt; Result&lt;RispExp, RispErr&gt;&gt;),</code>"}, {"owner": {"reputation": 2289, "user_id": 1292663, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/OPOmE.jpg?s=128&g=1", "display_name": "Stepan Parunashvili", "link": "https://stackoverflow.com/users/1292663/stepan-parunashvili"}, "edited": false, "score": 0, "creation_date": 1556348252, "post_id": 55758511, "comment_id": 98415317, "body": "Thanks for the Box idea Omer. The only problem with that, is that <code>dyn fn</code> does not implement <code>clone</code>. The reason using the type parameter seemed tough to do, was because I would have to repeat that long line over and over again in a bunch of places. What would you recommend I do?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 3, "creation_date": 1556423424, "post_id": 55758511, "comment_id": 98431391, "body": "What about <code>Func(Rc&lt;Fn(&amp;Vec&lt;RispExp&gt;) -&gt; Result&lt;RispExp, RispErr&gt;&gt;)</code>? (Or <code>Arc&lt;...&gt;</code> if you need <code>RispExp</code> to be <code>Send</code> and/or <code>Sync</code>)"}], "answers": [{"tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": true, "score": 0, "last_activity_date": 1557919633, "creation_date": 1557919633, "answer_id": 56148265, "question_id": 55758511, "link": "https://stackoverflow.com/questions/55758511/how-to-store-impl-fn-in-an-enum-type/56148265#56148265", "title": "How to store impl Fn in an enum type?", "body": "<p>If you want to save on typing, make your type parameter bound into an alias.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type RispFunc&lt;T&gt; = Fn(&amp;Vec&lt;RispExp&lt;T&gt;&gt;) -&gt; Result&lt;RispExp&lt;T&gt;, RispErr&gt;;\n\nenum RispExp&lt;Func: RispFunc&lt;Func&gt;&gt; {\n  ...\n}\n</code></pre>\n\n<p>Otherwise, if you use the trait object approach, you can try to implement your own <code>clone()</code> - <a href=\"https://stackoverflow.com/questions/30353462/how-to-clone-a-struct-storing-a-boxed-trait-object\">How to clone a struct storing a boxed trait object?</a> .</p>\n"}], "owner": {"reputation": 2289, "user_id": 1292663, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/OPOmE.jpg?s=128&g=1", "display_name": "Stepan Parunashvili", "link": "https://stackoverflow.com/users/1292663/stepan-parunashvili"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 428, "favorite_count": 0, "accepted_answer_id": 56148265, "answer_count": 1, "score": 2, "last_activity_date": 1593113952, "creation_date": 1555660675, "last_edit_date": 1593113952, "question_id": 55758511, "link": "https://stackoverflow.com/questions/55758511/how-to-store-impl-fn-in-an-enum-type", "title": "How to store impl Fn in an enum type?", "body": "<p>I had a use-case where I wanted to store a function in an enum type</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nenum RispErr {\n    Reason(String),\n}\n\n#[derive(Clone)]\nenum RispExp {\n    Bool(bool),\n    Symbol(String),\n    Number(f64),\n    List(Vec&lt;RispExp&gt;),\n    Func(fn(&amp;Vec&lt;RispExp&gt;) -&gt; Result&lt;RispExp, RispErr&gt;),\n}\n</code></pre>\n<p>In one case, I wanted to create a higher order function to generate these</p>\n<pre class=\"lang-rust prettyprint-override\"><code>// simplifying this for the question\n// shortening this for brevity\nfn make_tonicity_checker(\n    tone_fn: fn(f64, f64) -&gt; bool,\n) -&gt; impl Fn(&amp;Vec&lt;RispExp&gt;) -&gt; Result&lt;RispExp, RispErr&gt; {\n    return move |args: &amp;Vec&lt;RispExp&gt;| -&gt; Result&lt;RispExp, RispErr&gt; {\n        tone_fn(1.0, 2.0); // need to use this\n        return Ok(RispExp::Bool(true));\n    };\n}\n</code></pre>\n<p>I come across errors though when I tried to use the higher order function</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn f() -&gt; () {\n    RispExp::Func(make_tonicity_checker(|a, b| a &gt; b));\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>mismatched types\n\nexpected fn pointer, found opaque type\n\nnote: expected type `for&lt;'r&gt; fn(&amp;'r std::vec::Vec&lt;RispExp&gt;) -&gt; std::result::Result&lt;RispExp, RispErr&gt;`\n         found type `impl for&lt;'r&gt; std::ops::Fn&lt;(&amp;'r std::vec::Vec&lt;RispExp&gt;,)&gt;`rustc(E0308)\nmain.rs(93, 5): expected fn pointer, found opaque type\n</code></pre>\n<p>I dug deeper and realized that function pointers cannot capture the environment, and hence the error. I tried</p>\n<pre class=\"lang-rust prettyprint-override\"><code>Func(Fn(&amp;Vec&lt;RispExp&gt;) -&gt; Result&lt;RispExp, RispErr&gt;),\n</code></pre>\n<p>but, realized this fails too, as it doesn't have a size known at compile time. with some googling, I found that I could potentially pass this in as a type parameter</p>\n<pre><code>#[derive(Clone)]\nenum RispExp&lt;T&gt;\nwhere\n    T: Fn(&amp;Vec&lt;RispExp&lt;T&gt;&gt;) -&gt; Result&lt;RispExp&lt;T&gt;, RispErr&gt;,\n{\n    Bool(bool),\n    Symbol(String),\n    Number(f64),\n    List(Vec&lt;RispExp&lt;T&gt;&gt;),\n    Func(T),\n}\n</code></pre>\n<p>but then, in all places where I accept <code>RispExp</code>, I would need to provide this type parameter. That seems a bit annoying to do, because I would have to repeat <code>where T: Fn(&amp;Vec&lt;RispExp&lt;T&gt;&gt;) -&gt; Result&lt;RispExp&lt;T&gt;, RispErr&gt;,</code> everywhere.</p>\n<p>I could do <code>Func(Box&lt;Fn(&amp;Vec&lt;RispExp&gt;) -&gt; Result&lt;RispExp, RispErr&gt;&gt;)</code>, but then <code>dyn fn</code> doesn't implement <code>Clone</code>.</p>\n<p>What would you recommend I do?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555660260, "post_id": 55758370, "comment_id": 98192208, "body": "Is only one package mandatory? I would use different crates if I were you."}, {"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555660639, "post_id": 55758370, "comment_id": 98192333, "body": "I&#39;m new to rust so still figuring out the best approach. Splitting this into multiple packages seems overkill though.The code is closely related and I&#39;d expect it to be kept together. For example, I&#39;d expect it all to be in a single git repository. There is obviously some expectation of multiple binaries in one package - hence the support for multiple source files in the src/bin directory - but if they are only single files that seems very limiting unless you have very large files. I prefer to keep source files to no more than 100 to 200 lines if possible."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555660813, "post_id": 55758370, "comment_id": 98192379, "body": "You can have several crates (packages) in one project: <a href=\"https://github.com/amethyst/amethyst/blob/master/Cargo.toml#L79\" rel=\"nofollow noreferrer\">github.com/amethyst/amethyst/blob/master/Cargo.toml#L79</a> IMO, the mix of a library and a binary in one crate is useful when the only function of your binary is to call your library, when all the work is done. For a more complex project, it is better to split that in different crates."}, {"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555661126, "post_id": 55758370, "comment_id": 98192478, "body": "Wow! That&#39;s a bit over my head - my Cargo.toml files are all less than 10 lines long! By splitting into different crates, do you mean different packages?"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1555662002, "post_id": 55758370, "comment_id": 98192734, "body": "If you go for several crates, check out workspaces: <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\">doc.rust-lang.org/cargo/reference/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555662779, "post_id": 55758370, "comment_id": 98192978, "body": "@Bob A package in Rust is named a &quot;crate&quot;."}, {"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555675210, "post_id": 55758370, "comment_id": 98197553, "body": "@French I don&#39;t think that&#39;s quite right. <a href=\"https://doc.rust-lang.org/book/ch07-01-packages-and-crates-for-making-libraries-and-executables.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a> says &quot;A package has a Cargo.toml that describes how to build one or more crates. At most one crate in a package can be a library.&quot;"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555678111, "post_id": 55758370, "comment_id": 98198724, "body": "@Bob Oh, ok, thanks! TIL."}, {"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1555745648, "post_id": 55758370, "comment_id": 98215725, "body": "Please note: Shepmaster has marked this as a duplicate, but the questions referenced as duplicates do not (quite) address the question I was asking. However, starblue&#39;s answer below does."}], "answers": [{"comments": [{"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1555675353, "post_id": 55758681, "comment_id": 98197592, "body": "Thanks - that is exactly what I was looking for."}, {"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1555745818, "post_id": 55758681, "comment_id": 98215751, "body": "Can I ask why you edited the title of my question? I think it&#39;s not quite right as I was specifically asking about three crates in one package: a library crate and two binary crates. The executables are not in the library crate - they are crates within the package."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "reply_to_user": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1555753505, "post_id": 55758681, "comment_id": 98217307, "body": "Don&#39;t be too nitpicky about crate vs package, most people will always use crate. I&#39;ll have to check when that disctinction was added in the manual, it feels recent to me (but I might be wrong)."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 2, "last_activity_date": 1555661452, "creation_date": 1555661452, "answer_id": 55758681, "question_id": 55758370, "link": "https://stackoverflow.com/questions/55758370/file-layout-for-multiple-executables-in-a-library-crate/55758681#55758681", "title": "File layout for multiple executables in a library crate", "body": "<p>You can put your <code>fn main()</code> into  <code>src/bin/firstbin/main.rs</code> and add more files for submodules in the same directory. This is documented in <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-project-layout\" rel=\"nofollow noreferrer\">this section</a> of the Cargo manual (in the text, the gray box is wrong).</p>\n"}], "owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2376, "favorite_count": 0, "closed_date": 1555685645, "accepted_answer_id": 55758681, "answer_count": 1, "score": 2, "last_activity_date": 1555685681, "creation_date": 1555659976, "last_edit_date": 1555661720, "question_id": 55758370, "link": "https://stackoverflow.com/questions/55758370/file-layout-for-multiple-executables-in-a-library-crate", "closed_reason": "Duplicate", "title": "File layout for multiple executables in a library crate", "body": "<p>I'd like to create a rust package with two binary crates and a library which contains the shared code. I know how do do this for a simple program by putting the source files for the binaries in a <code>src/bin/</code> subdirectory (e.g. <code>src/bin/firstbin.rs</code> and <code>src/bin/secondbin.rs</code>) and the library code either in <code>src/</code> or in <code>src/lib/</code>.</p>\n\n<p>However, if the binaries have a substantial amount of non-shared code which does not belong in the library, and I want to split their source into multiple files, I'm not sure of how to lay out the source files. I'm thinking something along the lines of having <code>src/bin/firstbin/</code> for the files which belong only to the first binary, and <code>src/bin/secondbin/</code> for the second binary. However, I'm not sure how to reference these files from <code>firstbin.rs</code> and <code>secondbin.rs</code>.</p>\n\n<p>So is this the right approach and if so how do I reference the files? If not, what's the best layout?</p>\n"}, {"tags": ["error-handling", "rust", "try-catch"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1555685318, "post_id": 55756926, "comment_id": 98201784, "body": "Just to chime in, but <code>failure</code> is not the only crate that helps with error management. There are many, each with different focus."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1555685507, "post_id": 55756926, "comment_id": 98201866, "body": "Note that your closure expression is exactly <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=805b37002e0965c5d0705b7ab11acabd\" rel=\"nofollow noreferrer\">what the <code>try</code> block is intended to be used as</a>."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 29, "last_activity_date": 1555685283, "last_edit_date": 1555685283, "creation_date": 1555650924, "answer_id": 55756926, "question_id": 55755552, "link": "https://stackoverflow.com/questions/55755552/what-is-the-rust-equivalent-to-a-try-catch-statement/55756926#55756926", "title": "What is the Rust equivalent to a try-catch statement?", "body": "<p>There is no try catch statement in Rust. The closest approach is the <code>?</code> operator.</p>\n\n<p>However, you do not have to create a function and a <code>match</code> statement to resolve it in the end. You can define a closure in your scope and use <code>?</code> operator inside the closure. Then throws are held in the closure return value and you can catch this wherever you want like following:</p>\n\n<pre><code>fn main() {\n    let do_steps = || -&gt; Result&lt;(), MyError&gt; {\n        do_step_1()?;\n        do_step_2()?;\n        do_step_3()?;\n        Ok(())\n    };\n\n    if let Err(_err) = do_steps() {\n        println!(\"Failed to perform necessary steps\");\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=a8c1ea6fd8973b4be17adca66ca03052\" rel=\"noreferrer\">Playground</a></p>\n\n<blockquote>\n  <p>Is it possible to handle multiple different errors at once instead of individually in Rust without using additional functions?</p>\n</blockquote>\n\n<p>Yes it is possible. There is a <a href=\"https://docs.rs/failure/0.1.5/failure/\" rel=\"noreferrer\"><strong>failure</strong></a> crate for the error management in Rust. Using <code>Failure</code>, you can chain, convert, concatenate the errors. After converting the error types to one common type, you can catch (handle) it easily.</p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 18, "last_activity_date": 1555685352, "last_edit_date": 1555685352, "creation_date": 1555658186, "answer_id": 55758013, "question_id": 55755552, "link": "https://stackoverflow.com/questions/55755552/what-is-the-rust-equivalent-to-a-try-catch-statement/55758013#55758013", "title": "What is the Rust equivalent to a try-catch statement?", "body": "<p><code>Result</code>s in Rust can be chained using <code>and_then</code>. So you can do this:</p>\n\n<pre><code>if let Err(e) = do_step_1().and_then(do_step_2).and_then(do_step_3) {\n    println!(\"Failed to perform necessary steps\");\n}\n</code></pre>\n\n<p>or if you want a more compact syntax, you can do it with a macro:</p>\n\n<pre><code>macro_rules! attempt { // `try` is a reserved keyword\n   (@recurse ($a:expr) { } catch ($e:ident) $b:block) =&gt; {\n      if let Err ($e) = $a $b\n   };\n   (@recurse ($a:expr) { $e:expr; $($tail:tt)* } $($handler:tt)*) =&gt; {\n      attempt!{@recurse ($a.and_then (|_| $e)) { $($tail)* } $($handler)*}\n   };\n   ({ $e:expr; $($tail:tt)* } $($handler:tt)*) =&gt; {\n      attempt!{@recurse ($e) { $($tail)* } $($handler)* }\n   };\n}\n\nattempt!{{\n   do_step1();\n   do_step2();\n   do_step3();\n} catch (e) {\n   println!(\"Failed to perform necessary steps: {}\", e);\n}}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=95979b17196adbc203c4f563e00d384b\" rel=\"noreferrer\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 2729, "user_id": 499839, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/niGfa.jpg?s=128&g=1", "display_name": "Mika Vatanen", "link": "https://stackoverflow.com/users/499839/mika-vatanen"}, "is_accepted": false, "score": 2, "last_activity_date": 1605375395, "creation_date": 1605375395, "answer_id": 64836728, "question_id": 55755552, "link": "https://stackoverflow.com/questions/55755552/what-is-the-rust-equivalent-to-a-try-catch-statement/64836728#64836728", "title": "What is the Rust equivalent to a try-catch statement?", "body": "<p>There's also an unstable feature called <code>try_blocks</code> (<a href=\"https://doc.rust-lang.org/beta/unstable-book/language-features/try-blocks.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/beta/unstable-book/language-features/try-blocks.html</a>, <a href=\"https://github.com/rust-lang/rust/issues/31436\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/31436</a>)</p>\n<p>Usage example:</p>\n<pre><code>#![feature(try_blocks)]\n\nfn main() {\n    // you need to define the result type explicitly\n    let result: Result&lt;(), Error&gt; = try {\n        do_step_1()?;\n        do_step_2()?;\n        do_step_3()?;\n    };\n\n    if let Err(e) = result {\n        println!(&quot;Failed to perform necessary steps, ({:?})&quot;, e);\n    }\n}\n\nfn do_step_1() -&gt; Result&lt;(), Error&gt; { Ok(()) }\nfn do_step_2() -&gt; Result&lt;(), Error&gt; { Ok(()) }\nfn do_step_3() -&gt; Result&lt;(), Error&gt; { Err(Error::SomeError) }\n\n#[derive(Debug)]\nenum Error {\n    SomeError,\n}\n</code></pre>\n"}], "owner": {"reputation": 3024, "user_id": 3489291, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/pB91r.png?s=128&g=1", "display_name": "Marc Guiselin", "link": "https://stackoverflow.com/users/3489291/marc-guiselin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13154, "favorite_count": 7, "accepted_answer_id": 55756926, "answer_count": 3, "score": 30, "last_activity_date": 1605375395, "creation_date": 1555637691, "last_edit_date": 1555685229, "question_id": 55755552, "link": "https://stackoverflow.com/questions/55755552/what-is-the-rust-equivalent-to-a-try-catch-statement", "title": "What is the Rust equivalent to a try-catch statement?", "body": "<p>Is it possible to handle multiple different errors at once instead of individually in Rust <strong>without using additional functions</strong>? In short: what is the Rust equivalent to a try-catch statement?</p>\n\n<p>A feature like this (<a href=\"https://github.com/rust-lang/rfcs/pull/243\" rel=\"noreferrer\">First-class error handling with <code>?</code> and <code>catch</code></a>) was suggested back in 2016, but I can't tell what came out of it and how a 2019 solution for such a problem might look like.</p>\n\n<p>For example, doing something like this:</p>\n\n<pre><code>try {\n    do_step_1()?;\n    do_step_2()?;\n    do_step_3()?;\n    // etc\n} catch {\n    alert_user(\"Failed to perform necessary steps\");\n}\n</code></pre>\n\n<p>Instead of:</p>\n\n<pre><code>match do_steps() {\n    Ok(_) =&gt; (),\n    _ =&gt; alert_user(\"Failed to perform necessary steps\")\n}\n\n// Additional function:\nfn do_steps() -&gt; Result&lt;(), Error&gt;{\n    do_step_1()?;\n    do_step_2()?;\n    do_step_3()?;\n    // etc\n    Ok(())\n}\n</code></pre>\n\n<p>My program has a function which checks a variety of different places in the registry for different data values and returns some aggregate data. It would need to use many of these try-cache statements with try-catch inside of other try-catch inside of loops.</p>\n"}, {"tags": ["reference", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555630597, "post_id": 55752610, "comment_id": 98186088, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a> and/or <a href=\"https://stackoverflow.com/q/30422177/155423\">How do I write an iterator that returns references to itself?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55752610/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555630703, "post_id": 55752610, "comment_id": 98186107, "body": "TL;DR \u2014 If you took <code>self</code> and did <code>impl&lt;T&gt; Vector for VectorImplementation1&lt;T&gt;</code>, then the vector would go out of scope and the reference could never be valid. If you took <code>&amp;self</code> and did <code>impl&lt;T&gt; Vector for VectorImplementation1&lt;T&gt;</code>, then you&#39;d be trying to tie the reference of the returned value to a lifetime you can&#39;t name."}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 0, "last_activity_date": 1555701294, "last_edit_date": 1555701294, "creation_date": 1555636959, "answer_id": 55755493, "question_id": 55752610, "link": "https://stackoverflow.com/questions/55752610/why-doesnt-a-trait-implementation-compile-for-a-struct-but-it-compiles-for-a-r/55755493#55755493", "title": "Why doesn&#39;t a trait implementation compile for a struct, but it compiles for a reference to the struct?", "body": "<p>The problem here, as mentioned by the compiler error, is that the lifetime <code>'a</code> has no reason to be there if it is implemented like so:</p>\n\n<pre><code>impl&lt;'a, T&gt; Vector for VectorImplementation1&lt;T&gt; {\n    /**/\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the lifetime parameter `'a` is not constrained by the impl \ntrait, self type, or predicates\n  --&gt; src/main.rs:13:6\n   |\n13 | impl&lt;'a, T&gt; Vector for VectorImplementation1&lt;T&gt; {\n   |      ^^ unconstrained lifetime parameter\n</code></pre>\n\n<p>Because the compiler only looks at the definition, and not the body in this case. A different approach, which probably wasn't mentioned earlier for simplicity, is the following:</p>\n\n<pre><code>pub trait Vector&lt;'a&gt; {\n    type Item: 'a;\n    type Iter: Iterator&lt;Item = Self::Item&gt; + 'a;\n\n    // several functions\n    fn iter(&amp;'a self) -&gt; Self::Iter;\n}\n\npub struct VectorImplementation1&lt;T&gt; {\n    numbers: Vec&lt;T&gt;,\n}\n\nimpl&lt;'a, T: 'a&gt; Vector&lt;'a&gt; for VectorImplementation1&lt;T&gt; {\n    type Item = &amp;'a T;\n    type Iter = std::slice::Iter&lt;'a, T&gt;;\n\n    fn iter(&amp;'a self) -&gt; Self::Iter {\n        self.numbers.iter()\n    }\n}\n\nimpl&lt;'a, T: 'a&gt; Vector&lt;'a&gt; for &amp;'a VectorImplementation1&lt;T&gt; {\n    type Item = &amp;'a T;\n    type Iter = std::slice::Iter&lt;'a, T&gt;;\n\n    fn iter(&amp;'a self) -&gt; Self::Iter {\n        self.numbers.iter()\n    }\n}\n</code></pre>\n\n<p>In this case, we move the lifetime to the trait, so that the trait can \"use\" the lifetime, and therefore validate our use of the trait implementation. But as I mentioned earlier, this has the added complexity of needing to understand the lifetimes attached to this trait, reducing readability.</p>\n"}], "owner": {"reputation": 703, "user_id": 8458083, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6ca7ced7bd1272973fe4fa22f90971?s=128&d=identicon&r=PG&f=1", "display_name": "Pierre-olivier Gendraud", "link": "https://stackoverflow.com/users/8458083/pierre-olivier-gendraud"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 81, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1555701294, "creation_date": 1555615792, "last_edit_date": 1555630447, "question_id": 55752610, "link": "https://stackoverflow.com/questions/55752610/why-doesnt-a-trait-implementation-compile-for-a-struct-but-it-compiles-for-a-r", "title": "Why doesn&#39;t a trait implementation compile for a struct, but it compiles for a reference to the struct?", "body": "<p>To answer one of my previous questions (<a href=\"https://stackoverflow.com/questions/55669730/how-to-implement-a-generic-trait-with-a-generic-type-implementing-iterator?noredirect=1#comment98027325_55669730\">How to implement a generic trait with a generic type implementing Iterator?</a>),\nthis chunk of code was given to me:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Vector {\n    type Item;\n    type Iter: Iterator&lt;Item = Self::Item&gt;;\n\n    // several functions\n    fn iter(&amp;self) -&gt; Self::Iter;\n}\n\npub struct VectorImplementation1&lt;T&gt; {\n    numbers: Vec&lt;T&gt;,\n}\n\nimpl&lt;'a, T&gt; Vector for &amp;'a VectorImplementation1&lt;T&gt; {\n    type Item = &amp;'a T;\n    type Iter = std::slice::Iter&lt;'a, T&gt;;\n\n    fn iter(&amp;self) -&gt; Self::Iter {\n        self.numbers.iter()\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I see that the trait is implemented for a reference of struct, and it doesn't compile if I use only a struct. Can someone explain why?</p>\n"}, {"tags": ["rust", "function-pointers"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 3, "creation_date": 1555611323, "post_id": 55751498, "comment_id": 98179931, "body": "this is tougher than I thought it would be because of the anonymous closure type that gets passed to <code>f</code>... I&#39;m excited to see how the rust experts handle this"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1555629797, "post_id": 55751498, "comment_id": 98185948, "body": "Just to be sure: is this a purely theoretical question (just for fun/out of interest) or is there an actual problem you want to solve? If the latter is the case, maybe you want to share a bit of detail about that problem. But a purely theoretical question is fine, too, of course! In fact, this is a good question IMO. I&#39;m puzzled (although I don&#39;t think it&#39;s possible with static dispatch yet :/)."}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1555669253, "post_id": 55751498, "comment_id": 98195440, "body": "@LukasKalbertodt This is the simplified version of an actual problem, which points out the key problem. The actual problem is a kind of <code>map</code> or <code>flat_map</code>. But the mapping function takes a function pointer which allows it to request additional data. The map provides by this the items of an array (only one for each request). If there were data requested and all items are provided by the map, the map feeds the next item of the prev iterator. You can see it as a cross join from SQL. But computing the array is costly and only rarely needed. That&#39;s why it is done lazy by function pointer."}], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 2, "last_activity_date": 1555672773, "last_edit_date": 1555672773, "creation_date": 1555620170, "answer_id": 55753483, "question_id": 55751498, "link": "https://stackoverflow.com/questions/55751498/rust-function-which-takes-function-with-arg-a-function/55753483#55753483", "title": "Rust function which takes function with arg a function", "body": "<p>This is the simplest code that I managed to get working (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4863f16ff0d49d117f4ffa3b90768812\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>fn count_calls&lt;S, F&gt;(s: S, mut f: F) -&gt; u32\nwhere\n    S: Clone,\n    F: FnMut(&amp;mut dyn FnMut() -&gt; S) -&gt; (),\n{\n    let mut counter: u32 = 0;\n\n    f(&amp;mut || {\n        counter += 1;\n        s.clone()\n    });\n    counter\n}\n\n#[cfg(test)]\nmod stackoverflow {\n    use super::*;\n\n    fn f(p: &amp;mut dyn FnMut() -&gt; i32) {\n        p();\n        p();\n    }\n\n    #[test]\n    fn test() {\n        let counts = count_calls(3, f);\n        assert_eq!(counts, 2);\n    }\n}\n</code></pre>\n\n<p>The key change is that the function argument for <code>F</code> is changed from <code>Fn() -&gt; S</code> into <code>&amp;mut dyn FnMut() -&gt; S</code>. You need a reference because you are using dynamic dispatching. Also you need <code>FnMut</code> because you are capturing <code>counter</code> and changing it inside, and a <code>Fn</code> will not allow it. </p>\n\n<p>Note that you cannot use <code>Box&lt;FnMut() -&gt; S</code>. It will not allow capturing a reference to <code>counter</code> because boxed functions must be <code>'static</code>.</p>\n\n<p>If you find that changing your <code>Fn</code> to <code>FnMut</code> is undesirable (because you are changing your public API) you could go back to <code>F: FnMut(&amp;mut dyn Fn() -&gt; S) -&gt; ()</code> by defining counter as a <code>Cell&lt;u32&gt;</code>:</p>\n\n<pre><code>fn count_calls&lt;S, F&gt;(s: S, mut f: F) -&gt; u32\nwhere\n    S: Clone,\n    F: FnMut(&amp;dyn Fn() -&gt; S) -&gt; (),\n{\n    let counter: Cell&lt;u32&gt; = Cell::new(0);\n\n    f(&amp;|| {\n        counter.set(counter.get() + 1);\n        s.clone()\n    });\n    counter.into_inner()\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1555673367, "post_id": 55755065, "comment_id": 98196919, "body": "Great answer! But I think that in this case dynamic dispatching is simply the best solution. It is not such a performance loss that it is worth writing convoluted code just to avoid it."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 5, "last_activity_date": 1555676951, "last_edit_date": 1555676951, "creation_date": 1555632135, "answer_id": 55755065, "question_id": 55751498, "link": "https://stackoverflow.com/questions/55751498/rust-function-which-takes-function-with-arg-a-function/55755065#55755065", "title": "Rust function which takes function with arg a function", "body": "<p>The error \"<em>the size for values of type <code>(dyn std::ops::Fn() -&gt; S + 'static)</code> cannot be known at compilation time</em>\" is caused by your trait bound for <code>F</code>:</p>\n\n<pre><code>F: Sized + FnMut(Fn() -&gt; S) -&gt; ()\n</code></pre>\n\n<p>This is equivalent to <code>F: Sized + FnMut(dyn Fn() -&gt; S)</code>. This means that the closure <code>F</code> would take a trait object (<code>dyn Fn() -&gt; S</code>) by value. But trait objects are unsized and cannot be passed by value (yet). </p>\n\n<p>One solution would be to pass the trait object by reference or in a <code>Box</code>. <a href=\"https://stackoverflow.com/a/55753483/2408867\">The answer by rodrigo</a> explains and discusses these solutions.</p>\n\n<hr>\n\n<h2>Can we avoid trait objects and dynamic dispatch?</h2>\n\n<p>Not properly, I think.</p>\n\n<h3>Non solutions</h3>\n\n<p>One idea would be to add another type parameter to <code>count_calls</code>:</p>\n\n<pre><code>fn count_calls&lt;S, F, G&gt;(s: S, f: F) -&gt; u32\nwhere\n    S: Clone,\n    F: Sized + FnMut(G),\n    G: Fn() -&gt; S,\n</code></pre>\n\n<p>However, this doesn't work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:9:7\n   |\n9  |       f(|| {\n   |  _______^\n10 | |         counter += 1;\n11 | |         s.clone()\n12 | |     });\n   | |_____^ expected type parameter, found closure\n   |\n   = note: expected type `G`\n              found type `[closure@src/lib.rs:9:7: 12:6 counter:_, s:_]`\n</code></pre>\n\n<p>The problem here is that type arguments of <code>count_calls</code> are chosen by the caller of <code>count_calls</code>. But we actually want <code>G</code> to always be the type of our own closure. So that doesn't work. </p>\n\n<p>What we want is a generic closure (where <em>we</em> can choose it's type parameters). Something similar is possible, but restricted to lifetime parameters. It's called HRTBs and looks like <code>F: for&lt;'a&gt; Fn(&amp;'a u32)</code>. But it doesn't help here because we need a type parameter and <code>for&lt;T&gt;</code> doesn't exist (yet?).</p>\n\n<h3>Sub-optimal, nightly solution</h3>\n\n<p>One solution would be to not use a closure, but a type with a known name which implements <code>FnMut</code>. Sadly, you can't implement the <code>Fn*</code> traits for your own type on stable yet. <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=c5ef6fc0189b345385ce87c52ecb15b6\" rel=\"nofollow noreferrer\">On nightly, this works</a>.</p>\n\n<pre><code>struct CallCounter&lt;S&gt; {\n    counter: u32,\n    s: S,\n}\nimpl&lt;S: Clone&gt; FnOnce&lt;()&gt; for CallCounter&lt;S&gt; {\n    type Output = S;\n    extern \"rust-call\" fn call_once(self, _: ()) -&gt; Self::Output {\n        // No point in incrementing the counter here\n        self.s\n    }\n}\nimpl&lt;S: Clone&gt; FnMut&lt;()&gt; for CallCounter&lt;S&gt; {\n    extern \"rust-call\" fn call_mut(&amp;mut self, _: ()) -&gt; Self::Output {\n        self.counter += 1;\n        self.s.clone()\n    }\n}\n\nfn count_calls&lt;S, F&gt;(s: S, mut f: F) -&gt; u32\nwhere\n    S: Clone,\n    F: Sized + FnMut(&amp;mut CallCounter&lt;S&gt;),     // &lt;----\n{\n    let mut counter = CallCounter {\n        counter: 0,\n        s,\n    };\n\n    f(&amp;mut counter);   // &lt;-------\n\n    counter.counter\n}\n</code></pre>\n\n<p>Unfortunately, now you have this strange type in your public interface (which should be implementation detail). </p>\n\n<hr>\n\n<p>Apart from that, I can't think of any real solution (only other super verbose solutions with plenty of disadvantages). The developments in the type system corner (in particular in regards to GATs and HKTs) could solve this properly in the future. However, I think there are still a few different features lacking; in particular, I don't think that GATs as proposed would already solve this. </p>\n\n<p>So if this is a real life problem which needs to be solved right now, I would:</p>\n\n<ul>\n<li>step back and rethink the problem in a bigger scope to maybe avoid this Rust limitation, or</li>\n<li>just use dynamic dispatch.</li>\n</ul>\n"}], "owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 407, "favorite_count": 0, "accepted_answer_id": 55753483, "answer_count": 2, "score": 4, "last_activity_date": 1560650343, "creation_date": 1555610449, "last_edit_date": 1560650343, "question_id": 55751498, "link": "https://stackoverflow.com/questions/55751498/rust-function-which-takes-function-with-arg-a-function", "title": "Rust function which takes function with arg a function", "body": "<p>I want to write a generic function <code>count_calls</code> which calls a function <code>f</code> which takes a function pointer (lambda) where <code>count_calls</code> counts how often function <code>f</code> called the given lambda function.</p>\n\n<p>I struggle with the approach (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=391121e5ac23c0451db939809e51b342\" rel=\"nofollow noreferrer\">Playground</a>).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn count_calls&lt;S, F&gt;(s: S, f: F) -&gt; u32\nwhere\n    S: Clone,\n    F: Sized + FnMut(Fn() -&gt; S) -&gt; (),\n{\n    let mut counter: u32 = 0;\n\n    f(|| {\n        counter += 1;\n        s.clone()\n    });\n    counter\n}\n\n#[cfg(test)]\nmod stackoverflow {\n    use super::*;\n\n    fn f(p: fn() -&gt; i32) {\n        p();\n        p();\n    }\n\n    #[test]\n    fn test() {\n        let counts = count_calls(3, f);\n        assert_eq!(counts, 2);\n    }\n}\n</code></pre>\n\n<p>Here I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn std::ops::Fn() -&gt; S + 'static)` cannot be known at compilation time\n  --&gt; src/lib.rs:1:1\n   |\n1  | / fn count_calls&lt;S, F&gt;(s: S, f: F) -&gt; u32\n2  | | where\n3  | |     S: Clone,\n4  | |     F: Sized + FnMut(Fn() -&gt; S) -&gt; (),\n...  |\n12 | |     counter\n13 | | }\n   | |_^ doesn't have a size known at compile-time\n   |\n   = help: within `((dyn std::ops::Fn() -&gt; S + 'static),)`, the trait `std::marker::Sized` is not implemented for `(dyn std::ops::Fn() -&gt; S + 'static)`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required because it appears within the type `((dyn std::ops::Fn() -&gt; S + 'static),)`\n   = note: required by `std::ops::FnMut`\n</code></pre>\n\n<p>Does someone know how to fix this?</p>\n\n<p><strong>[Edit]</strong></p>\n\n<p>I think using <code>Box&lt;Fn()-&gt;S&gt;</code> might be a solution. But I would prefer a stack only solution, if possible.</p>\n"}, {"tags": ["rust", "smart-pointers", "reference-counting"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1555607138, "post_id": 55750616, "comment_id": 98178176, "body": "What is the purpose of making the ref mutable if you are going to clone it anyway?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1555630110, "post_id": 55750742, "comment_id": 98186018, "body": "In some cases, it may be clearer to use the fully-qualified syntax. It&#39;s annoying here due to the use of the array, but in general: <code>&lt;[i32; 3]&gt;::clone(&amp;arc)</code>"}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555647909, "post_id": 55750742, "comment_id": 98188864, "body": "@Shepmaster Good suggestion, thanks! I changed the types and added a quick example like that to the post. (Feel free to edit if you feel inclined.)"}, {"owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "edited": false, "score": 0, "creation_date": 1555667886, "post_id": 55750742, "comment_id": 98194888, "body": "Thanks a lot for a detailed answer! I don&#39;t understand why it is not possible to deref an Arc pointer into a variable and then clone it? Borrow checker screams at me that I can&#39;t move out the value out of Arc, while (*Arc).clone() is technically the same?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "edited": false, "score": 0, "creation_date": 1555685139, "post_id": 55750742, "comment_id": 98201692, "body": "@ArazAbishov if your type is not <code>Copy</code>, then what would the value of the <code>Arc</code> variable be if you moved the value out of it? See also <a href=\"https://stackoverflow.com/q/28158738/155423\">Cannot move out of borrowed content</a>; <a href=\"https://stackoverflow.com/q/40075031/155423\">Cannot move out of borrowed content in Rust</a>; <a href=\"https://stackoverflow.com/q/28258548/155423\">Cannot move out of borrowed content when trying to transfer ownership</a>; etc."}, {"owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555687895, "post_id": 55750742, "comment_id": 98202887, "body": "I see now @Shepmaster, thanks. For some reason (probably because of experience of working with other languages), I assumed that dereferencing would be equivalent of moving an object out. That&#39;s why (*arc).clone() was confusing to me.  Thanks again!"}], "tags": [], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "is_accepted": true, "score": 18, "last_activity_date": 1555726592, "last_edit_date": 1555726592, "creation_date": 1555607144, "answer_id": 55750742, "question_id": 55750616, "link": "https://stackoverflow.com/questions/55750616/is-there-an-operation-for-rc-or-arc-which-clones-the-underlying-value-and-return/55750742#55750742", "title": "Is there an operation for Rc or Arc which clones the underlying value and returns it to the caller?", "body": "<p>We can use <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"noreferrer\">the <code>*</code> deref operator</a> to address the underlying value inside of an <code>Rc</code> or <code>Arc</code>, and then call <code>.clone()</code> to return a new owned clone of that value (assuming it's clonable).</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() { \n    let rc = Rc::new(\"Hello\".to_string());\n    let mut cloned = (*rc).clone();\n    cloned.truncate(4);\n\n    // verify that it's modified\n    println!(\"{:?}\", cloned); // \"Hell\"\n    // verify that the original was not\n    println!(\"{:?}\", rc); // \"Hello\"\n}\n</code></pre>\n\n<p>The <code>Rc</code>/<code>Arc</code> semantics will prevent any mutable references from being created while your reference exists, so this operation is thread-safe; the data can't be changed while you're cloning it. You also don't need a mutable reference to the original underlying value, because you're not modifying it.</p>\n\n<p>In some cases, Rust lets you omit the <code>*</code> deref operator: it will implicitly dereference a non-mutable pointer type if you try to call a method that doesn't exist on the pointer, but does exist on the underlying value. However, we need to be explicit in this case because a <code>.clone()</code> method does already exists on <code>Rc</code>/<code>Arc</code>: it's used to create a new reference to the same value. We don't want to call that, so we need to explicitly dereference to access the inner type's <code>.clone()</code> instead.</p>\n\n<p>We can also tell Rust which <code>.clone()</code> method we want by explicitly calling it through the appropriate type, and the compiler will implicitly apply as many dereferences as necessary.</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() { \n    let rc3 = Rc::new(Rc::new(Rc::new(\"Hello\".to_string())));\n    let mut cloned = String::clone(&amp;rc3);\n    cloned.truncate(4);\n\n    // verify that it's modified\n    println!(\"{:?}\", cloned); // \"Hell\"\n    // verify that the original was not\n    println!(\"{:?}\", rc3); // \"Hello\"\n}\n</code></pre>\n"}], "owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2409, "favorite_count": 2, "accepted_answer_id": 55750742, "answer_count": 1, "score": 10, "last_activity_date": 1555726592, "creation_date": 1555606529, "last_edit_date": 1555629983, "question_id": 55750616, "link": "https://stackoverflow.com/questions/55750616/is-there-an-operation-for-rc-or-arc-which-clones-the-underlying-value-and-return", "title": "Is there an operation for Rc or Arc which clones the underlying value and returns it to the caller?", "body": "<p>I'm looking for something roughly like this <code>take</code>, but atomic:</p>\n\n<pre><code>impl&lt;T: Clone&gt; for Arc&lt;T&gt; {\n    fn take(mut self) -&gt; T {\n        Arc::make_mut(&amp;mut self);\n        Arc::try_unwrap(self).unwrap()\n    }\n}\n</code></pre>\n\n<p>In other words, I want <code>Arc::make_mut</code> which returns the value itself, rather than a mutable reference. </p>\n"}, {"tags": ["recursion", "reference", "rust", "closures", "lifetime"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1555605928, "post_id": 55748962, "comment_id": 98177602, "body": "Why would you take the function pointer as a reference? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=716761593981eea73885173e5aefb861\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1555608577, "post_id": 55748962, "comment_id": 98178762, "body": "You have a lot of references to <code>Copy</code> types, which definitely make this harder. The other thing to know is that you <i>always</i> must use a <code>move</code> closure if you are going to return it from another function. Otherwise it will be referencing variables that are no longer in scope."}, {"owner": {"reputation": 2289, "user_id": 1292663, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/OPOmE.jpg?s=128&g=1", "display_name": "Stepan Parunashvili", "link": "https://stackoverflow.com/users/1292663/stepan-parunashvili"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1555657398, "post_id": 55748962, "comment_id": 98191253, "body": "thank you for the help all, and the detailed explanation @PeterHall! Indeed, I used a bunch of references -- was hacking away and anticipated the type checker a bit too much"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 7, "last_activity_date": 1555756193, "last_edit_date": 1555756193, "creation_date": 1555609265, "answer_id": 55751218, "question_id": 55748962, "link": "https://stackoverflow.com/questions/55748962/returning-a-recursive-closure-in-rust/55751218#55751218", "title": "Returning a recursive closure in Rust", "body": "<p>You are using a <em>lot</em> of references, which don't seem necessary, and make it harder to figure this all out:</p>\n\n<ol>\n<li>A <code>fn</code> is <em>already</em> a function <em>pointer</em>, so you can pass them around by value instead of using another layer of references. This is easier because a function pointer is <code>'static</code>.</li>\n<li>All those <code>&amp;f64</code>s are immutable, so could be replaced with <code>f64</code> without changing the logic. This should be the same speed as (or <em>possibly</em> faster than) using a reference.</li>\n</ol>\n\n<p>Once you do that, you won't have many reference left, and it will be clearer which are causing the problem:</p>\n\n<pre><code>fn ensure_tonicty(tone_fn: fn(f64, f64) -&gt; bool) -&gt; impl Fn(&amp;Vec&lt;f64&gt;) -&gt; bool {\n    |floats: &amp;Vec&lt;f64&gt;| -&gt; bool {\n        let first = *floats.first().unwrap();\n        let rest = &amp;floats[1..];\n        fn f(tone_fn: fn(f64, f64) -&gt; bool, prev: f64, xs: &amp;[f64]) -&gt; bool {\n            match xs.first() {\n                Some(&amp;x) =&gt; tone_fn(prev, x) &amp;&amp; f(tone_fn, x, &amp;xs[1..]),\n                None =&gt; true,\n            }\n        };\n        f(tone_fn, first, rest);\n    };\n}\n</code></pre>\n\n<p>Now, the error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `tone_fn`, which is owned by the current function\n  --&gt; src/lib.rs:2:12\n   |\n2  |     return |floats: &amp;Vec&lt;f64&gt;| -&gt; bool {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ may outlive borrowed value `tone_fn`\n...\n11 |         return f(tone_fn, first, rest);\n   |                  ------- `tone_fn` is borrowed here\n   |\nnote: closure is returned here\n  --&gt; src/lib.rs:2:12\n   |\n2  |       return |floats: &amp;Vec&lt;f64&gt;| -&gt; bool {\n   |  ____________^\n3  | |         let first = *floats.first().unwrap();\n4  | |         let rest = &amp;floats[1..];\n5  | |         fn f(tone_fn: fn(f64, f64) -&gt; bool, prev: f64, xs: &amp;[f64]) -&gt; bool {\n...  |\n11 | |         return f(tone_fn, first, rest);\n12 | |     };\n   | |_____^\nhelp: to force the closure to take ownership of `tone_fn` (and any other referenced variables), use the `move` keyword\n   |\n2  |     return move |floats: &amp;Vec&lt;f64&gt;| -&gt; bool {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>The <code>help</code> section tells you exactly how to fix it: make the closure <code>move</code> its environment. The result is:</p>\n\n<pre><code>fn ensure_tonicty(tone_fn: fn(f64, f64) -&gt; bool) -&gt; impl Fn(&amp;[f64]) -&gt; bool {\n    move |floats: &amp;[f64]| -&gt; bool {\n        let first = floats[0];\n        let rest = &amp;floats[1..];\n        fn f(tone_fn: fn(f64, f64) -&gt; bool, prev: f64, xs: &amp;[f64]) -&gt; bool {\n            match xs.first() {\n                Some(&amp;x) =&gt; tone_fn(prev, x) &amp;&amp; f(tone_fn, x, &amp;xs[1..]),\n                None =&gt; true,\n            }\n        };\n        f(tone_fn, first, rest)\n    }\n}\n</code></pre>\n\n<p>If you return a closure from another function, you will nearly <em>always</em> need this keyword. Otherwise, any variables mentioned in the closure will be references to values that will go out of scope when the function ends. Using the <code>move</code> keyword moves those values so they go wherever the closure goes.</p>\n\n<hr>\n\n<p>Also notice the other changes I made, to make the code more idiomatic:</p>\n\n<ol>\n<li>Use expressions instead of <code>return</code> keyword.</li>\n<li>Use <code>&amp;[f64]</code> instead of <code>&amp;Vec&lt;f64&gt;</code> in function arguments (see <a href=\"https://stackoverflow.com/q/40006219/493729\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>).</li>\n</ol>\n"}], "owner": {"reputation": 2289, "user_id": 1292663, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/OPOmE.jpg?s=128&g=1", "display_name": "Stepan Parunashvili", "link": "https://stackoverflow.com/users/1292663/stepan-parunashvili"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 480, "favorite_count": 0, "accepted_answer_id": 55751218, "answer_count": 1, "score": 5, "last_activity_date": 1555756345, "creation_date": 1555600220, "last_edit_date": 1555756345, "question_id": 55748962, "link": "https://stackoverflow.com/questions/55748962/returning-a-recursive-closure-in-rust", "title": "Returning a recursive closure in Rust", "body": "<p>I have the following higher-order function</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn ensure_tonicty(tone_fn: &amp;fn(&amp;f64, &amp;f64) -&gt; bool) -&gt; impl Fn(&amp;Vec&lt;f64&gt;) -&gt; bool {\n    return |floats: &amp;Vec&lt;f64&gt;| -&gt; bool {\n        let first = floats.first().unwrap();\n        let rest = &amp;floats[1..];\n        fn f(tone_fn: &amp;fn(&amp;f64, &amp;f64) -&gt; bool, prev: &amp;f64, xs: &amp;[f64]) -&gt; bool {\n            match xs.first() {\n                Some(x) =&gt; tone_fn(prev, x) &amp;&amp; f(tone_fn, x, &amp;xs[1..]),\n                None =&gt; true,\n            }\n        };\n        return f(tone_fn, first, rest);\n    };\n}\n</code></pre>\n\n<p>My goal is to return this lambda. I can't figure out how to effectively use <code>tone_fn</code> here though. </p>\n\n<p>The code above errors out:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0621]: explicit lifetime required in the type of `tone_fn`\n --&gt; src/lib.rs:1:56\n  |\n1 | fn ensure_tonicty(tone_fn: &amp;fn(&amp;f64, &amp;f64) -&gt; bool) -&gt; impl Fn(&amp;Vec&lt;f64&gt;) -&gt; bool {\n  |                            -----------------------     ^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime `'static` required\n  |                            |\n  |                            help: add explicit lifetime `'static` to the type of `tone_fn`: `&amp;'static for&lt;'r, 's&gt; fn(&amp;'r f64, &amp;'s f64) -&gt; bool`\n</code></pre>\n\n<p>If I try to include a lifetime though, I am not sure how to type <code>impl Fn</code>, and include the lifetime</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// where do I write `'a`?\nfn ensure_tonicty&lt;'a&gt;(tone_fn: &amp;'a fn(&amp;f64, &amp;f64) -&gt; bool) -&gt; impl Fn(&amp;Vec&lt;f64&gt;) -&gt; bool {\n</code></pre>\n\n<p>I could write this as a macro and get past this, but I'm curious if there's a way I can do this without going the macro route.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1555593211, "post_id": 55746770, "comment_id": 98170413, "body": "You may enjoy reading <a href=\"https://codereview.stackexchange.com/q/207481\">codereview.stackexchange.com/q/207481</a> because you are doing the exact same mistake as the person on codereview does."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1555610262, "post_id": 55746770, "comment_id": 98179467, "body": "Note that your conversion is backwards from the message you print: you say <code>The equivalent of 37F is: 98</code> but 37&#176;F is actually 2.8&#176;C. You probably want to tweak the message."}, {"owner": {"reputation": 124, "user_id": 2542561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d6d5e9d310c9a44aef55a071385612b?s=128&d=identicon&r=PG", "display_name": "Muhammad Ovais", "link": "https://stackoverflow.com/users/2542561/muhammad-ovais"}, "edited": false, "score": 0, "creation_date": 1555612037, "post_id": 55746770, "comment_id": 98180227, "body": "Nopes, it is showing as i said.."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1555619667, "post_id": 55746770, "comment_id": 98183151, "body": "I&#39;m not saying you&#39;re wrong about what the code does, I&#39;m saying the <code>println!</code> is inconsistent. It says you convert Fahrenheit to Celsius but the code actually converts Celsius to Fahrenheit. It should presumably say <code>The equivalent of 37C is 98F</code> (assuming <code>degree</code> is meant to be the scale being converted <i>to</i>), which would be a true if somewhat imprecise statement."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1555593429, "post_id": 55746859, "comment_id": 98170551, "body": "Better with pattern matching <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=96da9e4aeebea6c058f4769790de597a\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555593435, "post_id": 55746859, "comment_id": 98170555, "body": "Please use rustfmt to format your code according to the guidelines of the community. You can find it in the upper right corner auf the playground under tools."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1555594879, "post_id": 55746859, "comment_id": 98171460, "body": "@FrenchBoiethios or even better with an enum"}, {"owner": {"reputation": 124, "user_id": 2542561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d6d5e9d310c9a44aef55a071385612b?s=128&d=identicon&r=PG", "display_name": "Muhammad Ovais", "link": "https://stackoverflow.com/users/2542561/muhammad-ovais"}, "edited": false, "score": 1, "creation_date": 1555612262, "post_id": 55746859, "comment_id": 98180324, "body": "Is there a better way doing this? Writing each value as a float doesn&#39;t seem good. I am looking for some standard way of doing this.."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 124, "user_id": 2542561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d6d5e9d310c9a44aef55a071385612b?s=128&d=identicon&r=PG", "display_name": "Muhammad Ovais", "link": "https://stackoverflow.com/users/2542561/muhammad-ovais"}, "edited": false, "score": 2, "creation_date": 1555618159, "post_id": 55746859, "comment_id": 98182587, "body": "@MuhammadOvais What&#39;s wrong with writing <code>5.0</code> when you mean <code>5.0</code>? Or do I misunderstand your objection?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1555629827, "post_id": 55746859, "comment_id": 98185951, "body": "You can write <code>5.</code>, but that&#39;s dubiously &quot;better&quot;."}, {"owner": {"reputation": 124, "user_id": 2542561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d6d5e9d310c9a44aef55a071385612b?s=128&d=identicon&r=PG", "display_name": "Muhammad Ovais", "link": "https://stackoverflow.com/users/2542561/muhammad-ovais"}, "edited": false, "score": 0, "creation_date": 1555641870, "post_id": 55746859, "comment_id": 98187885, "body": "Thanks @chpio, i got the underlying science to some extent. To get the result of any expression, the participant members should be of same required data type. Please correct me if i am wrong."}, {"owner": {"reputation": 124, "user_id": 2542561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d6d5e9d310c9a44aef55a071385612b?s=128&d=identicon&r=PG", "display_name": "Muhammad Ovais", "link": "https://stackoverflow.com/users/2542561/muhammad-ovais"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555641911, "post_id": 55746859, "comment_id": 98187893, "body": "@hellow, will follow the guidelines next time. Thanks."}], "tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": true, "score": 3, "last_activity_date": 1555593690, "last_edit_date": 1555593690, "creation_date": 1555593376, "answer_id": 55746859, "question_id": 55746770, "link": "https://stackoverflow.com/questions/55746770/why-is-a-calculation-on-integers-truncated-to-an-integer-even-though-ive-cast-i/55746859#55746859", "title": "Why is a calculation on integers truncated to an integer even though I&#39;ve cast it to a float?", "body": "<p>You're doing the math on the integer type (which causes the unwanted rounding) and cast it <em>afterwards</em> to <code>f32</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let temp = 37;\n    let degree = 'F';\n\n    let result = temp_conv(temp, degree);\n\n    println!(\"The equivalent of {}{} is: {}\", temp, degree, result);\n}\n\nfn temp_conv(value: u32, degree: char) -&gt; f32 {\n    if degree == 'C' {\n        (value as f32 - 32.0) * (5.0 / 9.0)\n    } else if degree == 'F' {\n        (value as f32 * 9.0 / 5.0) + 32.0\n    } else {\n        0.0\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7e71b3b0dc6491d5a39716a2b85a32d8\" rel=\"nofollow noreferrer\">https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7e71b3b0dc6491d5a39716a2b85a32d8</a></p>\n"}], "owner": {"reputation": 124, "user_id": 2542561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d6d5e9d310c9a44aef55a071385612b?s=128&d=identicon&r=PG", "display_name": "Muhammad Ovais", "link": "https://stackoverflow.com/users/2542561/muhammad-ovais"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 55746859, "answer_count": 1, "score": 3, "last_activity_date": 1555629754, "creation_date": 1555593113, "last_edit_date": 1555629754, "question_id": 55746770, "link": "https://stackoverflow.com/questions/55746770/why-is-a-calculation-on-integers-truncated-to-an-integer-even-though-ive-cast-i", "title": "Why is a calculation on integers truncated to an integer even though I&#39;ve cast it to a float?", "body": "<p>The below code is returning an integer instead of a float even though the return type of the function is a <code>f32</code>.</p>\n\n<pre><code>fn main() {\n    let temp = 37;\n    let degree = 'F';\n    let result = temp_conv(temp, degree);\n\n    println!(\"The equivalent of {}{} is: {}\", temp, degree, result);\n}\n\nfn temp_conv(value: u32, degree: char) -&gt; f32 {\n    let mut temperature: f32 = 0.0;\n\n    if degree == 'C' {\n        temperature = ((value - 32) * (5 / 9)) as f32;\n    } else if degree == 'F' {\n        temperature = ((value * 9 / 5) + 32) as f32;\n    } else {\n        temperature = 0.0;\n    };\n\n    temperature\n}\n</code></pre>\n\n<p>I expect the output to be <code>98.6</code>, instead it is just <code>98</code>.</p>\n"}, {"tags": ["typescript", "rust", "shadow-dom", "wasm-bindgen"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1555581774, "post_id": 55741517, "comment_id": 98164131, "body": "I hope you see, why an <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is crucial ;) I&#39;m glad I was able to solve your problem. I must admit, that we (the Rust tag &quot;member&quot;) are sometimes very eager after MCVEs but it helps a lot!"}, {"owner": {"reputation": 8193, "user_id": 418150, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/4e6ea6eda1ac602bde5b282216ae331f?s=128&d=identicon&r=PG", "display_name": "Lee Goddard", "link": "https://stackoverflow.com/users/418150/lee-goddard"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555582132, "post_id": 55741517, "comment_id": 98164299, "body": "Thanks for helping me work out what a minimal example is in this ridiculous case! I&#39;m now only getting an out-of-memory error, but that&#39;s another question."}, {"owner": {"reputation": 8193, "user_id": 418150, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/4e6ea6eda1ac602bde5b282216ae331f?s=128&d=identicon&r=PG", "display_name": "Lee Goddard", "link": "https://stackoverflow.com/users/418150/lee-goddard"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555582644, "post_id": 55741517, "comment_id": 98164571, "body": "In fact, the &#39;out of memory&#39; error was because of a Chrome bug I saw yesterday but forgot: <a href=\"https://stackoverflow.com/questions/55039923/why-does-chrome-eventually-throw-out-of-memory-wasm-memory-after-repeatedly-r\" title=\"why does chrome eventually throw out of memory wasm memory after repeatedly r\">stackoverflow.com/questions/55039923/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1555588459, "post_id": 55743639, "comment_id": 98167672, "body": "I think recommending a <i>proper</i> iteration would be better. Don&#39;t use ranges, use iteration + <code>enumerate()</code>, and you&#39;re guaranteed to iterate over all."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1555589596, "post_id": 55743639, "comment_id": 98168318, "body": "@MatthieuM. feel free to add a fourth option."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1555597654, "post_id": 55743639, "comment_id": 98173204, "body": "Actually, there is an error in the diagnostic: the issue is not leaving one element uninitialized, it&#39;s that try to assign to the first element will cause a drop of uninitialized memory. I&#39;ve settled for posting my own answer instead, rather than massively editing yours."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 6, "last_activity_date": 1555686747, "last_edit_date": 1555686747, "creation_date": 1555581645, "answer_id": 55743639, "question_id": 55741517, "link": "https://stackoverflow.com/questions/55741517/rust-webassembly-custom-elements-memory-deallocation-error/55743639#55743639", "title": "Rust WebAssembly Custom Elements Memory Deallocation Error", "body": "<p>Your problem is that you create a chunk of uninitialized memory and don't initialize it properly:</p>\n\n<pre><code>let mut channel_data: [Vec&lt;f32&gt;; 2] = unsafe { std::mem::uninitialized() };\nfor channel_number in 0..1 {\n    channel_data[channel_number] = audio_buffer\n        .get_channel_data(channel_number as u32) // no need for `as u32` here btw\n        .unwrap();\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/ops/struct.Range.html\" rel=\"nofollow noreferrer\"><code>Range</code>s</a> (a.k.a. <code>a..b</code>) are exclusive in Rust. This means that your loop does not iterate twice as you would suppose, but instead only once and you have one uninitialized <code>Vec&lt;f32&gt;</code> <strike>which then will panic while dropping it.</strike> (Please see <a href=\"https://stackoverflow.com/a/55747736/1021920\">Matthieu M.'s answer</a> for a proper explanation)</p>\n\n<p>There are a few possibilities here.</p>\n\n<ol>\n<li>Use the proper range, e.g. <code>0..2</code></li>\n<li>Use an <a href=\"https://doc.rust-lang.org/std/ops/struct.RangeInclusive.html\" rel=\"nofollow noreferrer\">inclusive range</a> <code>0..=1</code></li>\n<li>Don't use the unsafe construct, but instead\n\n<pre><code>let mut channel_data: [Vec&lt;f32&gt;; 2] = Default::default()\n</code></pre>\n\nThis will properly initialize the two <code>Vec</code>s. </li>\n</ol>\n\n<p>For a more complete overview on how to initialize an array, see <a href=\"https://stackoverflow.com/q/31360993\">What is the proper way to initialize a fixed length array?</a> </p>\n\n<p>As a sidenote: avoid using <code>unsafe</code>, especially if you're new to Rust.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1555686834, "last_edit_date": 1592644375, "creation_date": 1555596239, "answer_id": 55747736, "question_id": 55741517, "link": "https://stackoverflow.com/questions/55741517/rust-webassembly-custom-elements-memory-deallocation-error/55747736#55747736", "title": "Rust WebAssembly Custom Elements Memory Deallocation Error", "body": "<p>There are two issues here:</p>\n<ol>\n<li>You create an uninitialized chunk of memory, and treat it as if it were initialized.</li>\n<li>Your iteration is wrong, <code>0..1</code> iterates over <code>[0]</code> (it's exclusive).</li>\n</ol>\n<p>Let's check them one at a time.</p>\n<hr />\n<h3>Don't use <code>unsafe</code>.</h3>\n<p>In general, you should strive to avoid <code>unsafe</code>. There are very few reasons to use it, and many ways to use it incorrectly (such as here).</p>\n<p><em>The issue.</em></p>\n<p>In this particular case:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let mut channel_data: [Vec&lt;f32&gt;; 2] = unsafe { std::mem::uninitialized() };\nfor channel_number in /*...*/ {\n    channel_data[channel_number] = /*...*/;\n}\n</code></pre>\n<p>There are two issues:</p>\n<ol>\n<li>The use of <code>std::mem::uninitialized</code> is deprecated because of safety reasons; it's a very bad idea to use it. Its replacement is <code>MaybeUninitialized</code>.</li>\n<li>Assigning to uninitialized memory is Undefined Behavior.</li>\n</ol>\n<p>There is no assignment operator in Rust, in order to perform an assignment the language will:</p>\n<ul>\n<li>Drop the previous instance.</li>\n<li>Overwrite the now unused memory.</li>\n</ul>\n<p>Dropping raw memory which thinks it's a <code>Vec</code> is Undefined Behavior; in this case the likely effect is that some random pointer value is read and freed. This may crash, this may free an unrelated pointer, leading to a latter crash or memory corruption, it's <strong>BAD</strong>.</p>\n<p><em>The solution.</em></p>\n<p>There is little reason to use <code>unsafe</code> here:</p>\n<ul>\n<li>It is perfectly possible to safely perform the initialization of the array.</li>\n<li>It is perfectly possible to directly initialize the array.</li>\n<li>There is little performance benefit in NOT performing default initialization if you insist on two-steps initialization, as the <code>Default</code> implementation of <code>Vec</code> does not allocate memory.</li>\n</ul>\n<p>In short:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>auto create_channel = |channel_number: u32| {\n    audio_buffer\n        .get_channel_data(channel_number)\n        .unwrap()\n};\n\nlet mut channel_data = [create_channel(0), create_channel(1)];\n</code></pre>\n<p>is simple, safe, and most efficient.</p>\n<hr />\n<h3>Prefer iterators to indexing.</h3>\n<p>If you insist on two-step initialization, then use iterators rather than indexing to avoid off-by-one errors.</p>\n<p>In your case:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let mut channel_data = [vec!(), vec!()];\nfor (channel_number, channel) = channel_data.iter_mut().enumerate() {\n    *channel = audio_buffer\n        .get_channel_data(channel_number as u32)\n        .unwrap();\n}\n</code></pre>\n<p>There are many utility functions on <code>Iterator</code>, in this particular case, <code>enumerate</code> will wrap the item returned by <code>iter_mut()</code> (a <code>&amp;mut Vec&lt;f32&gt;</code>) into a tuple <code>(usize, &amp;mut Vec&lt;32&gt;)</code>:</p>\n<ul>\n<li>You have direct access to the element, no computation required.</li>\n<li>You also have the index of the element, without off-by-one errors.</li>\n</ul>\n"}], "owner": {"reputation": 8193, "user_id": 418150, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/4e6ea6eda1ac602bde5b282216ae331f?s=128&d=identicon&r=PG", "display_name": "Lee Goddard", "link": "https://stackoverflow.com/users/418150/lee-goddard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 288, "favorite_count": 0, "accepted_answer_id": 55743639, "answer_count": 2, "score": 3, "last_activity_date": 1555686834, "creation_date": 1555574203, "last_edit_date": 1555662672, "question_id": 55741517, "link": "https://stackoverflow.com/questions/55741517/rust-webassembly-custom-elements-memory-deallocation-error", "title": "Rust WebAssembly Custom Elements Memory Deallocation Error", "body": "<p>My first Rust-produced WASM is producing the following error, I have no idea how to go about it debugging. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>wasm-000650c2-23:340 Uncaught RuntimeError: memory access out of bounds\n    at dlmalloc::dlmalloc::Dlmalloc::free::h36961b6fbcc40c05 (wasm-function[23]:670)\n    at __rdl_dealloc (wasm-function[367]:8)\n    at __rust_dealloc (wasm-function[360]:7)\n    at alloc::alloc::dealloc::h90df92e1f727e726 (wasm-function[146]:100)\n    at &lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h7f22ab187c7f5835 (wasm-function[194]:84)\n    at &lt;alloc::raw_vec::RawVec&lt;T, A&gt;&gt;::dealloc_buffer::hdce29184552be976 (wasm-function[82]:231)\n    at &lt;alloc::raw_vec::RawVec&lt;T, A&gt; as core::ops::drop::Drop&gt;::drop::h3910dccc175e44e6 (wasm-function[269]:38)\n    at core::ptr::real_drop_in_place::hd26be2408c00ce9d (wasm-function[267]:38)\n    at core::ptr::real_drop_in_place::h6acb013dbd13c114 (wasm-function[241]:50)\n    at core::ptr::real_drop_in_place::hb270ba635548ab74 (wasm-function[69]:192)\n</code></pre>\n\n<p>The context: latest Chrome, Rust wasm-bindgen code called from a TypeScript custom element, operating upon a canvas in the shadow DOM. Data rendered to the canvas comes from an HTML5 AudioBuffer. All rust variables are locally scoped.</p>\n\n<p>The web component works perfectly if only one instance appears in the document, but if I further instances, a stack trace is dumped as above. The code runs without any other issue.</p>\n\n<p>I know there are outstanding memory bugs in Chrome -- is this what they look like, or can an experienced rust/wasm developer tell me if this is unusual?</p>\n\n<pre><code>js-sys = \"0.3.19\"\nwasm-bindgen = \"0.2.42\"\nwee_alloc = { version = \"0.4.2\", optional = true }\n[dependencies.web-sys]\nversion = \"0.3.4\"\n</code></pre>\n\n<p>The rust code is small, and just renders two channels of an AudioBuffer to a supplied HTMLCanvasElement:</p>\n\n<pre><code>#[wasm_bindgen]\npub fn render(\n    canvas: web_sys::HtmlCanvasElement,\n    audio_buffer: &amp;web_sys::AudioBuffer,\n    stroke_style: &amp;JsValue,\n    line_width: f64,\n    step_size: usize,\n) { \n  // ...\n    let mut channel_data: [Vec&lt;f32&gt;; 2] = unsafe { std::mem::uninitialized() }; // !\n    for channel_number in 0..1 {\n        channel_data[channel_number] = audio_buffer\n            .get_channel_data(channel_number as u32)\n            .unwrap();\n    }\n  // ...\n</code></pre>\n\n<p>I've tried commenting out functionality, and if the code doesn't touch the canvas but does the above, I get the error. Making the below change results in a simple 'out of wam memory' error. The audio file is is 1,200 k.</p>\n\n<pre><code>    let channel_data: [Vec&lt;f32&gt;; 2] = [\n        audio_buffer.get_channel_data(0).unwrap(),\n        audio_buffer.get_channel_data(1).unwrap()\n    ];\n</code></pre>\n\n<p><strong>EDIT</strong>: The latter <code>out of memory</code> error, for the correct code above, really threw me, but it is actually a <a href=\"https://stackoverflow.com/questions/55039923/why-does-chrome-eventually-throw-out-of-memory-wasm-memory-after-repeatedly-r\">Chrome bug</a>.</p>\n"}, {"tags": ["web-scraping", "rust", "rayon"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1555566467, "post_id": 55737587, "comment_id": 98156853, "body": "Is your &quot;select.rs&quot; actually <a href=\"https://docs.rs/select/0.4.2/select/\" rel=\"nofollow noreferrer\">this crate</a>? Why do you call it select.rs then?"}, {"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "edited": false, "score": 0, "creation_date": 1555577057, "post_id": 55737587, "comment_id": 98161476, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/48922420/how-do-i-use-rayon-with-an-existing-iterator\">How do I use Rayon with an existing iterator?</a>"}, {"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "edited": false, "score": 0, "creation_date": 1555577125, "post_id": 55737587, "comment_id": 98161523, "body": "See <a href=\"https://docs.rs/rayon/1.0.2/rayon/prelude/trait.ParallelBridge.html\" rel=\"nofollow noreferrer\">docs.rs/rayon/1.0.2/rayon/prelude/trait.ParallelBridge.html</a>"}, {"owner": {"reputation": 301, "user_id": 5407654, "user_type": "registered", "accept_rate": 25, "profile_image": "https://graph.facebook.com/10205075110374270/picture?type=large", "display_name": "Mukul Ram", "link": "https://stackoverflow.com/users/5407654/mukul-ram"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555629343, "post_id": 55737587, "comment_id": 98185845, "body": "@hellow that&#39;s what I got from Github, sorry. I believe it is that crate as well. <a href=\"https://github.com/utkarshkukreti/select.rs\" rel=\"nofollow noreferrer\">github.com/utkarshkukreti/select.rs</a>"}, {"owner": {"reputation": 301, "user_id": 5407654, "user_type": "registered", "accept_rate": 25, "profile_image": "https://graph.facebook.com/10205075110374270/picture?type=large", "display_name": "Mukul Ram", "link": "https://stackoverflow.com/users/5407654/mukul-ram"}, "edited": false, "score": 0, "creation_date": 1555629373, "post_id": 55737587, "comment_id": 98185851, "body": "I wasn&#39;t sure how to get the parallel bridge working. Would you mind putting together a quick example?"}], "owner": {"reputation": 301, "user_id": 5407654, "user_type": "registered", "accept_rate": 25, "profile_image": "https://graph.facebook.com/10205075110374270/picture?type=large", "display_name": "Mukul Ram", "link": "https://stackoverflow.com/users/5407654/mukul-ram"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1555566373, "creation_date": 1555546875, "last_edit_date": 1555566373, "question_id": 55737587, "link": "https://stackoverflow.com/questions/55737587/is-there-a-way-to-convert-select-rss-find-iterator-into-a-rayon-paralleliterato", "title": "Is there a way to convert Select.rs&#39;s find iterator into a Rayon ParallelIterator?", "body": "<p>I would like to convert Select.rs's <code>Find</code>-iterator into a Rayon <code>ParallelIterator</code>. I haven't been able to do this by simply mucking about with the API. I suspect I shall have to implement or extend a trait, but I have no clue how to do it.</p>\n\n<p>I've tried collecting the Iterator and using <code>into_iter</code>, but to no avail.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use reqwest;\n\nuse rayon::prelude::*;\n\nuse select::document::Document;\nuse select::predicate::{Class};\n\nfn main() {\n    println!(\"Hello, world!\");\n\n    let url = \"https://pitchfork.com/reviews/albums/\";\n    let response = reqwest::get(url).unwrap();\n    if response.status().is_success() {\n        let document = Document::from_read(response).unwrap();\n        let albums = document.find(Class(\"review\"));\n        let albums : Vec&lt;String&gt; = albums.par_iter()\n                                        .map(|album| album.text()).collect();\n    }\n}\n</code></pre>\n\n<p>This results in the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `par_iter` found for type `select::document::Find&lt;'_, select::predicate::Class&lt;&amp;str&gt;&gt;` in the current scope\n  --&gt; src/main.rs:16:40\n   |\n16 |         let albums : Vec&lt;String&gt; = albums.par_iter()\n   |                                           ^^^^^^^^\n   |\n   = note: the method `par_iter` exists but the following trait bounds were not satisfied:\n           `select::document::Find&lt;'_, select::predicate::Class&lt;&amp;str&gt;&gt; : rayon::iter::IntoParallelRefIterator`\n</code></pre>\n\n<p>I see that the method <code>par_iter</code> doesn't exist, but it doesn't appear that the method <code>iter</code> does either.</p>\n\n<p>I assume there is a way of accomplishing this without having to create a pull request to select.rs - either way, assistance would be appreciated.</p>\n"}]