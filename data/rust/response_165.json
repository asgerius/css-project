[{"tags": ["reference", "rust"], "answers": [{"tags": [], "owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "is_accepted": true, "score": 5, "last_activity_date": 1520461369, "last_edit_date": 1520461369, "creation_date": 1520456378, "answer_id": 49161099, "question_id": 49160436, "link": "https://stackoverflow.com/questions/49160436/understanding-for-loop-semantics-when-iterating-through-a-vector-containing-muta/49161099#49161099", "title": "Understanding for loop semantics when iterating through a vector containing mutable references", "body": "<p>This is a little tricky because bindings in Rust can be a little tricky, but first let's see what we're dealing with and start with some code that does compile:</p>\n\n<pre><code>fn main() {\n    let mut a = 10;\n    let mut b = 20;\n    let mut c = 30;\n    let p = vec![&amp;mut a, &amp;mut b, &amp;mut c];\n\n    for x in &amp;p {              // note the lack of &amp;x\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n\n<p>This prints out the numbers 10, 20, 30 like you'd expect, but why? Lets change the code to get an error that will tell us what <code>x</code> is:</p>\n\n<pre><code>for x in &amp;p {              // note the lack of &amp;x\n    x + ();\n}\n</code></pre>\n\n<p>You then see <code>error[E0369]: binary operation + cannot be applied to type &amp;&amp;mut {integer}</code></p>\n\n<p>What you get out of iterating over <code>&amp;p</code> is a reference to a mutable reference to an integer. Specifically you get a reference to a vector-owned mutable reference to an integer. The loop cannot obtain a copy of that mutable reference because having two outstanding mutable references is a no-no. If you're not moving that mutable reference out of the vector, the for loop will have to settle for having an immutable borrow of that mutable reference. Here's some code that demonstrates what I'm saying:</p>\n\n<pre><code>let borrow = &amp;p[0];\nassert_eq!(borrow, &amp;&amp;mut 10);\n\n// Try to get our own `&amp;mut 10` out of `borrow`    \nlet gimme = *borrow; // error[E0507]: cannot move out of borrowed content\n</code></pre>\n\n<hr>\n\n<p>Now let's talk about what doing <code>for &amp;x in &amp;p</code> does. Here are two equivalent loops that give you the same <code>x</code> and also give you the same error.</p>\n\n<pre><code>for &amp;x in &amp;p {           \n}\n\nfor temp in &amp;p {\n    let x = *temp;\n} \n</code></pre>\n\n<p>This is because <code>for &amp;x in ...</code> is a destructuring binding. You're asserting \"<code>&amp;x</code> matches the structure of an item from iterating over <code>&amp;p</code>. I want <code>x</code> to be the part of that match without the first <code>&amp;</code>.\"</p>\n\n<p>It's similar to this:</p>\n\n<pre><code>let borrow = &amp;p[0];\nassert_eq!(borrow, &amp;&amp;mut 10);\n\n// Try to get our own `&amp;mut 10` out of `borrow`    \nlet gimme = *borrow; // error[E0507]: cannot move out of borrowed content    \nlet &amp;gimme_gimme = borrow;  // error[E0507]: cannot move out of borrowed content\n</code></pre>\n\n<p>In this case, <code>&amp;x</code> matches <code>&amp;&amp;mut {integer}</code> where <code>&amp;</code> matches the first <code>&amp;</code> and <code>x</code> then becomes bound to what's left (<code>&amp;mut {integer}</code>).</p>\n\n<p>I've already explained why you cant have your own copy of that <code>&amp;mut {integer}</code>.</p>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 49161099, "answer_count": 1, "score": 1, "last_activity_date": 1520461369, "creation_date": 1520453486, "last_edit_date": 1520455418, "question_id": 49160436, "link": "https://stackoverflow.com/questions/49160436/understanding-for-loop-semantics-when-iterating-through-a-vector-containing-muta", "title": "Understanding for loop semantics when iterating through a vector containing mutable references", "body": "<p>I am trying to understand why the following code fails:</p>\n\n<pre><code>fn main() {\n    let mut a = 10;\n    let mut b = 20;\n    let mut c = 30;\n    let p = vec![&amp;mut a, &amp;mut b, &amp;mut c]; // works with [&amp;a, &amp;b, &amp;c]\n\n    for &amp;x in &amp;p { // works with 'x' instead of of '&amp;x'\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n\n<p>The error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:7:9\n  |\n7 |     for &amp;x in &amp;p {\n  |         ^-\n  |         ||\n  |         |hint: to prevent move, use `ref x` or `ref mut x`\n  |         cannot move out of borrowed content\n</code></pre>\n\n<p>As I understand, the 'borrowed content' is the mutable references to variables <code>a</code>, <code>b</code>, <code>c</code> by the <code>vec!</code>, but what exactly is getting \"moved\" here? I presume the move is happening in the beginning of the <code>for</code> loop.</p>\n\n<p>I think there are two mutable references (one by <code>vec</code>) being held, but I guess I am not able to deconstruct <code>&amp;x</code> properly for my understanding and I know the answer lies there. I am able to understand why it works if I put <code>ref x</code> in there as suggested by the compiler or use <code>&amp;&amp;mut x</code>, but I'm not  understanding the aforementioned case. (i.e <code>&amp;x</code>).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1520407643, "post_id": 49143986, "comment_id": 85297289, "body": "Maybe using a regex for this job?"}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 3, "last_activity_date": 1520399749, "creation_date": 1520399749, "answer_id": 49144596, "question_id": 49143986, "link": "https://stackoverflow.com/questions/49143986/how-to-combine-splitn-and-split-whitespace-in-rust/49144596#49144596", "title": "How to combine splitn and split_whitespace in Rust?", "body": "<blockquote>\n  <p>Is there a succinct way of combining these?</p>\n</blockquote>\n\n<p>No.  You can't use an iterator as a predicate; they're not even remotely the same thing.</p>\n\n<p>You don't need access to the internal Unicode modules to test if something is whitespace: <code>char::is_whitespace</code> does that.  The <em>problem</em> is that <code>split_whitespace</code> is not just <code>s.split(char::is_whitespace)</code>.  <code>split</code> includes empty substrings between splits, <code>split_whitespace</code> does not.  As a result, if you have extra spaces in the input, these will \"eat\" one of the limited number of splits you want to do.</p>\n\n<p>The correct solution would be to implement a custom <a href=\"https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html\" rel=\"nofollow noreferrer\"><code>Pattern</code></a> that matches continuous runs of whitespace characters.  <em>Would</em> be, but isn't, because <code>Pattern</code> has been unstable since August 2015, and shows no sign of being stabilised any time soon.</p>\n\n<p>Were I in your position, I would just parse the string by hand.</p>\n"}, {"tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 3, "last_activity_date": 1520435639, "last_edit_date": 1520435639, "creation_date": 1520419216, "answer_id": 49149877, "question_id": 49143986, "link": "https://stackoverflow.com/questions/49143986/how-to-combine-splitn-and-split-whitespace-in-rust/49149877#49149877", "title": "How to combine splitn and split_whitespace in Rust?", "body": "<pre><code>entry.splitn(6, char::is_whitespace)\n</code></pre>\n\n<p>Should work correctly for the example string. That is, if the fields are separated by exactly one whitespace character. If you are certain this is the case for crontab entries this approach is sufficient. However, as pointed out in @DK.'s answer, if there happen to be extra whitespaces between fields each of them will lead to a split.</p>\n\n<p>For example, <code>\"1 2   3 4 5 command \\\"much   whitespace\\\"\"</code> results in <code>\"1\", \"2\", \"\", \"\", \"3\", \"4 5 command \\\"much   whitespace\\\"\"</code>.</p>\n\n<p>The cleanest solution would probably be to manually parse the string. But as a quick and dirty solution it is possible to use <code>splitn</code> with a stateful closure:</p>\n\n<pre><code>fn main() {\n    let entry = \"1 2 3     4 5 command \\\"much   whitespace\\\"\";\n\n    let mut last_whitespace = false;\n\n    let parts = entry.splitn(6, |c: char| {\n        if c.is_whitespace() {\n            if last_whitespace {\n                return false\n            }\n            last_whitespace = true;\n            true\n        } else {\n            last_whitespace = false;\n            false\n        }\n    }).map(str::trim);\n\n    let x: Vec&lt;_&gt; = parts.collect();\n    println!(\"{:?}\", x);\n}\n</code></pre>\n\n<p>The extra whitespaces are treated as part of the following substring, so we need to additionally trim each substring.</p>\n"}], "owner": {"reputation": 48006, "user_id": 96588, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/425fed56a46504d37ec907d99b09ecde?s=128&d=identicon&r=PG", "display_name": "l0b0", "link": "https://stackoverflow.com/users/96588/l0b0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1460, "favorite_count": 1, "accepted_answer_id": 49149877, "answer_count": 2, "score": 3, "last_activity_date": 1520435639, "creation_date": 1520395981, "question_id": 49143986, "link": "https://stackoverflow.com/questions/49143986/how-to-combine-splitn-and-split-whitespace-in-rust", "title": "How to combine splitn and split_whitespace in Rust?", "body": "<p>I'm trying to split crontab entries, and one of the requirements is that the last field, the command, should retain the original whitespace. In other words, given the line</p>\n\n<pre><code>1 2 3 4 5 command \"much   whitespace\"\n</code></pre>\n\n<p>the resulting structure should contain six elements, the last of which is exactly the string <code>command \"much   whitespace\"</code>.</p>\n\n<p>So I need to do <code>entry.splitn(6, [something involving whitespace])</code> or <code>entry.split_whitespace([something involving 6])</code>. The former seems cleaner, but I can't seem to reuse any of the implementation:</p>\n\n<ul>\n<li><code>entry.splitn(6, str::split_whitespace)</code> is a type mismatch</li>\n<li><code>entry.splitn(6, entry.split_whitespace())</code> results in \"the trait <code>std::ops::FnMut&lt;(char,)&gt;</code> is not implemented for <code>std::str::SplitWhitespace&lt;'_&gt;</code>\"</li>\n<li>I can't simply copy the implementation of <code>split_whitespace</code> in str.rs, because <code>std::std_unicode::str::UnicodeStr</code> is private.</li>\n</ul>\n\n<p>Is there a succinct way of combining these?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1520395728, "post_id": 49143770, "comment_id": 85293147, "body": "It might help to see how you&#39;re <i>currently</i> trying to structure your code.  This seems eminently doable."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1520396722, "post_id": 49143770, "comment_id": 85293438, "body": "I added an example. I stumbled up <a href=\"https://stackoverflow.com/q/41285979/943814\">this quesion</a> which makes me think split_at_mut or something similar might be the solution."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1520415100, "post_id": 49143770, "comment_id": 85301228, "body": "You are basically trying to visit all pairs of a slice. Strangely, I find no crate to do this."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1520424407, "post_id": 49143770, "comment_id": 85307213, "body": "@Boiethios <a href=\"https://docs.rs/itertools/0.7.7/itertools/macro.iproduct.html\" rel=\"nofollow noreferrer\"><code>itertools::iproduct</code></a> would do that... without solving the mutability issue, of course."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1520424468, "post_id": 49143770, "comment_id": 85307256, "body": "@kazemakase That&#39;s the whole point ;)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 2, "creation_date": 1520429306, "post_id": 49143770, "comment_id": 85310564, "body": "@kazemakase FYI, I did an iterator for this: <a href=\"https://gitlab.com/snippets/1702560\" rel=\"nofollow noreferrer\">gitlab.com/snippets/1702560</a> Maybe I will create a create for tools like that."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1520460787, "post_id": 49143770, "comment_id": 85329842, "body": "@Boiethios nice. I thought of doing something similar."}], "answers": [{"comments": [{"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1520397660, "post_id": 49144170, "comment_id": 85293675, "body": "Perfect, thanks! Using indices seems obvious in retrospect."}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1598206453, "post_id": 49144170, "comment_id": 112375681, "body": "Anything that can change the size of the vector could invalidate references, so I can understand why the vector container itself couldn&#39;t be mutated while iterating, but what is Rust trying to save me from by preventing me from mutating the elements?"}, {"owner": {"reputation": 801, "user_id": 1364755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/718e0543b3f4792aca11a852c0ac0742?s=128&d=identicon&r=PG", "display_name": "Nicholas Rishel", "link": "https://stackoverflow.com/users/1364755/nicholas-rishel"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 2, "creation_date": 1602102025, "post_id": 49144170, "comment_id": 113617593, "body": "@JosephGarvin you can mutate the elements, but you can&#39;t have a shared reference at the same time as a mutable reference. Consider if your vector (v1) contains vectors (v2), and you are iterating over v1 with both iter() and iter_mut() at the same time. You will have a &amp;mut and &amp; of v2. Now consider that through the &amp; you get the 1st element of v2, then through &amp;mut you resize the vec to 0. That &amp; to the first element now points to invalid memory."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 12, "last_activity_date": 1520397128, "creation_date": 1520397128, "answer_id": 49144170, "question_id": 49143770, "link": "https://stackoverflow.com/questions/49143770/efficiently-mutate-a-vector-while-also-iterating-over-the-same-vector/49144170#49144170", "title": "Efficiently mutate a vector while also iterating over the same vector", "body": "<p>The simplest way is to just use indices, which don't involve any long-lived borrows:</p>\n\n<pre><code>for i in 0..v.len() {\n    for j in 0..v.len() {\n        if i == j { continue; }\n        if v[j].a &gt; v[i].a {\n            v[i].a += 1;\n        }\n    }\n}\n</code></pre>\n\n<p>If you really, <em>really</em> want to use iterators, you can do it by dividing up the <code>Vec</code> into disjoint slices:</p>\n\n<pre><code>fn process(elem: &amp;mut MyStruct, other: &amp;MyStruct) {\n    if other.a &gt; elem.a {\n        elem.a += 1;\n    }\n}\n\nfor i in 0..v.len() {\n    let (left, mid_right) = v.split_at_mut(i);\n    let (mid, right) = mid_right.split_at_mut(1);\n    let elem = &amp;mut mid[0];\n\n    for other in left {\n        process(elem, other);\n    }\n    for other in right {\n        process(elem, other);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 801, "user_id": 1364755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/718e0543b3f4792aca11a852c0ac0742?s=128&d=identicon&r=PG", "display_name": "Nicholas Rishel", "link": "https://stackoverflow.com/users/1364755/nicholas-rishel"}, "is_accepted": false, "score": 0, "last_activity_date": 1602103280, "last_edit_date": 1602103280, "creation_date": 1602102907, "answer_id": 64251928, "question_id": 49143770, "link": "https://stackoverflow.com/questions/49143770/efficiently-mutate-a-vector-while-also-iterating-over-the-same-vector/64251928#64251928", "title": "Efficiently mutate a vector while also iterating over the same vector", "body": "<p>If you can modify type type of v, and the elements of v are <code>Copy</code>, you can wrap <code>MyStruct</code> in <code>Cell</code>.</p>\n<pre><code>#[derive(Copy, Clone)] \nstruct MyStruct {\n    a: i32,\n}\n\nfn main() {\n    use std::cell::Cell;\n    let v = vec![\n        Cell::new(MyStruct { a: 1 }),\n        Cell::new(MyStruct { a: 2 }),\n        Cell::new(MyStruct { a: 3 }),\n    ];\n\n    for elem in v.iter() {\n        for other_elem in v.iter() {\n            let mut e = elem.get();\n            if other_elem.get().a &gt; e.a {\n                e.a += 1;\n                elem.set(e);\n            }\n        }\n    }\n}\n</code></pre>\n<p>If instead you're passed a &amp;mut to a slice (or &amp;mut that can be converted into a slice), use <code>Cell::from_mut</code> and <code>Cell::as_slice_of_cells</code> and use the same trick as above (assuming the elements of the slice are <code>Copy</code>).</p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2465, "favorite_count": 2, "accepted_answer_id": 49144170, "answer_count": 2, "score": 7, "last_activity_date": 1602103280, "creation_date": 1520394399, "last_edit_date": 1520430064, "question_id": 49143770, "link": "https://stackoverflow.com/questions/49143770/efficiently-mutate-a-vector-while-also-iterating-over-the-same-vector", "title": "Efficiently mutate a vector while also iterating over the same vector", "body": "<p>I have a vector of structs, and I'm comparing every element in the vector against every other element, and in certain cases mutating the current element. </p>\n\n<p>My issue is that you can't have both a mutable and immutable borrow happening at the same time, but I'm not sure how to reframe my problem to get around this without cloning either the current element or the entire vector, which seems like a waste since I'm only ever mutating the current element, and it doesn't need to be compared to itself (I skip that case).</p>\n\n<p>I'm sure there's an idiomatic way to do this in Rust.</p>\n\n<pre><code>struct MyStruct {\n    a: i32,\n}\n\nfn main() {\n    let mut v = vec![MyStruct { a: 1 }, MyStruct { a: 2 }, MyStruct { a: 3 }];\n\n    for elem in v.iter_mut() {\n        for other_elem in v.iter() {\n            if other_elem.a &gt; elem.a {\n                elem.a += 1;\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["generics", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3575, "user_id": 111866, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e742e21c1b64a037eaa90aea1fdf7874?s=128&d=identicon&r=PG", "display_name": "Ross Light", "link": "https://stackoverflow.com/users/111866/ross-light"}, "edited": false, "score": 0, "creation_date": 1520396236, "post_id": 49143938, "comment_id": 85293300, "body": "Oof.  Thanks for the thorough investigation!  I&#39;ll file an issue as you suggest if I don&#39;t hear anything back."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 4, "last_activity_date": 1520395568, "creation_date": 1520395568, "answer_id": 49143938, "question_id": 49143625, "link": "https://stackoverflow.com/questions/49143625/how-to-disambiguate-associated-types-in-trait-object-bounds/49143938#49143938", "title": "How to disambiguate associated types in trait object bounds?", "body": "<p>I don't <em>believe</em> you can.</p>\n\n<p>Examining what I believe to be the relevant type in the compiler (<a href=\"https://github.com/rust-lang/rust/blob/4cdbac639af2074b8a07b4391b4e3e28b4118487/src/libsyntax/ast.rs#L1531-L1537\" rel=\"nofollow noreferrer\"><code>TypeBinding</code> in <code>libsyntax</code></a>) shows that it only supports a single identifier for the associated type.  So I don't think there's any way to specify the associated types from the field type.</p>\n\n<p>Defining your own intermediate trait doesn't help, since it uses the same syntax to constrain associated types.  Even modifying the traits in <code>stdweb</code> doesn't appear to work, as trying to constrain the <code>TryFrom::Error</code> types to an associated type in, say, <code>ReferenceType</code> produces a cyclic dependency that is rejected by the compiler.  Changing <code>ReferenceType</code> to accept a generic type parameter that is used to directly constrain the <code>Error</code> types also doesn't satisfy it.</p>\n\n<p>It's possible this is just an edge case that the language simply can't deal with as yet.  If someone else doesn't come up with a solution, I would recommend opening an issue in the <a href=\"https://github.com/rust-lang/rust/issues/\" rel=\"nofollow noreferrer\">compiler's issue tracker</a> with a complete motivating example.</p>\n\n<p>The only other solution I can think of is to modify <code>stdweb</code> to not use multiple <code>TryFrom</code> constraints.</p>\n"}], "owner": {"reputation": 3575, "user_id": 111866, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e742e21c1b64a037eaa90aea1fdf7874?s=128&d=identicon&r=PG", "display_name": "Ross Light", "link": "https://stackoverflow.com/users/111866/ross-light"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 244, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1520430702, "creation_date": 1520393259, "last_edit_date": 1520430702, "question_id": 49143625, "link": "https://stackoverflow.com/questions/49143625/how-to-disambiguate-associated-types-in-trait-object-bounds", "title": "How to disambiguate associated types in trait object bounds?", "body": "<p>If I try to define a boxed <a href=\"https://docs.rs/stdweb/*/stdweb/traits/trait.IEvent.html\" rel=\"nofollow noreferrer\"><code>IEvent</code></a> field like this:</p>\n\n<pre><code>use stdweb::private::ConversionError;\nuse stdweb::web::event::IEvent;\n\nstruct Foo {\n    bar: Box&lt;IEvent&lt;Error = ConversionError&gt;&gt;,\n}\n</code></pre>\n\n<p>I get an error like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0221]: ambiguous associated type `Error` in bounds of `stdweb::traits::IEvent`\n  --&gt; src/events.rs:16:21\n   |\n16 |     bar: Box&lt;IEvent&lt;Error = ConversionError&gt;&gt;,\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^ ambiguous associated type `Error`\n   |\nnote: associated type `stdweb::traits::IEvent` could derive from `stdweb::unstable::TryFrom&lt;stdweb::Reference&gt;`\n  --&gt; src/events.rs:16:21\n   |\n16 |     bar: Box&lt;IEvent&lt;Error = ConversionError&gt;&gt;,\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^\nnote: associated type `stdweb::traits::IEvent` could derive from `stdweb::unstable::TryFrom&lt;stdweb::Value&gt;`\n  --&gt; src/events.rs:16:21\n   |\n16 |     bar: Box&lt;IEvent&lt;Error = ConversionError&gt;&gt;,\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you want more information on this error, try using \"rustc --explain E0221\"\n</code></pre>\n\n<p>How do I write the syntax to set the associated <code>Error</code> types (for traits <code>TryFrom&lt;Value&gt;</code> and <code>TryFrom&lt;Reference&gt;</code>)?</p>\n"}, {"tags": ["pointers", "rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1520391532, "post_id": 49143327, "comment_id": 85292188, "body": "Have you tried just assigning it?  <code>t = ptr</code>?"}, {"owner": {"reputation": 221, "user_id": 7081500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8898cc3ce116bc692aa2004b0f28601f?s=128&d=identicon&r=PG&f=1", "display_name": "aupreti", "link": "https://stackoverflow.com/users/7081500/aupreti"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1520392061, "post_id": 49143327, "comment_id": 85292282, "body": "@DK. I am looking for a way to write the address that the <code>ptr</code> points to  to a specific location so that I can get the address even when I don&#39;t have <code>t</code>."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1520392129, "post_id": 49143327, "comment_id": 85292294, "body": "But that&#39;s what assignment <i>does</i>.  It takes the value of <code>ptr</code> (which is an address) and writes it to <code>t</code>, so that they&#39;re pointing to the same place in memory."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1520407759, "post_id": 49143569, "comment_id": 85297344, "body": "A lot of unsafes, not a good way to go (this is not a part of your answer, but for people who might think: &quot;Hey, this is a neat solution&quot;) <code>#[deny(unsafe)]</code> all the things!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1520432531, "post_id": 49143569, "comment_id": 85312759, "body": "You don&#39;t need <code>transmute</code> for this <i>at all</i>; saying that &quot;<code>Box&lt;T&gt;</code> is equivalent to a <code>*T</code>&quot; is only barely accurate; you do not have to convert to a reference to modify data; the calls to <code>drop</code> are unneeded; the mention of a <code>Mutex</code> seems to come out left field (there are no threads here); and there&#39;s <a href=\"https://stackoverflow.com/q/48882391/155423\">disagreement about when mutable aliasing occurs</a>. Although there are some correct points in this answer, I cannot recommend that people use it unless they already know what they are doing (which isn&#39;t really the point of Stack Overflow)."}, {"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 1, "creation_date": 1520432731, "post_id": 49143569, "comment_id": 85312884, "body": "At the very least, use <code>Box::into_raw</code> which is safe and isn&#39;t a transmute."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 0, "creation_date": 1520432807, "post_id": 49143569, "comment_id": 85312929, "body": "@JoshLee and <code>Box::from_raw</code>."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520471818, "post_id": 49143569, "comment_id": 85333355, "body": "@Shepmaster I&#39;m happy to rewrite this answer to be better if there&#39;s a better way to write it, but I&#39;m puzzled by some of your comments; why is <code>drop</code> not required? transmute consumes values, and those are heap allocated. They leak if you don&#39;t convert them back into droppables. I also have no idea what you&#39;re talking about with regard to modifying data without converting it to a reference, but that may just be my ignorance at play."}, {"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 1, "creation_date": 1520474505, "post_id": 49143569, "comment_id": 85333965, "body": "An explicit call to <code>drop</code> can be useful if the value isn&#39;t going out of scope but you still need to call the Drop impl. It&#39;s not considered idiomatic to call <code>drop</code> just to indicate that a value is being dropped. e.g. <a href=\"https://play.rust-lang.org/?gist=6ca022edabba2536661bddeb6cbd06b3&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. The fact that a <code>Box</code> is in scope tells you that of course a heap allocation will be freed."}], "tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": false, "score": -1, "last_activity_date": 1520473218, "last_edit_date": 1520473218, "creation_date": 1520392872, "answer_id": 49143569, "question_id": 49143327, "link": "https://stackoverflow.com/questions/49143327/storing-value-of-a-pointer-in-another-pointer-in-rust/49143569#49143569", "title": "Storing value of a pointer in another pointer in Rust", "body": "<p>You generally don't want to do that, but I'll trust you know what you're doing.</p>\n\n<p>The key here is to understand a few things:</p>\n\n<ul>\n<li><p><code>Box&lt;T&gt;</code> is roughly equivalent to a <code>*T</code> allocated on the heap, you can use <code>Box::into_raw</code> to convert it into a <code>*T</code>.</p></li>\n<li><p>If you do this, you're effectively leaking the heap allocated <code>Box&lt;T&gt;</code>, because Rust no longer knows where it is, or tracks it. You must manually convert it back into a droppable object at some point, for example using <code>Box::from_raw</code>.</p></li>\n<li><p>You <em>must</em> <code>Box::new(...)</code> a value to ensure it is put on the heap, otherwise your raw pointer will point into the stack, which will eventually become invalid.</p></li>\n<li><p>Mutable aliasing (which means two <code>&amp;mut T</code> pointing to the same data) causes undefined behavior. It is extremely important to understand that undefined behavior is not triggered by <em>concurrent writes</em> to mutable aliases... it is triggered by <a href=\"https://github.com/rust-lang/rfcs/issues/1447#issuecomment-185976431\" rel=\"nofollow noreferrer\">mutable aliases <em>existing at the same time, in any scope</em></a>.</p></li>\n</ul>\n\n<p>...but, if you really want to, you'd do it like this:</p>\n\n<pre><code>let foo_ref = Box::into_raw(Box::new(10));\nlet foo_ref_ref =  Box::into_raw(Box::new(foo_ref));\n\n// Modify via raw pointer\nunsafe {\n    **(foo_ref_ref as *const *mut i32) = 100;\n}\n\n// Read via raw pointer \nunsafe {\n    println!(\"{:?}\", **foo_ref_ref);\n}\n\n// Resolve leaked memory\nunsafe {\n    Box::from_raw(foo_ref_ref);\n    Box::from_raw(foo_ref);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 221, "user_id": 7081500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8898cc3ce116bc692aa2004b0f28601f?s=128&d=identicon&r=PG&f=1", "display_name": "aupreti", "link": "https://stackoverflow.com/users/7081500/aupreti"}, "edited": false, "score": 0, "creation_date": 1520436364, "post_id": 49153968, "comment_id": 85315583, "body": "I ended up declaring <code>ptr</code> and <code>t</code>  as ` *mut u64` and  did <code>*t = ptr as usize</code>. I imagine that will store ptr(address) at location of t."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 221, "user_id": 7081500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8898cc3ce116bc692aa2004b0f28601f?s=128&d=identicon&r=PG&f=1", "display_name": "aupreti", "link": "https://stackoverflow.com/users/7081500/aupreti"}, "edited": false, "score": 0, "creation_date": 1520437086, "post_id": 49153968, "comment_id": 85316133, "body": "@aupreti that&#39;s also incorrect. At the very least, it doesn&#39;t take into account different architectures with different pointer sizes."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1520455947, "last_edit_date": 1520455947, "creation_date": 1520431915, "answer_id": 49153968, "question_id": 49143327, "link": "https://stackoverflow.com/questions/49143327/storing-value-of-a-pointer-in-another-pointer-in-rust/49153968#49153968", "title": "Storing value of a pointer in another pointer in Rust", "body": "<blockquote>\n  <p>I have a variable <code>ptr</code> that is of type <code>*mut u8</code>. How do I store the address that the <code>ptr</code> points to as the value of another pointer <code>t</code> that is also of type <code>*mut u8</code></p>\n</blockquote>\n\n<p>Assign one pointer to another:</p>\n\n<pre><code>use std::ptr;\n\nfn main() {\n    let ptr: *mut u8 = ptr::null_mut();\n    let t: *mut u8 = ptr;\n}\n</code></pre>\n\n<p><code>ptr</code> is a pointer and the address it points to is <code>NULL</code>. This value is now stored in the pointer <code>t</code> of the same type as <code>ptr</code>: <code>t</code> points to the address <code>NULL</code>.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+-----+        +-----+\n|     |        |     |\n| ptr |        |  t  |\n|     |        |     |\n+--+--+        +--+--+\n   |              |\n   |              |\n   +----&gt;NULL&lt;----+\n</code></pre>\n\n<p>If you wanted to have <code>t</code> be a pointer to the <em>address of another pointer</em>, you would need to take a reference to <code>ptr</code>. The types also could not be the same:</p>\n\n<pre><code>use std::ptr;\n\nfn main() {\n    let ptr: *mut u8 = ptr::null_mut();\n    let t: *const *mut u8 = &amp;ptr;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>+-----+      +-----+\n|     |      |     |\n|  t  +------&gt; ptr +-----&gt;NULL\n|     |      |     |\n+-----+      +-----+\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>I am looking for a way to write the address that the <code>ptr</code> points to to a specific location so that I can get the address even when I don't have <code>t</code></p>\n</blockquote>\n\n<p>Raw pointers have no compiler-enforced lifetimes associated with them. If you want to keep the address of something after the value has disappeared, that's an ideal case for them \u2014 you don't have to do anything:</p>\n\n<pre><code>use std::ptr;\n\nfn do_not_dereference_this_result() -&gt; *const u8 {\n    let val: u8 = 127;\n    let ptr: *const u8 = &amp;val;\n    ptr\n}\n\nfn main() {\n    println!(\"{:p}\", do_not_dereference_this_result())\n}\n</code></pre>\n\n<p>In rarer cases, you might want to store the address in a <code>usize</code> (a pointer-sized integer value):</p>\n\n<pre><code>use std::ptr;\n\nfn do_not_dereference_this_result() -&gt; usize {\n    let val: u8 = 127;\n    let ptr: *const u8 = &amp;val;\n    ptr as usize\n}\n\nfn main() {\n    println!(\"{:x}\", do_not_dereference_this_result())\n}\n</code></pre>\n\n<hr>\n\n<p>It <em>really</em> sounds like you are confused by how pointers work, which is a pretty good sign that you are going to shoot yourself in the foot if you use them. I'd <strong>strongly</strong> encourage you to solely use references in any <em>important</em> code until your understanding of pointers has increased.</p>\n"}], "owner": {"reputation": 221, "user_id": 7081500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8898cc3ce116bc692aa2004b0f28601f?s=128&d=identicon&r=PG&f=1", "display_name": "aupreti", "link": "https://stackoverflow.com/users/7081500/aupreti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1301, "favorite_count": 1, "accepted_answer_id": 49153968, "answer_count": 2, "score": 1, "last_activity_date": 1520473218, "creation_date": 1520391027, "last_edit_date": 1520431961, "question_id": 49143327, "link": "https://stackoverflow.com/questions/49143327/storing-value-of-a-pointer-in-another-pointer-in-rust", "title": "Storing value of a pointer in another pointer in Rust", "body": "<p>What is the best way to store a pointer as a value of another pointer? </p>\n\n<p>I have a variable <code>ptr</code> that is of type <code>*mut u8</code>. How do I store the address that the <code>ptr</code> points to as the value of another pointer <code>t</code> that is also of type <code>*mut u8</code>.</p>\n\n<p>I am trying to do something like</p>\n\n<pre><code>*t = ptr;\n</code></pre>\n\n<p>I get <code>expected u8, found *-ptr</code> error. I understand the address <code>ptr</code> will be 64 bits. I want to fill up 64 bits starting from address <code>t</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1520390564, "post_id": 49142884, "comment_id": 85291985, "body": "Why do you need <code>collect</code> in the first place?  You&#39;re taking a collection, turning it into an iterator, then immediately turning it back into a collection, followed by trying to invoke an iterator method (which aren&#39;t on collections)."}], "answers": [{"comments": [{"owner": {"reputation": 19, "user_id": 9412427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5a833286ca4b0d16b19ce5573fe443?s=128&d=identicon&r=PG&f=1", "display_name": "Ivani", "link": "https://stackoverflow.com/users/9412427/ivani"}, "edited": false, "score": 0, "creation_date": 1520422097, "post_id": 49143123, "comment_id": 85305738, "body": "<code>nth(0)</code> doesn&#39;t help"}], "tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": false, "score": 1, "last_activity_date": 1520389531, "creation_date": 1520389531, "answer_id": 49143123, "question_id": 49142884, "link": "https://stackoverflow.com/questions/49142884/unable-to-fix-type-of-this-values-must-be-known-when-using-a-iterator/49143123#49143123", "title": "Unable to fix &quot;Type of this values must be known....&quot; when using a iterator", "body": "<p>The compiler cannot deduce what sort of collection you want.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect</a></p>\n\n<blockquote>\n  <p>Because collect() is so general, it can cause problems with type inference. As such, collect() is one of the few times you'll see the syntax affectionately known as the 'turbofish': ::&lt;>. This helps the inference algorithm understand specifically which collection you're trying to collect into.</p>\n</blockquote>\n\n<p>Consider:</p>\n\n<pre><code>let input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet output = input.iter().map(|&amp;x| x).collect();\nprintln!(\"{:?}\", output);\n\n3 | let output = input.iter().map(|&amp;x| x).collect();\n  |     ^^^^^^\n  |     |\n  |     cannot infer type for `_`\n  |     consider giving `output` a type\n</code></pre>\n\n<p>vs:</p>\n\n<pre><code>let input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet output = input.iter().map(|&amp;x| x).collect::&lt;Vec&lt;i32&gt;&gt;();\nprintln!(\"{:?}\", output);\n\n[1, 2, 3, 4, 5, 6, 7, 8, 9]\n</code></pre>\n\n<p>You probably want something along these lines, although I'm not sure what, based on your tiny snippet:</p>\n\n<pre><code>let input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet output = input.iter().filter(|&amp;x| *x &gt; 5).nth(0);\nprintln!(\"{:?}\", output);\n</code></pre>\n\n<p>Otherwise, explicitly use <code>collect::&lt;...&gt;</code> to resolve the output type.</p>\n"}], "owner": {"reputation": 19, "user_id": 9412427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5a833286ca4b0d16b19ce5573fe443?s=128&d=identicon&r=PG&f=1", "display_name": "Ivani", "link": "https://stackoverflow.com/users/9412427/ivani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 35, "favorite_count": 0, "closed_date": 1520429963, "answer_count": 1, "score": 1, "last_activity_date": 1520389531, "creation_date": 1520387484, "question_id": 49142884, "link": "https://stackoverflow.com/questions/49142884/unable-to-fix-type-of-this-values-must-be-known-when-using-a-iterator", "closed_reason": "Duplicate", "title": "Unable to fix &quot;Type of this values must be known....&quot; when using a iterator", "body": "<p>I'm using Hyper on the server side:</p>\n\n<pre><code>    //\"req\" is hyper::server::Request\n    match req.headers().iter().collect().filter(|x| x.name() == \"field123\").first() {\n      Some(...) =&gt; ...........\n    }\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>    error[E0619]: the type of this value must be known in this context\n   --&gt; src/main.rs:123:31\n    |\n123 |                         match req.headers().iter().collect().filter(|x| x.name() == \"field123\").first() {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What \"value\" exactly? Why does the error occur?</p>\n\n<p>How to fix it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1520408041, "post_id": 49142453, "comment_id": 85297487, "body": "Maybe this can help you: <a href=\"https://github.com/gyscos/Cursive/blob/master/src/cursive.rs#L18\" rel=\"nofollow noreferrer\">github.com/gyscos/Cursive/blob/master/src/cursive.rs#L18</a>"}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1520412806, "post_id": 49142453, "comment_id": 85299857, "body": "@hellow that&#39;s perfect, thank you! Do you want to post that as an answer? I&#39;ll happily accept it. Seems to work just great, eg. <a href=\"https://play.rust-lang.org/?gist=8e96ea704dbb48eb78dc1041dc509e2f&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1520416179, "post_id": 49142453, "comment_id": 85301929, "body": "Why do you use <code>Fn</code> instead of <code>FnMut</code>? <a href=\"https://play.rust-lang.org/?gist=acd83291926a8d7e2b393be31b4b68a6&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1520417389, "post_id": 49142453, "comment_id": 85302694, "body": "You only need <code>Send</code> not <code>Sync</code>, so you can replace the <code>Mutex</code> with a <code>RefCell</code>. <a href=\"https://play.rust-lang.org/?gist=a3d338835d0bcae646f46e3d982aca28&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1529054452, "last_edit_date": 1529054452, "creation_date": 1520414082, "answer_id": 49148061, "question_id": 49142453, "link": "https://stackoverflow.com/questions/49142453/is-it-possible-to-call-a-fnonce-from-a-fn-without-a-mutex/49148061#49148061", "title": "Is it possible to call a FnOnce from a Fn without a Mutex?", "body": "<p>The author of the <a href=\"https://crates.io/crates/cursive\" rel=\"nofollow noreferrer\">cursive crate</a> had exactly the same problem and solved it with their own trait. </p>\n\n<pre><code>/// Asynchronous callback function trait.\n///\n/// Every `FnOnce(&amp;mut Cursive) -&gt; () + Send` automatically\n/// implements this.\n///\n/// This is a workaround only because `Box&lt;FnOnce()&gt;` is not\n/// working and `FnBox` is unstable.\npub trait CbFunc: Send {\n    /// Calls the function.\n    fn call_box(self: Box&lt;Self&gt;, &amp;mut Cursive);\n}\n\nimpl&lt;F: FnOnce(&amp;mut Cursive) -&gt; () + Send&gt; CbFunc for F {\n    fn call_box(self: Box&lt;Self&gt;, siv: &amp;mut Cursive) {\n        (*self)(siv)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://github.com/gyscos/Cursive/blob/d52299a6e1fdc65d76105810653ed5340c3ad16f/src/cursive.rs#L17-L33\" rel=\"nofollow noreferrer\">source</a></p>\n\n<p><a href=\"https://github.com/gyscos/Cursive/pull/208\" rel=\"nofollow noreferrer\">Here is the PR</a>, where the code was introduced.</p>\n"}], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 49148061, "answer_count": 1, "score": 2, "last_activity_date": 1529054452, "creation_date": 1520384137, "last_edit_date": 1520430263, "question_id": 49142453, "link": "https://stackoverflow.com/questions/49142453/is-it-possible-to-call-a-fnonce-from-a-fn-without-a-mutex", "title": "Is it possible to call a FnOnce from a Fn without a Mutex?", "body": "<p><code>Fn</code> can be sent via a channel, but <code>FnOnce</code> cannot yet on stable. In order to send a <code>FnOnce</code> through a channel it is possible to wrap it in a <code>Fn</code>, as shown below. </p>\n\n<p>However, this requires a <code>Mutex</code>, which introduces an annoying overhead when scaling to very high throughput (i.e. tangibly, when you do this a lot, it's slow).</p>\n\n<p>Is there some other concurrency primitive I could use here that would be less heavyweight? Perhaps with <code>std::sync::atomic</code>? Can this be done without a lock?</p>\n\n<p>I have no interest in using nightly features or crates that rely on undefined behavior.</p>\n\n<pre><code>use std::thread;\nuse std::sync::Mutex;\nuse std::sync::mpsc;\n\nstruct RawFunc {\n    data: Box&lt;Fn() + Send + 'static&gt;,\n}\n\nimpl RawFunc {\n    fn new&lt;T&gt;(inner: T) -&gt; RawFunc\n    where\n        T: FnOnce() + Send + 'static,\n    {\n        let inner_lock = Mutex::new(Some(inner));\n        return RawFunc {\n            data: Box::new(move || match inner_lock.lock() {\n                Ok(mut i) =&gt; (i.take().unwrap())(),\n                Err(_) =&gt; {}\n            }),\n        };\n    }\n\n    fn invoke(self) {\n        (self.data)()\n    }\n}\n\nfn main() {\n    // Local\n    let x = RawFunc::new(move || {\n        println!(\"Hello world\");\n    });\n    x.invoke();\n\n    // Via channel\n    let (sx, rx) = mpsc::channel::&lt;RawFunc&gt;();\n    sx.send(RawFunc::new(move || {\n        println!(\"Hello world 2\");\n    })).unwrap();\n    let output = rx.recv().unwrap();\n    output.invoke();\n\n    // In a thread\n    let guard = thread::spawn(move || {\n        let output = rx.recv().unwrap();\n        output.invoke();\n    });\n\n    sx.send(RawFunc::new(move || {\n        println!(\"Hello world 3!\");\n    })).unwrap();\n\n    guard.join().unwrap();\n\n    // Passing arbitrary data to a thread\n    let (sx, rx) = mpsc::channel::&lt;RawFunc&gt;();\n    let guard = thread::spawn(move || {\n        let output = rx.recv().unwrap();\n        output.invoke();\n    });\n\n    let bar = RawFunc::new(move || {\n        println!(\"Moved func!\");\n    });\n    let foo = String::from(\"Hello World 4\");\n    sx.send(RawFunc::new(move || {\n        println!(\"Some moved data: {:?}\", foo);\n        bar.invoke();\n    })).unwrap();\n\n    guard.join().unwrap();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a3d338835d0bcae646f46e3d982aca28&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 604, "user_id": 540761, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0afdadc2029bb39daa3e49d90fcabe52?s=128&d=identicon&r=PG", "display_name": "synek317", "link": "https://stackoverflow.com/users/540761/synek317"}, "is_accepted": false, "score": 3, "last_activity_date": 1520431145, "last_edit_date": 1520431145, "creation_date": 1520417173, "answer_id": 49149120, "question_id": 49140854, "link": "https://stackoverflow.com/questions/49140854/how-can-i-call-one-procedural-macro-from-another/49149120#49149120", "title": "How can I call one procedural macro from another?", "body": "<p>I've found a workaround for simplest case, where the second procedural macro must be called after the first one:</p>\n\n<ol>\n<li>Create a separate crate that is not a procedural macro crate</li>\n<li>Include both procedural macros as dependencies in Cargo.toml and in lib.rs add <code>#[macro_use] extern crate ...</code> for both crates.</li>\n<li>Let the first macro generate code with <code>#[derive(SecondProcMacro)]</code></li>\n</ol>\n\n<p>This way, the user only has to add one dependency: the crate that includes both procedural macros. </p>\n\n<p>I still have no idea what to do if I would like to postprocess the output of the other procedural macro.</p>\n"}], "owner": {"reputation": 604, "user_id": 540761, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0afdadc2029bb39daa3e49d90fcabe52?s=128&d=identicon&r=PG", "display_name": "synek317", "link": "https://stackoverflow.com/users/540761/synek317"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 410, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1520433139, "creation_date": 1520374287, "last_edit_date": 1520433139, "question_id": 49140854, "link": "https://stackoverflow.com/questions/49140854/how-can-i-call-one-procedural-macro-from-another", "title": "How can I call one procedural macro from another?", "body": "<p>I would like to compose two procedural macros - one is mine and the second comes from another crate. </p>\n\n<p>I want to call the procedural macro like a normal function. The function marked as <code>#[proc_macro_derive]</code> is public, but I cannot call it from my macro: the compiler cannot find the function. I think that procedural macro functions are used only during code generation and are not present in the final code during compilation.</p>\n\n<p>I could generate code that has <code>#[derive(...)]</code> and the compiler will call that second macro, but this approach requires the end user to depend on the second macro crate even though they are not using it directly.</p>\n\n<p>Is there any way I could call a procedural macro like a normal function which takes tokens and returns tokens?</p>\n"}, {"tags": ["struct", "rust", "ffi", "bit-fields", "bitflags"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1520373551, "post_id": 49140221, "comment_id": 85286683, "body": "You don&#39;t want <i>bitflags</i>, you want <i>bit fields</i>. They aren&#39;t the same thing."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520373585, "post_id": 49140221, "comment_id": 85286697, "body": "Duplicate of <a href=\"https://stackoverflow.com/q/45229167/155423\">How does a C-style struct with a bitfield get represented in a Rust #&#91;repr(C)&#93; struct?</a>."}, {"owner": {"reputation": 613, "user_id": 4453524, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/sBZea.jpg?s=128&g=1", "display_name": "ljrk", "link": "https://stackoverflow.com/users/4453524/ljrk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520376597, "post_id": 49140221, "comment_id": 85288075, "body": "Oh, I was confused by the answer linking the bitflags crate. This makes sense now. But there&#39;s no documentation on whether the created bitflags are compatible. It&#39;s perhaps impossible due to being compiler-specific though, so I&#39;d be forced to write accessor-functions in C."}], "answers": [{"comments": [{"owner": {"reputation": 613, "user_id": 4453524, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/sBZea.jpg?s=128&g=1", "display_name": "ljrk", "link": "https://stackoverflow.com/users/4453524/ljrk"}, "edited": false, "score": 0, "creation_date": 1520614446, "post_id": 49194103, "comment_id": 85401999, "body": "However the C standard doesn&#39;t promise you shit about the layout, so the bindgen created bindings only work for the platform you are currently developing for. I&#39;m wondering whether the bitfield macro would handle this, but I haven&#39;t actually been able to understand at all what it should do, the doc seems a bit lacking. I&#39;ve just gone and used bingen in my crate, it&#39;s another addeded dependency but otherwise it&#39;d be difficult to stay portable."}], "tags": [], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "is_accepted": false, "score": 1, "last_activity_date": 1520599473, "creation_date": 1520599473, "answer_id": 49194103, "question_id": 49140221, "link": "https://stackoverflow.com/questions/49140221/struct-with-mixed-bitflag-and-normal-members/49194103#49194103", "title": "Struct with mixed bitflag and normal members", "body": "<p>In cases like this you can look at genearted code by <a href=\"https://github.com/rust-lang-nursery/rust-bindgen\" rel=\"nofollow noreferrer\">bindgen</a>:</p>\n\n<pre><code>$ bindgen test.h\n\n#[repr(C)]\n#[derive(Copy, Clone, Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]\npub struct __BindgenBitfieldUnit&lt;Storage, Align&gt;\nwhere\n    Storage: AsRef&lt;[u8]&gt; + AsMut&lt;[u8]&gt;,\n{\n    storage: Storage,\n    align: [Align; 0],\n}\n\n//skipped code with access method for bit fields \n\n#[repr(C)]\n#[derive(Debug, Copy, Clone)]\npub struct mixed {\n    pub _bitfield_1: __BindgenBitfieldUnit&lt;[u8; 2usize], u8&gt;,\n    pub some_val1: ::std::os::raw::c_uint,\n    pub some_val2: ::std::os::raw::c_uint,\n    pub _bitfield_2: __BindgenBitfieldUnit&lt;[u8; 2usize], u16&gt;,\n    pub __bindgen_padding_0: u16,\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 613, "user_id": 4453524, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/sBZea.jpg?s=128&g=1", "display_name": "ljrk", "link": "https://stackoverflow.com/users/4453524/ljrk"}, "is_accepted": false, "score": 0, "last_activity_date": 1520616943, "creation_date": 1520616943, "answer_id": 49199206, "question_id": 49140221, "link": "https://stackoverflow.com/questions/49140221/struct-with-mixed-bitflag-and-normal-members/49199206#49199206", "title": "Struct with mixed bitflag and normal members", "body": "<p>Using <code>rustc -- -Z unstable-options --pretty=expanded</code> I think I could figure out that the macro does, and this seems to yield something that could be correct, however this is probably only compatible when the compiler does not try to pad or reorder the bitfields in the struct.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(transparent)] // do I also need repr(C) ?\nstruct mixed {\n    flags_1_3: mixed_flags_1_3;\n    some_val1: c_uint;\n    some_val2: c_uint;\n    flags_4: mixed_flags_4;\n}\n\nbitfield!(\n    #[repr(transparent)] // do I also need repr(C), here too?\n    //  Results in a \"tuple struct\", ie. u16 = total size of bitfields\n    struct mixed_flags_1_3(u16) {\n        // All the following fields value should be treated as an\n        // unsigned int when accessed\n        c_uint;\n        /* get/field, set: first bit, last bit; */\n        flag_1_1, _: 0, 0;\n        flag_2_7, _: 7, 1;\n        // One could change the type again here, if one wanted to:\n        // u16\n        flag_3_8, _: 15, 8;\n    }\n)\n\nbitfield!(\n    #[repr(transparent)]\n    struct mixed_flags_4(u16) {\n        c_uint;\n        flag_4_16, _: 15, 0;\n    }\n)\n</code></pre>\n\n<p>But for now at least I think I will just use libclang and bindgen as dependencies and generate my bindings automatically, due to the aforementioned problems with platform compat.</p>\n"}], "owner": {"reputation": 613, "user_id": 4453524, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/sBZea.jpg?s=128&g=1", "display_name": "ljrk", "link": "https://stackoverflow.com/users/4453524/ljrk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 416, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1520617009, "creation_date": 1520371567, "last_edit_date": 1520617009, "question_id": 49140221, "link": "https://stackoverflow.com/questions/49140221/struct-with-mixed-bitflag-and-normal-members", "title": "Struct with mixed bitflag and normal members", "body": "<p>I'm trying to recreate a C struct with mixed bitfield members and \"normal\" members in Rust for FFI.</p>\n\n<p><s>I've read that the <a href=\"https://crates.io/crates/bitflags\" rel=\"nofollow noreferrer\">bitflags crate</a> would be the one to go with, unfortunately I find the documentation lacking on the regards how the syntax actually works.</s></p>\n\n<p>The bitflags crate makes it easier to create bitmasks in a similar style as in C using enums. The <a href=\"https://crates.io/crates/bitfield\" rel=\"nofollow noreferrer\">bitfield crate</a> claims to create bitfields that can be accessed, however I have no idea how it works.</p>\n\n<p>I have a C structure like this:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct mixed {\n    unsigned int flag_1_1 : 1;\n    unsigned int flag_2_7 : 7;\n    unsigned int flag_3_8 : 8;\n\n    unsigned int some_val1;\n    unsigned int some_val2;\n\n    unsigned int flag_4_16 : 16;\n};\n</code></pre>\n\n<p>I have no clue on how to represent it in Rust, I'd use the crate <a href=\"https://crates.io/crates/libc\" rel=\"nofollow noreferrer\">libc</a> to have access to <code>c_uint</code>, but other than that, I'm currently pretty much out of ideas and finding other code that does this has not proven successful:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(transparent)] // do I also need repr(C) ?\nstruct mixed {\n    flags_1_3: mixed_flags_1_3;\n    some_val1: c_uint;\n    some_val2: c_uint;\n    flags_4: mixed_flags_4;\n}\n\nbitfield!(\n    #[repr(transparent)] // do I also need repr(C), here too?\n    struct mixed_flags_1_3(u16 /* what about this parameter? */) {\n        u8; // what does this mean?\n        /* get/field, set: first bit, last bit; */\n        flag_1_1, _: 0, 0;\n        flag_2_7, _: 7, 1;\n        flag_3_8, _: 15, 8;\n    }\n)\n\nbitfield!(\n    #[repr(transparent)]\n    struct mixed_flags_4(u8) {\n        u8;\n        flag_4_16, _: 15, 0;\n    }\n)\n</code></pre>\n\n<p>These are just guesses, how do I create a correct representation?</p>\n"}, {"tags": ["json", "rust", "deserialization", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520367888, "post_id": 49139196, "comment_id": 85283920, "body": "What part of your proposed solution do you not like? How would you use your <code>Workspacesss</code>?"}, {"owner": {"reputation": 4382, "user_id": 2251437, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/9a594b33bf5eb20ec4e69b63f787e5c4?s=128&d=identicon&r=PG", "display_name": "sargas", "link": "https://stackoverflow.com/users/2251437/sargas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520368576, "post_id": 49139196, "comment_id": 85284300, "body": "@Shepmaster You&#39;re right. I thought that getting a <code>Vec&lt;Workspace&gt;</code> was tricky because what is deserializable (done by me) is <code>Workspace</code>. Turns out serde_json already got Vec&#39;s covered."}], "answers": [{"comments": [{"owner": {"reputation": 4382, "user_id": 2251437, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/9a594b33bf5eb20ec4e69b63f787e5c4?s=128&d=identicon&r=PG", "display_name": "sargas", "link": "https://stackoverflow.com/users/2251437/sargas"}, "edited": false, "score": 1, "creation_date": 1520368424, "post_id": 49139347, "comment_id": 85284227, "body": "I&#39;m a fool for not understanding the serde API."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1520367678, "creation_date": 1520367678, "answer_id": 49139347, "question_id": 49139196, "link": "https://stackoverflow.com/questions/49139196/how-do-i-deserialize-a-json-array-without-needing-a-wrapper-type/49139347#49139347", "title": "How do I deserialize a JSON array without needing a wrapper type?", "body": "<p>Just deserialize the vector directly:</p>\n\n<pre><code>let workspaces = serde_json::from_str::&lt;Vec&lt;Workspace&gt;&gt;(input);\n</code></pre>\n"}], "owner": {"reputation": 4382, "user_id": 2251437, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/9a594b33bf5eb20ec4e69b63f787e5c4?s=128&d=identicon&r=PG", "display_name": "sargas", "link": "https://stackoverflow.com/users/2251437/sargas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 452, "favorite_count": 0, "closed_date": 1531939907, "accepted_answer_id": 49139347, "answer_count": 1, "score": 1, "last_activity_date": 1520369001, "creation_date": 1520367053, "last_edit_date": 1520369001, "question_id": 49139196, "link": "https://stackoverflow.com/questions/49139196/how-do-i-deserialize-a-json-array-without-needing-a-wrapper-type", "closed_reason": "Duplicate", "title": "How do I deserialize a JSON array without needing a wrapper type?", "body": "<p>I want to deserialize the following JSON:</p>\n\n<pre><code>[\n  {\n    \"name\": \"one\",\n    \"path\": \"/path/to/one\"\n  },\n  {\n    \"name\": \"two\",\n    \"path\": \"/path/to/two\"\n  },\n  {\n    \"name\": \"three\",\n    \"path\": \"/path/to/three\"\n  }\n]\n</code></pre>\n\n<p>Into a <code>Vec&lt;Worskpace&gt;</code>. <code>Workspace</code> is defined below:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\nstruct Workspace {\n    name: String,\n    path: String,\n}\n</code></pre>\n\n<p>Is there a way to do that without having to do something like:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\nstruct Workspacesss {\n    values: Vec&lt;Workspace&gt;,\n}\n</code></pre>\n"}, {"tags": ["oop", "rust", "traits", "trait-objects"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1520362992, "post_id": 49137985, "comment_id": 85281403, "body": "You might wish to state whether the elements in the binary heap really need to be trait objects, and/or reference-counted. What concrete implementations of <code>HasJob</code> do you have?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1520363109, "post_id": 49137985, "comment_id": 85281459, "body": "How do you impose an ordering on <code>JobPtr</code>s, using only <code>id</code>, <code>start</code>, <code>end</code>, <code>earliest_start</code>, and <code>latest_finish</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520363209, "post_id": 49137985, "comment_id": 85281503, "body": "Basically the same as <a href=\"https://stackoverflow.com/q/25339603/155423\">How to test for equality between trait objects</a>"}, {"owner": {"reputation": 696, "user_id": 151526, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6835a2acb241423e713f0d804ce66cad?s=128&d=identicon&r=PG", "display_name": "shadeMe", "link": "https://stackoverflow.com/users/151526/shademe"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1520363781, "post_id": 49137985, "comment_id": 85281768, "body": "@E_net4 There is just one concrete impl. of HasJob and it merely returns the values of the corresponding fields. The example code I&#39;ve posted above is just a toy example I&#39;ve been using to understand how Rust works.  The job objects are shared elsewhere, which is why I&#39;ve used a ref-counted pointer. For what it&#39;s worth, using a regular reference causes the same errors."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1520363881, "post_id": 49137985, "comment_id": 85281837, "body": "You seem to have exposed an XY problem. :) With only one concrete implementation, you don&#39;t need to use trait objects."}, {"owner": {"reputation": 696, "user_id": 151526, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6835a2acb241423e713f0d804ce66cad?s=128&d=identicon&r=PG", "display_name": "shadeMe", "link": "https://stackoverflow.com/users/151526/shademe"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1520363913, "post_id": 49137985, "comment_id": 85281846, "body": "@trentcl The code is largely a toy example, but the basic idea is to use the (unique) ids for ordering."}, {"owner": {"reputation": 696, "user_id": 151526, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6835a2acb241423e713f0d804ce66cad?s=128&d=identicon&r=PG", "display_name": "shadeMe", "link": "https://stackoverflow.com/users/151526/shademe"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1520364078, "post_id": 49137985, "comment_id": 85281943, "body": "@E_net4 Indeed - I do realize that. The point of the exercise was, however, to write the code based on the assumption that there are multiple implementations. As I mentioned before, the code only serves to help me understand how the language works."}, {"owner": {"reputation": 696, "user_id": 151526, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6835a2acb241423e713f0d804ce66cad?s=128&d=identicon&r=PG", "display_name": "shadeMe", "link": "https://stackoverflow.com/users/151526/shademe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520364394, "post_id": 49137985, "comment_id": 85282081, "body": "@Shepmaster Apologies, but I don&#39;t see how that post relates to my question. Could please clarify?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1520366485, "post_id": 49137985, "comment_id": 85283180, "body": "@shadeMe <a href=\"https://stackoverflow.com/a/49138717/3650362\">Shepmaster&#39;s answer</a> to the other post applied to your problem: <a href=\"https://play.rust-lang.org/?gist=f5d899182c7b65145f9de8020c22c4c8&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>. To compare <code>HasJob</code> trait objects, you have to implement <code>Ord</code> <i>for <code>HasJob</code></i>, not just for a type that implements <code>HasJob</code> (because it isn&#39;t possible to compare different types even if they both implement <code>Ord</code>.)"}, {"owner": {"reputation": 696, "user_id": 151526, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6835a2acb241423e713f0d804ce66cad?s=128&d=identicon&r=PG", "display_name": "shadeMe", "link": "https://stackoverflow.com/users/151526/shademe"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1520368807, "post_id": 49137985, "comment_id": 85284419, "body": "@trentcl Ah, I just noticed that he has added his own answer for trait objects. I didn&#39;t realize one could implement super traits for traits that way. Marked as duplicate, thanks!"}], "owner": {"reputation": 696, "user_id": 151526, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6835a2acb241423e713f0d804ce66cad?s=128&d=identicon&r=PG", "display_name": "shadeMe", "link": "https://stackoverflow.com/users/151526/shademe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 0, "closed_date": 1520368698, "answer_count": 0, "score": 1, "last_activity_date": 1520364907, "creation_date": 1520362175, "last_edit_date": 1520364907, "question_id": 49137985, "link": "https://stackoverflow.com/questions/49137985/how-do-i-use-a-trait-object-in-a-binaryheap", "closed_reason": "Duplicate", "title": "How do I use a trait object in a BinaryHeap?", "body": "<p>I have the following simplified code:</p>\n\n<pre><code>use std::collections::BinaryHeap;\nuse std::rc::Rc;\n\nstruct JobId;\nstruct Coord;\nstruct TimeStep;\n\npub trait HasJob {\n    fn id(&amp;self) -&gt; JobId;\n    fn start(&amp;self) -&gt; Coord;\n    fn end(&amp;self) -&gt; Coord;\n    fn earliest_start(&amp;self) -&gt; TimeStep;\n    fn latest_finish(&amp;self) -&gt; TimeStep;\n}\n\ntype JobPtr = Rc&lt;HasJob&gt;;\n\n// a concrete class that implements the above trait\n// and other basic traits like Eq, Hash, Ord, etc\npub struct Job {}\n// another class that implements the HasJob trait\npub struct JobPrime {}\n\nfn main() {\n    // this line raises a compiler error\n    let heap: BinaryHeap&lt;JobPtr&gt; = BinaryHeap::with_capacity(10);\n}\n</code></pre>\n\n<p>The basic idea is to use the (unique) <code>id</code>s for ordering. </p>\n\n<p>The heap initialization causes the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `HasJob: std::cmp::Ord` is not satisfied\n  --&gt; src/main.rs:24:36\n   |\n24 |     let heap: BinaryHeap&lt;JobPtr&gt; = BinaryHeap::with_capacity(10);\n   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::cmp::Ord` is not implemented for `HasJob`\n   |\n   = note: required because of the requirements on the impl of `std::cmp::Ord` for `std::rc::Rc&lt;HasJob&gt;`\n   = note: required by `&lt;std::collections::BinaryHeap&lt;T&gt;&gt;::with_capacity`\n</code></pre>\n\n<p>I've just started trying my hand at Rust and have an OOP/C++/Java background. The intention is to use the <code>HasJob</code> trait as an \"interface\" and use that to induce type erasure/dynamic dispatch w.r.t generic collections/containers - A common OOP pattern.</p>\n\n<p>If I understand correctly, the generic parameter of <code>BinaryHeap</code> has the constraint that the concrete type passed to it needs to implement the <code>Ord</code> trait. Attempting to extend the original trait with required trait like so...</p>\n\n<pre><code>pub trait HasJob: Ord + /*others*/\n</code></pre>\n\n<p>... violates Rust's object safety guarantee and raises this compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `HasJob` cannot be made into an object\n  --&gt; src/main.rs:16:22\n   |\n16 |     type JobPtr = Rc&lt;HasJob&gt;;\n   |                      ^^^^^^ the trait `HasJob` cannot be made into an object\n   |\n   = note: the trait cannot use `Self` as a type parameter in the supertraits or where-clauses\n</code></pre>\n\n<p>How do I get around the above issue?</p>\n"}, {"tags": ["rust", "higher-order-functions"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1520332859, "post_id": 49128666, "comment_id": 85262073, "body": "You haven&#39;t specified what the actual question is.  You mention you find something confusing, but don&#39;t tell us what it is."}, {"owner": {"reputation": 203, "user_id": 7390340, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46cf56cb38dd07f4825a6cfa064608be?s=128&d=identicon&r=PG&f=1", "display_name": "Nemanja Beric", "link": "https://stackoverflow.com/users/7390340/nemanja-beric"}, "edited": false, "score": 0, "creation_date": 1520334018, "post_id": 49128666, "comment_id": 85262761, "body": "I apologize for ambiguity. My questions are regarding the three &quot;filter...&quot; functions, and I stated the whole main function, so you could see on what I am using those functions. My questions are why do I have to use the double references, and why does the vector remains same after the three filters. Input could be:  3 \\n 10:23:01 \\n 3:09:18 \\n 22:11:54"}, {"owner": {"reputation": 203, "user_id": 7390340, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46cf56cb38dd07f4825a6cfa064608be?s=128&d=identicon&r=PG&f=1", "display_name": "Nemanja Beric", "link": "https://stackoverflow.com/users/7390340/nemanja-beric"}, "edited": false, "score": 0, "creation_date": 1520334152, "post_id": 49128666, "comment_id": 85262840, "body": "I am trying to use the filter function and destructuring."}, {"owner": {"reputation": 203, "user_id": 7390340, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46cf56cb38dd07f4825a6cfa064608be?s=128&d=identicon&r=PG&f=1", "display_name": "Nemanja Beric", "link": "https://stackoverflow.com/users/7390340/nemanja-beric"}, "edited": false, "score": 0, "creation_date": 1520334487, "post_id": 49128666, "comment_id": 85263044, "body": "The vector remains same after the filter function, and if use iter_mut() it states type errors."}, {"owner": {"reputation": 693, "user_id": 2139902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e0050129417b8d5d74968630b13da64c?s=128&d=identicon&r=PG", "display_name": "Sean Burton", "link": "https://stackoverflow.com/users/2139902/sean-burton"}, "edited": false, "score": 3, "creation_date": 1520334587, "post_id": 49128666, "comment_id": 85263103, "body": "You should edit your clarification into the question so people don&#39;t have to read the comments to know what you&#39;re asking"}, {"owner": {"reputation": 203, "user_id": 7390340, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46cf56cb38dd07f4825a6cfa064608be?s=128&d=identicon&r=PG&f=1", "display_name": "Nemanja Beric", "link": "https://stackoverflow.com/users/7390340/nemanja-beric"}, "edited": false, "score": 0, "creation_date": 1520338474, "post_id": 49128666, "comment_id": 85265587, "body": "Still nothing happened. The vector remains same after the filters."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1520341465, "post_id": 49128666, "comment_id": 85267647, "body": "@NemanjaBeric As already said, please EDIT your question to add the information, do not use comments for that."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1520342779, "post_id": 49131902, "comment_id": 85268514, "body": "This is written in the warning: <b>warning: unused <code>std::iter::Filter</code> which must be used: iterator adaptors are lazy and do nothing unless consumed</b>. I wonder why people do not read the warnings."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 4, "creation_date": 1520343940, "post_id": 49131902, "comment_id": 85269279, "body": "The code can be simplified to <code>vec.retain(|e| !some_predicate(e))</code>"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 3, "last_activity_date": 1520343638, "last_edit_date": 1520343638, "creation_date": 1520342581, "answer_id": 49131902, "question_id": 49128666, "link": "https://stackoverflow.com/questions/49128666/why-does-calling-filter-on-a-vector-not-remove-elements-from-the-vector/49131902#49131902", "title": "Why does calling filter on a vector not remove elements from the vector?", "body": "<p>Note that <code>filter</code> operates on an iterator, not on the vector; it removes elements from the iterator and not from the vector. One way to do what you want is to collect the result of <code>filter</code> into a new vector and replace the old one with it: <code>v = v.iter().filter(whatever).collect();</code> but this will allocate space for a new vector, copy the elements from the old vector into the new one, then free the old vector.</p>\n\n<p>There is an experimental API, <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.drain_filter\" rel=\"nofollow noreferrer\"><code>drain_filter</code></a>, which allows you to modify the vector and remove matching elements in place. However since it is experimental, this API is only available in nightly for the time being.</p>\n\n<p>If you want to keep to stable Rust and avoid the overhead of <code>collect</code>, you will need to remove the elements by hand. Something like this should do it (taken from the <code>drain_filter</code> docs):</p>\n\n<pre><code>let mut i = 0;\nwhile i != vec.len() {\n    if some_predicate(&amp;mut vec[i]) {\n        let val = vec.remove(i);\n        // your code here\n    } else {\n        i += 1;\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1520345533, "post_id": 49132322, "comment_id": 85270312, "body": "This is even simpler: <code>let min = v.iter().min_by_key(|x| x.0).unwrap();</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1520346361, "post_id": 49132322, "comment_id": 85270824, "body": "@Boiethios maybe... although that returns the <code>&amp;(u8, u8, u8)</code> so you have to pull the value out and make sure the reference doesn&#39;t live too long and collide with the call to <code>retain</code>. Something like <code>v.iter().min_by_key(|x| x.0).unwrap().0</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1520346570, "post_id": 49132322, "comment_id": 85270947, "body": "The reference is ok, because <code>v</code> lives during the whole function. For the retain, you can do <code>v.retain(|x| x.0 == min.0);</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1520346915, "post_id": 49132322, "comment_id": 85271182, "body": "@Boiethios nope, that&#39;s what I mean about too long: <code>cannot borrow `*v` as mutable because it is also borrowed as immutable</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1520343924, "creation_date": 1520343924, "answer_id": 49132322, "question_id": 49128666, "link": "https://stackoverflow.com/questions/49128666/why-does-calling-filter-on-a-vector-not-remove-elements-from-the-vector/49132322#49132322", "title": "Why does calling filter on a vector not remove elements from the vector?", "body": "<p>Iterators do not alter the number of items in the original data structure. Instead, you want to use <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.retain\" rel=\"nofollow noreferrer\"><code>retain</code></a>:</p>\n\n<pre><code>fn filter_hours(v: &amp;mut Vec&lt;(u8, u8, u8)&gt;) {\n    let min = v.iter().map(|&amp;(h, _, _)| h).min().unwrap();\n    v.retain(|&amp;(h, _, _)| h == min);\n}\n</code></pre>\n"}], "owner": {"reputation": 203, "user_id": 7390340, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46cf56cb38dd07f4825a6cfa064608be?s=128&d=identicon&r=PG&f=1", "display_name": "Nemanja Beric", "link": "https://stackoverflow.com/users/7390340/nemanja-beric"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 493, "favorite_count": 0, "accepted_answer_id": 49132322, "answer_count": 2, "score": 0, "last_activity_date": 1520343924, "creation_date": 1520332282, "last_edit_date": 1520343592, "question_id": 49128666, "link": "https://stackoverflow.com/questions/49128666/why-does-calling-filter-on-a-vector-not-remove-elements-from-the-vector", "title": "Why does calling filter on a vector not remove elements from the vector?", "body": "<p>I am writing a small program that finds a winner of a marathon. \nEverything seems logical until I try to filter the vector for runners that are late for some amount of time. The vector remains same after the filter function, and if use <code>iter_mut()</code> it states type errors. </p>\n\n<pre><code>fn main() {\n    let mut input_line = String::new();\n    std::io::stdin().read_line(&amp;mut input_line);\n    let n = input_line.trim().parse::&lt;u8&gt;().unwrap();\n    let mut v = Vec::with_capacity(n as usize);\n    for _ in 0..n {\n        let mut input_line = String::new();\n        std::io::stdin().read_line(&amp;mut input_line);\n        let separated = input_line.trim().split(\":\").collect::&lt;Vec&lt;_&gt;&gt;();\n        let hours = separated[0].parse::&lt;u8&gt;().unwrap();\n        let minutes = separated[1].parse::&lt;u8&gt;().unwrap();\n        let seconds = separated[2].parse::&lt;u8&gt;().unwrap();\n        v.push((hours, minutes, seconds));\n    }\n\n    //println!(\"{:?}\", v);\n    filter_hours(&amp;mut v);\n    filter_minutes(&amp;mut v);\n    filter_seconds(&amp;mut v);\n    println!(\"{:?}\", v[0]);\n\n    println!(\"{:?}\", v);\n}\n\nfn filter_hours(v: &amp;mut Vec&lt;(u8, u8, u8)&gt;) {\n    let (mut minimum, _, _) = v[0];\n    for &amp;i in v.iter() {\n        let (h, _, _) = i;\n        if h &lt; minimum {\n            minimum = h;\n        }\n    }\n    v.iter().filter(|&amp;&amp;(h, _, _)| h == minimum);\n}\n\nfn filter_minutes(v: &amp;mut Vec&lt;(u8, u8, u8)&gt;) {\n    let (_, mut minimum, _) = v[0];\n    for &amp;i in v.iter() {\n        let (_, m, _) = i;\n        if m &lt; minimum {\n            minimum = m;\n        }\n    }\n    v.iter().filter(|&amp;&amp;(_, m, _)| m == minimum);\n}\n\nfn filter_seconds(v: &amp;mut Vec&lt;(u8, u8, u8)&gt;) {\n    let (_, _, mut minimum) = v[0];\n    for &amp;i in v.iter() {\n        let (_, _, s) = i;\n        if s &lt; minimum {\n            minimum = s;\n        }\n    }\n    v.iter().filter(|&amp;&amp;(_, _, s)| s == minimum);\n}\n</code></pre>\n"}, {"tags": ["sockets", "rust", "udp"], "answers": [{"tags": [], "owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "is_accepted": false, "score": 6, "last_activity_date": 1520327536, "creation_date": 1520327536, "answer_id": 49127145, "question_id": 49125176, "link": "https://stackoverflow.com/questions/49125176/cant-assign-requested-address-when-sending-to-a-udpsocket/49127145#49127145", "title": "&quot;Can&#39;t assign requested address&quot; when sending to a UdpSocket", "body": "<p>The address you used to bind your <code>UdpSocket</code> to is a multicast address.</p>\n\n<p>The argument to <a href=\"https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.bind\" rel=\"noreferrer\"><code>UdpSocket::bind</code></a> should be the local address you send <em>from</em>.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.send_to\" rel=\"noreferrer\">The docs use <code>127.0.0.1:34254</code></a>. If it is not currently being used, this should work for you. Additionally you can give it an array of potential adresses to use.</p>\n"}, {"tags": [], "owner": {"reputation": 373, "user_id": 8399495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d4dcf7abc7d47d4c9e4f563f4964d0c?s=128&d=identicon&r=PG&f=1", "display_name": "Sarp Ba\u015faraner", "link": "https://stackoverflow.com/users/8399495/sarp-ba%c5%9faraner"}, "is_accepted": true, "score": 0, "last_activity_date": 1520627142, "last_edit_date": 1520627142, "creation_date": 1520573399, "answer_id": 49187166, "question_id": 49125176, "link": "https://stackoverflow.com/questions/49125176/cant-assign-requested-address-when-sending-to-a-udpsocket/49187166#49187166", "title": "&quot;Can&#39;t assign requested address&quot; when sending to a UdpSocket", "body": "<p>Inspired by <a href=\"https://stackoverflow.com/a/7383682/8399495\">this answer</a>, I changed the address to \"0.0.0.0:34254\", and it worked: </p>\n\n<pre><code>let addr = \"239.255.255.250:1982\";\nlet socket = UdpSocket::bind(\"0.0.0.0:34254\").unwrap();\nlet message = \"some message\".as_bytes();\nsocket.send_to(message, addr).unwrap();\n</code></pre>\n"}], "owner": {"reputation": 373, "user_id": 8399495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d4dcf7abc7d47d4c9e4f563f4964d0c?s=128&d=identicon&r=PG&f=1", "display_name": "Sarp Ba\u015faraner", "link": "https://stackoverflow.com/users/8399495/sarp-ba%c5%9faraner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2772, "favorite_count": 0, "accepted_answer_id": 49187166, "answer_count": 2, "score": 5, "last_activity_date": 1520627142, "creation_date": 1520320129, "last_edit_date": 1520573383, "question_id": 49125176, "link": "https://stackoverflow.com/questions/49125176/cant-assign-requested-address-when-sending-to-a-udpsocket", "title": "&quot;Can&#39;t assign requested address&quot; when sending to a UdpSocket", "body": "<pre><code>let addr = \"239.255.255.250:1982\";\nlet socket = UdpSocket::bind(addr).unwrap();\nlet message = \"some message\".as_bytes();\nsocket.send_to(message, addr).unwrap();\n</code></pre>\n\n<p>This code gives the following error for the last line:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error { repr: Os { code: 49, message: \"Can\\'t assign requested address\" } }\n</code></pre>\n\n<p>Why would that be the case?</p>\n\n<p>EDIT:\nI tried the following as suggested:</p>\n\n<pre><code>let addr = \"239.255.255.250:1982\";\nlet socket = UdpSocket::bind(\"127.0.0.1:34254\").unwrap();\nlet message = \"some message\".as_bytes();\nsocket.send_to(message, addr).unwrap();\n</code></pre>\n\n<p>But that didn't change anything, unfortunately.</p>\n"}, {"tags": ["assembly", "x86", "rust", "code-generation", "osdev"], "comments": [{"owner": {"reputation": 280, "user_id": 2250903, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/35b6e1021e53f54702f69c88d676faca?s=128&d=identicon&r=PG", "display_name": "Kevin Boos", "link": "https://stackoverflow.com/users/2250903/kevin-boos"}, "edited": false, "score": 0, "creation_date": 1520321044, "post_id": 49125151, "comment_id": 85255461, "body": "Thanks. The red zone has been disabled in my target json file, so that&#39;s not an issue. To be clear, negative offsets from RSP are fine, positive offsets are the problem because the addresses above RSP are not mapped."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1520321402, "post_id": 49125151, "comment_id": 85255631, "body": "Negative offsets from RSP would only be fine if you <i>did</i> have a red zone.  But you don&#39;t, so they&#39;re not safe unless interrupts are disabled."}, {"owner": {"reputation": 280, "user_id": 2250903, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/35b6e1021e53f54702f69c88d676faca?s=128&d=identicon&r=PG", "display_name": "Kevin Boos", "link": "https://stackoverflow.com/users/2250903/kevin-boos"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1520323634, "post_id": 49125151, "comment_id": 85256704, "body": "Hmm, perhaps I am misunderstanding something. Say I have a kernel stack occupying addresses 0x4000 to 0x8000, with the top (<code>rsp</code>) being 0x8000. If i have a negative offset from the top of the stack, say -8, enough space for a u64, then the memory access will be valid at address 0x7FF8. If I have a positive offset, like shown in my code sample, the access would be invalid, no?"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1520324245, "post_id": 49125151, "comment_id": 85257021, "body": "Right, it&#39;s also not safe to access stack memory you haven&#39;t reserved with <code>sub rsp, whatever</code>, or more generally that you don&#39;t own for some reason (e.g. red zone or function args on the stack).  In a normal function, you&#39;d be scribbling over your caller&#39;s stack space.  In your case, you&#39;d be referencing unallocated or non-stack memory, leaving all that stack memory below <code>rsp</code> (down to <code>0x4000</code>) unused."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1520324381, "post_id": 49125151, "comment_id": 85257073, "body": "The reason it&#39;s weird / confusing is that you asked for a <code>naked</code> function (thus no function prologue to reserve stack space), but then you used local variables inside it anyway.  I think in some C compilers that support naked functions, that&#39;s not supported; only inline asm as the entire function body is allowed.  But IDK what Rust says is officially supported as far as weird tangos between inline asm and the compiler."}, {"owner": {"reputation": 280, "user_id": 2250903, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/35b6e1021e53f54702f69c88d676faca?s=128&d=identicon&r=PG", "display_name": "Kevin Boos", "link": "https://stackoverflow.com/users/2250903/kevin-boos"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1520325138, "post_id": 49125151, "comment_id": 85257421, "body": "Right, thanks for the clarification and for lending your expertise. Agreed on all counts, it&#39;s a bit strange to do it as a mixed assembly/Rust naked function, just something I wanted to try out. It&#39;s probably a bad idea to mix naked functions and local stack vars, as you said."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1520325540, "post_id": 49125151, "comment_id": 85257643, "body": "I added some of my previous comments into my answer.  You should probably mark it as accepted if you think it&#39;s a complete answer to your question.  Glad I could help."}, {"owner": {"reputation": 280, "user_id": 2250903, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/35b6e1021e53f54702f69c88d676faca?s=128&d=identicon&r=PG", "display_name": "Kevin Boos", "link": "https://stackoverflow.com/users/2250903/kevin-boos"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1520325991, "post_id": 49125151, "comment_id": 85257858, "body": "Thanks, will do. I&#39;ll post the Rust-specific code generation question on the Rust forum."}], "answers": [{"comments": [{"owner": {"reputation": 280, "user_id": 2250903, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/35b6e1021e53f54702f69c88d676faca?s=128&d=identicon&r=PG", "display_name": "Kevin Boos", "link": "https://stackoverflow.com/users/2250903/kevin-boos"}, "edited": false, "score": 0, "creation_date": 1520322020, "post_id": 49125386, "comment_id": 85255960, "body": "Thanks for the answer. Yeah, I previously considered just subtracting some space from rsp, or better yet set the initial syscall stack beneath the top of the stack itself, but that&#39;s kind of hacky in my opinion.   Sorry, i had omitted some other code for brevity, but yes I am handling rbp properly. I guess my real confusion stems from it removing the frame pointer and then using positive offsets from <code>rsp</code>, which I did not expect (due to my own misunderstanding)."}], "tags": [], "owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "is_accepted": true, "score": 2, "last_activity_date": 1520324919, "last_edit_date": 1520324919, "creation_date": 1520320933, "answer_id": 49125386, "question_id": 49125151, "link": "https://stackoverflow.com/questions/49125151/code-generation-for-local-stack-variables-in-release-vs-debug-mode/49125386#49125386", "title": "Code generation for local stack variables in release vs. debug mode", "body": "<p><strong>The stack grows down</strong>.  Positive offsets from RSP are the part that's safe from async modification by interrupts, i.e. \"reserved\".</p>\n\n<p>Negative offsets from RSP would be <a href=\"https://stackoverflow.com/questions/25787408/why-cant-kernel-code-use-a-red-zone/38043511#38043511\">the red zone, which you can't have on the kernel stack</a>.</p>\n\n<hr>\n\n<p><strong>Use <code>sub rsp, 0x100</code> or whatever to reserve enough space for your naked function's local variables.</strong>  Or better, write the whole entry point in asm instead of messing around with compiler-generated code for this.</p>\n\n<p><strong>Or better, just use <code>push</code> yourself, it's more compact (code-size) and just as efficient</strong>.  <code>push</code> works very well for saving registers on the stack; Linux's system call entry points use that.  (e.g. <a href=\"https://github.com/torvalds/linux/blob/e7d0c41ecc2e372a81741a30894f556afec24315/arch/x86/entry/entry_64.S#L158\" rel=\"nofollow noreferrer\">the entry point into an x86-64 kernel from <code>syscall</code> in 64-bit user-space</a> uses <code>push</code> to save all the registers, from Linux 4.12 (before the Spectre / Meltdown mitigation/workaround patches made the entry points more complicated).</p>\n\n<hr>\n\n<p>The reason it's weird / confusing is that you asked for a <code>naked</code> function (thus no function prologue to reserve stack space), but then you used local variables inside it anyway.  Otherwise the compiler would <code>sub rsp, 0x...</code> on its own to reserve enough space for the locals before accessing them.</p>\n\n<p>I think in some C / C++ compilers that support naked functions, that's not supported; only inline asm as the entire function body is allowed.  But IDK what Rust says is officially supported as far as weird tangos between inline asm and the compiler.  Like I said, you wouldn't have these problems if you wrote the entry point in pure asm.</p>\n\n<hr>\n\n<p>Your debug-mode version appears broken; you're storing relative to RBP, but RBP hasn't been set yet.  You asked for a <code>naked</code> function, so you'd need to <code>mov rbp, rsp</code> yourself (after loading RSP from <code>gs:0</code>), and then <code>sub rsp, 0x20</code> or whatever to reserve enough space in the stack frame for those negative offsets.</p>\n\n<p>I think your debug-mode version is storing relative to user-space's RBP, which will break horribly if user-space makes a system call with RBP pointing near anything that shouldn't be clobbered, and even more horribly if RBP holds a non-pointer value.</p>\n\n<p>(If you had just been using <code>mov rbp, rsp</code> or something, as per your comment that you left this part out, then you were using space below RSP, which isn't safe without a red-zone.)</p>\n"}], "owner": {"reputation": 280, "user_id": 2250903, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/35b6e1021e53f54702f69c88d676faca?s=128&d=identicon&r=PG", "display_name": "Kevin Boos", "link": "https://stackoverflow.com/users/2250903/kevin-boos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 0, "accepted_answer_id": 49125386, "answer_count": 1, "score": 1, "last_activity_date": 1520324919, "creation_date": 1520319999, "last_edit_date": 1520321465, "question_id": 49125151, "link": "https://stackoverflow.com/questions/49125151/code-generation-for-local-stack-variables-in-release-vs-debug-mode", "title": "Code generation for local stack variables in release vs. debug mode", "body": "<p>As part of my OS in Rust, I have the following system call entry point: </p>\n\n<pre><code>#[no_mangle]\n#[naked]\n#[inline(never)]\nunsafe extern \"C\" fn syscall_handler() {\n\n    // switch to the kernel stack dedicated for syscall handling, and save the user task's details\n    asm!(\"swapgs; \\\n          mov gs:[0x8],  rsp; \\\n          mov gs:[0x10], rcx; \\\n          mov gs:[0x18], r11; \\\n          mov rsp, gs:[0x0];\"\n          : : : \"memory\" : \"intel\", \"volatile\");\n\n\n    let (rax, rdi, rsi, rdx, r10, r8, r9): (u64, u64, u64, u64, u64, u64, u64); \n    asm!(\"\" : \"={rax}\"(rax), \"={rdi}\"(rdi), \"={rsi}\"(rsi), \"={rdx}\"(rdx), \"={r10}\"(r10), \"={r8}\"(r8), \"={r9}\"(r9)  : : \"memory\" : \"intel\", \"volatile\");\n    // do stuff with rax, rdi, rsi... \n</code></pre>\n\n<p>This works fine in debug mode, and in release mode (with debug info enabled) because it generates assembly code that stores the local stack variables like <code>rdi</code>, <code>rsi</code>, etc at negative offsets from the base pointer <code>rbp</code>. \nFor example, here's the generated code: </p>\n\n<pre><code>&lt;syscall_handler&gt;:\nswapgs \nmov    %rsp,%gs:0x8\nmov    %rcx,%gs:0x10\nmov    %r11,%gs:0x18\nmov    %gs:0x0,%rsp\nmov    %rax,-0x1f0(%rbp)\nmov    %rdi,-0x1e8(%rbp)\nmov    %rsi,-0x1e0(%rbp)\nmov    %rdx,-0x1d8(%rbp)\nmov    %r10,-0x1d0(%rbp)\nmov    %r8,-0x1c8(%rbp)\nmov    %r9,-0x1c0(%rbp)\nmovb   $0x4,-0x1b1(%rbp)\n</code></pre>\n\n<p>That code works fine, because my syscall handler runs with a stack pointer that points to the top of the current kernel stack (as usual), meaning that it's okay to use negative offsets from the stack pointer / base pointer (base pointer <code>rbp</code> is set before this based on the stack pointer value). </p>\n\n<p>When I build in release mode without debug info, it generates code that uses positive offsets from the stack pointer itself (<code>rsp</code>, not the base pointer) as locations for the local stack variables. This is really weird and causes a problem because the memory above the current stack pointer <code>rsp</code> is out of bounds. </p>\n\n<p>Here's the code generated in pure release mode without debug info:</p>\n\n<pre><code>&lt;syscall_handler&gt;:\nswapgs \nmov    %rsp,%gs:0x8\nmov    %rcx,%gs:0x10\nmov    %r11,%gs:0x18\nmov    %gs:0x0,%rsp\nmov    %rax,0x1c0(%rsp)\nmov    %rdi,0x1c8(%rsp)\n mov    %rsi,0x1d0(%rsp)\nmov    %rdx,0x1d8(%rsp)\nmov    %r10,0x1e0(%rsp)\nmov    %r8,0x1e8(%rsp)\nmov    %r9,0x1f0(%rsp)\n</code></pre>\n\n<p>Why is this code being generated, code that uses a positive offset from the stack pointer? That strikes me as very strange. </p>\n\n<p>Is there any way to avoid that or change the code generation somehow?</p>\n"}, {"tags": ["rust", "closures", "lifetime"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1520321453, "post_id": 49123513, "comment_id": 85255653, "body": "<a href=\"https://stackoverflow.com/a/36415828/2731452\">Relevant answer</a>. Do not assign closure to a variable. Just use it inline. <a href=\"https://github.com/rust-lang/rust/issues/41078\" rel=\"nofollow noreferrer\">Issue #41078</a>"}], "owner": {"reputation": 841, "user_id": 1718984, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/481cb1668e6353180bc8d08fb670a668?s=128&d=identicon&r=PG", "display_name": "ParkCheolu", "link": "https://stackoverflow.com/users/1718984/parkcheolu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 2, "closed_date": 1520344940, "answer_count": 0, "score": 3, "last_activity_date": 1520344532, "creation_date": 1520311321, "last_edit_date": 1520344532, "question_id": 49123513, "link": "https://stackoverflow.com/questions/49123513/how-could-i-define-and-call-a-closure-having-str-as-a-parameter-and-a-return-va", "closed_reason": "Duplicate", "title": "How could I define and call a closure having &amp;str as a parameter and a return value?", "body": "<p>I wrote this code to test closures:</p>\n\n<pre><code>fn main() {\n    let test_closure = |p| p;\n    let ct = ClosureTest { cls: test_closure };\n    let s = \"why\".to_string();\n\n    println!(\"{}\", (ct.cls)(&amp;s));\n}\n\nstruct ClosureTest&lt;T&gt;\nwhere\n    T: Fn(&amp;str) -&gt; &amp;str,\n{\n    cls: T,\n}\n</code></pre>\n\n<p>I got the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in closure arguments\n --&gt; src/main.rs:3:14\n  |\n2 |     let test_closure = |p| p;\n  |                        ----- found signature of `fn(_) -&gt; _`\n3 |     let ct = ClosureTest { cls: test_closure };\n  |              ^^^^^^^^^^^ expected signature of `for&lt;'r&gt; fn(&amp;'r str) -&gt; _`\n  |\n  = note: required by `ClosureTest`\n\nerror[E0271]: type mismatch resolving `for&lt;'r&gt; &lt;[closure@src/main.rs:2:24: 2:29] as std::ops::FnOnce&lt;(&amp;'r str,)&gt;&gt;::Output == &amp;'r str`\n --&gt; src/main.rs:3:14\n  |\n3 |     let ct = ClosureTest { cls: test_closure };\n  |              ^^^^^^^^^^^ expected bound lifetime parameter, found concrete lifetime\n  |\n  = note: required by `ClosureTest`\n</code></pre>\n\n<p>I have a basic understanding of closures and lifetimes from the official reference site, but I couldn't find out the meaning of the compiler error message above in the reference site, especially the part about the lifetime mentioned.</p>\n\n<p>It seems like the key to the error is defining a lifetime for the closure. How could I solve it?</p>\n"}, {"tags": ["rust", "protocol-buffers"], "answers": [{"tags": [], "owner": {"reputation": 14973, "user_id": 128186, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46c330659979615fe50c46f5f553b39f?s=128&d=identicon&r=PG", "display_name": "Arjan", "link": "https://stackoverflow.com/users/128186/arjan"}, "is_accepted": true, "score": 6, "last_activity_date": 1520283814, "creation_date": 1520283814, "answer_id": 49119426, "question_id": 49118073, "link": "https://stackoverflow.com/questions/49118073/what-do-i-pass-as-arguments-when-using-rust-protobuf/49119426#49119426", "title": "What do I pass as arguments when using rust-protobuf?", "body": "<p>If you look at the source code (<a href=\"https://github.com/stepancheg/rust-protobuf/blob/master/protoc-rust/src/lib.rs#L16\" rel=\"noreferrer\">source</a>) you will see this:</p>\n\n<pre><code>#[derive(Debug, Default)]\npub struct Args&lt;'a&gt; {\n    /// --lang_out= param\n    pub out_dir: &amp;'a str,\n    /// -I args\n    pub includes: &amp;'a [&amp;'a str],\n    /// List of .proto files to compile\n    pub input: &amp;'a [&amp;'a str],\n}\n</code></pre>\n\n<p>So the meaning of these arguments is:</p>\n\n<p><code>out_dir</code>: the location of generated files</p>\n\n<p><code>includes</code> (<code>-I</code>): location where protoc will search for imports (<a href=\"https://developers.google.com/protocol-buffers/docs/proto#importing-definitions\" rel=\"noreferrer\">documentation</a>)</p>\n\n<p><code>input</code>: list of <code>.proto</code> files to compile</p>\n"}], "owner": {"reputation": 5865, "user_id": 4415493, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/CidOV.jpg?s=128&g=1", "display_name": "JamesFaix", "link": "https://stackoverflow.com/users/4415493/jamesfaix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 427, "favorite_count": 0, "accepted_answer_id": 49119426, "answer_count": 1, "score": 3, "last_activity_date": 1520283814, "creation_date": 1520278282, "last_edit_date": 1520278903, "question_id": 49118073, "link": "https://stackoverflow.com/questions/49118073/what-do-i-pass-as-arguments-when-using-rust-protobuf", "title": "What do I pass as arguments when using rust-protobuf?", "body": "<p>I am trying to follow the <a href=\"https://github.com/stepancheg/rust-protobuf/tree/master/protoc-rust\" rel=\"nofollow noreferrer\">instructions</a> to generate Rust protobuffer files:</p>\n\n<blockquote>\n  <h1>API to generate .rs files</h1>\n  \n  <p>API to generate <code>.rs</code> files to be used e. g. <a href=\"https://github.com/stepancheg/rust-protobuf/blob/master/protobuf-test/build.rs\" rel=\"nofollow noreferrer\">from\n  build.rs</a>.</p>\n  \n  <p>Example code:</p>\n\n<pre><code>extern crate protoc_rust;\n\nprotoc_rust::run(protoc_rust::Args {\n    out_dir: \"src/protos\",\n    input: &amp;[\"protos/a.proto\", \"b.proto\"],\n    includes: &amp;[\"protos\"], }).expect(\"protoc\");\n</code></pre>\n  \n  <p>And in <code>Cargo.toml</code>:</p>\n\n<pre><code>[build-dependencies]\nprotoc-rust = \"1.4\"\n</code></pre>\n  \n  <p>Note this API requires <code>protoc</code> command present in <code>$PATH</code>. Although\n  <code>protoc-gen-rust</code> command is not needed.</p>\n</blockquote>\n\n<p>There is no explicit documentation for what is to be passed for these arguments.  The first one (<code>out_dir</code>) is pretty obviously the directory to generate files in.  <code>input</code> looks like a list of <code>.proto</code> files to use for generation.  In this example, the first has a directory, while the second doesn't.  Do I need to pass a directory for each, or just the first? <code>includes</code> is really puzzling me.  Is this a list of folders to look in?  If I add <code>protos</code> here, can I omit it for the elements of <code>input</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520278433, "post_id": 49117927, "comment_id": 85241514, "body": "Most closely a duplicate of <a href=\"https://stackoverflow.com/q/44912349/155423\">How can I avoid a ripple effect from changing a concrete struct to generic?</a>"}, {"owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520354589, "post_id": 49117927, "comment_id": 85276594, "body": "Thank you for the link, didn&#39;t stumble upon that one during my research. If I understand correctly, I got the various tradeoffs basically right. I can either live with the <code>T</code> parameter or <code>&#39;a</code> lifetime parameter or limit the closure to <code>&#39;static</code>. <code>Cacher&lt;T&gt;</code> is not convertible to <code>BCacher</code> in any way, and there are no further tricks to help cope with the situation. Is that right?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1520360589, "post_id": 49117927, "comment_id": 85280167, "body": "You can do what scala does when <a href=\"https://stackoverflow.com/a/19811263/2731452\">a closure captures local <code>var</code>s</a> to use local variable in a <code>&#39;static</code> closure. That is wrap the variable in <code>Rc</code> and move a clone of it into the closure. You don&#39;t need to do it for <code>Copy</code> types though. <code>let mut c = BCacher::new(move |a| a + x);</code> compiles."}, {"owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1520863514, "post_id": 49117927, "comment_id": 85477533, "body": "@red75prime Thanks for the suggestion, that could help in some cases."}], "owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 691, "favorite_count": 2, "answer_count": 0, "score": 6, "last_activity_date": 1520278339, "creation_date": 1520277636, "last_edit_date": 1520278339, "question_id": 49117927, "link": "https://stackoverflow.com/questions/49117927/structs-with-boxed-vs-unboxed-closures", "title": "structs with boxed vs. unboxed closures", "body": "<p>I'm still internalizing closures in Rust and how to best work with them, so this question might be somewhat vague, and there will perhaps be silly sub-questions. I'm basically looking for proper idioms and maybe even transforming the way I think about how to do some stuff in Rust.</p>\n\n<h1>Storing unboxed closure</h1>\n\n<p>The Rust book has an example simple <code>Cacher</code> in it's <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"noreferrer\">chapter on closures</a>:</p>\n\n<pre><code>struct Cacher&lt;T&gt;\nwhere\n    T: Fn(u32) -&gt; u32,\n{\n    calculation: T,\n    value: Option&lt;u32&gt;,\n}\n\nimpl&lt;T&gt; Cacher&lt;T&gt;\nwhere\n    T: Fn(u32) -&gt; u32,\n{\n    fn new(calculation: T) -&gt; Cacher&lt;T&gt; {\n        Cacher {\n            calculation,\n            value: None,\n        }\n    }\n\n    fn value(&amp;mut self, arg: u32) -&gt; u32 {\n        match self.value {\n            Some(v) =&gt; v,\n            None =&gt; {\n                let v = (self.calculation)(arg);\n                self.value = Some(v);\n                v\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>It is supposed to be used like this:</p>\n\n<pre><code>let mut c = Cacher::new(|a| a);\nlet v1 = c.value(1);\n</code></pre>\n\n<p>That is perfectly fine and useful, but what if I need to have this <code>Cacher</code> be a member of another struct, say (in the spirit of the Rust book chapter), a <code>WorkoutFactory</code>? Since <code>Cacher</code> is parameterized by the closure's type, I am forced to parameterize <code>WorkoutFactory</code> with the same closure type. </p>\n\n<p>Is my understanding correct? I guess so, the <code>Cacher</code> struct structure depends on the type <code>T</code> of the calculation, so the struct <code>WorkoutFactory</code> structure must depend on the type of <code>Cacher</code>. On one hand this feels like a natural, unavoidable and perfectly justified consequence of how closures work in Rust, on the other hand it means that </p>\n\n<ul>\n<li><code>WorkoutFactory</code> can be contained in another struct that is also forced to be parameterized by <code>T</code>, which can be contained in another struct, ... - the closure type spreads like plague. With perhaps other <code>T</code>'s coming from deep down the member hierarchy, the signature of the top-level struct can become monstrous.</li>\n<li>the fact that there is some caching involved in <code>WorkoutFactory</code> should be just an implementation detail, perhaps the caching was even added at version 2.0, but the type parameter is visible in the public interface of <code>WorkoutFactory</code> and needs to be accounted for. The seemingly implementation detail is now part of the interface, no good :(</li>\n</ul>\n\n<p>Is there some way to work around these problems without changing the signature of <code>Cacher</code>? How do others cope with this?</p>\n\n<h1>Storing boxed closure</h1>\n\n<p>If I want to get rid of the type parameters, I can <code>Box</code> the closure. I've come up with the following code:</p>\n\n<pre><code>struct BCacher {\n    calculation: Box&lt;Fn(u32) -&gt; u32&gt;,\n    value: Option&lt;u32&gt;,\n}\n\nimpl BCacher {\n    fn new&lt;T: Fn(u32) -&gt; u32 + 'static&gt;(calculation: T) -&gt; BCacher {\n        BCacher {\n            calculation: Box::new(calculation),\n            value: None,\n        }\n    }\n\n    fn value(&amp;mut self, arg: u32) -&gt; u32 {\n        match self.value {\n            Some(v) =&gt; v,\n            None =&gt; {\n                let v = (self.calculation)(arg);\n                self.value = Some(v);\n                v\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I can use it exactly like <code>Cacher</code>:</p>\n\n<pre><code>let mut c = BCacher::new(|a| a);\nlet v1 = c.value(1);\n</code></pre>\n\n<p>...<em>almost</em> :( The <code>'static'</code> annotation means I can't do this:</p>\n\n<pre><code>let x = 1;\nlet mut c = BCacher::new(|a| a + x);\n</code></pre>\n\n<p>because the closure may outlive <code>x</code>. That is unfortunate, something possible with the non-boxed version is no longer possible with the boxed version.</p>\n\n<p>Furthermore, this version is less efficient, it is necessary to dereference the <code>Box</code> (is that correct?), and RAM access is slow. The difference will most probably be negligible in most cases, but still..</p>\n\n<p>I could address the first issue with lifetime annotation:</p>\n\n<pre><code>struct BLCacher&lt;'a&gt; {\n    calculation: Box&lt;Fn(u32) -&gt; u32 + 'a&gt;,\n    value: Option&lt;u32&gt;,\n}\n</code></pre>\n\n<p>but now I'm back to <code>Cacher</code> with type parameters and all the unpleasant consequences of that.</p>\n\n<h1>The right to choose</h1>\n\n<p>This seems like an unfortunate situation. I have two approaches to storing closure in a struct, and each has it's own set of problems. Let's say I'm willing to live with that, and as the author of the awesome fictional <code>Cacher</code> crate, I want to present the users with <em>both</em> implementations of <code>Cacher</code>, the unboxed <code>Cacher</code> and the boxed <code>BCacher</code>. But I don't want to write the implementation twice. What would be the best way - if there's any at all - to use an existing <code>Cacher</code> implementation to implement <code>BCacher</code>?</p>\n\n<p>On a related note (maybe it is even the same question), let's assume I have a </p>\n\n<pre><code>struct WorkoutFactory&lt;T&gt;\nwhere\n    T: Fn(u32) -&gt; u32,\n{\n    cacher: Cacher&lt;T&gt;,\n}\n</code></pre>\n\n<p>Is there a way to implement <code>GymFactory</code> without type parameters that would contain - for private purposes - <code>WorkoutFactory</code> with type parameters, probably stored in a <code>Box</code>?</p>\n\n<h1>Summary</h1>\n\n<p>A long question, sorry for that. Coming from Scala, working with closures is a LOT less straightforward in Rust. I hope I've explained the struggles I've not yet found satisfactory answers to. </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1520273351, "creation_date": 1520273351, "answer_id": 49116847, "question_id": 49116725, "link": "https://stackoverflow.com/questions/49116725/no-prot-read-in-sysmman-error-while-using-nix-mmap/49116847#49116847", "title": "no `PROT_READ` in `sys::mman` error while using nix mmap", "body": "<p>The documentation indicates that these are <em>associated constants</em> underneath <a href=\"https://docs.rs/nix/0.10.0/nix/sys/mman/struct.ProtFlags.html\" rel=\"nofollow noreferrer\"><code>ProtFlags</code></a> and <a href=\"https://docs.rs/nix/0.10.0/nix/sys/mman/struct.MapFlags.html\" rel=\"nofollow noreferrer\"><code>MapFlags</code></a>, not constants in the <code>mman</code> module.</p>\n\n<pre><code>extern crate nix;\n\nuse nix::sys::mman::{MapFlags, ProtFlags};\n\nfn main() {\n    ProtFlags::PROT_READ;\n    ProtFlags::PROT_WRITE;\n    MapFlags::MAP_PRIVATE;\n    MapFlags::MAP_ANON;\n    MapFlags::MAP_NORESERVE;\n}\n</code></pre>\n"}], "owner": {"reputation": 221, "user_id": 7081500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8898cc3ce116bc692aa2004b0f28601f?s=128&d=identicon&r=PG&f=1", "display_name": "aupreti", "link": "https://stackoverflow.com/users/7081500/aupreti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 49116847, "answer_count": 1, "score": 2, "last_activity_date": 1520273545, "creation_date": 1520272876, "last_edit_date": 1520273545, "question_id": 49116725, "link": "https://stackoverflow.com/questions/49116725/no-prot-read-in-sysmman-error-while-using-nix-mmap", "title": "no `PROT_READ` in `sys::mman` error while using nix mmap", "body": "<p>I have the following two lines in my code:</p>\n\n<pre><code>use nix::sys::mman;\nuse mman::{PROT_READ, PROT_WRITE, MAP_PRIVATE, MAP_ANON, MAP_NORESERVE};\n</code></pre>\n\n<p>When I build my code, I get <code>no PROT_READ in sys::mman</code> error and similar errors for the other flags. How should I use <code>MmapProt</code> and <code>MmapFlag</code>? </p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1520697658, "post_id": 49205965, "comment_id": 85426562, "body": "What is the <code>@</code> used for? I cannot find it in the documentation"}, {"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1520733071, "post_id": 49205965, "comment_id": 85435807, "body": "It&#39;s an arbitrary dummy token to force the inner repetition repeat 0 times. I chose <code>@</code> just because it&#39;s unlikely used."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1520746820, "post_id": 49205965, "comment_id": 85438075, "body": "Specifically, it&#39;s a <i>common</i> dummy token used in macros for &quot;internal&quot; implementation details."}], "tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 1, "last_activity_date": 1520662322, "creation_date": 1520662322, "answer_id": 49205965, "question_id": 49116265, "link": "https://stackoverflow.com/questions/49116265/how-to-name-an-arbitrary-sequence-of-things-in-a-macro/49205965#49205965", "title": "How to name an arbitrary sequence of things in a macro?", "body": "<p>One trick would be to insert a repetition with a dummy token.</p>\n\n<pre><code>#![feature(macro_at_most_once_rep)]\n\nmacro_rules! foo {\n    (\n        pub fn $name:ident (\n            &amp; $( $(@$m:tt)* mut )? self\n        )\n    ) =&gt; (\n        pub fn $name (\n            &amp; $( $(@$m)* mut )? self\n        ) {}\n    )\n}\n\nstruct Foo;\n\nimpl Foo {\n    foo!( pub fn bar(&amp;mut self) );\n    foo!( pub fn baz(&amp;self) );\n}\n\nfn main() {\n    (&amp;mut Foo).bar();\n    (&amp;mut Foo).baz();\n    // (&amp;Foo).bar(); //~ERROR cannot borrow\n    (&amp;Foo).baz();\n}\n</code></pre>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 1, "accepted_answer_id": 49205965, "answer_count": 1, "score": 6, "last_activity_date": 1520662322, "creation_date": 1520271110, "last_edit_date": 1520272402, "question_id": 49116265, "link": "https://stackoverflow.com/questions/49116265/how-to-name-an-arbitrary-sequence-of-things-in-a-macro", "title": "How to name an arbitrary sequence of things in a macro?", "body": "<p>I am trying to use <code>?</code> in a macro, matching an arbitrary keyword:</p>\n\n<pre><code>#![feature(macro_at_most_once_rep)]\n\nmacro_rules! foo {\n    (\n        pub fn $name:ident (\n            &amp; $m : $( mut )? self\n        )\n    ) =&gt; (\n        pub fn $name (\n            &amp; $m self\n        ) {}\n    )\n}\n\nstruct Foo;\n\nimpl Foo {\n    foo!( pub fn bar(&amp;mut self) );\n    foo!( pub fn baz(&amp;self) );\n}\n\nfn main() {}\n</code></pre>\n\n<p>I tried varied syntax, but they all failed. How to do this?</p>\n"}, {"tags": ["vector", "enums", "rust", "find"], "answers": [{"comments": [{"owner": {"reputation": 128, "user_id": 4012426, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000105441681/picture?type=large", "display_name": "Hutch Moore", "link": "https://stackoverflow.com/users/4012426/hutch-moore"}, "edited": false, "score": 1, "creation_date": 1588013919, "post_id": 49115022, "comment_id": 108731613, "body": "Instead of <code>filter_map(...).next()</code>, you can also use <code>find_map(...)</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1588014645, "last_edit_date": 1588014645, "creation_date": 1520267120, "answer_id": 49115022, "question_id": 49114607, "link": "https://stackoverflow.com/questions/49114607/find-the-first-specific-enum-variant-in-an-iterator-and-transform-it/49115022#49115022", "title": "Find the first specific enum variant in an iterator and transform it", "body": "<p>Since Rust 1.30, you can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find_map\" rel=\"nofollow noreferrer\"><code>Iterator::find_map</code></a>:</p>\n\n<pre><code>let found: Option&lt;String&gt; = data.iter().find_map(|d| match d {\n    MyData::DataD { data, .. } =&gt; Some(data.to_owned()),\n    _ =&gt; None,\n});\n</code></pre>\n\n<p>Before then, you can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter_map\" rel=\"nofollow noreferrer\"><code>Iterator::filter_map</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><code>Iterator::next</code></a>:</p>\n\n<pre><code>let found: Option&lt;String&gt; = data\n    .iter()\n    .filter_map(|d| match d {\n        MyData::DataD { data, .. } =&gt; Some(data.to_owned()),\n        _ =&gt; None,\n    })\n    .next();\n</code></pre>\n\n<p>I don't really like having big <code>match</code> statements in my iterator chains, so I'd normally make a method on <code>MyData</code> to use instead:</p>\n\n<pre><code>enum MyData {\n    DataA(String),\n    DataB(u64),\n    DataC(bool),\n    DataD { data: String, val: u32 },\n}\n\nimpl MyData {\n    fn as_data_d_data(&amp;self) -&gt; Option&lt;&amp;str&gt; {\n        match self {\n            MyData::DataD { data, .. } =&gt; Some(data),\n            _ =&gt; None,\n        }\n    }\n}\n\nfn main() {\n    let data = vec![\n        MyData::DataB(42),\n        MyData::DataD {\n            data: \"meaning of life\".to_owned(),\n            val: 42,\n        },\n        MyData::DataC(false),\n    ];\n\n    let found: Option&lt;String&gt; = data\n        .iter()\n        .find_map(MyData::as_data_d_data)\n        .map(str::to_owned);\n}\n</code></pre>\n\n<p>In fact, a lot of my enums have this kind of pattern:</p>\n\n<pre><code>enum MyData {\n    DataA(String),\n    DataB(u64),\n    DataC(bool),\n    DataD(D), // made into a struct\n}\n\nimpl MyData {\n    fn is_a(&amp;self) -&gt; bool {\n        match *self {\n            MyData::DataA(..) =&gt; true,\n            _ =&gt; false,\n        }\n    }\n\n    fn as_a(&amp;self) -&gt; Option&lt;&amp;String&gt; {\n        match self {\n            MyData::DataA(x) =&gt; Some(x),\n            _ =&gt; None,\n        }\n    }\n\n    fn into_a(self) -&gt; Option&lt;String&gt; {\n        match self {\n            MyData::DataA(x) =&gt; Some(x),\n            _ =&gt; None,\n        }\n    }\n\n    // Repeat for all variants\n}\n</code></pre>\n\n<p>I've even created a crate to automatically derive these functions. I've never published it because I'm pretty sure something similar already exists and I just haven't found it...</p>\n"}], "owner": {"reputation": 147, "user_id": 1711622, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21579ac4052143e36076718569f91c5f?s=128&d=identicon&r=PG", "display_name": "kronolynx", "link": "https://stackoverflow.com/users/1711622/kronolynx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1134, "favorite_count": 0, "accepted_answer_id": 49115022, "answer_count": 1, "score": 5, "last_activity_date": 1588014645, "creation_date": 1520265840, "last_edit_date": 1588014343, "question_id": 49114607, "link": "https://stackoverflow.com/questions/49114607/find-the-first-specific-enum-variant-in-an-iterator-and-transform-it", "title": "Find the first specific enum variant in an iterator and transform it", "body": "<p>I have an enum with different variants and I want to find the first variant that matches then transform it by either returning the variant value or mapping it to something else. </p>\n\n<p>In Scala, I'd use case classes to do something like: </p>\n\n<pre class=\"lang-scala prettyprint-override\"><code>data.collectFirst{ case d: DataD =&gt; d.data }\n</code></pre>\n\n<p>In Rust, I have to pattern match twice to achieve the same result. Is there a way to make it less verbose?</p>\n\n<pre><code>enum MyData {\n    DataA(String),\n    DataB(u64),\n    DataC(bool),\n    DataD { data: String, val: u32 },\n}\n\nfn main() {\n    // test data\n    let data = vec![\n        MyData::DataB(42),\n        MyData::DataD {\n            data: \"meaning of life\".to_owned(),\n            val: 42,\n        },\n        MyData::DataC(false),\n    ];\n\n    // find first one that matches and map it\n    let found: Option&lt;String&gt; = data\n        .iter()\n        .find(|d| match **d {\n            MyData::DataD { .. } =&gt; true,\n            _ =&gt; false,\n        })\n        .and_then(|d| match *d {\n            MyData::DataD { ref data, .. } =&gt; Some(data.to_owned()),\n            _ =&gt; None,\n        });\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 497, "user_id": 9383887, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/bd4404f5ac586a9c03e32eb62e55891a?s=128&d=identicon&r=PG&f=1", "display_name": "jerry", "link": "https://stackoverflow.com/users/9383887/jerry"}, "edited": false, "score": 0, "creation_date": 1520304724, "post_id": 49113656, "comment_id": 85250725, "body": "i&#39;m using diesel, why isn&#39;t &quot;derive&quot; included with it?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 497, "user_id": 9383887, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/bd4404f5ac586a9c03e32eb62e55891a?s=128&d=identicon&r=PG&f=1", "display_name": "jerry", "link": "https://stackoverflow.com/users/9383887/jerry"}, "edited": false, "score": 0, "creation_date": 1520304980, "post_id": 49113656, "comment_id": 85250789, "body": "@jerry Your question doesn&#39;t make any sense to me. <code>derive</code> is a special syntax understood by the compiler, no crate &quot;includes&quot; it. Crates define their own <i>derive macros</i> that are unique to each."}, {"owner": {"reputation": 1025, "user_id": 6119618, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/105e066892369cf8b3f1c882bbefa862?s=128&d=identicon&r=PG&f=1", "display_name": "Herrgott", "link": "https://stackoverflow.com/users/6119618/herrgott"}, "edited": false, "score": 4, "creation_date": 1562559400, "post_id": 49113656, "comment_id": 100397753, "body": "Thanks for mentioning <code>features = [&quot;derive&quot;]</code>. It saved my time"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 33, "last_activity_date": 1577706375, "last_edit_date": 1577706375, "creation_date": 1520263075, "answer_id": 49113656, "question_id": 49113368, "link": "https://stackoverflow.com/questions/49113368/how-do-i-fix-cannot-find-derive-macro-in-this-scope/49113656#49113656", "title": "How do I fix &quot;cannot find derive macro in this scope&quot;?", "body": "<p>The compiler has a <a href=\"https://stackoverflow.com/q/32626316/155423\">small set of built-in derive macros</a>. For any others, you have to import the custom <code>derive</code>s before they can be used. </p>\n\n<p>Before Rust 1.30, you need to use <code>#[macro_use]</code> on the <code>extern crate</code> line of the crate providing the macros. With Rust 1.30 and up, you can <code>use</code> them instead.</p>\n\n<p>In this case, you need to import <code>FromPrimitive</code> from the <code>num_derive</code> crate:</p>\n\n<p><strong>After Rust 1.30</strong></p>\n\n<pre><code>use num_derive::FromPrimitive; // 0.2.4 (the derive)\nuse num_traits::FromPrimitive; // 0.2.6 (the trait)\n</code></pre>\n\n<p><strong>Before Rust 1.30</strong></p>\n\n<pre><code>#[macro_use]\nextern crate num_derive; // 0.2.4\nextern crate num_traits; // 0.2.6\n\nuse num_traits::FromPrimitive;\n</code></pre>\n\n<p><strong>Usage</strong></p>\n\n<pre><code>#[derive(Debug, FromPrimitive)]\npub enum MyEnum {\n    Var1 = 1,\n    Var2,\n}\n\nfn main() {\n    println!(\"{:?}\", MyEnum::from_u8(2));\n}\n</code></pre>\n\n<p>Each project has their own crate containing their own derive macros. A small sample:</p>\n\n<ul>\n<li>Num (e.g. <code>FromPrimitive</code>) => <code>num_derive</code></li>\n<li>Serde (e.g. <code>Serialize</code>, <code>Deserialize</code>) => <code>serde_derive</code></li>\n<li>Diesel (e.g. <code>Insertable</code>, <code>Queryable</code>) => <code>diesel</code> (it's actually the same as the regular crate!)</li>\n</ul>\n\n<p>Some crates re-export their derive macros. For example, you can use the <a href=\"https://serde.rs/feature-flags.html#-feature-derive\" rel=\"noreferrer\"><code>derive</code> feature of Serde</a> and then import it from the <code>serde</code> crate directly:</p>\n\n<pre><code>[dependencies]\nserde = { version = \"1.0\", features = [\"derive\"] }\n</code></pre>\n\n<pre><code>use serde::{Serialize, Deserialize}; // imports both the trait and the derive macro\n</code></pre>\n\n<hr>\n\n<p><code>FromPrimitive</code> was actually part of the standard library <em>before</em> Rust 1.0. It wasn't useful enough to continue existing in the standard library, so it was moved to the external num crate. Some very old references might not have been updated for this change.</p>\n\n<p>For more information about converting C-like enums to and from integers, see:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28028854/155423\">How do I match enum values with an integer?</a></li>\n<li><a href=\"https://stackoverflow.com/q/33354058/155423\">How do I get the integer value of an enum?</a></li>\n</ul>\n"}], "owner": {"reputation": 497, "user_id": 9383887, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/bd4404f5ac586a9c03e32eb62e55891a?s=128&d=identicon&r=PG&f=1", "display_name": "jerry", "link": "https://stackoverflow.com/users/9383887/jerry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 16315, "favorite_count": 3, "answer_count": 1, "score": 24, "last_activity_date": 1577706375, "creation_date": 1520262209, "last_edit_date": 1520343952, "question_id": 49113368, "link": "https://stackoverflow.com/questions/49113368/how-do-i-fix-cannot-find-derive-macro-in-this-scope", "title": "How do I fix &quot;cannot find derive macro in this scope&quot;?", "body": "<p>I have this:</p>\n\n<pre><code>#[derive(FromPrimitive)]\npub enum MyEnum {\n    Var1 = 1,\n    Var2\n}\n</code></pre>\n\n<p>And an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot find derive macro `FromPrimitive` in this scope                                                                                                 \n   |                                                                                                                                                          \n38 | #[derive(FromPrimitive)]                                                                                                                                 \n   |          ^^^^^^^^^^^^^   \n</code></pre>\n\n<p>Why do I get this? How do I fix it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520258294, "post_id": 49111668, "comment_id": 85229153, "body": "Why do you want to know the amount of data in the buffer?"}, {"owner": {"reputation": 705, "user_id": 3292304, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2ce151acbd28ae71c472b961004b0a9f?s=128&d=identicon&r=PG", "display_name": "Razakhel", "link": "https://stackoverflow.com/users/3292304/razakhel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520260768, "post_id": 49111668, "comment_id": 85230714, "body": "I actually had troubles flushing it, I just wondered if it was possible to check what is inside."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1520262141, "post_id": 49111995, "comment_id": 85231598, "body": "So, logically, you could <code>format!(&quot;{:?}&quot;, b)</code> and parse the result... /terrible-ideas"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1520257933, "creation_date": 1520257933, "answer_id": 49111995, "question_id": 49111668, "link": "https://stackoverflow.com/questions/49111668/is-there-a-way-to-get-a-bufwriters-buffer-length/49111995#49111995", "title": "Is there a way to get a BufWriter&#39;s buffer length?", "body": "<p>You cannot (check <a href=\"https://github.com/rust-lang/rust/blob/1.24.1/src/libstd/io/buffered.rs#L386-L557\" rel=\"noreferrer\">the source to be sure</a>). The inner <code>buf</code> is not exposed in any fashion, presumably to allow for the implementation to change without breaking compatibility.</p>\n\n<hr>\n\n<p>Well, you <em>can</em>, but it's terrible and hacky. You can print the <code>BufWriter</code> with the debugging formatter:</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::io::{self, BufWriter};\n\nfn main() {\n    let mut b = BufWriter::new(io::sink());\n    b.write_all(b\"hello, world\").expect(\"Unable to write\");\n    println!(\"{:?}\", b)\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>BufWriter { writer: Sink { .. }, buffer: 12/8192 }\n</code></pre>\n"}], "owner": {"reputation": 705, "user_id": 3292304, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2ce151acbd28ae71c472b961004b0a9f?s=128&d=identicon&r=PG", "display_name": "Razakhel", "link": "https://stackoverflow.com/users/3292304/razakhel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "accepted_answer_id": 49111995, "answer_count": 1, "score": 9, "last_activity_date": 1520257933, "creation_date": 1520256862, "last_edit_date": 1520257603, "question_id": 49111668, "link": "https://stackoverflow.com/questions/49111668/is-there-a-way-to-get-a-bufwriters-buffer-length", "title": "Is there a way to get a BufWriter&#39;s buffer length?", "body": "<p>A <code>BufWriter</code> has a private field <code>buf</code> which is inaccessible. How can I know the size of the data currently contained in it?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1520247067, "post_id": 49106852, "comment_id": 85222244, "body": "What about Qux? Is that cloneable?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1520247107, "post_id": 49106852, "comment_id": 85222281, "body": "The easiest way would be fix that in the upstream repo, if possible :)"}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1520248054, "post_id": 49106852, "comment_id": 85222941, "body": "@hellow - Qux may or may not be cloneable, for the purposes of the example I didn&#39;t think it was relevant. The primary point is that the item extracted from <code>Foo::A</code> when the interior value is <code>Ok</code> <i>does</i> <code>impl Clone</code>, but <code>Foo</code> itself can&#39;t be <code>Clone</code>d."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1520263600, "post_id": 49106852, "comment_id": 85232547, "body": "Please provide a <a href=\"https://stackoverflow.com/help/mcve\">minimal, complete and verifiable example</a>. Your code contains a couple of errors which are not related to your question."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1520263754, "post_id": 49106852, "comment_id": 85232660, "body": "@red75prime Lack of sleep must have gotten to me. Tried to cut down my project as best I could. What are the errors in question?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1520263865, "post_id": 49106852, "comment_id": 85232738, "body": "<code>self.map.contains_key(&amp;b)</code> expects <code>&amp;Xyzzy</code>, but you pass <code>&amp;&amp;Bar</code>. Likewise <code>self.map.insert(new_item, Foo::C)</code> and <code>self.do_something(new_item)</code>"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1520264162, "post_id": 49106852, "comment_id": 85232973, "body": "Borrows in the current stable version of Rust are scope-based, so you cannot &quot;unborrow&quot; <code>self</code> in <code>if let</code> scope. You need to mutate <code>self</code> outside of <code>if let</code> scope. Or use &quot;non-lexical borrows&quot; feature (<code>#![feature(nll)]</code>) of nightly compiler."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1520264847, "post_id": 49106852, "comment_id": 85233460, "body": "@red75prime - I <i>think</i> it should be logically sound now, assuming that <code>Bar</code> is cloneable but <code>Foo</code> isn&#39;t."}], "answers": [{"comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1520316133, "post_id": 49124257, "comment_id": 85253559, "body": "This is more or less the answer I expected, though I do have one question for the purposes of understanding: In the NLL example, would compilation fail if I did something else with <code>bar_vec</code> after the <code>for</code> loops (because that extends the requirement of the borrow)?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1520316817, "post_id": 49124257, "comment_id": 85253790, "body": "Yes, borrow lasts until the last use of borrower."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 2, "last_activity_date": 1520315823, "creation_date": 1520315823, "answer_id": 49124257, "question_id": 49106852, "link": "https://stackoverflow.com/questions/49106852/clone-a-cloneable-element-of-non-cloneable-object-in-pattern-match/49124257#49124257", "title": "Clone a cloneable element of non-Cloneable object in pattern match", "body": "<p>You can use non-lexical lifetimes, if it is acceptable to you to use nightly compiler.</p>\n\n<pre><code>#![feature(nll)]\n\nuse std::collections::BTreeMap;\n\n#[derive(Clone, PartialEq, Eq, PartialOrd, Ord)]\nstruct Bar;\n\n// I cannot impl Clone on Baz\nstruct Baz;\n\nenum Foo {\n    A(Result&lt;Vec&lt;Bar&gt;, Baz&gt;),\n    B(Bar),\n    C,\n}\n\nstruct Waldo {\n    map: BTreeMap&lt;Bar, Foo&gt;,\n    // Other variables...\n}\n\nimpl Waldo {\n    fn do_something(&amp;mut self, data: Bar) {\n        self.analyze(data.clone());\n        if let Some(&amp;Foo::A(Ok(ref bar_vec))) = self.map.get(&amp;data) {\n            let unique = bar_vec\n                .iter()\n                .filter(|b| !self.map.contains_key(b))\n                .cloned() \n                .collect::&lt;Vec&lt;Bar&gt;&gt;();\n\n            for new_item in unique.iter().cloned() {\n                self.map.insert(new_item, Foo::C); \n            }\n            for new_item in unique.into_iter() {\n                self.do_something(new_item);\n            }\n        }\n    }\n\n    fn analyze(&amp;mut self, data: Bar) {\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p>In the current stable Rust you have to mutate <code>self.map</code> outside of the <code>if let</code> scope as borrows are lexical and you can't \"unborrow\" a variable within the scope.</p>\n\n<pre><code>    fn do_something(&amp;mut self, data: Bar) {\n        self.analyze(data.clone());\n        // This allows to access `unique` outside the scope\n        // where `self.map` is borrowed\n        let unique;\n        if let Some(&amp;Foo::A(Ok(ref bar_vec))) = self.map.get(&amp;data) {\n            unique = bar_vec\n                .iter()\n                .filter(|b| !self.map.contains_key(b)) // &amp;Bar, sans those in map\n                .cloned() \n                .collect::&lt;Vec&lt;Bar&gt;&gt;();\n        } else {\n            // early return prevents the use of uninitialized `unique`\n            return;\n        }\n        for new_item in unique.iter().cloned() {\n            self.map.insert(new_item, Foo::C); \n        }\n        for new_item in unique.into_iter() {\n            self.do_something(new_item);\n        }\n    }\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=ac31f6f18b2cbc4cb15e9e4c8736822c&amp;version=stable\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "accepted_answer_id": 49124257, "answer_count": 1, "score": 2, "last_activity_date": 1520315823, "creation_date": 1520241201, "last_edit_date": 1520264754, "question_id": 49106852, "link": "https://stackoverflow.com/questions/49106852/clone-a-cloneable-element-of-non-cloneable-object-in-pattern-match", "title": "Clone a cloneable element of non-Cloneable object in pattern match", "body": "<p>I am working on a project which uses a <code>BTreeMap</code> with a custom <code>enum</code> for values. This <code>enum</code> cannot <code>#[derive(Clone)]</code>, because certain variants can include a value which is not <code>Clone</code>able. A rough outline of my project follows:</p>\n\n<pre><code>enum Foo {\n    // Bar has impl Clone, Baz does not.\n    // Both Bar and Baz are from external crates,\n    // so I cannot impl Clone on Baz.\n    A(Result&lt;Vec&lt;Bar&gt;, Baz&gt;),\n    B(Bar, Qux),\n    C,\n}\n\nstruct Waldo {\n    map: BTreeMap&lt;Bar, Foo&gt;,\n    // Other variables...\n}\n</code></pre>\n\n<p>Defining a method on my <code>Waldo</code>-analogue, I have encountered a situation where, inside of a recursive function, I am using <code>if let</code> to pattern-match on the result of <code>foo_map.get(&amp;key)</code>; inside this <code>if</code> block, I am adding values to <code>map</code>. When later iterations of the recursive function see a value in <code>map</code>, they know they can ignore it. Something like this:</p>\n\n<pre><code>impl Waldo {\n    fn do_something(&amp;mut self, data: Bar) {\n        // analyze puts a Foo into map with `data` as a key.\n        // It can't return the value AND put it into the map, because\n        // Foo would need to be cloneable. Instead...\n        self.analyze(data);\n        // I let `do_something_else` put the value in the map,\n        // and then grab the value *from* the map.\n        if let Some(&amp;Foo::A(Ok(ref bar_vec))) = self.map.get(&amp;data) {\n            // bar_vec is cloneable, but even if I clone it,\n            // `self.map` is still borrowed.\n\n            // 'unique' is filtered so that it only contains\n            // elements of bar_vec that aren't a key in `self.map`\n            // 'unique' has no dependency on self.map,\n            // because the iterator clones all elements\n            // before collecting.\n            let unique = bar_vec\n                .iter() // &amp;Bar\n                .filter(|b| !self.map.contains_key(b)) // &amp;Bar, sans those in map\n                .cloned() // Bar\n                .collect&lt;Vec&lt;Bar&gt;&gt;()\n\n            // Give the newly encountered values a placeholder\n            // so that recursions of the function will ignore them\n            for new_item in unique.iter().cloned() {\n                self.map.insert(new_item, Foo::C); // fails\n            }\n            // Once the items are inserted with placeholder values,\n            // recurse the function to get their real values\n            for new_item in unique.into_iter() {\n                self.do_something(new_item);\n            }\n    }\n\n    fn analyze(&amp;mut self, data: Xyzzy) {\n        // ...\n    }\n}\n</code></pre>\n\n<p>Ideally, I would like to be able to create a clone of <code>bar_vec</code> before I even leave the <code>if let</code> clause, which would mean that <code>self.map</code> is no longer borrowed. Is this possible, or will I have to refactor how my code works? I have already considered the option of making <code>analyze</code> return the <code>Foo</code> enum value rather than add it to the map directly, and have <code>do_something</code> match against the return value and add it to the map at the end, but I felt I may as well post the question and see if something less painful was possible.</p>\n"}, {"tags": ["rust", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 111, "user_id": 7520158, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e80a6f8085c0270eedc79bf1c00dc09a?s=128&d=identicon&r=PG", "display_name": "Jack Lund", "link": "https://stackoverflow.com/users/7520158/jack-lund"}, "is_accepted": false, "score": 1, "last_activity_date": 1520218116, "creation_date": 1520218116, "answer_id": 49102794, "question_id": 49101422, "link": "https://stackoverflow.com/questions/49101422/how-do-i-use-a-hyper-client-within-a-mpsc-receiver/49102794#49102794", "title": "How do I use a Hyper client within a MPSC receiver?", "body": "<p>Found the answer, after much digging.</p>\n\n<p>First of all, I need to use <code>map</code> rather than <code>for_each</code>, because <code>for_each</code> expects nothing to be returned. Secondly, I need to wrap my return value in <code>futures::future::ok</code>, so my updated code looks like this:</p>\n\n<pre><code>let work = receiver.map(|queue_data| {\n    let message = match Message::parse(&amp;queue_data.data, &amp;queue_data.headers) {\n        Ok(message) =&gt; message,\n        Err(error) =&gt; return err(Box::new(error) as Box&lt;Error&gt;),\n    };\n\n    let uri = match Uri::from_str(&amp;message.body.destination) {\n        Ok(uri) =&gt; uri,\n        Err(error) =&gt; return err(Box::new(error) as Box&lt;Error&gt;),\n    };\n\n    let mut request: Request = Request::new(Method::Post, uri);\n    request.headers_mut().set(ContentType::json());\n    request.headers_mut().set(ContentLength(queue_data.data.len() as u64));\n    request.set_body(queue_data.data.clone().into_bytes());\n\n    ok(client.request(request))\n});\n</code></pre>\n\n<p>I do have to say, though, that that error message isn't the clearest...</p>\n"}], "owner": {"reputation": 111, "user_id": 7520158, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e80a6f8085c0270eedc79bf1c00dc09a?s=128&d=identicon&r=PG", "display_name": "Jack Lund", "link": "https://stackoverflow.com/users/7520158/jack-lund"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1520218116, "creation_date": 1520204399, "last_edit_date": 1520205931, "question_id": 49101422, "link": "https://stackoverflow.com/questions/49101422/how-do-i-use-a-hyper-client-within-a-mpsc-receiver", "title": "How do I use a Hyper client within a MPSC receiver?", "body": "<p>I've got an application which pulls items off a queue in a callback. The callback is in a separate thread, so I can't do any of this directly in the callback. The items on the queue include a URL and a message body to be POSTed to the URL. Based on the response, I either remove the item from the queue or re-enqueue it.</p>\n\n<p>Here's what I've got:</p>\n\n<pre><code>let (mut sender, receiver) = mpsc::channel(1000);\nlet mut core = Core::new().expect(\"Error creating core\");\nlet client = Client::new(&amp;core.handle());\n\n// Consumer callback closure\nlet consumer = move |_: &amp;mut Channel, deliver: basic::Deliver, headers: basic::BasicProperties, data: Vec&lt;u8&gt;|\n{\n     let body = match String::from_utf8(data) {\n        Ok(body) =&gt; body,\n        Err(error) =&gt; {\n            error!(\"Error parsing message body as UTF8: {}\", error);\n            return;\n        }\n    };\n    if let Err(error) = sender.try_send(QueueData {\n        deliver: deliver,\n        headers: headers,\n        data: body,\n    }) {\n        error!(\"Error sending queue data over channel: {}\", error);\n    }\n};\n\nlet work = receiver.for_each(|queue_data| {\n    let message = match Message::parse(&amp;queue_data.data, &amp;queue_data.headers) {\n        Ok(message) =&gt; message,\n        Err(error) =&gt; return err(Box::new(error) as Box&lt;Error&gt;),\n    };\n\n    let uri = match Uri::from_str(&amp;message.body.destination) {\n        Ok(uri) =&gt; uri,\n        Err(error) =&gt; return err(Box::new(error) as Box&lt;Error&gt;),\n    };\n\n    let mut request: Request = Request::new(Method::Post, uri);\n    request.headers_mut().set(ContentType::json());\n    request.headers_mut().set(ContentLength(queue_data.data.len() as u64));\n    request.set_body(queue_data.data.clone().into_bytes());\n\n    client.request(request)\n});\n</code></pre>\n\n<p>which gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;futures::FutureResult&lt;(), std::boxed::Box&lt;std::error::Error&gt;&gt; as futures::IntoFuture&gt;::Error == ()`\n   --&gt; src/main.rs:116:29\n    |\n116 |         let work = receiver.for_each(|queue_data| {\n    |                             ^^^^^^^^ expected struct `std::boxed::Box`, found ()\n    |\n    = note: expected type `std::boxed::Box&lt;std::error::Error&gt;`\n               found type `()`\n\nerror[E0308]: mismatched types\n   --&gt; src/main.rs:132:13\n    |\n132 |             client.request(request)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ expected struct `futures::FutureResult`, found struct `hyper::client::FutureResponse`\n    |\n    = note: expected type `futures::FutureResult&lt;(), std::boxed::Box&lt;std::error::Error&gt;&gt;`\n               found type `hyper::client::FutureResponse`\n</code></pre>\n\n<p>which makes sense, but I can't find any sort of way to convert a <code>FutureResponse</code> to a <code>FutureResult</code>. Am I missing something here? Can I not use a Hyper client within a future like this?</p>\n"}, {"tags": ["cryptography", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1520204414, "post_id": 49101377, "comment_id": 85208075, "body": "Why would you expect the key to be proper UTF-8?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1520205192, "post_id": 49101377, "comment_id": 85208228, "body": "@mcarton I&#39;m guessing that&#39;s part of the &quot;user-readable&quot; part. Wild guess: other languages automatically hex- or base64-encode the raw data."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1520205396, "post_id": 49101377, "comment_id": 85208282, "body": "@Shepmaster: your comment shows exactly why automatically encoding the raw data would be a bad idea: there are two (common) ways to represent a key."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1520275792, "post_id": 49106289, "comment_id": 85240172, "body": "<code>rustc_serialize</code> is deprecated, usually in favour of <code>serde</code>, but for once, I don&#39;t think <code>serde</code> has this feature. There is a <a href=\"https://docs.rs/hex/0.3.1/hex/\" rel=\"nofollow noreferrer\"><code>hex</code></a> crate which seems to well suited, although I&#39;ve never used it."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1520238878, "creation_date": 1520238878, "answer_id": 49106289, "question_id": 49101377, "link": "https://stackoverflow.com/questions/49101377/using-pbkdf2-key-derivation-to-properly-create-user-readable-salt-with-rust-cryp/49106289#49106289", "title": "Using PBKDF2 key derivation to properly create user-readable salt with rust-crypto", "body": "<p>According to the Standard File <a href=\"http://standardfile.org/#client-instructions\" rel=\"nofollow noreferrer\">documentation</a>, the key should be hex-encoded (see the comments in the code sample). So something like this should work:</p>\n\n<pre><code>extern crate rustc_serialize as serialize;\nuse serialize::hex::{FromHex, ToHex};\n\npub fn hashcompute(&amp;self, password: String) {\n    let mut dk = [0u8; 768]; // derived key\n    let mut mac = Hmac::new(Sha512::new(), password.as_bytes());\n    pbkdf2::pbkdf2(&amp;mut mac, self.pw_salt.from_hex().unwrap(), self.pw_cost, &amp;mut dk);\n\n    println!(\"{}\", dk.to_hex());\n}\n</code></pre>\n\n<p>Note that I've also used <code>from_hex</code> to convert the salt from a string to a <code>&amp;[u8]</code> since it looks like the salt should also be hex-encoded.</p>\n"}], "owner": {"reputation": 147, "user_id": 3583259, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/be83c028dc5f63485af3ec1222a72324?s=128&d=identicon&r=PG&f=1", "display_name": "alcao758", "link": "https://stackoverflow.com/users/3583259/alcao758"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 391, "favorite_count": 0, "accepted_answer_id": 49106289, "answer_count": 1, "score": 1, "last_activity_date": 1520238878, "creation_date": 1520204003, "last_edit_date": 1520204953, "question_id": 49101377, "link": "https://stackoverflow.com/questions/49101377/using-pbkdf2-key-derivation-to-properly-create-user-readable-salt-with-rust-cryp", "title": "Using PBKDF2 key derivation to properly create user-readable salt with rust-crypto", "body": "<p>I am currently working on creating a client for <a href=\"https://github.com/standardnotes/doc/blob/master/Client%20Development%20Guide.md\" rel=\"nofollow noreferrer\">Standard File</a>, which involves using PBKDF2 for security. I'm using <strong>rust-crypto</strong>, although I have experimented with ring and rust-openssl.</p>\n\n<p>First, you retrieve a salt, cost and version number from the server through the <code>/auth/param</code> endpoint. I have these serialized into a struct with Serde.</p>\n\n<pre><code>#[derive(Serialize, Deserialize, Clone, Debug)]\npub struct PWHash {\n    pub pw_salt: String,\n    pub pw_cost: u32,\n    pub version: String,\n}\n</code></pre>\n\n<p>Previous clients I have looked at implemented using Python, where the PBKDF2 functions all seem to accept strings. However, for PBKDF2 with Rust, they all accept <code>&amp;[u8]</code> as the parameter.</p>\n\n<p>I use <code>.as_bytes()</code> when calling the function, and then <code>str::from_utf8</code> to output the derived key. However, when doing so, it fails with <code>Err(Utf8Error { valid_up_to: 0, error_len: Some(1) })</code>.</p>\n\n<p>Here is a code snippet:</p>\n\n<pre><code>pub fn hashcompute(&amp;self, password: String) {\n    let mut dk = [0u8; 768]; // derived key\n    let mut mac = Hmac::new(Sha512::new(), password.as_bytes());\n    pbkdf2::pbkdf2(&amp;mut mac, self.pw_salt.as_bytes(), self.pw_cost, &amp;mut dk);\n\n    println!(\"{:?}\", str::from_utf8(&amp;dk));\n}\n</code></pre>\n\n<p>Even <code>String::from_utf8_lossy</code> returns a result of unreadable characters.</p>\n\n<p>How do I properly format a Rust string for proper cryptographic use? Is there another library that is functional? Or is this a lost cause?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1520192578, "post_id": 49099560, "comment_id": 85204489, "body": "Could you define what you mean by &quot;character&quot;?"}, {"owner": {"reputation": 91, "user_id": 3658997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39861ba90e7b82f7392528adc3d83e11?s=128&d=identicon&r=PG&f=1", "display_name": "wolfenstien98", "link": "https://stackoverflow.com/users/3658997/wolfenstien98"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1520193275, "post_id": 49099560, "comment_id": 85204691, "body": "@BurntSushi5 any char, whether it be a letter, number, punctuation, or what have you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1520195400, "post_id": 49099560, "comment_id": 85205396, "body": "@wolfenstien98 Are you familiar with Unicode or UTF-8 at all? The concept of a &quot;character&quot; in programming usually doesn&#39;t match with what a human thinks. For example, &quot;&#197;str&#246;m&quot; has 6 <code>char</code>s, but &quot;A\u030astro\u0308m&quot; has 8! (<a href=\"https://en.wikipedia.org/wiki/Precomposed_character\" rel=\"nofollow noreferrer\">ref</a>) Then there are the <i>complicated</i> parts of Unicode."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1520195602, "last_edit_date": 1520195602, "creation_date": 1520195245, "answer_id": 49100067, "question_id": 49099560, "link": "https://stackoverflow.com/questions/49099560/how-to-split-string-into-units-of-each-character/49100067#49100067", "title": "How to split string into units of each character", "body": "<p>A succinct way is to use <a href=\"https://docs.rs/itertools/0.7.7/itertools/trait.Itertools.html#method.group_by\" rel=\"noreferrer\"><code>Itertools::group_by</code></a> on an iterator of <code>char</code>s:</p>\n\n<pre><code>extern crate itertools;\n\nuse itertools::Itertools;\n\nfn main() {\n    let input = \"aaaabbbabbbaaaacccbbbbbbbbaaa\";\n\n    let output: Vec&lt;String&gt; = input\n        .chars()\n        .group_by(|&amp;x| x)\n        .into_iter()\n        .map(|(_, r)| r.collect())\n        .collect();\n\n    assert_eq!(\n        output,\n        [\"aaaa\", \"bbb\", \"a\", \"bbb\", \"aaaa\", \"ccc\", \"bbbbbbbb\", \"aaa\"]\n    );\n}\n</code></pre>\n\n<p>However, this requires creating new <code>Strings</code> for each group of characters. A more efficient solution would return slices to the original string.</p>\n\n<p>A (hacky) modification to the previous solution yields these:</p>\n\n<pre><code>let mut start = input;\nlet output: Vec&lt;&amp;str&gt; = input\n    .chars()\n    .group_by(|&amp;x| x)\n    .into_iter()\n    .map(|(_, r)| {\n        let len: usize = r.map(|c| c.len_utf8()).sum();\n        let (a, b) = start.split_at(len);\n        start = b;\n        a\n    })\n    .collect();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 4, "last_activity_date": 1520253181, "last_edit_date": 1520253181, "creation_date": 1520242660, "answer_id": 49107267, "question_id": 49099560, "link": "https://stackoverflow.com/questions/49099560/how-to-split-string-into-units-of-each-character/49107267#49107267", "title": "How to split string into units of each character", "body": "<p>If you think that an external tool is overkill, you can do this like that:</p>\n\n<pre><code>fn group_chars(mut input: &amp;str) -&gt; Vec&lt;&amp;str&gt; {\n    fn first_different(mut chars: std::str::Chars) -&gt; Option&lt;usize&gt; {\n        chars.next().map(|f| chars.take_while(|&amp;c| c == f).fold(f.len_utf8(), |len, c| len + c.len_utf8()))\n    }\n\n    let mut output = Vec::new();\n\n    while let Some(different) = first_different(input.chars()) {\n        let (before, after) = input.split_at(different);\n        input = after;\n        output.push(before);\n    }\n\n    output\n}\n\nfn main() {\n    assert_eq!(\n        group_chars(\"aaaabbb\u00e9bbbaaaacccbbbbbbbbaaa\"),\n        [\"aaaa\", \"bbb\", \"\u00e9\", \"bbb\", \"aaaa\", \"ccc\", \"bbbbbbbb\", \"aaa\"]\n    );\n}\n</code></pre>\n\n<p>Or you can do an iterator:</p>\n\n<pre><code>pub struct CharGroups&lt;'a&gt; {\n    input: &amp;'a str,\n}\n\nimpl&lt;'a&gt; CharGroups&lt;'a&gt; {\n    pub fn new(input: &amp;'a str) -&gt; CharGroups&lt;'a&gt; {\n        CharGroups { input }\n    }\n}\n\nimpl&lt;'a&gt; Iterator for CharGroups&lt;'a&gt; {\n    type Item = &amp;'a str;\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a str&gt; {\n        self.input.chars().next().map(|f| {\n            let i = self.input.find(|c| c != f).unwrap_or(self.input.len());\n            let (before, after) = self.input.split_at(i);\n            self.input = after;\n            before\n        })\n    }\n}\n\nfn main() {\n    assert_eq!(\n        CharGroups::new(\"aaaabbb\u00e9bbbaaaacccbbbbbbbbaaa\").collect::&lt;Vec&lt;_&gt;&gt;(),\n        [\"aaaa\", \"bbb\", \"\u00e9\", \"bbb\", \"aaaa\", \"ccc\", \"bbbbbbbb\", \"aaa\"]\n    );\n}\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 3658997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39861ba90e7b82f7392528adc3d83e11?s=128&d=identicon&r=PG&f=1", "display_name": "wolfenstien98", "link": "https://stackoverflow.com/users/3658997/wolfenstien98"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 820, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1520253181, "creation_date": 1520192071, "last_edit_date": 1520194636, "question_id": 49099560, "link": "https://stackoverflow.com/questions/49099560/how-to-split-string-into-units-of-each-character", "title": "How to split string into units of each character", "body": "<p>I want to take a string where there are characters that may be repeated and split the string into units of each character.</p>\n\n<p>So for example</p>\n\n<pre><code>aaaabbbabbbaaaacccbbbbbbbbaaa\n</code></pre>\n\n<p>would become</p>\n\n<pre><code>[ aaaa, bbb, a, bbb, aaaa, ccc, bbbbbbbb, aaa ]\n</code></pre>\n"}, {"tags": ["docker", "rust", "dockerfile"], "comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1520504565, "post_id": 49098753, "comment_id": 85346484, "body": "CP: <a href=\"https://github.com/docker-library/hello-world/issues/44\" rel=\"nofollow noreferrer\">github.com/docker-library/hello-world/issues/44</a>"}, {"owner": {"reputation": 8303, "user_id": 3165602, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/8b194cca5dcf6906c0911564bfb4166c?s=128&d=identicon&r=PG", "display_name": "Oleg Sklyar", "link": "https://stackoverflow.com/users/3165602/oleg-sklyar"}, "edited": false, "score": 0, "creation_date": 1520506292, "post_id": 49098753, "comment_id": 85347594, "body": "It may be unrelated to rust, check the following issue <a href=\"https://github.com/moby/moby/issues/17896\" rel=\"nofollow noreferrer\">github.com/moby/moby/issues/17896</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1520514504, "post_id": 49173699, "comment_id": 85352615, "body": "I would <i>not</i> just copy libraries (and especially <i>not</i> the interpreter) from the compiling system to the Docker image. You should instead install the libraries within the Docker image using the distribution&#39;s package manager and then build the Rust program inside the container, linking to the appropriate libraries automatically. You could also choose to build a static binary using MUSL."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520514739, "post_id": 49173699, "comment_id": 85352785, "body": "The example in the question is just a hello-world app, my real binary has a lot of dynamic libraries which don&#39;t have static version. The interpreter is also a good question - without it we can&#39;t run anything anyway. I want to build a docker image with <code>scratch</code> base image. Do you suggest me to use <code>rust</code> base image, compile anything there, and then copy binaries and everything else from it into the <code>scratch</code> base image (double <code>FROM</code> Dockerfile section)?"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1520514920, "post_id": 49173699, "comment_id": 85352898, "body": "Like that? <a href=\"https://docs.docker.com/develop/develop-images/multistage-build/#before-multi-stage-builds\" rel=\"nofollow noreferrer\">docs.docker.com/develop/develop-images/multistage-build/&hellip;</a>  If so, what will be the difference? And what is so special about interpreter?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1520515139, "post_id": 49173699, "comment_id": 85353049, "body": "Yes, a multistage build is the right tool for that; you don&#39;t want to ship around the Rust compiler in your final image. I&#39;ve never once even heard of someone copying the interpreter between machines, so that just feels super suspicious.The Rust playground is a static binary, so you can go pretty far with static linking, but you are right that at some point it becomes complicated. There are images like <a href=\"https://github.com/emk/rust-musl-builder\" rel=\"nofollow noreferrer\">rust-musl-builder</a> to make it easier."}], "tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": true, "score": 15, "last_activity_date": 1521210658, "last_edit_date": 1521210658, "creation_date": 1520513953, "answer_id": 49173699, "question_id": 49098753, "link": "https://stackoverflow.com/questions/49098753/unable-to-run-a-docker-image-with-a-rust-executable/49173699#49173699", "title": "Unable to run a Docker image with a Rust executable", "body": "<p>As @Oleg Sklyar pointed out, the problem is that the Rust binary is dynamically-linked. </p>\n\n<p>This may be a bit confusing because many people who have heard of Rust have also heard that Rust binaries are statically-linked, but this refers to the Rust code in crates: crates are linked statically because they are all known at the moment of compilation. This does not refer to existing C dynamic libraries that the program may link to, such as libc and other must-have libraries. Often times, these libraries can also be built as statically-linked artifacts (see the end of this post). To check whether your program or library is dynamically-linked, you can use <code>ldd</code> utility:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ldd target/release/t\n    linux-vdso.so.1 (0x00007ffe43797000)\n    libdl.so.2 =&gt; /usr/lib/libdl.so.2 (0x00007fa78482d000)\n    librt.so.1 =&gt; /usr/lib/librt.so.1 (0x00007fa784625000)\n    libpthread.so.0 =&gt; /usr/lib/libpthread.so.0 (0x00007fa784407000)\n    libgcc_s.so.1 =&gt; /usr/lib/libgcc_s.so.1 (0x00007fa7841f0000)\n    libc.so.6 =&gt; /usr/lib/libc.so.6 (0x00007fa783e39000)\n    /lib64/ld-linux-x86-64.so.2 =&gt; /usr/lib64/ld-linux-x86-64.so.2 (0x00007fa784ca2000)\n</code></pre>\n\n<p>You'll need these libraries in your Docker image. You will also need the interpreter; to get its path you can use <code>objdump</code> utility:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ LANG=en objdump -s -j .interp target/release/t\n\ntarget/release/t:     file format elf64-x86-64\n\nContents of section .interp:\n 0270 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-\n 0280 7838362d 36342e73 6f2e3200           x86-64.so.2.  \n</code></pre>\n\n<p>Copy the files into the expected directories and everything works okay.</p>\n\n<p>There is also a second option which is to use the <a href=\"https://hub.docker.com/r/ekidd/rust-musl-builder/\" rel=\"noreferrer\"><code>rust-musl-builder</code></a> docker image. There are some problems with <code>postgresql</code> and <code>diesel</code> but for most of projects it would be good. It works by producing a statically-linked executable which you may just copy and use. This option is much more preferred than using an interpreter and dynamic libraries if you want to provide a docker image with less size and without having all that useless extra data such as interpreter, unused libraries and so on.</p>\n"}, {"tags": [], "owner": {"reputation": 5962, "user_id": 3873510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/YpJMi.jpg?s=128&g=1", "display_name": "Paul Razvan Berg", "link": "https://stackoverflow.com/users/3873510/paul-razvan-berg"}, "is_accepted": false, "score": 0, "last_activity_date": 1612175784, "last_edit_date": 1612175784, "creation_date": 1612175401, "answer_id": 65991023, "question_id": 49098753, "link": "https://stackoverflow.com/questions/49098753/unable-to-run-a-docker-image-with-a-rust-executable/65991023#65991023", "title": "Unable to run a Docker image with a Rust executable", "body": "<p>In my case, the issue was that I was passing an invalid executable name:</p>\n<pre class=\"lang-sh prettyprint-override\"><code>CMD [&quot;liquidator&quot;]\n</code></pre>\n<p><code>liquidator</code> was the name of the Docker image, but I needed this:</p>\n<pre class=\"lang-sh prettyprint-override\"><code>CMD [&quot;hifi-liquidator&quot;]\n</code></pre>\n<p>Basically the CMD must be the same as the &quot;name&quot; field in the <code>Cargo.toml</code> file.</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3124, "favorite_count": 2, "accepted_answer_id": 49173699, "answer_count": 2, "score": 13, "last_activity_date": 1612175784, "creation_date": 1520187561, "last_edit_date": 1521181927, "question_id": 49098753, "link": "https://stackoverflow.com/questions/49098753/unable-to-run-a-docker-image-with-a-rust-executable", "title": "Unable to run a Docker image with a Rust executable", "body": "<p>I am trying to create an image with my binary file (written in Rust) but I get different errors. This is my <code>Dockerfile</code>:</p>\n\n<pre><code>FROM scratch\nCOPY binary /\nCOPY .env /\nCOPY cert.pem /etc/ssl/\nENV RUST_BACKTRACE 1\nCMD /binary\n</code></pre>\n\n<p>Building finishes fine but when I try to run it I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ docker run binary\ndocker: Error response from daemon: OCI runtime create failed: container_linux.go:348: starting container process caused \"exec: \\\"/bin/sh\\\": stat /bin/sh: no such file or directory\": unknown.\nERRO[0000] error waiting for container: context canceled \n</code></pre>\n\n<p>And this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ docker run binary /binary\nstandard_init_linux.go:195: exec user process caused \"no such file or directory\"\n</code></pre>\n\n<p>I have no idea what to do. The error message looks very odd to me. According to the <a href=\"https://docs.docker.com/develop/develop-images/baseimages/#create-a-simple-parent-image-using-scratch\" rel=\"noreferrer\">official Docker documentation</a> it must work.</p>\n\n<p>System info: latest Arch Linux and Docker:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Docker version 18.02.0-ce, build fc4de447b5\n</code></pre>\n\n<p>I tested with a C++ program and it works fine, with both clang and gcc.</p>\n\n<p>It does not work with <code>scratch</code>, <code>alpine</code>, <code>busybox</code> ,or  <code>bash</code>-based images, but it does work with <code>postgresql</code>, <code>ubuntu</code>, and <code>debian</code> images.  The exact problem is something related to Rust and lightweight docker images - everything works okay otherwise.</p>\n"}, {"tags": ["vector", "hashmap", "rust", "mutable", "mutability"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520186252, "post_id": 49098424, "comment_id": 85202238, "body": "Why did you decide to have a value that is a reference (<code>HashMap&lt;_, &amp;mut _&gt;</code>)?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1520186522, "post_id": 49098424, "comment_id": 85202346, "body": "<a href=\"https://play.rust-lang.org/?gist=8b204b876d3cd495f075421fbc0ad985&amp;version=stable\" rel=\"nofollow noreferrer\">The duplicate applied to your problem</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520186614, "post_id": 49098424, "comment_id": 85202381, "body": "The second duplicate explains the first error, just substitute &quot;return from a function&quot; with &quot;return from the block for my <code>None</code> case&quot;."}, {"owner": {"reputation": 986, "user_id": 3994927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zk8k1.jpg?s=128&g=1", "display_name": "Matilda Smeds", "link": "https://stackoverflow.com/users/3994927/matilda-smeds"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520234579, "post_id": 49098424, "comment_id": 85215531, "body": "Thanks Shepmaster, the example was really helpful. While I was looking at HashMap documentation, I didn&#39;t manage to read the relevant method documentation (<a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.entry\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/collections/&hellip;</a>, <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.or_insert\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/collections/hash_map/&hellip;</a>) with enough care. I&#39;m glad HashMap and Entry APIs are actually convenient to use."}, {"owner": {"reputation": 986, "user_id": 3994927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zk8k1.jpg?s=128&g=1", "display_name": "Matilda Smeds", "link": "https://stackoverflow.com/users/3994927/matilda-smeds"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520234825, "post_id": 49098424, "comment_id": 85215640, "body": "As for why the strange HashMap signature... I made an assumption based on an earlier compiler error, that it was necessary somehow. Sounds silly, but it can happen to new Rustaceans sometimes."}], "owner": {"reputation": 986, "user_id": 3994927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zk8k1.jpg?s=128&g=1", "display_name": "Matilda Smeds", "link": "https://stackoverflow.com/users/3994927/matilda-smeds"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 413, "favorite_count": 0, "closed_date": 1520186444, "answer_count": 0, "score": 2, "last_activity_date": 1520186559, "creation_date": 1520185722, "last_edit_date": 1520185945, "question_id": 49098424, "link": "https://stackoverflow.com/questions/49098424/how-to-modify-a-hashmap-with-vector-values", "closed_reason": "Duplicate", "title": "How to modify a HashMap with vector values?", "body": "<p>I'm trying to build a <code>HashMap</code> with vectors as values and I have problems with borrowing / lifetimes.</p>\n\n<p>The task is to find the funniest words in a given text as ranked by the <code>funny_score</code> method. I would like to store a list of words for each distinct score in a <code>HashMap</code>.</p>\n\n<p>I have the following code</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let text = \"\";\n    let mut scores: HashMap&lt;usize, &amp;mut Vec&lt;&amp;str&gt;&gt; = HashMap::new();\n    for word in text.split(' ') {\n        let funny_score = funny_score(word);\n        match scores.get_mut(&amp;funny_score) {\n            Some(list) =&gt; list.push(word),\n            None =&gt; {\n                let mut list = vec![word];\n                scores.insert(funny_score, &amp;mut list);\n            }\n        }\n    }\n}\n\nfn funny_score(_: &amp;str) -&gt; usize { 0 }\n</code></pre>\n\n<p>And the compiler says </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `list` does not live long enough\n  --&gt; src/main.rs:12:49\n   |\n12 |                 scores.insert(funny_score, &amp;mut list);\n   |                                                 ^^^^ borrowed value does not live long enough\n13 |             }\n   |             - `list` dropped here while still borrowed\n...\n16 | }\n   | - borrowed value needs to live until here\n\nerror[E0499]: cannot borrow `scores` as mutable more than once at a time\n  --&gt; src/main.rs:12:17\n   |\n8  |         match scores.get_mut(&amp;funny_score) {\n   |               ------ first mutable borrow occurs here\n...\n12 |                 scores.insert(funny_score, &amp;mut list);\n   |                 ^^^^^^ second mutable borrow occurs here\n13 |             }\n14 |         }\n   |         - first borrow ends here\n</code></pre>\n\n<p>How can I make this work?</p>\n"}, {"tags": ["rust", "dereference", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1520177455, "creation_date": 1520177455, "answer_id": 49097007, "question_id": 49093143, "link": "https://stackoverflow.com/questions/49093143/understanding-lifetimes-for-parameterized-structs-in-rust/49097007#49097007", "title": "Understanding lifetimes for parameterized structs in Rust", "body": "<blockquote>\n  <p>Does <code>Cat { coolness: &amp;c }</code> expand to <code>Cat { coolness: &amp;'a &amp;'a i32 }</code>?</p>\n</blockquote>\n\n<p>Yes, the <code>Cat</code> ends up with a reference to a reference. This can be demonstrated by the following code compiling:</p>\n\n<pre><code>let fluffy = Cat { coolness: &amp;c };\nfn is_it_a_double_ref(_x: &amp;Cat&lt;&amp;i32&gt;) {}\nis_it_a_double_ref(&amp;fluffy);\n</code></pre>\n\n<p>However, the lifetime on each reference is not necessarily the same.</p>\n\n<blockquote>\n  <p>My understanding is that the compiler sees that the inner &amp; outlives the outer &amp;</p>\n</blockquote>\n\n<p>That's right. And this is precisely where the <code>T: 'a</code> bound comes into play.</p>\n\n<p>Lifetime bounds are a bit tricky to understand at first. They put restrictions on the references contained in <code>T</code>. For example, given the bound <code>T: 'static</code>, types that don't contain any references, or only contain <code>'static</code> references, e.g. <code>i32</code> and <code>&amp;'static str</code>, satisfy the bound, while types that contain non-<code>'static</code> references, e.g. <code>&amp;'a i32</code>, don't, because <code>'a: 'static</code> is false. More generally, given the bound <code>T: 'a</code>, the type <code>T</code> satisfies the bound if, for every lifetime parameter <code>'x</code> on <code>T</code>, <code>'x: 'a</code> is true (types with no lifetime parameters trivially satisfy the bound).</p>\n\n<p>Back to your code now. Let's give some names to these references. We'll say the type of <code>coolness</code> is <code>&amp;'fluffy &amp;'c i32</code>. <code>'c</code> is the lifetime of the variable <code>c</code> and <code>'fluffy</code> is the lifetime of the variable <code>fluffy</code> (counterintuitively, lifetimes encode the scope of a borrow, not the lifetime of the referent, although the compiler does check that the borrow doesn't extend beyond the referent's lifetime). That means the type of <code>Fluffy</code> is <code>Cat&lt;'fluffy, &amp;'c i32&gt;</code>. Is it true that <code>&amp;'c i32: 'fluffy</code>?</p>\n\n<p>To check if <code>&amp;'c i32: 'fluffy</code> is true, we need to check if <code>'c: 'fluffy</code> is true. <code>'c: 'fluffy</code> is true because the variable <code>c</code> goes out of scope after <code>fluffy</code>.</p>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 49097007, "answer_count": 1, "score": 2, "last_activity_date": 1520177455, "creation_date": 1520149400, "last_edit_date": 1520173443, "question_id": 49093143, "link": "https://stackoverflow.com/questions/49093143/understanding-lifetimes-for-parameterized-structs-in-rust", "title": "Understanding lifetimes for parameterized structs in Rust", "body": "<p>The following code </p>\n\n<pre><code>struct Cat&lt;'a, T&gt; {\n    coolness: &amp;'a T,\n}\n</code></pre>\n\n<p>complains saying </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0309]: the parameter type `T` may not live long enough\n --&gt; src/main.rs:2:5\n  |\n1 | struct Cat&lt;'a, T&gt; {\n  |                - help: consider adding an explicit lifetime bound `T: 'a`...\n2 |     coolness: &amp;'a T,\n  |     ^^^^^^^^^^^^^^^\n  |\nnote: ...so that the reference type `&amp;'a T` does not outlive the data it points at\n --&gt; src/main.rs:2:5\n  |\n2 |     coolness: &amp;'a T,\n  |     ^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>With an explicit lifetime bound, it compiles. When I instantiate the struct where <code>T</code> is an <code>&amp;i32</code> and despite each reference having a different lifetime, the code compiles. My understanding is that the compiler sees that the inner <code>&amp;</code> outlives the outer <code>&amp;</code>:</p>\n\n<pre><code>struct Cat&lt;'a, T&gt;\nwhere\n    T: 'a,\n{\n    coolness: &amp;'a T,\n}\n\nfn main() {\n    let b = 10;\n    {\n        let c = &amp;b;\n        {\n            let fluffy = Cat { coolness: &amp;c };\n        }\n    }\n}\n</code></pre>\n\n<p>Does <code>Cat { coolness: &amp;c }</code> expand to <code>Cat { coolness: &amp;'a &amp;'a i32 }</code>? Does the inner reference also assume the same lifetime and so forth for more nested references?</p>\n"}, {"tags": ["unit-testing", "mocking", "rust", "type-conversion"], "answers": [{"comments": [{"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1520425863, "post_id": 49095811, "comment_id": 85308183, "body": "<a href=\"https://stackoverflow.com/users/2835286/marko-popovic\">@Marko</a> Are you sure it can work\uff1f I got another error :error[E0200]: the trait <code>std::marker::Sync</code> requires an <code>unsafe impl</code> declaration"}, {"owner": {"reputation": 3418, "user_id": 2835286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/357f94482ec908e87bbc8055feaa88d0?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Popovic", "link": "https://stackoverflow.com/users/2835286/marko-popovic"}, "reply_to_user": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1520433784, "post_id": 49095811, "comment_id": 85313607, "body": "@llxxbb I know you can mock two traits at once so I suggested to try this approach, I did not try it out with this concrete example. Did you try marking Sync as unsafe: <code>unsafe trait Sync</code>?"}, {"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1520473010, "post_id": 49095811, "comment_id": 85333614, "body": "I tried ,and then error again : Unsafe traits are not supported yet, but I make it work by add &quot;unsafe impl Sync for SayHelloMock {}&quot;. But I can&#39;t add <code>&#39;static</code> lifetime to the mock,  please see question I appended."}], "tags": [], "owner": {"reputation": 3418, "user_id": 2835286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/357f94482ec908e87bbc8055feaa88d0?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Popovic", "link": "https://stackoverflow.com/users/2835286/marko-popovic"}, "is_accepted": false, "score": 1, "last_activity_date": 1520172416, "last_edit_date": 1520172416, "creation_date": 1520169305, "answer_id": 49095811, "question_id": 49093092, "link": "https://stackoverflow.com/questions/49093092/how-to-give-a-mocked-value-to-a-function-which-needs-a-reference-with-the-stati/49095811#49095811", "title": "How to give a mocked value to a function which needs a reference with the &#39;static lifetime and implements Sync?", "body": "<p>The question is a little vague, but if I understood correctly, you want to know how you could pass that mock to function <code>say_hello_brother</code>. The problem is that that function expects an object that implements the <code>Sync</code> trait as well. For this reason, you cannot convert <code>mock</code> to some other type to get the code to compile.</p>\n\n<p>According to the <a href=\"https://github.com/kriomant/mockers/blob/0.9.4/doc/guide.md#inherited-traits--mocking-several-traits\" rel=\"nofollow noreferrer\">documentation of <em>mocker</em></a>, you could try mocking two traits at once. Here is some pseudo-code that illustrates the idea:</p>\n\n<pre><code>mock! {\n    SayHelloMock,\n    self,\n    trait SayHello {\n        // trait methods here\n    },\n    self,\n    trait Sync {\n        // trait methods here\n    }\n}\n</code></pre>\n\n<p>Then in your test, you would create a mock like this:</p>\n\n<pre><code>let mut mock = scenario.create_mock::&lt;SayHelloMock&gt;();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1520253365, "post_id": 49096365, "comment_id": 85226273, "body": "Thanks,  I think this way is too simple for test. In real test not only need called count, but also parameter check, more importantly the parameter may be different for every call. But the <code>lazy_static</code> is new for me, I&#39;ll try and take it"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1520254551, "post_id": 49096365, "comment_id": 85226992, "body": "@llxxbb based on the code you have provided, there is literally <i>nothing else</i> that can be tested beyond the total number of calls. Of course, the solution here can be extended and complicated for a near infinite amount of permutations."}, {"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1520295466, "post_id": 49096365, "comment_id": 85248544, "body": "yeah. you said right, but  I do not like by making a lots of mock structs instead of a good mock framework yet. The mock framework can simplify the code structure and easy to understand."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 1, "creation_date": 1520297083, "post_id": 49096365, "comment_id": 85248986, "body": "@llxxbb <code>#[derive(Mock)]</code> <i>creates those structs</i>. You aren&#39;t avoiding them, just the work of typing them out. Anyway, this answer gives you the capabilities to submit a PR to that library to make the mocks it generates <code>Send</code> and <code>Sync</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1520172964, "creation_date": 1520172964, "answer_id": 49096365, "question_id": 49093092, "link": "https://stackoverflow.com/questions/49093092/how-to-give-a-mocked-value-to-a-function-which-needs-a-reference-with-the-stati/49096365#49096365", "title": "How to give a mocked value to a function which needs a reference with the &#39;static lifetime and implements Sync?", "body": "<p>You <em>cannot</em> use the mocker library for this purpose because the mocks it generates are <a href=\"https://github.com/kriomant/mockers/issues/22\" rel=\"nofollow noreferrer\">not thread safe</a>.</p>\n\n<p>That being said, nothing restricts you from creating your own mocks which are thread-safe:</p>\n\n<pre><code>use std::sync::atomic::{AtomicUsize, Ordering};\n\n#[derive(Debug, Default)]\nstruct MyMock {\n    call_count: AtomicUsize,\n}\n\nimpl SayHello for MyMock {\n    fn hello(&amp;self) {\n        self.call_count.fetch_add(1, Ordering::SeqCst);\n    }\n}\n</code></pre>\n\n<p>However, your signature requires a <code>&amp;'static T</code>, which is really probably a terrible idea. You will need to use something like a lazy-static:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\n#[test]\nfn test_say_hello() {\n    lazy_static! { \n        static ref MOCK: MyMock = MyMock::default();\n    };\n    say_hello_brother(&amp;*MOCK);\n    assert_eq!(MOCK.call_count.load(Ordering::SeqCst), 1);\n}\n</code></pre>\n"}], "owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "accepted_answer_id": 49096365, "answer_count": 2, "score": 1, "last_activity_date": 1520502614, "creation_date": 1520148925, "last_edit_date": 1520502614, "question_id": 49093092, "link": "https://stackoverflow.com/questions/49093092/how-to-give-a-mocked-value-to-a-function-which-needs-a-reference-with-the-stati", "title": "How to give a mocked value to a function which needs a reference with the &#39;static lifetime and implements Sync?", "body": "<p>I used <a href=\"https://github.com/kriomant/mockers/blob/0.9.4/README.md\" rel=\"nofollow noreferrer\">mocker</a> to test my project. I have no idea what kind of type conversion is needed by <code>say_hello_brother</code>. The simplified code list below:</p>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>#![feature(plugin, custom_derive)]\n#![plugin(mockers_macros)]\n#[cfg(test)]\nextern crate mockers;\n\nuse mockers::Scenario;\n\n#[derive(Mock)]\ntrait SayHello {\n    fn hello(&amp;self);\n}\n\n// assume `SayHello` is a service and  worked on multiple threads\nfn say_hello_brother&lt;T: SayHello + Sync&gt;(brother: &amp;'static T) {\n    brother.hello()\n}\n\n#[test]\nfn test_sya_hello() {\n    let scenario = Scenario::new();\n    let mock = scenario.create_mock_for::&lt;SayHello&gt;();\n    say_hello_brother(&amp;mock)\n}\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"mock\"\nversion = \"0.1.0\"\nauthors = [\"llxxb\"]\n\n[dependencies]\nmockers = \"0.9.4\"\nmockers_macros = \"0.9.4\"\n</code></pre>\n\n<p>and error info:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::rc::Rc&lt;std::cell::RefCell&lt;mockers::ScenarioInternals&gt;&gt;: std::marker::Sync` is not satisfied in `SayHelloMock`\n  --&gt; src\\lib.rs:22:5\n   |\n22 |     say_hello_brother(&amp;mock)\n   |     ^^^^^^^^^^^^^^^^^ `std::rc::Rc&lt;std::cell::RefCell&lt;mockers::ScenarioInternals&gt;&gt;` cannot be shared between threads safely\n   |\n   = help: within `SayHelloMock`, the trait `std::marker::Sync` is not implemented for `std::rc::Rc&lt;std::cell::RefCell&lt;mockers::ScenarioInternals&gt;&gt;`\n   = note: required because it appears within the type `SayHelloMock`\n</code></pre>\n\n<p><strong>UPDATE</strong> After some trying, I succeed to attach <code>Sync</code> to <code>SayHelloMock</code>. the new lib.rs:</p>\n\n<pre><code>#![feature(plugin, custom_derive)]\n#![plugin(mockers_macros)]\n#[cfg(test)]\nextern crate mockers;\n\nuse mockers::Scenario;\n\ntrait SayHello {\n    fn hello(&amp;self);\n}\n\n\nmock! {\n    SayHelloMock,\n    self,\n    trait SayHello {\n        fn hello(&amp;self);\n    }\n}\n\nunsafe impl Sync for SayHelloMock {}\n\n\n// assume `SayHello` is a service and  worked on multiple threads\nfn say_hello_brother&lt;T: SayHello + Sync&gt;(brother: &amp;'static T) {\n    brother.hello()\n}\n\n#[test]\nfn test_sya_hello() {\n    let scenario = Scenario::new();\n// not work\n//    let mock = scenario.create_mock::&lt;SayHelloMock&gt;();\n//    static MOCK: SayHelloMock = || { mock };\n//    say_hello_brother(&amp;MOCK)\n\n    // not work yet\n    let mock : &amp;'static SayHelloMock = &amp;(scenario.create_mock::&lt;SayHelloMock&gt;());\n    say_hello_brother(mock)\n}\n</code></pre>\n\n<p>But I still can't convert it to 'static, error info:</p>\n\n<pre><code>error[E0597]: borrowed value does not live long enough\n--&gt; src\\lib.rs:38:41\n|\n38 |     let mock : &amp;'static SayHelloMock = &amp;(scenario.create_mock::&lt;SayHelloMock&gt;());\n|                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n39 |     say_hello_brother(mock)\n40 | }\n| - temporary value only lives until here\n|\n= note: borrowed value must be valid for the static lifetime...\n</code></pre>\n"}, {"tags": ["reference", "iterator", "rust", "tuples", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 5, "last_activity_date": 1520173593, "last_edit_date": 1520173593, "creation_date": 1520163492, "answer_id": 49094969, "question_id": 49093090, "link": "https://stackoverflow.com/questions/49093090/unzip-iterator-of-references-to-tuples-into-two-collections-of-references/49094969#49094969", "title": "Unzip iterator of references to tuples into two collections of references", "body": "<blockquote>\n  <p>Is there a better way to do this?</p>\n</blockquote>\n\n<p>\"Better\" is a bit subjective. You can make your function shorter:</p>\n\n<pre><code>fn distribute_ref&lt;T, U&gt;(x: &amp;(T, U)) -&gt; (&amp;T, &amp;U) {\n    (&amp;x.0, &amp;x.1)\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-elision\" rel=\"noreferrer\">Lifetime elision</a> allows to omit lifetime annotations in this case.</p>\n\n<p>You can use a closure to do the same thing:</p>\n\n<pre><code>points.iter().map(|&amp;(ref a, ref b)| (a, b)).unzip()\n</code></pre>\n\n<p>Depending on the task it can be sufficient to clone the data. Especially in this case, as reference to <code>u8</code> takes 4 or 8 times more space than <code>u8</code> itself.</p>\n\n<pre><code>points().iter().cloned().unzip()\n</code></pre>\n"}], "owner": {"reputation": 769, "user_id": 7065821, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/iLZC7.png?s=128&g=1", "display_name": "Challenger5", "link": "https://stackoverflow.com/users/7065821/challenger5"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 763, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1520198011, "creation_date": 1520148911, "last_edit_date": 1520198011, "question_id": 49093090, "link": "https://stackoverflow.com/questions/49093090/unzip-iterator-of-references-to-tuples-into-two-collections-of-references", "title": "Unzip iterator of references to tuples into two collections of references", "body": "<p>I have an <code>Iterator&lt;Item = &amp;(T, U)&gt;</code> over a slice <code>&amp;[(T, U)]</code>. I'd like to unzip this iterator into its components (i.e. obtain <code>(Vec&lt;&amp;T&gt;, Vec&lt;&amp;U&gt;)</code>).</p>\n\n<p>Rust provides unzip functionality through the <code>.unzip()</code> method on <code>Interator</code>:</p>\n\n<pre><code>points.iter().unzip()\n</code></pre>\n\n<p>Unfortunately, this doesn't work as-is because <code>.unzip()</code> expects the type of the iterator's item to be a tuple; mine is a reference to a tuple.</p>\n\n<p>To fix this, I tried to write a function which converts between a reference to a tuple and a tuple of references:</p>\n\n<pre><code>fn distribute_ref&lt;'a, T, U&gt;(x: &amp;'a (T, U)) -&gt; (&amp;'a T, &amp;'a U) {\n    (&amp;x.0, &amp;x.1)\n}\n</code></pre>\n\n<p>I can then <code>map</code> over the resulting iterator to get something <code>.unzip()</code> can handle:</p>\n\n<pre><code>points.iter().map(distribute_ref).unzip()\n</code></pre>\n\n<p>This works now, but I this feels a bit strange. In particular, <code>distribute_ref</code> seems like a fairly simple operation that would be provided by the Rust standard library. I'm guessing it either is and I can't find it, or I'm not approaching this the right way.</p>\n\n<p>Is there a better way to do this?</p>\n"}, {"tags": ["rust", "rust-diesel"], "answers": [{"comments": [{"owner": {"reputation": 407, "user_id": 4983862, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/eb45b27e9338e3e971cd860f4372ff35?s=128&d=identicon&r=PG&f=1", "display_name": "hweom", "link": "https://stackoverflow.com/users/4983862/hweom"}, "edited": false, "score": 1, "creation_date": 1521353703, "post_id": 49096462, "comment_id": 85690034, "body": "Thanks for a detailed explanation and also for the tip on how to view the expanded code. Still going to accept Shepmaster&#39;s answer, as I don&#39;t want to explicitly use Diesel internals, which look scary enough."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 8, "last_activity_date": 1520173663, "creation_date": 1520173663, "answer_id": 49096462, "question_id": 49092437, "link": "https://stackoverflow.com/questions/49092437/how-do-i-implement-queryable-and-insertable-for-custom-field-types-in-diesel/49096462#49096462", "title": "How do I implement Queryable and Insertable for custom field types in Diesel?", "body": "<p>Sometimes, the easiest way to understand what a macro does (derives are just a different form of macros) is to ask the compiler for the expanded code. With a nightly compiler, you can do this using this command:</p>\n\n<pre><code>cargo rustc -- -Z unstable-options --pretty expanded &gt; expanded.rs\n</code></pre>\n\n<p>This will output the expanded code in <code>expanded.rs</code>.</p>\n\n<p>We can now look at this file to see what <code>#[derive(Insertable)]</code> expands to. Naturally, I first changed the definition of <code>Record</code> to match the types that Diesel. After some cleaning up, this is the generated code:</p>\n\n<pre><code>impl&lt;'insert&gt; diesel::insertable::Insertable&lt;records::table&gt; for &amp;'insert Record {\n    type Values = &lt;(\n        Option&lt;diesel::dsl::Eq&lt;records::id, &amp;'insert i64&gt;&gt;,\n        Option&lt;diesel::dsl::Eq&lt;records::record_type, &amp;'insert i16&gt;&gt;,\n        Option&lt;diesel::dsl::Eq&lt;records::value, &amp;'insert BigDecimal&gt;&gt;\n    ) as diesel::insertable::Insertable&lt;records::table&gt;&gt;::Values;\n\n    #[allow(non_shorthand_field_patterns)]\n    fn values(self) -&gt; Self::Values {\n        let Record {\n            id: ref id,\n            record_type: ref record_type,\n            value: ref value,\n        } = *self;\n        diesel::insertable::Insertable::values((\n            Some(::ExpressionMethods::eq(records::id, id)),\n            Some(::ExpressionMethods::eq(records::record_type, record_type)),\n            Some(::ExpressionMethods::eq(records::value, value))))\n    }\n}\n\nimpl diesel::query_builder::UndecoratedInsertRecord&lt;records::table&gt; for Record {\n}\n</code></pre>\n\n<p>We can now adapt the <code>Insertable</code> implementation for our custom types. Notice that I've changed the <code>Values</code> associated type to return values directly rather than references to the values, because for two of them, the value is created in the <code>values</code> method, so we couldn't return a reference, and for the other one, returning a reference doesn't gain much in terms of performance.</p>\n\n<pre><code>impl&lt;'insert&gt; diesel::insertable::Insertable&lt;records::table&gt; for &amp;'insert Record {\n    type Values = &lt;(\n        Option&lt;diesel::dsl::Eq&lt;records::id, i64&gt;&gt;,\n        Option&lt;diesel::dsl::Eq&lt;records::record_type, i16&gt;&gt;,\n        Option&lt;diesel::dsl::Eq&lt;records::value, BigDecimal&gt;&gt;\n    ) as diesel::insertable::Insertable&lt;records::table&gt;&gt;::Values;\n\n    #[allow(non_shorthand_field_patterns)]\n    fn values(self) -&gt; Self::Values {\n        let Record {\n            id: ref id,\n            record_type: ref record_type,\n            value: ref value,\n        } = *self;\n        let record_type = match *record_type {\n            RecordType::A =&gt; 1,\n            RecordType::B =&gt; 2,\n        };\n        let value: BigDecimal = value.to_string().parse().unwrap();\n        diesel::insertable::Insertable::values((\n            Some(::ExpressionMethods::eq(records::id, *id)),\n            Some(::ExpressionMethods::eq(records::record_type, record_type)),\n            Some(::ExpressionMethods::eq(records::value, value))))\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 407, "user_id": 4983862, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/eb45b27e9338e3e971cd860f4372ff35?s=128&d=identicon&r=PG&f=1", "display_name": "hweom", "link": "https://stackoverflow.com/users/4983862/hweom"}, "edited": false, "score": 0, "creation_date": 1520187798, "post_id": 49097099, "comment_id": 85202805, "body": "Yeah, this would be ideal, but unfortunately, decimal::d128 has ~30 methods and implements &gt;50 traits, so it would be a real nuisance to reimplement those for the wrapper struct."}, {"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "reply_to_user": {"reputation": 407, "user_id": 4983862, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/eb45b27e9338e3e971cd860f4372ff35?s=128&d=identicon&r=PG&f=1", "display_name": "hweom", "link": "https://stackoverflow.com/users/4983862/hweom"}, "edited": false, "score": 0, "creation_date": 1600589158, "post_id": 49097099, "comment_id": 113130739, "body": "@hweom you could add a <code>Deref</code> implementation, so you don&#39;t have to implement those."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 22, "last_activity_date": 1528902821, "last_edit_date": 1528902821, "creation_date": 1520177926, "answer_id": 49097099, "question_id": 49092437, "link": "https://stackoverflow.com/questions/49092437/how-do-i-implement-queryable-and-insertable-for-custom-field-types-in-diesel/49097099#49097099", "title": "How do I implement Queryable and Insertable for custom field types in Diesel?", "body": "<p>I find it more convenient to create newtype wrappers that implement <code>ToSql</code> and <code>FromSql</code>. You can then build with these basic blocks to create larger types that can derive <code>Queryable</code> / <code>Insertable</code>.</p>\n\n<p>This example only shows how to perform the mapping of the enum to and from a <code>SmallInt</code>, but the case for the decimal would be the same. The only difference would be in how you perform the transformations:</p>\n\n<pre><code>#[macro_use]\nextern crate diesel;\n\nmod types {\n    use diesel::sql_types::*;\n    use diesel::backend::Backend;\n    use diesel::deserialize::{self, FromSql};\n    use diesel::serialize::{self, ToSql, Output};\n    use std::io;\n\n    table! {\n        records (id) {\n            id -&gt; BigInt,\n            record_type -&gt; SmallInt,\n        }\n    }\n\n    #[derive(Debug, Copy, Clone, AsExpression, FromSqlRow)]\n    #[sql_type = \"SmallInt\"]\n    pub enum RecordType {\n        A,\n        B,\n    }\n\n    impl&lt;DB: Backend&gt; ToSql&lt;SmallInt, DB&gt; for RecordType\n    where\n        i16: ToSql&lt;SmallInt, DB&gt;,\n    {\n        fn to_sql&lt;W&gt;(&amp;self, out: &amp;mut Output&lt;W, DB&gt;) -&gt; serialize::Result\n        where\n            W: io::Write,\n        {\n            let v = match *self {\n                RecordType::A =&gt; 1,\n                RecordType::B =&gt; 2,\n            };\n            v.to_sql(out)\n        }\n    }\n\n    impl&lt;DB: Backend&gt; FromSql&lt;SmallInt, DB&gt; for RecordType\n    where\n        i16: FromSql&lt;SmallInt, DB&gt;,\n    {\n        fn from_sql(bytes: Option&lt;&amp;DB::RawValue&gt;) -&gt; deserialize::Result&lt;Self&gt; {\n            let v = i16::from_sql(bytes)?;\n            Ok(match v {\n                1 =&gt; RecordType::A,\n                2 =&gt; RecordType::B,\n                _ =&gt; return Err(\"replace me with a real error\".into()),\n            })\n        }\n    }\n\n    #[derive(Insertable, Queryable, Debug)]\n    #[table_name = \"records\"]\n    pub struct Record {\n        pub id: i64,\n        pub record_type: RecordType,\n    }\n}\n</code></pre>\n\n<p>There's a <a href=\"https://github.com/diesel-rs/diesel/blob/v1.3.1/guide_drafts/trait_derives.md\" rel=\"noreferrer\">draft guide describing all the derives and their annotations</a>, but it doesn't yet mention <code>#[sql_type]</code> for an entire type. This lets Diesel know what kind of underlying storage is needed inside of the database.</p>\n\n<p>See also <a href=\"https://github.com/diesel-rs/diesel/blob/v1.3.1/diesel_tests/tests/custom_types.rs\" rel=\"noreferrer\">the Diesel tests for custom types</a>.</p>\n"}], "owner": {"reputation": 407, "user_id": 4983862, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/eb45b27e9338e3e971cd860f4372ff35?s=128&d=identicon&r=PG&f=1", "display_name": "hweom", "link": "https://stackoverflow.com/users/4983862/hweom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3678, "favorite_count": 4, "accepted_answer_id": 49097099, "answer_count": 2, "score": 23, "last_activity_date": 1528902821, "creation_date": 1520142770, "last_edit_date": 1520174125, "question_id": 49092437, "link": "https://stackoverflow.com/questions/49092437/how-do-i-implement-queryable-and-insertable-for-custom-field-types-in-diesel", "title": "How do I implement Queryable and Insertable for custom field types in Diesel?", "body": "<p>I have an SQL table that I want to work with through Diesel:</p>\n\n<pre><code>CREATE TABLE records (\n    id BIGSERIAL PRIMARY KEY,\n    record_type SMALLINT NOT NULL,\n    value DECIMAL(10, 10) NOT NULL\n)\n</code></pre>\n\n<p>This table generates the following schema:</p>\n\n<pre><code>table! {\n    records (id) {\n        id -&gt; Int8,\n        record_type -&gt; Int2,\n        value -&gt; Numeric,\n    }\n}\n</code></pre>\n\n<p>Diesel exports decimals as <code>bigdecimal::BigDecimal</code>, but I'd like to work with <code>decimal::d128</code> instead. I also want to map <code>record_type</code> to an enum, so I declare my model like this:</p>\n\n<pre><code>use decimal::d128;\n\npub enum RecordType {\n    A,\n    B,\n}\n\npub struct Record {\n    pub id: i64,\n    pub record_type: RecordType,\n    pub value: d128,\n}\n</code></pre>\n\n<p>I can't use <code>#derive(Queryable, Insertable)</code> because of non-standard type mapping, so I try to implement these traits myself:</p>\n\n<pre><code>impl Queryable&lt;records::SqlType, Pg&gt; for Record {\n    type Row = (i64, i16, BigDecimal);\n\n    fn build(row: Self::Row) -&gt; Self {\n        Record {\n            id: row.0,\n            record_type: match row.1 {\n                1 =&gt; RecordType::A,\n                2 =&gt; RecordType::B,\n                _ =&gt; panic!(\"Wrong record type\"),\n            },\n            value: d128!(format!(\"{}\", row.2)),\n        }\n    }\n}\n</code></pre>\n\n<p>I can't figure out how to implement <code>Insertable</code>. What is the <code>Values</code> associated type? Diesel's documentation is not very clear on this.</p>\n\n<p>Maybe there's a better way to achieve what I'm trying to do?</p>\n\n<p><code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nbigdecimal = \"0.0.10\"\ndecimal = \"2.0.4\"\ndiesel = { version = \"1.1.1\", features = [\"postgres\", \"bigdecimal\", \"num-bigint\", \"num-integer\", \"num-traits\"] }\ndotenv = \"0.9.0\"\n</code></pre>\n"}, {"tags": ["c#", ".net", "rust", "marshalling", "dllimport"], "comments": [{"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 0, "creation_date": 1520140635, "post_id": 49091715, "comment_id": 85189739, "body": "I don&#39;t know rust at all. Your C# declaration implies that the return value is a null terminated character array allocated on the COM heap. The marshaler deallocation it with a call to CoTaskMemFree. I don&#39;t think that your rust function meets that contract. How do you think the returned string is to be deallocated?"}, {"owner": {"reputation": 84066, "user_id": 5311735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6rhPk.jpg?s=128&g=1", "display_name": "Evk", "link": "https://stackoverflow.com/users/5311735/evk"}, "edited": false, "score": 1, "creation_date": 1520141402, "post_id": 49091715, "comment_id": 85189861, "body": "Shouldn&#39;t you use something like <code>*const c_char</code> instead of rust <code>String</code>? Also, I think you need <code>CallingConvention.Cdecl</code>, because by default it&#39;s Stdcall."}, {"owner": {"reputation": 28373, "user_id": 5015238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8790f8091d3c6c58fd45664a165117a?s=128&d=identicon&r=PG", "display_name": "jdweng", "link": "https://stackoverflow.com/users/5015238/jdweng"}, "edited": false, "score": 0, "creation_date": 1520144407, "post_id": 49091715, "comment_id": 85190419, "body": "Net library was designed to prevent blue screen errors.  So extra protection is added to Net which is called managed.  Calling unmanaged c language required copying unmanaged objects to managed objects using the Marshal Class.  Your error indicates the managed object is point to an invalid address.  A string in c# is a two byte class while in c language it is a one byte[] terminated with a &#39;\\0&#39;.  If you do not terminate the byte[] or do not copy object to managed space you will get the error you are seeing."}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "reply_to_user": {"reputation": 28373, "user_id": 5015238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8790f8091d3c6c58fd45664a165117a?s=128&d=identicon&r=PG", "display_name": "jdweng", "link": "https://stackoverflow.com/users/5015238/jdweng"}, "edited": false, "score": 4, "creation_date": 1520147179, "post_id": 49091715, "comment_id": 85191006, "body": "@jdweng most of what you say there is wrong. Unmanaged user space code cannot produce blue screens. The distinction that us relevant us kernel mode code vs user mode, not unmanaged vs managed. Copying is not always required. Blittable types can be marshaler by pinning them. C# char is 2 bytes, but so is wchar_t in C which is the native character type of the OS."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 2, "creation_date": 1520166754, "post_id": 49091715, "comment_id": 85195822, "body": "You can&#39;t use those fancy rust types in interop. Go with plain pointers and repr(c) structs."}], "answers": [{"comments": [{"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 0, "creation_date": 1520175923, "post_id": 49096260, "comment_id": 85198538, "body": "How is the returned string going to be deallocated? And what does the C# p/invoke declaration look like?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 0, "creation_date": 1520176127, "post_id": 49096260, "comment_id": 85198607, "body": "@DavidHeffernan <a href=\"https://stackoverflow.com/a/32816043/155423\">You&#39;ve already answered the P/Invoke part of the question</a>, which is why I linked to it."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1520176825, "last_edit_date": 1520176825, "creation_date": 1520172189, "answer_id": 49096260, "question_id": 49091715, "link": "https://stackoverflow.com/questions/49091715/how-should-i-marshall-a-rust-function-with-a-str-option-and-string-and-use-it/49096260#49096260", "title": "How should I marshall a Rust function with a &amp;str, Option, and String and use it in C#?", "body": "<p>As described in my <a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\">FFI Omnibus</a>, you cannot pass complicated Rust-specific types via FFI functions. You <strong>must</strong> use only types that are known to the C ABI. In your example, these types are not known:</p>\n\n<ul>\n<li><code>&amp;str</code></li>\n<li><code>Option</code></li>\n<li><code>String</code></li>\n</ul>\n\n<p>Instead, you will be required to only use basic C pointers. A NULL pointer can represent <code>None</code> for a string, but for an <code>Option&lt;u64&gt;</code>, you will need to break it up into two values, a boolean and the real value. Your FFI function will look something like:</p>\n\n<pre><code>extern crate libc;\n\nuse std::ffi::{CStr, CString};\nuse std::ptr;\n\n#[no_mangle]\n#[cfg(not(target_arch = \"wasm32\"))]\npub extern \"C\" fn generate_work(\n    input_hash: *const libc::c_char,\n    max_iters_present: bool,\n    max_iters: u64,\n) -&gt; *const libc::c_char {\n    let input_hash = if input_hash.is_null() {\n        return ptr::null();\n    } else {\n        unsafe { CStr::from_ptr(input_hash) }\n    };\n    let input_hash = match input_hash.to_str() {\n        Ok(s) =&gt; s,\n        Err(_) =&gt; return ptr::null(),\n    };\n    let max_iters = if max_iters_present {\n        Some(max_iters)\n    } else {\n        None\n    };\n\n    let result = inner_code(input_hash, max_iters);\n\n    match result {\n        Some(s) =&gt; {\n            match CString::new(s) {\n                Ok(s) =&gt; s.into_raw(),\n                Err(_) =&gt; ptr::null(),\n            }\n        },\n        None =&gt; ptr::null(),\n    }\n}\n</code></pre>\n\n<p>Note that this returns an allocated string that you need to pass back to Rust to deallocate. Again, as described in <a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_return/\" rel=\"nofollow noreferrer\">the FFI Omnibus</a>, you'll need something like</p>\n\n<pre><code>#[no_mangle]\npub extern fn free_a_string(s: *mut c_char) {\n    unsafe {\n        if s.is_null() { return }\n        CString::from_raw(s)\n    };\n}\n</code></pre>\n\n<p><a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_arguments/\" rel=\"nofollow noreferrer\">Converting a string to Rust is easy</a>:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>[DllImport(\"string_arguments\", EntryPoint=\"how_many_characters\")]\npublic static extern uint HowManyCharacters(string s);\n</code></pre>\n\n<p><a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_return/\" rel=\"nofollow noreferrer\">Returning a string requires a lot more trickery, sadly</a>:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>internal class Native\n{\n    [DllImport(\"string_return\")]\n    internal static extern ThemeSongHandle theme_song_generate(byte length);\n    [DllImport(\"string_return\")]\n    internal static extern void theme_song_free(IntPtr song);\n}\n\ninternal class ThemeSongHandle : SafeHandle\n{\n    public ThemeSongHandle() : base(IntPtr.Zero, true) {}\n\n    public override bool IsInvalid\n    {\n        get { return false; }\n    }\n\n    public string AsString()\n    {\n        int len = 0;\n        while (Marshal.ReadByte(handle, len) != 0) { ++len; }\n        byte[] buffer = new byte[len];\n        Marshal.Copy(handle, buffer, 0, buffer.Length);\n        return Encoding.UTF8.GetString(buffer);\n    }\n\n    protected override bool ReleaseHandle()\n    {\n        Native.theme_song_free(handle);\n        return true;\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/ffi/struct.CStr.html\" rel=\"nofollow noreferrer\"><code>CStr</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"nofollow noreferrer\"><code>CString</code></a></li>\n<li><a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_arguments/\" rel=\"nofollow noreferrer\">Taking string arguments via FFI</a></li>\n<li><a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_return/\" rel=\"nofollow noreferrer\">Returning strings via FFI</a></li>\n<li><a href=\"https://stackoverflow.com/q/32812769/155423\">Using Unicode strings in DllImport with a DLL written in Rust</a></li>\n</ul>\n"}], "owner": {"reputation": 713, "user_id": 1932856, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/f08a608883c7171eca9f0fc6ea42b380?s=128&d=identicon&r=PG", "display_name": "Th3B0Y", "link": "https://stackoverflow.com/users/1932856/th3b0y"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 391, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1520176825, "creation_date": 1520134614, "last_edit_date": 1520171160, "question_id": 49091715, "link": "https://stackoverflow.com/questions/49091715/how-should-i-marshall-a-rust-function-with-a-str-option-and-string-and-use-it", "title": "How should I marshall a Rust function with a &amp;str, Option, and String and use it in C#?", "body": "<p>The following code is in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\n#[cfg(not(target_arch = \"wasm32\"))]\npub extern fn generate_work(input_hash: &amp;str, max_iters: Option&lt;u64&gt;) -&gt; Option&lt;String&gt; {\n    let bytes = Vec::from_hex(input_hash).unwrap();\n    generate_work_internal(&amp;bytes[..], max_iters)\n}\n</code></pre>\n\n<p>I have the following code in C#:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>[DllImport(\"mydll.dll\")]\nprivate static extern string generate_work(string input_hash, ulong[] max_iters);\n</code></pre>\n\n<p>I'm getting the error:</p>\n\n<blockquote>\n  <p>System.AccessViolationException: 'Attempted to read or write protected memory. This is often an indication that other memory is corrupt.'</p>\n</blockquote>\n\n<p>I have tried other signatures, but none has worked.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1520110051, "post_id": 49088789, "comment_id": 85183600, "body": "<i>Why does the compiler not optimize it for the <code>Option</code> case</i> \u2014 it <b>does</b> optimize it. You just don&#39;t yet understand that is optimizing for speed, not memory space."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520110347, "post_id": 49088789, "comment_id": 85183694, "body": "See also <a href=\"https://stackoverflow.com/q/27324821/155423\">Why does an enum require extra memory size?</a>, where a comment addresses your concern."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1520112639, "post_id": 49088789, "comment_id": 85184373, "body": "Note that the definition of <code>Discriminant</code> uses <code>u64</code> not because all discriminants are a <code>u64</code>, but because it takes a <code>u64</code> to store the largest possible discriminant value. In an <code>Option&lt;u8&gt;</code>, the size of the discriminant is just 1 (i.e. the size of an <code>u8</code>)."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1520114616, "post_id": 49088789, "comment_id": 85184884, "body": "And in <code>Option&lt;&amp;T&gt;</code> and <code>Option&lt;Option&lt;T&gt;&gt;</code> the discriminant gets embedded into the inner type, taking up no space at all."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520110926, "post_id": 49088835, "comment_id": 85183860, "body": "<i>The size of a type is guaranteed to be a multiple of its alignment</i> \u2014 I don&#39;t believe this is strictly true; you can opt into different methods of packing a struct and what is valid varies depends on architecture. I&#39;m not sure if an enum has options for controlling packing though."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520112343, "post_id": 49088835, "comment_id": 85184273, "body": "@Shepmaster &quot;More specifically, this is the offset in bytes between successive elements in an array with that item type including alignment padding&quot; implies that it&#39;s a multiple, because otherwise the second struct in an array would be unaligned."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1520114746, "post_id": 49088835, "comment_id": 85184922, "body": "<code>std::mem::align_of</code> != <code>std::mem::size_of</code>. A single value in a struct or on the stack may have some additional fields packed into its alignment padding."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1520116254, "post_id": 49088835, "comment_id": 85185304, "body": "@the8472 But <code>std::mem::size_of::&lt;T&gt;() % std::mem::align_of::&lt;T&gt;() == 0</code> for all types, right?"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1520183192, "post_id": 49088835, "comment_id": 85201175, "body": "Ah right, I was thinking of the <a href=\"https://github.com/rust-lang/rfcs/issues/1397\" rel=\"nofollow noreferrer\">proposal to distinguish stride and alignment size</a>, but that&#39;s not even an RFC yet."}], "tags": [], "owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "is_accepted": true, "score": 8, "last_activity_date": 1520108489, "creation_date": 1520108489, "answer_id": 49088835, "question_id": 49088789, "link": "https://stackoverflow.com/questions/49088789/why-is-the-size-of-optionf64-16-bytes-on-64bit-linux/49088835#49088835", "title": "Why is the size of Option&lt;f64&gt; 16 bytes on 64bit Linux?", "body": "<p><code>f64</code> has a 64-bit alignment. Thus a type containing an <code>f64</code> needs an alignment of at least 64 bits. The size of a type is guaranteed to be a multiple of its alignment. Since it can't fit in 64 bits, it needs to go up to the next multiple, 128 bits/16 bytes.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "accepted_answer_id": 49088835, "answer_count": 1, "score": 4, "last_activity_date": 1520109935, "creation_date": 1520108206, "last_edit_date": 1520109935, "question_id": 49088789, "link": "https://stackoverflow.com/questions/49088789/why-is-the-size-of-optionf64-16-bytes-on-64bit-linux", "title": "Why is the size of Option&lt;f64&gt; 16 bytes on 64bit Linux?", "body": "<p>I tried this on 64bit Linux and it gives <code>16</code>:</p>\n\n<pre><code>println!(\"Results: {}\", mem::size_of::&lt;Option&lt;f64&gt;&gt;())\n</code></pre>\n\n<p>as I understand, this is because of:</p>\n\n<pre><code>pub struct Discriminant&lt;T&gt;(u64, PhantomData&lt;fn() -&gt; T&gt;);\n</code></pre>\n\n<p>What is the sense in a 64bit discriminant? For code written by hand, 256 will be enough, for generated code 2^16 would be a huge number, and I can not even imagine why need 2^32. Why would it use 64 bits for this?</p>\n\n<p>Why does the compiler not optimize it for the <code>Option</code> case? 8 bits at the end of the structure should be enough.</p>\n"}, {"tags": ["rust", "hyper", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1548812665, "last_edit_date": 1548812665, "creation_date": 1520111883, "answer_id": 49089303, "question_id": 49087958, "link": "https://stackoverflow.com/questions/49087958/getting-multiple-urls-concurrently-with-hyper/49089303#49089303", "title": "Getting multiple URLs concurrently with Hyper", "body": "<blockquote>\n  <p>am I giving the work to the core in the wrong way?</p>\n</blockquote>\n\n<p>Yes, you are giving one request to Tokio and requiring that it complete before starting the next request. You've taken asynchronous code and forced it to be sequential.</p>\n\n<p>You need to give the reactor a single future that will perform different kinds of concurrent work:</p>\n\n<pre><code>use futures::{stream, Future, Stream}; // 0.1.25\nuse hyper::Client; // 0.12.23\nuse std::{\n    io::{self, Write},\n    iter,\n};\nuse tokio; // 0.1.15\n\nconst N_PARALLEL: usize = 1;\n\nfn main() {\n    let client = Client::new();\n\n    let uri = \"http://httpbin.org/ip\".parse().unwrap();\n    let uris = iter::repeat(uri).take(50);\n\n    let work = stream::iter_ok(uris)\n        .map(move |uri| client.get(uri))\n        .buffer_unordered(N_PARALLEL)\n        .and_then(|res| {\n            println!(\"Response: {}\", res.status());\n            res.into_body()\n                .concat2()\n                .map_err(|e| panic!(\"Error collecting body: {}\", e))\n        })\n        .for_each(|body| {\n            io::stdout()\n                .write_all(&amp;body)\n                .map_err(|e| panic!(\"Error writing: {}\", e))\n        })\n        .map_err(|e| panic!(\"Error making request: {}\", e));\n\n    tokio::run(work);\n}\n</code></pre>\n\n<p>With <code>N_PARALLEL</code> set to 1:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>real    0m2.279s\nuser    0m0.193s\nsys     0m0.065s\n</code></pre>\n\n<p>And set to 10:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>real    0m0.529s\nuser    0m0.186s\nsys     0m0.075s\n</code></pre>\n"}], "owner": {"reputation": 1583, "user_id": 964375, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/38430929bc031983e074dafea21b3d88?s=128&d=identicon&r=PG", "display_name": "user964375", "link": "https://stackoverflow.com/users/964375/user964375"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1166, "favorite_count": 2, "accepted_answer_id": 49089303, "answer_count": 1, "score": 3, "last_activity_date": 1548812665, "creation_date": 1520103234, "last_edit_date": 1520111107, "question_id": 49087958, "link": "https://stackoverflow.com/questions/49087958/getting-multiple-urls-concurrently-with-hyper", "title": "Getting multiple URLs concurrently with Hyper", "body": "<p>I am trying to adapt the <a href=\"https://hyper.rs/guides/client/basic/\" rel=\"nofollow noreferrer\">Hyper basic client example</a> to get multiple URLs concurrently.</p>\n\n<p>This is the code I currently have:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio_core;\n\nuse std::io::{self, Write};\nuse std::iter;\nuse futures::{Future, Stream};\nuse hyper::Client;\nuse tokio_core::reactor::Core;\n\nfn get_url() {\n    let mut core = Core::new().unwrap();\n    let client = Client::new(&amp;core.handle());\n    let uris: Vec&lt;_&gt; = iter::repeat(\"http://httpbin.org/ip\".parse().unwrap()).take(50).collect();\n    for uri in uris {\n        let work = client.get(uri).and_then(|res| {\n            println!(\"Response: {}\", res.status());\n\n            res.body().for_each(|chunk| {\n                io::stdout()\n                    .write_all(&amp;chunk)\n                    .map_err(From::from)\n            })\n        });\n        core.run(work).unwrap();\n    }\n}\n\nfn main() {\n    get_url();\n}\n</code></pre>\n\n<p>It doesn't seem to be acting concurrently (it takes a long time to complete), am I giving the work to the core in the wrong way?</p>\n"}, {"tags": ["rust", "petgraph"], "answers": [{"comments": [{"owner": {"reputation": 2451, "user_id": 4388775, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ajn8C.jpg?s=128&g=1", "display_name": "L. Meyer", "link": "https://stackoverflow.com/users/4388775/l-meyer"}, "edited": false, "score": 0, "creation_date": 1520196949, "post_id": 49089989, "comment_id": 85205923, "body": "Nice! One remark though, I need to encapsulate this into a function: <code>fn from_json(json_str: &amp;str) -&gt; Result&lt;DiGraphMap&lt;&amp;str, ()&gt;, Error&gt;</code> but I get <code>json_value</code>does not live long enough."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1520198470, "last_edit_date": 1520198470, "creation_date": 1520116784, "answer_id": 49089989, "question_id": 49087693, "link": "https://stackoverflow.com/questions/49087693/create-a-petgraph-graph-from-a-vecstring-string-loaded-from-json/49089989#49089989", "title": "Create a Petgraph graph from a Vec&lt;(String, String)&gt; loaded from JSON", "body": "<blockquote>\n  <p>Change the graph type to <code>DiGraphMap::&lt;String, ()&gt;</code>, however it does not accept it.</p>\n</blockquote>\n\n<p>A <code>GraphMap</code> requires that the node type be copyable. <code>String</code> does not implement <code>Copy</code>.</p>\n\n<blockquote>\n  <p>Transform a <code>Vec&lt;(String, String)&gt;</code> into a <code>Vec&lt;(&amp;str, &amp;str)&gt;</code></p>\n</blockquote>\n\n<p>As mentioned in the question you linked, this is impossible. What you <em>can</em> do is create a <em>second</em> <code>Vec</code> with <code>&amp;str</code> that reference the original <code>String</code>s:</p>\n\n<pre><code>let a: Vec&lt;(String, String)&gt; = vec![(\"a\".into(), \"b\".into())];\n\nlet b: Vec&lt;(&amp;str, &amp;str)&gt; = a.iter()\n    .map(|&amp;(ref x, ref y)| (x.as_str(), y.as_str()))\n    .collect();\n</code></pre>\n\n<hr>\n\n<p>However, that's not needed in this case. Instead, read the JSON data into a data structure that models a map (I chose <code>BTreeMap</code>) and leave the <code>String</code>s there. You can then construct an iterator of pairs of references to those <code>String</code>s, building the graph from that:</p>\n\n<pre><code>extern crate petgraph;\nextern crate serde_json;\n\nuse petgraph::prelude::*;\nuse std::collections::BTreeMap;\nuse std::iter;\n\nfn main() {\n    let data = r#\"{\n      \"A\": [ \"B\" ],\n      \"B\": [ \"C\", \"D\" ],\n      \"D\": [ \"E\", \"F\" ]\n    }\"#;\n\n    let json_value: BTreeMap&lt;String, Vec&lt;String&gt;&gt; =\n        serde_json::from_str(data).unwrap();\n\n    let edges = json_value\n        .iter()\n        .flat_map(|(k, vs)| {\n            let vs = vs.iter().map(|v| v.as_str());\n            iter::repeat(k.as_str()).zip(vs)\n        });\n\n    let graph: DiGraphMap&lt;_, ()&gt; = edges.collect();\n}\n</code></pre>\n\n<blockquote>\n  <p>I need to encapsulate this into a function</p>\n</blockquote>\n\n<p>This is <em>barely</em> possible to do. Since JSON strings contain UTF-8 data, Serde allows you to get references to original input strings. You need to remember that your <code>graph</code> <em>cannot</em> outlive  <code>input</code>:</p>\n\n<pre><code>fn main() {\n    let data = r#\"{\n      \"A\": [ \"B\" ],\n      \"B\": [ \"C\", \"D\" ],\n      \"D\": [ \"E\", \"F\" ]\n    }\"#;\n\n    let graph = example(data);\n}\n\nfn example(data: &amp;str) -&gt; serde_json::Result&lt;DiGraphMap&lt;&amp;str, ()&gt;&gt; {\n    let json_value: BTreeMap&lt;&amp;str, Vec&lt;&amp;str&gt;&gt; = serde_json::from_str(data)?;\n\n    let edges = json_value\n        .into_iter()\n        .flat_map(|(k, vs)| iter::repeat(k).zip(vs));\n\n    Ok(edges.collect())\n}\n</code></pre>\n"}], "owner": {"reputation": 2451, "user_id": 4388775, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ajn8C.jpg?s=128&g=1", "display_name": "L. Meyer", "link": "https://stackoverflow.com/users/4388775/l-meyer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 449, "favorite_count": 2, "accepted_answer_id": 49089989, "answer_count": 1, "score": 3, "last_activity_date": 1580252312, "creation_date": 1520101699, "last_edit_date": 1580252312, "question_id": 49087693, "link": "https://stackoverflow.com/questions/49087693/create-a-petgraph-graph-from-a-vecstring-string-loaded-from-json", "title": "Create a Petgraph graph from a Vec&lt;(String, String)&gt; loaded from JSON", "body": "<p>I'm trying to create a petgraph <a href=\"https://docs.rs/petgraph/0.4.11/petgraph/graph/struct.Graph.html\" rel=\"nofollow noreferrer\"><code>Graph</code></a> from JSON data. The JSON contains the edges of the graph, the key represents the starting vertex and the value is a list of adjacent vertices. It's possible to <a href=\"https://docs.rs/petgraph/0.4.11/petgraph/graphmap/struct.GraphMap.html#method.from_edges\" rel=\"nofollow noreferrer\">generate a graph with a vector of edges</a>.</p>\n\n<p>I managed to create a <code>Vec&lt;(String, String))&gt;</code> but not a <code>Vec&lt;(&amp;str, &amp;str)&gt;</code> as expected. </p>\n\n<pre><code>extern crate petgraph;\nextern crate serde_json;\n\nuse petgraph::prelude::*;\nuse serde_json::{Value, Error};\n\nfn main() {\n    let data = r#\"{\n      \"A\": [ \"B\" ],\n      \"B\": [ \"C\", \"D\" ],\n      \"D\": [ \"E\", \"F\" ]\n    }\"#;\n    let json_value: Value = serde_json::from_str(data).unwrap();\n    let mut edges: Vec&lt;(String, String)&gt; = vec![];\n    if let Value::Object(map) = json_value {\n        for (from_edge, array) in &amp;map {\n            if let &amp;Value::Array(ref array_value) = array {\n                for edge in array_value {\n                    if let &amp;Value::String(ref to_edge) = edge {\n                        edges.push((from_edge.clone(), to_edge.clone()))\n                    }\n                }\n            }\n        }\n    }\n    // let graph = DiGraphMap::&lt;&amp;str, ()&gt;::from_edges(edges);\n    //             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct\n    //             `std::string::String`, found &amp;str\n\n}\n</code></pre>\n\n<p>I tried different things:</p>\n\n<ul>\n<li>Change the graph type to <code>DiGraphMap::&lt;String, ()&gt;</code>, however it does not accept it.</li>\n<li>Transform a <code>Vec&lt;(String, String)&gt;</code> into a <code>Vec&lt;(&amp;str, &amp;str)&gt;</code>. I read <a href=\"https://stackoverflow.com/questions/41179659/convert-vecstring-into-a-slice-of-str-in-rust\">this post</a> but it didn't help.</li>\n<li><code>edges.push((&amp;\"a\", &amp;\"b\"))</code> works but not <code>edges.push((&amp;from.clone(), &amp;to.clone()))</code>.</li>\n</ul>\n\n<p>There is probably a better way to extract the edges here.</p>\n"}, {"tags": ["string", "enums", "static", "rust", "optional"], "answers": [{"comments": [{"owner": {"reputation": 1809, "user_id": 1519631, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/54b21bb265435cde76cc295bfcae2570?s=128&d=identicon&r=PG", "display_name": "mdedetrich", "link": "https://stackoverflow.com/users/1519631/mdedetrich"}, "edited": false, "score": 0, "creation_date": 1520089301, "post_id": 49085385, "comment_id": 85176354, "body": "I understand that you can do <code>Some(literal) =&gt; print!(&quot;{}&quot;, literal),</code>, the thing is that the <code>literal</code> value is a string static literal and <code>print!(literal)</code> should therefore work.  Unless I am mistaken, if you do <code>print!(&quot;{}&quot;,literal)</code>, this defeats the point of using string static literals in the first place as it will have worst performance (since you are going to be casting the string static literal to a normal string).  To be clear, if you don&#39;t use <code>Option</code> the code works fine, <code>print!(literal)</code> will work since the compiler can infer its a static string literal."}, {"owner": {"reputation": 227, "user_id": 3740219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edd0aaf2ca00de2ce7edb1003471071e?s=128&d=identicon&r=PG", "display_name": "Nuchs", "link": "https://stackoverflow.com/users/3740219/nuchs"}, "reply_to_user": {"reputation": 1809, "user_id": 1519631, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/54b21bb265435cde76cc295bfcae2570?s=128&d=identicon&r=PG", "display_name": "mdedetrich", "link": "https://stackoverflow.com/users/1519631/mdedetrich"}, "edited": false, "score": 0, "creation_date": 1520090703, "post_id": 49085385, "comment_id": 85176810, "body": "Are you sure that works? I tried <code>let f = &quot;Hello&quot;; println!(f); </code> and got &#39;error: expected a literal&#39;. As far as I&#39;m aware a literal is the actual value appearing in the source code. In your match statement you create a new binding called literal but its not actually a literal value, hence the error."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1809, "user_id": 1519631, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/54b21bb265435cde76cc295bfcae2570?s=128&d=identicon&r=PG", "display_name": "mdedetrich", "link": "https://stackoverflow.com/users/1519631/mdedetrich"}, "edited": false, "score": 1, "creation_date": 1520091065, "post_id": 49085385, "comment_id": 85176933, "body": "@mdedetrich <code>literal</code> is not a literal. Read e.g. <a href=\"https://stackoverflow.com/questions/27734708/println-error-expected-a-literal-format-argument-must-be-a-string-literal?noredirect=1&amp;lq=1\">println! error: expected a literal / format argument must be a string literal</a> and <a href=\"https://stackoverflow.com/questions/485119/what-does-the-word-literal-mean?noredirect=1&amp;lq=1\">What does the word \u201cliteral\u201d mean?</a>"}, {"owner": {"reputation": 1809, "user_id": 1519631, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/54b21bb265435cde76cc295bfcae2570?s=128&d=identicon&r=PG", "display_name": "mdedetrich", "link": "https://stackoverflow.com/users/1519631/mdedetrich"}, "edited": false, "score": 0, "creation_date": 1520094691, "post_id": 49085385, "comment_id": 85178286, "body": "Thanks for the links, I realized the Rust compiler isn&#39;t smart enough to figure out that its still a static literal string. The rust compiler does carry over type information in the AST, but not whether the variable was statically defined as a literal."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "reply_to_user": {"reputation": 1809, "user_id": 1519631, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/54b21bb265435cde76cc295bfcae2570?s=128&d=identicon&r=PG", "display_name": "mdedetrich", "link": "https://stackoverflow.com/users/1519631/mdedetrich"}, "edited": false, "score": 0, "creation_date": 1520098643, "post_id": 49085385, "comment_id": 85179692, "body": "@mdedetrich The format parameter to <code>print!</code> is effectively code (a domain specific language), not data. The <code>print!</code> macro generates different code depending on its value, i.e. it is a compiler that translates the DSL to rust. So there must only be one possible DSL program for each macro expansion of <code>print!</code>."}], "tags": [], "owner": {"reputation": 227, "user_id": 3740219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edd0aaf2ca00de2ce7edb1003471071e?s=128&d=identicon&r=PG", "display_name": "Nuchs", "link": "https://stackoverflow.com/users/3740219/nuchs"}, "is_accepted": false, "score": 2, "last_activity_date": 1520088502, "creation_date": 1520088502, "answer_id": 49085385, "question_id": 49085213, "link": "https://stackoverflow.com/questions/49085213/matching-on-an-option-static-string-literal-in-rust/49085385#49085385", "title": "Matching on an Option static string literal in Rust", "body": "<p>I think that the problem is this line</p>\n\n<pre><code>Some(literal) =&gt; print!(literal);\n</code></pre>\n\n<p>It should be </p>\n\n<pre><code>Some(literal) =&gt; print!(\"{}\", literal),\n</code></pre>\n\n<p>The same as you've done in the None case. </p>\n\n<p>I believe println! uses the format! macro and according to the rust docs</p>\n\n<p>\"The first argument format! receives is a format string. This must be a string literal.\"  </p>\n\n<p><a href=\"https://doc.rust-lang.org/std/macro.format.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/macro.format.html</a></p>\n"}], "owner": {"reputation": 1809, "user_id": 1519631, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/54b21bb265435cde76cc295bfcae2570?s=128&d=identicon&r=PG", "display_name": "mdedetrich", "link": "https://stackoverflow.com/users/1519631/mdedetrich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 443, "favorite_count": 0, "closed_date": 1520094702, "answer_count": 1, "score": 0, "last_activity_date": 1520094757, "creation_date": 1520087502, "last_edit_date": 1520094757, "question_id": 49085213, "link": "https://stackoverflow.com/questions/49085213/matching-on-an-option-static-string-literal-in-rust", "closed_reason": "Duplicate", "title": "Matching on an Option static string literal in Rust", "body": "<p>EDIT: It turns out that the Rust compiler is not smart enough to carry over information about whether or not a variable was statically defined. At the point when you pattern match, the compiler only knows that its a String.</p>\n\n<p>I am trying to make a parser in Rust and I have already defined a <code>Token</code> enum as so.</p>\n\n<pre><code>pub enum Constant {\n    String(String),\n}\n\npub enum Token {\n    KwIf,\n    KwThen,\n    KwElse,\n    Constant(Constant),\n}\n</code></pre>\n\n<p>I have also written a <code>literal</code> function, the important bit is that this function returns static strings (i.e. <code>&amp;'static str</code>), because of performance reasons (the strings will also never change so it makes sense for them to be constant throughout the lifetime of the program).</p>\n\n<pre><code>impl Token {\n    pub fn literal(&amp;self) -&gt;  Option&lt;&amp;'static str&gt; {\n        match self {\n            &amp;Token::KwIf =&gt; Some(\"if\"),\n            &amp;Token::KwThen =&gt; Some(\"then\"),\n            &amp;Token::KwElse =&gt; Some(\"else\"),\n            _ =&gt; None,\n        }\n    }\n}\n</code></pre>\n\n<p>The issue I have right now is how would you pattern match against the <code>literal</code> function and use the rust <code>print!</code> function to directly print the literal string, i.e. assuming I write something like this</p>\n\n<pre><code>use Constant::*;\npub fn print_token(token: Token) {\n    match token.literal() {\n        Some(literal) =&gt; print!(literal);\n        None =&gt; match token {\n            Token::Constant(constant) =&gt; match constant {\n                String(string) =&gt; print!(\"{}\", string),\n                _ =&gt; panic!(\"Unexpected token\"),\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The issue is that I get a compile error when I try to print this literal, i.e. the compile error I get is <code>error: format argument must be a string literal.</code> I have tried many combinations of how to print the static string literal without having to cast it to a normal <code>String</code> (which of course defeats the purpose of using a static string literal in the first place).</p>\n\n<p>Alternately is there a better way to approach the problem I am trying to solve, I am making a parser for a language and as can be soon, I am coding up the tokens as well parser/printer.</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 0, "creation_date": 1520085850, "post_id": 49084635, "comment_id": 85175167, "body": "<code>my processor (i5-7300u) is able to do two adds at once for u16 but not for u32 or u64</code> no, it&#39;ll only do multiple operations at once with <a href=\"https://en.wikipedia.org/wiki/SIMD\" rel=\"nofollow noreferrer\">SIMD</a>, unless you manage to do pseudo SIMD within integer registers in some cases. And using a 16-bit type on modern 32 or 64-bit computers <a href=\"https://stackoverflow.com/q/163254/995714\">would be slower</a>, so avoid it unless you have bandwidth limit (like in an array)"}, {"owner": {"reputation": 1622, "user_id": 1563394, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/67835df71913e21410945dfa8c33d70f?s=128&d=identicon&r=PG", "display_name": "lwi", "link": "https://stackoverflow.com/users/1563394/lwi"}, "reply_to_user": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 0, "creation_date": 1520087801, "post_id": 49084635, "comment_id": 85175835, "body": "Okay, so my assumption seems to be wrong. Yet, if your claim holds then sift2 should be faster, shouldn&#39;t it? Also, the second answer (not the accepted one) in the referenced thread claims that 16 bit arithmetics should make no difference at all due to a compatibility layer. Thus, I am still confused why I see the the u16 being faster  ..."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 2, "creation_date": 1520101662, "post_id": 49084635, "comment_id": 85180833, "body": "have you tried running it under perf? @L\u01b0uV\u0129nhPh&#250;c <i>no, it&#39;ll only do multiple operations at once with SIMD</i> - that&#39;s a bit too broad of a statement. for simple instructions like mov, lea and add you can get &gt; 1IPC on modern processors since the pipelines have multiple execution units for those that can process instructions in parallel."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1520101953, "post_id": 49084635, "comment_id": 85180931, "body": "My first thought would be to avoid the vector, and instead pass a mutable slice of bool of the right size. It&#39;d great clarify the code if all the <code>Vec</code> related code disappeared. I&#39;d also use <code>unsafe</code> gets to avoid panicking for the same reasons. I don&#39;t expect either to significantly change the measurements, just clean-up the assembly to make it more readable (and being able to better spot the differences)."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1520117263, "post_id": 49084635, "comment_id": 85185562, "body": "When I rust the benchmarks on my computer (using an Intel Core i7-4770K on Linux), both versions are about the same speed (the difference is within the error margin)."}, {"owner": {"reputation": 1622, "user_id": 1563394, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/67835df71913e21410945dfa8c33d70f?s=128&d=identicon&r=PG", "display_name": "lwi", "link": "https://stackoverflow.com/users/1563394/lwi"}, "edited": false, "score": 0, "creation_date": 1520119971, "post_id": 49084635, "comment_id": 85186232, "body": "Well, I just double checked if this was a just a outlier result (see edits), but the bench results still differ when using a vector size of 1&lt;&lt;15. For all other sizes the functions have approx same running time. I have no idea why and this behavior feels more and more esoteric."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1520120840, "post_id": 49084635, "comment_id": 85186428, "body": "I&#39;d note that you&#39;re bench-marking with unstable features on an unstable release. This has the potential to introduce anomalies which cast into doubt any general conclusions about the performance of 16 vs 32 bit integer performance in Rust; you might just be benchmarking quirks in the unstable version and/or features. If you can rework it to run on a stable Rust using only stable features, that would be more telling."}, {"owner": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1520155004, "post_id": 49084635, "comment_id": 85192737, "body": "@the8472 of course multiple instructions can be run at once under superscalar, but it&#39;s not like you just decrease the variable size and suddenly more variables can be calculated at once for the same operation (except for autovectorization)"}], "answers": [{"tags": [], "owner": {"reputation": 176, "user_id": 2965018, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sjvcF.jpg?s=128&g=1", "display_name": "Adrien M.", "link": "https://stackoverflow.com/users/2965018/adrien-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1520209682, "creation_date": 1520209682, "answer_id": 49101973, "question_id": 49084635, "link": "https://stackoverflow.com/questions/49084635/why-is-the-same-function-with-a-different-integer-parameter-size-faster/49101973#49101973", "title": "Why is the same function with a different integer parameter size faster?", "body": "<p>I never tried Rust, but I know some good tools to do such performance analysis. So while it may not fully answer your question, you'll get tools to dig more into this. </p>\n\n<p>When trying to understand low-level performance, you must look on the generated assembly, which you seems to have done by the output you provided. However, this is pretty unreadable like this. That's where my predilection tool comes in the game: <a href=\"https://godbolt.org\" rel=\"nofollow noreferrer\">Compiler Explorer</a>. You can see <a href=\"https://godbolt.org/g/sNg23G\" rel=\"nofollow noreferrer\">your code here</a></p>\n\n<p>From the generated assembly, we see some differences. Let's just focus on 2 elements of the loops (you can check the others, but the idea &amp; result is the same)</p>\n\n<p>The test <strong>while</strong> in 32 bits: </p>\n\n<pre><code>mov     rax, qword ptr [rbp - 112]\ncmp     qword ptr [rbp - 64], rax\njb      .LBB124_5\n</code></pre>\n\n<p>And the same in 16 bits:</p>\n\n<pre><code>mov     ax, word ptr [rbp - 98]\ncmp     word ptr [rbp - 52], ax\njb      .LBB125_5\n</code></pre>\n\n<p><strong>mark_sieve</strong> in 32:</p>\n\n<pre><code>.LBB124_8:\n    mov     rax, qword ptr [rbp - 64]\n    mov     qword ptr [rbp - 48], rax\n    mov     rsi, qword ptr [rbp - 48]\n    lea     rdi, [rbp - 96]\n    call    &lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::index_mut\n    mov     qword ptr [rbp - 136], rdx\n    mov     qword ptr [rbp - 144], rax\n    jmp     .LBB124_9\n.LBB124_9:\n    mov     rdx, qword ptr [rbp - 56]\n    mov     rdi, qword ptr [rbp - 144]\n    mov     rsi, qword ptr [rbp - 136]\n    call    example::mark_sieve\n    jmp     .LBB124_10\n</code></pre>\n\n<p>And in 16:</p>\n\n<pre><code>.LBB125_8:\n    movzx   eax, word ptr [rbp - 52]\n    mov     ecx, eax\n    mov     qword ptr [rbp - 48], rcx\n    mov     rsi, qword ptr [rbp - 48]\n    lea     rdi, [rbp - 80]\n    call    &lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::index_mut\n    mov     qword ptr [rbp - 120], rdx\n    mov     qword ptr [rbp - 128], rax\n    jmp     .LBB125_9\n.LBB125_9:\n    movzx   eax, word ptr [rbp - 50]\n    mov     edx, eax\n    mov     rdi, qword ptr [rbp - 128]\n    mov     rsi, qword ptr [rbp - 120]\n    call    example::mark_sieve\n    jmp     .LBB125_10\n</code></pre>\n\n<p>We can see some differences in this code:</p>\n\n<ul>\n<li>The u16 code can use 16bits (ax, cx, dc) or 32bits (eax, ecx, edx) registers, while the u32 code only uses 64bits (rax, rcd, rdx). </li>\n<li>u16 code uses <strong>movzx</strong> instead of <strong>mov</strong> for pointer deref. </li>\n<li>u16 reads 16bits or memory (word) while u32 reads 64bits (qword). </li>\n</ul>\n\n<p>For these different instructions, you can see their relative execution time difference looking at the excellent <a href=\"http://www.agner.org/optimize/instruction_tables.pdf\" rel=\"nofollow noreferrer\">Agner Instruction Tables</a>. (I would love to see them integrated in compiler explorer btw).\nYou CPU seems to be a KabyLake (so we'll use the Skylake architecture) so we'll take the tables starting page 231 (read this page for getting the abbreviations used in the tables). </p>\n\n<p>From Agner tables, the number of uops between a <strong>mov r64,m</strong> and a <strong>movzx r,m</strong> are the same (1 uop), but the mov adds 2 cycles of latency.</p>\n\n<p>The different accumulators also changes some optimizations done by the processor.</p>\n\n<p>The compiler also performs other architecture dependent optimizations, like loop unrolling depending on the number of ALU available on the CPU. So depending on the compiler decisions, your code may behave differently between different CPUs.</p>\n\n<p>The difference may also be due to code alignment, or cache optimization. </p>\n\n<p>Regarding the power-management differences, this may by impacted by 2 elements : Frequency capping, and C-States management. The cstates are states where the cpu goes into different sleep states for short period of time. The impact of sleep/wakeup on the internals of a cpu are up to the firmware. So it's not something we can really check in detail (the analysis would also alter the results).</p>\n\n<p>I made <a href=\"https://medium.com/@saruspete/meltdown-spectre-attacks-in-depth-b7bc94756afe\" rel=\"nofollow noreferrer\">a post about understanding Meltdown/Spectre attack</a>, which explains the different optimizations a CPU can do under the hood (and that even assembly cannot reflect). You may also want to take a look at it to better understand why CPU optimization is hard, as we can't control a lot of parameters.</p>\n\n<p>Happy hacking !</p>\n"}], "owner": {"reputation": 1622, "user_id": 1563394, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/67835df71913e21410945dfa8c33d70f?s=128&d=identicon&r=PG", "display_name": "lwi", "link": "https://stackoverflow.com/users/1563394/lwi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 490, "favorite_count": 2, "accepted_answer_id": 49101973, "answer_count": 1, "score": 7, "last_activity_date": 1520209682, "creation_date": 1520083580, "last_edit_date": 1592644375, "question_id": 49084635, "link": "https://stackoverflow.com/questions/49084635/why-is-the-same-function-with-a-different-integer-parameter-size-faster", "title": "Why is the same function with a different integer parameter size faster?", "body": "<p>Motivated by the book <em>From Mathematics to Generic Programming</em>, I am playing around with functions and different integer sizes.</p>\n<p>I have two different prime sieve implementations that work either with <code>u16</code> or <code>u32</code>. I benchmark them with <code>cargo bench</code> and the <code>u16</code> method is always a little faster than the <code>u32</code> method.</p>\n<p>Why is this the case? My assumption is that my processor (i5-7300u) is able to do two adds at once for <code>u16</code> but not for <code>u32</code> or <code>u64</code>. Yet, I have no idea how to validate this. I've attached the assembly.</p>\n<p><strong>Benchmark results</strong></p>\n<blockquote>\n<p>test tests::bench_sift2     ... bench:      74,093 ns/iter (+/- 3,765)</p>\n<p>test tests::bench_sift2_u16 ... bench:      61,136 ns/iter (+/- 3,389)</p>\n</blockquote>\n<p><strong>EDIT</strong></p>\n<p>Playing around with different array sizes and with the idea of using boolean arrays instead of vectors results in approx. the same speed for both functions. Actually the performance difference is only significant when the size of both vectors is 1&lt;&lt;15.</p>\n<p><strong>EDIT 2</strong></p>\n<p>Some interesting observation: I running this code on an windows surface computer with windows 10 Pro 10.0.1. More or less by accident, I just run the benchmark with different power saving configurations. When I set the configuration to highest performance, I see more or less the results reported below. If I set the configuration to any other level, I see results where both functions seem to behave the same, but the measurement error increases drastically.</p>\n<p><strong>Rust Code</strong></p>\n<pre><code>#![feature(iterator_step_by)]\n#![feature(test)]\n\nextern crate test;\n\nfn main() {\n   let vec = sift2(1 &lt;&lt; 15);\n   // let vec = sift2_u16(1 &lt;&lt; 15);\n   println!(&quot;{}&quot;,vec[0]);\n}\n\n\nfn sift2(n: usize) -&gt; Vec&lt;bool&gt; {\n    let mut vec = vec![true; n];\n\n    let mut i = 0;\n    let mut index_square = 3;\n    let mut factor = 3;\n\n    while index_square &lt; n {\n        if vec[i] {\n            mark_sieve(&amp;mut vec[index_square..], factor);\n        }\n        i += 1;\n\n        index_square += factor;\n        factor += 2;\n        index_square += factor;\n    }\n\n    vec\n}\n\nfn sift2_u16(n: u16) -&gt; Vec&lt;bool&gt; {\n    let mut vec = vec![true; n as usize];\n\n    let mut i: u16 = 0;\n    let mut index_square: u16 = 3;\n    let mut factor: u16 = 3;\n\n    while index_square &lt; n {\n        if vec[i as usize] {\n            mark_sieve(&amp;mut vec[index_square as usize..], factor as usize);\n        }\n        i += 1;\n\n        index_square += factor;\n        factor += 2;\n        index_square += factor;\n    }\n\n    vec\n}\n\nfn mark_sieve(data: &amp;mut [bool], factor: usize) {\n    data.iter_mut().step_by(factor).for_each(|k| *k = false);\n}\n\n#[cfg(test)]\nmod tests {\n\n    use super::*;\n    use test::{black_box, Bencher};\n\n    #[bench]\n    fn bench_sift2(b: &amp;mut Bencher) {\n        b.iter(|| sift2(1 &lt;&lt; 15));\n    }\n\n    #[bench]\n    fn bench_sift2_u16(b: &amp;mut Bencher) {\n        b.iter(|| sift2_u16(1 &lt;&lt; 15));\n    }\n}\n</code></pre>\n<p><strong>generated assembly for sift2</strong></p>\n<pre><code>    .text\n    .def     _ZN3std2rt10lang_start17h0092a1d276f89f87E;\n    .scl    2;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN3std2rt10lang_start17h0092a1d276f89f87E\n    .globl  _ZN3std2rt10lang_start17h0092a1d276f89f87E\n    .p2align    4, 0x90\n_ZN3std2rt10lang_start17h0092a1d276f89f87E:\n.seh_proc _ZN3std2rt10lang_start17h0092a1d276f89f87E\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    movq    %r8, %r9\n    movq    %rdx, %rax\n    movq    %rcx, 32(%rsp)\n    leaq    vtable.4(%rip), %rdx\n    leaq    32(%rsp), %rcx\n    movq    %rax, %r8\n    callq   _ZN3std2rt19lang_start_internal17h273003faf754a099E\n    nop\n    addq    $40, %rsp\n    retq\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN3std2rt10lang_start17h0092a1d276f89f87E\n    .seh_endproc\n\n    .def     _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    .p2align    4, 0x90\n_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E:\n.seh_proc _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    callq   *(%rcx)\n    nop\n    addq    $40, %rsp\n    jmp _ZN58_$LT$$LP$$RP$$u20$as$u20$std..termination..Termination$GT$6report17h23aa27a926e2484dE\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    .seh_endproc\n\n    .def     _ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE\n    .p2align    4, 0x90\n_ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE:\n.seh_proc _ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    callq   *%rcx\n    nop\n    addq    $40, %rsp\n    jmp _ZN58_$LT$$LP$$RP$$u20$as$u20$std..termination..Termination$GT$6report17h23aa27a926e2484dE\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE\n    .seh_endproc\n\n    .def     _ZN4core3ptr13drop_in_place17h98ac405189abf599E;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN4core3ptr13drop_in_place17h98ac405189abf599E\n    .p2align    4, 0x90\n_ZN4core3ptr13drop_in_place17h98ac405189abf599E:\n    movq    8(%rcx), %rdx\n    testq   %rdx, %rdx\n    je  .LBB3_1\n    movq    (%rcx), %rcx\n    movl    $1, %r8d\n    jmp __rust_dealloc\n.LBB3_1:\n    retq\n\n    .def     _ZN4core3ptr13drop_in_place17hd909dec568d984beE;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN4core3ptr13drop_in_place17hd909dec568d984beE\n    .p2align    4, 0x90\n_ZN4core3ptr13drop_in_place17hd909dec568d984beE:\n    retq\n\n    .def     _ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE\n    .p2align    4, 0x90\n_ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE:\n.seh_proc _ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    callq   __rust_oom\n    ud2\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE\n    .seh_endproc\n\n    .def     _ZN8chapter34main17hfb06448c1bac2398E;\n    .scl    3;\n    .type   32;\n    .endef\n    .globl  __xmm@00000000000080000000000000008000\n    .section    .rdata,&quot;dr&quot;,discard,__xmm@00000000000080000000000000008000\n    .p2align    4\n__xmm@00000000000080000000000000008000:\n    .quad   32768\n    .quad   32768\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n    .p2align    4, 0x90\n_ZN8chapter34main17hfb06448c1bac2398E:\n.Lfunc_begin0:\n.seh_proc _ZN8chapter34main17hfb06448c1bac2398E\n    .seh_handler __CxxFrameHandler3, @unwind, @except\n    pushq   %rbp\n    .seh_pushreg 5\n    pushq   %r14\n    .seh_pushreg 14\n    pushq   %rsi\n    .seh_pushreg 6\n    pushq   %rdi\n    .seh_pushreg 7\n    pushq   %rbx\n    .seh_pushreg 3\n    subq    $128, %rsp\n    .seh_stackalloc 128\n    leaq    128(%rsp), %rbp\n    .seh_setframe 5, 128\n    .seh_endprologue\n    movq    $-2, -8(%rbp)\n    leaq    -56(%rbp), %r8\n    movl    $32768, %ecx\n    movl    $1, %edx\n    callq   __rust_alloc\n    movq    %rax, %rdi\n    testq   %rdi, %rdi\n    je  .LBB6_21\n    movl    $32768, %r14d\n    movl    $1, %edx\n    movl    $32768, %r8d\n    movq    %rdi, %rcx\n    callq   memset\n    movq    %rdi, -56(%rbp)\n    movaps  __xmm@00000000000080000000000000008000(%rip), %xmm0\n    movups  %xmm0, -48(%rbp)\n    xorl    %edx, %edx\n    movl    $3, %eax\n    movl    $3, %ecx\n    cmpb    $0, (%rdi,%rdx)\n    jne .LBB6_3\n    jmp .LBB6_10\n    .p2align    4, 0x90\n.LBB6_12:\n    addq    $2, %rax\n    movq    -56(%rbp), %rdi\n    cmpb    $0, (%rdi,%rdx)\n    je  .LBB6_10\n.LBB6_3:\n    cmpq    %rcx, %r14\n    jb  .LBB6_4\n    cmpq    %rcx, %r14\n    je  .LBB6_10\n    addq    %rdi, %r14\n    leaq    (%rdi,%rcx), %rdi\n    leaq    -1(%rax), %rsi\n    addq    $1, %rdi\n    .p2align    4, 0x90\n.LBB6_9:\n    movb    $0, -1(%rdi)\n    movq    %r14, %rbx\n    subq    %rdi, %rbx\n    addq    %rax, %rdi\n    cmpq    %rsi, %rbx\n    ja  .LBB6_9\n.LBB6_10:\n    addq    %rax, %rcx\n    addq    %rax, %rcx\n    addq    $2, %rcx\n    cmpq    $32767, %rcx\n    ja  .LBB6_14\n    addq    $1, %rdx\n    movq    -40(%rbp), %r14\n    cmpq    %rdx, %r14\n    ja  .LBB6_12\n.Ltmp6:\n    leaq    panic_bounds_check_loc.j(%rip), %rcx\n    movq    %r14, %r8\n    callq   _ZN4core9panicking18panic_bounds_check17h677ced4df3a8276eE\n.Ltmp7:\n    jmp .LBB6_6\n.LBB6_14:\n    movq    -40(%rbp), %rax\n    movq    %rax, -64(%rbp)\n    movups  -56(%rbp), %xmm0\n    movaps  %xmm0, -80(%rbp)\n    cmpq    $0, -64(%rbp)\n    je  .LBB6_15\n    movq    -80(%rbp), %rsi\n    movq    %rsi, -96(%rbp)\n    leaq    _ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h27a33a0bff6802a9E(%rip), %rax\n    movq    %rax, -88(%rbp)\n    leaq    ref.m(%rip), %rax\n    movq    %rax, -56(%rbp)\n    movq    $2, -48(%rbp)\n    leaq    ref.n(%rip), %rax\n    movq    %rax, -40(%rbp)\n    movq    $1, -32(%rbp)\n    leaq    -96(%rbp), %rax\n    movq    %rax, -24(%rbp)\n    movq    $1, -16(%rbp)\n.Ltmp2:\n    leaq    -56(%rbp), %rcx\n    callq   _ZN3std2io5stdio6_print17h38a18b84d105804dE\n.Ltmp3:\n    movq    -72(%rbp), %rdx\n    testq   %rdx, %rdx\n    je  .LBB6_19\n    movl    $1, %r8d\n    movq    %rsi, %rcx\n    callq   __rust_dealloc\n.LBB6_19:\n    nop\n    addq    $128, %rsp\n    popq    %rbx\n    popq    %rdi\n    popq    %rsi\n    popq    %r14\n    popq    %rbp\n    retq\n.LBB6_4:\n.Ltmp0:\n    movq    %r14, %rdx\n    callq   _ZN4core5slice22slice_index_order_fail17hbd1edce8e1fe586aE\n.Ltmp1:\n.LBB6_6:\n    ud2\n.LBB6_21:\n    movups  -48(%rbp), %xmm0\n    movaps  %xmm0, -80(%rbp)\n    movaps  -80(%rbp), %xmm0\n    movups  %xmm0, -48(%rbp)\n    leaq    -56(%rbp), %rcx\n    callq   _ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE\n    ud2\n.LBB6_15:\n.Ltmp4:\n    leaq    panic_bounds_check_loc.j(%rip), %rcx\n    xorl    %edx, %edx\n    xorl    %r8d, %r8d\n    callq   _ZN4core9panicking18panic_bounds_check17h677ced4df3a8276eE\n.Ltmp5:\n    jmp .LBB6_6\n    .seh_handlerdata\n    .long   ($cppxdata$_ZN8chapter34main17hfb06448c1bac2398E)@IMGREL\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n    .seh_endproc\n    .def     &quot;?dtor$13@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;;\n    .scl    3;\n    .type   32;\n    .endef\n    .p2align    4, 0x90\n&quot;?dtor$13@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;:\n.seh_proc &quot;?dtor$13@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;\n.LBB6_13:\n    movq    %rdx, 16(%rsp)\n    pushq   %rbp\n    .seh_pushreg 5\n    pushq   %r14\n    .seh_pushreg 14\n    pushq   %rsi\n    .seh_pushreg 6\n    pushq   %rdi\n    .seh_pushreg 7\n    pushq   %rbx\n    .seh_pushreg 3\n    subq    $32, %rsp\n    .seh_stackalloc 32\n    leaq    128(%rdx), %rbp\n    .seh_endprologue\n    leaq    -56(%rbp), %rcx\n    callq   _ZN4core3ptr13drop_in_place17h98ac405189abf599E\n    nop\n    addq    $32, %rsp\n    popq    %rbx\n    popq    %rdi\n    popq    %rsi\n    popq    %r14\n    popq    %rbp\n    retq\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n    .seh_endproc\n    .def     &quot;?dtor$20@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;;\n    .scl    3;\n    .type   32;\n    .endef\n    .p2align    4, 0x90\n&quot;?dtor$20@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;:\n.seh_proc &quot;?dtor$20@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;\n.LBB6_20:\n    movq    %rdx, 16(%rsp)\n    pushq   %rbp\n    .seh_pushreg 5\n    pushq   %r14\n    .seh_pushreg 14\n    pushq   %rsi\n    .seh_pushreg 6\n    pushq   %rdi\n    .seh_pushreg 7\n    pushq   %rbx\n    .seh_pushreg 3\n    subq    $32, %rsp\n    .seh_stackalloc 32\n    leaq    128(%rdx), %rbp\n    .seh_endprologue\n    leaq    -80(%rbp), %rcx\n    callq   _ZN4core3ptr13drop_in_place17h98ac405189abf599E\n    nop\n    addq    $32, %rsp\n    popq    %rbx\n    popq    %rdi\n    popq    %rsi\n    popq    %r14\n    popq    %rbp\n    retq\n.Lfunc_end0:\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n    .seh_endproc\n    .section    .xdata,&quot;dr&quot;,associative,_ZN8chapter34main17hfb06448c1bac2398E\n    .p2align    2\n$cppxdata$_ZN8chapter34main17hfb06448c1bac2398E:\n    .long   429065506\n    .long   2\n    .long   ($stateUnwindMap$_ZN8chapter34main17hfb06448c1bac2398E)@IMGREL\n    .long   0\n    .long   0\n    .long   6\n    .long   ($ip2state$_ZN8chapter34main17hfb06448c1bac2398E)@IMGREL\n    .long   120\n    .long   0\n    .long   1\n$stateUnwindMap$_ZN8chapter34main17hfb06448c1bac2398E:\n    .long   -1\n    .long   &quot;?dtor$13@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;@IMGREL\n    .long   -1\n    .long   &quot;?dtor$20@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;@IMGREL\n$ip2state$_ZN8chapter34main17hfb06448c1bac2398E:\n    .long   .Lfunc_begin0@IMGREL\n    .long   -1\n    .long   .Ltmp6@IMGREL+1\n    .long   0\n    .long   .Ltmp2@IMGREL+1\n    .long   1\n    .long   .Ltmp0@IMGREL+1\n    .long   0\n    .long   .Ltmp4@IMGREL+1\n    .long   1\n    .long   .Ltmp5@IMGREL+1\n    .long   -1\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n\n    .def     main;\n    .scl    2;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,main\n    .globl  main\n    .p2align    4, 0x90\nmain:\n.seh_proc main\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    movq    %rdx, %rax\n    movslq  %ecx, %r8\n    leaq    _ZN8chapter34main17hfb06448c1bac2398E(%rip), %rcx\n    movq    %rcx, 32(%rsp)\n    leaq    vtable.4(%rip), %rdx\n    leaq    32(%rsp), %rcx\n    movq    %rax, %r9\n    callq   _ZN3std2rt19lang_start_internal17h273003faf754a099E\n    nop\n    addq    $40, %rsp\n    retq\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,main\n    .seh_endproc\n\n    .section    .rdata,&quot;dr&quot;,one_only,vtable.4\n    .p2align    3\nvtable.4:\n    .quad   _ZN4core3ptr13drop_in_place17hd909dec568d984beE\n    .quad   8\n    .quad   8\n    .quad   _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    .quad   _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    .quad   _ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE\n\n    .section    .rdata,&quot;dr&quot;,one_only,str.i\n    .p2align    4\nstr.i:\n    .ascii  &quot;C:\\\\projects\\\\rust\\\\src\\\\liballoc\\\\vec.rs&quot;\n\n    .section    .rdata,&quot;dr&quot;,one_only,panic_bounds_check_loc.j\n    .p2align    3\npanic_bounds_check_loc.j:\n    .quad   str.i\n    .quad   36\n    .long   1551\n    .long   10\n\n    .section    .rdata,&quot;dr&quot;,one_only,str.k\nstr.k:\n\n    .section    .rdata,&quot;dr&quot;,one_only,str.l\nstr.l:\n    .byte   10\n\n    .section    .rdata,&quot;dr&quot;,one_only,ref.m\n    .p2align    3\nref.m:\n    .quad   str.k\n    .quad   0\n    .quad   str.l\n    .quad   1\n\n    .section    .rdata,&quot;dr&quot;,one_only,ref.n\n    .p2align    3\nref.n:\n    .quad   1\n    .quad   0\n    .quad   3\n    .zero   8\n    .quad   3\n    .zero   8\n    .long   32\n    .long   0\n    .byte   3\n    .zero   7\n</code></pre>\n<p><strong>generated assembly for sift2_u16</strong></p>\n<pre><code>U16\n    .text\n    .def     _ZN3std2rt10lang_start17h0092a1d276f89f87E;\n    .scl    2;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN3std2rt10lang_start17h0092a1d276f89f87E\n    .globl  _ZN3std2rt10lang_start17h0092a1d276f89f87E\n    .p2align    4, 0x90\n_ZN3std2rt10lang_start17h0092a1d276f89f87E:\n.seh_proc _ZN3std2rt10lang_start17h0092a1d276f89f87E\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    movq    %r8, %r9\n    movq    %rdx, %rax\n    movq    %rcx, 32(%rsp)\n    leaq    vtable.4(%rip), %rdx\n    leaq    32(%rsp), %rcx\n    movq    %rax, %r8\n    callq   _ZN3std2rt19lang_start_internal17h273003faf754a099E\n    nop\n    addq    $40, %rsp\n    retq\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN3std2rt10lang_start17h0092a1d276f89f87E\n    .seh_endproc\n\n    .def     _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    .p2align    4, 0x90\n_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E:\n.seh_proc _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    callq   *(%rcx)\n    nop\n    addq    $40, %rsp\n    jmp _ZN58_$LT$$LP$$RP$$u20$as$u20$std..termination..Termination$GT$6report17h23aa27a926e2484dE\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    .seh_endproc\n\n    .def     _ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE\n    .p2align    4, 0x90\n_ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE:\n.seh_proc _ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    callq   *%rcx\n    nop\n    addq    $40, %rsp\n    jmp _ZN58_$LT$$LP$$RP$$u20$as$u20$std..termination..Termination$GT$6report17h23aa27a926e2484dE\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE\n    .seh_endproc\n\n    .def     _ZN4core3ptr13drop_in_place17h98ac405189abf599E;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN4core3ptr13drop_in_place17h98ac405189abf599E\n    .p2align    4, 0x90\n_ZN4core3ptr13drop_in_place17h98ac405189abf599E:\n    movq    8(%rcx), %rdx\n    testq   %rdx, %rdx\n    je  .LBB3_1\n    movq    (%rcx), %rcx\n    movl    $1, %r8d\n    jmp __rust_dealloc\n.LBB3_1:\n    retq\n\n    .def     _ZN4core3ptr13drop_in_place17hd909dec568d984beE;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN4core3ptr13drop_in_place17hd909dec568d984beE\n    .p2align    4, 0x90\n_ZN4core3ptr13drop_in_place17hd909dec568d984beE:\n    retq\n\n    .def     _ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE;\n    .scl    3;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,_ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE\n    .p2align    4, 0x90\n_ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE:\n.seh_proc _ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    callq   __rust_oom\n    ud2\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE\n    .seh_endproc\n\n    .def     _ZN8chapter34main17hfb06448c1bac2398E;\n    .scl    3;\n    .type   32;\n    .endef\n    .globl  __xmm@00000000000080000000000000008000\n    .section    .rdata,&quot;dr&quot;,discard,__xmm@00000000000080000000000000008000\n    .p2align    4\n__xmm@00000000000080000000000000008000:\n    .quad   32768\n    .quad   32768\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n    .p2align    4, 0x90\n_ZN8chapter34main17hfb06448c1bac2398E:\n.Lfunc_begin0:\n.seh_proc _ZN8chapter34main17hfb06448c1bac2398E\n    .seh_handler __CxxFrameHandler3, @unwind, @except\n    pushq   %rbp\n    .seh_pushreg 5\n    pushq   %r14\n    .seh_pushreg 14\n    pushq   %rsi\n    .seh_pushreg 6\n    pushq   %rdi\n    .seh_pushreg 7\n    pushq   %rbx\n    .seh_pushreg 3\n    subq    $128, %rsp\n    .seh_stackalloc 128\n    leaq    128(%rsp), %rbp\n    .seh_setframe 5, 128\n    .seh_endprologue\n    movq    $-2, -8(%rbp)\n    leaq    -56(%rbp), %r8\n    movl    $32768, %ecx\n    movl    $1, %edx\n    callq   __rust_alloc\n    movq    %rax, %r14\n    testq   %r14, %r14\n    je  .LBB6_23\n    movl    $32768, %edi\n    movl    $1, %edx\n    movl    $32768, %r8d\n    movq    %r14, %rcx\n    callq   memset\n    movq    %r14, -56(%rbp)\n    movaps  __xmm@00000000000080000000000000008000(%rip), %xmm0\n    movups  %xmm0, -48(%rbp)\n    movw    $3, %r8w\n    xorl    %edx, %edx\n    movw    $3, %r9w\n    cmpb    $0, (%r14,%rdx)\n    jne .LBB6_3\n    jmp .LBB6_12\n    .p2align    4, 0x90\n.LBB6_14:\n    movq    -56(%rbp), %r14\n    cmpb    $0, (%r14,%rdx)\n    je  .LBB6_12\n.LBB6_3:\n    movzwl  %r9w, %ecx\n    cmpq    %rcx, %rdi\n    jb  .LBB6_4\n    testw   %r8w, %r8w\n    je  .LBB6_8\n    cmpq    %rcx, %rdi\n    je  .LBB6_12\n    addq    %r14, %rcx\n    movzwl  %r8w, %ebx\n    addq    %r14, %rdi\n    leaq    -1(%rbx), %rax\n    addq    $1, %rcx\n    .p2align    4, 0x90\n.LBB6_11:\n    movb    $0, -1(%rcx)\n    movq    %rdi, %rsi\n    subq    %rcx, %rsi\n    addq    %rbx, %rcx\n    cmpq    %rax, %rsi\n    ja  .LBB6_11\n.LBB6_12:\n    addl    %r8d, %r9d\n    addl    $2, %r8d\n    addw    %r8w, %r9w\n    js  .LBB6_16\n    addq    $1, %rdx\n    movq    -40(%rbp), %rdi\n    cmpq    %rdx, %rdi\n    ja  .LBB6_14\n.Ltmp8:\n    leaq    panic_bounds_check_loc.j(%rip), %rcx\n    movq    %rdi, %r8\n    callq   _ZN4core9panicking18panic_bounds_check17h677ced4df3a8276eE\n.Ltmp9:\n    jmp .LBB6_6\n.LBB6_16:\n    movq    -40(%rbp), %rax\n    movq    %rax, -64(%rbp)\n    movups  -56(%rbp), %xmm0\n    movaps  %xmm0, -80(%rbp)\n    cmpq    $0, -64(%rbp)\n    je  .LBB6_17\n    movq    -80(%rbp), %rsi\n    movq    %rsi, -96(%rbp)\n    leaq    _ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17h27a33a0bff6802a9E(%rip), %rax\n    movq    %rax, -88(%rbp)\n    leaq    ref.m(%rip), %rax\n    movq    %rax, -56(%rbp)\n    movq    $2, -48(%rbp)\n    leaq    ref.n(%rip), %rax\n    movq    %rax, -40(%rbp)\n    movq    $1, -32(%rbp)\n    leaq    -96(%rbp), %rax\n    movq    %rax, -24(%rbp)\n    movq    $1, -16(%rbp)\n.Ltmp4:\n    leaq    -56(%rbp), %rcx\n    callq   _ZN3std2io5stdio6_print17h38a18b84d105804dE\n.Ltmp5:\n    movq    -72(%rbp), %rdx\n    testq   %rdx, %rdx\n    je  .LBB6_21\n    movl    $1, %r8d\n    movq    %rsi, %rcx\n    callq   __rust_dealloc\n.LBB6_21:\n    nop\n    addq    $128, %rsp\n    popq    %rbx\n    popq    %rdi\n    popq    %rsi\n    popq    %r14\n    popq    %rbp\n    retq\n.LBB6_4:\n.Ltmp2:\n    movq    %rdi, %rdx\n    callq   _ZN4core5slice22slice_index_order_fail17hbd1edce8e1fe586aE\n.Ltmp3:\n    jmp .LBB6_6\n.LBB6_8:\n.Ltmp0:\n    leaq    ref.b(%rip), %rcx\n    callq   _ZN4core9panicking5panic17h42feaa2e0dc2c607E\n.Ltmp1:\n.LBB6_6:\n    ud2\n.LBB6_23:\n    movups  -48(%rbp), %xmm0\n    movaps  %xmm0, -80(%rbp)\n    movaps  -80(%rbp), %xmm0\n    movups  %xmm0, -48(%rbp)\n    leaq    -56(%rbp), %rcx\n    callq   _ZN61_$LT$alloc..heap..Heap$u20$as$u20$alloc..allocator..Alloc$GT$3oom17h59b46cc14d642c9aE\n    ud2\n.LBB6_17:\n.Ltmp6:\n    leaq    panic_bounds_check_loc.j(%rip), %rcx\n    xorl    %edx, %edx\n    xorl    %r8d, %r8d\n    callq   _ZN4core9panicking18panic_bounds_check17h677ced4df3a8276eE\n.Ltmp7:\n    jmp .LBB6_6\n    .seh_handlerdata\n    .long   ($cppxdata$_ZN8chapter34main17hfb06448c1bac2398E)@IMGREL\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n    .seh_endproc\n    .def     &quot;?dtor$15@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;;\n    .scl    3;\n    .type   32;\n    .endef\n    .p2align    4, 0x90\n&quot;?dtor$15@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;:\n.seh_proc &quot;?dtor$15@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;\n.LBB6_15:\n    movq    %rdx, 16(%rsp)\n    pushq   %rbp\n    .seh_pushreg 5\n    pushq   %r14\n    .seh_pushreg 14\n    pushq   %rsi\n    .seh_pushreg 6\n    pushq   %rdi\n    .seh_pushreg 7\n    pushq   %rbx\n    .seh_pushreg 3\n    subq    $32, %rsp\n    .seh_stackalloc 32\n    leaq    128(%rdx), %rbp\n    .seh_endprologue\n    leaq    -56(%rbp), %rcx\n    callq   _ZN4core3ptr13drop_in_place17h98ac405189abf599E\n    nop\n    addq    $32, %rsp\n    popq    %rbx\n    popq    %rdi\n    popq    %rsi\n    popq    %r14\n    popq    %rbp\n    retq\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n    .seh_endproc\n    .def     &quot;?dtor$22@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;;\n    .scl    3;\n    .type   32;\n    .endef\n    .p2align    4, 0x90\n&quot;?dtor$22@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;:\n.seh_proc &quot;?dtor$22@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;\n.LBB6_22:\n    movq    %rdx, 16(%rsp)\n    pushq   %rbp\n    .seh_pushreg 5\n    pushq   %r14\n    .seh_pushreg 14\n    pushq   %rsi\n    .seh_pushreg 6\n    pushq   %rdi\n    .seh_pushreg 7\n    pushq   %rbx\n    .seh_pushreg 3\n    subq    $32, %rsp\n    .seh_stackalloc 32\n    leaq    128(%rdx), %rbp\n    .seh_endprologue\n    leaq    -80(%rbp), %rcx\n    callq   _ZN4core3ptr13drop_in_place17h98ac405189abf599E\n    nop\n    addq    $32, %rsp\n    popq    %rbx\n    popq    %rdi\n    popq    %rsi\n    popq    %r14\n    popq    %rbp\n    retq\n.Lfunc_end0:\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n    .seh_endproc\n    .section    .xdata,&quot;dr&quot;,associative,_ZN8chapter34main17hfb06448c1bac2398E\n    .p2align    2\n$cppxdata$_ZN8chapter34main17hfb06448c1bac2398E:\n    .long   429065506\n    .long   2\n    .long   ($stateUnwindMap$_ZN8chapter34main17hfb06448c1bac2398E)@IMGREL\n    .long   0\n    .long   0\n    .long   6\n    .long   ($ip2state$_ZN8chapter34main17hfb06448c1bac2398E)@IMGREL\n    .long   120\n    .long   0\n    .long   1\n$stateUnwindMap$_ZN8chapter34main17hfb06448c1bac2398E:\n    .long   -1\n    .long   &quot;?dtor$15@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;@IMGREL\n    .long   -1\n    .long   &quot;?dtor$22@?0?_ZN8chapter34main17hfb06448c1bac2398E@4HA&quot;@IMGREL\n$ip2state$_ZN8chapter34main17hfb06448c1bac2398E:\n    .long   .Lfunc_begin0@IMGREL\n    .long   -1\n    .long   .Ltmp8@IMGREL+1\n    .long   0\n    .long   .Ltmp4@IMGREL+1\n    .long   1\n    .long   .Ltmp2@IMGREL+1\n    .long   0\n    .long   .Ltmp6@IMGREL+1\n    .long   1\n    .long   .Ltmp7@IMGREL+1\n    .long   -1\n    .section    .text,&quot;xr&quot;,one_only,_ZN8chapter34main17hfb06448c1bac2398E\n\n    .def     main;\n    .scl    2;\n    .type   32;\n    .endef\n    .section    .text,&quot;xr&quot;,one_only,main\n    .globl  main\n    .p2align    4, 0x90\nmain:\n.seh_proc main\n    subq    $40, %rsp\n    .seh_stackalloc 40\n    .seh_endprologue\n    movq    %rdx, %rax\n    movslq  %ecx, %r8\n    leaq    _ZN8chapter34main17hfb06448c1bac2398E(%rip), %rcx\n    movq    %rcx, 32(%rsp)\n    leaq    vtable.4(%rip), %rdx\n    leaq    32(%rsp), %rcx\n    movq    %rax, %r9\n    callq   _ZN3std2rt19lang_start_internal17h273003faf754a099E\n    nop\n    addq    $40, %rsp\n    retq\n    .seh_handlerdata\n    .section    .text,&quot;xr&quot;,one_only,main\n    .seh_endproc\n\n    .section    .rdata,&quot;dr&quot;,one_only,vtable.4\n    .p2align    3\nvtable.4:\n    .quad   _ZN4core3ptr13drop_in_place17hd909dec568d984beE\n    .quad   8\n    .quad   8\n    .quad   _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    .quad   _ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hac4aa92a66ec8c82E\n    .quad   _ZN4core3ops8function6FnOnce9call_once17h9a20945579719b9dE\n\n    .section    .rdata,&quot;dr&quot;,one_only,str.9\n    .p2align    4\nstr.9:\n    .ascii  &quot;assertion failed: step != 0&quot;\n\n    .section    .rdata,&quot;dr&quot;,one_only,str.a\n    .p2align    4\nstr.a:\n    .ascii  &quot;libcore\\\\iter\\\\iterator.rs&quot;\n\n    .section    .rdata,&quot;dr&quot;,one_only,ref.b\n    .p2align    3\nref.b:\n    .quad   str.9\n    .quad   27\n    .quad   str.a\n    .quad   24\n    .long   299\n    .long   9\n\n    .section    .rdata,&quot;dr&quot;,one_only,str.i\n    .p2align    4\nstr.i:\n    .ascii  &quot;C:\\\\projects\\\\rust\\\\src\\\\liballoc\\\\vec.rs&quot;\n\n    .section    .rdata,&quot;dr&quot;,one_only,panic_bounds_check_loc.j\n    .p2align    3\npanic_bounds_check_loc.j:\n    .quad   str.i\n    .quad   36\n    .long   1551\n    .long   10\n\n    .section    .rdata,&quot;dr&quot;,one_only,str.k\nstr.k:\n\n    .section    .rdata,&quot;dr&quot;,one_only,str.l\nstr.l:\n    .byte   10\n\n    .section    .rdata,&quot;dr&quot;,one_only,ref.m\n    .p2align    3\nref.m:\n    .quad   str.k\n    .quad   0\n    .quad   str.l\n    .quad   1\n\n    .section    .rdata,&quot;dr&quot;,one_only,ref.n\n    .p2align    3\nref.n:\n    .quad   1\n    .quad   0\n    .quad   3\n    .zero   8\n    .quad   3\n    .zero   8\n    .long   32\n    .long   0\n    .byte   3\n    .zero   7\n</code></pre>\n"}, {"tags": ["performance", "rust", "synchronization"], "answers": [{"comments": [{"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1520081116, "post_id": 49083405, "comment_id": 85173781, "body": "Thanks. I&#39;m learning rust, so know it little.  From your answer I can&#39;t  make it clearly. On an mutable struct reference Rust will apply <code>Mutex</code> so it blocking struct method call, is it exactly what you mean? But on immutable struct method call I can&#39;t grab the soul from you sentences. Please elaborate it , thanks"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1520101760, "post_id": 49083405, "comment_id": 85180864, "body": "Accessing immutable data is usually safe and incurs no runtime cost, unlike a mutex, what more do you need to know?"}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": true, "score": 5, "last_activity_date": 1520075638, "last_edit_date": 1520075638, "creation_date": 1520074711, "answer_id": 49083405, "question_id": 49082618, "link": "https://stackoverflow.com/questions/49082618/confused-about-performance-implications-of-sync/49083405#49083405", "title": "Confused about performance implications of Sync", "body": "<p>Java: Accesses to this object from multiple threads become a <em>synchronized</em> sequence of actions when going through this codepath.<br>\nRust: It is safe to access this type <em>synchronously</em> through a reference from multiple threads.</p>\n\n<p>(The two points above are not canonical definitions, they are just demonstrations how similar words can be used in sentences to obtain different meanings)</p>\n\n<p><code>synchronized</code> is implemented as a mutual exclusion lock at runtime. <code>Sync</code> is a compile time promise about runtime properties of a specific type that allows other types depend on those properties through trait bounds. A <code>Mutex</code> just happens to be one way one can provide <code>Sync</code> behavior. Immutable types usually provide this behavior too without any runtime cost.</p>\n\n<p>Generally you shouldn't rely on words having exactly the same meaning in different contexts. Java IO stream != java collection stream != RxJava reactive stream ~= tokio Stream. C volatile != java volatile. etc. etc.\nUltimately the prose matters a lot more than the keyword which are just shorthands.</p>\n"}], "owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 49083405, "answer_count": 1, "score": 3, "last_activity_date": 1520085292, "creation_date": 1520068808, "last_edit_date": 1520085292, "question_id": 49082618, "link": "https://stackoverflow.com/questions/49082618/confused-about-performance-implications-of-sync", "title": "Confused about performance implications of Sync", "body": "<p>I have a question about the marker trait <code>Sync</code> after reading <a href=\"https://doc.rust-lang.org/book/second-edition/ch16-04-extensible-concurrency-sync-and-send.html\" rel=\"nofollow noreferrer\">Extensible Concurrency with the Sync and Send Traits</a>.</p>\n\n<p>Java's \"synchronize\" means <strong>blocking</strong>, so I was very confused about how a Rust struct with <code>Sync</code> implemented whose method is executed on multiple threads would be effective. </p>\n\n<p>I searched but found no meaningful answer. I'm thinking about it this way: every thread will get the struct's reference synchronously (blocking), but call the method in parallel, is that true?</p>\n"}, {"tags": ["json", "rust", "serde"], "comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 2, "creation_date": 1520066688, "post_id": 49079533, "comment_id": 85169941, "body": "So in other words, deserialize <code>id</code> and <code>priority</code>, but not <code>payload</code>, and then later re-serialize an object with different <code>id</code> and/or <code>priority</code>, but the same (still serialized) <code>payload</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1520081713, "post_id": 49079533, "comment_id": 85173973, "body": "@BHustus yes, that seems correct. Another usage would be to move the payload to a new struct, changing the amount and types of metadata or even to output the payload by itself without any metadata."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 1, "creation_date": 1520112390, "post_id": 49079533, "comment_id": 85184290, "body": "After skimming through the docs a bit, it <i>seems</i> like the only way to do this via serde_json would be to create a custom implementation of <a href=\"https://docs.serde.rs/serde_json/de/trait.Read.html\" rel=\"nofollow noreferrer\">Read</a> that converts the entire <code>payload</code> value into a json substring, which could be plugged into a <a href=\"https://docs.serde.rs/serde_json/de/struct.Deserializer.html\" rel=\"nofollow noreferrer\">Deserializer</a> with <code>new</code>, and then do something similar with <code>Write</code> and <code>Format</code> for serialization. I hesitate to post it as a full answer because I&#39;m not too familiar with serde, myself."}, {"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1520960728, "post_id": 49079533, "comment_id": 85527418, "body": "write your own custom serializing and deserializing function for that struct? Use standard serde_json for the ones you want to inspect, and just a blob of bytes (base 64 or otherwise) for the DataBlob?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1537741985, "last_edit_date": 1537741985, "creation_date": 1521816687, "answer_id": 49452467, "question_id": 49079533, "link": "https://stackoverflow.com/questions/49079533/is-there-a-way-to-deserialize-arbitrary-json-using-serde-without-creating-fine-g/49452467#49452467", "title": "Is there a way to deserialize arbitrary JSON using Serde without creating fine-grained objects?", "body": "<p>This was added in serde_json 1.0.29 as the type <a href=\"https://docs.rs/serde_json/1.0.29/serde_json/value/struct.RawValue.html\" rel=\"nofollow noreferrer\"><code>RawValue</code></a>. It must be enabled using the <code>raw_value</code> feature and then placed behind a reference:</p>\n\n<pre><code>extern crate serde; // 1.0.79\n#[macro_use]\nextern crate serde_derive; // 1.0.79\nextern crate serde_json; // 1.0.30, features = [\"raw_value\"]\n\n#[derive(Serialize, Deserialize)]\nstruct DataBlob&lt;'a&gt; {\n    id: &amp;'a str,\n    priority: u8,\n    payload: &amp;'a serde_json::value::RawValue,\n}\n\nfn main() {\n    let input = r#\"{\n        \"id\": \"cat\",\n        \"priority\": 42,\n        \"payload\": [1, 2, 3, 4]\n    }\"#;\n\n    let parsed = serde_json::from_str::&lt;DataBlob&gt;(input).expect(\"Could not deserialize\");\n    let output = serde_json::to_string(&amp;parsed).expect(\"Could not serialize\");\n\n    assert!(output.contains(\"payload\"));\n}\n</code></pre>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1324, "favorite_count": 2, "accepted_answer_id": 49452467, "answer_count": 1, "score": 24, "last_activity_date": 1537741985, "creation_date": 1520038488, "last_edit_date": 1520038938, "question_id": 49079533, "link": "https://stackoverflow.com/questions/49079533/is-there-a-way-to-deserialize-arbitrary-json-using-serde-without-creating-fine-g", "title": "Is there a way to deserialize arbitrary JSON using Serde without creating fine-grained objects?", "body": "<p>I have a JSON object that contains a few metadata keys and a large data payload. My service cares about the metadata for the purposes of logging and routing, but does not care about the payload, other than to pass the payload off to another service. I will never need to look inside the payload for any reason.</p>\n\n<p>Right now, the payload is represented in my struct as a<code>serde_json::Value</code>. Through profiling, I've seen the (de)serialization of the <code>Value</code> takes a non-trivial amount of time.</p>\n\n<p>Is there a mechanism in Serde where I can bundle around the payload without having to pay the cost of deserializing it into component values only to be required to re-serialize them later?</p>\n\n<pre><code>extern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\n#[derive(Serialize, Deserialize)]\nstruct DataBlob&lt;'a&gt; {\n    id: &amp;'a str,\n    priority: u8,\n    // payload: OpaqueValue,\n}\n\nfn main() {\n    let input = r#\"{\n        \"id\": \"cat\",\n        \"priority\": 42,\n        \"payload\": [1, 2, 3, 4]\n    }\"#;\n\n    let parsed = serde_json::from_str::&lt;DataBlob&gt;(input).expect(\"Could not deserialize\");\n    let output = serde_json::to_string(&amp;parsed).expect(\"Could not serialize\");\n\n    assert!(output.contains(\"payload\"));\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5507, "user_id": 16258, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/c4cf21c74cd5efd69bf60ea3216667d2?s=128&d=identicon&r=PG", "display_name": "Aaron H.", "link": "https://stackoverflow.com/users/16258/aaron-h"}, "edited": false, "score": 0, "creation_date": 1520034071, "post_id": 49078949, "comment_id": 85164017, "body": "Hmm... I&#39;m not sure that makes sense... If you&#39;re doing binary you know what you are doing?"}, {"owner": {"reputation": 5507, "user_id": 16258, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/c4cf21c74cd5efd69bf60ea3216667d2?s=128&d=identicon&r=PG", "display_name": "Aaron H.", "link": "https://stackoverflow.com/users/16258/aaron-h"}, "edited": false, "score": 0, "creation_date": 1520034133, "post_id": 49078949, "comment_id": 85164026, "body": "Can you explain that? -N1 == N2? When I do:     println!(&quot;neg1 == neg2: {}&quot;, -NEG1 == NEG2); I get: thread &#39;main&#39; panicked at &#39;attempt to negate with overflow&#39;, src/main.rs:12:34"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 5507, "user_id": 16258, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/c4cf21c74cd5efd69bf60ea3216667d2?s=128&d=identicon&r=PG", "display_name": "Aaron H.", "link": "https://stackoverflow.com/users/16258/aaron-h"}, "edited": false, "score": 1, "creation_date": 1520034333, "post_id": 49078949, "comment_id": 85164085, "body": "@AaronH.: <code>-N1</code> is <code>~N1 + 1</code> overflows right back to <code>N1</code> (but only for the literal)"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1520034375, "post_id": 49078949, "comment_id": 85164101, "body": "Except that in Rust, the overflow panics in debug mode."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1520034424, "post_id": 49078949, "comment_id": 85164110, "body": "Except when using <a href=\"https://doc.rust-lang.org/std/num/struct.Wrapping.html\" rel=\"nofollow noreferrer\"><code>Wrapping</code></a>"}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 2, "last_activity_date": 1520033818, "last_edit_date": 1520033818, "creation_date": 1520033485, "answer_id": 49078949, "question_id": 49078647, "link": "https://stackoverflow.com/questions/49078647/is-there-a-way-to-get-a-negative-number-with-binary-assignment-without-an-overfl/49078949#49078949", "title": "Is there a way to get a negative number with binary assignment without an overflowing_literals warning?", "body": "<p>You can place a <code>-</code> in front of it:</p>\n\n<pre><code>// warning\nconst N1: i32 = 0b1000_0000_0000_0000_0000_0000_0000_0000;\n\n// no warning\nconst N2: i32 = -0b1000_0000_0000_0000_0000_0000_0000_0000;\n\nassert_eq!(N1, N2);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=8f852ec83794fbbc300e69c125b66848&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>However, your case is a special case, since <code>-N1 == N2</code>. Otherwise you have to negate one result of course (otherwise it would be super unintuitive).</p>\n"}, {"comments": [{"owner": {"reputation": 5507, "user_id": 16258, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/c4cf21c74cd5efd69bf60ea3216667d2?s=128&d=identicon&r=PG", "display_name": "Aaron H.", "link": "https://stackoverflow.com/users/16258/aaron-h"}, "edited": false, "score": 0, "creation_date": 1520035987, "post_id": 49079076, "comment_id": 85164483, "body": "Thank you. Glad to know that there&#39;s already an issue for this. Reading through the comments though, it would appear that the proponents of the warning are missing the point. I know what I&#39;m doing, and I want to make a negative value..."}, {"owner": {"reputation": 5507, "user_id": 16258, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/c4cf21c74cd5efd69bf60ea3216667d2?s=128&d=identicon&r=PG", "display_name": "Aaron H.", "link": "https://stackoverflow.com/users/16258/aaron-h"}, "edited": false, "score": 0, "creation_date": 1520036104, "post_id": 49079076, "comment_id": 85164506, "body": "But why? Why must I do all this knees bent running about when, if I&#39;m using binary notation I might very well want a negative number?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5507, "user_id": 16258, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/c4cf21c74cd5efd69bf60ea3216667d2?s=128&d=identicon&r=PG", "display_name": "Aaron H.", "link": "https://stackoverflow.com/users/16258/aaron-h"}, "edited": false, "score": 0, "creation_date": 1520038103, "post_id": 49079076, "comment_id": 85164929, "body": "@AaronH. I admit to being equally surprised. However, I have experienced that the people who work on Rust tend be be both smart and pragmatic, so I tend to give them a pretty large benefit of the doubt. I&#39;m hoping this is a case where they see something that I just don&#39;t."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1520035093, "last_edit_date": 1520035093, "creation_date": 1520034439, "answer_id": 49079076, "question_id": 49078647, "link": "https://stackoverflow.com/questions/49078647/is-there-a-way-to-get-a-negative-number-with-binary-assignment-without-an-overfl/49079076#49079076", "title": "Is there a way to get a negative number with binary assignment without an overflowing_literals warning?", "body": "<p>You can start with an unsigned type and then cast to a signed:</p>\n\n<pre><code>const NEG: i32 = 0b1000_0000_0000_0000_0000_0000_0000_0000_u32 as i32;\n</code></pre>\n\n<blockquote>\n  <p>without the warning while preserving the other, more valid warnings</p>\n</blockquote>\n\n<p>You can disable specific warnings for specific expressions:</p>\n\n<pre><code>#[allow(overflowing_literals)]\nconst NEG: i32 = 0b1000_0000_0000_0000_0000_0000_0000_0000;\n</code></pre>\n\n<p>However, this original behavior seems incorrect. The binary value is not out of range of an <code>i32</code>. <a href=\"https://github.com/rust-lang/rust/issues/48073\" rel=\"nofollow noreferrer\">An issue seems to exist</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 5507, "user_id": 16258, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/c4cf21c74cd5efd69bf60ea3216667d2?s=128&d=identicon&r=PG", "display_name": "Aaron H.", "link": "https://stackoverflow.com/users/16258/aaron-h"}, "edited": false, "score": 1, "creation_date": 1520035723, "post_id": 49079190, "comment_id": 85164423, "body": "Thanks! I don&#39;t want the min/max, I was just curious about the binary representation."}], "tags": [], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "is_accepted": false, "score": 1, "last_activity_date": 1520035276, "last_edit_date": 1520035276, "creation_date": 1520035229, "answer_id": 49079190, "question_id": 49078647, "link": "https://stackoverflow.com/questions/49078647/is-there-a-way-to-get-a-negative-number-with-binary-assignment-without-an-overfl/49079190#49079190", "title": "Is there a way to get a negative number with binary assignment without an overflowing_literals warning?", "body": "<blockquote>\n  <p><em>Or am I thinking about this wrong?</em></p>\n</blockquote>\n\n<p>If all you want is the minimum and maximum <code>i32</code>, there's already <code>MIN</code> and <code>MAX</code> constants in the <a href=\"https://doc.rust-lang.org/std/i32/\" rel=\"nofollow noreferrer\"><code>std::i32</code></a> module. They're easier to understand, and you can't make a mistake.</p>\n\n<pre><code>use std::i32;\n\nfn main() {\n    const POS: i32 = i32::MAX;\n    const NEG: i32 = i32::MIN;\n    println!(\"{} {}\", NEG, POS);\n}\n</code></pre>\n"}], "owner": {"reputation": 5507, "user_id": 16258, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/c4cf21c74cd5efd69bf60ea3216667d2?s=128&d=identicon&r=PG", "display_name": "Aaron H.", "link": "https://stackoverflow.com/users/16258/aaron-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 49079076, "answer_count": 3, "score": 2, "last_activity_date": 1520035276, "creation_date": 1520031412, "last_edit_date": 1520034039, "question_id": 49078647, "link": "https://stackoverflow.com/questions/49078647/is-there-a-way-to-get-a-negative-number-with-binary-assignment-without-an-overfl", "title": "Is there a way to get a negative number with binary assignment without an overflowing_literals warning?", "body": "<p>Is there a way to get a negative number with binary assignment without the warning while preserving the other, more valid warnings. Or am I thinking about this wrong?</p>\n\n<pre><code>const NEG: i32 = 0b1000_0000_0000_0000_0000_0000_0000_0000;\n// -2147483648    \n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: literal out of range for i32\n --&gt; src/main.rs:1:18\n  |\n1 | const NEG: i32 = 0b1000_0000_0000_0000_0000_0000_0000_0000;\n  |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: #[warn(overflowing_literals)] on by default\n</code></pre>\n"}, {"tags": ["function", "types", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520029162, "post_id": 49077968, "comment_id": 85162479, "body": "<code>pub type MyFunction&lt;&#39;e&gt; = fn(Option&lt;&amp;MyStruct&gt;) -&gt; Option&lt;MyStruct&lt;&#39;e&gt;&gt;;</code> or <code>pub type MyFunction&lt;&#39;e&gt; = fn(Option&lt;&amp;&#39;e MyStruct&lt;&#39;e&gt;&gt;) -&gt; Option&lt;MyStruct&lt;&#39;e&gt;&gt;;</code> or whatever the lifetimes should be."}], "owner": {"reputation": 138, "user_id": 7390960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/762cb3a3f2e7fee6cac2133476d8ee6e?s=128&d=identicon&r=PG&f=1", "display_name": "spcan", "link": "https://stackoverflow.com/users/7390960/spcan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1520029130, "answer_count": 0, "score": 1, "last_activity_date": 1520029371, "creation_date": 1520027610, "last_edit_date": 1520029371, "question_id": 49077968, "link": "https://stackoverflow.com/questions/49077968/how-do-i-create-a-type-alias-for-a-function-returning-a-struct-with-two-lifetime", "closed_reason": "Duplicate", "title": "How do I create a type alias for a function returning a struct with two lifetimes?", "body": "<p>I'm trying to pass a custom function as a parameter. This function has as the only argument a custom struct and returns a struct of the same type. The goal is to have a function that can passed around that may or may not have input arguments and may or may not return a value.</p>\n\n<pre><code>pub type MyFunction = fn(Option&lt;&amp;MyStruct&gt;) -&gt; Option&lt;MyStruct&gt;;\n\npub trait DynamicTrait {\n    fn typename(&amp;self) -&gt; &amp;str {}\n}\n\n#[derive(Copy, Clone, Debug)]\npub struct MyStruct&lt;'a&gt; {\n    types: Vec&lt;String&gt;,\n    vars: Vec&lt;Box&lt;DynamicTrait&gt;&gt;,\n}\n</code></pre>\n\n<p>When compiling, it gives the following error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:1:55\n  |\n1 | pub type MyFunction = fn(Option&lt;&amp;MyStruct&gt;) -&gt; Option&lt;MyStruct&gt;;\n  |                                                       ^^^^^^^^ expected lifetime parameter\n  |\n  = help: this function's return type contains a borrowed value, but the signature does not say which one of argument 1's 2 lifetimes it is borrowed from\n</code></pre>\n\n<p>I've tried changing it to:</p>\n\n<pre><code>pub type MyFunction = &amp;Fn&lt;'e&gt;(Option&lt;&amp;MyStruct&gt;) -&gt; Option&lt;MyStruct&lt;'e&gt;&gt;;\n</code></pre>\n\n<p>Which fails with this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `!`, `::`, or `;`, found `(`\n --&gt; src/main.rs:1:30\n  |\n1 | pub type MyFunction = &amp;Fn&lt;'e&gt;(Option&lt;&amp;MyStruct&gt;) -&gt; Option&lt;MyStruct&lt;'e&gt;&gt;;\n  |                              ^ expected one of `!`, `::`, or `;` here\n</code></pre>\n\n<p>And to this:</p>\n\n<pre><code>pub type MyFunction = fn&lt;'e&gt;(Option&lt;&amp;MyStruct&gt;) -&gt; Option&lt;MyStruct&lt;'e&gt;&gt;;\n</code></pre>\n\n<p>Which yields this other error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected `(`, found `&lt;`\n --&gt; src/main.rs:1:25\n  |\n1 | pub type MyFunction = fn&lt;'e&gt;(Option&lt;&amp;MyStruct&gt;) -&gt; Option&lt;MyStruct&lt;'e&gt;&gt;;\n  |                         ^\n</code></pre>\n\n<p>I don't know if the error has to do with how lifetimes are managed or how I defined the struct/function or something completely different.</p>\n\n<p>I'm using Rust 1.23.0.</p>\n"}, {"tags": ["rust", "binary-tree", "ownership"], "comments": [{"owner": {"reputation": 5662, "user_id": 5781248, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/712de4f2f811d1a400d3311c9cdd5836?s=128&d=identicon&r=PG&f=1", "display_name": "J.J. Hakala", "link": "https://stackoverflow.com/users/5781248/j-j-hakala"}, "edited": false, "score": 0, "creation_date": 1520027467, "post_id": 49077797, "comment_id": 85161822, "body": "This could be relevant, <a href=\"https://rcoh.me/posts/rust-linked-list-basically-impossible/\" rel=\"nofollow noreferrer\">rcoh.me/posts/rust-linked-list-basically-impossible</a>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1520029176, "post_id": 49077797, "comment_id": 85162484, "body": "<i>first time coding in Rust</i> -- You should start somewhere else"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520049435, "post_id": 49077797, "comment_id": 85166708, "body": "I&#39;d highly recommend implementing <a href=\"https://doc.rust-lang.org/std/cmp/trait.Ord.html\" rel=\"nofollow noreferrer\"><code>Ord</code></a> for <code>Data</code> instead of your own bespoke function."}, {"owner": {"reputation": 13, "user_id": 9436138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/340cd06011c9dedc989adc05abe5661e?s=128&d=identicon&r=PG&f=1", "display_name": "luchtballon", "link": "https://stackoverflow.com/users/9436138/luchtballon"}, "edited": false, "score": 0, "creation_date": 1520086496, "post_id": 49077797, "comment_id": 85175355, "body": "I had not found this trait yet, thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": true, "score": 2, "last_activity_date": 1520074187, "last_edit_date": 1520074187, "creation_date": 1520045748, "answer_id": 49080169, "question_id": 49077797, "link": "https://stackoverflow.com/questions/49077797/rust-binary-tree-insert-implementation-difficulty/49080169#49080169", "title": "Rust binary tree insert implementation difficulty", "body": "<p>You are trying to move your boxed nodes out of their enclosing options. This is not allowed, because the options will still be owned by the corresponding parent nodes afterwards. You could theoretically call <code>take</code> on the options to move the nodes. <code>take</code> moves the value out of the option and replaces it with <code>None</code> instead of leaving it \"empty\" (not allowed). </p>\n\n<p>However, this would effectively detach the child nodes from their respective parent node. You would have to reattach them after returning from inserting the new node:</p>\n\n<pre><code>fn node_insert(n: Node, mut n2: Box&lt;Node&gt;) -&gt; Box&lt;Node&gt;{\n    let i = SortedContainer::data_compare(&amp;n.value, &amp;n2.value);\n    if i &lt; 0 {\n        n2.right = match n2.right.take() {\n            Some(rightnode) =&gt; Some(SortedContainer::node_insert(n, rightnode)),\n            None =&gt; Some(Box::new(n)),\n        }\n    } else if i &gt; 0 {\n        n2.left = match n2.left.take() {\n            Some(leftnode) =&gt; Some(SortedContainer::node_insert(n, leftnode)),\n            None =&gt; Some(Box::new(n)),\n        }\n    }\n    n2\n}\n</code></pre>\n\n<p>same for the root node:</p>\n\n<pre><code>self.root = match self.root.take() {\n    Some(rootnode) =&gt; Some(SortedContainer::node_insert(n, rootnode)),\n    None =&gt; Some(Box::new(n)),\n}\n</code></pre>\n\n<p>An alternative solution involves passing mutable references to the nodes instead of moving them. This works, because you actually only need to mutate the nodes along the path from the root node to the leaf node where the new node should be inserted:</p>\n\n<pre><code>fn node_insert(n: Node, n2: &amp;mut Node) {\n    let i = SortedContainer::data_compare(&amp;n.value, &amp;n2.value);\n    if i &lt; 0 {\n        match n2.right {\n            Some(ref mut rightnode) =&gt; SortedContainer::node_insert(n, rightnode),\n            None =&gt; n2.right = Some(Box::new(n)),\n        }\n    } else if i &gt; 0 {\n        match n2.left {\n            Some(ref mut leftnode) =&gt; SortedContainer::node_insert(n, leftnode),\n            None =&gt; n2.left = Some(Box::new(n)),\n        }\n    }\n}\n</code></pre>\n\n<p>same for the root node:</p>\n\n<pre><code>match self.root {\n    Some(ref mut rootnode) =&gt; SortedContainer::node_insert(n, rootnode),\n    None =&gt; self.root = Some(Box::new(n)),\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 9436138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/340cd06011c9dedc989adc05abe5661e?s=128&d=identicon&r=PG&f=1", "display_name": "luchtballon", "link": "https://stackoverflow.com/users/9436138/luchtballon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 470, "favorite_count": 1, "accepted_answer_id": 49080169, "answer_count": 1, "score": 1, "last_activity_date": 1520074187, "creation_date": 1520026669, "last_edit_date": 1520028811, "question_id": 49077797, "link": "https://stackoverflow.com/questions/49077797/rust-binary-tree-insert-implementation-difficulty", "title": "Rust binary tree insert implementation difficulty", "body": "<p>I have looked at many topics, but I could not find any clue as to why my code won't compile (except for an issue with ownership of course), hopefully someone here can help me. </p>\n\n<p>I am working on a binary tree implementation, and one of its functions is the <em>insert</em> function. This is my first time coding in Rust, and although I have looked at the documentation many times, I cannot figure out what is wrong with the ownership in the following code (I only posted, I hope, all relevant code):</p>\n\n<pre><code>#[derive(Debug)]\nstruct Data {\n    name: String,\n    age: i32,\n}\n\n#[derive(Debug)]\nstruct Node {\n    value: Data,\n    left: Option&lt;Box&lt;Node&gt;&gt;,\n    right: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\npub struct SortedContainer {\n    root: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nimpl SortedContainer {\n    pub fn insert(&amp;mut self, name: String, age: i32) {\n        let d = Data {\n            name: name,\n            age: age,\n        };\n        let n = Node {\n            value: d,\n            left: None,\n            right: None,\n        };\n        match self.root {\n            Some(ref rootnode) =&gt; SortedContainer::node_insert(n, *rootnode),\n            None =&gt; self.root = Some(Box::new(n)),\n        }\n    }\n    fn node_insert(n: Node, mut n2: Box&lt;Node&gt;) {\n        let i = SortedContainer::data_compare(&amp;n.value, &amp;n2.value);\n        if i &lt; 0 {\n            match n2.right {\n                Some(ref rightnode) =&gt; SortedContainer::node_insert(n, *rightnode),\n                None =&gt; n2.right = Some(Box::new(n)),\n            }\n        } else if i &gt; 0 {\n            match n2.left {\n                Some(ref leftnode) =&gt; SortedContainer::node_insert(n, *leftnode),\n                None =&gt; n2.left = Some(Box::new(n)),\n            }\n        }\n    }\n    fn data_compare(d: &amp;Data, d2: &amp;Data) -&gt; i32 {\n        if d.age &lt; d2.age {\n            return -1;\n        } else if d.age &gt; d2.age {\n            return 1;\n        } else if d.name == d2.name {\n            return 0;\n        } else if d.name &gt; d2.name {\n            return 1;\n        } else if d.name &lt; d2.name {\n            return -1;\n        } else {\n            return 0;\n        }\n    }\n}\n</code></pre>\n\n<p>The error that the terminal provides is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:31:67\n   |\n31 |             Some(ref rootnode) =&gt; SortedContainer::node_insert(n, *rootnode),\n   |                                                                   ^^^^^^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:39:72\n   |\n39 |                 Some(ref rightnode) =&gt; SortedContainer::node_insert(n, *rightnode),\n   |                                                                        ^^^^^^^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:44:71\n   |\n44 |                 Some(ref leftnode) =&gt; SortedContainer::node_insert(n, *leftnode),\n   |                                                                       ^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Has it got something to do with the <code>Box</code> or with the left/right allocation?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1554469841, "post_id": 49077267, "comment_id": 97775679, "body": "I don&#39;t understand &quot;Note that if the build script itself (or one of its dependencies) changes, then it&#39;s rebuilt and rerun unconditionally, so cargo:rerun-if-changed=build.rs is almost always redundant (unless you want to ignore changes in all other files except for build.rs).&quot; this is not needed"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1554471849, "post_id": 49077267, "comment_id": 97777055, "body": "It should not be needed, however, I noticed that sometimes it does not work (maybe this was a bug, which has been solved now?)."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 14, "last_activity_date": 1534498408, "last_edit_date": 1534498408, "creation_date": 1520024195, "answer_id": 49077267, "question_id": 49077147, "link": "https://stackoverflow.com/questions/49077147/how-can-i-force-build-rs-to-run-again-without-cleaning-my-whole-project/49077267#49077267", "title": "How can I force `build.rs` to run again without cleaning my whole project?", "body": "<p>If you print </p>\n\n<pre><code>\"cargo:rerun-if-changed=&lt;FILE&gt;\"\n</code></pre>\n\n<p>the build will be triggered every time the file has changed.</p>\n\n<blockquote>\n  <p><code>rerun-if-changed=PATH</code> is a path to a file or directory which indicates that the build script should be re-run if it changes (detected by a more-recent last-modified timestamp on the file). Normally build scripts are re-run if any file inside the crate root changes, but this can be used to scope changes to just a small set of files. -- <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#outputs-of-the-build-script\" rel=\"noreferrer\">source</a></p>\n</blockquote>\n\n<p>I'm not aware of a solution without changing a file manually (I just put a whitespace anywhere in my <code>build.rs</code>, it will be removed by <code>rustfmt</code> though). </p>\n\n<p>I have several buildscripts in my projects, and mostly these two lines give me a nice solution:</p>\n\n<pre><code>println!(\"cargo:rerun-if-changed=build.rs\");\nprintln!(\"cargo:rerun-if-changed=path/to/Cargo.lock\");\n</code></pre>\n\n<p>but I guess you are looking for a command <code>rustc</code>/<code>cargo</code> command. Anyway, you can put in a small script, which will edit a certain file, which will trigger the build-process.</p>\n"}, {"comments": [{"owner": {"reputation": 2041, "user_id": 1333724, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/acc5cea42dca926af89f94eb56fbbdbb?s=128&d=identicon&r=PG", "display_name": "maxm", "link": "https://stackoverflow.com/users/1333724/maxm"}, "edited": false, "score": 1, "creation_date": 1566672211, "post_id": 53728256, "comment_id": 101733086, "body": "thanks this was a super helpful departure from the typical solutions"}], "tags": [], "owner": {"reputation": 546, "user_id": 10776437, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QZrya.png?s=128&g=1", "display_name": "Daniel H-M", "link": "https://stackoverflow.com/users/10776437/daniel-h-m"}, "is_accepted": false, "score": 6, "last_activity_date": 1554468081, "last_edit_date": 1554468081, "creation_date": 1544545181, "answer_id": 53728256, "question_id": 49077147, "link": "https://stackoverflow.com/questions/49077147/how-can-i-force-build-rs-to-run-again-without-cleaning-my-whole-project/53728256#53728256", "title": "How can I force `build.rs` to run again without cleaning my whole project?", "body": "<h3>Register <code>build.rs</code> as a crate's <code>bin</code> target:</h3>\n\n<ol>\n<li><p>Add this to your <code>Cargo.toml</code> file:</p>\n\n<pre><code>[package]\nedition = \"2018\"\nbuild = \"build.rs\"\n\n[[bin]]\nname = \"force-build\"\npath = \"build.rs\"\nrequired-features = [\"build_deps\"]  # only needed for build-dependencies\n</code></pre></li>\n<li><p>If you have any <code>[build-dependencies]</code> (<em>e.g</em>. <code>some_crate = \"1.2.3\"</code>), you need to add those to (the main) <code>[dependencies]</code> (sadly <a href=\"https://github.com/rust-lang/cargo/issues/1982\" rel=\"noreferrer\">no <code>[bin-dependencies]</code> as of yet</a>), but you can make them optional:</p>\n\n<pre><code>[dependencies]\nsome_crate = { version = \"1.2.3\", optional = true }\n\n[features]\nbuild_deps = [\"some_crate\"]\n</code></pre></li>\n</ol>\n\n<h3>Then you can run the build script with:</h3>\n\n<pre><code>$ cargo run --bin force-build --features build_deps\n</code></pre>\n\n<p>(or <code>$ cargo run --bin force-build</code> when no <code>[build-dependencies]</code>)</p>\n\n<ul>\n<li><p>You can even disable the <strong>automatic</strong> call of the build script by replacing the <code>build = \"build.rs\"</code> line in <code>Cargo.toml</code> with <code>build = false</code></p></li>\n<li><p>Note: since the <code>OUT_DIR</code> env var is not present for <code>bin</code> targets, if your <code>build.rs</code> script uses <code>env!(\"OUT_DIR\")</code>, you may \"fix this\" by using <code>concat!(env!(\"CARGO_MANIFEST_DIR\"), \"/target/\")</code> instead.</p></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 6, "last_activity_date": 1554578260, "last_edit_date": 1554578260, "creation_date": 1554470100, "answer_id": 55536259, "question_id": 49077147, "link": "https://stackoverflow.com/questions/49077147/how-can-i-force-build-rs-to-run-again-without-cleaning-my-whole-project/55536259#55536259", "title": "How can I force `build.rs` to run again without cleaning my whole project?", "body": "<p>If <code>build.rs</code> changes, Cargo already rebuilds the project:</p>\n\n<blockquote>\n  <p>Note that if the build script itself (or one of its dependencies) changes, then it's rebuilt and rerun unconditionally, so <code>cargo:rerun-if-changed=build.rs</code> is almost always redundant (unless you want to ignore changes in all other files except for <code>build.rs</code>). <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#outputs-of-the-build-script\" rel=\"nofollow noreferrer\">doc</a></p>\n</blockquote>\n\n<p>On Linux, I will just do <code>touch build.rs &amp;&amp; cargo build</code>. For Windows, see <a href=\"https://superuser.com/q/10426\">Windows equivalent of the Linux command 'touch'?</a></p>\n"}, {"tags": [], "owner": {"reputation": 587, "user_id": 3744172, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1465c7925dd3f49d05c2c96d1ebf14ce?s=128&d=identicon&r=PG&f=1", "display_name": "Seivan", "link": "https://stackoverflow.com/users/3744172/seivan"}, "is_accepted": false, "score": 1, "last_activity_date": 1556987674, "creation_date": 1556987674, "answer_id": 55984628, "question_id": 49077147, "link": "https://stackoverflow.com/questions/49077147/how-can-i-force-build-rs-to-run-again-without-cleaning-my-whole-project/55984628#55984628", "title": "How can I force `build.rs` to run again without cleaning my whole project?", "body": "<p>If you got target under <code>gitignore</code> (which you should) this might be useful for any file changes when you're developing and testing the build script. </p>\n\n<pre><code>if Path::new(\".git/HEAD\").exists() {\n    println!(\"cargo:rerun-if-changed=.git/HEAD\");\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8171, "user_id": 311655, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6bad9300ce17b6a89678ed9343647906?s=128&d=identicon&r=PG", "display_name": "DenisKolodin", "link": "https://stackoverflow.com/users/311655/deniskolodin"}, "is_accepted": false, "score": 1, "last_activity_date": 1562462955, "creation_date": 1562462955, "answer_id": 56918778, "question_id": 49077147, "link": "https://stackoverflow.com/questions/49077147/how-can-i-force-build-rs-to-run-again-without-cleaning-my-whole-project/56918778#56918778", "title": "How can I force `build.rs` to run again without cleaning my whole project?", "body": "<p>I can offer the solution that works for me well.</p>\n\n<p>Add the following to <strong>build.rs</strong> file to a dependency that have to be rebuilt everytime:</p>\n\n<pre><code>use failure::{format_err, Error};\nuse std::env;\nuse std::path::PathBuf;\nuse std::process::Command;\n\n/// Just useful trait to run a command\ntrait RunIt {\n    fn run_it(&amp;mut self, err: &amp;str) -&gt; Result&lt;(), Error&gt;;\n}\n\nimpl RunIt for Command {\n    fn run_it(&amp;mut self, err: &amp;str) -&gt; Result&lt;(), Error&gt; {\n        let output = self.output()?;\n        if !output.status.success() {\n            let out = String::from_utf8_lossy(&amp;output.stderr);\n            eprintln!(\"{}\", out);\n            Err(format_err!(\"{}\", err))\n        } else {\n            Ok(())\n        }\n    }\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n\n    // Your build stuff\n\n    // Activate this feature to rebuild this dependency everytime\n    if cfg!(feature = \"refresh\") {\n        Command::new(\"touch\")\n            .args(&amp;[\"build.rs\"])\n            .run_it(\"Can't touch the build file\")?;\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>Add the feature to <strong>Cargo.toml</strong> to declare the feature:</p>\n\n<pre><code>[package]\nname = \"sensitive-crate\"\n\n[features]\ndefault = []\nrefresh = []\n</code></pre>\n\n<p>And activate <strong>refresh</strong> feature to rebuild the dependency everytime:</p>\n\n<pre><code>[package]\nname = \"my_project_1\"\n\n[dependencies]\nsensitive-crate = { path = \"../sensitive-crate\", features = [\"refresh\"] }\n</code></pre>\n"}], "owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5493, "favorite_count": 5, "accepted_answer_id": 49077267, "answer_count": 5, "score": 11, "last_activity_date": 1562462955, "creation_date": 1520023661, "last_edit_date": 1520100847, "question_id": 49077147, "link": "https://stackoverflow.com/questions/49077147/how-can-i-force-build-rs-to-run-again-without-cleaning-my-whole-project", "title": "How can I force `build.rs` to run again without cleaning my whole project?", "body": "<p>How can I force <code>build.rs</code> to run again without cleaning my whole project? I checked <code>cargo build --help</code> but I couldn't find anything related to <code>build.rs</code>.</p>\n"}, {"tags": ["rust", "pattern-matching"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520017254, "post_id": 49075255, "comment_id": 85157212, "body": "You can also &quot;transform&quot; your problem by creating a parallel enum that has a <code>&amp;str</code> instead of a <code>String</code>, but most people don&#39;t like that solution."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 4, "last_activity_date": 1520016132, "last_edit_date": 1520016132, "creation_date": 1520015907, "answer_id": 49075367, "question_id": 49075255, "link": "https://stackoverflow.com/questions/49075255/how-to-pattern-match-against-an-enum-variant-that-wraps-a-string/49075367#49075367", "title": "How to pattern-match against an enum variant that wraps a String?", "body": "<p>The only other way I think would be to use a <a href=\"https://doc.rust-lang.org/book/second-edition/ch18-03-pattern-syntax.html#extra-conditionals-with-match-guards\" rel=\"nofollow noreferrer\">match guard</a>, but this is about as verbose as your version with nested matches.</p>\n\n<pre><code>match t {\n    T::A(ref value) if value == \"a\" =&gt; println!(\"a\"),\n    T::A(ref value) if value == \"b\" =&gt; println!(\"b\"),\n    _ =&gt; println!(\"something else\"),\n}\n</code></pre>\n"}], "owner": {"reputation": 355, "user_id": 5955876, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5b29bb86b71b9c789283bd5180355d5c?s=128&d=identicon&r=PG&f=1", "display_name": "Count Zero", "link": "https://stackoverflow.com/users/5955876/count-zero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 917, "favorite_count": 0, "closed_date": 1520015909, "answer_count": 1, "score": 3, "last_activity_date": 1520016132, "creation_date": 1520015414, "last_edit_date": 1520015873, "question_id": 49075255, "link": "https://stackoverflow.com/questions/49075255/how-to-pattern-match-against-an-enum-variant-that-wraps-a-string", "closed_reason": "Duplicate", "title": "How to pattern-match against an enum variant that wraps a String?", "body": "<p>I have an enum:</p>\n\n<pre><code>enum T {\n    A(String),\n}\n</code></pre>\n\n<p>I want to match a variable of this enum, but this code doesn't work:</p>\n\n<pre><code>match t {\n    T::A(\"a\") =&gt; println!(\"a\"),\n    T::A(\"b\") =&gt; println!(\"b\"),\n    _ =&gt; println!(\"something else\"),\n}\n</code></pre>\n\n<p>I understand that I can do this, but it is so verbose in my opinion:</p>\n\n<pre><code>match t {\n    T::A(value) =&gt; match value.as_ref() {\n        \"a\" =&gt; println!(\"a\"),\n        \"b\" =&gt; println!(\"b\"),\n        _ =&gt; println!(\"something else\"),\n    },\n}\n</code></pre>\n\n<p>Is there a shorter way to do this?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1520008077, "post_id": 49073182, "comment_id": 85152259, "body": "Perhaps you can explain what you find confusing about the error messages?"}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 4084624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce39526e98709385d65f72b06e9053d7?s=128&d=identicon&r=PG&f=1", "display_name": "Navid Vahdat", "link": "https://stackoverflow.com/users/4084624/navid-vahdat"}, "edited": false, "score": 0, "creation_date": 1520012364, "post_id": 49073273, "comment_id": 85154825, "body": "Thank you so much @Shepmaster! It&#39;s totally obvious, now that that I see my mistake. But I was locked in the wrong mindset for hours I should have asked earlier.  I&#39;m trying to write a procedural macro, so I have to be prepared for any struct they throw at me. This stuff is just for testing and showing my problem in a readable and focused way. Thanks again!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1520008361, "last_edit_date": 1520008361, "creation_date": 1520007978, "answer_id": 49073273, "question_id": 49073182, "link": "https://stackoverflow.com/questions/49073182/why-do-i-get-missing-lifetime-specifier-or-wrong-number-of-type-arguments-wh/49073273#49073273", "title": "Why do I get &quot;missing lifetime specifier&quot; or &quot;wrong number of type arguments&quot; when implementing a trait for a struct?", "body": "<p>The error messages seem pretty clear to me. They point at a type and state that the type needs a lifetime or a type. Add them:</p>\n\n<pre><code>impl&lt;'a&gt; Bar1&lt;'a&gt; for Foo1&lt;'a&gt; { /* ... */ }\nimpl&lt;T&gt; Bar2&lt;T&gt; for Foo2&lt;T&gt; { /* ... */ }\nimpl&lt;'a, T: 'a&gt; Bar3&lt;'a, T&gt; for Foo3&lt;'a, T&gt; { /* ... */ }\n</code></pre>\n\n<p>This is required because you've <em>created</em> parameterized traits:</p>\n\n<pre><code>pub trait Bar3&lt;'a, T: 'a&gt; {\n//            ^^^^^^^^^^^\n    fn baaar(&amp;self);\n}\n</code></pre>\n\n<p>None of the traits you have defined <em>need</em> any kind of generic parameters, so the \"real\" solution is just to remove them. I assume you've added them for some learning purpose not shown here though.</p>\n"}], "owner": {"reputation": 45, "user_id": 4084624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce39526e98709385d65f72b06e9053d7?s=128&d=identicon&r=PG&f=1", "display_name": "Navid Vahdat", "link": "https://stackoverflow.com/users/4084624/navid-vahdat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 664, "favorite_count": 0, "accepted_answer_id": 49073273, "answer_count": 1, "score": 1, "last_activity_date": 1520008463, "creation_date": 1520007636, "last_edit_date": 1520008463, "question_id": 49073182, "link": "https://stackoverflow.com/questions/49073182/why-do-i-get-missing-lifetime-specifier-or-wrong-number-of-type-arguments-wh", "title": "Why do I get &quot;missing lifetime specifier&quot; or &quot;wrong number of type arguments&quot; when implementing a trait for a struct?", "body": "<p>I'm trying to define and implement a trait for a struct. All my implementations with generics and lifetime have problems. This must be a rookie mistake. What am I doing wrong?</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>pub struct Point {\n    x: i32,\n    y: i32,\n}\n\n/// pure lifetime example\npub struct Foo1&lt;'a&gt; {\n    pub first_attribute: u32,\n    pub second_attribute: Point,\n    third_attribute: &amp;'a [Point],\n}\n\npub trait Bar1&lt;'a&gt; {\n    fn baaar();\n}\n\nimpl&lt;'a&gt; Bar1 for Foo1&lt;'a&gt; {\n    fn baaar() {}\n}\n\n///pure type example\npub struct Foo2&lt;T&gt; {\n    pub first_attribute: u32,\n    pub second_attribute: Point,\n    third_attribute: [T],\n}\n\npub trait Bar2&lt;T&gt; {\n    fn baaar(&amp;self);\n}\n\nimpl&lt;T&gt; Bar2 for Foo2&lt;T&gt; {\n    fn baaar(&amp;self) {}\n}\n\n/// real world example\npub struct Foo3&lt;'a, T: 'a&gt; {\n    pub first_attribute: u32,\n    pub second_attribute: Point,\n    third_attribute: &amp;'a [T],\n}\n\npub trait Bar3&lt;'a, T: 'a&gt; {\n    fn baaar(&amp;self);\n}\n\nimpl&lt;'a, T: 'a&gt; Bar3 for Foo3&lt;'a, T&gt; {\n    fn baaar(&amp;self) {}\n}\n\nfn main() {\n    let x = Point { x: 1, y: 1 };\n    let c = Foo3 {\n        first_attribute: 7,\n        second_attribute: Point { x: 13, y: 17 },\n        third_attribute: &amp;x,\n    };\n\n    c.baaar();\n}\n</code></pre>\n\n<p><strong>compiler results</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:17:10\n   |\n17 | impl&lt;'a&gt; Bar1 for Foo1&lt;'a&gt; {\n   |          ^^^^ expected lifetime parameter\n\nerror[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:47:17\n   |\n47 | impl&lt;'a, T: 'a&gt; Bar3 for Foo3&lt;'a, T&gt; {\n   |                 ^^^^ expected lifetime parameter\n\nerror[E0243]: wrong number of type arguments: expected 1, found 0\n  --&gt; src/main.rs:32:9\n   |\n32 | impl&lt;T&gt; Bar2 for Foo2&lt;T&gt; {\n   |         ^^^^ expected 1 type argument\n\nerror[E0243]: wrong number of type arguments: expected 1, found 0\n  --&gt; src/main.rs:47:17\n   |\n47 | impl&lt;'a, T: 'a&gt; Bar3 for Foo3&lt;'a, T&gt; {\n   |                 ^^^^ expected 1 type argument\n</code></pre>\n"}, {"tags": ["collections", "rust", "queue"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 10, "last_activity_date": 1520016587, "last_edit_date": 1520016587, "creation_date": 1520012919, "answer_id": 49074643, "question_id": 49072494, "link": "https://stackoverflow.com/questions/49072494/how-does-the-vecdeque-ring-buffer-work-internally/49074643#49074643", "title": "How does the VecDeque ring buffer work internally?", "body": "<p><strong>TL;DR:</strong></p>\n\n<ul>\n<li>The \"shift\" is done when the buffer has been filled and if the head is not at the end of it. If you pop each time that you push, there is no need to move the data.</li>\n<li>Values are not contiguous because they wrap around the buffer.</li>\n</ul>\n\n<hr>\n\n<p>The <code>VecDeque</code> has 2 internal indices: one for the head and one for the tail. When you push or pop things into/from the <code>VecDeque</code>, either the head or tail is incremented/decremented accordingly.</p>\n\n<h1>First case: the buffer is not full</h1>\n\n<p>Let's see what happen where there is one call to <code>push_back</code> and <code>pop_front</code>.</p>\n\n<h3>The head is not at the last index in the buffer</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>        T       H\nBefore [o o o o . . . . ]\n          T       H\nAfter  [. o o o o . . . ]\n</code></pre>\n\n<h3>The head arrives at the last index in the buffer</h3>\n\n<p>You just wrap the buffer around. The buffer is now split in two parts.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>        H       T\nBefore [. . . . o o o o ]\n          H       T\nAfter  [o . . . . o o o ]\n</code></pre>\n\n<h1>Second case: the buffer is full</h1>\n\n<p>When the internal buffer is filled and you push another thing, you have three scenarios described <a href=\"https://github.com/rust-lang/rust/blob/1.24.1/src/liballoc/vec_deque.rs#L332-L344\" rel=\"noreferrer\">in the code</a>:</p>\n\n<h3>The head is at the end of the buffer</h3>\n\n<p>The buffer only grows.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>        T             H\nBefore [o o o o o o o . ]\n        T             H\nAfter  [o o o o o o o . . . . . . . . . ]\n</code></pre>\n\n<h3>The head is shorter than the tail</h3>\n\n<p>After the buffer grows, the head is moved after the tail.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>            H T\nBefore [o o . o o o o o ]\n              T             H\nAfter  [. . . o o o o o o o . . . . . . ]\n</code></pre>\n\n<h3>The tail is shorter than the head</h3>\n\n<p>After the buffer grows, the tail is moved to the end of the buffer.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>                  H T\nBefore [o o o o o . o o ]\n                  H                 T\nAfter  [o o o o o . . . . . . . . . o o ]\n</code></pre>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 717, "favorite_count": 1, "accepted_answer_id": 49074643, "answer_count": 1, "score": 8, "last_activity_date": 1520016587, "creation_date": 1520005371, "last_edit_date": 1520006276, "question_id": 49072494, "link": "https://stackoverflow.com/questions/49072494/how-does-the-vecdeque-ring-buffer-work-internally", "title": "How does the VecDeque ring buffer work internally?", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/collections/struct.VecDeque.html\" rel=\"noreferrer\"><code>VecDeque</code> documentation</a> says that it uses a growable ring buffer as implementation.</p>\n\n<p>How does it work internally?</p>\n\n<ul>\n<li>In the case when I only use it as a queue (only <code>push_back</code> and <code>pop_front</code>), when is the shifting done? Each time I call <code>pop_front</code>? When the internal buffer reaches a critical size?</li>\n<li>Why are there two slices (one for the back, one for the front)? Are they not contiguous?</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1519987563, "post_id": 49067348, "comment_id": 85140051, "body": "Your example does not compile"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1519988957, "post_id": 49067348, "comment_id": 85140758, "body": "<code>v: Vec</code> - Vec of what? You appear to have some copy paste issues here."}], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 3, "last_activity_date": 1519989352, "creation_date": 1519989352, "answer_id": 49068023, "question_id": 49067348, "link": "https://stackoverflow.com/questions/49067348/mutable-borrow-more-than-once/49068023#49068023", "title": "Mutable borrow more than once", "body": "<p>You have two options.</p>\n\n<p>1) Use nightly and put <code>#![feature(nll)]</code> at the top of your file.</p>\n\n<p>Non-lexical lifetimes solve exactly this issue: even though the <code>s1</code> borrow is not used in the else block, it's still alive and blocking mutation of <code>self.v</code>. With non-lexical lifetimes, the compiler recognizes that <code>s1</code> is effectively dead and lets you borrow again.</p>\n\n<p>2) Structure your code like this:</p>\n\n<pre><code>fn add1(&amp;mut self, n: u32) {\n    { // add a scope around s1 so that it disappears later\n        let s1 = self.v.last_mut().unwrap();\n        if !s1.full {\n            s1.v.push(n);\n            return; // just return early instead of using else\n        }\n    }\n    self.v.push(S1 {\n        full: false,\n        v: vec![n]\n    });\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1519989607, "creation_date": 1519989607, "answer_id": 49068081, "question_id": 49067348, "link": "https://stackoverflow.com/questions/49067348/mutable-borrow-more-than-once/49068081#49068081", "title": "Mutable borrow more than once", "body": "<p>You can limit the repetitions like this:</p>\n\n<pre><code>fn add1(&amp;mut self, n: u32) {\n    // Let's assume it's not empty\n    if {\n        let s1 = self.v.last_mut().unwrap();\n        if !s1.full {\n            s1.v.push(n);\n        }\n        s1.full\n    } {\n        self.v.push(S1 {\n            full: false,\n            v: vec![n],\n        });\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3592ef840d32fa098bc7557bc697be52&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 3210, "user_id": 197658, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c718a0c66ffc74753a7eb81c32cd4440?s=128&d=identicon&r=PG", "display_name": "chrsan", "link": "https://stackoverflow.com/users/197658/chrsan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1225, "favorite_count": 2, "closed_date": 1520001052, "accepted_answer_id": 49068023, "answer_count": 2, "score": 3, "last_activity_date": 1520000505, "creation_date": 1519986774, "last_edit_date": 1520000505, "question_id": 49067348, "link": "https://stackoverflow.com/questions/49067348/mutable-borrow-more-than-once", "closed_reason": "Duplicate", "title": "Mutable borrow more than once", "body": "<p>This is a short sample of short example that doesn't compile. The error is in the <code>add1</code> function. It works if I do as in <code>add2</code>, but this isn't very DRY. Can someone with more experience enlighten me of how to overcome the mutable borrow more than once error in a better way than in <code>add2</code>.</p>\n\n<pre><code>struct S1 {\n    full: bool,\n    v: Vec&lt;u32&gt;,\n}\n\nstruct S2 {\n    v: Vec&lt;S1&gt;,\n}\n\nimpl S2 {\n    // If last is not full push n to last.v, otherwise push a new S1\n\n    // Doesn't work\n    fn add1(&amp;mut self, n: u32) {\n        // Let's assume it's not empty\n        let s1 = self.v.last_mut().unwrap();\n        if !s1.full {\n            s1.v.push(n);\n        } else {\n            self.v.push(S1 {\n                full: false,\n                v: vec![n],\n            });\n        }\n    }\n\n    // Works\n    fn add2(&amp;mut self, n: u32) {\n        // First getting last as immutable ref and then as mutable ref\n        let full = self.v.last().unwrap().full;\n        if !full {\n            self.v.last_mut().unwrap().v.push(n);\n        } else {\n            self.v.push(S1 {\n                full: false,\n                v: vec![n],\n            });\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=87d758d6ac4b9258e8fe93bd0d445c20&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `self.v` as mutable more than once at a time\n  --&gt; src/main.rs:20:13\n   |\n16 |         let s1 = self.v.last_mut().unwrap();\n   |                  ------ first mutable borrow occurs here\n...\n20 |             self.v.push(S1 {\n   |             ^^^^^^ second mutable borrow occurs here\n...\n25 |     }\n   |     - first borrow ends here\n</code></pre>\n"}, {"tags": ["linux", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1519975751, "post_id": 49063813, "comment_id": 85133990, "body": "Why are 9, 10, ... empty?  Also without any code, we can&#39;t do anything. Can you provide a <a href=\"https://stackoverflow.com/help/mcve\">mcve</a>?"}], "answers": [{"comments": [{"owner": {"reputation": 497, "user_id": 9383887, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/bd4404f5ac586a9c03e32eb62e55891a?s=128&d=identicon&r=PG&f=1", "display_name": "jerry", "link": "https://stackoverflow.com/users/9383887/jerry"}, "edited": false, "score": 0, "creation_date": 1519985195, "post_id": 49064557, "comment_id": 85138758, "body": "<code>debug = true</code> --&gt; then why not to use just &quot;cargo build&quot; instead of  &quot;cargo build --release&quot;?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 497, "user_id": 9383887, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/bd4404f5ac586a9c03e32eb62e55891a?s=128&d=identicon&r=PG&f=1", "display_name": "jerry", "link": "https://stackoverflow.com/users/9383887/jerry"}, "edited": false, "score": 0, "creation_date": 1520000337, "post_id": 49064557, "comment_id": 85147135, "body": "@jerry because then you get no optimizations whatsoever. Not a good idea for a production deployment."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 4, "last_activity_date": 1520000852, "last_edit_date": 1520000852, "creation_date": 1519976050, "answer_id": 49064557, "question_id": 49063813, "link": "https://stackoverflow.com/questions/49063813/unable-to-trace-an-error-from-the-backtrace-caused-by-serde-in-a-rust-app/49064557#49064557", "title": "Unable to trace an error from the backtrace caused by Serde in a Rust app", "body": "<p>There aren't any line numbers in your stack backtrace so the binary running on your server must have been built without debug symbols. As described in <a href=\"https://stackoverflow.com/q/38803760/155423\">How to get a release build with debugging information when using cargo?</a>, add the following section to <code>Cargo.toml</code> of your main binary:</p>\n\n<pre><code>[profile.release]\ndebug = true\n</code></pre>\n\n<p>This will include filename and line number information in the binary that can be printed when a panic occurs, making your stack backtraces more useful in the future.</p>\n\n<blockquote>\n  <p><code>ErrorImpl { code: EofWhileParsingValue, line: 1, column: 0 }</code></p>\n</blockquote>\n\n<p>For now, the best we can tell without a backtrace is that you tried to parse an empty JSON string. For example the following triggers the same error.</p>\n\n<pre><code>extern crate serde_json;\n\nfn main() {\n    let _: u64 = serde_json::from_str(\"\").unwrap();\n}\n</code></pre>\n\n<p>As a reminder, <code>Result::unwrap()</code> is not an appropriate way to handle errors in a production application. ;-)</p>\n"}], "owner": {"reputation": 497, "user_id": 9383887, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/bd4404f5ac586a9c03e32eb62e55891a?s=128&d=identicon&r=PG&f=1", "display_name": "jerry", "link": "https://stackoverflow.com/users/9383887/jerry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "accepted_answer_id": 49064557, "answer_count": 1, "score": 1, "last_activity_date": 1520000852, "creation_date": 1519971911, "last_edit_date": 1520000297, "question_id": 49063813, "link": "https://stackoverflow.com/questions/49063813/unable-to-trace-an-error-from-the-backtrace-caused-by-serde-in-a-rust-app", "title": "Unable to trace an error from the backtrace caused by Serde in a Rust app", "body": "<p>I have a Rust web on a remote server which I run as:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  RUST_BACKTRACE=1 nohup  /home/my_user/app123 &amp;\n</code></pre>\n\n<p>When it goes down and I check nohup.log, I see only this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>04:52:22 [WARN] unexpected chunk when body cannot write\n04:52:23 [WARN] unexpected chunk when body cannot write\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: ErrorImpl { code: EofWhileParsingValue, line: 1, column: 0 }', /checkout/src/libcore/result.rs:906:4\nstack backtrace:\n   0: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n   1: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n   2: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n   3: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n   4: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n   5: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n   6: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n   7: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n   8: &lt;core::cell::BorrowMutError as core::fmt::Debug&gt;::fmt\n   9: \n  10: \n  11: \n  12: \n  13: &lt;hyper::version::HttpVersion as core::fmt::Debug&gt;::fmt\n  14: \n  15: &lt;std::time::duration::Duration as core::fmt::Debug&gt;::fmt\n  16: &lt;std::time::Instant as core::fmt::Debug&gt;::fmt\n  17: \n  18: &lt;unknown&gt;\n</code></pre>\n\n<p>How can I trace the error? It's something related to Serde JSON, but what exactly? There are many places in my app where it could occur.</p>\n"}, {"tags": ["rust", "pipe", "stdout", "stderr"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 10, "last_activity_date": 1519968232, "creation_date": 1519968232, "answer_id": 49063262, "question_id": 49062707, "link": "https://stackoverflow.com/questions/49062707/capture-both-stdout-stderr-via-pipe/49063262#49063262", "title": "Capture both stdout &amp; stderr via pipe", "body": "<p>When I run this program on my computer under Linux, what happens is that it prints a line from stdout around every 0.1 seconds until all the 100 lines have been read, then the 100 lines from stderr are all printed immediately, then the program prints the called program's exit code and terminates.</p>\n\n<p>When you read from a pipe, if there's no incoming data, by default, your program will <strong>block</strong> until some data is available. When the other program terminates, or decides to close its end of the pipe, then if you read from the pipe after having read everything the other program sent, the read will return with a length of zero bytes, signaling the \"end of the file\" (i.e. it's the same mechanism as for regular files).</p>\n\n<p>When a program writes to a pipe, the operating system will store the data in a buffer until the other end of the pipe reads it. That buffer has a limited size, so if it gets full, the <em>write</em> will block. What can happen then, for example, is that one end blocks while reading from stdout while the other end blocks while writing to stderr. The shell script you posted doesn't output enough data to block, but if I change the counter to start at 10000, it blocks at 5632 on my system, because stderr is full as the Rust program hasn't started reading it yet.</p>\n\n<p>I know of two solutions to solve this problem:</p>\n\n<ol>\n<li><p>Set the pipes to <em>nonblocking mode</em>. Nonblocking mode means that if a read or a write would block, it instead returns immediately with a distinct error code signaling this condition. When this condition occurs, you can then switch to the next pipe and try that one. To avoid consuming all CPU when both pipes have no data yet, you usually want to use a function like <a href=\"https://linux.die.net/man/2/poll\" rel=\"noreferrer\"><code>poll</code></a> to wait until either pipe has data.</p>\n\n<p>The Rust standard library doesn't expose nonblocking mode for these pipes, but it provides the convenient <a href=\"https://doc.rust-lang.org/stable/std/process/struct.Child.html#method.wait_with_output\" rel=\"noreferrer\"><code>wait_with_output</code></a> method that does exactly what I just described! However, as the name implies, it only returns when the program has ended. Also, stdout and stderr are read into <code>Vec</code>s, so if the output is big, your program will consume a lot of memory; you can't process the data in a streaming fashion.</p>\n\n<pre><code>use std::io::{BufRead, BufReader};\nuse std::process::{Command, Stdio};\n\nfn main() {\n    let child = Command::new(\"./1.sh\")\n        .stdout(Stdio::piped())\n        .stderr(Stdio::piped())\n        .spawn()\n        .unwrap();\n\n    let output = child.wait_with_output().unwrap();\n\n    let out = BufReader::new(&amp;*output.stdout);\n    let err = BufReader::new(&amp;*output.stderr);\n\n    out.lines().for_each(|line|\n        println!(\"out: {}\", line.unwrap());\n    );\n    err.lines().for_each(|line|\n        println!(\"err: {}\", line.unwrap());\n    );\n\n    println!(\"{}\", output.status);\n}\n</code></pre>\n\n<p>If you want to use nonblocking mode manually, you can recover the file descriptor on Unix-like systems with <a href=\"https://doc.rust-lang.org/stable/std/process/struct.ChildStdout.html#impl-AsRawFd\" rel=\"noreferrer\"><code>AsRawFd</code></a> or the file handle on Windows with <a href=\"https://doc.rust-lang.org/stable/std/process/struct.ChildStdout.html#impl-AsRawHandle\" rel=\"noreferrer\"><code>AsRawHandle</code></a>, and then you can pass those to the appropriate operating system APIs.</p></li>\n<li><p>Read each pipe on a separate thread. We can keep reading one of them on the main thread and spawn a thread for the other pipe.</p>\n\n<pre><code>use std::io::{BufRead, BufReader};\nuse std::process::{Command, Stdio};\nuse std::thread;\n\nfn main() {\n    let mut child = Command::new(\"./1.sh\")\n        .stdout(Stdio::piped())\n        .stderr(Stdio::piped())\n        .spawn()\n        .unwrap();\n\n    let out = BufReader::new(child.stdout.take().unwrap());\n    let err = BufReader::new(child.stderr.take().unwrap());\n\n    let thread = thread::spawn(move || {\n        err.lines().for_each(|line|\n            println!(\"err: {}\", line.unwrap());\n        );\n    });\n\n    out.lines().for_each(|line|\n        println!(\"out: {}\", line.unwrap());\n    );\n\n    thread.join().unwrap();\n\n    let status = child.wait().unwrap();\n    println!(\"{}\", status);\n}\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 2359, "user_id": 1837084, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/67dya.jpg?s=128&g=1", "display_name": "Oleg Antonyan", "link": "https://stackoverflow.com/users/1837084/oleg-antonyan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1494, "favorite_count": 2, "accepted_answer_id": 49063262, "answer_count": 1, "score": 3, "last_activity_date": 1520001138, "creation_date": 1519963949, "last_edit_date": 1520001138, "question_id": 49062707, "link": "https://stackoverflow.com/questions/49062707/capture-both-stdout-stderr-via-pipe", "title": "Capture both stdout &amp; stderr via pipe", "body": "<p>I want to read both stderr and stdout from a child process, but it doesn't work.</p>\n\n<p>main.rs</p>\n\n<pre><code>use std::process::{Command, Stdio};\nuse std::io::{BufRead, BufReader};\n\nfn main() {\n    let mut child = Command::new(\"./1.sh\")\n        .stdout(Stdio::piped())\n        .stderr(Stdio::piped())\n        .spawn()\n        .unwrap();\n\n    let out = BufReader::new(child.stdout.take().unwrap());\n    let err = BufReader::new(child.stderr.take().unwrap());\n\n    out.lines().for_each(|line|\n        println!(\"out: {}\", line.unwrap())\n    );\n    err.lines().for_each(|line|\n        println!(\"err: {}\", line.unwrap())\n    );\n\n    let status = child.wait().unwrap();\n    println!(\"{}\", status);\n}\n</code></pre>\n\n<p>1.sh</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>#!/bin/bash\ncounter=100\nwhile [ $counter -gt 0 ]\ndo\n   sleep 0.1\n   echo \"on stdout\"\n   echo \"on stderr\" &gt;&amp;2\n   counter=$(( $counter - 1 ))\ndone\nexit 0\n</code></pre>\n\n<p>This code only reads stdout:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>out: on stdout\n</code></pre>\n\n<p>If I remove everything related to stdout in this code and leave only stderr it will read only stderr:</p>\n\n<pre><code>let mut child = Command::new(\"./1.sh\")\n    .stdout(Stdio::null())\n    .stderr(Stdio::piped())\n    .spawn()\n    .unwrap();\n\nlet err = BufReader::new(child.stderr.take().unwrap());\n\nerr.lines().for_each(|line|\n    println!(\"err: {}\", line.unwrap())\n);\n</code></pre>\n\n<p>Produces</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>err: on stderr\n</code></pre>\n\n<p>It seems like it can read either stdout or stderr at a time, but not both. What am I doing wrong?</p>\n\n<p>I'm using Rust 1.26.0-nightly (322d7f7b9 2018-02-25)</p>\n"}, {"tags": ["rust", "gtk"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1519977313, "post_id": 49060417, "comment_id": 85134625, "body": "You need to do the drawing in the <code>draw</code> signal for your <code>DrawingArea</code>. <a href=\"https://stackoverflow.com/a/31967816/5397009\">This answer</a> should give you a good starting point."}], "answers": [{"tags": [], "owner": {"reputation": 1444, "user_id": 6062567, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e87060f0ce67ed68a097ac5186027c5?s=128&d=identicon&r=PG&f=1", "display_name": "oldtechaa", "link": "https://stackoverflow.com/users/6062567/oldtechaa"}, "is_accepted": false, "score": 1, "last_activity_date": 1521563013, "creation_date": 1521563013, "answer_id": 49389405, "question_id": 49060417, "link": "https://stackoverflow.com/questions/49060417/how-to-use-gtkdrawingarea/49389405#49389405", "title": "How to use gtk::DrawingArea?", "body": "<p>As a note, I have no experience in Rust, so I'll use mainly C examples.</p>\n\n<p>You are attempting to render your GUI before starting <code>gtk::main</code>. The proper way to implement a GTK+ GUI is to add your widgets, connect their <code>draw</code> signal (and any other necessary signals) to your own draw callback function, then run <code>gtk::main</code>.</p>\n\n<p>As an example, take the documentation's simple GtkDrawingArea example found <a href=\"https://developer.gnome.org/gtk3/stable/GtkDrawingArea.html#GtkDrawingArea.description\" rel=\"nofollow noreferrer\">here</a>. In this example, <code>g_signal_connect</code> is used to connect the <code>draw</code> signal to the <code>draw_callback</code> callback function. This way, when the widget is actually created by <code>gtk::main</code>, it will draw your desired image on it.</p>\n\n<p>Your <code>draw_callback</code> function will get a Cairo context as a parameter. You will do all your drawing on that context, so there is no need to create your own. This is also demonstrated in the docs by the use of the pointer <code>cr</code> in the parameters of <code>draw_callback</code>.</p>\n\n<p>All your drawing needs to be done in the <code>draw</code> callback function. It will get called anytime an update is necessary (including creation of the GtkDrawingArea widget), or you can force an update by emitting the <code>queue_draw</code> signal.</p>\n\n<p>The <a href=\"https://developer.gnome.org/gtk3/stable/\" rel=\"nofollow noreferrer\">C docs</a> can be a great help even when using a different language, especially if your chosen language doesn't have comprehensive documentation.</p>\n\n<p>Also, the recommended modern way to create a GTK+ application is to use <a href=\"https://developer.gnome.org/gtk3/stable/GtkApplication.html\" rel=\"nofollow noreferrer\">GtkApplication</a>. You may want to look into that.</p>\n"}], "owner": {"reputation": 139, "user_id": 9431345, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OVOx5.jpg?s=128&g=1", "display_name": "Mateholiker", "link": "https://stackoverflow.com/users/9431345/mateholiker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 685, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1521563013, "creation_date": 1519946977, "last_edit_date": 1519951864, "question_id": 49060417, "link": "https://stackoverflow.com/questions/49060417/how-to-use-gtkdrawingarea", "title": "How to use gtk::DrawingArea?", "body": "<p>I am trying to build a GUI in Rust using GTK, Cairo and Glade. I want to draw a playing field using <code>gtk::DrawingArea</code> but I do not know how to use it. I have this:</p>\n\n<pre><code>extern crate cairo;\nextern crate gtk;\n\nuse gtk::*;\n\nfn main() {\n    gtk::init().unwrap(); //init gtk before using it\n\n    let glade_src = include_str!(\"Glade_gui.glade\"); //build the glade gui\n    let builder = gtk::Builder::new_from_string(glade_src);\n\n    //get widgets from the gui\n    let draw_area: gtk::DrawingArea = builder.get_object(\"zeichenbrett\").unwrap();\n    let window: gtk::Window = builder.get_object(\"fenster\").unwrap();\n\n    let size = (600, 600); //define the size for the image\n\n    let style_context: gtk::StyleContext = draw_area.get_style_context().unwrap(); //get the style context from the drawing area\n    let surface: cairo::ImageSurface =\n        cairo::ImageSurface::create(cairo::Format::ARgb32, size.0, size.1).unwrap(); //build a new ImageSurface to draw on\n    let context: cairo::Context = cairo::Context::new(&amp;surface); //build a new cairo context from that ImageSurface to draw on\n\n    //just a blue area\n    context.set_source_rgb(0.0, 0.0, 1.0);\n    context.paint();\n    context.stroke();\n\n    gtk::functions::render_background(\n        &amp;style_context,\n        &amp;context,\n        0.0,\n        0.0,\n        size.0 as f64,\n        size.1 as f64,\n    ); //here I thought that I drew the context                        cairo::Context to the drawingArea but it seems to do nothing.\n\n    window.show_all();\n    gtk::main();\n}\n</code></pre>\n\n<p>It compiles and runs, but no playing field is shown on the window.</p>\n\n<p>I think I am not using the <code>render_background</code> function correctly, but I do not know how to do it right.</p>\n\n<p>Here is the <a href=\"https://pastebin.com/yuAGxFfb\" rel=\"nofollow noreferrer\">Glade_gui.glade</a> file:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!-- Generated with glade 3.20.0 --&gt;\n&lt;interface&gt;\n  &lt;requires lib=\"gtk+\" version=\"3.20\"/&gt;\n  &lt;object class=\"GtkWindow\" id=\"fenster\"&gt;\n    &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n    &lt;property name=\"title\" translatable=\"yes\"&gt;Reise nach Jerusalem&lt;/property&gt;\n    &lt;child&gt;\n      &lt;object class=\"GtkBox\"&gt;\n        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n        &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n        &lt;property name=\"orientation\"&gt;vertical&lt;/property&gt;\n        &lt;child&gt;\n          &lt;object class=\"GtkBox\"&gt;\n            &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n            &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n            &lt;property name=\"spacing\"&gt;5&lt;/property&gt;\n            &lt;property name=\"homogeneous\"&gt;True&lt;/property&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkButton\" id=\"links\"&gt;\n                &lt;property name=\"label\" translatable=\"yes\"&gt;Left&lt;/property&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                &lt;property name=\"receives_default\"&gt;True&lt;/property&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;0&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkButton\" id=\"rechts\"&gt;\n                &lt;property name=\"label\" translatable=\"yes\"&gt;Right&lt;/property&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                &lt;property name=\"receives_default\"&gt;True&lt;/property&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;1&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkButton\" id=\"quit\"&gt;\n                &lt;property name=\"label\" translatable=\"yes\"&gt;Quit&lt;/property&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                &lt;property name=\"receives_default\"&gt;True&lt;/property&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;2&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n          &lt;/object&gt;\n          &lt;packing&gt;\n            &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n            &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n            &lt;property name=\"position\"&gt;0&lt;/property&gt;\n          &lt;/packing&gt;\n        &lt;/child&gt;\n        &lt;child&gt;\n          &lt;object class=\"GtkDrawingArea\" id=\"zeichenbrett\"&gt;\n            &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n            &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n          &lt;/object&gt;\n          &lt;packing&gt;\n            &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n            &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n            &lt;property name=\"position\"&gt;1&lt;/property&gt;\n          &lt;/packing&gt;\n        &lt;/child&gt;\n      &lt;/object&gt;\n    &lt;/child&gt;\n  &lt;/object&gt;\n&lt;/interface&gt;\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "edited": false, "score": 0, "creation_date": 1519945640, "post_id": 49060066, "comment_id": 85125350, "body": "So if you were trying to be conscious of performance here, what would you do? Is the compiler smart enough to know it doesn&#39;t actually need to duplicate data? Would <code>#[inline(always)]</code> improve anything?"}, {"owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "edited": false, "score": 1, "creation_date": 1519946422, "post_id": 49060066, "comment_id": 85125637, "body": "&quot;I wouldn&#39;t worry about the efficiency of copying a single integer.&quot; I&#39;m obvious <b>not copying a single integer!</b> This is a short example for stack overflow."}, {"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1519946425, "post_id": 49060066, "comment_id": 85125638, "body": "I wonder if the value copied would be effectively a single <code>i32</code>, or struct <code>Num</code> would be larger. That is, is this particular abstraction free."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1519947218, "post_id": 49060066, "comment_id": 85125888, "body": "@9000 Within the Rust ABI, it would be completely free (this is called a newtype). Each external ABI has its own guarantees and it can change depending on what you compile for."}, {"owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "edited": false, "score": 0, "creation_date": 1519979240, "post_id": 49060066, "comment_id": 85135531, "body": "@Shepmaster nice! I presumed someone was working on it. I wondered if you could also do it with macros (you&#39;d have to mark / wrap every function that did the math) but I&#39;m not familiar enough with how much Rust macros can get away with"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "edited": false, "score": 1, "creation_date": 1520000632, "post_id": 49060066, "comment_id": 85147307, "body": "@SCdF there is <a href=\"https://github.com/mystor/unsauron\" rel=\"nofollow noreferrer\">unsauron</a>, but it doesn&#39;t appear to be maintained."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1519952524, "last_edit_date": 1519952524, "creation_date": 1519945140, "answer_id": 49060066, "question_id": 49059983, "link": "https://stackoverflow.com/questions/49059983/can-you-implement-math-ops-on-structs-without-explicit-references-or-ownership-m/49060066#49060066", "title": "Can you implement math ops on structs without explicit references or ownership moving?", "body": "<p>No; the traits consume by value, there's no way around that.</p>\n\n<blockquote>\n  <p>But this seems inefficient! We don't need these structs to be duplicated all over the place: it's read-only, and we really just need it to be referenced to create the new structure we're returning.</p>\n</blockquote>\n\n<p>I wouldn't worry about the efficiency of <em>copying a single integer</em>. That's what computers <em>do</em>. In fact, a reference would likely be slower as a reference is also basically an integer which has to be copied and then a piece of memory has to be looked up, <em>also</em> copying the referred-to integer into registers.</p>\n\n<blockquote>\n  <p>I'm obvious[ly] not copying a single integer!</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>An actual example might be doing Vector maths</p>\n</blockquote>\n\n<p>Then the problem becomes one of confusing your users. Without looking at the implementation, how could a user know that <code>a + a</code> is \"lightweight\" or not. If you, the implementer of your type, knows that it's lightweight to copy, you mark it <code>Copy</code>. If it's not, then references need to be made.</p>\n\n<hr>\n\n<p>That's the situation <em>today</em>. There is some <a href=\"https://github.com/rust-lang/rust/issues/44619\" rel=\"nofollow noreferrer\"><em>experimental</em> work</a> that might indeed make this a little bit nicer in the future:</p>\n\n<blockquote>\n  <p>imagine never having to write [...] <code>let z = &amp;u * &amp;(&amp;(&amp;u.square() + &amp;(&amp;A * &amp;u)) + &amp;one);</code> again</p>\n</blockquote>\n\n<p>This experiment spawned from <a href=\"https://github.com/rust-lang/rfcs/pull/2147\" rel=\"nofollow noreferrer\">a now-deferred RFC</a>.</p>\n\n<p>As an amusing aside, this ugly syntax is referred to as the <a href=\"https://twitter.com/isislovecruft/status/839333846415998976\" rel=\"nofollow noreferrer\">Eye of Sauron</a>.</p>\n"}], "owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 1, "accepted_answer_id": 49060066, "answer_count": 1, "score": 6, "last_activity_date": 1519991432, "creation_date": 1519944711, "last_edit_date": 1519991432, "question_id": 49059983, "link": "https://stackoverflow.com/questions/49059983/can-you-implement-math-ops-on-structs-without-explicit-references-or-ownership-m", "title": "Can you implement math ops on structs without explicit references or ownership moving?", "body": "<p>I can't work out how to have clean looking maths on structs without requiring that those struct values be copied everywhere.</p>\n\n<p>If you wanted to have a struct that you could perform math on, you'd write something like this:</p>\n\n<pre><code>use std::ops::*;\n\nstruct Num {\n    i: i32,\n}\n\nimpl Add for Num {\n    type Output = Num;\n    fn add(self, other: Num) -&gt; Num {\n        Num {\n            i: self.i + other.i,\n        }\n    }\n}\n</code></pre>\n\n<p>(This is a simplified example. An actual example might be doing Vector maths)</p>\n\n<p>This lets us write nice <code>a + (b / (c * d))</code> style code.</p>\n\n<p>Due to borrowing semantics, the above code falls over as quickly as <code>a + b + a</code>. Once <code>a</code> is used once it can't be used again, as ownership was moved to the relevant function (i.e. <code>add</code>).</p>\n\n<p>The simple way of solving this is to implement <code>Copy</code> for the struct:</p>\n\n<pre><code>#[derive(Copy)]\nstruct Num {\n    i: i32,\n}\n</code></pre>\n\n<p>This means when <code>Num</code>s are passed to <code>add</code>, their values are automatically cloned so that they can be dropped cleanly.</p>\n\n<p>But this seems inefficient! We don't need these structs to be duplicated all over the place: it's read-only, and we really just need it to be referenced to create the new structure we're returning.</p>\n\n<p>This leads me to think that we should implement the math operations on references instead:</p>\n\n<pre><code>impl&lt;'a&gt; Add for &amp;'a Num {\n    type Output = Num;\n    fn add(&amp;'a self, other: &amp;'a Num) -&gt; Num {\n        Num {\n            i: self.i + other.i,\n        }\n    }\n}\n</code></pre>\n\n<p>Now we have math operations where we aren't cloning data all over the place, but now our math looks gross! <code>a + (b / (c * d))</code> now must be <code>&amp;a + &amp;(&amp;b / &amp;(&amp;c * &amp;d))</code>. It doesn't help if you have your value type references either (eg <code>let a = &amp;Num { /* ... */ }</code>), because the return value of <code>add</code> is still a <code>Num</code>.</p>\n\n<p>Is there a clean way to implement ops for structs such that math operations look clean, and the struct values aren't being copied everywhere? </p>\n\n<p>Related:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/42404227/generic-math-without-copying-in-rust?rq=1\">Generic math without copying in rust</a></li>\n</ul>\n"}, {"tags": ["linux", "rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1519968730, "post_id": 49059900, "comment_id": 85131756, "body": "Have you tried running your program through <code>strace</code>? If this error comes from the OS, then you should be able to see it in <code>strace</code>&#39;s output, along with the parameters that were passed to the problematic call."}, {"owner": {"reputation": 170, "user_id": 7259132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a6635c8b79d99f7089ddd98f3a12f67?s=128&d=identicon&r=PG&f=1", "display_name": "smallstepstoday", "link": "https://stackoverflow.com/users/7259132/smallstepstoday"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1520042535, "post_id": 49059900, "comment_id": 85165677, "body": "Thanks for the tip. The segment right before it crashes looks like this (my apologies for the run-on text). Seems to be stuck in a proc task. open(&quot;/proc/4234/task/4234/net&quot;, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 8 fstat(8, {st_mode=S_IFDIR|0555, st_size=0, ...}) = 0 getdents(8, 0x7f69754d4a70, 32768)      = -1 EINVAL (Invalid argument) write(1, &quot;failed to access entry &#39;&#39;\\n&quot;, 26) = 26"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1520049475, "post_id": 49059900, "comment_id": 85166718, "body": "<code>&#47;proc</code> and <code>&#47;sys</code> are full of virtual files that often act strangely. If you&#39;re only interested in physical files, you should exclude them. If you want to be rigorous, you would exclude mount points of type <code>proc</code> and <code>sysfs</code>, and perhaps some more. Also, I can&#39;t reproduce your problem on my Linux system when I run <code>cargo run &#47;</code>."}], "owner": {"reputation": 170, "user_id": 7259132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a6635c8b79d99f7089ddd98f3a12f67?s=128&d=identicon&r=PG&f=1", "display_name": "smallstepstoday", "link": "https://stackoverflow.com/users/7259132/smallstepstoday"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1519944315, "creation_date": 1519944315, "question_id": 49059900, "link": "https://stackoverflow.com/questions/49059900/walkdir-crate-stuck-reporting-invalid-input-with-error-code-22", "title": "WalkDir crate stuck reporting &quot;invalid input&quot; with error code 22", "body": "<p>I am attempting to write a quick app to inventory specific files throughout the file system on my Linux OS. My expectation is that I will have to deal with permission issues, etc. What is unexpected is that the directory walk appears to get stuck reporting invalid input errors (os error 22). My code is as follows:</p>\n\n<pre><code>extern crate walkdir;\n\nuse walkdir::WalkDir;\nuse std::env;\nuse std::io;\nuse std::path::Path;\n\nfn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n    println!(\"{:?}\", args);\n    for entry in WalkDir::new(&amp;args[1]) {\n        match entry {\n            Ok(_) =&gt; {}, // println!(\"{:?}\", res.path().display()),\n            Err(err) =&gt; {\n                let path = err.path().unwrap_or(Path::new(\"\")).display();\n                println!(\"failed to access entry '{}'\", path);\n                if let Some(inner) = err.io_error() {\n                    match inner.kind() {\n                        // The operation lacked the necessary privileges to complete.\n                        io::ErrorKind::PermissionDenied =&gt; {\n                            // println!(\"  --&gt; permission denied: {}\", inner);\n                        },\n                        // A parameter was incorrect.\n                        io::ErrorKind::InvalidInput =&gt; {\n                            // If you println! instead, the app misbehaves\n                            panic!(\"  --&gt; invalid input: {}\", inner);\n                        },\n                        // Any I/O error not part of this list.\n                        io::ErrorKind::Other =&gt; {\n                            println!(\"  --&gt; other: {}\", inner);\n                        },\n\n                        _ =&gt; {} // While debugging the issue, silence all other errors\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Since there is no path associated with the error, it is difficult to diagnose where the error arises. If the library is in a loop and no longer walking the tree, then this would be a bug. If there are additional guards necessary to eliminate directories into which the app cannot descend, how does one ensure that those directories are not processed.</p>\n\n<p>I know that there is an option to iterate with a filter to eliminate the issue, but since this is for an audit application, the additional visibility is important. The examples of filter functions are simply masking all issues without reporting them.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 3, "creation_date": 1519943867, "post_id": 49059545, "comment_id": 85124725, "body": "Note that function call has higher precedence than deref; <code>*d.to_string()</code> applies the dereference to the result of the call."}], "answers": [{"comments": [{"owner": {"reputation": 852, "user_id": 6563468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4c2119cfc1ee9a6c5deeec2ead9a261?s=128&d=identicon&r=PG&f=1", "display_name": "Logan Reed", "link": "https://stackoverflow.com/users/6563468/logan-reed"}, "edited": false, "score": 1, "creation_date": 1519946489, "post_id": 49059687, "comment_id": 85125657, "body": "The comment from @SebastianRedl and the last line from your answer drove it home for me. Deref coercion takes a bit of time getting used to... Thank you!"}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 4, "last_activity_date": 1519944371, "last_edit_date": 1592644375, "creation_date": 1519943200, "answer_id": 49059687, "question_id": 49059545, "link": "https://stackoverflow.com/questions/49059545/why-does-stringfromd-give-a-different-result-from-d-to-string-on-a-str/49059687#49059687", "title": "Why does String::from(*d) give a different result from *d.to_string() on a &amp;&amp;str?", "body": "<p><code>to_string</code> is called to <code>d</code> before it's deref'd, so you will deref the <code>String</code>, which results in <code>str</code>.</p>\n<p>Change it to</p>\n<pre><code>hs.insert(d.to_string());\n</code></pre>\n<p>This works because <code>d</code> is automatically deref'd to <code>str</code>, which will be converted into <code>String</code> afterwards. This is called <a href=\"https://doc.rust-lang.org/book/first-edition/deref-coercions.html\" rel=\"nofollow noreferrer\"><em>Deref coercions</em></a>.</p>\n<blockquote>\n<p>If you have a type <code>U</code>, and it implements <code>Deref&lt;Target=T&gt;</code>, values of <code>&amp;U</code> will automatically coerce to a <code>&amp;T</code></p>\n<p>...</p>\n<p>Deref will also kick in when calling a method</p>\n</blockquote>\n<p>This is <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#impl-Deref\" rel=\"nofollow noreferrer\">exactly the case here</a>: <code>impl Deref&lt;Target = str&gt; for String</code>. See <a href=\"https://doc.rust-lang.org/book/first-edition/deref-coercions.html#deref-and-method-calls\" rel=\"nofollow noreferrer\">here for an example</a>:</p>\n<blockquote>\n<p>A value of type <code>&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;Foo</code> can still have methods defined on <code>Foo</code> called, because the compiler will insert as many <code>*</code> operations as necessary to get it right. And since it\u2019s inserting <code>*s</code>, that uses <code>Deref</code>.</p>\n</blockquote>\n<p>This <a href=\"https://play.rust-lang.org/?gist=165f88eee01c2afe489d4907656923ff&amp;version=stable\" rel=\"nofollow noreferrer\">example</a> demonstrates this:</p>\n<pre><code>struct Foo;\n\nimpl Foo {\n    fn foo(&amp;self) { println!(&quot;Foo&quot;); }\n}\n\nlet f = &amp;&amp;Foo;\n\n// prints &quot;foo&quot;\nf.foo();\n</code></pre>\n<p>By the way,</p>\n<pre><code>hs.insert((*d).to_string());\n</code></pre>\n<p>will also <a href=\"https://play.rust-lang.org/?gist=164affeff79e892e7961ea01542e46c9&amp;version=stable\" rel=\"nofollow noreferrer\">work</a>, since it's first deref'd to <code>&amp;str</code>.</p>\n"}], "owner": {"reputation": 852, "user_id": 6563468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4c2119cfc1ee9a6c5deeec2ead9a261?s=128&d=identicon&r=PG&f=1", "display_name": "Logan Reed", "link": "https://stackoverflow.com/users/6563468/logan-reed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 49059687, "answer_count": 1, "score": 2, "last_activity_date": 1519945516, "creation_date": 1519942487, "last_edit_date": 1519945516, "question_id": 49059545, "link": "https://stackoverflow.com/questions/49059545/why-does-stringfromd-give-a-different-result-from-d-to-string-on-a-str", "title": "Why does String::from(*d) give a different result from *d.to_string() on a &amp;&amp;str?", "body": "<p>I am a bit puzzled by why dereferencing a <code>&amp;&amp;str</code> doesn't seem to work in the second case:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let days = vec![\"mon\", \"tue\", \"wed\"];\n    let mut hs: HashSet&lt;String&gt; = HashSet::new();\n\n    for d in &amp;days {\n        // works\n        hs.insert(String::from(*d));\n\n        // doesn't\n        hs.insert(*d.to_string());\n    }\n    println!(\"{:#?}\", hs);\n}\n</code></pre>\n\n<p><code>str</code> does implement a <code>ToString</code> trait, but it still gives me the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:12:19\n   |\n12 |         hs.insert(*d.to_string());\n   |                   ^^^^^^^^^^^^^^ expected struct `std::string::String`, found str\n   |\n   = note: expected type `std::string::String`\n              found type `str`\n</code></pre>\n\n<p>What syntax am I getting wrong here?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b1378e98b62e4e6424dbd6d91a23f39d&amp;version=stable\" rel=\"nofollow noreferrer\">Rust Playground Link</a></p>\n"}, {"tags": ["tree", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519932615, "post_id": 49057270, "comment_id": 85119167, "body": "Can you please <a href=\"https://stackoverflow.com/posts/49057270/edit\">edit</a> your question to explain why it&#39;s different from <a href=\"https://stackoverflow.com/q/38089723/155423\">How to implement a &amp;mut iterator for a Binary Search Tree?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519933200, "post_id": 49057270, "comment_id": 85119485, "body": "Having a collection of mutable references like your <code>stack</code> is inherently not a good idea. You can easily get mutable aliasing, which is disallowed in Rust."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1528757319, "last_edit_date": 1528757319, "creation_date": 1528756626, "answer_id": 50806975, "question_id": 49057270, "link": "https://stackoverflow.com/questions/49057270/is-there-a-way-to-iterate-over-a-mutable-tree-to-get-a-random-node/50806975#50806975", "title": "Is there a way to iterate over a mutable tree to get a random node?", "body": "<p>No, it is not safe to write an iterator of the mutable references to the nodes of a tree. </p>\n\n<p>Assume we have this tree structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>         +-+\n    +----+ +----+\n    |    +-+    |\n    |           |\n    |           |\n +--v-+      +--v--+\n | 50 |      | 100 |\n +----+      +-----+\n</code></pre>\n\n<p>If such an iterator existed, we could call it like this:</p>\n\n<pre><code>let mut all_nodes: Vec&lt;&amp;mut Node&gt; = tree.iter_mut().collect();\n</code></pre>\n\n<p>Assume that the parent node ends up in index 0, the left node in index 1, and the right node in index 2.</p>\n\n<pre><code>let (head, tail) = all_nodes.split_at_mut(1);\n\nlet x = match &amp;mut head[0] {\n    Branch(ref mut l, _) =&gt; l,\n    Leaf(_) =&gt; unreachable!(),\n};\n\nlet y = &amp;mut tail[1];\n</code></pre>\n\n<p>Now <code>x</code> and <code>y</code> are mutable aliases to each other. We have <strong>violated a fundamental Rust requirement in completely safe code</strong>. That's why such an iterator is not possible.</p>\n\n<hr>\n\n<p>You could implement an iterator of mutable references to the <em>values</em> in the tree:</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for IterMut&lt;'a&gt; {\n    type Item = &amp;'a mut u8;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        loop {\n            let node = self.stack.pop()?;\n\n            match node {\n                Node::Branch(a, b) =&gt; {\n                    self.stack.push(b);\n                    self.stack.push(a);\n                }\n                Node::Leaf(l) =&gt; return Some(l),\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>This is safe because there's no way to go from one mutable reference to  a value to another one. You can then build your random selection on top of that:</p>\n\n<pre><code>{\n    let rando = match rand::seq::sample_iter(&amp;mut rand::thread_rng(), tree.iter_mut(), 1) {\n        Ok(mut v) =&gt; v.pop().unwrap(),\n        Err(_) =&gt; panic!(\"Not enough elements\"),\n    };\n\n    *rando += 1;\n}\n</code></pre>\n"}], "owner": {"reputation": 100, "user_id": 6826848, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d5b857d0ad6c3cb1fc1631c3a08aeb6?s=128&d=identicon&r=PG&f=1", "display_name": "mizkichan", "link": "https://stackoverflow.com/users/6826848/mizkichan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 567, "favorite_count": 0, "accepted_answer_id": 50806975, "answer_count": 1, "score": 2, "last_activity_date": 1528757319, "creation_date": 1519932408, "last_edit_date": 1519932697, "question_id": 49057270, "link": "https://stackoverflow.com/questions/49057270/is-there-a-way-to-iterate-over-a-mutable-tree-to-get-a-random-node", "title": "Is there a way to iterate over a mutable tree to get a random node?", "body": "<p>I am trying to update a node of a tree structure. A node which is to be updated is selected randomly. To sample a node in the tree using the Reservoir Sampling algorithm, I have to iterate over the nodes, so I have tried to make an <code>Iterator</code> for my <code>Node</code> enum.</p>\n\n<p>The problem is that, on the one hand, I have to store references for child nodes in a stack or queue, however on the other hand, I have to return a mutable reference for a parent node. Rust does not allow to make multiple mutable references for one value, neither to convert an immutable reference into a mutable reference.</p>\n\n<p>Is there a way to iterate over a mutable tree? Or is there another approach to randomly get a mutable reference to a node in a tree?</p>\n\n<p>Here is my code.</p>\n\n<pre><code>#![feature(box_syntax, box_patterns)]\nextern crate rand;\n\n// Simple binary tree structure\n#[derive(Debug)]\nenum Node {\n    Leaf(u8),\n    Branch(Box&lt;Node&gt;, Box&lt;Node&gt;),\n}\n\nimpl Node {\n    fn iter_mut(&amp;mut self) -&gt; IterMut {\n        IterMut {\n            stack: vec![self],\n        }\n    }\n\n    fn pick_random_node_mut&lt;'a&gt;(&amp;'a mut self) -&gt; &amp;'a mut Node {\n        // Revervoir sampling\n        let rng = &amp;mut rand::thread_rng();\n        rand::seq::sample_iter(rng, self.iter_mut(), 1)\n            .ok().and_then(|mut v| v.pop()).unwrap()\n    }\n}\n\n// An iterator for `Node`\nstruct IterMut&lt;'a&gt; {\n    stack: Vec&lt;&amp;'a mut Node&gt;,\n}\n\nimpl &lt;'a&gt; Iterator for IterMut&lt;'a&gt; {\n    type Item = &amp;'a mut Node;\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a mut Node&gt; {\n        let node = self.stack.pop()?;\n\n        // I am stucking here: cannot borrow `*node` as mutable more than once at a time\n        if let &amp;mut Node::Branch(box ref mut a, box ref mut b) = node {\n            self.stack.push(b);\n            self.stack.push(a);\n        }\n        Some(node)\n    }\n}\n\nfn main() {\n    use Node::*;\n\n    let mut tree: Node = Branch(box Leaf(1), box Leaf(2));\n    println!(\"{:?}\", tree);\n\n    {\n        let node: &amp;mut Node = tree.pick_random_node_mut();\n        *node = Leaf(3);\n    }\n    println!(\"{:?}\", tree);\n\n}\n</code></pre>\n"}, {"tags": ["unit-testing", "macros", "rust", "glob"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519930324, "post_id": 49056579, "comment_id": 85118011, "body": "Have you attempted to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> of your problem, emphasis on <i>minimal</i>? For example, I&#39;m guessing you don&#39;t need lazy static or this interpolation crate, two tests, or any code inside the test. It seems to boil down to a confusion about when macros are expanded."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519930452, "post_id": 49056579, "comment_id": 85118079, "body": "<code>fname1.get(6..).unwrap()</code> -&gt; <code>&amp;fname1[6..]</code>"}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1519930453, "post_id": 49056579, "comment_id": 85118080, "body": "Generating a functions for specific filenames seems unnecessary, especially as they&#39;re just hard coding the filename. Could you instead run <code>check_files</code> in a loop? Write a generator to spit out all possible filename combinations and loop over <code>check_files</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1519930536, "post_id": 49056579, "comment_id": 85118125, "body": "@Schwern that&#39;s a likely workaround, but it&#39;s certainly unsatisfying to those of us who love testing and having our test suites provide useful feedback about what has failed. Rust&#39;s test framework isn&#39;t quite there yet."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519930561, "post_id": 49056579, "comment_id": 85118137, "body": "@Shepmaster <code>check_files</code> can provide that feedback, or a small wrapper around <code>check_files</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1519930670, "post_id": 49056579, "comment_id": 85118185, "body": "@Schwern I agree that it&#39;s <i>possible</i>, but you either fail at the first error or you have to track all the failures separately and print them out (in a different form from the test harness), and you have to remember to catch panics, etc."}, {"owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519930698, "post_id": 49056579, "comment_id": 85118199, "body": "@Shepmaster good point, I have pushed a simplification to the Github repo."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519930722, "post_id": 49056579, "comment_id": 85118213, "body": "<code>.collect::&lt;Vec&lt;&amp;str&gt;&gt;()[0]</code> -&gt; <code>.next().unwrap()</code>"}, {"owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "reply_to_user": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1519930723, "post_id": 49056579, "comment_id": 85118214, "body": "@Schwern yes, it&#39;s possible to just do everything in a big loop and change the assertion failure message. However, that&#39;s not a very satisfying way to parameterise tests, and I would like to at least know whether it is possible to do better."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1519933204, "post_id": 49056579, "comment_id": 85119487, "body": "OIC. You generate <code>test_files_a_b</code> and then Rust automatically runs those functions and you get granular reports based on the file name. That&#39;s a messed up testing system; I understand why you&#39;re doing it that way."}, {"owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "edited": false, "score": 0, "creation_date": 1519934127, "post_id": 49056579, "comment_id": 85120000, "body": "FWIW systems such as <a href=\"https://docs.pytest.org/en/latest/example/parametrize.html\" rel=\"nofollow noreferrer\">PyTest</a> allow you to do some quite sophisticated things with parameterised tests (of course, PyTest is working with a dynamic language, which makes it much easier)."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1519931347, "post_id": 49056967, "comment_id": 85118559, "body": "So you&#39;d agree this question can be solved <a href=\"https://stackoverflow.com/a/42751723/155423\">by this existing answer</a>?"}, {"owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "edited": false, "score": 1, "creation_date": 1519931414, "post_id": 49056967, "comment_id": 85118592, "body": "Well, this is a very different approach, and the compiler error isn&#39;t solved by replacing the <code>lazy_static</code> with a hard-coded list of files..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "edited": false, "score": 0, "creation_date": 1519931711, "post_id": 49056967, "comment_id": 85118734, "body": "@snim2 can you explain how it&#39;s a &quot;very different approach&quot; from the answer that also creates a build script that generates test code to a file and includes the generated file?"}, {"owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "edited": false, "score": 1, "creation_date": 1519932016, "post_id": 49056967, "comment_id": 85118873, "body": "In the sense that 1) this answer doesn&#39;t explain the error message, 2) it doesn&#39;t show how to use <code>interpolate_ident</code> or similar to deal with the unit test names and 3) it involved the unit test runner running a file which does not exist on disk until the code is built. It&#39;s a good answer, but it leaves me a little unclear about where the approach in the original question went wrong."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "edited": false, "score": 0, "creation_date": 1519950978, "post_id": 49056967, "comment_id": 85126961, "body": "@snim2 the <i>title</i> of your question is &quot;Generating unit tests for pairs of files on disk&quot;. Do you disagree that this answer answers the question you asked?"}, {"owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "edited": false, "score": 0, "creation_date": 1519984514, "post_id": 49056967, "comment_id": 85138391, "body": "I agree that that&#39;s the question in the title, and the question about the compiler error was given in the question (unless it has been edited out). If there isn&#39;t a better answer forthcoming I will accept this one, but I am still curious about why the previous gave that particular error."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 2, "last_activity_date": 1519931260, "last_edit_date": 1519931260, "creation_date": 1519931107, "answer_id": 49056967, "question_id": 49056579, "link": "https://stackoverflow.com/questions/49056579/generating-unit-tests-for-pairs-of-files-on-disk/49056967#49056967", "title": "Generating unit tests for pairs of files on disk", "body": "<p>The trouble with your attempted approach at parameterized tests is that <code>TEST_FILES</code> is computed only at runtime, while you are expecting to be able to use it at compile time to stamp out the several <code>#[test]</code> functions.</p>\n\n<p>In order to make this work, you will need some way to compute <code>TEST_FILES</code> at compile time. One possibility would be through a build script that iterates the glob at build time and writes out <code>#[test]</code> functions to a file that can be included from your test directory.</p>\n\n<h3>In <code>Cargo.toml</code>:</h3>\n\n<pre><code>[package]\n# ...\nbuild = \"build.rs\"\n\n[build-dependencies]\nglob = \"0.2\"\n</code></pre>\n\n<h3>In <code>build.rs</code>:</h3>\n\n<pre><code>use std::env;\nuse std::fs::File;\nuse std::io::Write;\nuse std::path::Path;\n\nextern crate glob;\nuse glob::glob;\n\nfn main() {\n    let test_files = glob(\"tests/*.java\")\n        .expect(\"Failed to read glob pattern\")\n        .into_iter();\n\n    let outfile_path = Path::new(&amp;env::var(\"OUT_DIR\").unwrap()).join(\"gen_tests.rs\");\n    let mut outfile = File::create(outfile_path).unwrap();\n    for file in test_files {\n        let java_file = file.unwrap().to_str().unwrap().to_string();\n\n        // FIXME: fill these in with your own logic for manipulating the filename.\n        let name = java_file;\n        let name1 = \"NAME1\";\n        let name2 = \"NAME2\";\n\n        write!(outfile, r#\"\n            #[test]\n            fn test_globbed_{name}_null() {{\n                check_files({name1}, {name2}, \"null test\");\n            }}\n            #[test]\n            fn test_globbed_{name}_non_null() {{\n                check_files({name1}, {name2}, \"non-null test\");\n            }}\n        \"#, name=name, name1=name1, name2=name2).unwrap();\n    }\n}\n</code></pre>\n\n<h3>In <code>tests/tests.rs</code>:</h3>\n\n<pre><code>include!(concat!(env!(\"OUT_DIR\"), \"/gen_tests.rs\"));\n</code></pre>\n"}], "owner": {"reputation": 3312, "user_id": 342327, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8fd5badb01bbc9389476e9394ab6607e?s=128&d=identicon&r=PG", "display_name": "snim2", "link": "https://stackoverflow.com/users/342327/snim2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 1, "accepted_answer_id": 49056967, "answer_count": 1, "score": 1, "last_activity_date": 1519931260, "creation_date": 1519929728, "last_edit_date": 1519930976, "question_id": 49056579, "link": "https://stackoverflow.com/questions/49056579/generating-unit-tests-for-pairs-of-files-on-disk", "title": "Generating unit tests for pairs of files on disk", "body": "<p>A few questions (such as  <a href=\"https://stackoverflow.com/questions/34662713/how-can-i-create-parameterized-tests-in-rust/34666891#34666891\">How can I create parameterized tests in Rust?</a>) deal with using macros to create parameterised unit tests in Rust. I need to use this technique to <a href=\"https://github.com/snim2/testglobsoquestion\" rel=\"nofollow noreferrer\">generate a pair of unit tests for every pair of input files in a directory</a>. The unit tests themselves just call a simple function:</p>\n\n<pre><code>fn check_files(path1: &amp;str, path2: &amp;str, msg: &amp;str) {\n    assert!(true, \"FAILURE: {}: {} and {}.\", msg, path1, path2);\n}\n</code></pre>\n\n<p>I use <code>lazy_static</code> to generate a list of input files:</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(interpolate_idents)]\n\nextern crate glob;\n#[macro_use]\nextern crate lazy_static;\n\nuse glob::glob;\n\nlazy_static! {\n    /// Glob all example files in the `tests/` directory.\n    static ref TEST_FILES: Vec&lt;String&gt; = glob(\"tests/*.java\")\n        .expect(\"Failed to read glob pattern\")\n        .into_iter()\n        .map(|res| res.unwrap().to_str().unwrap().to_string())\n        .collect::&lt;Vec&lt;String&gt;&gt;();\n}\n</code></pre>\n\n<p>And then the macros use the <a href=\"https://github.com/SkylerLipthay/interpolate_idents\" rel=\"nofollow noreferrer\">interpolate idents</a> crate to concatenate identifiers to create the unit test names:</p>\n\n<pre><code>#[test]\nfn test_glob_runner() {\n    // Define unit tests for a single pair of filenames.\n    macro_rules! define_tests {\n        ($name1:tt, $name2:tt, $fname1:expr, $fname2:expr) =&gt; ( interpolate_idents! {\n            #[test]\n            fn [test_globbed_ $name1 _ $name2 _null]() {\n                check_files($fname1, $fname2, \"null test\");\n            }\n            #[test]\n            fn [test_globbed_ $name1 _ $name2 _non_null]() {\n                check_files($fname1, $fname2, \"non-null test\");\n            }\n        } )\n    }\n    // Write out unit tests for all pairs of given list of filenames.\n    macro_rules! test_globbed_files {\n        ($d:expr) =&gt; {\n            for fname1 in $d.iter() {\n                for fname2 in $d.iter() {\n                    // Remove directory and extension from `fname1`, `fname2`.\n                    let name1 = &amp;fname1[6..].split(\".\").next().unwrap();\n                    let name2 = &amp;fname1[6..].split(\".\").next().unwrap();\n                    || { define_tests!(name1, name2, fname1, fname2) };\n                }\n            }\n        }\n    }\n    // Test all pairs of files in the `tests/` directory.\n    test_globbed_files!(TEST_FILES);\n}\n</code></pre>\n\n<p>This gives the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected expression, found keyword `fn`\n  --&gt; tests/test.rs:14:13\n   |\n14 |             fn [test_globbed_ $name1 _ $name2 _null]() {\n   |             ^^\n</code></pre>\n\n<p>This error message makes little sense to me, not least because the <code>define_tests</code> macro is similar to the <a href=\"https://github.com/SkylerLipthay/interpolate_idents/blob/master/tests/tests.rs#L65-L75\" rel=\"nofollow noreferrer\">code here</a>. However, I'm not sure that it's really possible to use <code>name1</code> and <code>name2</code> in the unit test name.</p>\n\n<p>There is a <a href=\"https://github.com/snim2/testglobsoquestion\" rel=\"nofollow noreferrer\">complete but simplified example project on GitHub</a>, just clone and run <code>cargo test</code> to see the compiler error.</p>\n"}, {"tags": ["rust", "aes"], "answers": [{"comments": [{"owner": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1519933243, "post_id": 49057357, "comment_id": 85119512, "body": "Great, I appreciate it. Out of curiosity, any idea what that garbage data is or where it would have come from?"}, {"owner": {"reputation": 820, "user_id": 3016176, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/084245accd7db8465b8a221ae08e2127?s=128&d=identicon&r=PG", "display_name": "sfackler", "link": "https://stackoverflow.com/users/3016176/sfackler"}, "reply_to_user": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 2, "creation_date": 1519933579, "post_id": 49057357, "comment_id": 85119702, "body": "No idea - I&#39;d need to see at the code that did the encryption. Encrypting <code>Half</code> with that key and IV gives me <code>ZfIfn7CkScGMNiQHW9&#47;&#47;vg==</code>, so it seems like there&#39;s something else happening on the encryption side."}, {"owner": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1519933784, "post_id": 49057357, "comment_id": 85119825, "body": "Very good. I&#39;ll chalk it up to yet more idiosyncrasies with the <code>symmetric_encryption</code> gem, about which I asked a different <a href=\"https://stackoverflow.com/questions/47661306/how-do-i-decrypt-data-encrypted-by-rubys-symmetric-encryption-gem-in-another\">question</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1519935063, "post_id": 49057357, "comment_id": 85120510, "body": "@EthanKent your existing question already contains the answer: <i>by default it adds a header to the output, and then base64 encodes it</i>"}, {"owner": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1519935173, "post_id": 49057357, "comment_id": 85120573, "body": "Okay, got it. I thought I was stripping the <code>symmetric_encryption</code> header with the line <code>let ciphertext = &amp;decoded[HEADER_SIZE..];</code> line."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 1, "creation_date": 1519935598, "post_id": 49057357, "comment_id": 85120800, "body": "@EthanKent have you seen <a href=\"https://github.com/rocketjob/symmetric-encryption/blob/v4.0.0/lib/symmetric_encryption/header.rb#L125-L144\" rel=\"nofollow noreferrer\">the documentation in the code</a>? It seems to be much more than 8 bytes that you use here or the 6 bytes the other answer states..."}, {"owner": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1519936446, "post_id": 49057357, "comment_id": 85121214, "body": "Oh yeah, you&#39;re right.   I wonder if it&#39;s a coincidence, then, that the combination of stripping 8 bytes plus the way the node <code>update()</code> method works just happened to swallow the 12(?) bytes of the header. Another person on the team finished implementing the Node code using the other answer, and I was trying to port their code to Rust\u2014maybe they just tried different header values until it worked. Peculiar."}], "tags": [], "owner": {"reputation": 820, "user_id": 3016176, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/084245accd7db8465b8a221ae08e2127?s=128&d=identicon&r=PG", "display_name": "sfackler", "link": "https://stackoverflow.com/users/3016176/sfackler"}, "is_accepted": true, "score": 3, "last_activity_date": 1519932840, "last_edit_date": 1519932840, "creation_date": 1519932749, "answer_id": 49057357, "question_id": 49054778, "link": "https://stackoverflow.com/questions/49054778/how-do-i-get-rusts-openssl-crate-to-decrypt-data-from-the-symmetric-encryption/49057357#49057357", "title": "How do I get Rust&#39;s openssl crate to decrypt data from the symmetric-encryption gem without the gibberish that Node Crypto automatically removes?", "body": "<p><code>decipher.update</code> <a href=\"https://nodejs.org/api/crypto.html#crypto_decipher_update_data_inputencoding_outputencoding\" rel=\"nofollow noreferrer\">returns a <code>Buffer</code></a> which is ignored in the Node implementation. If you change the Node implementation to print the buffer returned from the update call, you can see that it's the same garbage data:</p>\n\n<pre><code>const buffer = decipher.update(CIPHERTEXT.slice(HEADER_SIZE));\nconsole.log(buffer.toString());\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\ufffdK\ufffd6x\ufffd\ufffd\ufffd\ufffd5D\ufffd|\n</code></pre>\n\n<p>If you change the Rust version to ignore that portion of the output as well, you see the expected output:</p>\n\n<pre><code>extern crate base64;\nextern crate openssl;\n\nuse openssl::symm::*;\n\nconst KEY: &amp;'static [u8] = b\"1234567890ABCDEF\";\nconst IV: &amp;'static [u8] = b\"1234567890ABCDEF\";\nconst CIPHERTEXT: &amp;'static str = \"QEVuQwBAEACuPUPByDkk5jyNzQ3Wd3xTy2Isihz62XTLe1M5qKQrvw==\";\nconst HEADER_SIZE: usize = 8;\n\nfn main() {\n    let decoded = base64::decode(&amp;CIPHERTEXT).unwrap();\n    let ciphertext = &amp;decoded[HEADER_SIZE..];\n\n    let t = Cipher::aes_128_cbc();\n    let mut d = Crypter::new(t, Mode::Decrypt, KEY, Some(IV)).unwrap();\n    let mut result = vec![0; CIPHERTEXT.len() + t.block_size()];\n    d.update(&amp;ciphertext, &amp;mut result).unwrap();\n    let len = d.finalize(&amp;mut result).unwrap();\n    result.truncate(len);\n    println!(\"{:?}\", result);\n    println!(\"{:?}\", String::from_utf8_lossy(&amp;result));\n}\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[72, 97, 108, 102]\n\"Half\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1519951522, "post_id": 49060987, "comment_id": 85127123, "body": "Thank you for that, it&#39;s very generous of you! I was going to start working with the <code>symmetric_encryption</code> source tomorrow, as I was still getting screwy results with some data. I also have a lot to learn about working with bytes, so I&#39;m looking forward to working through this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1519951662, "post_id": 49060987, "comment_id": 85127160, "body": "@EthanKent no problem; the fact that there were &quot;magic&quot; ignored bytes just really bothered me. You could certainly improve the <code>decode</code> function by making a new structure."}, {"owner": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1519952049, "post_id": 49060987, "comment_id": 85127287, "body": "Yeah, I had the same sense that since I couldn&#39;t explain why the code worked, I wasn&#39;t super confident in it. We checked with some additional examples and found ones where the padding wasn&#39;t getting stripped out fully. I guess &quot;it works but I don&#39;t know why&quot; is a pretty strong signal that you&#39;re not done yet."}, {"owner": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "edited": false, "score": 0, "creation_date": 1520004383, "post_id": 49060987, "comment_id": 85149885, "body": "For anyone else who happens across this and is interested in the Node side of things, the exact way the Node implementation is wrong is that the results of the <code>update()</code> function and the <code>final()</code> function are supposed to be concatenated. See the <a href=\"https://nodejs.org/api/crypto.html#crypto_class_decipher\" rel=\"nofollow noreferrer\">docs</a>. The author of the Node code ignored the output of <code>update()</code> as a hack (because it exactly swallowed up the header in the test cases we tried)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1519951444, "last_edit_date": 1519951444, "creation_date": 1519950864, "answer_id": 49060987, "question_id": 49054778, "link": "https://stackoverflow.com/questions/49054778/how-do-i-get-rusts-openssl-crate-to-decrypt-data-from-the-symmetric-encryption/49060987#49060987", "title": "How do I get Rust&#39;s openssl crate to decrypt data from the symmetric-encryption gem without the gibberish that Node Crypto automatically removes?", "body": "<p>Your Node decryption is <strong>incorrect</strong> and it only works because you are ignoring exactly the correct number of bytes before the data begins, as <a href=\"https://stackoverflow.com/a/49057357/155423\">sfackler explains</a>.</p>\n\n<p><a href=\"https://github.com/rocketjob/symmetric-encryption/blob/v4.0.0/lib/symmetric_encryption/header.rb#L146-L187\" rel=\"nofollow noreferrer\">symmetric-encryption</a> pads the data with a header. The header has flexible length based on the options you are using. This code properly parses the entire header and then <em>uses the IV embedded in the header</em>: </p>\n\n<pre><code>extern crate base64;\nextern crate openssl;\nextern crate byteorder;\n\nuse openssl::symm::*;\nuse byteorder::{LittleEndian, ReadBytesExt};\n\nuse std::io::{self, Cursor, BufRead};\n\nconst KEY: &amp;'static [u8] = b\"1234567890ABCDEF\";\n//const IV: &amp;'static [u8] = b\"1234567890ABCDEF\";\nconst CIPHERTEXT: &amp;'static str = \"QEVuQwBAEACuPUPByDkk5jyNzQ3Wd3xTy2Isihz62XTLe1M5qKQrvw==\";\n\nconst FLAG_COMPRESSED: u8  = 0b1000_0000;\nconst FLAG_IV: u8          = 0b0100_0000;\nconst FLAG_KEY: u8         = 0b0010_0000;\nconst FLAG_CIPHER_NAME: u8 = 0b0001_0000;\nconst FLAG_AUTH_TAG: u8    = 0b0000_1000;\n\n#[derive(Debug)]\nstruct EncryptedData&lt;'a&gt; {\n    version: u8,\n    compressed: bool,\n    iv: Option&lt;&amp;'a [u8]&gt;,\n    key: Option&lt;&amp;'a [u8]&gt;,\n    cipher_name: Option&lt;&amp;'a [u8]&gt;,\n    auth_tag: Option&lt;&amp;'a [u8]&gt;,\n    data: &amp;'a [u8],\n}\n\nimpl&lt;'a&gt; EncryptedData&lt;'a&gt; {\n    fn decode(decoded: &amp;'a [u8]) -&gt; Result&lt;Self, io::Error&gt; {\n        let mut cursor = Cursor::new(decoded);\n\n        let magic = {\n            let raw = cursor.get_ref();\n            let current = cursor.position() as usize;\n            &amp;raw[current..][..4]\n        };\n        cursor.consume(4);\n        assert_eq!(b\"@EnC\", magic);\n\n        let version = cursor.read_u8()?;\n        let flags = cursor.read_u8()?;\n        let compressed = flags &amp; FLAG_COMPRESSED != 0;\n\n        fn maybe_read_string&lt;'b&gt;(cursor: &amp;mut Cursor&lt;&amp;'b [u8]&gt;, flag: bool) -&gt; Result&lt;Option&lt;&amp;'b [u8]&gt;, io::Error&gt; {\n            if flag {\n                let len = cursor.read_u16::&lt;LittleEndian&gt;()? as usize;\n                let data = {\n                    let raw = cursor.get_ref();\n                    let current = cursor.position() as usize;\n                    Some(&amp;raw[current..][..len])\n                };\n                cursor.consume(len);\n                Ok(data)\n            } else {\n                Ok(None)\n            }\n        }\n\n        let iv = maybe_read_string(&amp;mut cursor, flags &amp; FLAG_IV != 0)?;\n        let key = maybe_read_string(&amp;mut cursor, flags &amp; FLAG_KEY != 0)?;\n        let cipher_name = maybe_read_string(&amp;mut cursor, flags &amp; FLAG_CIPHER_NAME != 0)?;\n        let auth_tag = maybe_read_string(&amp;mut cursor, flags &amp; FLAG_AUTH_TAG != 0)?;\n        let data = {\n            let raw = cursor.get_ref();\n            let current = cursor.position() as usize;\n            &amp;raw[current..]\n        };\n\n        Ok(EncryptedData {\n            version, compressed, iv, key, cipher_name, auth_tag, data,\n        })\n    }\n}\n\nfn main() {\n    let decoded = base64::decode(&amp;CIPHERTEXT).unwrap();\n    let data = EncryptedData::decode(&amp;decoded).unwrap();\n\n    match decrypt(Cipher::aes_128_cbc(), KEY, data.iv, &amp;data.data) {\n        Ok(result) =&gt; {\n            println!(\"{:?}\", result);\n            println!(\"{:?}\", String::from_utf8_lossy(&amp;result));\n        }\n        Err(e) =&gt; {\n            println!(\"{}\", e);\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 311, "user_id": 3396324, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/39703398/picture?type=large", "display_name": "Ethan Kent", "link": "https://stackoverflow.com/users/3396324/ethan-kent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1129, "favorite_count": 0, "accepted_answer_id": 49057357, "answer_count": 2, "score": 3, "last_activity_date": 1519951444, "creation_date": 1519923032, "last_edit_date": 1519951332, "question_id": 49054778, "link": "https://stackoverflow.com/questions/49054778/how-do-i-get-rusts-openssl-crate-to-decrypt-data-from-the-symmetric-encryption", "title": "How do I get Rust&#39;s openssl crate to decrypt data from the symmetric-encryption gem without the gibberish that Node Crypto automatically removes?", "body": "<p>I'm decrypting legacy data created by a Ruby on Rails application using the symmetric-encryption gem in Rust. See my earlier question <a href=\"https://stackoverflow.com/questions/47661306/\">How do I decrypt data encrypted by Ruby&#39;s `symmetric-encryption` gem in another language?</a>.</p>\n\n<p>I've already implemented this in Node where the crypto library seems to know how to strip out gibberish in an encrypted string that Rust's <a href=\"https://crates.io/crates/openssl\" rel=\"nofollow noreferrer\"><code>openssl</code> crate</a> isn't stripping out (at least, the way I'm using it). I have already stripped out the PKCS7 padding and a header, yet it's still there. What is that gobbledygook, and how do I get Rust to remove it?</p>\n\n<p>The encrypted data began as plaintext with a fixed-size header, was encrypted using AES-128-CBC with PKCS7 padding, and was then Base64 encoded. Using Node, I can decrypt it correctly using the following code:</p>\n\n<pre><code>const crypto = require(\"crypto\");\n\nconst KEY = Buffer.from(\"1234567890ABCDEF\");\nconst IV = Buffer.from(\"1234567890ABCDEF\");\nconst CIPHERTEXT = Buffer.from(\"QEVuQwBAEACuPUPByDkk5jyNzQ3Wd3xTy2Isihz62XTLe1M5qKQrvw==\", \"base64\");\nconst HEADER_SIZE = 8;\nconst ALGO = \"aes-128-cbc\";\n\nconst decipher = crypto.createDecipheriv(ALGO, KEY, IV);\n\ndecipher.update(CIPHERTEXT.slice(HEADER_SIZE));\nconst result = decipher.final();\n\nconsole.log([...result]);\nconsole.log(result.toString());\n</code></pre>\n\n<p>The result is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[ 72, 97, 108, 102 ]\nHalf\n</code></pre>\n\n<p>I'd prefer to use Rust for the application I'm writing. Using the <code>openssl</code> crate, I can decode the encrypted data, but there's a bunch of junk that Node's library knows how to strip but Rust isn't stripping automatically the way I'm using it:</p>\n\n<pre><code>extern crate base64;\nextern crate openssl;\n\nuse openssl::symm::*;\n\nconst KEY: &amp;'static [u8] = b\"1234567890ABCDEF\";\nconst IV: &amp;'static [u8] = b\"1234567890ABCDEF\";\nconst CIPHERTEXT: &amp;'static str = \"QEVuQwBAEACuPUPByDkk5jyNzQ3Wd3xTy2Isihz62XTLe1M5qKQrvw==\";\nconst HEADER_SIZE: usize = 8;\n\nfn main() {\n    let decoded = base64::decode(&amp;CIPHERTEXT).unwrap();\n    let ciphertext = &amp;decoded[HEADER_SIZE..];\n\n    let result = decrypt(Cipher::aes_128_cbc(), KEY, Some(IV), ciphertext).unwrap();\n    println!(\"{:?}\", result);\n    println!(\"{:?}\", String::from_utf8_lossy(&amp;result));\n}\n</code></pre>\n\n<p>Here the result is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[221, 75, 14, 215, 54, 120, 246, 222, 194, 208, 53, 68, 127, 190, 124, 8, 72, 97, 108, 102]\n\"\ufffdK\\u{e}\ufffd6x\ufffd\ufffd\ufffd\ufffd5D\\u{7f}\ufffd|\\u{8}Half\"\n</code></pre>\n\n<p>You can see that the last four bytes are correct, but that Node stripped out the preceding 16 bytes, as it appears it should have. I don't know what those bytes are.</p>\n\n<p>At first I thought the 16 bytes of gibberish were from attempting to decrypt the PKCS7 padding. But I can verify that the padding was already stripped out: if I create a <code>Crypter</code> following the example in the <code>openssl</code> crate's <a href=\"https://docs.rs/openssl/0.10.4/openssl/symm/struct.Crypter.html\" rel=\"nofollow noreferrer\">documentation</a>, but don't include the <code>truncate()</code> step, the resulting <code>Vec</code> has 12 consecutive <code>12</code>s&mdash;the PKCS7 padding&mdash;that were automatically removed. </p>\n\n<p>So the gibberish is not PKCS7 padding, but I don't know what it is or how to get rid of it using Rust.</p>\n\n<p>And to anticipate the Miranda warning about not futzing with crypto if I'm not an expert: this is not going to be used in production or to create data to put into production.</p>\n"}, {"tags": ["performance", "recursion", "rust", "benchmarking"], "comments": [{"owner": {"reputation": 16237, "user_id": 2166798, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/417356917295f5176d2a3e7c21d8f9e8?s=128&d=identicon&r=PG", "display_name": "pjs", "link": "https://stackoverflow.com/users/2166798/pjs"}, "edited": false, "score": 3, "creation_date": 1519916278, "post_id": 49052327, "comment_id": 85109288, "body": "You&#39;ve implemented entirely different algorithms.  Your recursive implementation keeps re-evaluating intermediate calculations, and is O(2^n), you imperative one is O(n).  This is a well-known result.  Choose a different implementation for the recursive one.  Here are some alternative implementations, albeit not in rust: <a href=\"https://stackoverflow.com/a/24439070/2166798\">stackoverflow.com/a/24439070/2166798</a>"}, {"owner": {"reputation": 42418, "user_id": 912144, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/d17cb5b704821f11179ce281b8cae25e?s=128&d=identicon&r=PG", "display_name": "Shahbaz", "link": "https://stackoverflow.com/users/912144/shahbaz"}, "edited": false, "score": 4, "creation_date": 1519916285, "post_id": 49052327, "comment_id": 85109295, "body": "Simple. You are recalculating the same values over and over in your recursive implementation. For example, think about how f(n) calculates f(n-1) and f(n-2), but f(n-1) has already calculated f(n-2) which you are not taking advantage of. See here: <a href=\"https://stackoverflow.com/q/360748/912144\">stackoverflow.com/q/360748/912144</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1519916537, "post_id": 49052327, "comment_id": 85109483, "body": "<a href=\"https://en.wikipedia.org/wiki/Memoization\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Memoization</a>"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1519916898, "post_id": 49052327, "comment_id": 85109745, "body": "Thanks guys, that makes sense :) Going to rewrite the function to use memoization and then run <code>cargo bench</code> again for an answer. If any of you wants to write it instead, I will accept that."}], "answers": [{"comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1519917889, "post_id": 49052656, "comment_id": 85110478, "body": "Thank you for the more analytical answer, it&#39;s quite interesting. Also, I didn&#39;t know about the term &quot;dynamic programming&quot;, so thanks for that link as well!"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1519930461, "post_id": 49052656, "comment_id": 85118085, "body": "Or you could say the recursive version has <code>O(Fib(N))</code> complexity.  In fact, <a href=\"https://stackoverflow.com/a/22084314/224132\"><code>\u03b8(Fib(n))</code> is an exact bound</a>, and <code>3 * Fib(N) - 3</code> is the number of additions performed.  (Of course, the recursing and comparing against the base case costs more time than the actual addition, so better just stick to the complexity class!)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1519918303, "last_edit_date": 1519918303, "creation_date": 1519916938, "answer_id": 49052656, "question_id": 49052327, "link": "https://stackoverflow.com/questions/49052327/why-is-my-recursive-fibonacci-implementation-so-slow-compared-to-an-iterative-on/49052656#49052656", "title": "Why is my recursive Fibonacci implementation so slow compared to an iterative one?", "body": "<p>The algorithmic complexity between the two implementations differs:</p>\n\n<ul>\n<li>your iterative implementation uses an accumulator: O(N),</li>\n<li>your recursive implementation doesn't: O(1.6<sup>N</sup>).</li>\n</ul>\n\n<p>Since 20 (N) &lt;&lt; 12089 (1.6<sup>N</sup>), it's pretty normal to have a large difference.</p>\n\n<p><em>See <a href=\"https://stackoverflow.com/questions/360748/computational-complexity-of-fibonacci-sequence\">this answer</a> for an exact computation of the complexity in the naive implementation case.</em></p>\n\n<p><em>Note: the method you use for the iterative case is called <a href=\"https://en.wikipedia.org/wiki/Dynamic_programming\" rel=\"nofollow noreferrer\">dynamic programming</a>.</em></p>\n"}, {"comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1519917569, "post_id": 49052806, "comment_id": 85110235, "body": "Thanks. I&#39;m going to accept this answer because it shows people that might stumble on this how to improve it. By the way, <code>cargo bench</code> shows that this solution only takes <code>2 ns&#47;iter</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 2, "creation_date": 1519918083, "post_id": 49052806, "comment_id": 85110641, "body": "@JanNilsFerner Looks like tail call optimization is at work ;) I read that in <i>some</i> circumstances (not guaranteed) LLVM can do TCO."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1519918466, "post_id": 49052806, "comment_id": 85110947, "body": "@Boiethios: Indeed. Basically TCO boils down to: the recursive call is the <i>last</i> thing that your function does. Here, the last line of <code>inner</code> is called <code>inner</code> so it qualifies... although it&#39;s not always as obvious in C++ or Rust because of destructors, which are executed last even though they don&#39;t appear in the code and therefore may prevent TCO. Here, no destructor, everything&#39;s fine :)"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1519920582, "post_id": 49052806, "comment_id": 85112413, "body": "I just realized that your implementation has a tiny flaw in it: It underflows on zero"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1519921220, "post_id": 49052806, "comment_id": 85112833, "body": "@JanNilsFerner Done"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1519921533, "post_id": 49052806, "comment_id": 85113067, "body": "@Boiethios Thanks :)"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 9, "last_activity_date": 1519922089, "last_edit_date": 1519922089, "creation_date": 1519917332, "answer_id": 49052806, "question_id": 49052327, "link": "https://stackoverflow.com/questions/49052327/why-is-my-recursive-fibonacci-implementation-so-slow-compared-to-an-iterative-on/49052806#49052806", "title": "Why is my recursive Fibonacci implementation so slow compared to an iterative one?", "body": "<p>As said by Shepmaster, you should use accumulators to keep the previously calculated <code>fib(n - 1)</code> and <code>fib(n - 2)</code> otherwise you keep calculating the same values:</p>\n\n<pre><code>pub fn fibonacci_recursive(n: u32) -&gt; u32 {\n    fn inner(n: u32, penultimate: u32, last: u32) -&gt; u32 {\n        match n {\n            0 =&gt; penultimate,\n            1 =&gt; last,\n            _ =&gt; inner(n - 1, last, penultimate + last),\n        }\n    }\n    inner(n, 0, 1)\n}\n\nfn main() {\n    assert_eq!(fibonacci_recursive(0), 0);\n    assert_eq!(fibonacci_recursive(1), 1);\n    assert_eq!(fibonacci_recursive(2), 1);\n    assert_eq!(fibonacci_recursive(20), 6765);\n}\n</code></pre>\n\n<p><code>last</code> is equivalent to <code>fib(n - 1)</code>.<br>\n<code>penultimate</code> is equivalent to <code>fib(n - 2)</code>.  </p>\n"}], "owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1024, "favorite_count": 2, "accepted_answer_id": 49052806, "answer_count": 2, "score": 4, "last_activity_date": 1519922089, "creation_date": 1519915939, "last_edit_date": 1519920353, "question_id": 49052327, "link": "https://stackoverflow.com/questions/49052327/why-is-my-recursive-fibonacci-implementation-so-slow-compared-to-an-iterative-on", "title": "Why is my recursive Fibonacci implementation so slow compared to an iterative one?", "body": "<p>I have created the following simple Fibonacci implementations:</p>\n\n<pre><code>#![feature(test)]\nextern crate test;\n\npub fn fibonacci_recursive(n: u32) -&gt; u32 {\n    match n {\n        0 =&gt; 0,\n        1 =&gt; 1,\n        _ =&gt; fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)\n    }\n}\n\npub fn fibonacci_imperative(n: u32) -&gt; u32 {\n    match n {\n        0 =&gt; 0,\n        1 =&gt; 1,\n        _ =&gt; {\n            let mut penultimate;\n            let mut last = 1;\n            let mut fib = 0;\n            for _ in 0..n {\n                penultimate = last;\n                last = fib;\n                fib = penultimate + last;\n            }\n            fib\n        }\n    }\n}\n</code></pre>\n\n<p>I created them to try out <code>cargo bench</code>, so I wrote the following benchmarks:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    use super::*;\n    use test::Bencher;\n\n    #[bench]\n    fn bench_fibonacci_recursive(b: &amp;mut Bencher) {\n        b.iter(|| {\n            let n = test::black_box(20);\n            fibonacci_recursive(n)\n        });\n    }\n\n    #[bench]\n    fn bench_fibonacci_imperative(b: &amp;mut Bencher) {\n        b.iter(|| {\n            let n = test::black_box(20);\n            fibonacci_imperative(n)\n        });\n    }\n}\n</code></pre>\n\n<p>I know that a recursive implementation is generally slower than an imperative one, especially since Rust doesn't support tail recursion optimization (which this implementation couldn't use anyways). But I was not expecting the following difference of nearly 2'000 times:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>running 2 tests\ntest tests::bench_fibonacci_imperative ... bench:          15 ns/iter (+/- 3)\ntest tests::bench_fibonacci_recursive  ... bench:      28,435 ns/iter (+/- 1,114)\n</code></pre>\n\n<p>I ran it both on Windows and Ubuntu with the newest Rust nightly compiler (<code>rustc 1.25.0-nightly</code>) and obtained similar results.</p>\n\n<p>Is this speed difference normal? Did I write something \"wrong\"? Or are my benchmarks flawed?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1519896358, "post_id": 49046316, "comment_id": 85097365, "body": "Have you tried <code>pub fn gen(&amp;&#39;a mut self, </code>...? (I&#39;m sure something like that has been asked/answered before but I can&#39;t look it up right now.)"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1519918900, "last_edit_date": 1519918900, "creation_date": 1519896538, "answer_id": 49046520, "question_id": 49046316, "link": "https://stackoverflow.com/questions/49046316/how-do-i-fix-a-lifetime-issue-when-returning-an-iterator-of-all-combinations-bet/49046520#49046520", "title": "How do I fix a lifetime issue when returning an iterator of all combinations between a newly received value and cached values?", "body": "<p>First of all, do not put the lifetime generic in <code>Status</code>. If you need genericity in a function, put this parameter in function:</p>\n\n<pre><code>impl Status {\n    pub fn new() -&gt; Self {\n        Status {\n            old: HashMap::new(),\n        }\n    }\n\n    pub fn gen&lt;'a&gt;(&amp;mut self, u: usize, i: usize) -&gt; UserPairIter&lt;'a&gt; {\n        let entry: &amp;'a mut Vec&lt;usize&gt; = self.old.entry(i).or_insert(Vec::new());\n        UserPairIter::new(entry, u)\n    }\n}\n</code></pre>\n\n<p>Then the compiler says that it cannot infer a lifetime for <code>self.old</code>. Just give it the hint with <code>&amp;'a mut self</code> so that the compiler understands that the lifetime of the <code>UserPairIter</code> is the same as the lifetime of <code>Status</code>:</p>\n\n<pre><code>impl Status {\n    pub fn new() -&gt; Self {\n        Status {\n            old: HashMap::new(),\n        }\n    }\n\n    pub fn gen&lt;'a&gt;(&amp;'a mut self, u: usize, i: usize) -&gt; UserPairIter&lt;'a&gt; {\n        let entry: &amp;'a mut Vec&lt;usize&gt; = self.old.entry(i).or_insert(Vec::new());\n        UserPairIter::new(entry, u)\n    }\n}\n</code></pre>\n\n<p>And that is ok!</p>\n\n<p>You do not need to say the type of <code>entry</code>, the compiler can infer it with the function signature:</p>\n\n<pre><code>pub fn gen&lt;'a&gt;(&amp;'a mut self, u: usize, i: usize) -&gt; UserPairIter&lt;'a&gt; {\n    let entry = self.old.entry(i).or_insert(Vec::new());\n    UserPairIter::new(entry, u)\n}\n</code></pre>\n"}], "owner": {"reputation": 291, "user_id": 9143626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43746df168c59ad554c770f60b805fa3?s=128&d=identicon&r=PG&f=1", "display_name": "Allen Lee", "link": "https://stackoverflow.com/users/9143626/allen-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 1, "accepted_answer_id": 49046520, "answer_count": 1, "score": 3, "last_activity_date": 1519918900, "creation_date": 1519895735, "last_edit_date": 1519918809, "question_id": 49046316, "link": "https://stackoverflow.com/questions/49046316/how-do-i-fix-a-lifetime-issue-when-returning-an-iterator-of-all-combinations-bet", "title": "How do I fix a lifetime issue when returning an iterator of all combinations between a newly received value and cached values?", "body": "<p>I am trying to return an iterator of all combinations between a newly received value and cached values, but I got a lifetime issue.</p>\n\n<pre><code>use std::collections::HashMap;\n\npub struct Status {\n    // &lt;i,Vec&lt;u&gt;&gt;\n    old: HashMap&lt;usize, Vec&lt;usize&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Status {\n    pub fn new() -&gt; Self {\n        Status {\n            old: HashMap::new(),\n        }\n    }\n\n    pub fn gen(&amp;mut self, u: usize, i: usize) -&gt; UserPairIter&lt;'a&gt; {\n        let entry: &amp;'a mut Vec&lt;usize&gt; = self.old.entry(i).or_insert(Vec::new());\n        UserPairIter::new(entry, u)\n    }\n}\n\nstruct UserPairIter&lt;'a&gt; {\n    data: &amp;'a mut Vec&lt;usize&gt;,\n    u: usize,\n    index: usize,\n}\n\nimpl&lt;'a&gt; UserPairIter&lt;'a&gt; {\n    pub fn new(data: &amp;'a mut Vec&lt;usize&gt;, u: usize) -&gt; Self {\n        UserPairIter { data, u, index: 0 }\n    }\n}\n\nimpl&lt;'a&gt; Iterator for UserPairIter&lt;'a&gt; {\n    type Item = (usize, usize);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.index &gt;= self.data.len() {\n            self.data.push(self.u);\n            return None;\n        }\n        let result = (self.u, self.data[self.index]);\n        self.index += 1;\n        Some(result)\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>When I compile, I get the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/main.rs:16:50\n   |\n16 |         let entry: &amp;'a mut Vec&lt;usize&gt; = self.old.entry(i).or_insert(Vec::new());\n   |                                                  ^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 15:5...\n  --&gt; src/main.rs:15:5\n   |\n15 | /     pub fn gen(&amp;mut self, u: usize, i: usize) -&gt; UserPairIter&lt;'a&gt; {\n16 | |         let entry: &amp;'a mut Vec&lt;usize&gt; = self.old.entry(i).or_insert(Vec::new());\n17 | |         UserPairIter::new(entry, u)\n18 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:16:41\n   |\n16 |         let entry: &amp;'a mut Vec&lt;usize&gt; = self.old.entry(i).or_insert(Vec::new());\n   |                                         ^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 8:1...\n  --&gt; src/main.rs:8:1\n   |\n8  | / impl&lt;'a&gt; Status {\n9  | |     pub fn new() -&gt; Self {\n10 | |         Status {\n11 | |             old: HashMap::new(),\n...  |\n18 | |     }\n19 | | }\n   | |_^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:16:41\n   |\n16 |         let entry: &amp;'a mut Vec&lt;usize&gt; = self.old.entry(i).or_insert(Vec::new());\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["static", "rust", "closures", "mutex"], "answers": [{"comments": [{"owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "edited": false, "score": 1, "creation_date": 1519886925, "post_id": 49043147, "comment_id": 85092904, "body": "Using std::ops::DerefMut and then doing x.borrow_mut().deref_mut() also works. I guess it was because the return type of borrow_mut() is RefMut, but I don&#39;t understand why it was complaining about the Box object directly rather than RefMut&lt;Box&lt;_&gt;&gt;. Seems like a misleading error."}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 1, "creation_date": 1519887248, "post_id": 49043147, "comment_id": 85093030, "body": "<code>Box&lt;FnMut()&gt;</code> can&#39;t be called directly. You need to convert it to <code>&amp;mut FnMut()</code>."}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1519887593, "post_id": 49043147, "comment_id": 85093169, "body": "The <code>RefCell</code> is not needed here in fact. You can use <code>(&amp;mut *r)()</code> to call closure."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 2, "last_activity_date": 1519882002, "creation_date": 1519882002, "answer_id": 49043147, "question_id": 49043045, "link": "https://stackoverflow.com/questions/49043045/cannot-borrow-immutable-box-content-as-mutable/49043147#49043147", "title": "Cannot borrow immutable &#39;Box&#39; content as mutable", "body": "<p>It looks like the \"cannot borrow immutable Box content as mutable\" problem reduces to:</p>\n\n<pre><code>fn invoke(m: &amp;Mutex&lt;RefCell&lt;Box&lt;FnMut()&gt;&gt;&gt;) {\n    let r = m.lock().unwrap();\n    r.borrow_mut()();\n}\n</code></pre>\n\n<p>I haven't yet figured out why this works, but it does work if changed to:</p>\n\n<pre><code>fn invoke(m: &amp;Mutex&lt;RefCell&lt;Box&lt;FnMut()&gt;&gt;&gt;) {\n    let r = m.lock().unwrap();\n    let f = &amp;mut *r.borrow_mut();\n    f();\n}\n</code></pre>\n"}], "owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 707, "favorite_count": 0, "accepted_answer_id": 49043147, "answer_count": 1, "score": 3, "last_activity_date": 1519919441, "creation_date": 1519881333, "last_edit_date": 1519919441, "question_id": 49043045, "link": "https://stackoverflow.com/questions/49043045/cannot-borrow-immutable-box-content-as-mutable", "title": "Cannot borrow immutable &#39;Box&#39; content as mutable", "body": "<p>I'm trying to provide a closure via a C callback using a static variable. I was able to get things working with a <code>Fn</code> type, but I'd like to make it work via <code>FnMut</code> to provide users of the library with more versatility.</p>\n\n<p>Here's what I have:</p>\n\n<pre><code>lazy_static! {\n    static ref CALLBACK: Mutex&lt;RefCell&lt;Box&lt;FnMut(Result&lt;&amp;str&gt;) + Send&gt;&gt;&gt; = Mutex::new(RefCell::new(Box::new(|_|())));\n}\n\nfn wrap_cb&lt;F: Fn(Result&lt;&amp;str&gt;)&gt;(f: Option&lt;F&gt;) -&gt; Option&lt;unsafe extern \"C\" fn(*mut c_char, size_t)&gt; {\n    match f {\n        Some(_) =&gt; {\n            unsafe extern \"C\" fn wrapped(msg: *mut c_char, len: size_t) {\n                let s = std::str::from_utf8(std::slice::from_raw_parts(msg as *const u8, len))\n                    .map_err(Error::from);\n                let x = CALLBACK.lock().unwrap();\n                x.borrow_mut()(s);\n            }\n            Some(wrapped)\n        }\n        None =&gt; None,\n    }\n}\n</code></pre>\n\n<p>This gives the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable `Box` content as mutable\n  --&gt; src/wpactrl.rs:56:17\n   |\n56 |                 x.borrow_mut()(s);\n   |                 ^^^^^^^^^^^^^^ cannot borrow as mutable\n</code></pre>\n"}]