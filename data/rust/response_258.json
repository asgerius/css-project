[{"tags": ["rust", "operator-overloading"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1576710436, "post_id": 59400832, "comment_id": 104991494, "body": "The tl;dr of it is: no, you can&#39;t."}, {"owner": {"reputation": 66, "user_id": 12216323, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xhhFp.jpg?s=128&g=1", "display_name": "kode_anil", "link": "https://stackoverflow.com/users/12216323/kode-anil"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576736095, "post_id": 59400832, "comment_id": 104996760, "body": "i was finally able to do it using the help of the other post."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1576836241, "post_id": 59400832, "comment_id": 105032911, "body": "I understand that the point of this question is to learn operator overloading. But for the record, <code>String</code> already has <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#impl-Add%3C%26%27_%20str%3E\" rel=\"nofollow noreferrer\"><code>+</code> overloaded</a>."}], "owner": {"reputation": 66, "user_id": 12216323, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xhhFp.jpg?s=128&g=1", "display_name": "kode_anil", "link": "https://stackoverflow.com/users/12216323/kode-anil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 63, "favorite_count": 0, "closed_date": 1576711998, "answer_count": 0, "score": 1, "last_activity_date": 1576736305, "creation_date": 1576708050, "last_edit_date": 1576736305, "question_id": 59400832, "link": "https://stackoverflow.com/questions/59400832/is-it-possible-to-overload-add-operator-for-string-type-in-rust", "closed_reason": "Duplicate", "title": "Is it possible to overload add operator for String type in rust?", "body": "<p>I'm learning <strong>operator overloading</strong> for my own types. See example below, I'm implementing the <code>Add</code> trait from standard library for my own <code>Point</code> type.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Add&lt;Point&gt; for Point {\n    type Output = Point;\n    fn add(self, point: Point) -&gt; Self::Output {\n        Point {\n            x: self.x + point.x,\n            y: self.y + point.y,\n        }\n    }\n}\n</code></pre>\n\n<p>then I can add 2 instances of <code>Point</code> type using the following syntax:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let point_c = point_a + point_b;  \n</code></pre>\n\n<p>How can I implement the same for string literals <code>&amp;str</code> or built in types like <code>String</code>? \nI tried the below it failed:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Add&lt;String&gt; for String {\n    type Output = String;\n\n    fn add(self, string: String) -&gt; Self::Output {\n        self.push_str(string);\n    }\n}\n</code></pre>\n\n<p>I don't have any practical need of doing this with <code>String</code>, but want to understand that can I only implement the operator overloading traits on my own types? can't I do the same on built in types?</p>\n\n<p>I'm getting the below error in VS code:</p>\n\n<blockquote>\n  <p>Only traits defined in the current crate can be implemented for arbitrary types</p>\n</blockquote>\n\n<h3>Update: Resolution:</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct MyString(String);\n\n\n    impl Add&lt;MyString&gt; for MyString{\n        type Output= MyString;\n        fn add(self,input:MyString)-&gt;Self::Output{\n            let mut own_str=self.0.to_string();\n            let input_str=input.0.to_string();\n            own_str.push_str(&amp;input_str);\n            MyString(own_str)\n        }\n    }\n\n    let mystring_first_name=MyString(String::from(\"Anil\"));\n    let mystring_last_name=MyString(String::from(\"Khandei\"));\n\n    let my_full_name=mystring_first_name+ MyString(String::from(\" \")) +mystring_last_name;\n    println!(\"{:?}\",my_full_name.0);\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576702357, "post_id": 59399723, "comment_id": 104988731, "body": "In general, Cargo handles this fine (see <a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a>). The problem is that the resolver has some issues with the prerelease version of crates."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576702434, "post_id": 59399723, "comment_id": 104988762, "body": "For your <i>specific</i> issue and crates, you can depend on the <code>reqwest</code> crate&#39;s master branch instead of a released version, or downgrade to <code>reqwest</code> 0.9, which will pull in <code>tokio</code> 0.1 (and you&#39;ll have <code>tokio</code> 0.2 for your main app)."}, {"owner": {"reputation": 1365, "user_id": 1064570, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/82cc1e4dd4fe0c392059fef53666d4bc?s=128&d=identicon&r=PG", "display_name": "artin", "link": "https://stackoverflow.com/users/1064570/artin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576703381, "post_id": 59399723, "comment_id": 104989094, "body": "@Shepmaster I&#39;ve tried to use stable version of <code>reqwest</code> and yeah it works. Do we have issue in cargo repository for that?.."}, {"owner": {"reputation": 1365, "user_id": 1064570, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/82cc1e4dd4fe0c392059fef53666d4bc?s=128&d=identicon&r=PG", "display_name": "artin", "link": "https://stackoverflow.com/users/1064570/artin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576704642, "post_id": 59399723, "comment_id": 104989564, "body": "So, cargo can match <code>tokio</code> versions <code>0.2.4</code> - <code>0.1.7</code>, but not <code>0.2.4</code> - <code>=0.2.0-alpha.6</code>. Probably because of <code>=</code>?."}, {"owner": {"reputation": 1365, "user_id": 1064570, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/82cc1e4dd4fe0c392059fef53666d4bc?s=128&d=identicon&r=PG", "display_name": "artin", "link": "https://stackoverflow.com/users/1064570/artin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576743403, "post_id": 59399723, "comment_id": 104999281, "body": "@Shepmaster Are you sure cargo cannot match <code>tokio</code> versions because one of them is prerelease <code>-alpha.6</code>? Because I still can add <code>0.2.0-alpha.6</code>, but not <code>=0.2.0-alpha.6</code>, so I believe issue in that strict version sign <code>=</code>. Let&#39;s update title to more general: &quot;How to have multiple <i>incompatible</i> versions of the same indirect dependency?&quot;"}], "owner": {"reputation": 1365, "user_id": 1064570, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/82cc1e4dd4fe0c392059fef53666d4bc?s=128&d=identicon&r=PG", "display_name": "artin", "link": "https://stackoverflow.com/users/1064570/artin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1140, "favorite_count": 1, "answer_count": 0, "score": 5, "last_activity_date": 1577100407, "creation_date": 1576701836, "last_edit_date": 1577100407, "question_id": 59399723, "link": "https://stackoverflow.com/questions/59399723/how-to-have-multiple-incompatible-versions-of-the-same-indirect-dependency", "title": "How to have multiple incompatible versions of the same indirect dependency?", "body": "<p>I'm trying to use <code>actix-web</code> and <code>reqwest</code> crates in the same project, but they depend on different versions of <code>tokio</code>.</p>\n\n<p>Apparently, Cargo can't select a version of <code>tokio</code> which would satisfy all direct dependencies, but I'm not even using those dependencies in the same context:</p>\n\n<ul>\n<li><code>actix-web</code> is for server REST API implementation</li>\n<li><code>reqwest</code> is for system tests only</li>\n</ul>\n\n<hr>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"test-cargo\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nactix-rt = \"1.0.0\"\nactix-web = \"2.0.0-alpha.6\"\n\n[dev-dependencies]\nreqwest = \"0.10.0-alpha.2\"\n</code></pre>\n\n<p>Output of <code>cargo build</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Updating crates.io index\nerror: failed to select a version for `tokio`.\n    ... required by package `reqwest v0.10.0-alpha.2`\n    ... which is depended on by `test-cargo v0.1.0 (/workspaces/test-cargo)`\nversions that meet the requirements `= 0.2.0-alpha.6` are: 0.2.0-alpha.6\n\nall possible versions conflict with previously selected packages.\n\n  previously selected package `tokio v0.2.4`\n    ... which is depended on by `actix-rt v1.0.0`\n    ... which is depended on by `actix-web v2.0.0-alpha.6`\n    ... which is depended on by `test-cargo v0.1.0 (/workspaces/test-cargo)`\n\nfailed to select a version for `tokio` which could resolve this conflict\n</code></pre>\n\n<hr>\n\n<p>I've thought of some workarounds, but they are all unacceptable:</p>\n\n<ul>\n<li>downgrade one of the direct dependencies so that <code>tokio</code> versions would match \u2014 then my dependencies are not the versions I want. </li>\n<li>replace <code>reqwest</code> with a similar crate which doesn't depend on <code>tokio</code> \u2014 then my dependencies are not the crates I want. </li>\n<li>move tests with <code>reqwest</code> to a separate package</li>\n</ul>\n"}, {"tags": ["rust", "java-native-interface"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 2, "creation_date": 1576696421, "post_id": 59398273, "comment_id": 104986413, "body": "If you want to test your logic, make the JNI wrappers as thin as possible, so that they don&#39;t contain any logic. Just unwrapping and wrapping code, with the actual logic in a function that doesn&#39;t need any of that JNI stuff. Then test <i>that</i>."}], "answers": [{"tags": [], "owner": {"reputation": 9567, "user_id": 7916438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8541ff62182bcfd172e116a4e0d2fa58?s=128&d=identicon&r=PG", "display_name": "tevemadar", "link": "https://stackoverflow.com/users/7916438/tevemadar"}, "is_accepted": false, "score": 1, "last_activity_date": 1576695921, "last_edit_date": 1592644375, "creation_date": 1576695921, "answer_id": 59398586, "question_id": 59398273, "link": "https://stackoverflow.com/questions/59398273/cant-create-a-generic-jnienv-due-to-the-error-thread-main-panicked-at-calle/59398586#59398586", "title": "Can&#39;t create a generic JNIEnv due to the error &quot;thread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value", "body": "<p>As the documentation of <a href=\"https://docs.rs/jni/0.10.1/jni/struct.JNIEnv.html#method.from_raw\" rel=\"nofollow noreferrer\"><code>JNIEnv::from_raw()</code></a> says, it does not do too much, but</p>\n<blockquote>\n<p>Create a JNIEnv from a raw pointer.</p>\n<p>Only does a null check - otherwise assumes that the pointer is valid.</p>\n</blockquote>\n<p>So passing that <code>ptr::null_mut()</code> already triggers this, and then comes the first line of your error message telling the same:</p>\n<blockquote>\n<pre><code>called `Result::unwrap()` on an `Err` value: Error(NullPtr(&quot;from_raw ptr argument&quot;) [...]\n</code></pre>\n</blockquote>\n<p>Literally saying that the null pointer resulted in an error, instead of <code>JNIEnv</code>, and thus it can not <code>unwrap()</code>.</p>\n<p>TL;DR: no, what you do will not work, Java does not work without Java, and based on some later parts of the code probably it is worth adding that Android will not work without Android either. Even if you properly configure and use Java, having it run an <code>Activity</code> will be a whole new challenge.</p>\n"}, {"tags": [], "owner": {"reputation": 15619, "user_id": 1548468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0745dce203d52699e63a575b3103ad70?s=128&d=identicon&r=PG", "display_name": "Botje", "link": "https://stackoverflow.com/users/1548468/botje"}, "is_accepted": true, "score": 1, "last_activity_date": 1576743007, "creation_date": 1576743007, "answer_id": 59405585, "question_id": 59398273, "link": "https://stackoverflow.com/questions/59398273/cant-create-a-generic-jnienv-due-to-the-error-thread-main-panicked-at-calle/59405585#59405585", "title": "Can&#39;t create a generic JNIEnv due to the error &quot;thread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value", "body": "<p>If you look inside <code>jni.h</code>, you will see that a <code>JNIEnv*</code> is a big struct filled with function pointers:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>struct JNINativeInterface_ {\n    void *reserved0;\n    void *reserved1;\n    void *reserved2;\n\n    void *reserved3;\n    jint (JNICALL *GetVersion)(JNIEnv *env);\n\n    jclass (JNICALL *DefineClass)\n      (JNIEnv *env, const char *name, jobject loader, const jbyte *buf,\n       jsize len);\n    jclass (JNICALL *FindClass)\n      (JNIEnv *env, const char *name);\n\n    // and so on\n};\n\ntypedef const struct JNINativeInterface_ *JNIEnv;\n</code></pre>\n\n<p>If you really want to pursue this path, you could implement just the functions your code needs and assign them to the various members of <code>JNINativeInterface_</code>.\nI don't know much about the Rust bridge you are using, but converting such a <code>JNIEnv</code> pointer should work.</p>\n\n<p>Of course the final question is: what <em>are</em> you actually testing then?</p>\n"}], "owner": {"reputation": 47, "user_id": 5424687, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43f5d448a52114f9ff525da03f070020?s=128&d=identicon&r=PG&f=1", "display_name": "madde", "link": "https://stackoverflow.com/users/5424687/madde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "accepted_answer_id": 59405585, "answer_count": 2, "score": 0, "last_activity_date": 1576743007, "creation_date": 1576694421, "last_edit_date": 1576695259, "question_id": 59398273, "link": "https://stackoverflow.com/questions/59398273/cant-create-a-generic-jnienv-due-to-the-error-thread-main-panicked-at-calle", "title": "Can&#39;t create a generic JNIEnv due to the error &quot;thread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value", "body": "<p>I want to create a generic <code>JNIEnv</code> (alongside a <code>JObject</code>) with a <code>JString</code> of a fixed value (e.g. \"fake javastring\") to test a few functions that require a <code>JEnv</code> and <code>JObject</code> to work properly. I don't want to run a Java VM.</p>\n\n<p>I tried creating generic <code>None</code>-value <code>JNIEnv</code> but that fails with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>failures:\n\n---- main_tests::Jstrings::return_fake_string stdout ----\nthread 'main_tests::Jstrings::return_fake_string' panicked at 'called `Result::unwrap()` on an `Err` value: Error(NullPtr(\"from_raw ptr argument\"), State { next_error: None, backtrace: InternalBacktrace })', src/libcore/result.rs:999:5\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\n   1: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:71\n   2: std::panicking::default_hook::{{closure}}\n             at src/libstd/sys_common/backtrace.rs:59\n             at src/libstd/panicking.rs:197\n   3: std::panicking::default_hook\n             at src/libstd/panicking.rs:208\n   4: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:474\n   5: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:381\n   6: rust_begin_unwind\n             at src/libstd/panicking.rs:308\n   7: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:85\n   8: core::result::unwrap_failed\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/libcore/macros.rs:18\n   9: core::result::Result&lt;T,E&gt;::unwrap\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/libcore/result.rs:800\n  10: rust::empty_jnienv\n             at src/main.rs:10\n  11: rust::main_tests::Jstrings::return_fake_string\n             at src/main.rs:29\n  12: rust::main_tests::Jstrings::return_fake_string::{{closure}}\n             at src/main.rs:27\n  13: core::ops::function::FnOnce::call_once\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/libcore/ops/function.rs:231\n  14: &lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/liballoc/boxed.rs:704\n  15: __rust_maybe_catch_panic\n             at src/libpanic_unwind/lib.rs:85\n  16: test::run_test::run_test_inner::{{closure}}\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/libstd/panicking.rs:272\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/libstd/panic.rs:394\n             at src/libtest/lib.rs:1468\n</code></pre>\n\n<p>My code - Cargo.toml</p>\n\n<pre><code>[package]\nname = \"rust\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nlibc = \"0.2\"\njni = { version = \"0.10.2\", default-features = false }\n</code></pre>\n\n<p>main.rs</p>\n\n<pre><code>mod backend;\n\nextern crate libc;\n\nuse jni::objects::{JObject, JString};\nuse jni::JNIEnv;\nuse std::ptr;\n\npub unsafe fn empty_jnienv() -&gt; jni::JNIEnv&lt;'static&gt; {\n    jni::JNIEnv::from_raw(ptr::null_mut()).unwrap()\n}\n\npub unsafe fn empty_jobj() -&gt; jni::objects::JObject&lt;'static&gt; {\n    jni::objects::JObject::null()\n}\n\nfn main() {}\n\n#[cfg(test)]\nmod main_tests {\n    use super::*;\n\n    mod Jstrings {\n        use super::*;\n\n        #[test]\n        fn return_fake_string() {\n            let this_string = \"fake javastring\";\n            let jenv = unsafe { empty_jnienv() };\n            let jobj = unsafe { empty_jobj() };\n            let jstr: jni::objects::JString = jenv.new_string(this_string.to_owned()).unwrap();\n            assert!(unsafe {\n                backend::Java_com_example_android_MainActivity_test(jenv, jobj, jstr) == true\n            });\n        }\n    }\n}\n</code></pre>\n\n<p>backend.rs</p>\n\n<pre><code>use jni::objects::{JObject, JString};\nuse jni::JNIEnv;\nuse std::ffi::{CStr, CString};\n\n#[no_mangle]\npub unsafe extern \"C\" fn Java_com_example_android_MainActivity_test(\n    env: JNIEnv,\n    _: JObject,\n    j_recipient: JString,\n) -&gt; bool {\n    let mut this_return = false;\n    let recipient = CString::from(CStr::from_ptr(\n        env.get_string(j_recipient).unwrap().as_ptr(),\n    ));\n\n    if recipient.to_str().unwrap() == \"fake javastring\" {\n        this_return = true;\n    }\n    this_return\n}\n</code></pre>\n\n<p>Is there a way to solve this without running a Java VM to create the <code>JNIEnv</code> and <code>JObject</code>?</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576691785, "post_id": 59397372, "comment_id": 104984453, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/59397372/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576691837, "post_id": 59397372, "comment_id": 104984475, "body": "Notably, there have been recent incompatible releases of the <code>tokio</code> and <code>futures</code> crates, so it&#39;s vitally important to include that information (and that information should always be included when asking a question in any context, anyway)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1576692222, "post_id": 59397372, "comment_id": 104984641, "body": "Remove the semicolon from <code>poll_fn(|cx| poll_expired_batch(dq, cx)).await;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576692271, "post_id": 59397372, "comment_id": 104984668, "body": "<a href=\"https://docs.rs/futures/0.3.1/futures/future/struct.PollFn.html\" rel=\"nofollow noreferrer\"><code>PollFn</code></a> already exists, there&#39;s no reason to rewrite it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576692414, "post_id": 59397372, "comment_id": 104984730, "body": "<code>println</code> is not a function. Please ensure that the code you provide matches the errors you are asking about."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576692460, "post_id": 59397372, "comment_id": 104984751, "body": "See also <a href=\"https://stackoverflow.com/q/30555477/155423\">Why do try!() and ? not compile when used in a function that doesn&#39;t return Option or Result?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576692600, "post_id": 59397372, "comment_id": 104984809, "body": "<a href=\"https://docs.rs/futures/0.3.1/futures/macro.ready.html\" rel=\"nofollow noreferrer\"><code>ready!</code></a> already exists, there&#39;s no reason to rewrite it."}], "owner": {"reputation": 1302, "user_id": 3042790, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/7cfda1f5d09fc082ee8db124240eab4e?s=128&d=identicon&r=PG&f=1", "display_name": "eager2learn", "link": "https://stackoverflow.com/users/3042790/eager2learn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 269, "favorite_count": 0, "closed_date": 1576692191, "answer_count": 0, "score": 0, "last_activity_date": 1576691933, "creation_date": 1576690430, "last_edit_date": 1576691933, "question_id": 59397372, "link": "https://stackoverflow.com/questions/59397372/return-type-error-in-an-async-fn-expected-found-enum-stdresultresult", "closed_reason": "Duplicate", "title": "Return type error in an async fn: expected (), found enum `std::result::Result`", "body": "<p>I wrote a simple method to see in which order items that were inserted in the <code>DelayQueue</code> in Tokio are returned. <code>DelayQueue</code> has a method <code>poll_expired</code> which takes a <code>task::Context</code> as argument. I want to call <code>poll_explained</code> inside a loop until all <code>Delays</code> instances in the <code>DelayQueue</code> timed out and are returned by <code>poll_expired</code> and use the <code>Context</code> provided by the Tokio runtime. To do this, I use a function <code>poll_fn</code>:</p>\n\n<pre><code>use std::vec::Vec;\nuse tokio::time::delay_queue::Key;\nuse tokio::time::{DelayQueue, Duration, Error};\n\nuse std::future::Future;\nuse std::pin::Pin;\nuse std::task::{Context, Poll};\n\n/// Creates a new future wrapping around a function returning [`Poll`].\nfn poll_fn&lt;T, F&gt;(f: F) -&gt; PollFn&lt;F&gt;\nwhere\n    F: FnMut(&amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;T&gt;,\n{\n    PollFn { f }\n}\n</code></pre>\n\n<p>where <code>PollFn</code> implements <code>Future</code>:</p>\n\n<pre><code>/// Future for the [`poll_fn`] function.\nstruct PollFn&lt;F&gt; {\n    f: F,\n}\n\nimpl&lt;T, F&gt; Future for PollFn&lt;F&gt;\nwhere\n    F: FnMut(&amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;T&gt;,\n{\n    type Output = T;\n\n    fn poll(mut self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;T&gt; {\n        (&amp;mut self.f)(cx)\n    }\n}\n</code></pre>\n\n<p>Then I create my function which batches all the expired <code>Delays</code> and delegate it to <code>poll_fn</code>:</p>\n\n<pre><code>macro_rules! ready {\n    ($e:expr $(,)?) =&gt; {\n        match $e {\n            std::task::Poll::Ready(t) =&gt; t,\n            std::task::Poll::Pending =&gt; return std::task::Poll::Pending,\n        }\n    };\n}\n\nfn poll_expired_batch(\n    dq: &amp;mut DelayQueue&lt;u32&gt;,\n    cx: &amp;mut Context&lt;'_&gt;,\n) -&gt; Poll&lt;Result&lt;Vec&lt;(u32, u64)&gt;, Error&gt;&gt; {\n    let mut expired_keys: Vec&lt;(u32, u64)&gt; = Vec::new();\n    while let Some(res) = ready!(dq.poll_expired(cx)) {\n        let exp = res?;\n        let data = exp.get_ref();\n        expired_keys.push((data.inner, data.when));\n    }\n    Poll::Ready(Ok(expired_keys));\n}\n\nasync fn poll_batch(dq: &amp;mut DelayQueue&lt;u32&gt;) -&gt; Result&lt;Vec&lt;(u32, u64)&gt;, Error&gt; {\n    poll_fn(|cx| poll_expired_batch(dq, cx)).await;\n}\n</code></pre>\n\n<p>Then inside the <code>tokio::main</code> block I have the following code:</p>\n\n<pre><code>#[tokio::main]\nasync fn main() {\n    let mut dq: DelayQueue&lt;u32&gt; = DelayQueue::new();\n    let mut keys: Vec&lt;Key&gt; = Vec::new();\n    (0..10).map(|i| keys.push(dq.insert(i, Duration::new(1, 0))));\n    println!(\"Insertion order\");\n    for key in keys {\n        println(\"Key {} inserted\");\n    }\n    let keys_returned = (poll_batch(&amp;mut dq).await)?;\n}\n</code></pre>\n\n<p>I get the following error and I wasn't able to find out what it means and how to fix it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;impl core::future::future::Future as core::future::future::Future&gt;::Output == std::result::Result&lt;std::vec::Vec&lt;(u32, u64)&gt;, tokio::time::error::Error&gt;`\n  --&gt; examples/delay_q.rs:75:51\n   |\n75 | async fn poll_batch(dq : &amp;mut DelayQueue&lt;u32&gt;) -&gt; Result&lt;Vec&lt;(u32, u64)&gt;, Error&gt;{\n   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`\n   |\n   = note: expected type `()`\n              found type `std::result::Result&lt;std::vec::Vec&lt;(u32, u64)&gt;, tokio::time::error::Error&gt;`\n   = note: the return type of a function must have a statically known size\n</code></pre>\n"}, {"tags": ["file", "rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 1, "creation_date": 1576664787, "post_id": 59389499, "comment_id": 104970154, "body": "I suspect that it has something to do with the <code>Error</code> returned by <code>parse</code>. Maybe from compiler&#39;s point of view, it could hold reference to the input, so it must not outlive it by being returned... Could you share more of the parser itself?"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1576665009, "post_id": 59389499, "comment_id": 104970277, "body": "Does it compile if you <code>match</code> the result of <code>idl_parser.parse(byte_slice)</code> manually, anc convert an <code>Err</code> to something that surely does not refer to <code>byte_slice</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576679460, "post_id": 59389499, "comment_id": 104977650, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/59389499/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 17716, "user_id": 6722, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/2b31f1c54790d6cba8a63a3653a26c49?s=128&d=identicon&r=PG", "display_name": "Steve Cooper", "link": "https://stackoverflow.com/users/6722/steve-cooper"}, "edited": false, "score": 0, "creation_date": 1576781482, "post_id": 59390211, "comment_id": 105018152, "body": "thanks for this! You&#39;re spot on -- sorry I couldn&#39;t mark your answer as correct too."}], "tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": false, "score": 2, "last_activity_date": 1576665602, "creation_date": 1576665602, "answer_id": 59390211, "question_id": 59389499, "link": "https://stackoverflow.com/questions/59389499/reading-bytes-from-a-file-and-parsing-them-with-pom-parser-library/59390211#59390211", "title": "Reading bytes from a file and parsing them with `pom` parser library", "body": "<p>The <code>pom::Parser&lt;I, O&gt;</code> is alias for <code>pom::parser::Parser&lt;'static, I, O&gt;</code>. So the <code>'a</code> lifetime in the <code>parse</code> function is actually <code>'static</code> if you are using this alias. Use the <code>pom::parser::Parser</code> struct directly with custom (possibly elided - you don't have to write it) lifetime.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576693268, "post_id": 59397269, "comment_id": 104985117, "body": "<i>This works because the const r-value like literal is subject to static promotion,</i> \u2014 this isn&#39;t relevant here. String literals are <b>always</b> <code>&amp;&#39;static str</code>. <a href=\"https://stackoverflow.com/q/31230585/155423\">How does the lifetime work on constant strings / string literals?</a>"}, {"owner": {"reputation": 17716, "user_id": 6722, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/2b31f1c54790d6cba8a63a3653a26c49?s=128&d=identicon&r=PG", "display_name": "Steve Cooper", "link": "https://stackoverflow.com/users/6722/steve-cooper"}, "edited": false, "score": 0, "creation_date": 1576781194, "post_id": 59397269, "comment_id": 105018055, "body": "this is exactly right! I had a <code>use pom::* \\n use pom::Parser</code> block at the top of the file. Removing the second line fixed it"}, {"owner": {"reputation": 17716, "user_id": 6722, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/2b31f1c54790d6cba8a63a3653a26c49?s=128&d=identicon&r=PG", "display_name": "Steve Cooper", "link": "https://stackoverflow.com/users/6722/steve-cooper"}, "edited": false, "score": 0, "creation_date": 1576781600, "post_id": 59397269, "comment_id": 105018195, "body": "sorry - that should read <code>use pom::parser::*; use pom::Parser</code>"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 2, "last_activity_date": 1576739641, "last_edit_date": 1576739641, "creation_date": 1576689986, "answer_id": 59397269, "question_id": 59389499, "link": "https://stackoverflow.com/questions/59389499/reading-bytes-from-a-file-and-parsing-them-with-pom-parser-library/59397269#59397269", "title": "Reading bytes from a file and parsing them with `pom` parser library", "body": "<blockquote>\n  <p>no problems writing the parsers and feeding in string literal as test data.</p>\n</blockquote>\n\n<p>This works because all string literals have <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#the-static-lifetime\" rel=\"nofollow noreferrer\">the <code>'static</code> lifetime</a>. When you switch to read from a file instead, the latent <code>'static</code> is gone. The behavior of the code actually changes so that it triggers the error.</p>\n\n<p>The question is then why your parser implementation expects a <code>'static</code> input in the first place. I suspect that the example given in the <code>pom</code> read-me file is to be blamed here. For example it has the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use pom::Parser;\n\nfn space() -&gt; Parser&lt;u8, ()&gt; {\n    one_of(b\" \\t\\r\\n\").repeat(0..).discard()\n}\n</code></pre>\n\n<p><code>pom::Parser&lt;u8, ()&gt;</code> is actually an alias for <code>pom::parser::Parser&lt;'static, u8, ()&gt;</code>. If it were to be written as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use pom::parser::Parser;\n\nfn space&lt;'a&gt;() -&gt; Parser&lt;'a, u8, ()&gt; {\n    one_of(b\" \\t\\r\\n\").repeat(0..).discard()\n}\n</code></pre>\n\n<p>then it should be able to handle both <code>'static</code> and non-<code>'static</code> input. Make similar changes to your parser code and it will work again.</p>\n"}], "owner": {"reputation": 17716, "user_id": 6722, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/2b31f1c54790d6cba8a63a3653a26c49?s=128&d=identicon&r=PG", "display_name": "Steve Cooper", "link": "https://stackoverflow.com/users/6722/steve-cooper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "accepted_answer_id": 59397269, "answer_count": 2, "score": 0, "last_activity_date": 1576739641, "creation_date": 1576663180, "last_edit_date": 1576679493, "question_id": 59389499, "link": "https://stackoverflow.com/questions/59389499/reading-bytes-from-a-file-and-parsing-them-with-pom-parser-library", "title": "Reading bytes from a file and parsing them with `pom` parser library", "body": "<p>I'm trying to write a parser with <a href=\"https://github.com/J-F-Liu/pom\" rel=\"nofollow noreferrer\">pom</a>, which is great - no problems writing the parsers and feeding in string literal as test data. However, when I try to run it bytes from a file, it chokes; </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>108 |     fn parse_files() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n109 |         let byte_vec: Vec&lt;u8&gt; = std::fs::read(\"assets/valid_so_far.idl\")?;\n110 |         let byte_slice: &amp;[u8] = &amp;byte_vec;\n    |                                 ^^^^^^^^^ borrowed value does not live long enough\n111 |         let idl_parser = idl();\n112 |         let parse_result = idl_parser.parse(byte_slice)?;\n    |                            ---------------------------- argument requires that `byte_vec` is borrowed for `'static`\n113 |         \n114 |         Ok(())\n115 |     }\n    |     - `byte_vec` dropped here while still borrowed\n</code></pre>\n\n<p>I don't see what's going wrong here. I can't interpret the compiler error here and I don't understand why the lifetimes aren't OK here.</p>\n\n<p>The <code>parse</code> function on line 109 has this signature:</p>\n\n<pre><code>fn parse(&amp;self, input: &amp;'a [I]) -&gt; Result&lt;O&gt;\n\npub type Result&lt;O&gt; = ::std::result::Result&lt;O, Error&gt;;\n</code></pre>\n"}, {"tags": ["templates", "generics", "rust", "compile-time"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576662653, "post_id": 59388990, "comment_id": 104969061, "body": "This looks like a compiler bug to me. I&#39;m not sure yet whether the code should compile, but the error message definitely looks wrong."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1576662713, "post_id": 59388990, "comment_id": 104969089, "body": "Interesting; I tried lifting the <code>size_of::&lt;T&gt;()</code> into a <code>const</code> and was met with another error -- that <code>const</code> items cannot use the generic parameters from the outer functions, which make sense for <code>fn</code>/<code>type</code> items but definitely not for <code>const</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1576662751, "post_id": 59388990, "comment_id": 104969111, "body": "@MatthieuM. That is actually expected behaviour, though the error message could be improved."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1576662851, "post_id": 59388990, "comment_id": 104969150, "body": "As a side note, the <code>Sized</code> bound on <code>T</code> is redundant. All type parameters have an implicit <code>Sized</code> bound. If you want to allow unsized types, you need to override that implicit bound with <code>T: ?Sized</code>."}, {"owner": {"reputation": 73, "user_id": 6009207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86ead4fb6a7cddf555ee09752518631c?s=128&d=identicon&r=PG&f=1", "display_name": "Plettro", "link": "https://stackoverflow.com/users/6009207/plettro"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576666244, "post_id": 59388990, "comment_id": 104970897, "body": "@SvenMarnach Yeah I had put it there due to the compiler error stating that T did not satisfy Sized. I&#39;ll rephrase the question and correct the code."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576669572, "post_id": 59388990, "comment_id": 104972555, "body": "@SvenMarnach: I would say that this is <i>known</i> behavior, yet unexpected. Unlike a <code>fn</code> or <code>type</code>, you cannot have a generic <code>const</code> item, and thus a <code>const</code> item need be able to access its outer function (or struct, or impl) generic parameters. I&#39;m happy to write it off as a limitation for now, but longer term it will need to be fixed."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1576671408, "post_id": 59388990, "comment_id": 104973445, "body": "With <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md\" rel=\"nofollow noreferrer\">const generics</a> enabled, right now the closest I can get it to work is <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=8e583172c05dca97b9c8c6790433c7ba\" rel=\"nofollow noreferrer\">this</a>."}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1576665218, "post_id": 59389732, "comment_id": 104970392, "body": "I don&#39;t think it is directly related with an array length expressions, it is a constant evaluation issue(it happens on array, because it expects a generic constant), please see : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=209509470bd94a493c0a106cda06ddea\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1576666808, "post_id": 59389732, "comment_id": 104971189, "body": "@&#214;merErden Quoting one of the compiler devs from the linked bug: &quot;This is a limitation of array length - it can&#39;t use any parameters in scope - which also came up during the stabilization of associated consts.&quot; I&#39;m not sure whether it actually is the same issue, but based on that quote I decided to phrase my answer this way."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1576667994, "post_id": 59389732, "comment_id": 104971783, "body": "Sure, i had no intention to disprove your answer, instead i was trying to point <a href=\"https://stackoverflow.com/questions/59388990/why-cant-rust-determine-the-size-of-a-template-parameter-at-compile-time/59389732?noredirect=1#comment104969111_59388990\">your comment</a>. The actual error can be from <b>Constant Evaluation</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576679743, "post_id": 59389732, "comment_id": 104977819, "body": "Once you know the answer, please search for existing questions / answers that have already provided the answer. This reduces our maintenance burden of keeping older questions and answers updated."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 5, "last_activity_date": 1576679765, "last_edit_date": 1576679765, "creation_date": 1576663996, "answer_id": 59389732, "question_id": 59388990, "link": "https://stackoverflow.com/questions/59388990/why-cant-rust-use-the-size-of-a-generic-parameter-as-an-array-length/59389732#59389732", "title": "Why can&#39;t Rust use the size of a generic parameter as an array length?", "body": "<p>This is the result of a <a href=\"https://github.com/rust-lang/rust/issues/43408\" rel=\"nofollow noreferrer\">known compiler bug (#43408)</a>. Array length expressions cannot currently have type parameters, and apparently it isn't even possible to improve the error message without major refactoring.</p>\n\n<p>There currently isn't a good workaround for this in general, though there might be one for your specific use case.</p>\n"}], "owner": {"reputation": 73, "user_id": 6009207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86ead4fb6a7cddf555ee09752518631c?s=128&d=identicon&r=PG&f=1", "display_name": "Plettro", "link": "https://stackoverflow.com/users/6009207/plettro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 795, "favorite_count": 0, "closed_date": 1576679655, "accepted_answer_id": 59389732, "answer_count": 1, "score": 7, "last_activity_date": 1576679883, "creation_date": 1576661365, "last_edit_date": 1576679627, "question_id": 59388990, "link": "https://stackoverflow.com/questions/59388990/why-cant-rust-use-the-size-of-a-generic-parameter-as-an-array-length", "closed_reason": "Duplicate", "title": "Why can&#39;t Rust use the size of a generic parameter as an array length?", "body": "<p>I'm having a bit of trouble understanding the problem with this code:</p>\n\n<pre><code>fn doesnt_compile&lt;T&gt;() {\n    println!(\"{}\", std::mem::size_of::&lt;[T; std::mem::size_of::&lt;T&gt;()]&gt;());\n}\n\nfn main() {\n    doesnt_compile::&lt;i32&gt;();\n}\n</code></pre>\n\n<p>When run in the playground (or on my machine) the compiler seems to ignore the implicit trait bound 'Sized' for T.</p>\n\n<p>This is the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `T` cannot be known at compilation time\n   --&gt; src/main.rs:2:64\n    |\n2   |     println!(\"{}\", std::mem::size_of::&lt;[T; std::mem::size_of::&lt;T&gt;()]&gt;());\n    |                                                                ^ doesn't have a size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `T`\n    = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n    = help: consider adding a `where T: std::marker::Sized` bound\n</code></pre>\n\n<p>I stared at it for a while and tried to rewrite it in different ways, but i can't figure out why it shouldn't compile. I find it especially confusing since the following code works just fine:</p>\n\n<pre><code>fn compiles&lt;T&gt;() {\n    println!(\"{}\", std::mem::size_of::&lt;T&gt;());\n}\n\nfn main() {\n    compiles::&lt;i32&gt;();\n}\n</code></pre>\n\n<p>Is there something I'm missing? Is it a compiler bug?</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates", "platform-independence"], "comments": [{"owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "edited": false, "score": 0, "creation_date": 1576654148, "post_id": 59387053, "comment_id": 104965306, "body": "One possible workaround is to <code>include!</code> it."}, {"owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "reply_to_user": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "edited": false, "score": 0, "creation_date": 1576654462, "post_id": 59387053, "comment_id": 104965429, "body": "@Inline Yes I started try that, but the <code>easy_reader</code> crate I use requires a file object and not a string, so that would mean create a &quot;dummy&quot; file in the local directory and possibly have to clean and remove it every time the program is run(?)"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1576655058, "post_id": 59387053, "comment_id": 104965642, "body": "According to <a href=\"https://docs.rs/easy_reader/0.5.0/easy_reader/struct.EasyReader.html\" rel=\"nofollow noreferrer\">its documentation</a> <code>easy_rider</code> only requires a <code>Read + Seek</code>, so you can <code>include!</code> your text and use a <a href=\"https://doc.rust-lang.org/stable/std/io/struct.Cursor.html\" rel=\"nofollow noreferrer\"><code>Cursor</code></a> to access it. See also: <a href=\"https://stackoverflow.com/a/32675033/5397009\">stackoverflow.com/a/32675033/5397009</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1576655677, "post_id": 59387053, "comment_id": 104965880, "body": "Hi! I think your question is basically the same as <a href=\"https://stackoverflow.com/questions/39888534/how-do-i-access-assets-included-in-a-rust-cargo-project-installed-via-cargo-ins\">this one</a>. While the one I linked does not have a satisfying answer (yet), do you agree that we should close yours as duplicate of the one I linked?"}, {"owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1576658953, "post_id": 59387053, "comment_id": 104967237, "body": "@LukasKalbertodt This answer by you seems to be the solution <a href=\"https://stackoverflow.com/a/41069910/108207\">stackoverflow.com/a/41069910/108207</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "edited": false, "score": 0, "creation_date": 1576656743, "post_id": 59387790, "comment_id": 104966307, "body": "This is not an answer. This is just a workaround."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1576656999, "post_id": 59387790, "comment_id": 104966417, "body": "Hi there! Your answer should explain how to solve the <code>easy_reader</code> problem that came up in the comments. But I&#39;d much prefer if we would close this question in favor of <a href=\"https://stackoverflow.com/questions/39888534/how-do-i-access-assets-included-in-a-rust-cargo-project-installed-via-cargo-ins\">this one</a>. There, <code>include_str</code> is already mentioned."}], "tags": [], "owner": {"reputation": 79, "user_id": 2447228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a60b5e988da8b767ba00a9c1f13ab5de?s=128&d=identicon&r=PG", "display_name": "Jan van den Berg", "link": "https://stackoverflow.com/users/2447228/jan-van-den-berg"}, "is_accepted": false, "score": 0, "last_activity_date": 1576656396, "creation_date": 1576656396, "answer_id": 59387790, "question_id": 59387053, "link": "https://stackoverflow.com/questions/59387053/how-to-include-a-text-file-along-with-a-crate-installation/59387790#59387790", "title": "How to include a text file along with a crate installation", "body": "<p>You can use the <code>include_str!</code> macro.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let my_str = include_str!(\"spanish.in\");\n    assert_eq!(my_str, \"adi\u00f3s\\n\");\n    print!(\"{}\", my_str);\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/macro.include_str.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/macro.include_str.html</a></p>\n"}, {"comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1576660236, "post_id": 59388449, "comment_id": 104967818, "body": "You can crate a <code>Cursor</code> from slice directly: <code>let mut c = Cursor::new(str42);</code>."}], "tags": [], "owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "is_accepted": false, "score": 0, "last_activity_date": 1576659187, "creation_date": 1576659187, "answer_id": 59388449, "question_id": 59387053, "link": "https://stackoverflow.com/questions/59387053/how-to-include-a-text-file-along-with-a-crate-installation/59388449#59388449", "title": "How to include a text file along with a crate installation", "body": "<p>Thanks to the comments here, the following works:</p>\n\n<pre><code>fn spook() -&gt; Result&lt;(), Error&gt; {\n\n    // Create fake \"file\"\n    let mut c = Cursor::new(Vec::new());\n    let str42 = include_str!(\"spook.lines\").as_bytes();\n\n    // Write into the \"file\" and seek to the beginning\n    c.write_all(str42).unwrap();\n    c.seek(SeekFrom::Start(0)).unwrap();\n\n    let mut reader = EasyReader::new(c)?;\n    let _res = reader.build_index();\n    print!(\"{}\", reader.random_line()?.unwrap());\n    print!(\"{}\", reader.random_line()?.unwrap());\n    print!(\"{}\", reader.random_line()?.unwrap());\n    print!(\"{}\", reader.random_line()?.unwrap());\n    print!(\"{}\", reader.random_line()?.unwrap());\n    Ok(())\n} \n</code></pre>\n"}], "owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 239, "favorite_count": 0, "closed_date": 1576679281, "answer_count": 2, "score": 2, "last_activity_date": 1576679395, "creation_date": 1576653025, "last_edit_date": 1576659023, "question_id": 59387053, "link": "https://stackoverflow.com/questions/59387053/how-to-include-a-text-file-along-with-a-crate-installation", "closed_reason": "Duplicate", "title": "How to include a text file along with a crate installation", "body": "<p>My program works as expected with my local machine. It prints random lines from a text file in the vein of the Emacs \"Spook\" amusement (M-x spook). The text file is located in <code>src/spook.lines</code>.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\Users\\datan&gt;spooks\ndomestic Eiffel Tower Euzkadi Ta Askatasuna Euzkadi Ta Askatasuna minefield\nC:\\Users\\datan&gt;spooks\nUzi White House secret Sivi Vukovi divers\nC:\\Users\\datan&gt;spooks\nHizb-i-Islami smallpox US Airways SWAT plague\nC:\\Users\\datan&gt;\n</code></pre>\n\n<p>But if I <a href=\"https://crates.io/crates/spooks\" rel=\"nofollow noreferrer\">publish it as a crate</a> and install it, the text file is not found (because it is not in <code>src/spook.lines</code> if the program is installed from crates.io):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\Users\\datan&gt;docker run -it rust bash\nUnable to find image 'rust:latest' locally\nlatest: Pulling from library/rust\n16ea0e8c8879: Pull complete\n50024b0106d5: Pull complete\nff95660c6937: Pull complete\n9c7d0e5c0bc2: Pull complete\n29c4fb388fdf: Pull complete\nee0ab7fd0ac4: Pull complete\nDigest: sha256:d8e2b124d6f4fcdf977bf7e6cfbda87fa5061b0c1933742699ee5131444217c9\nStatus: Downloaded newer image for rust:latest\nroot@137111b4d94c:/# cargo install spooks\n    Updating crates.io index\n  Downloaded spooks v0.1.0\n  Downloaded 1 crate (19.0 KB) in 1.60s\n  Installing spooks v0.1.0\n  Downloaded getopts v0.2.21\n  Downloaded rand v0.7.2\n  Downloaded rand_chacha v0.2.1\n  Downloaded easy_reader v0.5.0\n  Downloaded getrandom v0.1.13\n  Downloaded rand_core v0.5.1\n  Downloaded unicode-width v0.1.7\n  Downloaded libc v0.2.66\n  Downloaded c2-chacha v0.2.3\n  Downloaded fnv v1.0.6\n  Downloaded cfg-if v0.1.10\n  Downloaded ppv-lite86 v0.2.6\n   Compiling libc v0.2.66\n   Compiling getrandom v0.1.13\n   Compiling cfg-if v0.1.10\n   Compiling ppv-lite86 v0.2.6\n   Compiling fnv v1.0.6\n   Compiling unicode-width v0.1.7\n   Compiling getopts v0.2.21\n   Compiling c2-chacha v0.2.3\n   Compiling rand_core v0.5.1\n   Compiling rand_chacha v0.2.1\n   Compiling rand v0.7.2\n   Compiling easy_reader v0.5.0\n   Compiling spooks v0.1.0\n    Finished release [optimized] target(s) in 22.15s\n  Installing /usr/local/cargo/bin/spooks\n   Installed package `spooks v0.1.0` (executable `spooks`)\nroot@137111b4d94c:/# spooks\n(no output because src/spook.lines is not there)\n</code></pre>\n\n<p>The way I include the file is:</p>\n\n<pre><code>let file = File::open(\"src/spook.lines\")?;\n</code></pre>\n\n<p>Why can I not just tell the cargo/crate packaging to include the text file? What is the preferred way? I mean even if I include the file in a certain directory then it would not be in the <code>PATH</code> of the execution because the program might be run from anywhere. </p>\n"}, {"tags": ["rust", "borrowing"], "comments": [{"owner": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 0, "creation_date": 1576647399, "post_id": 59385587, "comment_id": 104963160, "body": "I&#39;d say the first part is worded a bit confusingly. You can read it as <i>&quot;the type of the reference to &amp;x we borrow and store in r&quot;</i>. You&#39;re right that &quot;borrow to&quot; isn&#39;t really correct here, but you can &quot;borrow <b>a reference to</b>&quot; something"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1576653269, "post_id": 59385587, "comment_id": 104964945, "body": "Don&#39;t overthink it. In both cases, you can read it as &quot;<b>a reference to sth</b>&quot; and then we are here to &quot;<b>borrow that reference</b>&quot;. In the meantime, shouldn&#39;t this be closed?"}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1576654589, "post_id": 59385587, "comment_id": 104965472, "body": "@edwardw I don&#39;t know:-) Haha, I just want to bring it up to let the Rust professionals take a look."}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 0, "creation_date": 1576654676, "post_id": 59385587, "comment_id": 104965509, "body": "@kmdreko Thanks, that&#39;s reasonable. I added example 3 and it&#39;s not the same as example 2."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576660477, "post_id": 59385587, "comment_id": 104967947, "body": "To clarify edwardw&#39;s point, you should read these as &quot;borrow (a reference to a value)&quot; rather than &quot;(borrow a reference) to a value&quot;. This wording deviates from the usual wording in the Rust documentation and the compiler error messages. I&#39;d usually say &quot;the reference creates a borrow of the value&quot;, or &quot;you borrow the value&quot; (by creating a reference). &quot;Borrowing a reference&quot; sounds a bit off to me."}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576672332, "post_id": 59385587, "comment_id": 104973898, "body": "@SvenMarnach Yes, I understand it. Thanks for the clarification. But in example 3, the author said: \u201cborrow a reference\u201d to a value. The quotes are part of the text from the book."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576673702, "post_id": 59385587, "comment_id": 104974622, "body": "I think Example 1 is substantially different from the other two, and I even suspect it&#39;s a victim of editing: I would say the reference being borrowed is <b>to <code>x</code></b> (<code>&amp;x</code> is the reference, <code>x</code> is the thing being referenced, so <code>&amp;x</code> is <b>a reference to <code>x</code></b>. I suggest re-reading Example 1 assuming it was meant to be written without the <code>&amp;</code>. Does that help? (I have the book, but I haven&#39;t looked through to see if it uses this convention anywhere else)"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 1, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 125, "favorite_count": 0, "closed_date": 1576660498, "answer_count": 0, "score": 2, "last_activity_date": 1576653575, "creation_date": 1576644235, "last_edit_date": 1576653575, "question_id": 59385587, "link": "https://stackoverflow.com/questions/59385587/is-this-a-grammar-issue-or-am-i-understanding-it-wrong", "closed_reason": "Opinion-based", "title": "Is this a grammar issue or am I understanding it wrong?", "body": "<p>I'm reading the book <a href=\"http://shop.oreilly.com/product/0636920040385.do\" rel=\"nofollow noreferrer\"><em>Programming Rust</em></a>. There are some places I don't quite understand. </p>\n\n<hr>\n\n<p>Example 1</p>\n\n<p>For this code</p>\n\n<pre><code>fn main() {\n    let r;\n    {\n        let x = 1;\n        r = &amp;x;\n    }\n    println!(\"{:?}\", r);\n}\n</code></pre>\n\n<p>The author states</p>\n\n<blockquote>\n  <p>In this example, there are three lifetimes whose relationships we need to work out. The variables r and x each have a lifetime, extending from the point at which they\u2019re initialized until the point that they go out of scope. The third lifetime is that of a reference type: the type of the reference we <strong>borrow to</strong> &amp;x, and store in r.</p>\n</blockquote>\n\n<hr>\n\n<p>Example 2</p>\n\n<p>For this code</p>\n\n<pre><code>let v = vec![1, 2, 3];\nlet r = &amp;v[1];\n</code></pre>\n\n<p>The author states</p>\n\n<blockquote>\n  <p>These rules apply in a natural way when you <strong>borrow a reference to</strong> some part of some larger data structure, like an element of a vector:</p>\n</blockquote>\n\n<hr>\n\n<p>Example 3</p>\n\n<blockquote>\n  <p>You can <strong>\u201cborrow a reference\u201d</strong> to a value; references are nonowning pointers, with limited lifetimes.</p>\n</blockquote>\n\n<p>Note here the quotes are in the text of the book, not added by me.</p>\n\n<hr>\n\n<p>Note the bold text in the description of the two examples. Why the author always say <em>borrow sth to sth</em> instead of <em>borrow sth from sth</em>? I'm not a native English speaker and as I understand <em>borrow sth from sth/sb</em> is the correct usage. When talking about Rust's reference borrowing, is this usage correct?</p>\n"}, {"tags": ["rust", "match"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 2, "creation_date": 1576648752, "post_id": 59385377, "comment_id": 104963508, "body": "You possibly want <code>&lt;T as std::str::FromStr&gt;::Err : std::error::Error</code>, i.e. force it to be the actual error object (which will always implement <code>Display</code>) and not something arbitrary."}, {"owner": {"reputation": 1089, "user_id": 5405968, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TVcHU.jpg?s=128&g=1", "display_name": "Bennett Hardwick", "link": "https://stackoverflow.com/users/5405968/bennett-hardwick"}, "edited": false, "score": 0, "creation_date": 1576674806, "post_id": 59385377, "comment_id": 104975168, "body": "If your error implements Debug, you could print that value instead: <code>println!(&quot;{:?}&quot;, e)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576678958, "post_id": 59385377, "comment_id": 104977349, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/59385377/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576679228, "post_id": 59385377, "comment_id": 104977513, "body": "As the compiler tells you: <code>consider adding a `where &lt;T as std::str::FromStr&gt;::Err: std::fmt::Display` bound</code>"}, {"owner": {"reputation": 445, "user_id": 12419253, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-oWBEcDEMx9U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reK3x4geMaiXAFQqdlXcZYY-T20ag/photo.jpg?sz=128", "display_name": "STF_ZBR", "link": "https://stackoverflow.com/users/12419253/stf-zbr"}, "edited": false, "score": 0, "creation_date": 1576712636, "post_id": 59385377, "comment_id": 104992022, "body": "I added a reproducible example. Changing the Err to &#39;_&#39; vs &#39;e&#39; will clear all errors. I have tried a to add the &quot;where&quot; bound, but I haven&#39;t been successful. Also, using &#39;{:?}&#39; doesn&#39;t improve the situation."}], "owner": {"reputation": 445, "user_id": 12419253, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-oWBEcDEMx9U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reK3x4geMaiXAFQqdlXcZYY-T20ag/photo.jpg?sz=128", "display_name": "STF_ZBR", "link": "https://stackoverflow.com/users/12419253/stf-zbr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 72, "favorite_count": 0, "closed_date": 1576679190, "answer_count": 0, "score": 1, "last_activity_date": 1576712472, "creation_date": 1576642510, "last_edit_date": 1576712472, "question_id": 59385377, "link": "https://stackoverflow.com/questions/59385377/how-can-i-match-on-a-generic-result-and-still-print-a-useful-error", "closed_reason": "Duplicate", "title": "How can I match on a generic Result and still print a useful error?", "body": "<p>I have a match statement where I want to print the error, if it occurs. But, it seems it wont allow it due to the generic type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match get_numeral(&amp;str_inp).parse::&lt;T&gt;() {\n    Ok(rslt) =&gt; {\n        if rslt &gt;= val_min &amp;&amp; rslt &lt;= val_max {\n            str_inp = rslt.to_string();\n            finish = true;\n        }\n    }\n    Err(e) =&gt; (println!(\"{}\", e)),\n}\n</code></pre>\n\n<p>With the preceding code, the following error is displayed:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>137 |             Err(e)=&gt; (println!(\"{}\",e)),\n    |                                     ^ `&lt;T as std::str::FromStr&gt;::Err` cannot be formatted with the default\nformatter\n</code></pre>\n\n<p>What am I missing here?</p>\n\n<p>I did notice the following hints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    = help: the trait `std::fmt::Display` is not implemented for `&lt;T as std::str::FromStr&gt;::Err`\n    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n    = help: consider adding a `where &lt;T as std::str::FromStr&gt;::Err: std::fmt::Display` bound\n    = note: required by `std::fmt::Display::fmt`\n</code></pre>\n\n<p>My function definition looks like:</p>\n\n<pre><code>fn expect_val&lt;T&gt;(val_min: T, val_max: T, accept: Vec&lt;String&gt;) -&gt; String\nwhere\n    T: std::str::FromStr + PartialOrd + ToString,\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9f2c0d8ce079f737378803b2feabeaf8\" rel=\"nofollow noreferrer\">Reproducible example</a></p>\n"}, {"tags": ["linux", "windows", "rust", "cross-compiling"], "answers": [{"comments": [{"owner": {"reputation": 91, "user_id": 7398600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bZkGc.png?s=128&g=1", "display_name": "Perikl Femidi", "link": "https://stackoverflow.com/users/7398600/perikl-femidi"}, "edited": false, "score": 1, "creation_date": 1576652552, "post_id": 59386146, "comment_id": 104964673, "body": "I just tried this. Yes, it works, but sadly only x86_64 windows platform supported. Is any way to do the same thing but for x86?"}], "tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": false, "score": 1, "last_activity_date": 1576654060, "last_edit_date": 1576654060, "creation_date": 1576648029, "answer_id": 59386146, "question_id": 59385341, "link": "https://stackoverflow.com/questions/59385341/crosscompiling-rust-from-fedora-linux-host-to-windows-target-does-not-find-depen/59386146#59386146", "title": "Crosscompiling Rust from Fedora Linux host to Windows target does not find dependencies", "body": "<p>Cross-compiling isn't always easy as it sounds. I recommend to not invent your own wheel and use already tested solutions.</p>\n\n<p>Currently \"standard\" way to do cross-compiling is to use <a href=\"https://github.com/rust-embedded/cross\" rel=\"nofollow noreferrer\">cross</a>, which is cargo wrapper that abstracts you away from details of cross-compilation.</p>\n\n<p>Before installing cross you should install it's <a href=\"https://github.com/rust-embedded/cross#dependencies\" rel=\"nofollow noreferrer\">dependencies</a>. How to do that exactly depends on your distribution.</p>\n\n<p>After dependencies are ready you should install <code>cross</code> like this (assuming you have <code>cargo</code>).</p>\n\n<p><code>$ cargo install cross</code></p>\n\n<p>After that build works semi-magically </p>\n\n<pre><code>cross build --target x86_64-pc-windows-gnu\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 91, "user_id": 7398600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bZkGc.png?s=128&g=1", "display_name": "Perikl Femidi", "link": "https://stackoverflow.com/users/7398600/perikl-femidi"}, "is_accepted": true, "score": 6, "last_activity_date": 1577127861, "last_edit_date": 1577127861, "creation_date": 1577105223, "answer_id": 59455638, "question_id": 59385341, "link": "https://stackoverflow.com/questions/59385341/crosscompiling-rust-from-fedora-linux-host-to-windows-target-does-not-find-depen/59455638#59455638", "title": "Crosscompiling Rust from Fedora Linux host to Windows target does not find dependencies", "body": "<p>After a little thought I was able to solve the problem to cross compile projects in Rust from the Linux host to the Windows target without using <a href=\"https://github.com/rust-embedded/cross\" rel=\"noreferrer\">cross</a> and similar tools but simply by specifying specific target in the cargo. Of course testing and running the project will fail (if you have no any emulator like wine installed), but just creating the Windows target goes smoothly. BTW Rust was developed to be cross compiler initially and therefore having the full working project and passing all the tests in Linux one can be almost sure that a simple cross compilation of this project in Windows will not break it in any way.</p>\n\n<p>Since I run Fedora Linux 31 all of the following applies to this distribution. But I do not think that there are significant differences among other Linux distributions. And I only consider pc-windows-gnu Rust targets, pc-windows-msvc targets are not of my interest.</p>\n\n<p>First, make sure all the necessary MinGW packages for cross compilation are installed:</p>\n\n<pre><code>[pfemidi@pfemidi ~]$ rpm -qa | grep mingw | sort\nmingw32-binutils-2.32-6.fc31.x86_64\nmingw32-cpp-9.2.1-1.fc31.x86_64\nmingw32-crt-6.0.0-2.fc31.noarch\nmingw32-filesystem-110-1.fc31.noarch\nmingw32-gcc-9.2.1-1.fc31.x86_64\nmingw32-headers-6.0.0-2.fc31.noarch\nmingw32-winpthreads-6.0.0-2.fc31.noarch\nmingw32-winpthreads-static-6.0.0-2.fc31.noarch\nmingw64-binutils-2.32-6.fc31.x86_64\nmingw64-cpp-9.2.1-1.fc31.x86_64\nmingw64-crt-6.0.0-2.fc31.noarch\nmingw64-filesystem-110-1.fc31.noarch\nmingw64-gcc-9.2.1-1.fc31.x86_64\nmingw64-headers-6.0.0-2.fc31.noarch\nmingw64-winpthreads-6.0.0-2.fc31.noarch\nmingw64-winpthreads-static-6.0.0-2.fc31.noarch\nmingw-binutils-generic-2.32-6.fc31.x86_64\nmingw-filesystem-base-110-1.fc31.noarch\n[pfemidi@pfemidi ~]$\n</code></pre>\n\n<p>Lets create the simplest project in the Rust language:</p>\n\n<pre><code>[pfemidi@pfemidi rust]$ cargo new foobar\n     Created binary (application) `foobar` package\n[pfemidi@pfemidi rust]$ cat foobar/src/main.rs \nfn main() {\n    println!(\"Hello, world!\");\n}\n[pfemidi@pfemidi rust]$\n</code></pre>\n\n<p>Create the .cargo directory with the config file in the project directory with the following contents:</p>\n\n<pre><code>[pfemidi@pfemidi rust]$ cd foobar\n[pfemidi@pfemidi foobar]$ mkdir .cargo\n[pfemidi@pfemidi foobar]$ cat &gt; .cargo/config\n[target.i686-pc-windows-gnu]\nlinker = \"i686-w64-mingw32-gcc\"\nar = \"i686-w64-mingw32-ar\"\n\n[target.x86_64-pc-windows-gnu]\nlinker = \"x86_64-w64-mingw32-gcc\"\nar = \"x86_64-w64-mingw32-ar\"\n[pfemidi@pfemidi foobar]$\n</code></pre>\n\n<p>This step is necessary so that when building Windows targets Rust uses not the linker from the default gcc installed but the MinGW linker.</p>\n\n<p>Now try to build the project as the i686-pc-windows-gnu target:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cargo build --target i686-pc-windows-gnu\n   Compiling foobar v0.1.0 (/home/pfemidi/mywork/rust/foobar)\nerror: linking with `i686-w64-mingw32-gcc` failed: exit code: 1\n  |\n  = note: \"i686-w64-mingw32-gcc\" \"-Wl,--enable-long-section-names\" \"-fno-use-linker-plugin\" \"-Wl,--nxcompat\" \"-nostdlib\"\n\n...\n\n  = note: /usr/lib/gcc/i686-w64-mingw32/9.2.1/../../../../i686-w64-mingw32/bin/ld: /home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/crt2.o:crtexe.c:(.text+0x75): undefined reference to `__onexitend'\n          /usr/lib/gcc/i686-w64-mingw32/9.2.1/../../../../i686-w64-mingw32/bin/ld: /home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/crt2.o:crtexe.c:(.text+0x7a): undefined reference to `__onexitbegin'\n          collect2: error: ld returned 1 exit status\n\n\nerror: aborting due to previous error\n\nerror: could not compile `foobar`.\n\nTo learn more, run the command again with --verbose.\n[pfemidi@pfemidi foobar]$\n</code></pre>\n\n<p>Error! Got \"undefined reference to <code>__onexitend</code>\" and \"undefined reference to <code>__onexitbegin</code>\" in the crt2.o file. The fact is that Rust component for pc-windows-gnu target has been built with MinGW 6.3.0 but there is MinGW version 9.2.1 in Fedora Linux 31. So there is a difference in the CRT due compiler versions mismatch. Ok, lets copy crt2.o from Fedora Linux MinGW repository to the Rust directory for the i686-pc-windows-gnu component. And along with crt2.o we also copy dllcrt2.o, it is the entry point for dynamic libraries as crt2.o is for standalone executable files. Just in case, we save the original files:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cd ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/\n[pfemidi@pfemidi lib]$ mv crt2.o crt2.o.ori\n[pfemidi@pfemidi lib]$ mv dllcrt2.o dllcrt2.o.ori\n[pfemidi@pfemidi lib]$ cp /usr/i686-w64-mingw32/sys-root/mingw/lib/crt2.o .\n[pfemidi@pfemidi lib]$ cp /usr/i686-w64-mingw32/sys-root/mingw/lib/dllcrt2.o .\n[pfemidi@pfemidi lib]$ cd -\n/home/pfemidi/mywork/rust/foobar\n[pfemidi@pfemidi foobar]$ \n</code></pre>\n\n<p>Now try to build the project as the i686-pc-windows-gnu target again:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cargo build --target i686-pc-windows-gnu\n   Compiling foobar v0.1.0 (/home/pfemidi/mywork/rust/foobar)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.19s\n[pfemidi@pfemidi foobar]$ \n</code></pre>\n\n<p>It worked!</p>\n\n<p>Now try to do the same for x86_64-pc-windows-gnu target:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cargo build --target x86_64-pc-windows-gnu\n   Compiling foobar v0.1.0 (/home/pfemidi/mywork/rust/foobar)\nerror: linking with `x86_64-w64-mingw32-gcc` failed: exit code: 1\n  |\n  = note: \"x86_64-w64-mingw32-gcc\" \"-Wl,--enable-long-section-names\" \"-fno-use-linker-plugin\" \"-Wl,--nxcompat\" \"-nostdlib\" \"-m64\"\n\n...\n\n  = note: /usr/lib/gcc/x86_64-w64-mingw32/9.2.1/../../../../x86_64-w64-mingw32/bin/ld: /home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/lib/crt2.o:crtexe.c:(.rdata$.refptr.__onexitbegin[.refptr.__onexitbegin]+0x0): undefined reference to `__onexitbegin'\n          /usr/lib/gcc/x86_64-w64-mingw32/9.2.1/../../../../x86_64-w64-mingw32/bin/ld: /home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/lib/crt2.o:crtexe.c:(.rdata$.refptr.__onexitend[.refptr.__onexitend]+0x0): undefined reference to `__onexitend'\n          collect2: error: ld returned 1 exit status\n\n\nerror: aborting due to previous error\n\nerror: could not compile `foobar`.\n\nTo learn more, run the command again with --verbose.\n[pfemidi@pfemidi foobar]$ \n</code></pre>\n\n<p>The error is exactly the same as for the i686-pc-windows-gnu target was noted before. Lets copy the files crt2.o and dllcrt2.o by analogy with the 32bit target above:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cd ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/lib/\n[pfemidi@pfemidi lib]$ mv crt2.o crt2.o.ori\n[pfemidi@pfemidi lib]$ mv dllcrt2.o dllcrt2.o.ori\n[pfemidi@pfemidi lib]$ cp /usr/x86_64-w64-mingw32/sys-root/mingw/lib/crt2.o .\n[pfemidi@pfemidi lib]$ cp /usr/x86_64-w64-mingw32/sys-root/mingw/lib/dllcrt2.o .\n[pfemidi@pfemidi lib]$ cd -\n/home/pfemidi/mywork/rust/foobar\n[pfemidi@pfemidi foobar]$ \n</code></pre>\n\n<p>And try to build the project as the x86_64-pc-windows-gnu target again:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cargo build --target x86_64-pc-windows-gnu\n   Compiling foobar v0.1.0 (/home/pfemidi/mywork/rust/foobar)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.20s\n[pfemidi@pfemidi foobar]$ \n</code></pre>\n\n<p>Yes! It worked also! So now we can easily build targets for Windows using the standard cargo included in the Rust distribution! And for x86_64 targets this is completely true. But for x86 targets everything will be fine only until we use in our project any functions that panic (f.e. macro panic!, expect functions, etc.).</p>\n\n<p>Lets add panic to our simple project:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cat src/main.rs \nfn main() {\n    println!(\"Hello, world!\");\n    panic!(\"I'm panicked!\");    // &lt;-- here it is\n}\n[pfemidi@pfemidi foobar]$\n</code></pre>\n\n<p>Build it as x86_64 target:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cargo build --target x86_64-pc-windows-gnu\n   Compiling foobar v0.1.0 (/home/pfemidi/mywork/rust/foobar)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.16s\n[pfemidi@pfemidi foobar]$ \n</code></pre>\n\n<p>It is going perfectly (and works just as well, I checked). Now try to do the same for the x86 target:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cargo build --target i686-pc-windows-gnu\n   Compiling foobar v0.1.0 (/home/pfemidi/mywork/rust/foobar)\nerror: linking with `i686-w64-mingw32-gcc` failed: exit code: 1\n  |\n  = note: \"i686-w64-mingw32-gcc\" \"-Wl,--enable-long-section-names\" \"-fno-use-linker-plugin\" \"-Wl,--nxcompat\" \"-nostdlib\"\n\n...\n\n  = note: /usr/lib/gcc/i686-w64-mingw32/9.2.1/../../../../i686-w64-mingw32/bin/ld: /home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libpanic_unwind-0c029c00da54fbf5.rlib(panic_unwind-0c029c00da54fbf5.panic_unwind.2hgzd7yq-cgu.0.rcgu.o): in function `ZN12panic_unwind3imp5panic17h03027a0e504502cdE':\n          /rustc/73528e339aae0f17a15ffa49a8ac608f50c6cf14\\/src\\libpanic_unwind/gcc.rs:73: undefined reference to `_Unwind_RaiseException'\n          /usr/lib/gcc/i686-w64-mingw32/9.2.1/../../../../i686-w64-mingw32/bin/ld: /home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libpanic_unwind-0c029c00da54fbf5.rlib(panic_unwind-0c029c00da54fbf5.panic_unwind.2hgzd7yq-cgu.0.rcgu.o): in function `rust_eh_unwind_resume':\n          /rustc/73528e339aae0f17a15ffa49a8ac608f50c6cf14\\/src\\libpanic_unwind/gcc.rs:327: undefined reference to `_Unwind_Resume'\n          collect2: error: ld returned 1 exit status\n\n\nerror: aborting due to previous error\n\nerror: could not compile `foobar`.\n\nTo learn more, run the command again with --verbose.\n[pfemidi@pfemidi foobar]$\n</code></pre>\n\n<p>Oops! We got \"undefined reference to <code>_Unwind_RaiseException</code>\" and \"undefined reference to <code>_Unwind_Resume</code>\" in the libpanic_unwind module of the Rust standard library. But this problem is also solved, though not as simple as the previous one which is a mere replacement of CRT crt2.o and dllcrt2.o files.</p>\n\n<p>For the stack unwinding Rust uses the dwarf method for 32bit Windows targets and seh method for 64bit Windows targets while MinGW from the standard Fedora Linux distribution uses the sjlj method for 32bit Windows targets and seh method for 64bit Windows targets (read about the difference <a href=\"https://stackoverflow.com/questions/15670169/what-is-difference-between-sjlj-vs-dwarf-vs-seh\">here</a>). Therefore 64bit targets are linked by MinGW linker without any problem but for 32bit ones there are no necessary symbols and object files to be linked correctly. To get these files and symbols it's necessary to rebuild MinGW with dwarf support instead of sjlj support by default for 32bit Windows targets.</p>\n\n<p>I will not go into details on how to rebuild MinGW here, I will say only one thing: after MinGW is rebuilt with the dwarf stack unwinding instead of sjlj method you need to pick only one file called libgcc_eh.a from the MinGW just built and put it in the library directory for the Rust i686-pc-windows-gnu target. After doing that projects with any panic functions will build with no errors not only for 64bit Windows targets, but also for 32bit ones:</p>\n\n<pre><code>[pfemidi@pfemidi foobar]$ cd ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/\n[pfemidi@pfemidi lib]$ cp ~/rpmbuild/BUILD/gcc-9.2.1-20190827/build_win32/i686-w64-mingw32/libgcc/libgcc_eh.a .\n[pfemidi@pfemidi lib]$ cd -\n/home/pfemidi/mywork/rust/foobar\n[pfemidi@pfemidi foobar]$ cargo build --target i686-pc-windows-gnu\n   Compiling foobar v0.1.0 (/home/pfemidi/mywork/rust/foobar)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.30s\n[pfemidi@pfemidi foobar]$ \n</code></pre>\n\n<p>Happy RUSTing! :-)</p>\n"}], "owner": {"reputation": 91, "user_id": 7398600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bZkGc.png?s=128&g=1", "display_name": "Perikl Femidi", "link": "https://stackoverflow.com/users/7398600/perikl-femidi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1007, "favorite_count": 0, "accepted_answer_id": 59455638, "answer_count": 2, "score": 2, "last_activity_date": 1577127861, "creation_date": 1576642160, "question_id": 59385341, "link": "https://stackoverflow.com/questions/59385341/crosscompiling-rust-from-fedora-linux-host-to-windows-target-does-not-find-depen", "title": "Crosscompiling Rust from Fedora Linux host to Windows target does not find dependencies", "body": "<p>I run x86_64 Fedora Linux 31 host and want to compile some simplest rust code:</p>\n\n<pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>It compiles from the host to this host natively fine but when I try to cross compile it to either i686 or x86_64 windows it fails to compile.</p>\n\n<p>I read stackoverflow (for example <a href=\"https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows\">here</a>) and googled the Internet trying to find out similar problem and how to solve it but with no profit.</p>\n\n<p>I have installed all the targets necessary:</p>\n\n<pre><code>[pfemidi@pfemidi hello_cargo]$ rustup show\nDefault host: x86_64-unknown-linux-gnu\nrustup home:  /home/pfemidi/.rustup\n\ninstalled targets for active toolchain\n--------------------------------------\n\ni686-pc-windows-gnu\ni686-unknown-linux-gnu\ni686-unknown-linux-musl\nx86_64-pc-windows-gnu\nx86_64-unknown-linux-gnu\nx86_64-unknown-linux-musl\n\nactive toolchain\n----------------\n\nstable-x86_64-unknown-linux-gnu (default)\nrustc 1.39.0 (4560ea788 2019-11-04)\n\n[pfemidi@pfemidi hello_cargo]$\n</code></pre>\n\n<p>I have installed as mingw32 as mingw64, this little test C++ code has been compiled as by mingw32 as mingw64 just fine and with no errors:</p>\n\n<pre><code>#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    std::cout &lt;&lt; \"Hello, world!\" &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>\n\n<p>I have added windows specific mingw linker and ar to my .cargo/config:</p>\n\n<pre><code>[target.i686-pc-windows-gnu]\nlinker = \"i686-w64-mingw32-gcc\"\nar = \"i686-w64-mingw32-ar\"\n\n[target.x86_64-pc-windows-gnu]\nlinker = \"x86_64-w64-mingw32-gcc\"\nar = \"x86_64-w64-mingw32-ar\"\n</code></pre>\n\n<p>But when I run either</p>\n\n<pre><code>cargo build --release --target i686-pc-windows-gnu --verbose\n</code></pre>\n\n<p>or</p>\n\n<pre><code>cargo build --release --target x86_64-pc-windows-gnu --verbose\n</code></pre>\n\n<p>both complain \"cannot find -lpthread\":</p>\n\n<pre><code>[pfemidi@pfemidi hello_cargo]$ cargo build --release --target i686-pc-windows-gnu --verbose\n   Compiling hello_cargo v0.1.0 (/home/pfemidi/mywork/rust/hello_cargo)\n     Running `rustc --edition=2018 --crate-name hello_cargo src/main.rs --color always --crate-type bin --emit=dep-info,link -C opt-level=3 -C panic=abort -C metadata=3801b83c24480675 -C extra-filename=-3801b83c24480675 --out-dir /home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps --target i686-pc-windows-gnu -C ar=i686-w64-mingw32-ar -C linker=i686-w64-mingw32-gcc -L dependency=/home/r/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps -L dependency=/home/r/mywork/rust/hello_cargo/target/release/deps`\nerror: linking with `i686-w64-mingw32-gcc` failed: exit code: 1\n  |\n  = note: \"i686-w64-mingw32-gcc\" \"-Wl,--enable-long-section-names\" \"-fno-use-linker-plugin\" \"-Wl,--nxcompat\" \"-nostdlib\" \"-Wl,--large-address-aware\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/crt2.o\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/rsbegin.o\" \"-L\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.0.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.1.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.10.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.11.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.12.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.2.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.3.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.4.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.5.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.6.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.7.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.8.rcgu.o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.hello_cargo.ejabbyqy-cgu.9.rcgu.o\" \"-o\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.exe\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps/hello_cargo-3801b83c24480675.3miif37looiovbes.rcgu.o\" \"-Wl,--gc-sections\" \"-nodefaultlibs\" \"-L\" \"/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps\" \"-L\" \"/home/pfemidi/mywork/rust/hello_cargo/target/release/deps\" \"-L\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib\" \"-Wl,--start-group\" \"-Wl,-Bstatic\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libstd-78187cf09a9bef6f.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libpanic_abort-699459bd9d6c1638.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libhashbrown-397a481a32803af5.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/librustc_std_workspace_alloc-27eb482dce24475f.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libbacktrace-046a61f77fc212c5.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libbacktrace_sys-8c6fe5218eaa7203.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/librustc_demangle-4d4d47417516248c.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libunwind-ef8ccbbd42d1b53f.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libcfg_if-bbe68dc13352b6cc.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/liblibc-b6447d8e4c58855b.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/liballoc-3890c13f15229667.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/librustc_std_workspace_core-ceab434c37c7417c.rlib\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libcore-3b2fced4ccf446c5.rlib\" \"-Wl,--end-group\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/libcompiler_builtins-7e358676639674ac.rlib\" \"-Wl,-Bdynamic\" \"-ladvapi32\" \"-lws2_32\" \"-luserenv\" \"-Wl,-Bstatic\" \"-lgcc_eh\" \"-lpthread\" \"-Wl,-Bdynamic\" \"-lmingwex\" \"-lmingw32\" \"-lgcc\" \"-lmsvcrt\" \"-lmsvcrt\" \"-luser32\" \"-lkernel32\" \"/home/pfemidi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/i686-pc-windows-gnu/lib/rsend.o\"\n  = note: /usr/lib/gcc/i686-w64-mingw32/9.2.1/../../../../i686-w64-mingw32/bin/ld: cannot find -lpthread\n          collect2: error: ld returned 1 exit status\n\n\nerror: aborting due to previous error\n\nerror: could not compile `hello_cargo`.\n\nCaused by:\n  process didn't exit successfully: `rustc --edition=2018 --crate-name hello_cargo src/main.rs --color always --crate-type bin --emit=dep-info,link -C opt-level=3 -C panic=abort -C metadata=3801b83c24480675 -C extra-filename=-3801b83c24480675 --out-dir /home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps --target i686-pc-windows-gnu -C ar=i686-w64-mingw32-ar -C linker=i686-w64-mingw32-gcc -L dependency=/home/pfemidi/mywork/rust/hello_cargo/target/i686-pc-windows-gnu/release/deps -L dependency=/home/pfemidi/mywork/rust/hello_cargo/target/release/deps` (exit code: 1)\n[pfemidi@pfemidi hello_cargo]$\n</code></pre>\n\n<p>Why? What else should I do to satisfy everything?</p>\n"}, {"tags": ["multithreading", "rust", "spawn", "rwlock"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1576635126, "last_edit_date": 1576635126, "creation_date": 1576634627, "answer_id": 59384507, "question_id": 59384448, "link": "https://stackoverflow.com/questions/59384448/rwlock-in-a-threadspawn-doesnt-release-the-lock/59384507#59384507", "title": "RwLock in a thread::spawn doesn&#39;t release the lock", "body": "<blockquote>\n  <p>the write access attempt is still blocking the main thread after the spawn thread has been executed and has released the <code>RwLock</code></p>\n</blockquote>\n\n<p>This is incorrect. Adding basic debugging output to differentiate them shows that the only <code>println</code> that runs is the one in <code>main</code>.</p>\n\n<p>There's no guarantee which thread will execute first after the child thread is spawned. However, the main thread is <em>likely</em> to continue running since it's already running. If so it will lock the <code>RwLock</code> via <code>rw</code> and hold the lock <strong>until the end of the function</strong>. However, before the end of the function, the main thread will block waiting for the child thread to join. The child thread cannot finish because it must acquire the write lock first. You have created a classic deadlock.</p>\n\n<p>To solve it, explicitly unlock the lock using <code>drop</code> or add scopes to constrain the lock's lifetime:</p>\n\n<pre><code>fn main() {\n    let my = Arc::new(MySt {\n        num1: 32,\n        num2: 64,\n        rw: RwLock::new(vec![1, 2, 3]),\n    });\n    let my2 = my.clone();\n    let t = thread::spawn(move || {\n        let mut rw = my2.rw.write().unwrap();\n        rw[0] = 5;\n        println!(\"thread a {}, {}, {}, {}\", my2.num1, my2.num2, rw[0], rw[1]);\n    });\n    //thread::sleep(time::Duration::from_millis(1000));\n    let mut rw = my.rw.write().unwrap();\n    rw[1] = 6;\n    println!(\"thread b {}, {}, {}, {}\", my.num1, my.num2, rw[0], rw[1]);\n    drop(rw);\n    t.join().unwrap();\n}\n</code></pre>\n\n<p>Adding the <code>sleep</code> is likely to cause the child thread to execute first. It will then acquire the lock and exit, allowing the main thread to proceed.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47916718/155423\">How to &quot;unlock&quot; an RwLock?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 1676, "user_id": 1903430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ZBVUf.png?s=128&g=1", "display_name": "fx-kirin", "link": "https://stackoverflow.com/users/1903430/fx-kirin"}, "is_accepted": false, "score": 0, "last_activity_date": 1576634727, "creation_date": 1576634727, "answer_id": 59384516, "question_id": 59384448, "link": "https://stackoverflow.com/questions/59384448/rwlock-in-a-threadspawn-doesnt-release-the-lock/59384516#59384516", "title": "RwLock in a thread::spawn doesn&#39;t release the lock", "body": "<p>The reason why it did't work correctly is I didn't release lock when the lock in main thread was executed before the one in child thread. I fixed it like below.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::Arc;\nuse std::sync::RwLock;\nuse std::{thread, time};\n\nstruct MySt {\n    num1: i64,\n    num2: i64,\n    rw: RwLock&lt;Vec&lt;i64&gt;&gt;,\n}\n\nfn main() {\n    let my = Arc::new(MySt {\n        num1: 32,\n        num2: 64,\n        rw: RwLock::new(vec![1, 2, 3]),\n    });\n    let my2 = my.clone();\n    let t = thread::spawn(move || {\n        let mut rw = my2.rw.write().unwrap();\n        rw[0] = 5;\n        println!(\"child thread {}, {}, {}, {}\", my2.num1, my2.num2, rw[0], rw[1]);\n    });\n    {\n        let mut rw = my.rw.write().unwrap();\n        rw[1] = 6;\n        println!(\"main thread {}, {}, {}, {}\", my.num1, my.num2, rw[0], rw[1]);\n    }\n    t.join().unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 1676, "user_id": 1903430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ZBVUf.png?s=128&g=1", "display_name": "fx-kirin", "link": "https://stackoverflow.com/users/1903430/fx-kirin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1576635126, "creation_date": 1576633986, "last_edit_date": 1576634524, "question_id": 59384448, "link": "https://stackoverflow.com/questions/59384448/rwlock-in-a-threadspawn-doesnt-release-the-lock", "title": "RwLock in a thread::spawn doesn&#39;t release the lock", "body": "<p>I'm not sure why it hangs on <code>my.rw.write();</code>.</p>\n\n<p>If you uncomment the <code>sleep</code> call, it works fine. This means that the write access attempt is still blocking the main thread after the spawn thread has been executed and has released the <code>RwLock</code>. I think it must be fine in theory. Where am I wrong?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::Arc;\nuse std::sync::RwLock;\nuse std::{thread, time};\n\nstruct MySt {\n    num1: i64,\n    num2: i64,\n    rw: RwLock&lt;Vec&lt;i64&gt;&gt;,\n}\n\nfn main() {\n    let my = Arc::new(MySt {\n        num1: 32,\n        num2: 64,\n        rw: RwLock::new(vec![1, 2, 3]),\n    });\n    let my2 = my.clone();\n    let t = thread::spawn(move || {\n        let mut rw = my2.rw.write().unwrap();\n        rw[0] = 5;\n        println!(\"child thread {}, {}, {}, {}\", my2.num1, my2.num2, rw[0], rw[1]);\n    });\n    //thread::sleep(time::Duration::from_millis(1000));\n    let mut rw = my.rw.write().unwrap();\n    rw[1] = 6;\n    println!(\"main thread {}, {}, {}, {}\", my.num1, my.num2, rw[0], rw[1]);\n    t.join().unwrap();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576625182, "post_id": 59383479, "comment_id": 104958845, "body": "&quot;or some undefined behavior&quot; what do you expect from UB ? UB is UB, by definition you can&#39;t expect anything so what do you expect XD. This don&#39;t make sense."}], "answers": [{"comments": [{"owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "edited": false, "score": 0, "creation_date": 1576630998, "post_id": 59383710, "comment_id": 104960069, "body": "Thank you for your detailed explanation.  One other thing, should I <code>mem:forget</code> each CString in the vec individually, too?  Or are they properly moved as part of the vec even being raw pointers?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "edited": false, "score": 0, "creation_date": 1576632259, "post_id": 59383710, "comment_id": 104960288, "body": "@marathon I update the answer, no you used <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.into_raw\" rel=\"nofollow noreferrer\"><code>into_raw()</code></a> as you can see it <b>consume</b> <code>self</code> so you don&#39;t have to forget it (in fact you can&#39;t this will not compile), the method already do it for you."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576672778, "post_id": 59383710, "comment_id": 104974143, "body": "<code>into_boxed_slice()</code> is indeed important here because it releases any excess capacity owned by the <code>Vec</code>. If you use <code>as_ptr</code> + <code>mem::forget</code> you also need to call <code>shrink_to_fit</code> first. In this case it probably doesn&#39;t matter because the <code>Vec</code> is <i>probably</i> initially created with <code>len</code> = <code>cap</code> = 2, but I don&#39;t know that the API guarantees that."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576673305, "post_id": 59383710, "comment_id": 104974396, "body": "Also, combining <code>into_boxed_slice</code> with <code>Box::into_raw</code> obviates the need for <code>mem::forget</code>, which seems like a clear safety win to me over <code>shrink_to_fit</code> + <code>as_(mut_)_ptr</code> + <code>mem::forget</code> where if you forget either of the first or the last thing the behavior is undefined."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576675312, "post_id": 59383710, "comment_id": 104975410, "body": "@trentcl I wanted to advise <code>Box::into_raw</code> but this is not possible for <code>Box&lt;[T]&gt;</code>, &quot;If you use as_ptr + mem::forget you also need to call shrink_to_fit&quot; no you don&#39;t you can also carry capacity information and give it back to rust when needed as I said it&#39;s a choice."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576675934, "post_id": 59383710, "comment_id": 104975709, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e552537f7a2721b3f414a42c1edcbf45\" rel=\"nofollow noreferrer\">Not possible?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576676184, "post_id": 59383710, "comment_id": 104975854, "body": "@trentcl a cast feel wrong here, look like dark magic, I don&#39;t like it. I&#39;m not even sure it does what it&#39;s suppose to do."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576677978, "post_id": 59383710, "comment_id": 104976838, "body": "It&#39;s just a cast from <code>*mut [T]</code> to <code>*mut T</code>. It drops the length. It can&#39;t do anything else because casts only change one thing at a time (e.g. if you try <code>as *mut *mut u8</code> instead of <code>c_char</code> you will get an error). Anyway, YMMV, but with how many questions we see on here abusing <code>as_ptr</code>, I feel <code>into_boxed_slice</code> + <code>into_raw</code> is less error-prone because you cannot forget to <code>forget</code> it."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1576682773, "last_edit_date": 1576682773, "creation_date": 1576626442, "answer_id": 59383710, "question_id": 59383479, "link": "https://stackoverflow.com/questions/59383479/what-is-the-correct-way-to-drop-a-memforgotten-array-of-strings-sent-to-c-via/59383710#59383710", "title": "What is the correct way to drop a mem::forgotten array of strings sent to C via an out pointer and then passed back to Rust for deletion?", "body": "<p>First you may want take a look at <a href=\"https://stackoverflow.com/q/27384824/7076153\">Catching panic! when Rust called from C FFI, without spawning threads</a>. Because panic will invoke undefined behaviour in this case. So you better catch the panic or avoid have code that can panic.</p>\n\n<p>Secondly, <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_boxed_slice\" rel=\"nofollow noreferrer\"><code>into_boxed_slice()</code></a> is primary use when you don't need vector feature any more so \"A contiguous growable array type\". You could also use <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.as_mut_ptr\" rel=\"nofollow noreferrer\"><code>as_mut_ptr()</code></a> and forget the vector. That a choice either you want to carry the capacity information into C so you can make the vector grow or you don't want. (I think vector is missing a <code>into_raw()</code> method but I'm sure you can code <a href=\"https://github.com/maidsafe/ffi_utils/pull/28\" rel=\"nofollow noreferrer\">one</a> (just an example) to avoid critical code repetition). You could also use <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.into_raw\" rel=\"nofollow noreferrer\"><code>Box::into_raw()</code></a> followed with a cast to transform the slice to pointer:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::panic;\nuse std::ffi::CString;\n\npub unsafe extern \"C\" fn string_xfer(len: &amp;mut libc::size_t) -&gt; Option&lt;*mut *mut libc::c_char&gt; {\n    if let Ok(slice) = panic::catch_unwind(move || {\n        let s1 = CString::new(\"String 1\").unwrap();\n        let s2 = CString::new(\"String 2\").unwrap();\n\n        let strs = vec![s1.into_raw(), s2.into_raw()];\n\n        Box::into_raw(strs.into_boxed_slice())\n    }) {\n        *len = (*slice).len();\n        Some(slice as _)\n    } else {\n        None\n    }\n}\n</code></pre>\n\n<p>Third, your <code>drop_rust_memory()</code> only drop a pointer, I think you are doing a total UB here. Rust memory allocation need the real size of the allocation (capacity). And you didn't give the size of your slice, you tell to Rust \"free this pointer that contain a pointer to nothing (void so 0)\" but that not the good capacity. You need to use <a href=\"https://doc.rust-lang.org/std/slice/fn.from_raw_parts_mut.html\" rel=\"nofollow noreferrer\"><code>from_raw_parts_mut()</code></a>, your C code must give the size of the slice to the Rust code. Also, you need to properly free your <code>CString</code> you need to call <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.from_raw\" rel=\"nofollow noreferrer\"><code>from_raw()</code></a> to do it (More information <a href=\"https://github.com/rust-lang/rust/issues/36284\" rel=\"nofollow noreferrer\">here</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ffi::CString;\n\npub unsafe extern \"C\" fn drop_rust_memory(mem: *mut *mut libc::c_char, len: libc::size_t) {\n    let slice = Box::from_raw(std::slice::from_raw_parts_mut(mem, len));\n    for &amp;x in slice.iter() {\n        CString::from_raw(x);\n    } // CString will free resource don't use mem/vec element after\n}\n</code></pre>\n\n<p>To conclude, you should read more about undefined behaviour, it's not about \"expect a crash\" or \"something\" should happen. When your program trigger a UB, everything can happen, you go into a random zone, read more about UB on <a href=\"http://blog.llvm.org/2011/05/what-every-c-programmer-should-know.html\" rel=\"nofollow noreferrer\">this amazing LLVM blog post</a></p>\n\n<hr>\n\n<p>Note about C style prefer return the pointer and not the size because <code>strings_out: *mut *mut *mut ::libc::c_char</code> is a <a href=\"https://wiki.c2.com/?ThreeStarProgrammer\" rel=\"nofollow noreferrer\">ugly thing</a> so do <code>pub extern fn string_xfer(size: &amp;mut libc::size_t) -&gt; *mut *mut libc::c_char</code>. Also, <a href=\"https://stackoverflow.com/questions/31481102/how-to-check-if-function-pointer-passed-from-c-is-non-null\">How to check if function pointer passed from C is non-NULL</a></p>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1576682773, "creation_date": 1576624884, "last_edit_date": 1576630467, "question_id": 59383479, "link": "https://stackoverflow.com/questions/59383479/what-is-the-correct-way-to-drop-a-memforgotten-array-of-strings-sent-to-c-via", "title": "What is the correct way to drop a mem::forgotten array of strings sent to C via an out pointer and then passed back to Rust for deletion?", "body": "<p>I would like to return some strings to C via a Rust FFI call.  I also would like to ensure they're cleaned up properly.</p>\n\n<p>I'm creating the strings on the Rust side and turning them into an address of an array of strings.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use core::mem;\nuse std::ffi::CString;\n\n#[no_mangle]\npub extern \"C\" fn drop_rust_memory(mem: *mut ::libc::c_void) {\n    unsafe {\n        let boxed = Box::from_raw(mem);\n        mem::drop(boxed);\n    }\n}\n\n#[no_mangle]\npub extern \"C\" fn string_xfer(strings_out: *mut *mut *mut ::libc::c_char) -&gt; usize {\n    unsafe {\n        let s1 = CString::new(\"String 1\").unwrap();\n        let s2 = CString::new(\"String 2\").unwrap();\n        let s1 = s1.into_raw();\n        let s2 = s2.into_raw();\n\n        let strs = vec![s1, s2];\n        let len = strs.len();\n\n        let mut boxed_slice = strs.into_boxed_slice();\n        *strings_out = boxed_slice.as_mut_ptr() as *mut *mut ::libc::c_char;\n        mem::forget(boxed_slice);\n        len\n    }\n}\n</code></pre>\n\n<p>On the C side, I call the Rust FFI function, print the strings and then attempt to delete them via another Rust FFI call.</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>extern size_t string_xfer(char ***out);\nextern void drop_rust_memory(void* mem);\n\nint main() {\n    char **receiver;\n    int len = string_xfer(&amp;receiver);\n\n    for (int i = 0; i &lt; len; i++) {\n        printf(\"&lt;%s&gt;\\n\", receiver[i]);\n    }\n\n    drop_rust_memory(receiver);\n\n    printf(\"# rust memory dropped\\n\");\n    for (int i = 0; i &lt; len; i++) {\n        printf(\"&lt;%s&gt;\\n\", receiver[i]);\n    }\n    return 0;\n}\n</code></pre>\n\n<p>This appears to work.  For the second printing after the drop, I would expect to get a crash or some undefined behavior, but I get this</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;String 1&gt;\n&lt;String 2&gt;\n# rust memory dropped\n&lt;(null)&gt;\n&lt;String 2&gt;\n</code></pre>\n\n<p>which makes me less sure about the entire thing.</p>\n"}, {"tags": ["rust", "elf"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576627292, "post_id": 59383399, "comment_id": 104959329, "body": "You confuse C with a language I don&#39;t know. Don&#39;t mix implemented extra feature and C17 language please when you use compiler feature, precise it."}, {"owner": {"reputation": 23, "user_id": 12368385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/870575a06733a94681ea4e4118b505ce?s=128&d=identicon&r=PG&f=1", "display_name": "gopa", "link": "https://stackoverflow.com/users/12368385/gopa"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576628210, "post_id": 59383399, "comment_id": 104959529, "body": "When I was talking about C, I wasnt talking about any &quot;compiler feature&quot; of C - its simply a mechanism to put objects in a certain elf section, and some tricks to get the start and end address of the section."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576630292, "post_id": 59383399, "comment_id": 104959921, "body": "Your question might be answered by the answers of <a href=\"https://stackoverflow.com/a/57419729/155423\">How can I statically register structures at compile time?</a> / <a href=\"https://stackoverflow.com/a/57420135/155423\">How to create a vector of all decorated functions from a specific module?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59383399/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 23, "user_id": 12368385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/870575a06733a94681ea4e4118b505ce?s=128&d=identicon&r=PG&f=1", "display_name": "gopa", "link": "https://stackoverflow.com/users/12368385/gopa"}, "edited": false, "score": 0, "creation_date": 1576674988, "post_id": 59383399, "comment_id": 104975258, "body": "Thanks for the response, yes the inventory crate does look like what I wanted, although there is currently a limitation that inventory::submit!() cannot be called from inside a function (which is what I want) - the documentation clearly states it wont compile and it doesnt because the impl::submit() is a procedural macro and rust complains &quot;procedural macros cannot be expanded to statement&quot; .. But at any rate, I think looking through the source for the inventory crate, I understand what is the mechanism, so thats good enough. Thanks again for the response, this question can be marked answered"}], "owner": {"reputation": 23, "user_id": 12368385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/870575a06733a94681ea4e4118b505ce?s=128&d=identicon&r=PG&f=1", "display_name": "gopa", "link": "https://stackoverflow.com/users/12368385/gopa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 132, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1576630247, "creation_date": 1576624248, "last_edit_date": 1576630247, "question_id": 59383399, "link": "https://stackoverflow.com/questions/59383399/how-to-get-a-list-of-all-objects-in-an-elf-section", "title": "How to get a list of all objects in an ELF section?", "body": "<p>I have a set of static objects in my library that I need access to from my <code>library_main()</code> in the example below. In C, I can put it in an ELF section, get the start and end address of the section and use pointer math to walk through the objects. Is there an idiomatic way of doing that in Rust? </p>\n\n<p>Is there either a C-like ELF approach or any other recommended approach to this where I can just get a list / array of static objects in my lib?</p>\n\n<pre><code>fn foo() {\n    #[link_section = \".early_init\"]\n    static FOO: usize = 10;\n}\n\nfn bar() {\n    #[link_section = \".early_init\"]\n    static BAR: usize = 10;\n}\n\nfn library_main() {\n    // I need to access variables FOO and BAR here and do\n    // some initializations with them before I do anything else\n}\n</code></pre>\n"}, {"tags": ["string", "types", "rust", "reference", "hashmap"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576682860, "post_id": 59383228, "comment_id": 104979671, "body": "<code>Box&lt;String&gt;</code> is unusual; you might want to use <code>Box&lt;str&gt;</code> instead (<code>let owned_boxed_str = String::from(&quot;a&quot;).into_boxed_str();</code>) You lose the &quot;growableness&quot; but you also lose one pointer&#39;s worth of indirection. It also makes <code>&amp;*</code> work with no other changes."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576683935, "post_id": 59383228, "comment_id": 104980297, "body": "@trentcl I think I understand what you mean. The reason is that the <code>String</code> is of unkown size and has been collected from a <code>TcpStream</code> in another thread. It has been <code>Box</code>ed not be <code>memcpy</code>ed around too often down <code>mpsc::channel</code>s, so I receive it as-is. Does <code>Box&lt;str&gt;</code> mean that the size of <code>str</code> must be statically known? Or is it just &quot;a boxed slice of string&quot;?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576685622, "post_id": 59383228, "comment_id": 104981295, "body": "<code>str</code> is always dynamically sized, it&#39;s like <code>[u8]</code> (slices are also dynamically sized). <code>Box&lt;str&gt;</code> is basically the same as <code>String</code> except it only stores a pointer and length whereas <code>String</code> stores a capacity. <code>Box&lt;String&gt;</code> stores a pointer to a <code>String</code>, so if you need to access the length of the string you have to follow one pointer and if you need to access the bytes of the string you have to follow two pointers. But as far as <code>memcpy</code>ing goes, there&#39;s no real difference between <code>Box&lt;str&gt;</code>, <code>Box&lt;String&gt;</code> and plain <code>String</code>, so maybe you shoulg not be using the <code>Box</code> at all."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1576685961, "post_id": 59383228, "comment_id": 104981497, "body": "By &quot;no real difference&quot; I mean: if you move a <code>String</code> you just copy the pointer, not the bytes. If you clone a <code>String</code> you copy the bytes and create a new pointer. This is essentially the same for <code>Box&lt;String&gt;</code>, except <code>Box&lt;String&gt;</code> does more work when you clone it. <code>Box&lt;str&gt;</code> is a bit of an optimization on top of <code>String</code> when you don&#39;t intend to grow the allocation."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576762072, "post_id": 59383228, "comment_id": 105008421, "body": "@trentctl Well, I&#39;ve learned something! Non-growable strings not <code>memcpy</code>ied around when shared among threads are actually what I&#39;m after. I&#39;ll try to trade my <code>Box&lt;String&gt;</code>s for <code>Box&lt;str&gt;</code> then. Thank you :)"}], "answers": [{"comments": [{"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 3, "creation_date": 1576626354, "post_id": 59383471, "comment_id": 104959111, "body": "Another possible solution: <code>map.get(&amp;owned_boxed_string.as_str());</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1576626634, "post_id": 59383471, "comment_id": 104959188, "body": "@harmic: Of course! I always forget <code>as_str()</code> and <code>as_slice()</code>. Often they are the easiest ones."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1576630160, "post_id": 59383471, "comment_id": 104959896, "body": "<code>map.get(&amp;**owned_boxed_string);</code> would be the usual way I&#39;ve seen it."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576658677, "post_id": 59383471, "comment_id": 104967104, "body": "@Shepmaster Well, cheers to y&#39;all. I&#39;ve learned a lot today :) Any pros/cons to <code>.as_str()</code> <i>vs.</i> <code>as &amp;str</code> <i>vs.</i> <code>&amp;**</code>?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 1, "creation_date": 1576671675, "post_id": 59383471, "comment_id": 104973588, "body": "@iago-lito: The pro of <code>as_str()</code> is that it always returns a <code>&amp;str</code> no matter how many indirections are needed, it would just work with a <code>String</code>, a <code>&amp;String</code>, a <code>&amp;Box&lt;String&gt;</code>, a <code>std::cell::Ref&lt;Box&lt;String&gt;&gt;</code>, and so on... With the other you have to count how many <code>*</code> to use."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1576675486, "post_id": 59383471, "comment_id": 104975486, "body": "Okay, I get it :) What about <code>as &amp;str</code>? Is it just different syntax for the same behaviour as <code>.as_str()</code>?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 1, "creation_date": 1576676330, "post_id": 59383471, "comment_id": 104975937, "body": "@iago-lito: No, <code>as T</code> is a cast. If the expression is convertible to <code>T</code> then it will be force that conversion. For example a <code>&amp;String</code> is convertible to <code>&amp;str</code> (because of the <code>Deref</code> magic). However <code>as_str()</code> is a true function, that is <a href=\"https://doc.rust-lang.org/stable/src/alloc/string.rs.html#767\" rel=\"nofollow noreferrer\">implemented</a> using the same conversion, so the result is identical."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 3, "last_activity_date": 1576676487, "last_edit_date": 1576676487, "creation_date": 1576624827, "answer_id": 59383471, "question_id": 59383228, "link": "https://stackoverflow.com/questions/59383228/how-to-use-a-boxstring-as-a-lookup-key-for-a-hashmap-with-str-keys/59383471#59383471", "title": "How to use a Box&lt;String&gt; as a lookup key for a hashmap with &amp;str keys?", "body": "<p>Let's look at the definition of <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow noreferrer\"><code>HashMap::get()</code></a>:</p>\n\n<pre><code>pub fn get&lt;Q: ?Sized&gt;(&amp;self, k: &amp;Q) -&gt; Option&lt;&amp;V&gt; where\n    K: Borrow&lt;Q&gt;,\n    Q: Hash + Eq, \n</code></pre>\n\n<p>In your code, <code>K</code> is <code>&amp;'static str</code> and <code>Q</code> is deduced from each of the calls to <code>get</code>. In plain English, <code>get()</code> takes a reference to a type <code>Q</code> such that <code>&amp;'static str</code> implements <code>Borrow&lt;Q&gt;</code>.</p>\n\n<p>The rationale is that usually you will store keys of type <code>String</code> or the like, and you will search using values of type <code>&amp;str</code>. And naturally <code>String</code> implements <code>Borrow&lt;str&gt;</code> so you can do that.</p>\n\n<p>In your case, your key is not <code>String</code> but <code>&amp;'static str</code>... Take a look at the documentation for <a href=\"https://doc.rust-lang.org/std/borrow/trait.Borrow.html\" rel=\"nofollow noreferrer\"><code>Borrow</code></a> and look for what kind of <code>Borrow&lt;Q&gt;</code> is implemented by <code>&amp;'static str</code>. I can only see these two blanket implementations:</p>\n\n<pre><code>impl&lt;'_, T: ?Sized&gt; Borrow&lt;T&gt; for &amp;'_ T\nimpl&lt;T: ?Sized&gt; Borrow&lt;T&gt; for T\n</code></pre>\n\n<p>The first one states that if your map keys are references to some type <code>&amp;K</code> you can call <code>get(k: &amp;K)</code>. The second one says that if your key is <code>K</code> you can call <code>get(k: &amp;K)</code>.</p>\n\n<p>So for your particular case of <code>&amp;'static str</code> they are realized as:</p>\n\n<pre><code>impl Borrow&lt;str&gt; for &amp;'static str\nimpl Borrow&lt;&amp;'static str&gt; for &amp;'static str\n</code></pre>\n\n<p>From that you can deduce that your function is either <code>get(k: &amp;str)</code> or <code>get(k: &amp;&amp;str)</code>. Here the easiest choice is the first one.</p>\n\n<p>Now, you may think that your last line (<code>map.get(&amp;*owned_boxed_string);</code>) should work, because that value is of type <code>&amp;str</code>, but it actually is not, it is of type <code>&amp;String</code>. If <code>HashMap::get()</code> received a <code>&amp;str</code> it would compile fine, but taking a <code>Borrow&lt;Q&gt;</code>, the compiler gets all confused and fails.</p>\n\n<p><strong>TL; DR;</strong>: Add a type cast or a temporary typed variable:</p>\n\n<pre><code>map.get(&amp;*owned_boxed_string as &amp;str);  //ok\nmap.get(&amp;owned_boxed_string as &amp;str);   //also ok\n\nlet s: &amp;str = &amp;*owned_boxed_string;\nmap.get(s);\nlet s: &amp;str = &amp;owned_boxed_string;\nmap.get(s);\n</code></pre>\n\n<p>Although an easier solution (thanks to @harmic for the comment below) is to use <code>String::as_str()</code> that will take care of as many derefs as required and just return the necessary <code>&amp;str</code>:</p>\n\n<pre><code>map.get(owned_boxed_string.as_str());\n</code></pre>\n"}], "owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 0, "accepted_answer_id": 59383471, "answer_count": 1, "score": 1, "last_activity_date": 1576676487, "creation_date": 1576623026, "last_edit_date": 1576629983, "question_id": 59383228, "link": "https://stackoverflow.com/questions/59383228/how-to-use-a-boxstring-as-a-lookup-key-for-a-hashmap-with-str-keys", "title": "How to use a Box&lt;String&gt; as a lookup key for a hashmap with &amp;str keys?", "body": "<p>My hashmap keys are expected to be of type <code>&amp;str</code>, in particular <code>&amp;'static str</code>, and I've received an owned <code>Box&lt;String&gt;</code>.<br>\nHow do I search my string against my hashmap?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map: HashMap&lt;&amp;str, u32&gt; = HashMap::new();\n    let static_string = \"a\";\n    map.insert(static_string, 5);\n\n    let owned_boxed_string = Box::new(String::from(\"a\"));\n\n    map.get(owned_boxed_string); // mismatched type (ok)\n    map.get(*owned_boxed_string); // mismatched type (ok)\n    map.get(&amp;*owned_boxed_string); // trait bound not satisfied (?)\n} \n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576608834, "post_id": 59380414, "comment_id": 104952850, "body": "You never use <code>r1</code> after <code>r2</code>, so the borrow of <code>s1</code> by <code>r1</code> is implicitly released."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576608947, "post_id": 59380414, "comment_id": 104952897, "body": "See also <a href=\"https://stackoverflow.com/q/57189167/155423\">Rust compiler not always throwing borrowing errors</a>; <a href=\"https://stackoverflow.com/q/57743044/155423\">What changed in Rust that allows this borrow after a mutable borrow?</a>; <a href=\"https://stackoverflow.com/q/53954053/155423\">Why did compiler not error on this mutable borrow when there is an immutable borrowed string slice reference still in scope?</a>"}], "owner": {"reputation": 2084, "user_id": 7134737, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/2d851e4a46559b3efa17a5cae5fe8e60?s=128&d=identicon&r=PG&f=1", "display_name": "ng.newbie", "link": "https://stackoverflow.com/users/7134737/ng-newbie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "closed_date": 1576608804, "answer_count": 0, "score": 0, "last_activity_date": 1576609075, "creation_date": 1576608768, "last_edit_date": 1576609075, "question_id": 59380414, "link": "https://stackoverflow.com/questions/59380414/why-doesnt-rust-stop-me-from-declaring-multiple-mutable-references", "closed_reason": "Duplicate", "title": "Why doesn&#39;t Rust stop me from declaring multiple mutable references?", "body": "<p>I am learning Rust from <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a> and I am having a WTF moment when code that is not supposed to compile is compiling.</p>\n\n<p><a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\" rel=\"nofollow noreferrer\">Rust has a rule that you can have only 1 mutable reference to a given data in a particular scope.</a> Which means this code isn't suppose to compile:</p>\n\n<pre><code>fn main() {\n    let mut s1 = String::from(\"Hello\");\n\n    let r1 = &amp;mut s1;\n    let r2 = &amp;mut s1;\n\n    //println!(\"{} {}\", r1, r2);\n}\n</code></pre>\n\n<p>This compiles with no errors!</p>\n\n<p>The expected error only happens when I uncomment the <code>println!</code>. Why does it let me declare multiple references? Doesn't it make more sense to stop me when I declare multiple mutable references rather than when I use them?</p>\n\n<p>What is going on here? I am using Rust 1.39.0.</p>\n"}, {"tags": ["testing", "rust", "iterator"], "comments": [{"owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "edited": false, "score": 0, "creation_date": 1576600090, "post_id": 59377999, "comment_id": 104948861, "body": "Why my search didn&#39;t turn up this duplicate is a mystery to me."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576600619, "post_id": 59377999, "comment_id": 104949134, "body": "What kind of searching did you do? <code>site:stackoverflow.com rust compare iterator</code> found the duplicate as my top Google result. Also, remember that votes are a reflection on the <i>post</i>, not the user. The downvote button states: <i>This question does not show any research effort; it is unclear or not useful</i>; I assume the downvoter thought that this question was not useful in light of the duplicate."}, {"owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576600799, "post_id": 59377999, "comment_id": 104949243, "body": "@Shepmaster Unfortunately, if you type <code>how do i compare iterators [rust]</code> into the search bar your question doesn&#39;t even show up on the first page. So at least this question adds value because now it can be found."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576601088, "post_id": 59377999, "comment_id": 104949375, "body": "The Stack Overflow search engine is not great, but searching is a skill that can be improved as well. <a href=\"https://stackoverflow.com/search?q=compare+iterators+%5Brust%5D\"><code>compare iterators [rust]</code></a> finds it quickly. It&#39;s useful to remove fluff words when dealing with any search engine that isn&#39;t as smart as Google."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576601247, "post_id": 59377999, "comment_id": 104949452, "body": "<i>because now it can be found</i> \u2014 perhaps. <a href=\"https://stackoverflow.com/search?q=how+do+you+compare+iterators++%5Brust%5D\"><code>how do you compare iterators  [rust]</code></a> doesn&#39;t find either post on the first page. However, you are right about the value of duplicates \u2014 they serve as signposts to existing answers, and that&#39;s a reason we wouldn&#39;t just vote to delete such a question."}, {"owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576601776, "post_id": 59377999, "comment_id": 104949709, "body": "@shepmaster For the same reason they should not be downvoted. I am currently incentivized by the stackoverflow karma system to delete this question myself."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576602371, "post_id": 59377999, "comment_id": 104949983, "body": "That&#39;s always an option, certainly. You&#39;ve still got a few thousand points, so ideally a few negative ones won&#39;t hurt in the long run. Incentives are a tricky business; I would hope you&#39;d be encouraged to search more deeply next time, but that&#39;s my opinion (and I&#39;m a believer in <a href=\"https://meta.stackoverflow.com/a/261593/155423\">How much research effort is expected of Stack Overflow users?</a>)."}, {"owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576603410, "post_id": 59377999, "comment_id": 104950457, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/204429/discussion-between-sarien-and-shepmaster\">continue this discussion in chat</a>."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1576599741, "post_id": 59378060, "comment_id": 104948716, "body": "<code>assert!(a.eq(b));</code> is enough"}], "tags": [], "owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "is_accepted": false, "score": 1, "last_activity_date": 1576599820, "last_edit_date": 1576599820, "creation_date": 1576598995, "answer_id": 59378060, "question_id": 59377999, "link": "https://stackoverflow.com/questions/59377999/how-do-i-compare-iterators/59378060#59378060", "title": "How do I compare iterators?", "body": "<p>There is <a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.eq\" rel=\"nofollow noreferrer\"><code>Iterator::eq</code></a>. I think this should be the winner: </p>\n\n<pre><code>assert!(a.eq(b));\n</code></pre>\n\n<p>And it turns out there is <code>itertools::assert_equal</code>:</p>\n\n<pre><code>let a = 0..6;\nlet b = 0..6;\n\nitertools::assert_equal(a, b);\n</code></pre>\n\n<p>And it's not exactly pretty but here is a solution using <a href=\"https://docs.rs/itertools/0.8.2/itertools/trait.Itertools.html#method.zip_longest\" rel=\"nofollow noreferrer\"><code>zip_longest</code></a>:</p>\n\n<pre><code>assert!(a.zip_longest(b).all(|thingy| thingy.as_ref().left() == thingy.as_ref().right()));\n</code></pre>\n"}], "owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 1, "closed_date": 1576599848, "answer_count": 1, "score": 0, "last_activity_date": 1576599820, "creation_date": 1576598741, "last_edit_date": 1576599083, "question_id": 59377999, "link": "https://stackoverflow.com/questions/59377999/how-do-i-compare-iterators", "closed_reason": "Duplicate", "title": "How do I compare iterators?", "body": "<p>I want to compare to iterators in a test case. Unfortunately, <code>assert_eq!</code> does not like to be passed iterators.\nOne workaround looks like this:</p>\n\n<pre><code>let mut a = 0..5;\nlet mut b = 0..6;\n\nassert!(a.by_ref().zip(b.by_ref()).all(|(a, b)| a == b));\nassert_eq!(a.next(), None);\nassert_eq!(b.next(), None);\n</code></pre>\n\n<p>But it requires 3 (or at least) 2 lines for the test and the iterator needs to be made mutable. Is there anything better?</p>\n"}, {"tags": ["rust", "pyo3"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1576596708, "post_id": 59377303, "comment_id": 104947054, "body": "The <code>&#47;&#47;</code> operator desugars to <code>47.46.__floordiv__ (3)</code> so at least you can be sure that this won&#39;t affect performance. It still requires modifying your Python code though\u2026"}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 2, "last_activity_date": 1576597009, "last_edit_date": 1592644375, "creation_date": 1576597009, "answer_id": 59377532, "question_id": 59377303, "link": "https://stackoverflow.com/questions/59377303/how-to-execute-floor-division-in-python-code-embedded-in-rust-code-with-pyo3/59377532#59377532", "title": "How to execute floor division in Python code embedded in Rust code with PyO3?", "body": "<p>From <a href=\"https://docs.rs/inline-python/0.4.0/inline_python/#syntax-issues\" rel=\"nofollow noreferrer\">the documentation</a>:</p>\n<blockquote>\n<p>The // and //= operators are unusable, as they start a comment.</p>\n<p>Workaround: you can write ## instead, which is automatically converted to //.</p>\n</blockquote>\n<p>So try</p>\n<pre><code>#![feature(proc_macro_hygiene)]\nuse inline_python::python;\n\nfn main() {\n    python! {\n        print(&quot;Hi from PyO3&quot;)\n        foo = 37.46 ## 3\n        print(foo)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1817, "user_id": 7556604, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hgWR8.jpg?s=128&g=1", "display_name": "Clonk", "link": "https://stackoverflow.com/users/7556604/clonk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 59377532, "answer_count": 1, "score": 0, "last_activity_date": 1576597009, "creation_date": 1576596248, "last_edit_date": 1576596680, "question_id": 59377303, "link": "https://stackoverflow.com/questions/59377303/how-to-execute-floor-division-in-python-code-embedded-in-rust-code-with-pyo3", "title": "How to execute floor division in Python code embedded in Rust code with PyO3?", "body": "<p>I'm trying to inline Python code in Rust, but it fails when the Python code has the operator for floor division <code>//</code> which is ignored as if it were a Rust comment.</p>\n\n<p>For instance: </p>\n\n<pre><code>#![feature(proc_macro_hygiene)]\nuse inline_python::python;\n\nfn main() {\n    python! {\n        print(\"Hi from PyO3\")\n        foo = 37.46 // 3\n        print(foo)\n    }\n}\n</code></pre>\n\n<p>This will print <code>37.46</code> even though it should print <code>12.0</code> (the result of floor division of 37.46 by 3).</p>\n\n<p>A possible solution is to replace this division by <code>foo = math.floor(37.43 / 3)</code>, but I would prefer not to have to modify the Python code if possible. I'm also afraid it might impact performance.</p>\n\n<p>Is there a way to use the floor division operator (or equivalent) in Python code embedded in Rust code with PyO3?</p>\n"}, {"tags": ["arrays", "rust", "type-conversion"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576594259, "post_id": 59376378, "comment_id": 104945740, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/59376378/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576599580, "post_id": 59377929, "comment_id": 104948630, "body": "That&#39;s because <code>sha2</code> 0.8 uses <code>digest</code> 0.8, which uses <code>generic-array</code> 0.12.0 which does not implement <code>Into</code> \u2014 that&#39;s only 0.13. Likely another case of people not specifying the most compatible versions of crates in their Cargo.toml but instead just always picking the newest (even when they could support multiple)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576599720, "post_id": 59377929, "comment_id": 104948711, "body": "Also, I added versions to your imports assuming you were using the playground. However, note that the playground doesn&#39;t have the newest versions of all these crates. If you weren&#39;t using the playground, please fix my corrections so that they are accurate."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 0, "last_activity_date": 1576599417, "last_edit_date": 1576599417, "creation_date": 1576598540, "answer_id": 59377929, "question_id": 59376378, "link": "https://stackoverflow.com/questions/59376378/how-can-i-turn-a-genericarrayt-into-an-array-of-the-same-length/59377929#59377929", "title": "How can I turn a GenericArray&lt;T, ?&gt; into an array of the same length?", "body": "<p>As per <a href=\"https://docs.rs/generic-array/0.13.2/generic_array/struct.GenericArray.html\" rel=\"nofollow noreferrer\">the documentation for <code>GenericArray</code></a>, I assumed that you could use <code>hashvalue.into()</code>, but I did not manage to get it to compile.</p>\n\n<p>Non-idiomatic alternative:</p>\n\n<pre><code>use digest::Digest; // 0.7.6\nuse generic_array; // 0.13.2\nuse sha2; // 0.7.1\n\nfn main() {\n    let hashvalue = sha2::Sha256::digest(&amp;[3, 2, 6, 4, 3]);\n    let x: [u8; 32] = [\n        hashvalue[0],\n        hashvalue[1],\n        hashvalue[2],\n        hashvalue[3],\n        hashvalue[4],\n        hashvalue[5],\n        hashvalue[6],\n        hashvalue[7],\n        hashvalue[8],\n        hashvalue[9],\n        hashvalue[10],\n        hashvalue[11],\n        hashvalue[12],\n        hashvalue[13],\n        hashvalue[14],\n        hashvalue[15],\n        hashvalue[16],\n        hashvalue[17],\n        hashvalue[18],\n        hashvalue[19],\n        hashvalue[20],\n        hashvalue[21],\n        hashvalue[22],\n        hashvalue[23],\n        hashvalue[24],\n        hashvalue[25],\n        hashvalue[26],\n        hashvalue[27],\n        hashvalue[28],\n        hashvalue[29],\n        hashvalue[30],\n        hashvalue[31],\n    ];\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1617030412, "last_edit_date": 1617030412, "creation_date": 1576599123, "answer_id": 59378107, "question_id": 59376378, "link": "https://stackoverflow.com/questions/59376378/how-can-i-turn-a-genericarrayt-into-an-array-of-the-same-length/59378107#59378107", "title": "How can I turn a GenericArray&lt;T, ?&gt; into an array of the same length?", "body": "<p>If you don't know the length of the array, convert the <code>GenericArray</code> into a slice and then convert the slice into an array (only for arrays of length 32 or less <a href=\"https://github.com/rust-lang/rust/blob/1.47.0/RELEASES.md#libraries\" rel=\"nofollow noreferrer\">before Rust 1.47</a>):</p>\n<pre><code>use sha2::Digest; // 0.9.3\nuse std::convert::TryInto;\n\nfn main() {\n    let hashvalue = sha2::Sha256::digest(&amp;[3, 2, 6, 4, 3]);\n    let x: [u8; 32] = hashvalue.as_slice().try_into().expect(&quot;Wrong length&quot;);\n    println!(&quot;{:?}&quot;, x);\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25428920/155423\">How to get a slice as an array in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/48129565/155423\">How to convert a slice into an array reference?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28136739/155423\">Is it possible to control the size of an array using the type parameter of a generic?</a></li>\n</ul>\n"}], "owner": {"reputation": 2284, "user_id": 1964489, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/dced6d8951b4771cde68c08e372bbede?s=128&d=identicon&r=PG", "display_name": "Ziva", "link": "https://stackoverflow.com/users/1964489/ziva"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 825, "favorite_count": 0, "answer_count": 2, "score": 5, "last_activity_date": 1617030412, "creation_date": 1576592915, "last_edit_date": 1576599801, "question_id": 59376378, "link": "https://stackoverflow.com/questions/59376378/how-can-i-turn-a-genericarrayt-into-an-array-of-the-same-length", "title": "How can I turn a GenericArray&lt;T, ?&gt; into an array of the same length?", "body": "<p>I'm computing the SHA256 of a given data:</p>\n\n<pre><code>let hashvalue = sha2::Sha256::digest(&amp;data);\n</code></pre>\n\n<p>After computing it, I want to put this value into a field of my struct:</p>\n\n<pre><code>let x = Hash { value: hashvalue };\n</code></pre>\n\n<p>However, the <code>Hash</code> struct expects the type of value <code>[u8; 32]</code>, while my <code>hashvalue</code> variable is of type <code>GenericArray&lt;u8, ?&gt;</code>. How can I convert <code>hashvalue</code> into the correct type? I tried to use <code>as [u8; 32]</code> and <code>arr!</code> but it didn't work.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576594075, "post_id": 59376227, "comment_id": 104945644, "body": "From the duplicates: <code>fn iterate&lt;I&gt;(&amp;self) -&gt; std::collections::hash_set::Iter&lt;&#39;_, T&gt;</code> or <code>fn iterate&lt;I&gt;(&amp;self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;T&gt; + &#39;_&gt;</code>."}], "answers": [{"comments": [{"owner": {"reputation": 25639, "user_id": 54426, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/dYp2m.png?s=128&g=1", "display_name": "Rich Apodaca", "link": "https://stackoverflow.com/users/54426/rich-apodaca"}, "edited": false, "score": 0, "creation_date": 1576593509, "post_id": 59376307, "comment_id": 104945285, "body": "Thanks, but in trying to simplify the question, I left out an important requirement: the iterate method needs to be declarable on a trait. I updated my question."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 0, "last_activity_date": 1576594104, "last_edit_date": 1576594104, "creation_date": 1576592654, "answer_id": 59376307, "question_id": 59376227, "link": "https://stackoverflow.com/questions/59376227/how-do-i-return-an-iterator-over-the-keys-of-a-hashset-from-a-trait-method/59376307#59376307", "title": "How do I return an iterator over the keys of a HashSet from a trait method?", "body": "<p>You want <code>impl Iterator</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, T: 'a + Eq + Hash&gt; Foo&lt;T&gt; {\n    // ...\n\n    pub fn iterate(&amp;'a self) -&gt; impl Iterator&lt;Item = &amp;'a T&gt; {\n        self.items.iter()\n    }\n}\n</code></pre>\n\n<p>The Rust book has <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html#returning-types-that-implement-traits\" rel=\"nofollow noreferrer\">this section</a> covering it. It is defined and refined in <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1522-conservative-impl-trait.md\" rel=\"nofollow noreferrer\">RFC 1522</a>, <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md\" rel=\"nofollow noreferrer\">RFC 1951</a>, and <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2071-impl-trait-existential-types.md\" rel=\"nofollow noreferrer\">RFC 2071</a>. It isn't all done yet and has <a href=\"https://github.com/rust-lang/rust/issues/63066\" rel=\"nofollow noreferrer\">this tracking issue</a>.</p>\n"}], "owner": {"reputation": 25639, "user_id": 54426, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/dYp2m.png?s=128&g=1", "display_name": "Rich Apodaca", "link": "https://stackoverflow.com/users/54426/rich-apodaca"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 480, "favorite_count": 0, "closed_date": 1576593841, "accepted_answer_id": 59376307, "answer_count": 1, "score": 2, "last_activity_date": 1576594104, "creation_date": 1576592401, "last_edit_date": 1576593948, "question_id": 59376227, "link": "https://stackoverflow.com/questions/59376227/how-do-i-return-an-iterator-over-the-keys-of-a-hashset-from-a-trait-method", "closed_reason": "Duplicate", "title": "How do I return an iterator over the keys of a HashSet from a trait method?", "body": "<p>A struct has a set of items I'd like to allow clients to iterate over. Here's an attempt:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashSet;\nuse std::hash::Hash;\n\npub struct Foo&lt;T: Eq + Hash&gt; {\n    items: HashSet&lt;T&gt;,\n}\n\nimpl&lt;'a, T: 'a + Eq + Hash&gt; Foo&lt;T&gt; {\n    pub fn new() -&gt; Self {\n        Foo {\n            items: HashSet::new(),\n        }\n    }\n\n    pub fn iterate&lt;I&gt;(&amp;self) -&gt; I\n    where\n        I: IntoIterator&lt;Item = &amp;'a T&gt;,\n    {\n        self.items.iter()\n    }\n}\n</code></pre>\n\n<p>This fails to compile, giving the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:19:9\n   |\n15 |     pub fn iterate&lt;I&gt;(&amp;self) -&gt; I\n   |                                 - expected `I` because of return type\n...\n19 |         self.items.iter()\n   |         ^^^^^^^^^^^^^^^^^ expected type parameter, found struct `std::collections::hash_set::Iter`\n   |\n   = note: expected type `I`\n              found type `std::collections::hash_set::Iter&lt;'_, T&gt;`\n   = help: type parameters must be constrained to match other types\n   = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters\n</code></pre>\n\n<p>The return value from <code>HashSet::iter</code> method appears to act like an <code>Iterator</code> when, for example within a for loop. It seems like some kind of type coercion might be possible in my <code>iterate</code> method, but clearly the compiler has other ideas.</p>\n\n<p>How can I specify a return type of <code>Iterator</code> in a function while returning the return value from a <code>HashSet</code> iterator?</p>\n\n<p>In other words, I want to delegate iteration to <code>HashSet</code>. I'd like to avoid implementing a custom iterator to do this, but if that's the only way would be interested in seeing how it's done. I've been able to get this working by returning a <code>Box&lt;dyn Iterator&gt;</code>, but I'd like to avoid that approach as well if it's possible to work just with trait boundaries as described in <a href=\"https://stackoverflow.com/a/34969944/54426\">this answer</a>.</p>\n\n<p>One more requirement: the approach must work when the <code>iterate</code> method is declared on a trait. That appears to rule out an approach like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait FooTrait {\n    fn iterate(&amp;self) -&gt; impl Iterator&lt;Item=&amp;T&gt;;\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576593568, "post_id": 59374194, "comment_id": 104945316, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/a/55565595/155423\">How do I read the output of a child process without blocking in Rust?</a>; <a href=\"https://stackoverflow.com/a/54854883/155423\">How do I use async/await syntax with Tokio?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59374194/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576593588, "post_id": 59374194, "comment_id": 104945327, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/59374194/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 4199, "user_id": 346335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4481fa93eb8710047ed4e11a3ac533c8?s=128&d=identicon&r=PG", "display_name": "alastair", "link": "https://stackoverflow.com/users/346335/alastair"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576594337, "post_id": 59374194, "comment_id": 104945786, "body": "@Shepmaster It might <i>look</i> as if it might be answered by those, but it isn&#39;t. I saw those (and others). All the answers on here - and that I found in Google - either (a) only deal with one of the two streams (which is much easier), or (b) don&#39;t actually stream the output, but instead buffer it until the process ends."}, {"owner": {"reputation": 4199, "user_id": 346335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4481fa93eb8710047ed4e11a3ac533c8?s=128&d=identicon&r=PG", "display_name": "alastair", "link": "https://stackoverflow.com/users/346335/alastair"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576594477, "post_id": 59374194, "comment_id": 104945843, "body": "As for a &quot;minimal reproducible example&quot;, I&#39;m not sure there&#39;s much point; it&#39;s obvious why the code above won&#39;t build (multiple borrows of outbuf/errbuf). If there&#39;s some structural thing that I&#39;m missing, I&#39;m sure someone more experienced with Rust than myself will be able to point it out."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576594682, "post_id": 59374194, "comment_id": 104945962, "body": "So you are using futures 0.1 and tokio 0.1? Please read the <i>entirety</i> of my comment, where i discuss all of the parts that make up a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>,"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576594893, "post_id": 59374194, "comment_id": 104946078, "body": "<i>I saw those (and others).</i> \u2014 please <b>link</b> to questions and answers that you&#39;ve found. This serves two purposes: (1) it helps show that you did a minimal amount of work before asking the question (2) you can describe what you don&#39;t understand about those answers or how this question differs. Please remember that Stack Overflow is primarily about building a knowledge base of high-quality questions."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576594972, "post_id": 59374194, "comment_id": 104946110, "body": "You could also provide a small shell script that generates output to stdout/stderr, or anything else about the boilerplate of the solution, reducing the time it would take for someone to answer you."}, {"owner": {"reputation": 4199, "user_id": 346335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4481fa93eb8710047ed4e11a3ac533c8?s=128&d=identicon&r=PG", "display_name": "alastair", "link": "https://stackoverflow.com/users/346335/alastair"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576595383, "post_id": 59374194, "comment_id": 104946334, "body": "@Shepmaster Honestly, if it&#39;s that much trouble, I&#39;ll just delete the question, use Go instead (where it seems easy to do this) and be done with it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4199, "user_id": 346335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4481fa93eb8710047ed4e11a3ac533c8?s=128&d=identicon&r=PG", "display_name": "alastair", "link": "https://stackoverflow.com/users/346335/alastair"}, "edited": false, "score": 0, "creation_date": 1576595568, "post_id": 59374194, "comment_id": 104946423, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/204418/discussion-between-shepmaster-and-alastair\">continue this discussion in chat</a>."}], "owner": {"reputation": 4199, "user_id": 346335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4481fa93eb8710047ed4e11a3ac533c8?s=128&d=identicon&r=PG", "display_name": "alastair", "link": "https://stackoverflow.com/users/346335/alastair"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "closed_date": 1576596767, "answer_count": 0, "score": 1, "last_activity_date": 1576595470, "creation_date": 1576585442, "last_edit_date": 1576595470, "question_id": 59374194, "link": "https://stackoverflow.com/questions/59374194/how-can-i-asynchronously-read-from-both-stdout-and-stderr-of-a-subprocess-using", "closed_reason": "Duplicate", "title": "How can I asynchronously read from both stdout and stderr of a subprocess using Tokio?", "body": "<p>Tokio (I'm using 0.2, with futures 0.3) has <code>process::Command.output()</code>, which returns the combined output (both stdout and stderr) from a child process after it's complete. However, I would like to <em>stream</em> the output for a few reasons:</p>\n\n<ol>\n<li><p>It might be larger than available memory.</p></li>\n<li><p>The stdout and stderr output may be interleaved (I realise that in general the relationship between the two will not be something that can be relied upon, but I'd rather make as much of an effort as possible to keep the results as similar as running the process normally).</p></li>\n<li><p>I don't want to wait for the process to terminate before output starts being returned.</p></li>\n</ol>\n\n<p>I tried using <code>select!</code> with a pair of futures and a loop:</p>\n\n<pre><code>let outbuf = [0u8; 512];\nlet errbuf = [0u8; 512];\n\nlet outfut = child_stdout.read(&amp;mut outbuf).fuse();\nlet errfut = child_stderr.read(&amp;mut errbuf).fuse();\n\npin_mut!(outfut, errfut);\n\nloop {\n    select! {\n        result = outfut =&gt; {\n            let length = result?;\n            if length != 0 {\n                 output.write_all(&amp;outbuf[..length]).await?\n                 outfut.set(child_stdout.read(&amp;mut outbuf).fuse())\n            }\n        }\n        result = errfut =&gt; {\n            let length = result?;\n            if length != 0 {\n                 output.write_all(&amp;errbuf[..length]).await?\n                 errfut.set(child_stderr.read(&amp;mut errbuf).fuse())\n            }\n        }\n        complete =&gt; break\n    }\n}\n\nlet status = child.await?\n</code></pre>\n\n<p>Of course, <em>this won't work because I've borrowed the buffers twice</em>; I've tried rearranging the code in various ways, but when using <code>select!</code> like this I always seem to end up having to borrow something twice.  (Note also that in practice there's a little more output in the <code>if</code> statements than I'm showing above, and the stdout and stderr branches differ from one another, so you can't just redirect both stdout and stderr to the same place and call it a day.)</p>\n\n<p>Clearly this is not the right approach.  Is there an idiomatic Rust way to achieve what I'm after here?</p>\n"}, {"tags": ["rust", "reference", "hashmap"], "comments": [{"owner": {"reputation": 1517, "user_id": 275984, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/620339c024f25dbc2597a9d33c6eef54?s=128&d=identicon&r=PG", "display_name": "b0fh", "link": "https://stackoverflow.com/users/275984/b0fh"}, "edited": false, "score": 1, "creation_date": 1576584281, "post_id": 59373165, "comment_id": 104940183, "body": "What if you use <code>impl&lt;K: Clone, V: Clone&gt;</code> ?"}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 7, "last_activity_date": 1576585340, "creation_date": 1576585340, "answer_id": 59374164, "question_id": 59373165, "link": "https://stackoverflow.com/questions/59373165/cloning-a-hashmap-using-a-reference-to-another-hashmap/59374164#59374164", "title": "Cloning a hashmap using a reference to another hashmap", "body": "<p>As the comment suggested this is a slightly unfortunate interaction of how Rust looks up methods via references / autoderef:</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#impl-Clone\" rel=\"noreferrer\">The implementation of <code>Clone</code> on <code>HashMap</code></a> requires the keys and the values (and the hasher) to be <code>Clone</code> as well. This makes sense since we can only clone the <code>HashMap</code> if we can clone its content. If any of those do not implement <code>Clone</code>, the <code>HashMap</code> does not implement <code>Clone</code>.</p>\n\n<p>Your <code>impl&lt;K, V&gt;</code> has no bounds regarding <code>Clone</code>. So why does the call to <code>data.clone()</code> even work at all? That's because there is an <a href=\"https://doc.rust-lang.org/std/primitive.reference.html#impl-Clone\" rel=\"noreferrer\">implementation of <code>Clone</code> on any reference</a>, which gives you a copy of the reference.</p>\n\n<p>Since your <code>impl&lt;K, V&gt;</code> has no bounds on <code>K</code> or <code>V</code>, the compiler will only find the <code>Clone</code>-implementation on the primitive <code>&amp;</code>-type to be applicable. If you require <code>K: Clone, V: Clone</code>, the <code>HashMap</code>'s own <code>Clone</code>-impl applies (<code>S</code> is already <code>Clone</code> by default).</p>\n\n<p>See this example:</p>\n\n<pre><code>// This returns a cloned HashMap\n// because Rust uses the Clone-implementation on HashMap\nfn do_clone&lt;K: Clone, V: Clone&gt;(data: &amp;HashMap&lt;K,V&gt;) -&gt; HashMap&lt;K, V&gt; {\n    data.clone()\n}\n\n// There is no viable Clone-implementation on the HashMap\n// because K &amp; V are not Clone. But there is an implementation\n// on the primitive reference type.\nfn do_clone_ref&lt;K, V&gt;(data: &amp;HashMap&lt;K,V&gt;) -&gt; &amp;HashMap&lt;K, V&gt; {\n    data.clone()\n}\n</code></pre>\n"}], "owner": {"reputation": 164, "user_id": 1089912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e3eb8bab2b60b5d1618787d88bced2f?s=128&d=identicon&r=PG", "display_name": "abhijat", "link": "https://stackoverflow.com/users/1089912/abhijat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2737, "favorite_count": 0, "accepted_answer_id": 59374164, "answer_count": 1, "score": 2, "last_activity_date": 1576585763, "creation_date": 1576581587, "last_edit_date": 1576585339, "question_id": 59373165, "link": "https://stackoverflow.com/questions/59373165/cloning-a-hashmap-using-a-reference-to-another-hashmap", "title": "Cloning a hashmap using a reference to another hashmap", "body": "<p>I have a reference to a hashmap (<code>data</code> in the code below) which I want to clone into a new, owned hashmap. Cloning the reference gives me a new reference, which is not what I need.</p>\n\n<p>I also tried doing an iter + map over the <code>data</code> reference and cloning the key and value pairs individually followed by a collect, but that also does not work. Here is a minimal working example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use core::cell::Cell;\nuse std::collections::HashMap;\nuse std::collections::HashSet;\nuse std::rc::Rc;\n\nstruct Dummy&lt;K, V&gt; {\n    dirty: Rc&lt;Cell&lt;bool&gt;&gt;,\n    data: Cell&lt;Option&lt;HashMap&lt;K, HashSet&lt;V&gt;&gt;&gt;&gt;,\n}\n\nimpl&lt;K, V&gt; Dummy&lt;K, V&gt; {\n    fn persist(&amp;self, prefix: &amp;str, data: &amp;HashMap&lt;K, HashSet&lt;V&gt;&gt;) {\n        self.dirty.set(true);\n        self.data.set(Some(data.clone()));\n    }\n}\n</code></pre>\n\n<p>which gives the following error:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:14:28\n   |\n14 |         self.data.set(Some(data.clone()));\n   |                            ^^^^^^^^^^^^ expected struct `std::collections::HashMap`, found reference\n   |\n   = note: expected type `std::collections::HashMap&lt;K, std::collections::HashSet&lt;V&gt;&gt;`\n              found type `&amp;std::collections::HashMap&lt;K, std::collections::HashSet&lt;V&gt;&gt;`\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=01f983a97475341f0525803dc687fc4b\" rel=\"nofollow noreferrer\">Permalink to the playground</a>)</p>\n\n<p>The purpose of this code is to observe the contents of the hashmap on through the <code>Dummy</code> struct, which is used for unit testing.</p>\n\n<p>I guess this problem is because given the generic types there is no way to determine how to deeply clone the key and value objects? </p>\n\n<p>Is there a way to create a new hashmap given a reference to an existing hashmap?</p>\n"}, {"tags": ["memory-management", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1576550647, "post_id": 59366796, "comment_id": 104927518, "body": "Yes, Box will free resource when dropped."}, {"owner": {"reputation": 86, "user_id": 5564716, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bzbAh.jpg?s=128&g=1", "display_name": "h2o2", "link": "https://stackoverflow.com/users/5564716/h2o2"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576551934, "post_id": 59366796, "comment_id": 104927761, "body": "But what if my scenario is that my next human input is depends on previous console output of that heap address. Or cast this address to integer and store it into disk file for further use"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576552438, "post_id": 59366796, "comment_id": 104927872, "body": "@racaljk in those case, you presumably wouldn&#39;t have dropped the <code>Box</code> in the first place. When dropped, you free the memory."}], "answers": [{"comments": [{"owner": {"reputation": 86, "user_id": 5564716, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bzbAh.jpg?s=128&g=1", "display_name": "h2o2", "link": "https://stackoverflow.com/users/5564716/h2o2"}, "edited": false, "score": 0, "creation_date": 1576550153, "post_id": 59366837, "comment_id": 104927423, "body": "I think current Box::new implementation have different behaviors from what I expect, or at least we should comment this &quot;optimization&quot; on its rustdoc."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 86, "user_id": 5564716, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bzbAh.jpg?s=128&g=1", "display_name": "h2o2", "link": "https://stackoverflow.com/users/5564716/h2o2"}, "edited": false, "score": 5, "creation_date": 1576550957, "post_id": 59366837, "comment_id": 104927569, "body": "@racaljk It&#39;s hardly an optimization. In fact it&#39;s exactly what I would expect. If you just create and free a single <code>i32</code> one million times in a row, do you expect they all have different addresses? That would be a massive waste of space."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1576552335, "last_edit_date": 1576552335, "creation_date": 1576549908, "answer_id": 59366837, "question_id": 59366796, "link": "https://stackoverflow.com/questions/59366796/why-does-calling-boxnew-twice-without-storing-the-result-allocate-the-same-hea/59366837#59366837", "title": "Why does calling Box::new twice without storing the result allocate the same heap address?", "body": "<p>Since you aren't storing the result beyond the <code>test</code> function, the allocated memory is immediately freed. This allows the memory allocator to reuse the same address by the time of the second call.</p>\n\n<hr>\n\n<blockquote>\n  <p>I think current <code>Box::new</code> implementation have different behaviors from what I expect</p>\n</blockquote>\n\n<p>Yes, that seems likely, but it's worth thinking about <em>why</em> you expect this certain behavior. To me, the demonstrated behavior makes sense.</p>\n\n<blockquote>\n  <p>or at least we should comment this \"optimization\" on [<code>Box</code>es] rustdoc</p>\n</blockquote>\n\n<p>This isn't an optimization of <code>Box</code>, by any means. The behavior to free the value as soon as it doesn't have an owner is part of the definition of the Rust language.</p>\n\n<p>It <em>could</em> be considered an optimization of the underlying memory allocator in use at the moment. However, the allocator implementation makes sense to many programmers and it's not unique to Rust. For example, here's a similar program in C:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n  for (int i = 0; i &lt; 10; i++) {\n    int32_t *v = malloc(sizeof(int32_t));\n    printf(\"%p\\n\", (void *)v);\n    free(v);\n  }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>% clang -std=c17 -Wpedantic -Wall alloc.c\n% ./a.out\n0x7f87c6401860\n0x7f87c6401860\n0x7f87c6401860\n0x7f87c6401860\n0x7f87c6401860\n0x7f87c6401860\n0x7f87c6401860\n0x7f87c6401860\n0x7f87c6401860\n0x7f87c6401860\n</code></pre>\n\n<p>Note that the implementation of the memory allocator is what ultimately causes the same address to be returned; it's possible to write a memory allocator where that's not true.</p>\n"}], "owner": {"reputation": 86, "user_id": 5564716, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bzbAh.jpg?s=128&g=1", "display_name": "h2o2", "link": "https://stackoverflow.com/users/5564716/h2o2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 59366837, "answer_count": 1, "score": 1, "last_activity_date": 1576552335, "creation_date": 1576549572, "last_edit_date": 1576549919, "question_id": 59366796, "link": "https://stackoverflow.com/questions/59366796/why-does-calling-boxnew-twice-without-storing-the-result-allocate-the-same-hea", "title": "Why does calling Box::new twice without storing the result allocate the same heap address?", "body": "<p>I have the following code snippet:</p>\n\n<pre><code>fn test() {\n    let addr = Box::new(1024);\n    println!(\"{:p}\", addr);\n}\n\nfn main(){\n    test();\n    test();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>0x7fd2fa402b70\n0x7fd2fa402b70\n</code></pre>\n\n<p>As the documentation explains, <code>Box::new</code> will allocate memory on the heap and then place the argument into it. No matter how many times I call <code>test()</code>, the program prints an identical address.</p>\n\n<p>Why does Rust allocate the same heap address, even if the code is in an <code>unsafe</code> block? Is this normal behavior?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576530913, "post_id": 59364248, "comment_id": 104922519, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/a/49762980/155423\">Rust can&#39;t find crate</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59364248/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576530961, "post_id": 59364248, "comment_id": 104922535, "body": "TL;DR the duplicate: move your common code to a regular library then create a cdylib that uses the regular library. Put the tests in the regular library."}], "owner": {"reputation": 47, "user_id": 5424687, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43f5d448a52114f9ff525da03f070020?s=128&d=identicon&r=PG&f=1", "display_name": "madde", "link": "https://stackoverflow.com/users/5424687/madde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "closed_date": 1576541849, "answer_count": 0, "score": 1, "last_activity_date": 1576530815, "creation_date": 1576530182, "last_edit_date": 1576530815, "question_id": 59364248, "link": "https://stackoverflow.com/questions/59364248/unresolved-import-when-linking-with-lib-in-cargo-toml", "closed_reason": "Duplicate", "title": "&quot;Unresolved import&quot; when linking with [lib] in Cargo.toml", "body": "<p>I am trying to write a few tests for a Rust - Java cross-platform program where Rust serves as a library for the backend. I want to call the tests from a new main.rs.</p>\n\n<p>While the library (lib.rs) works fine when called from the Java code, I have trouble linking the main.rs to the lib.rs.</p>\n\n<p>This works but has errors when cross-compiling:</p>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"rust_backend\"\nversion = \"0.1.0\"\nedition = \"2018\"\ncrate-type = [\"cdylib\"]\n\n[dependencies]    \njni = { version = \"0.10.2\", default-features = false }\n\n[profile.release]\nlto = true\n</code></pre>\n\n<p>lib.rs</p>\n\n<pre><code>pub const \u0106ALLING: &amp;'static str = \"Rust library called\";\n\npub fn foo() -&gt; bool {\n     return true;\n}\n</code></pre>\n\n<p>main.rs</p>\n\n<pre><code>use rust_backend::CALLING;\nuse rust_backend::foo;\n\nfn main() {\n    println!(\"{}\", CALLING);\n    if foo() == true {    {\n        println!(\"foo\");\n    }\n}\n</code></pre>\n\n<p>I want my Cargo.toml to look like this so that cross-compiling works:</p>\n\n<pre><code>[package]\nname = \"rust_backend\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\njni = { version = \"0.10.2\", default-features = false }\n\n[profile.release]\nlto = true\n\n[lib]\nname = \"rust_backend\"\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<p>This results in an error when building:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `rust_backend`\n --&gt; src/main.rs:1:5\n  |\n1 | use rust_backend::CALLING;\n  |     ^^^^^^^^^^^^ use of undeclared type or module `rust_backend`\n\nerror[E0432]: unresolved import `rust_backend`\n --&gt; src/main.rs:2:5\n  |\n2 | use rust_backend::foo;\n  |     ^^^^^^^^^^^^ use of undeclared type or module `rust_backend`\n</code></pre>\n\n<p>I'm probably missing something super-simple here, but neither the documentation nor other code examples where able to help me out with this basic problem. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1576529822, "post_id": 59364133, "comment_id": 104922118, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>; <a href=\"https://stackoverflow.com/q/36167160/155423\">How do I express mutually recursive data structures in safe Rust?</a>; . If not, please <b><a href=\"https://stackoverflow.com/posts/59364133/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576530225, "post_id": 59364133, "comment_id": 104922274, "body": "<i>this is achievable in C++</i> \u2014 I&#39;d expect that it&#39;s not possible in all cases. Specifically, try something like constructing a BUS &amp; CPU in a function and then returning it. My guess is that calling methods at that point would cause memory unsafety (hopefully reported by Valgrind)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1576531433, "post_id": 59364133, "comment_id": 104922715, "body": "See also <a href=\"https://stackoverflow.com/q/36936221/155423\">Pass self reference to contained object&#39;s function</a>; <a href=\"https://stackoverflow.com/q/30681468/155423\">Passing mutable self reference to method of owned object</a>"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 3, "last_activity_date": 1576534895, "creation_date": 1576534895, "answer_id": 59365096, "question_id": 59364133, "link": "https://stackoverflow.com/questions/59364133/is-it-possible-to-call-a-parent-structs-methods-from-a-child-struct/59365096#59365096", "title": "Is it possible to call a parent struct&#39;s methods from a child struct?", "body": "<p>The short answer is no.</p>\n\n<ol>\n<li><p><code>RefCell</code> owns its inner object. This means it has <em>the only</em> copy of that object, so that it can fully control all access to it and not allow any other access from outside. An object can't exist in <code>RefCell</code> and outside of <code>RefCell</code> at the same time.</p>\n\n<p>Your <code>setup</code> could take an existing <code>Rc&lt;RefCell&lt;BUS&gt;&gt;</code> instead and pass that around. <code>&amp;mut BUS</code> without the wrapper won't do.</p></li>\n<li><p>The borrow checker can't ensure safety of mutual parent-child relationships. It wants program data structured as trees or DAGs. Otherwise you're forced to use wrapper types or C-like raw pointers.</p></li>\n</ol>\n\n<p>The borrow checker checks against interfaces, not implementation. If your setter borrows <code>&amp;mut self</code>, that's exclusive borrow of the entire object, and for borrow checking that's the most restrictive and most inflexible option. You will need to peel some layers of abstraction to make this work, e.g. pass RAM down to the CPU. Alternatively, make RAM use <code>Cell&lt;u8&gt;</code> type, so that it can be mutated via shared references.</p>\n"}], "owner": {"reputation": 129, "user_id": 8924420, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a56b3daef5da86bd16ae33e8f77682af?s=128&d=identicon&r=PG&f=1", "display_name": "JamesGill", "link": "https://stackoverflow.com/users/8924420/jamesgill"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 628, "favorite_count": 0, "closed_date": 1576541723, "accepted_answer_id": 59365096, "answer_count": 1, "score": 0, "last_activity_date": 1576541757, "creation_date": 1576529535, "last_edit_date": 1576531571, "question_id": 59364133, "link": "https://stackoverflow.com/questions/59364133/is-it-possible-to-call-a-parent-structs-methods-from-a-child-struct", "closed_reason": "Duplicate", "title": "Is it possible to call a parent struct&#39;s methods from a child struct?", "body": "<p>I am trying to pass a reference to self down to a child struct that is a field variable</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\npub struct BUS {\n    pub processor: CPU,\n    pub ram: [u8; 65536],\n}\n\nimpl BUS {\n    pub fn new() -&gt; BUS {\n        BUS {\n            processor: CPU::new(),\n            ram: [0; 65536],\n        }\n    }\n\n    pub fn setup(&amp;mut self) {\n        self.processor.connect_bus(Rc::new(RefCell::new(self)));\n        self.ram.iter_mut().for_each(|x| *x = 00);\n    }\n\n    pub fn write(&amp;mut self, addr: u16, data: u8) {\n        self.ram[addr as usize] = data;\n    }\n\n    pub fn read(&amp;mut self, addr: u16, _read_only: bool) -&gt; u8 {\n        self.ram[addr as usize]\n    }\n}\n\npub struct CPU {\n    bus_ptr: Rc&lt;RefCell&lt;BUS&gt;&gt;,\n}\n\nimpl CPU {\n    pub fn new() -&gt; CPU {\n        CPU {\n            bus_ptr: Rc::new(RefCell::new(BUS::new())),\n        }\n    }\n    pub fn connect_bus(&amp;mut self, r: Rc&lt;RefCell&lt;BUS&gt;&gt;) {\n        self.bus_ptr = r;\n    }\n    pub fn read_ram(&amp;self, addr: u16, _read_only: bool) -&gt; u8 {\n        (self.bus_ptr.borrow_mut().read(addr, false))\n    }\n    pub fn write_ram(&amp;mut self, addr: u16, data: u8) {\n        (self.bus_ptr.borrow_mut().write(addr, data))\n    }\n}\n\nfn main() {\n    let comp = BUS::new();\n    comp.setup();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e14be390c4aea606f021756f65fd61ce\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>This errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:18:57\n   |\n18 |         self.processor.connect_bus(Rc::new(RefCell::new(self)));\n   |                                                         ^^^^ expected struct `BUS`, found &amp;mut BUS\n   |\n   = note: expected type `BUS`\n              found type `&amp;mut BUS`\n</code></pre>\n\n<p>I can't pass in <code>self</code> to the <code>RefCell</code> as it is a second mutable borrow. I  got around this by moving my functions around but want to know how possible this structure is. </p>\n\n<p>I achieved this in C++ by passing in <code>this</code> from <code>BUS</code> and then using <code>*bus</code> in <code>connect_bus</code> so that <code>read_ram</code> can be <code>*bus-&gt;read(...)</code>.</p>\n\n<p>Is it possible to call the BUS struct's <code>read</code> and <code>write</code> functions from a method on the CPU struct?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576523592, "post_id": 59362883, "comment_id": 104919668, "body": "Seems like a footgun to do this at all. Based on the information provided, I&#39;d create <a href=\"https://stackoverflow.com/q/26070559/155423\">a trait alias</a> for <code>MyTrait + Send + Sync</code> instead."}, {"owner": {"reputation": 21, "user_id": 3267834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62e0ad58c1ee206c4eac413fb1c87f48?s=128&d=identicon&r=PG", "display_name": "Mcat12", "link": "https://stackoverflow.com/users/3267834/mcat12"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576524180, "post_id": 59362883, "comment_id": 104919900, "body": "@Shepmaster I would use a trait alias (I did look into them before making this question), but they are still <a href=\"https://github.com/rust-lang/rust/issues/41517\" rel=\"nofollow noreferrer\">unstable</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576524327, "post_id": 59362883, "comment_id": 104919955, "body": "Yes, which is why I linked to a question that has <a href=\"https://stackoverflow.com/a/26071172/155423\">an answer</a> discussing how to approximate them with today&#39;s Rust as well as <a href=\"https://stackoverflow.com/a/49263923/155423\">an answer</a> mentioning the future with actual language-supported trait aliases (and that they are still unstable)."}, {"owner": {"reputation": 21, "user_id": 3267834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62e0ad58c1ee206c4eac413fb1c87f48?s=128&d=identicon&r=PG", "display_name": "Mcat12", "link": "https://stackoverflow.com/users/3267834/mcat12"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576524520, "post_id": 59362883, "comment_id": 104920037, "body": "Thanks, I would accept an answer that points out the footgun and links to trait aliases (including the stable workaround)."}], "owner": {"reputation": 21, "user_id": 3267834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62e0ad58c1ee206c4eac413fb1c87f48?s=128&d=identicon&r=PG", "display_name": "Mcat12", "link": "https://stackoverflow.com/users/3267834/mcat12"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 79, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1576523319, "creation_date": 1576523319, "question_id": 59362883, "link": "https://stackoverflow.com/questions/59362883/is-it-possible-to-have-conditional-trait-inheritance-such-as-send-sync-using", "title": "Is it possible to have conditional trait inheritance (such as Send + Sync) using feature flags?", "body": "<p>In a library one may want to restrict implementations of a trait to be thread safe based on a feature flag. This sometimes involves changing trait inheritance. However, attributes are not allowed on the trait inheritance bounds. A common workaround is to copy the trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(not(feature = \"thread_safe\"))]\npub trait MyTrait {\n    fn foo();\n}\n\n#[cfg(feature = \"thread_safe\")]\npub trait MyTrait: Send + Sync {\n    fn foo();\n}\n</code></pre>\n\n<p>The duplicated code can be mitigated by using a macro (see below), but this can make the IDE experience suffer. Is there a better way to achieve conditional trait inheritance?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! my_trait {\n    ($($bounds:ident),*) =&gt; {\n        pub trait MyTrait where $(Self: $bounds),* {\n            fn foo();\n        }\n    };\n}\n\n#[cfg(not(feature = \"thread_safe\"))]\nmy_trait!();\n#[cfg(feature = \"thread_safe\")]\nmy_trait!(Send, Sync);\n</code></pre>\n"}, {"tags": ["rust", "hashmap", "borrow-checker"], "comments": [{"owner": {"reputation": 34352, "user_id": 119775, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/fK5bc.jpg?s=128&g=1", "display_name": "Jean-Fran&#231;ois Corbett", "link": "https://stackoverflow.com/users/119775/jean-fran%c3%a7ois-corbett"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576519046, "post_id": 59361685, "comment_id": 104917820, "body": "@Shepmaster Nice edit -- question is clearer now."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1576520822, "last_edit_date": 1576520822, "creation_date": 1576518702, "answer_id": 59361906, "question_id": 59361685, "link": "https://stackoverflow.com/questions/59361685/cannot-use-the-entry-api-to-mutate-a-hashmap-using-a-reference-as-the-key-inside/59361906#59361906", "title": "Cannot use the entry API to mutate a HashMap using a reference as the key inside of a function", "body": "<p>Link the lifetime of the <code>key</code> argument to the lifetime of the keys in the <code>HashMap</code>:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn do_thing&lt;'a&gt;(key: &amp;'a str, dict: &amp;mut HashMap&lt;&amp;'a str, u32&gt;) -&gt; u32 {\n    *dict.entry(key).or_insert(0) += 1;\n    42\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p><code>dict.entry(key)</code></p>\n</blockquote>\n\n<p>The error message for this version helps understand the problem:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn do_thing(key: &amp;str, dict: &amp;mut HashMap&lt;&amp;str, u32&gt;) -&gt; u32 {\n    *dict.entry(key).or_insert(0) += 1;\n    42\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0623]: lifetime mismatch\n --&gt; src/lib.rs:4:17\n  |\n3 | fn do_thing(key: &amp;str, dict: &amp;mut HashMap&lt;&amp;str, u32&gt;) -&gt; u32 {\n  |                  ----                     ----\n  |                  |\n  |                  these two types are declared with different lifetimes...\n4 |     *dict.entry(key).or_insert(0) += 1;\n  |                 ^^^ ...but data from `key` flows into `dict` here\n</code></pre>\n\n<p>Specifically, <code>entry</code> will store <code>key</code> in the <code>HashMap</code>, but the value referenced by <code>key</code> might become invalid <strong>before</strong> the <code>HashMap</code> does. If that happened, the <code>HashMap</code> would contain a dangling reference, pointing to invalid memory. That's exactly what Rust's borrow checker prevents.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41654864/155423\">When is it required to use lifetimes?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31609137/155423\">Why are explicit lifetimes needed in Rust?</a></li>\n</ul>\n\n<blockquote>\n  <p><code>dict.entry(&amp;String::from(key))</code></p>\n</blockquote>\n\n<p>This can never work here, for much the same reason.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a></li>\n</ul>\n"}], "owner": {"reputation": 34352, "user_id": 119775, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/fK5bc.jpg?s=128&g=1", "display_name": "Jean-Fran&#231;ois Corbett", "link": "https://stackoverflow.com/users/119775/jean-fran%c3%a7ois-corbett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 59361906, "answer_count": 1, "score": -1, "last_activity_date": 1576520822, "creation_date": 1576517793, "last_edit_date": 1576519228, "question_id": 59361685, "link": "https://stackoverflow.com/questions/59361685/cannot-use-the-entry-api-to-mutate-a-hashmap-using-a-reference-as-the-key-inside", "title": "Cannot use the entry API to mutate a HashMap using a reference as the key inside of a function", "body": "<p>I'm trying to get a handle to an element in a mutable <code>HashMap</code> reference where the keys are <code>&amp;str</code>.  </p>\n\n<p>In the example below, I'm trying to get value <code>dict[key]</code> so I can mutate it. How do I do this?</p>\n\n<p>I've tried:</p>\n\n<ul>\n<li><code>dict.entry(key)</code>: lifetime mismatch</li>\n<li><code>dict.entry(&amp;String::from(key))</code>: borrowed value does not live long enough</li>\n</ul>\n\n<p>e.g. this:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn do_thing(key: &amp;str, dict: &amp;mut HashMap&lt;&amp;str, u32&gt;) -&gt; u32 {\n    let num = dict.entry(&amp;String::from(key)).or_insert(0);\n    *num += 1;\n    return 42;\n}\n</code></pre>\n\n<p>Errors out with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n --&gt; src/lib.rs:4:27\n  |\n3 | fn do_thing(key: &amp;str, dict: &amp;mut HashMap&lt;&amp;str, u32&gt;) -&gt; u32 {\n  |                                           - let's call the lifetime of this reference `'1`\n4 |     let num = dict.entry(&amp;String::from(key)).or_insert(0);\n  |               ------------^^^^^^^^^^^^^^^^^-             - temporary value is freed at the end of this statement\n  |               |           |\n  |               |           creates a temporary which is freed while still in use\n  |               argument requires that borrow lasts for `'1`\n</code></pre>\n"}, {"tags": ["rust", "move", "dereference", "borrow-checker"], "comments": [{"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 2, "creation_date": 1576508341, "post_id": 59358981, "comment_id": 104912476, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/50345139/why-can-i-return-a-reference-to-a-local-literal-but-not-a-variable\">Why can I return a reference to a local literal but not a variable?</a>"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 2, "creation_date": 1576508395, "post_id": 59358981, "comment_id": 104912501, "body": "^ This seems to answer your question about the owner: in your case SimpleFoo is promoted to a static. It is also legal to <a href=\"https://stackoverflow.com/questions/47662253/why-is-it-legal-to-borrow-a-temporary\">mutably borrow a temporary</a> but in that case it would create a fresh SimpleFoo (otherwise, you could take several mutable references to the same one)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1576508519, "post_id": 59358981, "comment_id": 104912565, "body": "<i>who&#39;s the owner</i> \u2014 as shown in the duplicate, the owner is variable that you can&#39;t see. Since you can&#39;t see it, you can&#39;t move out of it."}], "owner": {"reputation": 1194, "user_id": 1191070, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JPU4k.jpg?s=128&g=1", "display_name": "Patrik Stas", "link": "https://stackoverflow.com/users/1191070/patrik-stas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 49, "favorite_count": 0, "closed_date": 1576508465, "answer_count": 0, "score": 0, "last_activity_date": 1576508690, "creation_date": 1576507672, "last_edit_date": 1576508410, "question_id": 59358981, "link": "https://stackoverflow.com/questions/59358981/moving-value-out-of-function-by-dereferencing-a-reference", "closed_reason": "Duplicate", "title": "Moving value out of function by dereferencing a reference", "body": "<p>Given this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct SimpleFoo {}\n\nfn create_simplefoo() -&gt; SimpleFoo {\n    let foo: &amp;SimpleFoo = &amp;SimpleFoo {};\n    *foo\n}\n\npub fn main() {\n    let foo = create_simplefoo();\n}\n</code></pre>\n\n<p>I get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of `*foo` which is behind a shared reference\n --&gt; src/main.rs:5:5\n  |\n5 |     *foo\n  |     ^^^^ move occurs because `*foo` has type `SimpleFoo`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>It seems that <code>foo</code> has the <code>SimpleFoo</code> instance borrowed. That makes sense since it's a reference, not a value - but who's the owner then? I thought that any value in Rust has always an owner. Was that incorrect assumption?</p>\n\n<p>I think this kind of initialization by reference construct (<code>let foo: &amp;SimpleFoo = &amp;SimpleFoo {};</code>) contains some Rust concept I am not aware of. What am I missing?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1576498965, "post_id": 59355510, "comment_id": 104907641, "body": "Regular expressions don&#39;t seem to be the right tool to parse that kind of file. You&#39;d probably get better results using a parser library such as <a href=\"https://crates.io/crates/nom\" rel=\"nofollow noreferrer\">nom</a>."}, {"owner": {"reputation": 11918, "user_id": 5527985, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CfG3C.png?s=128&g=1", "display_name": "bobble bubble", "link": "https://stackoverflow.com/users/5527985/bobble-bubble"}, "edited": false, "score": 0, "creation_date": 1576499525, "post_id": 59355510, "comment_id": 104907906, "body": "@James Do not use that with <code>(?s)</code> single line flag. Seems to <a href=\"https://regex101.com/r/pdhn3a/6\" rel=\"nofollow noreferrer\">work fine in regex101</a>. I continued to answer the comment here, as that&#39;s not related to Totos answer in any way :)"}], "answers": [{"comments": [{"owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1576495981, "post_id": 59355689, "comment_id": 104906146, "body": "Thanks. There is a chance the groups aren&#39;t separated by a double linebreak. Is it possible to match on [ as the first character of the new line?"}, {"owner": {"reputation": 82895, "user_id": 372239, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/2twLb.jpg?s=128&g=1", "display_name": "Toto", "link": "https://stackoverflow.com/users/372239/toto"}, "reply_to_user": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1576496738, "post_id": 59355689, "comment_id": 104906533, "body": "@James: see my edit. I made a mistake, <code>\\z</code> is not supported by javascript regex."}, {"owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1576498005, "post_id": 59355689, "comment_id": 104907168, "body": "Sorry, is there an alternative way as look-around, including look-ahead and look-behind, is not supported in rust regex"}, {"owner": {"reputation": 11918, "user_id": 5527985, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CfG3C.png?s=128&g=1", "display_name": "bobble bubble", "link": "https://stackoverflow.com/users/5527985/bobble-bubble"}, "reply_to_user": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1576498291, "post_id": 59355689, "comment_id": 104907288, "body": "@James I think you could try like <a href=\"https://regex101.com/r/pdhn3a/2\" rel=\"nofollow noreferrer\"><code>^\\[GROUP2].*(?:\\r?\\n *[^\\][\\s].*)+</code></a> Please always specify regex flavor/environment you&#39;re using as answers can differ a lot."}, {"owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "reply_to_user": {"reputation": 11918, "user_id": 5527985, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CfG3C.png?s=128&g=1", "display_name": "bobble bubble", "link": "https://stackoverflow.com/users/5527985/bobble-bubble"}, "edited": false, "score": 0, "creation_date": 1576498877, "post_id": 59355689, "comment_id": 104907594, "body": "@bobblebubble Thanks for your help. I am getting an error &quot;unclosed character class&quot; at this part *[^"}, {"owner": {"reputation": 11918, "user_id": 5527985, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CfG3C.png?s=128&g=1", "display_name": "bobble bubble", "link": "https://stackoverflow.com/users/5527985/bobble-bubble"}, "reply_to_user": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1576499007, "post_id": 59355689, "comment_id": 104907664, "body": "@James Try more escaping: <code>^\\[GROUP2\\].*(?:\\r?\\n *[^\\]\\[\\s].*)+</code>"}, {"owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "reply_to_user": {"reputation": 11918, "user_id": 5527985, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CfG3C.png?s=128&g=1", "display_name": "bobble bubble", "link": "https://stackoverflow.com/users/5527985/bobble-bubble"}, "edited": false, "score": 0, "creation_date": 1576499301, "post_id": 59355689, "comment_id": 104907802, "body": "@bobblebubble Almost.. but that selects both groups. Eg: ^&#91;GROUP1&#93;.*(?:\\r?\\n <i>[^&#93;&#91;\\s].</i>)+"}, {"owner": {"reputation": 11918, "user_id": 5527985, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CfG3C.png?s=128&g=1", "display_name": "bobble bubble", "link": "https://stackoverflow.com/users/5527985/bobble-bubble"}, "edited": false, "score": 0, "creation_date": 1576500545, "post_id": 59355689, "comment_id": 104908418, "body": "@Toto Sorry for the many comments, wanted to answer James for alternative and it seemed, you were not there at the moment :)"}], "tags": [], "owner": {"reputation": 82895, "user_id": 372239, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/2twLb.jpg?s=128&g=1", "display_name": "Toto", "link": "https://stackoverflow.com/users/372239/toto"}, "is_accepted": false, "score": 1, "last_activity_date": 1576496688, "last_edit_date": 1576496688, "creation_date": 1576495537, "answer_id": 59355689, "question_id": 59355510, "link": "https://stackoverflow.com/questions/59355510/how-do-i-use-the-regex-crate-to-match-an-entire-ini-section/59355689#59355689", "title": "How do I use the regex crate to match an entire INI section?", "body": "<p>Here is a way to go:</p>\n\n<pre><code>^\\[GROUP\\d+]([\\s\\S]+?)(?=\\n+(?:^\\[|$))\n</code></pre>\n\n<p><a href=\"https://regex101.com/r/vtvP71/6\" rel=\"nofollow noreferrer\">Demo &amp; explanation</a></p>\n"}, {"comments": [{"owner": {"reputation": 82895, "user_id": 372239, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/2twLb.jpg?s=128&g=1", "display_name": "Toto", "link": "https://stackoverflow.com/users/372239/toto"}, "edited": false, "score": 0, "creation_date": 1576500686, "post_id": 59356938, "comment_id": 104908478, "body": "Better than mine ;)"}], "tags": [], "owner": {"reputation": 11918, "user_id": 5527985, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CfG3C.png?s=128&g=1", "display_name": "bobble bubble", "link": "https://stackoverflow.com/users/5527985/bobble-bubble"}, "is_accepted": true, "score": 5, "last_activity_date": 1576506316, "last_edit_date": 1576506316, "creation_date": 1576500376, "answer_id": 59356938, "question_id": 59355510, "link": "https://stackoverflow.com/questions/59355510/how-do-i-use-the-regex-crate-to-match-an-entire-ini-section/59356938#59356938", "title": "How do I use the regex crate to match an entire INI section?", "body": "<p>Credit also goes to @Toto. The Rust tag was initially not mentioned and added later on. As it cleared out, <a href=\"https://docs.rs/regex/1.3.1/regex/\" rel=\"nofollow noreferrer\">the Rust <code>regex</code> crate does not support any look around</a>.</p>\n\n<blockquote>\n  <p>Its syntax is similar to Perl-style regular expressions, but lacks a few features like look around...</p>\n</blockquote>\n\n<p>After a lot of discussion, it seems this regex worked for @James. I'm unsure how much escaping is needed for the brackets in Rust. To be on the safe side, I've escaped every literal bracket.</p>\n\n<pre><code>^\\[GROUP2\\].*(?:\\r?\\n\\s*[^\\]\\[\\s].*)+\n</code></pre>\n\n<p><a href=\"https://regex101.com/r/pdhn3a/7\" rel=\"nofollow noreferrer\">See the demo at regex101</a></p>\n\n<ul>\n<li><code>^\\[GROUP2\\]</code> <a href=\"https://www.regular-expressions.info/anchors.html\" rel=\"nofollow noreferrer\">starts</a> with the literal substring</li>\n<li><code>.*</code> matches greedily <a href=\"https://www.regular-expressions.info/refrepeat.html\" rel=\"nofollow noreferrer\">any amount</a> of <a href=\"https://www.regular-expressions.info/dot.html\" rel=\"nofollow noreferrer\">any characters</a> besides newline</li>\n<li><code>(?:\\r?\\n\\s*[^\\]\\[\\s].*)+</code> matches one or more lines, <a href=\"https://www.regular-expressions.info/charclass.html#negated\" rel=\"nofollow noreferrer\">not</a> starting with a bracket</li>\n</ul>\n"}], "owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 59356938, "answer_count": 2, "score": 2, "last_activity_date": 1576506316, "creation_date": 1576494836, "last_edit_date": 1576506270, "question_id": 59355510, "link": "https://stackoverflow.com/questions/59355510/how-do-i-use-the-regex-crate-to-match-an-entire-ini-section", "title": "How do I use the regex crate to match an entire INI section?", "body": "<p>I am trying to match the entire section part of an INI file, but the values under each section are non standard INI and right now it is not matching up until the next section.</p>\n\n<p>Here is what I have so far: <code>^\\[GROUP2]([^[]+)</code></p>\n\n<p>Matching against:</p>\n\n<pre><code>[GROUP1]\n;This is something I don't want\nCOMMAND(value:test)\nCOMMAND(value:[type=\"submit\"])\nCOMMAND(value:test)\nCOMMAND(value:test)\n\n\n[GROUP2]\n;This is something I don't want\nCOMMAND(value:test)\nCOMMAND(value:[type=\"submit\"])\nCOMMAND(value:test)\nCOMMAND(value:test)\n</code></pre>\n\n<p><a href=\"https://regex101.com/r/vtvP71/2\" rel=\"nofollow noreferrer\">Regex Example</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 10, "creation_date": 1576504995, "post_id": 59353066, "comment_id": 104910710, "body": "I&#39;ll state the obvious solution: there&#39;s nothing <i>forcing</i> your variable to have the same name as the function. Change it."}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 4, "creation_date": 1576492080, "post_id": 59354641, "comment_id": 104904219, "body": "Reverse shadowing example to express the same idea: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=de828d843e285e4b355c95d7d95fda0c\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 2261, "user_id": 8544123, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f32b871be77d8c71efc294359b300367?s=128&d=identicon&r=PG&f=1", "display_name": "Acccumulation", "link": "https://stackoverflow.com/users/8544123/acccumulation"}, "edited": false, "score": 1, "creation_date": 1576520011, "post_id": 59354641, "comment_id": 104918193, "body": "Or, you know, not use the same name for two different objects."}, {"owner": {"reputation": 48201, "user_id": 1250772, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/633e1f643d2c9b043231b4a32b078907?s=128&d=identicon&r=PG", "display_name": "Kaz", "link": "https://stackoverflow.com/users/1250772/kaz"}, "edited": false, "score": 0, "creation_date": 1576520744, "post_id": 59354641, "comment_id": 104918499, "body": "Conceptually hoisted? Looks like a bug to me; scope should be in lexical order. EOF-y side up, not scrambled."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 48201, "user_id": 1250772, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/633e1f643d2c9b043231b4a32b078907?s=128&d=identicon&r=PG", "display_name": "Kaz", "link": "https://stackoverflow.com/users/1250772/kaz"}, "edited": false, "score": 4, "creation_date": 1576521579, "post_id": 59354641, "comment_id": 104918861, "body": "@Kaz In Rust you can call a function disregarding whether it was declared before or after the one in which you are. This isn&#39;t a bug, it&#39;s <i>very</i> convenient"}, {"owner": {"reputation": 48201, "user_id": 1250772, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/633e1f643d2c9b043231b4a32b078907?s=128&d=identicon&r=PG", "display_name": "Kaz", "link": "https://stackoverflow.com/users/1250772/kaz"}, "edited": false, "score": 0, "creation_date": 1576525689, "post_id": 59354641, "comment_id": 104920477, "body": "@DenysS&#233;guret In that case, all identifiers in that namespace should follow the same rule. What if I have a function-valued variable? It should be treated equally with the mix of functions in the same scope."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 8, "last_activity_date": 1576495184, "last_edit_date": 1576495184, "creation_date": 1576491793, "answer_id": 59354641, "question_id": 59353066, "link": "https://stackoverflow.com/questions/59353066/how-do-i-call-the-function-when-a-variable-and-function-have-a-same-name/59354641#59354641", "title": "How do I call the function when a variable and function have a same name?", "body": "<p>This can't be done because you don't have both the function and the integer in scope where you have your <code>println</code>.</p>\n\n<p>Because functions are normally available for the entire scope (i.e. you can use them before their declaration), their declaration is conceptually moved to the start of the scope (they're \"hoisted\").</p>\n\n<p>A consequence is that the function declaration is before the integer variable declaration and is shadowed.</p>\n\n<p>The real fix of your code would depend on your exact situation. Maybe something like this:</p>\n\n<pre><code>fn main() {\n    {\n        let a = 1;\n        // use the integer there\n    }\n    fn a() -&gt; i32 {\n        2\n    }\n    println!(\"{}\", a());\n}\n</code></pre>\n"}], "owner": {"reputation": 366, "user_id": 11492659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e61e264c1094508a0ae578af2fc03e6?s=128&d=identicon&r=PG&f=1", "display_name": "hzqelf", "link": "https://stackoverflow.com/users/11492659/hzqelf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 840, "favorite_count": 1, "accepted_answer_id": 59354641, "answer_count": 1, "score": 9, "last_activity_date": 1576504962, "creation_date": 1576485856, "last_edit_date": 1576504962, "question_id": 59353066, "link": "https://stackoverflow.com/questions/59353066/how-do-i-call-the-function-when-a-variable-and-function-have-a-same-name", "title": "How do I call the function when a variable and function have a same name?", "body": "<p>A variable and function have the same name. How do I call the function?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let a = 1;\n    fn a() -&gt; i32 {\n        2\n    }\n    println!(\"{}\", a());\n}\n</code></pre>\n\n<p>The Rust compiler told me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0618]: expected function, found `{integer}`\n</code></pre>\n\n<p>In other words, the Rust compiler does not call the <code>a</code> function, but instead accesses the <code>a</code> variable.</p>\n"}, {"tags": ["rust", "cors", "rust-actix", "actix-web"], "answers": [{"comments": [{"owner": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "edited": false, "score": 1, "creation_date": 1576480966, "post_id": 59352069, "comment_id": 104899422, "body": "This is fine where I want to allow all. What if I want allow specifically 3 urls? say, abc.com, abc.uk, abc.org?"}, {"owner": {"reputation": 2661, "user_id": 258194, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/62467b12094599c71be45210006c528d?s=128&d=identicon&r=PG", "display_name": "estin", "link": "https://stackoverflow.com/users/258194/estin"}, "reply_to_user": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "edited": false, "score": 1, "creation_date": 1576482378, "post_id": 59352069, "comment_id": 104899844, "body": "chain calls of <code>allowed_origin</code> on each allowed origin"}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 0, "creation_date": 1615225503, "post_id": 59352069, "comment_id": 117620182, "body": "I get <i>error[E0599]: no function or associated item named <code>new</code> found for struct <code>Cors</code> in the current scope</i>"}, {"owner": {"reputation": 2661, "user_id": 258194, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/62467b12094599c71be45210006c528d?s=128&d=identicon&r=PG", "display_name": "estin", "link": "https://stackoverflow.com/users/258194/estin"}, "reply_to_user": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 0, "creation_date": 1615279335, "post_id": 59352069, "comment_id": 117635431, "body": "@EvanCarroll seems like actix-core was updated - use Cors::default() and checkout actual docs <a href=\"https://docs.rs/actix-cors/0.5.4/actix_cors/struct.Cors.html\" rel=\"nofollow noreferrer\">docs.rs/actix-cors/0.5.4/actix_cors/struct.Cors.html</a>"}], "tags": [], "owner": {"reputation": 2661, "user_id": 258194, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/62467b12094599c71be45210006c528d?s=128&d=identicon&r=PG", "display_name": "estin", "link": "https://stackoverflow.com/users/258194/estin"}, "is_accepted": true, "score": 6, "last_activity_date": 1576480642, "creation_date": 1576480642, "answer_id": 59352069, "question_id": 59351973, "link": "https://stackoverflow.com/questions/59351973/how-do-i-configure-actix-web-to-accept-cors-requests-from-any-origin/59352069#59352069", "title": "How do I configure actix-web to accept CORS requests from any origin?", "body": "<p>By default <code>All</code> origins is <a href=\"https://docs.rs/actix-cors/0.2.0-alpha.3/actix_cors/struct.Cors.html#method.allowed_origin\" rel=\"noreferrer\">allowed</a></p>\n\n<p>This is my simple CORS setup (allow all origins and methods + allow send credentials)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>Cors::new().supports_credentials() \n</code></pre>\n\n<p>You can start with it, and disallow methods, origins and headers step-by-step.</p>\n"}], "owner": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2512, "favorite_count": 1, "accepted_answer_id": 59352069, "answer_count": 1, "score": 5, "last_activity_date": 1576506009, "creation_date": 1576480156, "last_edit_date": 1576506009, "question_id": 59351973, "link": "https://stackoverflow.com/questions/59351973/how-do-i-configure-actix-web-to-accept-cors-requests-from-any-origin", "title": "How do I configure actix-web to accept CORS requests from any origin?", "body": "<p>I am building a REST API with actix-web. How do I configure CORS to accept requests from any origin?</p>\n\n<pre><code>Cors::new() // &lt;- Construct CORS middleware builder\n    .allowed_origin(\"localhost:8081\")\n    .allowed_methods(vec![\"GET\", \"POST\"])\n    .allowed_headers(vec![http::header::AUTHORIZATION, http::header::ACCEPT])\n    .allowed_header(http::header::CONTENT_TYPE)\n    .max_age(3600)\n</code></pre>\n\n<p>The above code works from the web at <code>localhost:8081</code>, but not from <code>0.0.0.0:8081</code> or <code>127.0.0.1:8081</code>. I tried <code>\"*\"</code> to allow all, but it's not working. How do I allow all, or at least allow a specific origin and then pass multiple URLs?</p>\n"}, {"tags": ["linux", "process", "rust", "shared-memory"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576448022, "post_id": 59348198, "comment_id": 104893013, "body": "Not relevant to your case, but for those who might accidentally stumble on this question: <a href=\"https://stackoverflow.com/q/33818141/155423\">How do I pass disjoint slices from a vector to different threads?</a>; <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>; <a href=\"https://stackoverflow.com/q/42849210/155423\">How can I mutably share an i32 between threads?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576449782, "post_id": 59348198, "comment_id": 104893409, "body": "What kind of changes -- do they only mutate items in the <code>Vec</code>, or do they add and remove items from the <code>Vec</code> itself?"}, {"owner": {"reputation": 193, "user_id": 10330767, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wp-gWrY7MHM/AAAAAAAAAAI/AAAAAAAAAAc/OKAJPoTHw3M/photo.jpg?sz=128", "display_name": "Mateusz Piwowarski", "link": "https://stackoverflow.com/users/10330767/mateusz-piwowarski"}, "edited": false, "score": 0, "creation_date": 1576450522, "post_id": 59348198, "comment_id": 104893545, "body": "They swap two or more values in my vector."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1576455072, "post_id": 59348198, "comment_id": 104894312, "body": "Are we talking shared between <i>processes</i> or between <i>threads</i>? Threads share memory normally, with processes you have to set it up with system calls and things. It&#39;s a lot more difficult."}, {"owner": {"reputation": 193, "user_id": 10330767, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wp-gWrY7MHM/AAAAAAAAAAI/AAAAAAAAAAc/OKAJPoTHw3M/photo.jpg?sz=128", "display_name": "Mateusz Piwowarski", "link": "https://stackoverflow.com/users/10330767/mateusz-piwowarski"}, "edited": false, "score": 0, "creation_date": 1576485243, "post_id": 59348198, "comment_id": 104900869, "body": "Shared memory between processes."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 1, "last_activity_date": 1576508133, "creation_date": 1576508133, "answer_id": 59359114, "question_id": 59348198, "link": "https://stackoverflow.com/questions/59348198/how-to-use-shared-memory-for-a-vecf64/59359114#59359114", "title": "How to use shared memory for a Vec&lt;f64&gt;?", "body": "<p>There is no way to safely create a <code>Vec</code> backed by shared memory. There are two reasons this is true:</p>\n\n<ol>\n<li><p>A <code>Vec</code> owns its memory and will reallocate it when grown or free it when dropped. Unsafely creating a <code>Vec</code> pointing to <code>mmap</code>ped memory will corrupt the heap when the <code>Vec</code> reallocates or goes out of scope.</p></li>\n<li><p>A <code>Vec</code> has exclusive access to its memory, like a <code>&amp;mut</code> reference. The compiler is free to omit and reorder reads and writes based on the assumption that nothing else is using the memory. If this assumption is broken, the behavior is undefined. To relax this assumption, your data type needs to be something based on <code>UnsafeCell</code>.</p></li>\n</ol>\n\n<p><code>Vec</code> is the wrong pointer for this job. Try <code>&amp;[UnsafeCell&lt;f64&gt;]</code>, or maybe <code>&amp;[AtomicU64]</code> (with conversions using <code>from_bits</code> and <code>to_bits</code>), since there isn't an <code>AtomicF64</code> in the standard library.</p>\n"}], "owner": {"reputation": 193, "user_id": 10330767, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wp-gWrY7MHM/AAAAAAAAAAI/AAAAAAAAAAc/OKAJPoTHw3M/photo.jpg?sz=128", "display_name": "Mateusz Piwowarski", "link": "https://stackoverflow.com/users/10330767/mateusz-piwowarski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 466, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1576508315, "creation_date": 1576445144, "last_edit_date": 1576508315, "question_id": 59348198, "link": "https://stackoverflow.com/questions/59348198/how-to-use-shared-memory-for-a-vecf64", "title": "How to use shared memory for a Vec&lt;f64&gt;?", "body": "<p>Is there any option to use shared memory for <code>Vec&lt;f64&gt;</code> in Rust?</p>\n\n<p>Processes in my program swap two or more values in a <code>Vec&lt;f64&gt;</code> and I need the memory to be shared between processes.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1576437251, "post_id": 59347094, "comment_id": 104890446, "body": "Check the entry api: <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeMap.html#method.entry\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/collections/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 14499, "user_id": 3589092, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/7ROkk.jpg?s=128&g=1", "display_name": "kemicofa ghost", "link": "https://stackoverflow.com/users/3589092/kemicofa-ghost"}, "edited": false, "score": 0, "creation_date": 1576438155, "post_id": 59347306, "comment_id": 104890649, "body": "Ah, so I just needed the right method that provides a mutability? Yes, I did see the <code>or_insert</code> but was trying to keep things simple for now. thanks."}], "tags": [], "owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "is_accepted": true, "score": 4, "last_activity_date": 1576437715, "creation_date": 1576437715, "answer_id": 59347306, "question_id": 59347094, "link": "https://stackoverflow.com/questions/59347094/cannot-borrow-as-mutable-because-it-is-also-borrowed-as-immutable-with-match/59347306#59347306", "title": "&quot;cannot borrow as mutable because it is also borrowed as immutable&quot; with match", "body": "<p>Like Svetlin mentions in a comment, the entry API is your friend. Below I've also removed one unneeded collect.</p>\n\n<pre><code>fn letter_frequency(input: &amp;str) -&gt; BTreeMap&lt;char, i32&gt; {\n    let mut tree = BTreeMap::new();\n    for item in input.chars() {\n        let count = tree.entry(item).or_insert(0);\n        *count += 1;\n    }\n    tree\n}\n</code></pre>\n\n<p>The temporary variable count is not really needed: <code>*tree.entry(item).or_insert(0) += 1;</code> works just fine but might look a bit crowded at first.</p>\n"}], "owner": {"reputation": 14499, "user_id": 3589092, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/7ROkk.jpg?s=128&g=1", "display_name": "kemicofa ghost", "link": "https://stackoverflow.com/users/3589092/kemicofa-ghost"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 0, "closed_date": 1576446138, "accepted_answer_id": 59347306, "answer_count": 1, "score": 0, "last_activity_date": 1576446189, "creation_date": 1576436095, "last_edit_date": 1576446189, "question_id": 59347094, "link": "https://stackoverflow.com/questions/59347094/cannot-borrow-as-mutable-because-it-is-also-borrowed-as-immutable-with-match", "closed_reason": "Duplicate", "title": "&quot;cannot borrow as mutable because it is also borrowed as immutable&quot; with match", "body": "<p>I'm attempting to count the character frequency in a string and store the count of each character in a <code>BTreeMap</code>. However, I'm getting a warning and would like to get rid of it.</p>\n\n<p>This is what I've tried:</p>\n\n<pre><code>use std::collections::BTreeMap;\n\nfn letter_frequency(input: &amp;str) -&gt; BTreeMap&lt;char, i32&gt; {\n    let mut tree: BTreeMap&lt;char, i32&gt; = BTreeMap::new();\n    for item in &amp;input.chars().collect::&lt;Vec&lt;char&gt;&gt;() {\n        match tree.get(item) {\n            Some(count) =&gt; tree.insert(*item, *count + 1),\n            None =&gt; tree.insert(*item, 1)\n        };\n    }\n    tree\n}\n</code></pre>\n\n<p>This is the warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: cannot borrow `tree` as mutable because it is also borrowed as immutable\n --&gt; src/lib.rs:7:28\n  |\n6 |         match tree.get(item) {\n  |               ---- immutable borrow occurs here\n7 |             Some(count) =&gt; tree.insert(*item, *count + 1),\n  |                            ^^^^               ------ immutable borrow later used here\n  |                            |\n  |                            mutable borrow occurs here\n  |\n  = note: #[warn(mutable_borrow_reservation_conflict)] on by default\n  = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future\n  = note: for more information, see issue #59159 &lt;https://github.com/rust-lang/rust/issues/59159&gt;\n</code></pre>\n\n<p>How do I correctly use <code>match</code> with a <code>BTreeMap</code> to avoid the error ?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1576428877, "post_id": 59345962, "comment_id": 104888341, "body": "I am curious how the general problem is solved, yet I think that your concrete problem could be solved simpler by just returning an owned data type from <code>Smf::parse</code>."}, {"owner": {"reputation": 161, "user_id": 12505684, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wI9F5.jpg?s=128&g=1", "display_name": "kastenbutt", "link": "https://stackoverflow.com/users/12505684/kastenbutt"}, "edited": false, "score": 0, "creation_date": 1576431601, "post_id": 59345962, "comment_id": 104889044, "body": "If you look at the <a href=\"https://docs.rs/midly/0.3.0/src/midly/smf.rs.html#23-25\" rel=\"nofollow noreferrer\">source</a> of midly you can see that <code>parse</code> calls <code>read</code> which has this signature: <code>pub fn read(raw: &amp;&#39;a [u8]) -&gt; Result&lt;Smf&lt;&#39;a, T&gt;&gt;</code>. I might be wrong, but the lifetime of the reference might confuse the compiler. Because the resulting Smf struct does not reference <code>raw</code> as far as I can see from the code."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "reply_to_user": {"reputation": 161, "user_id": 12505684, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wI9F5.jpg?s=128&g=1", "display_name": "kastenbutt", "link": "https://stackoverflow.com/users/12505684/kastenbutt"}, "edited": false, "score": 0, "creation_date": 1576432372, "post_id": 59345962, "comment_id": 104889275, "body": "@kastenbutt If you&#39;re right, then this is the bug in midly. But I&#39;m not so sure that there is really no reference (with only a brief look on the source code)."}, {"owner": {"reputation": 161, "user_id": 12505684, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wI9F5.jpg?s=128&g=1", "display_name": "kastenbutt", "link": "https://stackoverflow.com/users/12505684/kastenbutt"}, "edited": false, "score": 0, "creation_date": 1576448140, "post_id": 59345962, "comment_id": 104893046, "body": "I had another look at the code of midly. <code>Smf</code> uses <code>Event</code>, which uses <code>EventKind</code> which in turn keeps a reference to the raw-data. So, this is not a bug but unexpected for a user of midly nevertheless. To work around this you need to keep ownership of <code>data</code> yourself as long as the Smf instance you created from the <code>data</code> is alive."}, {"owner": {"reputation": 11, "user_id": 12541223, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-pFZ6ypwN4V0/AAAAAAAAAAI/AAAAAAAAABk/bQFMGD6w8tY/photo.jpg?sz=128", "display_name": "Harald Rieder", "link": "https://stackoverflow.com/users/12541223/harald-rieder"}, "edited": false, "score": 0, "creation_date": 1576504671, "post_id": 59345962, "comment_id": 104910552, "body": "Thank you for the link with the detailed answer. So maybe the ownig_ref crate could help. But how to tell a non-rusticean the reason for all that additional code? midly has those references to the raw data though you might not be interested at all in them. Perhaps I&#39;ll give nom_midi a try, though the documentation is very short."}, {"owner": {"reputation": 11, "user_id": 12541223, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-pFZ6ypwN4V0/AAAAAAAAAAI/AAAAAAAAABk/bQFMGD6w8tY/photo.jpg?sz=128", "display_name": "Harald Rieder", "link": "https://stackoverflow.com/users/12541223/harald-rieder"}, "edited": false, "score": 0, "creation_date": 1576504964, "post_id": 59345962, "comment_id": 104910689, "body": "Thanks to all, I learned much now."}], "owner": {"reputation": 11, "user_id": 12541223, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-pFZ6ypwN4V0/AAAAAAAAAAI/AAAAAAAAABk/bQFMGD6w8tY/photo.jpg?sz=128", "display_name": "Harald Rieder", "link": "https://stackoverflow.com/users/12541223/harald-rieder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 47, "favorite_count": 0, "closed_date": 1576433318, "answer_count": 0, "score": 1, "last_activity_date": 1576433359, "creation_date": 1576428313, "last_edit_date": 1576433359, "question_id": 59345962, "link": "https://stackoverflow.com/questions/59345962/how-to-return-a-structure-referencing-a-buffer-and-the-buffer-from-a-function", "closed_reason": "Duplicate", "title": "How to return a structure referencing a buffer and the buffer from a function?", "body": "<p>I want to use the midly crate for standard MIDI file (SMF) parsing. The parse function I want to call has this signature:</p>\n\n<pre><code>pub fn parse(raw: &amp;[u8]) -&gt; Result&lt;Smf&gt; \n</code></pre>\n\n<p>When I try this</p>\n\n<pre><code>pub fn read0(path: &amp;str) -&gt; Smf {\n    let data = fs::read(path).unwrap(); // a Vec&lt;u8&gt;\n    Smf::parse(&amp;data).unwrap()\n}\n</code></pre>\n\n<p>I get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>34 |     Smf::parse(&amp;data).unwrap()\n   |     ^^^^^^^^^^^-----^^^^^^^^^^\n   |     |          |\n   |     |          `data` is borrowed here\n   |     returns a value referencing data owned by the current function\n</code></pre>\n\n<p>So the idea is to return both the data buffer and the parsed Smf together:</p>\n\n<pre><code>pub struct Ret2&lt;'a&gt; {\n    data: Vec&lt;u8&gt;,\n    smf: Smf&lt;'a&gt;,\n}\n\npub fn read2(path: &amp;str) -&gt; Ret2 {\n    let data = fs::read(path).unwrap();\n    let smf = Smf::parse(&amp;data).unwrap();\n    Ret2 {data, smf}\n}\n</code></pre>\n\n<p>But this does not work, since the compiler seems not to understand that both are returned together and complains about every item individually:</p>\n\n<pre><code>error[E0515]: cannot return value referencing local variable `data`\n  --&gt; src/bin/../midifile.rs:57:5\n   |\n56 |     let smf = Smf::parse(&amp;data).unwrap();\n   |                          ----- `data` is borrowed here\n57 |     Ret2 {data, smf}\n   |     ^^^^^^^^^^^^^^^^ returns a value referencing data owned by the current function\n\nerror[E0505]: cannot move out of `data` because it is borrowed\n  --&gt; src/bin/../midifile.rs:57:11\n   |\n54 | pub fn read2(path: &amp;str) -&gt; Ret2 {\n   |                    - let's call the lifetime of this reference `'1`\n55 |     let data = fs::read(path).unwrap();\n56 |     let smf = Smf::parse(&amp;data).unwrap();\n   |                          ----- borrow of `data` occurs here\n57 |     Ret2 {data, smf}\n   |     ------^^^^------\n   |     |     |\n   |     |     move out of `data` occurs here\n   |     returning this value requires that `data` is borrowed for `'1`\n</code></pre>\n\n<p>How must this be done in Rust?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576440513, "post_id": 59342983, "comment_id": 104891272, "body": "I notice that the <code>.clone()</code> does nothing useful -- because <code>next()</code> returns <code>Option&lt;(&amp;K, &amp;V)&gt;</code>, it just copies the references. If you wanted to get an <code>Option&lt;(K, V)&gt;</code> by cloning you would need something like <code>.map(|(k, v)| (k.clone(), v.clone()))</code> (but it seems unlikely you would need to)."}, {"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 2, "creation_date": 1576492563, "post_id": 59342983, "comment_id": 104904457, "body": "very similar to <a href=\"https://stackoverflow.com/q/45724517/5986907\">stackoverflow.com/q/45724517/5986907</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576590067, "post_id": 59342983, "comment_id": 104943286, "body": "Does edwardw&#39;s answer work for you or are you still waiting for something different?"}, {"owner": {"reputation": 1330, "user_id": 78931, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/819f593d43579eff5fa5a38f69969d08?s=128&d=identicon&r=PG", "display_name": "makapuf", "link": "https://stackoverflow.com/users/78931/makapuf"}, "edited": false, "score": 0, "creation_date": 1576603787, "post_id": 59342983, "comment_id": 104950624, "body": "not exactly, I wasn&#39;t very clear : I updated the title and (bad) example to better reflect my intentions : consume elements from the map, and maybe add back"}, {"owner": {"reputation": 1330, "user_id": 78931, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/819f593d43579eff5fa5a38f69969d08?s=128&d=identicon&r=PG", "display_name": "makapuf", "link": "https://stackoverflow.com/users/78931/makapuf"}, "edited": false, "score": 0, "creation_date": 1576617721, "post_id": 59342983, "comment_id": 104956447, "body": "I guess this was a translation error from my side. Since the answer was interesting and did correspond the original, different question, I will revert my edit, choose an answer and then post a new question."}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 4, "last_activity_date": 1576427513, "last_edit_date": 1576427513, "creation_date": 1576408396, "answer_id": 59343309, "question_id": 59342983, "link": "https://stackoverflow.com/questions/59342983/how-to-process-every-value-in-a-hashmap-and-optionally-reject-some/59343309#59343309", "title": "How to process every value in a HashMap and optionally reject some?", "body": "<p>This looks like an awfully good fit for <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.filter_map\" rel=\"nofollow noreferrer\"><code>Iterator::filter_map</code></a>:</p>\n\n<blockquote>\n  <p>The closure must return an <code>Option&lt;T&gt;</code>. <code>filter_map</code> creates an iterator which calls this closure on each element. If the closure returns <code>Some(element)</code>, then that element is returned. If the closure returns <code>None</code>, it will try again, and call the closure on the next element, seeing if it will return <code>Some</code>.</p>\n</blockquote>\n\n<p>The following <code>process_and_maybe_add</code> is very simple, but you get the idea:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nfn main() {\n    let mut data = HashMap::new();\n    data.insert(1, \"a\");\n    data.insert(2, \"b\");\n    data.insert(3, \"c\");\n\n    let processed = data\n        .into_iter()\n        .filter_map(process_and_maybe_add)\n        .collect::&lt;HashMap&lt;_, _&gt;&gt;();\n    dbg!(processed);\n}\n\nfn process_and_maybe_add((k, v): (u32, &amp;str)) -&gt; Option&lt;(u32, String)&gt; {\n    if k % 2 != 0 {\n        Some((k + 100, v.to_owned() + v))\n    } else {\n        None\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1330, "user_id": 78931, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/819f593d43579eff5fa5a38f69969d08?s=128&d=identicon&r=PG", "display_name": "makapuf", "link": "https://stackoverflow.com/users/78931/makapuf"}, "edited": false, "score": 0, "creation_date": 1576443956, "post_id": 59343440, "comment_id": 104892128, "body": "interesting, but the goal of my processing step is that in some cases, I need to <i>add</i> elements to to_process (say like with a list of possible options)."}, {"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "reply_to_user": {"reputation": 1330, "user_id": 78931, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/819f593d43579eff5fa5a38f69969d08?s=128&d=identicon&r=PG", "display_name": "makapuf", "link": "https://stackoverflow.com/users/78931/makapuf"}, "edited": false, "score": 0, "creation_date": 1576493028, "post_id": 59343440, "comment_id": 104904710, "body": "@makapuf you should update the question and title to reflect that - the comment in your code snippet is off screen and not obvious"}], "tags": [], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "is_accepted": true, "score": 5, "last_activity_date": 1593550512, "last_edit_date": 1593550512, "creation_date": 1576409298, "answer_id": 59343440, "question_id": 59342983, "link": "https://stackoverflow.com/questions/59342983/how-to-process-every-value-in-a-hashmap-and-optionally-reject-some/59343440#59343440", "title": "How to process every value in a HashMap and optionally reject some?", "body": "<p><strong>Note</strong> If you need to alter keys or add kvps to the <code>HashMap</code> during processing, see @edwardw's answer. Otherwise ...</p>\n<p>Use <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.retain\" rel=\"nofollow noreferrer\"><code>HashMap::retain</code></a>. You can change your process function to return a <code>bool</code> indicating whether to keep that key value pair. For example</p>\n<pre><code>let mut to_process: HashMap&lt;u32, String&gt; = HashMap::new();\nto_process.insert(1, &quot;ok&quot;.to_string());\nto_process.insert(2, &quot;bad&quot;.to_string());\n\nto_process.retain(process);\n    \nfn process(k: &amp;u32, v: &amp;mut String) -&gt; bool {\n    // do stuff with k and v\n    v == &quot;ok&quot;\n}\n</code></pre>\n"}], "owner": {"reputation": 1330, "user_id": 78931, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/819f593d43579eff5fa5a38f69969d08?s=128&d=identicon&r=PG", "display_name": "makapuf", "link": "https://stackoverflow.com/users/78931/makapuf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 188, "favorite_count": 0, "accepted_answer_id": 59343440, "answer_count": 2, "score": 3, "last_activity_date": 1593550512, "creation_date": 1576405651, "last_edit_date": 1576617864, "question_id": 59342983, "link": "https://stackoverflow.com/questions/59342983/how-to-process-every-value-in-a-hashmap-and-optionally-reject-some", "title": "How to process every value in a HashMap and optionally reject some?", "body": "<p>I would like to process the values from a <code>HashMap</code> one by one, while maybe removing some of them.</p>\n\n<p>For example, I would like to do an equivalent of: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nfn example() {\n    let mut to_process = HashMap::new();\n    to_process.insert(1, true);\n\n    loop {\n        // get an arbitrary element\n        let ans = to_process.iter().next().clone(); // get an item from the hash\n        match ans {\n            Some((k, v)) =&gt; {\n                if condition(&amp;k,&amp;v) {\n                    to_process.remove(&amp;k);\n                }\n            }\n            None =&gt; break, // work finished\n        }\n    }\n}\n</code></pre>\n\n<p>But this fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `to_process` as mutable because it is also borrowed as immutable\n  --&gt; src/lib.rs:12:17\n   |\n9  |         let ans = to_process.iter().next().clone();\n   |                   ---------- immutable borrow occurs here\n...\n12 |                 to_process.remove(&amp;k);\n   |                 ^^^^^^^^^^^------^^^^\n   |                 |          |\n   |                 |          immutable borrow later used by call\n   |                 mutable borrow occurs here\n</code></pre>\n\n<p>I know I really would need <a href=\"https://github.com/rust-lang/rust/issues/27804\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/27804</a> (which is for <code>HashSet</code> but for <code>HashMap</code> would be the same)\nand I cannot implement the provided solutions without having a non-mut and mutable reference still or using unsafe. </p>\n\n<p>Is there a simple way I am missing?</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 3221, "user_id": 2245634, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/OHoy2.jpg?s=128&g=1", "display_name": "Amit\u0101bha", "link": "https://stackoverflow.com/users/2245634/amit%c4%81bha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 302, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1576365320, "creation_date": 1576365320, "question_id": 59339977, "link": "https://stackoverflow.com/questions/59339977/nightly-x86-64-pc-windows-gnu-error-reading-rustc-version", "title": "nightly-x86_64-pc-windows-gnu error reading rustc version", "body": "<p>i encountered an error when i switch to nightly-x86_64-pc-windows-gnu\n    rustup default nightly-x86_64-pc-windows-gnu\n    info: using existing install for 'nightly-x86_64-pc-windows-gnu'\n    info: default toolchain set to 'nightly-x86_64-pc-windows-gnu'</p>\n\n<pre><code>  nightly-x86_64-pc-windows-gnu unchanged - (error reading rustc version)\n\nrustc -V\nrustc 1.41.0-nightly (ff15e9670 2019-12-13)\n</code></pre>\n\n<p>the rust code report error</p>\n\n<pre><code>    D:/cargo/bin/cargo.exe run --color=always --package testrust --bin testrust\n    error: process didn't exit successfully: `rustc -vV` (exit code: 0xc0000139, STATUS_ENTRYPOINT_NOT_FOUND)\n\nProcess finished with exit code 101\n</code></pre>\n\n<p>but when i switch to nightly-x86_64-pc-windows-msvc,nothing happened.</p>\n\n<pre><code>rustup default nightly-x86_64-pc-windows-msvc\ninfo: using existing install for 'nightly-x86_64-pc-windows-msvc'\ninfo: default toolchain set to 'nightly-x86_64-pc-windows-msvc'\n\n  nightly-x86_64-pc-windows-msvc unchanged - rustc 1.41.0-nightly (ff15e9670 2019-12-13)\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/43903157/error-rust-syncing-channel-updates-nightly-error-reading-rustc-version\">Error rust syncing channel updates 'nightly \u2014 (error reading rustc version)'</a>\nI imitated his solution, but it didn't work</p>\n\n<pre><code>rustup override set nightly-x86_64-pc-windows-gnu\ninfo: using existing install for 'nightly-x86_64-pc-windows-gnu'\ninfo: override toolchain for 'D:\\cygwin64new\\home\\wangyiran' set to 'nightly-x86_64-pc-windows-gnu'\n\n  nightly-x86_64-pc-windows-gnu unchanged - (error reading rustc version)\n</code></pre>\n"}, {"tags": ["rust", "sandbox", "gaol"], "comments": [{"owner": {"reputation": 1290, "user_id": 638661, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/wfsac.png?s=128&g=1", "display_name": "Makoto", "link": "https://stackoverflow.com/users/638661/makoto"}, "edited": false, "score": 0, "creation_date": 1580147311, "post_id": 59339269, "comment_id": 105994355, "body": "This question is technically about gaol, but if someone has a solution using Rust in general, it would be appreciated!"}], "owner": {"reputation": 1290, "user_id": 638661, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/wfsac.png?s=128&g=1", "display_name": "Makoto", "link": "https://stackoverflow.com/users/638661/makoto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1576374251, "creation_date": 1576358737, "last_edit_date": 1576374251, "question_id": 59339269, "link": "https://stackoverflow.com/questions/59339269/is-there-a-way-to-count-and-limit-the-number-of-instructions-run-by-gaol", "title": "Is there a way to count and limit the number of instructions run by gaol?", "body": "<p>I want to use the sandbox application <a href=\"https://github.com/servo/gaol\" rel=\"nofollow noreferrer\">gaol</a> as a way to isolate code running for distributed consensus. Is there a way to count and limit the number of instructions run by the gaol sandbox so that I can kill the sandbox process after a finite instruction limit?</p>\n"}, {"tags": ["multithreading", "performance", "rust", "hashmap", "lock-free"], "comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1576352297, "post_id": 59338406, "comment_id": 104874713, "body": "&quot;latch-free&quot;?  I think you mean lock-free, unless you have a specific technical meaning in mind that I&#39;m not aware of.  Anyway, if all your threads spend all their time hammering on your lock-free data structure, yes you&#39;ll get contention once you have enough threads that PRNG time isn&#39;t a factor, and maybe start hitting more CAS retries and stuff like that.  This is not the normal use-case for lock-free data structures; usually your code does significant work <i>other</i> than hammering on these."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576352389, "post_id": 59338406, "comment_id": 104874733, "body": "<i>is my Rust code correct for multithreading</i> \u2014 yes, it starts multiple threads and doesn&#39;t generate memory unsafety, so it seems <b>correct</b>. If this were a an answer instead of a comment, would you accept it? If not, please consider reviewing your post and see if you are asking the question you want to and if you&#39;ve provided enough information in the post for it to be answered."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1576352503, "post_id": 59338406, "comment_id": 104874768, "body": "I don&#39;t see code for your hashmap so perf analysis of its design isn&#39;t possible.  Unless this is a standard library implementation?  I don&#39;t know Rust well at all, maybe I&#39;m missing something in your code that shows which HashMap you&#39;re using."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1576352686, "post_id": 59338406, "comment_id": 104874810, "body": "@PeterCordes no, Rust does not offer a lock-free implementation in the standard library. OP also states &quot;I&#39;m creating&quot;, which I take to mean that they are writing the code from scratch. The code does really provide any useful information; it&#39;s not even clear how the threads are being spawned as no imports are shown."}, {"owner": {"reputation": 31, "user_id": 12498533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53e63b7fef6bc40567989c0490352662?s=128&d=identicon&r=PG&f=1", "display_name": "Jack Truskowski", "link": "https://stackoverflow.com/users/12498533/jack-truskowski"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1576353434, "post_id": 59338406, "comment_id": 104874979, "body": "@PeterCordes thanks, I think that is the answer I was looking for. I am doing this as part of a research project, so right now my benchmarks are a bit contrived. I can edit to include the actual data structure itself but it is basically a Rust port of a C++ implementation that is well-studied."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1576355098, "post_id": 59338406, "comment_id": 104875367, "body": "(I made a couple edits just as you accepted the answer.  I think it&#39;s more correct now.)"}], "answers": [{"tags": [], "owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "is_accepted": true, "score": 4, "last_activity_date": 1576355020, "last_edit_date": 1576355020, "creation_date": 1576354715, "answer_id": 59338800, "question_id": 59338406, "link": "https://stackoverflow.com/questions/59338406/performance-degradation-for-high-numbers-of-threads-in-rust/59338800#59338800", "title": "Performance degradation for high numbers of threads in Rust", "body": "<p>If all your threads spend all their time hammering on your lock-free data structure, yes you'll get contention once you have enough threads.  With enough writers they'll contend for the same cache line in the table more often.  (Also, possibly time spent in the PRNG doesn't hide contention for shared bandwidth to cache or DRAM).</p>\n\n<p>Instead of just a plateau, you'll maybe start hitting more CAS retries and stuff like that, including any contention backoff mechanism.  Also, threads will suffer cache misses and even <a href=\"https://stackoverflow.com/questions/55563077/why-flush-the-pipeline-for-memory-order-violation-caused-by-other-logical-proces\">memory-order mis-speculation pipeline clears</a> from some atomic reads; not everything will be atomic RMWs or writes.</p>\n\n<p>This is not the normal use-case for lock-free data structures; usually you use them with code that does significant work other than hammering on them, so actual contention is low.  Also, real workloads for a hashmap are rarely write-only (although that can happen if you just want to deduplicate something).</p>\n\n<p>Read scales very well with number of readers, but write will hit contention.</p>\n"}], "owner": {"reputation": 31, "user_id": 12498533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53e63b7fef6bc40567989c0490352662?s=128&d=identicon&r=PG&f=1", "display_name": "Jack Truskowski", "link": "https://stackoverflow.com/users/12498533/jack-truskowski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 199, "favorite_count": 0, "accepted_answer_id": 59338800, "answer_count": 1, "score": 1, "last_activity_date": 1576355020, "creation_date": 1576351397, "last_edit_date": 1576352321, "question_id": 59338406, "link": "https://stackoverflow.com/questions/59338406/performance-degradation-for-high-numbers-of-threads-in-rust", "title": "Performance degradation for high numbers of threads in Rust", "body": "<p>I'm creating a latch-free concurrent <code>HashMap</code> in Rust. The throughput curve looks as I would expect up to around 16 threads, at which point performance beings to drop.</p>\n\n<p>Throughput (MOps/sec) vs. Num threads</p>\n\n<p><img src=\"https://i.stack.imgur.com/GCwG3.png\" alt=\"Throughput (MOps/sec) vs. Num threads\"></p>\n\n<p>I used a Google Cloud instance with 48 vCPUs and 200GB RAM. I tried enabling/disabling hyperthreading but it had no noticeable result.</p>\n\n<p>Here's how I'm spawning the threads:</p>\n\n<pre><code>for i in 0..num_threads {\n    //clone the shared data structure\n    let ht = Arc::clone(&amp;ht);\n\n    let handle = thread::spawn(move || {\n        for j in 0..adds_per_thread {\n            //randomly generate and add a (key, value)\n            let key = thread_rng().gen::&lt;u32&gt;();\n            let value = thread_rng().gen::&lt;u32&gt;();\n            ht.set_item(key, value);\n        }\n    });\n\n    handles.push(handle);\n}\n\nfor handle in handles {\n    handle.join().unwrap();\n}\n</code></pre>\n\n<p>I'm out of ideas; is my Rust code correct for multithreading? </p>\n"}, {"tags": ["enums", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": false, "score": 0, "last_activity_date": 1576348866, "creation_date": 1576348866, "answer_id": 59338084, "question_id": 59337875, "link": "https://stackoverflow.com/questions/59337875/the-trait-bound-ioerror-clone-is-not-satisfied-when-implementing-a-custom-err/59338084#59338084", "title": "The trait bound io::Error: Clone is not satisfied when implementing a custom error enum", "body": "<p>The error occurs because you're attempting to derive a <code>Clone</code> implementation for <code>MemtableError</code>, but <code>std::io::Error</code> (the type of one of the values that your <code>MemtableError</code> can store) doesn't implement <code>Clone</code> itself. If cloning isn't required, I'd change it to simply be <code>#[derive(Debug)]</code>. Otherwise, we'll need more context on your use case to suggest a more specific fix.</p>\n"}, {"tags": [], "owner": {"reputation": 161, "user_id": 12505684, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wI9F5.jpg?s=128&g=1", "display_name": "kastenbutt", "link": "https://stackoverflow.com/users/12505684/kastenbutt"}, "is_accepted": false, "score": 0, "last_activity_date": 1576350236, "creation_date": 1576350236, "answer_id": 59338274, "question_id": 59337875, "link": "https://stackoverflow.com/questions/59337875/the-trait-bound-ioerror-clone-is-not-satisfied-when-implementing-a-custom-err/59338274#59338274", "title": "The trait bound io::Error: Clone is not satisfied when implementing a custom error enum", "body": "<p>In your MemtableError-enum you use <code>std::io::error</code> which does not implement Clone. That's what the error message is saying. You should also get the same error about <code>std::string::FromUtf8Error</code>.</p>\n\n<p>To solve this issue you can either remove <code>Clone</code> from your derive-macro. Or you need to explicitly implement Clone on your error-type. This however wont work in the current setup, because io::Error uses a trait object (<code>Box&lt;dyn Error + Send + Sync&gt;</code>) internally. And this trait object cannot be cloned. See this <a href=\"https://github.com/rust-lang/rust/issues/24135\" rel=\"nofollow noreferrer\">issue</a>. A workaround would be to put <code>std::io::Error</code> and <code>std::string::FromUtf8Error</code> in a <code>Rc</code> or <code>Arc</code>:</p>\n\n<pre><code>#[derive(Debug, Clone)]\npub enum MemtableError {\n    Io(std::rc::Rc&lt;io::Error&gt;),\n    FromUTF8(std::rc::Rc&lt;std::string::FromUtf8Error&gt;),\n    NotFound,\n}\n</code></pre>\n\n<p>To see if this is a reasonable way to solve this issue we need to know more about the rest of your code.</p>\n\n<p>So, the easiest fix is to remove <code>Clone</code>. Otherwise work with <code>Rc</code>/<code>Arc</code>.</p>\n"}], "owner": {"reputation": 645, "user_id": 3891733, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/7f6392b706d2eeff54c4b6656f9d4225?s=128&d=identicon&r=PG&f=1", "display_name": "Nimrodshn", "link": "https://stackoverflow.com/users/3891733/nimrodshn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 906, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1576350285, "creation_date": 1576347342, "last_edit_date": 1576350285, "question_id": 59337875, "link": "https://stackoverflow.com/questions/59337875/the-trait-bound-ioerror-clone-is-not-satisfied-when-implementing-a-custom-err", "title": "The trait bound io::Error: Clone is not satisfied when implementing a custom error enum", "body": "<p>I am receiving the following error when implementing a custom error type: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait bound `std::io::Error: std::clone::Clone` is not satisfied\n</code></pre>\n\n<p>Here is my custom error enum:</p>\n\n<pre><code>use std::fmt;\nuse std::io;\nuse crate::memtable::Memtable;\n\n// Define our error types. These may be customized for our error handling cases.\n// Now we will be able to write our own errors, defer to an underlying error\n// implementation, or do something in between.\n#[derive(Debug, Clone)]\npub enum MemtableError {\n    Io(io::Error),\n    FromUTF8(std::string::FromUtf8Error),\n    NotFound,\n}\n\n// Generation of an error is completely separate from how it is displayed.\n// There's no need to be concerned about cluttering complex logic with the display style.\n//\n// Note that we don't store any extra info about the errors. This means we can't state\n// which string failed to parse without modifying our types to carry that information.\nimpl fmt::Display for MemtableError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Some error occurred!\");\n        Ok(())\n    }\n}\n\n// a test function that returns our error result\nfn raises_my_error(memtable: Memtable, key: String) -&gt; Result&lt;(),MemtableError&gt; {\n    match memtable.read(key) {\n        Ok(v) =&gt; Ok(()),\n        Err(e) =&gt; Err(e),\n    }\n}\n</code></pre>\n\n<p>What am I doing wrong? I tried following these examples: </p>\n\n<ol>\n<li><a href=\"https://doc.rust-lang.org/rust-by-example/error/multiple_error_types/define_error_type.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/rust-by-example/error/multiple_error_types/define_error_type.html</a></li>\n<li><a href=\"https://learning-rust.github.io/docs/e7.custom_error_types.html\" rel=\"nofollow noreferrer\">https://learning-rust.github.io/docs/e7.custom_error_types.html</a></li>\n<li><a href=\"https://doc.rust-lang.org/rust-by-example/error/multiple_error_types/wrap_error.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/rust-by-example/error/multiple_error_types/wrap_error.html</a></li>\n</ol>\n"}, {"tags": ["post", "rust", "multipartform-data", "move-semantics", "actix-web"], "owner": {"reputation": 170, "user_id": 3081330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ddc4e0f8de5fee9aa3cb4bf31a9b563?s=128&d=identicon&r=PG&f=1", "display_name": "Ripread", "link": "https://stackoverflow.com/users/3081330/ripread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 115, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1576346841, "creation_date": 1576344297, "last_edit_date": 1576346841, "question_id": 59337466, "link": "https://stackoverflow.com/questions/59337466/is-it-possible-to-send-a-response-before-fully-transferring-a-large-post-request", "title": "Is it possible to send a response before fully transferring a large POST request using Actix-Multipart?", "body": "<p>I'm looking at the <a href=\"https://github.com/actix/examples/blob/5ffbaacdcea0814aad90ec21f6498c25fa0aad38/multipart/src/main.rs\" rel=\"nofollow noreferrer\">actix-multipart example</a> and there's a lot of blocking file IO. Is it possible to send a response before downloading the file? Multipart isn't <code>Send</code>. I want to do something like this:</p>\n\n<pre><code>async fn save_file(mut payload: Multipart) -&gt; Result&lt;HttpResponse, Error&gt; {\n    async_std::task::spawn(async {\n        // iterate over multipart stream\n        while let Some(item) = payload.next().await {\n            let mut field = item?;\n            let content_type = field.content_disposition().unwrap();\n            let filename = content_type.get_filename().unwrap();\n            let filepath = format!(\"./tmp/{}\", filename);\n            // File::create is blocking operation, use threadpool\n            let mut f = web::block(|| std::fs::File::create(filepath))\n                .await\n                .unwrap();\n            // Field in turn is stream of *Bytes* object\n            while let Some(chunk) = field.next().await {\n                let data = chunk.unwrap();\n                // filesystem operations are blocking, we have to use threadpool\n                f = web::block(move || f.write_all(&amp;data).map(|_| f)).await?;\n            }\n        }\n    });\n    Ok(HttpResponse::Ok().into())\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 66560, "user_id": 9072753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EPmGy.jpg?s=128&g=1", "display_name": "KamilCuk", "link": "https://stackoverflow.com/users/9072753/kamilcuk"}, "is_accepted": true, "score": 3, "last_activity_date": 1576341704, "creation_date": 1576341704, "answer_id": 59337118, "question_id": 59337007, "link": "https://stackoverflow.com/questions/59337007/what-is-the-recommended-way-to-install-the-binaries-built-by-cargo-for-packaging/59337118#59337118", "title": "What is the recommended way to install the binaries built by Cargo for packaging purposes?", "body": "<blockquote>\n  <p>How to access binaries built by cargo?</p>\n</blockquote>\n\n<p>The <code>cargo install --path . --root $(pwd)/i</code> is the correct way to specify the destination installation directory. </p>\n\n<blockquote>\n  <p>but it seems to be impossible to set flags like --release or its opposite variant (yes: I want the debug binary!)</p>\n</blockquote>\n\n<p>It's possible with the <code>--debug</code> flag.</p>\n\n<pre><code>cargo install --debug --path . --root $(pwd)/i\n</code></pre>\n\n<p>See <a href=\"https://www.systutorials.com/docs/linux/man/1-cargo-install/\" rel=\"nofollow noreferrer\">cargo install manual</a>.</p>\n"}], "owner": {"reputation": 5867, "user_id": 2252087, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/020cbe41b02f03d59f3adae022c0ce7d?s=128&d=identicon&r=PG", "display_name": "ensc", "link": "https://stackoverflow.com/users/2252087/ensc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 59337118, "answer_count": 1, "score": 1, "last_activity_date": 1576341911, "creation_date": 1576340886, "last_edit_date": 1576341911, "question_id": 59337007, "link": "https://stackoverflow.com/questions/59337007/what-is-the-recommended-way-to-install-the-binaries-built-by-cargo-for-packaging", "title": "What is the recommended way to install the binaries built by Cargo for packaging purposes?", "body": "<p>How can I access the generated <code>foo</code> binary when I have this in my Cargo.toml?</p>\n\n<pre><code>[[bin]]\nname = \"foo\"\npath = \"src/foo.rs\"\n</code></pre>\n\n<p>Ideally I would like to have something which works like</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>make install DESTDIR=$(pwd)/i\n</code></pre>\n\n<p>I tried:</p>\n\n<ul>\n<li><p><code>cargo build --out-dir $(pwd)/i</code>  --> fails with \"error: the <code>--out-dir</code> flag is unstable\"</p></li>\n<li><p><code>cargo install --path . --root $(pwd)/i</code> --> comes near to the result, but it seems to be impossible to set flags like <code>--release</code> or its opposite variant (yes, I want the debug binary!)</p></li>\n<li><p><code>OUT_DIR=$(pwd)/i cargo build</code>  --> does not seem to have any effect as there is no directory generated</p></li>\n</ul>\n\n<p>I could dig into the target directory, but there are a lot of unwanted files so globs will not work and I will have to know exactly the artifact name, including automatic suffices like <code>.a</code>, <code>.so</code>, <code>.so.1.2.3</code>, etc.</p>\n"}, {"tags": ["for-loop", "rust", "iterator"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576331066, "post_id": 59332811, "comment_id": 104869324, "body": "I don&#39;t actually think this is a duplicate, because the other question&#39;s iterator is a &quot;true&quot; iterator -- there&#39;s no way to skip 2 items except by calling <code>next()</code> twice. This case is narrower, and Lukas&#39;s answer is a good answer for this question, but does not apply to the other one."}], "answers": [{"comments": [{"owner": {"reputation": 2617, "user_id": 3697870, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/krATc.jpg?s=128&g=1", "display_name": "Heath Raftery", "link": "https://stackoverflow.com/users/3697870/heath-raftery"}, "edited": false, "score": 0, "creation_date": 1576395390, "post_id": 59333742, "comment_id": 104881389, "body": "Keeping a mutable skip counter outside the loop scope was my next ugliest solution too! Really appreciate this answer thanks to &quot;<code>for</code> loops are for the common case...&quot; - helped adjust my expectations of a <code>for</code> loop, and consider it intwined with the (limited and powerful) world of iterators. Performing functional computer science tasks is the least common case for me and side effects are usually my goal, so this has helped tune my aim."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1576314532, "creation_date": 1576314532, "answer_id": 59333742, "question_id": 59332811, "link": "https://stackoverflow.com/questions/59332811/skipping-elements-while-iterating-over-a-slice-with-a-for-loop/59333742#59333742", "title": "Skipping elements while iterating over a slice with a for loop", "body": "<p>There aren't really any better options. I could still think of this:</p>\n\n<pre><code>let mut skip = 0;\nfor (i, val) in vals.iter().enumerate() {\n    if skip &gt; 0 {\n        skip -= 1;\n        continue;\n    }\n\n    println!(\"{}: {}\", i, val);\n\n    skip = match val {\n        1 =&gt; 2,\n        2 =&gt; 4,\n        _ =&gt; 0,\n    };\n}\n</code></pre>\n\n<p>But that's not necessarily better than the ideas you already had.</p>\n\n<p>The reason there is no \"nice\" solution for that is simply because this use case is very rare. <code>for</code> loops are for the common case of completely iterating through an iterator. For situations where you need to have some more complex \"advance iterator\" logic, <code>while</code> and <code>loop</code> loops are there for you. Those loops are not \"bad\", they are exactly for these kinds of situations.</p>\n\n<p>I think your <code>while</code> loop solution is perfectly fine!</p>\n"}], "owner": {"reputation": 2617, "user_id": 3697870, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/krATc.jpg?s=128&g=1", "display_name": "Heath Raftery", "link": "https://stackoverflow.com/users/3697870/heath-raftery"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 373, "favorite_count": 0, "closed_date": 1576347137, "accepted_answer_id": 59333742, "answer_count": 1, "score": 3, "last_activity_date": 1576331251, "creation_date": 1576304323, "last_edit_date": 1576331251, "question_id": 59332811, "link": "https://stackoverflow.com/questions/59332811/skipping-elements-while-iterating-over-a-slice-with-a-for-loop", "closed_reason": "Duplicate", "title": "Skipping elements while iterating over a slice with a for loop", "body": "<p>In Rust, how does one do variable sized steps in a <code>for</code> style loop? I'm able to do fixed sized steps with this construct:</p>\n\n<pre><code>for i in (0..vals.len()).step_by(4)\n{\n    println!(\"{}: {}\", i, vals[i]);\n}\n</code></pre>\n\n<p>or the more proper:</p>\n\n<pre><code>for (i,val) in vals.iter().enumerate().step_by(4)\n{\n    println!(\"{}: {}\", i, val);\n}\n</code></pre>\n\n<p>but what I'd really like to do is something like:</p>\n\n<pre><code>for i in 0..vals.len()\n{\n    println!(\"{}: {}\", i, vals[i]);\n    if      vals[i] == 1 { i += 2; }\n    else if vals[i] == 2 { i += 4; }\n}\n</code></pre>\n\n<p>but of course, modifying <code>i</code> doesn't affect the loop iterator.</p>\n\n<p>Coming from a primarily C background, the reliance on iterators in modern languages often feels like programming with mitts on. Usually Google comes to the rescue, but I haven't found any solution to what seems like a fairly simple problem.</p>\n\n<p>The best I've come up with is </p>\n\n<pre><code>let mut i:usize = 0;\nwhile i &lt; vals.len()\n{\n    println!(\"{}: {}\", i, vals[i]);\n    if      vals[i] == 1  { i += 2; }\n    else if vals[i] == 2  { i += 4; }\n}\n</code></pre>\n\n<p>but that feels like a poor man's <code>for</code> loop and contrary to what I should be doing to take advantage of an iterator-equipped language. Is there a variant of <code>continue</code> that skips iterations, or a way to call <code>skip</code> on the iterator from within the loop?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20407, "user_id": 1017941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/yocPw.jpg?s=128&g=1", "display_name": "Hauleth", "link": "https://stackoverflow.com/users/1017941/hauleth"}, "is_accepted": true, "score": 3, "last_activity_date": 1576288374, "creation_date": 1576288374, "answer_id": 59331712, "question_id": 59331536, "link": "https://stackoverflow.com/questions/59331536/cstring-to-c-without-const/59331712#59331712", "title": "CString to C without const", "body": "<p>In Rust, raw pointers <strong>always</strong> need a mutability modifier. In this case you need to use <code>*mut c_char</code> type as this will be equivalent to C's <code>char *</code> type.</p>\n"}], "owner": {"reputation": 3221, "user_id": 2245634, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/OHoy2.jpg?s=128&g=1", "display_name": "Amit\u0101bha", "link": "https://stackoverflow.com/users/2245634/amit%c4%81bha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 59331712, "answer_count": 1, "score": -3, "last_activity_date": 1608754849, "creation_date": 1576286020, "last_edit_date": 1608754849, "question_id": 59331536, "link": "https://stackoverflow.com/questions/59331536/cstring-to-c-without-const", "title": "CString to C without const", "body": "<p>I want call this C method from Rust:</p>\n<pre><code>int gb2312ToUtf8(char* ptDestText, int nDestLength, char* ptSrcText, int nSrcLength);\n</code></pre>\n<p>In Rust:</p>\n<pre><code>#[link(name = &quot;testunicode&quot;)]\nextern {\n    fn gb2312ToUtf8(ptDestText: *char, nDestLength: int, ptSrcText: *char, nSrcLength: int) -&gt; int;\n}\n\npub fn test() {\n    let srcText = CString::new(&quot;Hello, world!&quot;).expect(&quot;CString::new failed&quot;);\n    let destText = CString::new(&quot;&quot;).expect(&quot;CString::new failed&quot;);\n    let x = unsafe {\n        gb2312ToUtf8(destText.as_ptr(), c_to_print.len(), srcText.as_bytes().as_ptr(), srcText.len());\n    println!(&quot;test: {}&quot;, destText);\n};\n</code></pre>\n<p>But I get this error:</p>\n<pre><code>error: expected mut or const in raw pointer type\n  --&gt; src\\libc\\libctest.rs:14:32\n   |\n14 |  fn gb2312ToUtf8( ptDestText : *char,nDestLength:int,ptSrcText: *char,  nSrcLength:int) -&gt; int;\n   |                                ^ expected mut or const in raw pointer type\n   |\n   = help: use `*mut T` or `*const T` as appropriate\n\nerror: expected mut or const in raw pointer type\n  --&gt; src\\libc\\libctest.rs:14:65\n   |\n14 |  fn gb2312ToUtf8( ptDestText : *char,nDestLength:int,ptSrcText: *char,  nSrcLength:int) -&gt; int;\n   |                                                                 ^ expected mut or const in raw pointer type\n</code></pre>\n"}, {"tags": ["string", "rust"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1576278936, "creation_date": 1576278936, "answer_id": 59330922, "question_id": 59330671, "link": "https://stackoverflow.com/questions/59330671/how-do-i-remove-a-single-trailing-string-from-another-string-in-rust/59330922#59330922", "title": "How do I remove a single trailing string from another string in Rust?", "body": "<p>Your specification is very similar to <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.trim_end_matches\" rel=\"nofollow noreferrer\"><code>trim_end_matches</code></a>, but you want to trim only one suffix whereas <code>trim_end_matches</code> will trim all of them.</p>\n\n<p>Here is a function that uses <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.ends_with\" rel=\"nofollow noreferrer\"><code>ends_with</code></a> along with slicing to remove only one suffix:</p>\n\n<pre><code>fn remove_suffix&lt;'a&gt;(s: &amp;'a str, p: &amp;str) -&gt; &amp;'a str {\n    if s.ends_with(p) {\n        &amp;s[..s.len() - p.len()]\n    } else {\n        s\n    }\n}\n</code></pre>\n\n<p>The slice will never panic because if the pattern matches, <code>s[s.len() - p.len()]</code> is guaranteed to be on a character boundary.</p>\n"}], "owner": {"reputation": 1093, "user_id": 9315690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/747b19bfb99db8f9f3411c19da6c9c50?s=128&d=identicon&r=PG&f=1", "display_name": "Newbyte", "link": "https://stackoverflow.com/users/9315690/newbyte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1091, "favorite_count": 0, "accepted_answer_id": 59330922, "answer_count": 1, "score": 3, "last_activity_date": 1576320604, "creation_date": 1576276811, "last_edit_date": 1576320604, "question_id": 59330671, "link": "https://stackoverflow.com/questions/59330671/how-do-i-remove-a-single-trailing-string-from-another-string-in-rust", "title": "How do I remove a single trailing string from another string in Rust?", "body": "<p>Given the following two strings:</p>\n\n<pre><code>let subject: &amp;str = \"zoop-12\";\nlet trail: &amp;str \"-12\";\n</code></pre>\n\n<p>How would I go about removing <code>trail</code> from <code>subject</code> only once? I would only like to do this in the case that <code>subject</code> has these characters at its end, so in a case like this I would like nothing removed:</p>\n\n<pre><code>let subject: &amp;str \"moop-12loop\";\nlet not_a_trail: &amp;str = \"-12\";\n</code></pre>\n\n<p>I'm okay with either being a <code>String</code> or <code>&amp;str</code>, but I choose to use <code>&amp;str</code> for brevity.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3, "user_id": 11331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a88593994bceda9b8d7a6715093008b3?s=128&d=identicon&r=PG&f=1", "display_name": "Hexalden", "link": "https://stackoverflow.com/users/11331045/hexalden"}, "edited": false, "score": 0, "creation_date": 1576269569, "post_id": 59329496, "comment_id": 104858382, "body": "By the way, I think that the title of the question is too accurate, I did not know how to write it general enough to cover similar problems, if any of you have a better idea :)"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1576269934, "post_id": 59329558, "comment_id": 104858501, "body": "<code>T: Into&lt;BigInt&gt;</code> is a more relaxed constraint than <code>BigInt: From&lt;T&gt;</code>, although it&#39;s not likely to make <i>much</i> difference."}], "tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": true, "score": 2, "last_activity_date": 1576296679, "last_edit_date": 1576296679, "creation_date": 1576269799, "answer_id": 59329558, "question_id": 59329496, "link": "https://stackoverflow.com/questions/59329496/how-can-i-simplify-multiple-uses-of-bigintfrom/59329558#59329558", "title": "How can I simplify multiple uses of BigInt::from()?", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/convert/trait.From.html\" rel=\"nofollow noreferrer\"><code>From&lt;T&gt;</code></a> trait (and the complementary <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>Into&lt;T&gt;</code></a> trait) is what is typically used to convert between types in Rust. In fact, the <code>BigInt::from</code> method comes from the <code>From</code> trait.</p>\n\n<p>You can modify your <code>short_name</code> function into a generic function with a <code>where</code> clause to accept all types that <code>BigInt</code> can be converted from:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn short_name&lt;T&gt;(n: T) -&gt; BigInt // function with generic type T\nwhere\n    BigInt: From&lt;T&gt;, // where BigInt implements the From&lt;T&gt; trait\n{\n    BigInt::from(n)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3, "user_id": 11331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a88593994bceda9b8d7a6715093008b3?s=128&d=identicon&r=PG&f=1", "display_name": "Hexalden", "link": "https://stackoverflow.com/users/11331045/hexalden"}, "edited": false, "score": 0, "creation_date": 1576273182, "post_id": 59329974, "comment_id": 104859578, "body": "I was indeed wrong, thank you for correcting me and explaining the error :)"}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 3, "last_activity_date": 1576296746, "last_edit_date": 1576296746, "creation_date": 1576272135, "answer_id": 59329974, "question_id": 59329496, "link": "https://stackoverflow.com/questions/59329496/how-can-i-simplify-multiple-uses-of-bigintfrom/59329974#59329974", "title": "How can I simplify multiple uses of BigInt::from()?", "body": "<p>To answer this part:</p>\n\n<blockquote>\n  <p>I produced code where I frequently used <code>BigInt::from(Xu8)</code> because it is not possible to directly add numbers from different types (if I understand correctly).</p>\n</blockquote>\n\n<p>On the contrary, if you look at <code>BigInt</code>'s documentation you'll see many <code>impl Add</code>:</p>\n\n<pre><code>impl&lt;'a&gt; Add&lt;BigInt&gt; for &amp;'a u64\nimpl Add&lt;u8&gt; for BigInt\n</code></pre>\n\n<p>and so on. The first allows calling <code>a_ref_to_u64 + a_bigint</code>, the second <code>a_bigint + an_u8</code> (and both set <code>OutputType</code> to be <code>BigInt</code>). You don't need to convert these types to <code>BigInt</code> before adding them! And if you want your method to handle any such type you just need an <code>Add</code> bound similar to the <code>From</code> bound <a href=\"https://stackoverflow.com/a/59329558/155423\">in Frxstrem's answer</a>. Of course if you want many such operations, <code>From</code> may end up more readable.</p>\n"}], "owner": {"reputation": 3, "user_id": 11331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a88593994bceda9b8d7a6715093008b3?s=128&d=identicon&r=PG&f=1", "display_name": "Hexalden", "link": "https://stackoverflow.com/users/11331045/hexalden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 59329558, "answer_count": 2, "score": 0, "last_activity_date": 1576296746, "creation_date": 1576269323, "last_edit_date": 1576296618, "question_id": 59329496, "link": "https://stackoverflow.com/questions/59329496/how-can-i-simplify-multiple-uses-of-bigintfrom", "title": "How can I simplify multiple uses of BigInt::from()?", "body": "<p>I wrote a program where I manipulated a lot of <a href=\"https://rust-num.github.io/num/num/struct.BigInt.html\" rel=\"nofollow noreferrer\"><code>BigInt</code></a> and <code>BigUint</code> values and perform some arithmetic operations.</p>\n\n<p>I produced code where I frequently used <code>BigInt::from(Xu8)</code> because it is not possible to directly add numbers from different types (if I understand correctly).</p>\n\n<p>I want to reduce the number of <code>BigInt::from</code> in my code. I thought about a function to \"wrap\" this, but I would need a function for each type I want to convert into <code>BigInt</code>/<code>BigUint</code>:</p>\n\n<pre><code>fn short_name(n: X) -&gt; BigInt {\n    return BigInt::from(n)\n}\n</code></pre>\n\n<p>Where <code>X</code> will be each type I want to convert.</p>\n\n<p>I couldn't find any solution that is not in contradiction with the static typing philosophy of Rust.</p>\n\n<p>I feel that I am missing something about traits, but I am not very comfortable with them, and I did not find a solution using them.</p>\n\n<p>Am I trying to do something impossible in Rust? Am I missing an obvious solution?</p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576246591, "post_id": 59324269, "comment_id": 104848082, "body": "your example don&#39;t make sense just call your conditional future inside the <code>and_then()</code> <code>str_to_u32(x)</code> in place of <code>Ok(x)</code>"}, {"owner": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576247123, "post_id": 59324269, "comment_id": 104848363, "body": "@Stargateur Maybe I didn&#39;t explain the problem well enough. I updated the example. Hopefully it makes sense now"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576248035, "post_id": 59324269, "comment_id": 104848839, "body": "It looks like your question might be answered by the answers/linked questions of <a href=\"https://stackoverflow.com/q/53551385/155423\">How to return early from a Rust function that returns a future?</a>; <a href=\"https://stackoverflow.com/q/52027634/155423\">Is there any way to return from a function from inside a closure?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59324269/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576248168, "post_id": 59324269, "comment_id": 104848911, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), functions, variables, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/59324269/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1576248210, "post_id": 59324269, "comment_id": 104848934, "body": "The real answer is &quot;use async/await&quot;"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1576254542, "post_id": 59324269, "comment_id": 104852121, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/51885745/how-do-i-conditionally-return-different-types-of-futures\">How do I conditionally return different types of futures?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576254576, "post_id": 59324269, "comment_id": 104852133, "body": "I forget about use either but I still still maintain my comment :p"}], "owner": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1576247985, "creation_date": 1576246353, "last_edit_date": 1576247985, "question_id": 59324269, "link": "https://stackoverflow.com/questions/59324269/how-can-i-return-early-from-a-futures-0-1-chain-of-combinator-methods", "title": "How can I return early from a futures 0.1 chain of combinator methods?", "body": "<p>Is there a way to return early from a future combinator chain? For example, I'd like to return success if some condition holds, otherwise keep going down the chain.</p>\n\n<p>I want to do something similar to this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn early_exit() -&gt; impl Future&lt;Item = u32, Error = String&gt; {\n    ok::&lt;u32, String&gt;(42)\n        .and_then(some_function)\n        .and_then(another_function)\n        .and_then(|x| {\n            // return early if condition is satisfied\n            if some_condition(x) {\n                return ok::&lt;u32, String&gt;(42);\n            }\n            // Else pass it down the combinator chain for further transformations\n            else {\n                Ok(x)\n            }\n        })\n        .and_then(one_more_function)\n        .and_then(last_function)\n}\n</code></pre>\n\n<p>I think this should be doable with <code>async</code>/<code>await</code>, but is there a good way to do this with futures 0.1?</p>\n"}, {"tags": ["vector", "rust", "itertools", "interleave"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 5, "last_activity_date": 1576241283, "creation_date": 1576241283, "answer_id": 59322941, "question_id": 59322812, "link": "https://stackoverflow.com/questions/59322812/how-do-i-interleave-two-rust-vectors-by-chunks-of-threes-into-a-new-vector/59322941#59322941", "title": "How do I interleave two Rust vectors by chunks of threes into a new vector?", "body": "<p>You want <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.flatten\" rel=\"noreferrer\"><code>Iterator::flatten</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::interleave;\n\nfn main() {\n    let v1 = vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0];\n    let v2 = vec![7.0, 8.0, 9.0, 10.0, 11.0, 12.0];\n    let v = interleave(v1.chunks(3), v2.chunks(3))\n        .flatten()\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n    dbg!(v);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": false, "score": 7, "last_activity_date": 1576241746, "creation_date": 1576241746, "answer_id": 59323062, "question_id": 59322812, "link": "https://stackoverflow.com/questions/59322812/how-do-i-interleave-two-rust-vectors-by-chunks-of-threes-into-a-new-vector/59323062#59323062", "title": "How do I interleave two Rust vectors by chunks of threes into a new vector?", "body": "<p>Seems like the same can be achieved with only std:</p>\n\n<pre><code>fn main() {\n    let v1 = vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0];\n    let v2 = vec![7.0, 8.0, 9.0, 10.0, 11.0, 12.0];\n\n    let v3: Vec&lt;f64&gt; = v1.chunks(3)\n        .zip(v2.chunks(3)) // yields items like (&amp;[1.0, 2.0, 3.0], &amp;[7.0, 8.0, 9.0])\n        .flat_map(|(a, b)| a.into_iter().chain(b)) // chains to produce iterators like [1.0, 2.0, 3.0, 7.0, 8.0, 9.0]\n        .copied() // &amp;f64 -&gt; f64, optional\n        .collect();\n\n    println!(\"v3 is {:?}\", v3);\n}\n</code></pre>\n\n<p>I.e. <code>zip -&gt; chain</code> acts like <code>interleave</code>.</p>\n"}], "owner": {"reputation": 47, "user_id": 3741483, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/77yhl.png?s=128&g=1", "display_name": "Ecumene", "link": "https://stackoverflow.com/users/3741483/ecumene"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 447, "favorite_count": 0, "accepted_answer_id": 59322941, "answer_count": 2, "score": 1, "last_activity_date": 1576246006, "creation_date": 1576240719, "last_edit_date": 1576246006, "question_id": 59322812, "link": "https://stackoverflow.com/questions/59322812/how-do-i-interleave-two-rust-vectors-by-chunks-of-threes-into-a-new-vector", "title": "How do I interleave two Rust vectors by chunks of threes into a new vector?", "body": "<p>I need an idiomatic way to interlace these two vectors:</p>\n\n<pre><code>let v1 = vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0];\nlet v2 = vec![7.0, 8.0, 9.0, 10.0, 11.0, 12.0];\n</code></pre>\n\n<p>The output I expect is:</p>\n\n<pre><code>[1.0, 2.0, 3.0,\n 7.0, 8.0, 9.0,\n 4.0, 5.0, 6.0,\n 10.0, 11.0, 12.0];\n</code></pre>\n\n<p>I used itertools <code>chunks</code> method, but I don't believe this is the best implementation because there are two <code>collect</code> calls.</p>\n\n<pre><code>let output = interleave(&amp;v1.into_iter().chunks(3), &amp;v2.into_iter().chunks(3)).map(|v| {v.into_iter().collect::&lt;Vec&lt;f32&gt;&gt;()}).flatten().collect::&lt;Vec&lt;f32&gt;&gt;();\n</code></pre>\n\n<p>Is there a better way to write this iterator using itertools?</p>\n"}, {"tags": ["rust", "async-await"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1576241011, "post_id": 59322228, "comment_id": 104845346, "body": "Basically <code>async fn</code> is compiled to a state machine. See Tyler Mandry&#39;s blog posts <a href=\"https://tmandry.gitlab.io/blog/posts/optimizing-await-1/\" rel=\"nofollow noreferrer\">How Rust optimizes async/await I</a> and <a href=\"https://tmandry.gitlab.io/blog/posts/optimizing-await-2/\" rel=\"nofollow noreferrer\">II</a>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1576241714, "post_id": 59322228, "comment_id": 104845677, "body": "The syntax let think that it&#39;s a variable member, but actually, it&#39;s an equivalent of <code>await {expression}</code> in the other languages."}, {"owner": {"reputation": 1552, "user_id": 3145469, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/40ef74077e497553ad7a6ce20a1fc38b?s=128&d=identicon&r=PG&f=1", "display_name": "MrMobster", "link": "https://stackoverflow.com/users/3145469/mrmobster"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576253619, "post_id": 59322228, "comment_id": 104851655, "body": "@Shepmaster apologies if my question is valid. I agree that it is a bit broad but it basically boils down to <i>what is the semantics of an expression <code>x.await</code></i>. If you think it is not appropriate for SO, I will happily move my question elsewhere"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576271117, "post_id": 59322228, "comment_id": 104858901, "body": "<code>await</code> is a keyword. It&#39;s not a member. The expression needs to implement the <code>Future</code> trait from <code>std</code>, which is a lang item, i.e. the compiler nows about it. Further details can be found in the <a href=\"https://doc.rust-lang.org/stable/reference/expressions/await-expr.html\" rel=\"nofollow noreferrer\">language reference</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1552, "user_id": 3145469, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/40ef74077e497553ad7a6ce20a1fc38b?s=128&d=identicon&r=PG&f=1", "display_name": "MrMobster", "link": "https://stackoverflow.com/users/3145469/mrmobster"}, "edited": false, "score": 0, "creation_date": 1576255981, "post_id": 59326467, "comment_id": 104852819, "body": "Thank you for the detailed answer. There is just one piece of the puzzle remaining for me: the validity of the <code>.await</code> keyword used on an object <code>x</code>. Does the compiler have magical knowledge of the <code>Future</code> trait and can <code>x</code> be anything that implements <code>IntoFuture</code> or is it more complicated? Also, since you seem quite knowledgeable about the compiler, would you be so kind to point me to where I should look in the compiler code?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1576262759, "last_edit_date": 1576262759, "creation_date": 1576254688, "answer_id": 59326467, "question_id": 59322228, "link": "https://stackoverflow.com/questions/59322228/what-are-the-semantics-of-the-expression-x-await/59326467#59326467", "title": "What are the semantics of the expression x.await?", "body": "<p><code>.await</code> is <a href=\"https://doc.rust-lang.org/std/keyword.await.html\" rel=\"nofollow noreferrer\">a keyword</a>, thus asking how it is defined is equivalent to asking how <code>if</code> or <code>match</code> are defined. The true answer is an unsatisfying one: look at <a href=\"https://github.com/rust-lang/rust/blob/1.39.0/src/librustc/hir/lowering/expr.rs#L503-L655\" rel=\"nofollow noreferrer\">the code of the Rust compiler</a>.</p>\n\n<p>The <a href=\"https://rust-lang.github.io/rfcs/2394-async_await.html\" rel=\"nofollow noreferrer\">async/await RFC</a> describes it as:</p>\n\n<blockquote>\n  <h2>The <code>await!</code> compiler built-in</h2>\n  \n  <p>A builtin called <code>await!</code> is added to the compiler. <code>await!</code> can be used to\n  \"pause\" the computation of the future, yielding control back to the caller.\n  <code>await!</code> takes any expression which implements <code>IntoFuture</code>, and evaluates to a\n  value of the item type that that future has.</p>\n  \n  <pre class=\"lang-rust prettyprint-override\"><code>// future: impl Future&lt;Output = usize&gt;\nlet n = await!(future);\n</code></pre>\n  \n  <p>The expansion of await repeatedly calls <code>poll</code> on the future it receives,\n  yielding control of the function when it returns <code>Poll::Pending</code> and\n  eventually evaluating to the item value when it returns <code>Poll::Ready</code>.</p>\n  \n  <p><code>await!</code> can only be used inside of an async function, closure, or block.\n  Using it outside of that context is an error.</p>\n  \n  <p>(<code>await!</code> is a compiler built-in to leave space for deciding its exact syntax\n  later. See more information in the unresolved questions section.)</p>\n</blockquote>\n\n\n\n<blockquote>\n  <h2>The expansion of await</h2>\n  \n  <p>The <code>await!</code> builtin expands roughly to this:</p>\n  \n  <pre class=\"lang-rust prettyprint-override\"><code>let mut future = IntoFuture::into_future($expression);\nlet mut pin = unsafe { Pin::new_unchecked(&amp;mut future) };\nloop {\n    match Future::poll(Pin::borrow(&amp;mut pin), &amp;mut ctx) {\n          Poll::Ready(item) =&gt; break item,\n          Poll::Pending     =&gt; yield,\n    }\n}\n</code></pre>\n  \n  <p>This is not a literal expansion, because the <code>yield</code> concept cannot be\n  expressed in the surface syntax within <code>async</code> functions. This is why <code>await!</code>\n  is a compiler builtin instead of an actual macro.</p>\n</blockquote>\n\n<p>Note that the syntax <code>await!(expression)</code> was <a href=\"https://boats.gitlab.io/blog/post/await-decision/\" rel=\"nofollow noreferrer\">changed</a> to <code>expression.await</code> before stabilization.</p>\n\n<blockquote>\n  <p>Does the compiler have magical knowledge of the <code>Future</code> trait</p>\n</blockquote>\n\n<p>Yes. <a href=\"https://github.com/rust-lang/rust/blob/1.39.0/src/libcore/future/future.rs#L30\" rel=\"nofollow noreferrer\"><code>Future</code> is a language item</a>.</p>\n\n<blockquote>\n  <p>can <code>x</code> be anything that implements <code>IntoFuture</code> or is it more complicated?</p>\n</blockquote>\n\n<p>There isn't actually an <code>IntoFuture</code> in the standard library; I assume that the level of indirection wasn't needed during implementation. <code>.await</code> only works with types implementing <code>Future</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52835725/155423\">What is the purpose of async/await in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 1552, "user_id": 3145469, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/40ef74077e497553ad7a6ce20a1fc38b?s=128&d=identicon&r=PG&f=1", "display_name": "MrMobster", "link": "https://stackoverflow.com/users/3145469/mrmobster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 59326467, "answer_count": 1, "score": 3, "last_activity_date": 1576262759, "creation_date": 1576238512, "last_edit_date": 1576254127, "question_id": 59322228, "link": "https://stackoverflow.com/questions/59322228/what-are-the-semantics-of-the-expression-x-await", "title": "What are the semantics of the expression x.await?", "body": "<p>I am curious about how <code>.await</code> actually works in Rust. It doesn't seem to be part of the <code>Future</code> API, so I assume that it has to be some sort of compiler magic. How does <code>.await</code> work and what it can be applied to?</p>\n\n<p>I understand how async construction works and how async functions are compiled using unstable generators; that is not my question. I am asking specifically about the <code>.await</code> magic member operator. That is, if we have an expression like </p>\n\n<pre><code>fut.await\n</code></pre>\n\n<p>What happens at this point and what constraints should <code>fut</code> satisfy for this expression to be valid? </p>\n"}, {"tags": ["error-handling", "rust", "idioms"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576237074, "post_id": 59321492, "comment_id": 104843435, "body": "&quot;What is the best way to guard against this situation?&quot; what situation?"}, {"owner": {"reputation": 9560, "user_id": 2023370, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4840a671d94ce5df0818cce059cab62b?s=128&d=identicon&r=PG&f=1", "display_name": "user2023370", "link": "https://stackoverflow.com/users/2023370/user2023370"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576238879, "post_id": 59321492, "comment_id": 104844276, "body": "Question has been updated."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576238101, "post_id": 59321833, "comment_id": 104843905, "body": "it&#39;s clearly better to reuse the same memory using <code>clear()</code> in this case"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576240771, "post_id": 59321833, "comment_id": 104845240, "body": "@Stargateur Certainly. But OP is looking for shorter code and it is also more aligned with code in the Rust book. I&#39;d say it is more pedagogically consistent this way."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1576237437, "last_edit_date": 1576237437, "creation_date": 1576237015, "answer_id": 59321833, "question_id": 59321492, "link": "https://stackoverflow.com/questions/59321492/modified-rust-book-guessing-game-query/59321833#59321833", "title": "Modified Rust Book Guessing Game Query", "body": "<p><code>read_line</code> will append the line to buffer, so your <code>guess</code> will accumulate all the inputs include newline characters! Moving <code>let mut guess = String::new();</code> inside the loop solves the problem:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    ...\n\n    loop {\n        let mut guess = String::new();\n\n        ...\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 9560, "user_id": 2023370, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4840a671d94ce5df0818cce059cab62b?s=128&d=identicon&r=PG&f=1", "display_name": "user2023370", "link": "https://stackoverflow.com/users/2023370/user2023370"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 59321833, "answer_count": 1, "score": 0, "last_activity_date": 1576238672, "creation_date": 1576235851, "last_edit_date": 1576238672, "question_id": 59321492, "link": "https://stackoverflow.com/questions/59321492/modified-rust-book-guessing-game-query", "title": "Modified Rust Book Guessing Game Query", "body": "<p>I modified the code from the Rust Book's <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">Guessing Game Tutorial</a> to make it a little shorter; for a slide. Alas, I've introduced a bug, and it no longer executes correctly: the first input works as expected, but subsequent entries now yield no feedback.</p>\n\n<p>What is the best way to guard against this situation?</p>\n\n<pre><code>use std::io;\nuse std::cmp::Ordering;\nuse rand::Rng;\n\nfn main() {\n    println!(\"Guess the number!\");\n\n    let secret_number = rand::thread_rng().gen_range(1, 101);\n\n    let mut guess = String::new();\n\n    loop {\n        io::stdin().read_line(&amp;mut guess)\n            .expect(\"Failed to read line\");\n\n        let guess: u32 = match guess.trim().parse() {\n            Ok(num) =&gt; num,\n            Err(_) =&gt; continue,\n        };\n\n        println!(\"You guessed: {}\", guess);\n\n        match guess.cmp(&amp;secret_number) {\n            Ordering::Less =&gt; println!(\"Too small!\"),\n            Ordering::Greater =&gt; println!(\"Too big!\"),\n            Ordering::Equal =&gt; {\n                println!(\"You win!\");\n                break;\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1576238468, "post_id": 59320152, "comment_id": 104844101, "body": "Another nitpick: &quot;make base_node an Option type, but this seems suboptimal&quot; but that&#39;s what you were doing in Java and you though that was fine."}, {"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1576238660, "post_id": 59320152, "comment_id": 104844179, "body": "@mcarton: That will not work since there can only be one owner of a node - either the local variable accessing it or the network manager. Backpointers need more complex references, e.g. <code>Rc&lt;RefCell&lt;Node&gt;&gt;</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1576238729, "post_id": 59320152, "comment_id": 104844205, "body": "I know, but he was still not making a fair comparison."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576239101, "post_id": 59320152, "comment_id": 104844376, "body": "<i>refactoring is not possible</i> Uh, why not? You haven&#39;t shown any code that actually uses these types. What is <i>the recursive call</i>? There is no recursion here."}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 1, "last_activity_date": 1576235980, "creation_date": 1576235980, "answer_id": 59321536, "question_id": 59320152, "link": "https://stackoverflow.com/questions/59320152/rust-backpointers/59321536#59321536", "title": "Rust backpointers", "body": "<p>From my experience, these situations are very different from other languages. In \"safe, simple, everyday Rust\" having backpointers/pointers within the struct is complex since it leads to non-trivial problems. (Consider what would happen if you would move <code>Node</code> around in memory: How would you properly update the backpointer in <code>NetworkManager</code>?)</p>\n\n<p>What I usually resort to is simply passing <code>base_node</code> as a parameter to the functions that need the backpointer. This is sometimes easier said than done, but leads to code that clearly states ownership.</p>\n"}], "owner": {"reputation": 1622, "user_id": 1018513, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/edeed62cb92df0dd2586212235f6a9e6?s=128&d=identicon&r=PG", "display_name": "user1018513", "link": "https://stackoverflow.com/users/1018513/user1018513"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "closed_date": 1576246460, "accepted_answer_id": 59321536, "answer_count": 1, "score": -2, "last_activity_date": 1576246629, "creation_date": 1576231358, "last_edit_date": 1576246495, "question_id": 59320152, "link": "https://stackoverflow.com/questions/59320152/rust-backpointers", "closed_reason": "Duplicate", "title": "Rust backpointers", "body": "<p>I am learning Rust from a C++/Java background, and I have the following pattern</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node&lt;'a&gt; {\n    network_manager: NetworkManager&lt;'a&gt;,\n}\n\nstruct NetworkManager&lt;'a&gt; {\n    base_node: &amp;'a Node&lt;'a&gt;,\n}\n</code></pre>\n\n<p>The node contains the threadpool that the <code>NetworkManager</code> uses to \"handoff\" messages once they've been processed. Because of the recursive call, it is not possible to set the base_node field in the <code>NetworkManager</code> immediately. In Java, I would leave it as null and have a second method that is called after the constructor called <code>initialise(BaseNode node)</code> that would set the <code>base_node</code> field (ensuring that there are no calls to the network manager before <code>initialise</code> is called).</p>\n\n<p>What is the idiomatic way of doing this in Rust? The only way I can think of is to make <code>base_node</code> an <code>Option</code> type, but this seems suboptimal. </p>\n\n<p>In general, what is the \"right\" way in Rust to deal with situations where A points to B and B points to A, and where (as in my case), refactoring is not possible?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1576229407, "post_id": 59319155, "comment_id": 104839515, "body": "If it were for future proofing, I imagine they would have made them wrappers around the <code>std</code> types. My guess (but it&#39;s just a guess) is that this is not future proofing but convenience: That way <code>async_std::sync</code> has everything <code>std::sync</code> has."}], "answers": [{"comments": [{"owner": {"reputation": 3531, "user_id": 1174521, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9a6bc053ffba8996e41c0bbb9a9ce36a?s=128&d=identicon&r=PG", "display_name": "jbg", "link": "https://stackoverflow.com/users/1174521/jbg"}, "edited": false, "score": 0, "creation_date": 1579975314, "post_id": 59448350, "comment_id": 105949011, "body": "A rather strange idea, isn&#39;t it, that people should &quot;transition&quot; from the standard library of Rust to a third-party crate, rather than just using crate(s) for the additional features they need on top of what the standard library has to offer (such as async file/network I/O, an executor, etc)?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 3531, "user_id": 1174521, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9a6bc053ffba8996e41c0bbb9a9ce36a?s=128&d=identicon&r=PG", "display_name": "jbg", "link": "https://stackoverflow.com/users/1174521/jbg"}, "edited": false, "score": 0, "creation_date": 1579976329, "post_id": 59448350, "comment_id": 105949275, "body": "But the point is exactly to use a 3rd party crate only for the extra features and use <code>std</code> where possible. <code>async_std</code> only reexports <code>std</code> types commonly used with <code>async</code> programming for convenience, rather than making its own types."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 1, "last_activity_date": 1577052267, "creation_date": 1577052267, "answer_id": 59448350, "question_id": 59319155, "link": "https://stackoverflow.com/questions/59319155/what-is-the-purpose-of-async-stdsyncarc/59448350#59448350", "title": "What is the purpose of async_std::sync::Arc?", "body": "<p>The point is to ease the transition from <code>std</code> to <code>async_std</code> as much as possible.</p>\n\n<p>The <a href=\"https://github.com/async-rs/async-std/blob/86d3d74180f076ccc21321a8f8d628df2b7e9772/README.md\" rel=\"nofollow noreferrer\">description of the crates</a> starts with:</p>\n\n<blockquote>\n  <p>This crate provides an async version of <a href=\"https://doc.rust-lang.org/std/index.html\" rel=\"nofollow noreferrer\"><code>std</code></a>.</p>\n</blockquote>\n\n<p>And one of its descriptive feature is:</p>\n\n<blockquote>\n  <p><strong>Intuitive</strong>: Complete parity with the stdlib means you only need to learn APIs once.</p>\n</blockquote>\n\n<p>As for the <a href=\"https://async.rs/blog/announcing-async-std-1-0/\" rel=\"nofollow noreferrer\">blog post that introduced</a> it, it clearly mentions that <code>async_std</code> is mean to be a drop-in replacement of <code>std</code>as much as possible:</p>\n\n<blockquote>\n  <p>With <code>async-std\u200b</code>, <strong>all that\u2019s needed is replace <code>std\u200b</code> with <code>async_std\u200b</code></strong>, add the prelude\u200b, and sprinkle in a few <code>.await\u200bs</code></p>\n</blockquote>\n\n<p>(emphasis is mine)</p>\n\n<p>Given all that, it makes sense that the developers of <code>async_std</code> would chose to re-export all types from <code>std</code> that don't need to be adapted to <code>async</code>: Users don't need to worry about whether types are <code>async</code> or not and don't need to worry about what to <code>use</code>.</p>\n"}], "owner": {"reputation": 1517, "user_id": 275984, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/620339c024f25dbc2597a9d33c6eef54?s=128&d=identicon&r=PG", "display_name": "b0fh", "link": "https://stackoverflow.com/users/275984/b0fh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 494, "favorite_count": 0, "accepted_answer_id": 59448350, "answer_count": 1, "score": 7, "last_activity_date": 1577052267, "creation_date": 1576227582, "last_edit_date": 1576247440, "question_id": 59319155, "link": "https://stackoverflow.com/questions/59319155/what-is-the-purpose-of-async-stdsyncarc", "title": "What is the purpose of async_std::sync::Arc?", "body": "<p>I understand why structures that may block the current thread, like <code>Mutex</code> and <code>RwLock</code>, need to be reimplemented to rely on the futures/waker API, but why does it need to do so for <code>Arc</code>? </p>\n\n<p>As far as I understand, no operations on the standard <code>Arc</code> are blocking, and in the latest version, <code>async_std::sync::Arc</code> is just a reexport of <code>std::sync::Arc</code>.</p>\n\n<p>Is this future-proofing, in case a future implementation of <code>Arc</code> needs to rely on blocking? </p>\n\n<p>Which one should I use in async code, and why?</p>\n"}, {"tags": ["rust", "async-await", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 7, "last_activity_date": 1576751974, "last_edit_date": 1576751974, "creation_date": 1576259478, "answer_id": 59327560, "question_id": 59318460, "link": "https://stackoverflow.com/questions/59318460/what-is-the-best-way-to-convert-an-asyncread-to-a-trystream-of-bytes/59327560#59327560", "title": "What is the best way to convert an AsyncRead to a TryStream of bytes?", "body": "<p>Regarding <code>AsyncRead</code> and <code>stream::*</code> as defined in <code>futures-0.3</code> crate, there is</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn stream::TryStreamExt::into_async_read(self) -&gt; IntoAsyncRead&lt;Self&gt;\n</code></pre>\n\n<p>but not the other way around. This discrepancy is annoying and hopefully can be addressed before important crates of <code>async/await</code> ecosystem hit 1.0. For now, I've seen several ways to do it oneself:</p>\n\n<ul>\n<li><p>implement <code>Stream</code> trait for a struct that hosts a <code>AsyncRead</code></p></li>\n<li><p>make use of <code>futures</code> utility functions such as <code>future::poll_fn</code></p></li>\n<li><p>OP's approach</p></li>\n</ul>\n\n<p>IMO the third is the most straightforward. Here is some working code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//# bytes = \"0.5.3\"\n//# futures = \"0.3.1\"\n//# tokio = { version = \"0.2.4\", features = [\"full\"] }\n//# tokio-util = { version = \"0.2.0\", features = [\"codec\"] }\nuse bytes::Bytes;\nuse futures::stream::{self, Stream, StreamExt, TryStreamExt};\nuse tokio::io::{AsyncRead, Result};\nuse tokio_util::codec;\n\nfn into_byte_stream&lt;R&gt;(r: R) -&gt; impl Stream&lt;Item=Result&lt;u8&gt;&gt;\nwhere\n    R: AsyncRead,\n{\n    codec::FramedRead::new(r, codec::BytesCodec::new())\n        .map_ok(|bytes| stream::iter(bytes).map(Ok))\n        .try_flatten()\n}\n\nfn into_bytes_stream&lt;R&gt;(r: R) -&gt; impl Stream&lt;Item=Result&lt;Bytes&gt;&gt;\nwhere\n    R: AsyncRead,\n{\n    codec::FramedRead::new(r, codec::BytesCodec::new())\n        .map_ok(|bytes| bytes.freeze())\n}\n\n#[tokio::main]\nasync fn main() -&gt; std::result::Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let reader = std::io::Cursor::new([114, 117, 115, 116]);\n    let res = into_byte_stream(reader)\n        .try_collect::&lt;Vec&lt;_&gt;&gt;()\n        .await?;\n    dbg!(res);\n\n    let reader = std::io::Cursor::new([114, 117, 115, 116]);\n    let res = into_bytes_stream(reader)\n        .try_collect::&lt;Vec&lt;_&gt;&gt;()\n        .await?;\n    dbg!(res);\n\n    Ok(())\n}\n</code></pre>\n\n<p>(OP asked for <code>TryStream</code>. But <code>futures-0.3</code> has <code>impl&lt;S, T, E&gt; TryStream for S where S: Stream&lt;Item = Result&lt;T, E&gt;&gt; + ?Sized</code>, we get it for free.)</p>\n\n<hr>\n\n<p>I filed <a href=\"https://github.com/rust-lang/futures-rs/issues/2006\" rel=\"noreferrer\">a ticket for <code>futures-rs</code> project</a> to ask why. Turns out it is much more complicated than I initially thought. TL;DR is that only after generic associated types (GATs) is shipped, which hopefully will be next year, we can satisfyingly address this problem. Niko's <a href=\"https://smallcultfollowing.com/babysteps/blog/2019/12/10/async-interview-2-cramertj-part-2/\" rel=\"noreferrer\">async interview #2</a> goes into considerable depth to discuss this.</p>\n"}], "owner": {"reputation": 5869, "user_id": 2543666, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4e7c6887ce958029525412ab297b5895?s=128&d=identicon&r=PG", "display_name": "Thayne", "link": "https://stackoverflow.com/users/2543666/thayne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1932, "favorite_count": 4, "answer_count": 1, "score": 8, "last_activity_date": 1576751974, "creation_date": 1576224414, "last_edit_date": 1576290450, "question_id": 59318460, "link": "https://stackoverflow.com/questions/59318460/what-is-the-best-way-to-convert-an-asyncread-to-a-trystream-of-bytes", "title": "What is the best way to convert an AsyncRead to a TryStream of bytes?", "body": "<p>I have an <code>AsyncRead</code> and want to convert it to a <code>Stream&lt;Item = tokio::io::Result&lt;Bytes&gt;&gt;</code> with tokio 0.2 and futures 0.3.</p>\n\n<p>The best I've been able to do is something like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use bytes::Bytes; // 0.4.12\nuse futures::stream::{Stream, TryStreamExt};; // 0.3.1\nuse tokio::{fs::File, io::Result}; // 0.2.4\nuse tokio_util::{BytesCodec, FramedRead}; // 0.2.0\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;()&gt; {\n    let file = File::open(\"some_file.txt\").await?;\n    let stream = FramedRead::new(file, BytesCodec::new()).map_ok(|b| b.freeze());\n    fn_that_takes_stream(stream)\n}\n\nfn fn_that_takes_stream&lt;S, O&gt;(s: S) -&gt; Result&lt;()&gt;\nwhere\n    S: Stream&lt;Item = Result&lt;Bytes&gt;&gt;,\n{\n    //...\n    Ok(())\n}\n</code></pre>\n\n<p>It seems like there should be a simpler way; I'm surprised Tokio doesn't include a codec to get a stream of <code>Bytes</code> instead of <code>BytesMut</code> or that there isn't just an extension trait that provides a method to convert an <code>AsyncRead</code> into a <code>Stream</code>. Am I missing something?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1576225432, "post_id": 59318408, "comment_id": 104837802, "body": "<code>parent</code> isn&#39;t used in your code..."}, {"owner": {"reputation": 15, "user_id": 11395424, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16sH0.png?s=128&g=1", "display_name": "TheProff", "link": "https://stackoverflow.com/users/11395424/theproff"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1576225895, "post_id": 59318408, "comment_id": 104838016, "body": "This isn&#39;t the full code, it is used, but the rest of update is really long. I&#39;d rather not put it all here"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1576226913, "post_id": 59318408, "comment_id": 104838434, "body": "In this situation, the issue is that you mutably borrow <code>self</code> once (while iterating its objects) and another time when you pass it as <code>parent</code>. My piece of advice, as stated in an answer of the linked question, is to use an arena to allocate the objects."}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 11395424, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16sH0.png?s=128&g=1", "display_name": "TheProff", "link": "https://stackoverflow.com/users/11395424/theproff"}, "edited": false, "score": 0, "creation_date": 1576230279, "post_id": 59319765, "comment_id": 104839956, "body": "The sub objects need to be able to modify and access parameters of their parents."}, {"owner": {"reputation": 161, "user_id": 12505684, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wI9F5.jpg?s=128&g=1", "display_name": "kastenbutt", "link": "https://stackoverflow.com/users/12505684/kastenbutt"}, "reply_to_user": {"reputation": 15, "user_id": 11395424, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16sH0.png?s=128&g=1", "display_name": "TheProff", "link": "https://stackoverflow.com/users/11395424/theproff"}, "edited": false, "score": 0, "creation_date": 1576230644, "post_id": 59319765, "comment_id": 104840186, "body": "Yes, and in my example such a modification of a sub-object&#39;s parent is separated from the mutation of the sub-object."}, {"owner": {"reputation": 15, "user_id": 11395424, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16sH0.png?s=128&g=1", "display_name": "TheProff", "link": "https://stackoverflow.com/users/11395424/theproff"}, "edited": false, "score": 0, "creation_date": 1576230750, "post_id": 59319765, "comment_id": 104840234, "body": "Oh yeah. Sorry I misunderstood your example. You&#39;re suggesting that I pass the parameters back. This makes sense, thank you!"}], "tags": [], "owner": {"reputation": 161, "user_id": 12505684, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wI9F5.jpg?s=128&g=1", "display_name": "kastenbutt", "link": "https://stackoverflow.com/users/12505684/kastenbutt"}, "is_accepted": true, "score": 0, "last_activity_date": 1576231008, "last_edit_date": 1576231008, "creation_date": 1576229936, "answer_id": 59319765, "question_id": 59318408, "link": "https://stackoverflow.com/questions/59318408/how-to-iterate-through-a-vector-running-a-function-on-each-member-passing-mut-s/59319765#59319765", "title": "How to iterate through a vector running a function on each member passing &amp;mut self", "body": "<p>In your case a solution depends very much on what you are doing to <code>parent</code>. I find that it often helps to be more explicit about what precisely will be mutated. So, for example, if you want to count the total number of children (and children of children) for an <code>Object</code> while also accessing, say, the parent's name you could do it like this:</p>\n\n<pre><code>struct Object {\n    objects: Vec&lt;Object&gt;,\n    counter: u32,\n    name: String\n}\n\nimpl Object {\n    fn update(&amp;mut self, parent_name: &amp;str) -&gt; u32 {\n\n        for object in self.objects.iter_mut() {\n            self.counter += object.update(&amp;self.name);\n        }\n\n        // Do something with parent's name, e.g.:\n        println!(\"My parent's name is {}\", parent_name);\n\n        self.counter\n    }\n}\n</code></pre>\n\n<p>This code compiles because <code>self</code> is only mutated after <code>object</code>is mutated. So, my suggestion is to think about what you are doing to <code>parent</code> and find a way how you could separate this mutation from the mutations of the children (i.e. <code>objects</code>). Also, to read the parent's parameters you could just pass to <code>update</code> what you need. In my example, this is the parent's name.</p>\n"}], "owner": {"reputation": 15, "user_id": 11395424, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16sH0.png?s=128&g=1", "display_name": "TheProff", "link": "https://stackoverflow.com/users/11395424/theproff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "closed_date": 1576231844, "accepted_answer_id": 59319765, "answer_count": 1, "score": 0, "last_activity_date": 1576231008, "creation_date": 1576224167, "last_edit_date": 1576225379, "question_id": 59318408, "link": "https://stackoverflow.com/questions/59318408/how-to-iterate-through-a-vector-running-a-function-on-each-member-passing-mut-s", "closed_reason": "Duplicate", "title": "How to iterate through a vector running a function on each member passing &amp;mut self", "body": "<p>In my program I have a system where there is a list of objects, each of which stores a list of objects. (Kind of like a tree). Whenever these objects need to update a function is run that recursively goes through all the lists. It looks a bit like this:</p>\n\n<pre><code>struct Object {\n  objects: Vec&lt;Object&gt;\n}\n\nimpl Object {\n  fn update(&amp;mut self, parent: &amp;mut Object) {\n    for object in self.objects.iter_mut() {\n      object.update(self);\n    }\n  }\n}\n\n</code></pre>\n\n<p>However, the rust borrow checker prevents this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>35 |         for object in self.objects.iter_mut()  { // Loop through each sub object\n   |                       ---------------------------\n   |                       |\n   |                       first mutable borrow occurs here\n   |                       first borrow later used here\n36 |             object.update(self); // Update it\n   |                         \n</code></pre>\n\n<p>What would be the preferred way to do this. If you think this is an XY problem please tell me.</p>\n\n<p>EDIT: The objects need their parents for accessing some of the other parameters. (Not shown here)</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1576222406, "post_id": 59316139, "comment_id": 104836641, "body": "&quot;<i>After one of the functions panic, the holding of the mutex cannot be released</i>&quot; -- why do you think that? What have you tried to check this? Because, as far as I know, mutexes get &quot;poisoned&quot; when a thread holding a lock panics. In that case, you can still use the mutex later. Have you read <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.Mutex.html#poisoning\" rel=\"nofollow noreferrer\">this paragraph</a>? Does this help or is your question about something different?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1576222539, "post_id": 59316139, "comment_id": 104836691, "body": "You&#39;re not really supposed to recover from panic. A panic isn&#39;t just a gentle exception like a JS error, it&#39;s the program not able to run anymore."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1576229356, "post_id": 59316139, "comment_id": 104839489, "body": "@DenysS&#233;guret I don&#39;t know if that statement is correct on its own. Yes, people should absolutely not use panics for expected errors and shouldn&#39;t use panics as &quot;poor man&#39;s exceptions&quot;. But there are many situations where it makes sense to &quot;recover&quot; from panics, to start a process again, log errors, and more."}, {"owner": {"reputation": 379, "user_id": 6676972, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TotvU8qdfQA/AAAAAAAAAAI/AAAAAAAAABE/-Kg59N1l4D8/photo.jpg?sz=128", "display_name": "\u8042\u5c0f\u6d9b", "link": "https://stackoverflow.com/users/6676972/%e8%81%82%e5%b0%8f%e6%b6%9b"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1576846197, "post_id": 59316139, "comment_id": 105037067, "body": "@LukasKalbertodt I added an example"}], "answers": [{"tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 4, "last_activity_date": 1576572921, "creation_date": 1576572921, "answer_id": 59370630, "question_id": 59316139, "link": "https://stackoverflow.com/questions/59316139/how-do-i-trigger-the-release-of-a-rust-mutex-after-a-panic-in-wasm-so-that-futur/59370630#59370630", "title": "How do I trigger the release of a Rust Mutex after a panic in Wasm so that future calls will be ok?", "body": "<p>Before answering this question I should probably mention, that panic handling shouldn't be used as general error mechanism. They should be used for unrecoverable errors.</p>\n\n<p>Citing <a href=\"https://doc.rust-lang.org/std/macro.panic.html\" rel=\"nofollow noreferrer\">documentation.</a></p>\n\n<blockquote>\n  <p>This allows a program to terminate immediately and provide feedback to the caller of the program. panic! should be used when a program reaches an unrecoverable state.</p>\n</blockquote>\n\n<p>Panics in Rust are actually much more gentle than it may seem in the first place for people coming from C++ background (which I assume is the case for some people writing in the comments). Uncaught Rust panics by default terminate thread, while C++ exception terminate whole process.</p>\n\n<p>Citing <a href=\"https://doc.rust-lang.org/stable/std/thread/index.html\" rel=\"nofollow noreferrer\">documentation</a></p>\n\n<blockquote>\n  <p>Fatal logic errors in Rust cause thread panic, during which a thread will unwind the stack, running destructors and freeing owned resources. While not meant as a 'try/catch' mechanism, panics in Rust can nonetheless be caught (unless compiling with panic=abort) with catch_unwind and recovered from, or alternatively be resumed with resume_unwind. If the panic is not caught the thread will exit, but the panic may optionally be detected from a different thread with join. If the main thread panics without the panic being caught, the application will exit with a non-zero exit code.</p>\n</blockquote>\n\n<p>It is fine to <a href=\"https://doc.rust-lang.org/stable/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\">catch_unwind</a> and recover thread from panic, but you should know that <code>catch_unwind</code> isn't guaranteed to catch all panics.</p>\n\n<blockquote>\n  <p>Note that this function may not catch all panics in Rust. A panic in Rust is not always implemented via unwinding, but can be implemented by aborting the process as well. This function only catches unwinding panics, not those that abort the process.</p>\n</blockquote>\n\n<p>So, we understood that recovering from panic is fine. The question is what to do when lock is poisoned.</p>\n\n<p>Citing <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\">documentation</a></p>\n\n<blockquote>\n  <p>The mutexes in this module implement a strategy called \"poisoning\" where a mutex is considered poisoned whenever a thread panics while holding the mutex. Once a mutex is poisoned, all other threads are unable to access the data by default as it is likely tainted (some invariant is not being upheld).</p>\n</blockquote>\n\n<p>There is a valid reason for poisoning, because invariants of your data may not be held. Consider <code>panic!</code> in the middle of some function. This is just an additional level of security, that you can bypass. </p>\n\n<blockquote>\n  <p>A poisoned mutex, however, does not prevent all access to the underlying data. The PoisonError type has an into_inner method which will return the guard that would have otherwise been returned on a successful lock. This allows access to the data, despite the lock being poisoned. </p>\n</blockquote>\n\n<pre><code>use std::sync::{Mutex, PoisonError};\nfn main() {\n    let mutex = Mutex::new(1);\n\n    // We are prepared to face bugs if invariants are wrong\n    println!(\"{}\", mutex.lock().unwrap_or_else(PoisonError::into_inner));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=35cf77eca11cee193da391a78cd7822a\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>Of course it's always better to fix panic, than do this.</p>\n"}], "owner": {"reputation": 379, "user_id": 6676972, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TotvU8qdfQA/AAAAAAAAAAI/AAAAAAAAABE/-Kg59N1l4D8/photo.jpg?sz=128", "display_name": "\u8042\u5c0f\u6d9b", "link": "https://stackoverflow.com/users/6676972/%e8%81%82%e5%b0%8f%e6%b6%9b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 482, "favorite_count": 1, "accepted_answer_id": 59370630, "answer_count": 1, "score": 2, "last_activity_date": 1576907034, "creation_date": 1576211289, "last_edit_date": 1576892184, "question_id": 59316139, "link": "https://stackoverflow.com/questions/59316139/how-do-i-trigger-the-release-of-a-rust-mutex-after-a-panic-in-wasm-so-that-futur", "title": "How do I trigger the release of a Rust Mutex after a panic in Wasm so that future calls will be ok?", "body": "<p>I encountered a deadlock while developing with Rust and WebAssembly.</p>\n\n<p>Due to the use of some globally accessed variables, I choose <code>lazy_static</code> and a Mutex (using <code>thread_local</code> callbacks would have caused nesting problems). I have declared a lot of Rust functions are used by JavaScript through <code>#[wasm_bindgen]</code>. They read and write the <code>lazy_static</code> variables.</p>\n\n<p>After one of the functions panics, the mutex lock cannot be released, causing other functions to panic if they need to use the same mutex.</p>\n\n<p>I know that the panic problem is unexpected and needs to be fixed, but these functions are relatively independent of each other. Although the reading and writing of the <code>lazy_static</code> variables intersect, a certain bug may not necessarily affect other parts.</p>\n\n<p>How do I trigger the release of the <code>Mutex</code> after a panic in Wasm to allow other calls to be ok? Is there any better practice for this kind of problem?</p>\n\n<p>Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::Mutex;\nuse std::sync::PoisonError;\nuse wasm_bindgen::prelude::*;\n\npub struct CurrentStatus {\n    pub index: i32,\n}\n\nimpl CurrentStatus {\n    fn new() -&gt; Self {\n        CurrentStatus { index: 1 }\n    }\n    fn get_index(&amp;mut self) -&gt; i32 {\n        self.index += 1;\n        self.index.clone()\n    }\n\n    fn add_index(&amp;mut self) {\n        self.index += 2;\n    }\n}\n\nlazy_static! {\n    pub static ref FOO: Mutex&lt;CurrentStatus&gt; = Mutex::new(CurrentStatus::new());\n}\n\nunsafe impl Send for CurrentStatus {}\n\n#[wasm_bindgen]\npub fn add_index() {\n    FOO.lock()\n        .unwrap_or_else(PoisonError::into_inner)\n        .add_index();\n}\n\n#[wasm_bindgen]\npub fn get_index() -&gt; i32 {\n    let mut foo = FOO.lock().unwrap_or_else(PoisonError::into_inner);\n    if foo.get_index() == 6 {\n        panic!();\n    }\n    return foo.get_index();\n}\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const js = import(\"../pkg/hello_wasm.js\");\njs.then(js =&gt; {\n  window.js = js;\n  console.log(js.get_index());\n  js.add_index();\n  console.log(js.get_index());\n  js.add_index();\n  console.log(js.get_index());\n  js.add_index();\n  console.log(js.get_index());\n  js.add_index();\n  console.log(js.get_index());\n  js.add_index();\n});\n</code></pre>\n\n<p>After the panic, I can not call the function at all and it is as if the Wasm is dead.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576204416, "post_id": 59315296, "comment_id": 104832175, "body": "The difference is described in the first sentence of both pages of documentation: <i>[PartialOrd is] for values that can be compared for a sort-order.</i>; <i>[Ord is] for types that form a total order.</i>"}, {"owner": {"reputation": 23772, "user_id": 1035008, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/afa583c070c82a0961be918141f953fe?s=128&d=identicon&r=PG", "display_name": "Yuchen", "link": "https://stackoverflow.com/users/1035008/yuchen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576204679, "post_id": 59315296, "comment_id": 104832222, "body": "Ok @Shepmaster your answer on the other question explains it well. I didn&#39;t know the concept of total order and partial order before. TIL. Thanks!"}], "owner": {"reputation": 23772, "user_id": 1035008, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/afa583c070c82a0961be918141f953fe?s=128&d=identicon&r=PG", "display_name": "Yuchen", "link": "https://stackoverflow.com/users/1035008/yuchen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 357, "favorite_count": 1, "closed_date": 1576204716, "answer_count": 0, "score": 2, "last_activity_date": 1576204740, "creation_date": 1576203744, "last_edit_date": 1576204672, "question_id": 59315296, "link": "https://stackoverflow.com/questions/59315296/why-does-rust-need-the-partialord-trait-in-addition-to-the-ord-trait", "closed_reason": "Duplicate", "title": "Why does Rust need the PartialOrd trait in addition to the Ord trait?", "body": "<p>I want to define <code>Ord</code> for a custom type <code>Point</code> so it is sorted by the distance to the origin for <a href=\"https://adventofcode.com/2019/day/10\" rel=\"nofollow noreferrer\">Advent of Code 2019 day 10</a>: </p>\n\n<pre><code>impl std::cmp::Ord for Point {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; std::cmp::Ordering {\n        let this = self.x * self.x + self.y + self.y;\n        let that = other.x * other.x + other.y * other.y;\n        return this.cmp(&amp;that);\n    }\n}\n</code></pre>\n\n<p>However, I ran into this compile error:</p>\n\n<blockquote>\n  <p>= help: the trait <code>std::cmp::PartialOrd</code> is not implemented for <code>helpers::models::Point</code></p>\n</blockquote>\n\n<p>The documentation for <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html\" rel=\"nofollow noreferrer\"><code>PartialOrd</code></a> only explains how to <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html#derivable\" rel=\"nofollow noreferrer\">derive</a> it or <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html#how-can-i-implement-partialord\" rel=\"nofollow noreferrer\">implement</a> it. Those are pretty clear. </p>\n\n<p>Why does <code>Ord</code> depend on this? What does the name <code>Partial</code> imply in the trait name? When will it get used?</p>\n"}, {"tags": ["memory", "vector", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576201022, "post_id": 59314686, "comment_id": 104831554, "body": "1. no, magic doesn&#39;t exist 2. <code>1024*1024*4</code> != <code>1024*1024</code> 3. your code don&#39;t even compile."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1576203057, "post_id": 59314686, "comment_id": 104831914, "body": "I did my own test, unfortunatly you right it&#39;s way more slow and the explanation is simple, Rust doesn&#39;t look if array type is zero, <a href=\"https://github.com/rust-lang/rust/blob/ddca1e09c36a6ce21d95fec1619f23ba59b69c8a/src/liballoc/vec.rs#L1719\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/blob/&hellip;</a>. I believe that with const fn this could change"}], "answers": [{"tags": [], "owner": {"reputation": 907, "user_id": 6205743, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mF7jp.jpg?s=128&g=1", "display_name": "Fang Zhang", "link": "https://stackoverflow.com/users/6205743/fang-zhang"}, "is_accepted": false, "score": 3, "last_activity_date": 1576208444, "creation_date": 1576208444, "answer_id": 59315831, "question_id": 59314686, "link": "https://stackoverflow.com/questions/59314686/how-to-efficiently-create-a-large-vector-of-items-initialized-to-the-same-value/59315831#59315831", "title": "How to efficiently create a large vector of items initialized to the same value?", "body": "<p><code>vec![0; 1024 * 1024]</code> is a special case. If you change it to <code>vec![1; 1024 * 1024]</code>, you will see performance degrades dramatically. </p>\n\n<p>Typically, for <strong>non-zero</strong> element <code>e</code>, <code>vec![e; n]</code> will <strong>clone</strong> the element <code>n</code> times, which is the major cost. For element equal to <code>0</code>, there is other system approach to init the memory, which is much faster.</p>\n\n<p>So the answer to your question is no.</p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1576251042, "post_id": 59323493, "comment_id": 104850392, "body": "Anything that state that <code>from_raw_parts()</code> can be use with alloc ? Apart the fact that it&#39;s obvious."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1576251485, "post_id": 59323493, "comment_id": 104850605, "body": "Hmm, good question. <code>std::alloc</code> says <a href=\"https://doc.rust-lang.org/std/alloc/index.html\" rel=\"nofollow noreferrer\">the standard library has one \u201cglobal\u201d memory allocator that is used for example by <code>Box&lt;T&gt;</code> and <code>Vec&lt;T&gt;</code>.</a>, and <code>alloc_zeroed</code> <a href=\"https://doc.rust-lang.org/std/alloc/fn.alloc_zeroed.html\" rel=\"nofollow noreferrer\">is documented</a> to use the global allocator."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 4, "last_activity_date": 1599582750, "last_edit_date": 1599582750, "creation_date": 1576243472, "answer_id": 59323493, "question_id": 59314686, "link": "https://stackoverflow.com/questions/59314686/how-to-efficiently-create-a-large-vector-of-items-initialized-to-the-same-value/59323493#59323493", "title": "How to efficiently create a large vector of items initialized to the same value?", "body": "<p><a href=\"https://stackoverflow.com/a/59315831/3650362\">Fang Zhang's answer</a> is correct in the general case. The code you asked about is a little bit special: it <em>could</em> use <code>alloc_zeroed</code>, but it does not. As Stargateur also points out in the question comments, with future language and library improvements it is possible both cases could take advantage of this speedup.</p>\n<p>This usually should not be a problem. Initializing a whole big vector at once probably isn't something you do extremely often. Big allocations are usually long-lived, so you won't be creating and freeing them in a tight loop -- the cost of initializing the vector will only be paid rarely. Sooner than resorting to <code>unsafe</code>, I would take a look at my algorithms and try to understand why a single <code>memset</code> is causing so much trouble.</p>\n<p>However, <strong>if</strong> you happen to know that all-bits-zero is an acceptable initial value, and <strong>if</strong> you absolutely cannot tolerate the slowdown, you can do an end-run around the standard library by calling <code>alloc_zeroed</code> and creating the <code>Vec</code> using <code>from_raw_parts</code>. <code>Vec::from_raw_parts</code> is <code>unsafe</code>, so you have to be <strong>absolutely sure</strong> the size and alignment of the allocated memory is correct. Since Rust 1.44, you can use <a href=\"https://doc.rust-lang.org/std/alloc/struct.Layout.html#method.array\" rel=\"nofollow noreferrer\"><code>Layout::array</code></a> to do this easily. Here's an example:</p>\n<pre><code>pub fn make_vec() -&gt; Vec&lt;[i8; 4]&gt; {\n    let layout = std::alloc::Layout::array::&lt;[i8; 4]&gt;(1_000_000).unwrap();\n    // I copied the following unsafe code from Stack Overflow without understanding\n    // it. I was advised not to do this, but I didn't listen. It's my fault.\n    unsafe {\n        Vec::from_raw_parts(\n            std::alloc::alloc_zeroed(layout) as *mut _,\n            1_000_000,\n            1_000_000,\n        )\n    }\n}\n</code></pre>\n<h1>See also</h1>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/38863315/how-to-perform-efficient-vector-initialization-in-rust\">How to perform efficient vector initialization in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 123, "user_id": 857269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4b1106e007feaa55d78dfb151256d38?s=128&d=identicon&r=PG", "display_name": "danglingptr", "link": "https://stackoverflow.com/users/857269/danglingptr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 598, "favorite_count": 1, "answer_count": 2, "score": 6, "last_activity_date": 1599582750, "creation_date": 1576197968, "last_edit_date": 1576250785, "question_id": 59314686, "link": "https://stackoverflow.com/questions/59314686/how-to-efficiently-create-a-large-vector-of-items-initialized-to-the-same-value", "title": "How to efficiently create a large vector of items initialized to the same value?", "body": "<p>I'm looking to allocate a vector of small-sized structs.</p>\n\n<p>This takes 30 milliseconds and increases linearly:</p>\n\n<pre><code>let v = vec![[0, 0, 0, 0]; 1024 * 1024];\n</code></pre>\n\n<p>This takes tens of microseconds:</p>\n\n<pre><code>let v = vec![0; 1024 * 1024];\n</code></pre>\n\n<p>Is there a more efficient solution to the first case? I'm okay with unsafe code.</p>\n"}, {"tags": ["syntax", "compiler-errors", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": true, "score": 3, "last_activity_date": 1576164498, "creation_date": 1576164498, "answer_id": 59307942, "question_id": 59307772, "link": "https://stackoverflow.com/questions/59307772/weird-syntax-error-error-expected-one-of-or-found-else/59307942#59307942", "title": "Weird syntax error &#39;error: expected one of `,` or `:`, found `else`&#39;", "body": "<p>Your problem is the <code>| |</code> in the if condition. That parses not as a logical OR (<code>||</code>) but as two separate bitwise OR operators (<code>|</code>). Just change it to <code>||</code> without space inbetween.</p>\n\n<p>A minimal example:</p>\n\n<pre><code>fn main() {\n    let adjust = true;\n    let al = 0xFF;\n\n    /* does not parse:\n    if (al &amp; 0x0F) &gt; 9 | | adjust {\n    }\n    */\n\n    if (al &amp; 0x0F) &gt; 9 || adjust {\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 349, "user_id": 1862123, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/17a3486a39c8d9d47d10e9c76a31d9d1?s=128&d=identicon&r=PG", "display_name": "Richard John Catalano", "link": "https://stackoverflow.com/users/1862123/richard-john-catalano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1122, "favorite_count": 0, "closed_date": 1576171837, "accepted_answer_id": 59307942, "answer_count": 1, "score": 3, "last_activity_date": 1576164498, "creation_date": 1576163933, "last_edit_date": 1576164446, "question_id": 59307772, "link": "https://stackoverflow.com/questions/59307772/weird-syntax-error-error-expected-one-of-or-found-else", "closed_reason": "Not suitable for this site", "title": "Weird syntax error &#39;error: expected one of `,` or `:`, found `else`&#39;", "body": "<p>Currently I'm working on a VM written in Rust. There are two syntax errors I'm running into both of which I'm struggling to solve as they don't seem to quite make sense to me.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>pub fn aaa(vm: &amp;mut VM, pipeline: &amp;Pipeline, _hv: &amp;mut dyn Hypervisor) -&gt; Result&lt;(), VMError&gt;{\n    let mut al = vm.get_reg(Reg8::AL as u8, ValueSize::Byte)?.u8_exact()?;\n    let ah = vm.get_reg(Reg8::AH as u8, ValueSize::Byte)?.u8_exact()?;\n    let adjust = vm.flags.adjust;\n    if (al &amp; 0x0F) &gt; 9 | | adjust {\n        vm.set_reg(Reg8::AL as u8, SizedValue::Byte(al1.overflowing_add(6)));\n        vm.set_reg(Reg8::AH as u8, SizedValue::Byte(ah.overflowing_add(1)));\n        vm.flags.adjust = true;\n        vm.flags.carry = true;\n    } else {\n        vm.flags.adjust = false;\n        vm.flags.carry = false;\n    }\n    al = vm.get_reg(Reg8::AL as u8, ValueSize::Byte)?.u8_exact()?;\n    vm.set_reg(Reg8::AL as u8, SizedValue::Byte(al2 &amp; 0x0F));\n    Ok(())\n}\n</code></pre>\n\n<p>The errors I'm getting are here:</p>\n\n<pre><code>error: expected `,`\n   --&gt; src/ops.rs:738:9\n    |\n738 |         vm.set_reg(Reg8::AL as u8, SizedValue::Byte(al1.overflowing_add(6)));\n    |         ^^\n\n   --&gt; src/ops.rs:738:9\n    |\n738 |         vm.set_reg(Reg8::AL as u8, SizedValue::Byte(al1.overflowing_add(6)));\n    |         ^^\n\nerror: expected one of `,` or `:`, found `else`\n   --&gt; src/ops.rs:742:7\n    |\n742 |     } else {\n    |       ^^^^ expected one of `,` or `:` here\n</code></pre>\n\n<p>I'm merely trying to access the struct field implemented functions, I'm not sure why the compiler would tell me to use a comma instead of the period. Furthermore I have no idea why it's expecting a comma or a colon instead of my else statement. The if else appears to be perfectly aligned. Anyone else running into this? Is this a compiler bug? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1576164190, "post_id": 59307618, "comment_id": 104817777, "body": "When it comes to <code>into_iter</code>, array is kinda special, see duplicate for the gory detail. You can either make function <code>print_title</code> taking a reference or define <code>books</code> as a <code>Vec</code> like so: <code>let books = vec![...]</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576175902, "post_id": 59307618, "comment_id": 104823838, "body": "<code>for</code> calls <code>into_iter</code> implicitly, just FYI. <code>for X in Y.into_iter()</code> is virtually always a mistake. It may compile, but has different semantics than plain <code>for X in Y</code> which is normally what you mean."}, {"owner": {"reputation": 1265, "user_id": 1110044, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/cb4341ed064e1617fa1d88203f4c2415?s=128&d=identicon&r=PG", "display_name": "eawer", "link": "https://stackoverflow.com/users/1110044/eawer"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576584691, "post_id": 59307618, "comment_id": 104940390, "body": "@trentcl if I remove <code>into_iter</code> I receive <code>borrow the array with `&amp;` or call `.iter()` on it to iterate over it</code> while with <code>into_iter</code> it works as expected"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576586482, "post_id": 59307618, "comment_id": 104941305, "body": "<i>it works as expected</i>? Obviously, it doesn&#39;t, because you meant to iterate over <code>books</code> by value and you got it by reference. If you really wanted to iterate over <code>books</code> by reference, you could have followed the compiler&#39;s advice: <code>for book in &amp;books</code> does the same thing (and causes the same error). Again: <code>for book in books.into_iter()</code> is <i>virtually always</i> a mistake."}], "owner": {"reputation": 1265, "user_id": 1110044, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/cb4341ed064e1617fa1d88203f4c2415?s=128&d=identicon&r=PG", "display_name": "eawer", "link": "https://stackoverflow.com/users/1110044/eawer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 34, "favorite_count": 0, "closed_date": 1576167800, "answer_count": 0, "score": 0, "last_activity_date": 1576163513, "creation_date": 1576163513, "question_id": 59307618, "link": "https://stackoverflow.com/questions/59307618/access-the-value-of-the-struct-while-iterating-over-the-array-of-structs", "closed_reason": "Duplicate", "title": "Access the value of the struct while iterating over the array of structs", "body": "<p>I have such <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4da014668d88589fa76ff1d2e2681758\" rel=\"nofollow noreferrer\">code</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    pub struct Book {\n        pub title: String,\n        pub author: String,\n    };\n\n    impl Book {\n        fn print_title(book: Book) {\n            println!(\"{}\", book.title);\n        }\n    }\n\n    let books: [Book; 2] = [\n        Book {\n            title: String::from(\"Best Served Cold\"),\n            author: String::from(\"Joe Abercrombie\"),\n        },\n        Book {\n            title: String::from(\"The Lord of the Rings\"),\n            author: String::from(\"John Tolkien\"),\n        },\n    ];\n    for book in books.into_iter() {\n        Book::print_title(book);\n    }\n}\n</code></pre>\n\n<p>What I'm trying to do is to pass each <code>book</code> value into a related function (I know it probably could be done some dumber or smarter way, yet I need to use related function). The problem is I'm getting this error:</p>\n\n<pre><code>expected struct models::NewBook, found reference\n</code></pre>\n\n<p>If I do <code>Book::print_title(*book);</code> then I get</p>\n\n<pre><code>cannot move out of `*book` which is behind a shared reference\n</code></pre>\n\n<p>So the question is how can I pass the <strong>value</strong> of a <code>book</code> to the related function <code>print_title</code>?\n<code>books</code> array won't be ever reused and I won't ever need <code>book</code> values if that matters.</p>\n"}, {"tags": ["http", "io", "rust", "stream", "reqwest"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1576162409, "post_id": 59306868, "comment_id": 104816672, "body": "You can&#39;t do that with <code>io::copy</code>. <code>io::copy</code>&#39;s job is literally to copy the entire thing no matter what it is. You&#39;d have to tell <code>reqwest</code> to end the downloading somehow, but given that <code>reqwest</code> is mostly a convenience library around <a href=\"https://docs.rs/crate/hyper/0.13.0\" rel=\"nofollow noreferrer\"><code>hyper</code></a> to download things simply, I also doubt it would have an API for this. Your next move would then to use <code>hyper</code> directly, where cancelling a stream is just a matter of dropping its future."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1576162591, "post_id": 59306868, "comment_id": 104816784, "body": "I also don&#39;t know much about the MP3 format, but I doubt you can just split a file at any point and get a valid MP3 file out of that. You&#39;d probably get something that your player can play, because they are used to bad files, but it wouldn&#39;t necessarily be valid."}], "answers": [{"comments": [{"owner": {"reputation": 1093, "user_id": 9315690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/747b19bfb99db8f9f3411c19da6c9c50?s=128&d=identicon&r=PG&f=1", "display_name": "Newbyte", "link": "https://stackoverflow.com/users/9315690/newbyte"}, "edited": false, "score": 0, "creation_date": 1576175541, "post_id": 59310134, "comment_id": 104823696, "body": "Do you think you could add a code example of how you would implement this? Somewhat new to Rust."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 2, "last_activity_date": 1576183442, "last_edit_date": 1576183442, "creation_date": 1576172571, "answer_id": 59310134, "question_id": 59306868, "link": "https://stackoverflow.com/questions/59306868/how-do-i-tell-stdiocopy-in-rust-to-stop-reading-and-finish-up-writing/59310134#59310134", "title": "How do I tell std::io::copy in Rust to stop reading and finish up writing?", "body": "<p>As the comments said, <code>io::copy</code> is a convenience function to read a <code>Reader</code> in full and write it's content to a <code>Writer</code> without stoping in between; it's used for when you do <em>not</em> care about intermediate state but just want the entire thing to be shipped from the reader to the writer.</p>\n\n<p>If you just want the first few Kb from the <code>response</code>, you can use <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.take\" rel=\"nofollow noreferrer\">io::Read::take</a>, which limits the <code>Reader</code> to whatever limit you specified. It will return a new <code>Reader</code> which you can pass to <code>io::copy</code>.</p>\n\n<p>And yes, you can cut an MP3-file at arbitrary positions. It is a framed format and while you will most likely destroy the last frame, practically all mp3-decoders are able to handle this.</p>\n\n<hr>\n\n<p>Something to the tune of</p>\n\n<pre><code>// `Read` needs to be in scope, so .take() is available on a `io::Read`\nuse std::io::Read;\nuse std::io;\nuse std::fs::File;\n\nfn main() {\n    let mut response = reqwest::get(STREAM_URL)\n        .expect(\"Failed to request mp3 stream\")\n        .take(100*1024);  // Since `Response` is `Read`, we can `take` from it.\n    let mut output = File::create(\"stream.mp3\")\n        .expect(\"Failed to create file!\");\n    // `response` is a limited reader, so it will only read 100kb before\n    // returning EOF, signaling a successful completion to `copy`.\n    io::copy(&amp;mut response, &amp;mut output)\n        .expect(\"Failed to copy mp3 stream to file\");\n}\n</code></pre>\n"}], "owner": {"reputation": 1093, "user_id": 9315690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/747b19bfb99db8f9f3411c19da6c9c50?s=128&d=identicon&r=PG&f=1", "display_name": "Newbyte", "link": "https://stackoverflow.com/users/9315690/newbyte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 487, "favorite_count": 0, "accepted_answer_id": 59310134, "answer_count": 1, "score": 2, "last_activity_date": 1576183442, "creation_date": 1576161251, "question_id": 59306868, "link": "https://stackoverflow.com/questions/59306868/how-do-i-tell-stdiocopy-in-rust-to-stop-reading-and-finish-up-writing", "title": "How do I tell std::io::copy in Rust to stop reading and finish up writing?", "body": "<p>I'm doing a direct download of an MP3 audio stream via Rust. As this stream is indefinite, I want to be able to cancel it early to save what I have downloaded so far. Currently, I do this by pressing CTRL + C to stop the program. This results in a stream.mp3 file I can then play back and listen to, and while this works, it isn't ideal.</p>\n\n<p>Given the following code, how could I programmatically stop <code>io::copy()</code> early and have it save the file without killing the entire program?</p>\n\n<pre><code>extern crate reqwest;\n\nuse std::io;\nuse std::fs::File;\n\n// Note that this is a direct link to the stream, not a webpage with HTML and a stream\nconst STREAM_URL: &amp;str = \"http://path.to/stream\";\n\nfn main() {\n    let mut response = reqwest::get(STREAM_URL)\n        .expect(\"Failed to request mp3 stream\");\n    let mut output = File::create(\"stream.mp3\")\n        .expect(\"Failed to create file!\");\n    io::copy(&amp;mut response, &amp;mut output)\n        .expect(\"Failed to copy mp3 stream to file\");\n}\n</code></pre>\n"}, {"tags": ["rust", "macros", "lifetime"], "comments": [{"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "edited": false, "score": 1, "creation_date": 1576162914, "post_id": 59306592, "comment_id": 104816982, "body": "do you need the reference? A non-ideal solution would perhaps be to make the macro consume <code>p.to_string_lossy()</code>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "edited": false, "score": 1, "creation_date": 1576163513, "post_id": 59306592, "comment_id": 104817315, "body": "@lucidbrot the macro uses an object (S) which is very complex and reference based (so that it doesn&#39;t copy things). I can&#39;t really change the object and I understand why it&#39;s difficult. What I&#39;m looking at is a trick to make the lifetime rules which apply to the function call apply to the macro call."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1576163628, "post_id": 59306592, "comment_id": 104817407, "body": "<code>to_string_lossy</code> returns a <code>Cow</code>, who do you want the owner of this to be in the last example?"}, {"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "edited": false, "score": 0, "creation_date": 1576163840, "post_id": 59306592, "comment_id": 104817544, "body": "I see. The problem is clear to you, right? With the <code>let</code>, the reference exists until the end of <code>main</code>. Without, it only exists until the end of the macro, which means that <code>S</code> would reference something that no longer exists."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1576164461, "post_id": 59306592, "comment_id": 104817938, "body": "In fact a solution could probably be to make the macro call different functions depending on the number of arguments. But this would be a horrible macro..."}], "answers": [{"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1576164575, "post_id": 59307932, "comment_id": 104818007, "body": "This isn&#39;t quite as ergonomic as the function solution"}, {"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1576164614, "post_id": 59307932, "comment_id": 104818034, "body": "That is true. It&#39;s the best I have found until now, but I am not that experienced with rust macros. Perhaps you find something better"}, {"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1576167183, "post_id": 59307932, "comment_id": 104819680, "body": "@DenysS&#233;guret See the end of my answer for a solution that allows you to return something. It also returns the input expression, so that it is not out of scope yet"}], "tags": [], "owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "is_accepted": false, "score": 2, "last_activity_date": 1576167125, "last_edit_date": 1576167125, "creation_date": 1576164471, "answer_id": 59307932, "question_id": 59306592, "link": "https://stackoverflow.com/questions/59306592/lifetime-constraints-on-a-macro-returning-a-value/59307932#59307932", "title": "Lifetime constraints on a macro returning a value", "body": "<h1>TL;DR</h1>\n\n<pre><code>#[macro_export]\nmacro_rules! mag {\n    ($value: expr) =&gt; {\n        ($value, S{ src: &amp;$value, off: 1 })\n\n    };\n}\n\npub fn main() {\n   let p = std::path::PathBuf::from(\"hi\"); \n   dbg!(mag!(p.to_string_lossy()).0);\n}\n</code></pre>\n\n<hr>\n\n<p>I have found a solution, inspired by <a href=\"https://stackoverflow.com/a/38780056/2550406\">this Answer</a>:</p>\n\n<pre><code>struct S&lt;'s&gt; {\n    src: &amp;'s str,\n    off: usize,\n}\nimpl std::fmt::Debug for S&lt;'_&gt; {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter&lt;'_&gt;) -&gt; std::fmt::Result {\n        write!(f, \"* {}\", &amp;self.src[self.off..])\n    }\n}\n\nfn fun&lt;'s&gt;(value: &amp;'s str) -&gt; S&lt;'s&gt; {\n    let s = S{ src: value, off: 1 };\n    s\n}\n\n/// The real macro is variadic, that's why it can't be replaced with a function\n#[macro_export]\nmacro_rules! mac {\n    ($value: expr) =&gt; {{\n        let s = S{ src: $value, off: 1 };\n        // there should be more here\n        s\n    }};\n}\n\n#[macro_export]\nmacro_rules! macc {\n    ($value: expr, $var0:ident, $var1:ident) =&gt; {\n        let $var1 = $value;\n        let $var0 = S{ src: &amp;$var1, off: 1 };\n        // there should be more here\n\n    };\n}\n\npub fn main() {\n   let p = std::path::PathBuf::from(\"hi\"); \n\n   // works OK\n   dbg!(fun(&amp;p.to_string_lossy()));\n\n   // works ok\n   let temp = p.to_string_lossy();\n   dbg!(mac!(&amp;temp));\n\n   // CAN be compiled\n   macc!(p.to_string_lossy(), alpha, beta);\n   dbg!(alpha);\n}\n</code></pre>\n\n<p>I define a macro <code>macc</code> instead of your <code>mac</code>. It takes some identifiers that then become available in your calling scope (i.e. within <code>main()</code>).<br>\nThat way, the macro can <code>let beta</code> with it staying in scope. This is so that the macro does not create unexpected identifiers, overwriting existing variable names.  </p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a383cfbcbfa31e82a0545082fb5a73ad\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<hr>\n\n<p>If the macro is <a href=\"https://www.reddit.com/r/rust/comments/3owg82/is_it_possible_to_tell_rust_to_relax_its_macro/\" rel=\"nofollow noreferrer\">defined within the same function</a>, you can get rid of one of the two identifier arguments:</p>\n\n<pre><code>pub fn main() {\n#[macro_export]\nmacro_rules! maccc {\n    ($value: expr, $var0:ident) =&gt; {\n        let my_own_thing = $value;\n        let $var0 = S{ src: &amp;my_own_thing, off: 1 };\n        // there should be more here\n\n    };\n}\n   let p = std::path::PathBuf::from(\"hi\"); \n\n   // works when maccc is defined within the function\n   maccc!(p.to_string_lossy(), gamma);\n   dbg!(gamma);\n}\n</code></pre>\n\n<hr>\n\n<h1>I think I got it as good as it gets:</h1>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b375b930672d981070995bf1131144e5\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>struct S&lt;'s&gt; {\n    src: &amp;'s str,\n    off: usize,\n}\nimpl std::fmt::Debug for S&lt;'_&gt; {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter&lt;'_&gt;) -&gt; std::fmt::Result {\n        write!(f, \"* {}\", &amp;self.src[self.off..])\n    }\n}\n\n#[macro_export]\nmacro_rules! mag {\n    ($value: expr) =&gt; {\n        ($value, S{ src: &amp;$value, off: 1 })\n\n    };\n}\n\npub fn main() {\n   let p = std::path::PathBuf::from(\"hi\"); \n\n   // works\n   let (_,m) = mag!(p.to_string_lossy());\n   dbg!(m);\n}\n</code></pre>\n\n<p>This returns a tuple with the temporary value and <code>s</code>, so that the temporary value does not yet go out of scope. You can even do it this way:</p>\n\n<pre><code>   // works\n   let m = mag!(p.to_string_lossy()).0;\n   dbg!(m);\n</code></pre>\n"}], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1576167125, "creation_date": 1576160323, "last_edit_date": 1576164316, "question_id": 59306592, "link": "https://stackoverflow.com/questions/59306592/lifetime-constraints-on-a-macro-returning-a-value", "title": "Lifetime constraints on a macro returning a value", "body": "<p>In the following code the <code>fun</code> function and the <code>mac</code> macro do the same thing:</p>\n\n<pre><code>struct S&lt;'s&gt; {\n    src: &amp;'s str,\n    off: usize,\n}\nimpl std::fmt::Debug for S&lt;'_&gt; {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter&lt;'_&gt;) -&gt; std::fmt::Result {\n        write!(f, \"* {}\", &amp;self.src[self.off..])\n    }\n}\n\nfn fun&lt;'s&gt;(value: &amp;'s str) -&gt; S&lt;'s&gt; {\n    let s = S{ src: value, off: 1 };\n    s\n}\n\n/// The real macro is variadic, that's why it can't be replaced with a function\n#[macro_export]\nmacro_rules! mac {\n    ($value: expr) =&gt; {{\n        let s = S{ src: $value, off: 1 };\n        // there should be more here\n        s\n    }};\n}\n\npub fn main() {\n   let p = std::path::PathBuf::from(\"hi\"); \n\n   // works OK\n   dbg!(fun(&amp;p.to_string_lossy()));\n\n   // works ok\n   let temp = p.to_string_lossy();\n   dbg!(mac!(&amp;temp));\n\n   // can't be compiled\n   dbg!(mac!(&amp;p.to_string_lossy()));\n}\n</code></pre>\n\n<p>But the macro can't be called as easily. The last line of code can't be compiled.</p>\n\n<p>How could I fix the macro to avoid the \"temporary which is freed while still in use\" problem, so that macro users don't have to create uselessly verbose temporary variables ?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=21b5b8dcd995dc626449765acbe402ec\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["windows", "rust"], "answers": [{"tags": [], "owner": {"reputation": 31, "user_id": 12525451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14d02843d396d5697c9d48b58f940286?s=128&d=identicon&r=PG&f=1", "display_name": "turniphead44", "link": "https://stackoverflow.com/users/12525451/turniphead44"}, "is_accepted": false, "score": 0, "last_activity_date": 1576680147, "creation_date": 1576680147, "answer_id": 59394403, "question_id": 59306580, "link": "https://stackoverflow.com/questions/59306580/how-do-i-prevent-a-windows-program-started-with-processcommand-from-opening-a-p/59394403#59394403", "title": "How do I prevent a Windows program started with process:Command from opening a popup?", "body": "<p>I decided to just kill the command process if an error popup did open.</p>\n\n<p>I did this by using <code>spawn()</code> which will create a child process, allowing me to continue executing my code after I have started running the .exe and then just error handle it so if the executable hangs due to the pop up(you can tell it will hang after a specific amount of time has passed) then just kill the child process...</p>\n"}], "owner": {"reputation": 31, "user_id": 12525451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14d02843d396d5697c9d48b58f940286?s=128&d=identicon&r=PG&f=1", "display_name": "turniphead44", "link": "https://stackoverflow.com/users/12525451/turniphead44"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1576680317, "creation_date": 1576160301, "last_edit_date": 1576680317, "question_id": 59306580, "link": "https://stackoverflow.com/questions/59306580/how-do-i-prevent-a-windows-program-started-with-processcommand-from-opening-a-p", "title": "How do I prevent a Windows program started with process:Command from opening a popup?", "body": "<p>I run an executable like this:</p>\n\n<pre><code>let output = Command::new(\"executable_file\")\n                    .args( &amp;[\"-path\", path] ).output()?;\n//do stuff with output...\n</code></pre>\n\n<p>Sometimes an error occurs and the executable will report an error which will cause a Windows error popup that will need to be closed by the user. </p>\n\n<p>Is there a way to prevent Windows popups or just close any popups that do appear and continue?</p>\n\n<p>Currently my program will just sit there waiting for the user to close the popup...</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1576157346, "last_edit_date": 1576157346, "creation_date": 1576156894, "answer_id": 59305595, "question_id": 59305116, "link": "https://stackoverflow.com/questions/59305116/iterate-over-combinations-of-elements-of-a-vector-and-manipulate-elements/59305595#59305595", "title": "Iterate over combinations of elements of a vector and manipulate elements", "body": "<p>No, you can't do this. The <a href=\"https://docs.rs/itertools/0.8.2/itertools/trait.Itertools.html#method.combinations\" rel=\"nofollow noreferrer\"><code>itertools::Itertools::combinations</code></a> is defined as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn combinations(self, k: usize) -&gt; Combinations&lt;Self&gt;\nwhere\n    Self: Sized,\n    Self::Item: Clone,\n</code></pre>\n\n<p>It says the items of underlying iterator need to be <code>Clone</code>. After all, all combinations contain every item more than once by definition. But <a href=\"https://doc.rust-lang.org/stable/std/clone/trait.Clone.html#additional-implementors\" rel=\"nofollow noreferrer\">mutable reference never implements <code>Clone</code></a> since it is exclusive in Rust.</p>\n\n<p>OTOH, if your <code>MyType</code> is itself <code>Clone</code>, you can try:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut v: Vec&lt;MyType&gt; = vec![];\nfor vpair in v.into_iter().combinations(2) {\n     vpair.first().unwrap().do_something(vpair.last().unwrap());\n}\n</code></pre>\n\n<p>Since you own items returned from <code>into_iter</code>, you can do whatever you want with them. But every round of the loop manipulates independent clones of them, that may or may not be what you intend to do.</p>\n"}], "owner": {"reputation": 309, "user_id": 5567817, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e546330d9d1e879b77caceb096f55282?s=128&d=identicon&r=PG&f=1", "display_name": "Iniesta8", "link": "https://stackoverflow.com/users/5567817/iniesta8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1025, "favorite_count": 0, "accepted_answer_id": 59305595, "answer_count": 1, "score": 3, "last_activity_date": 1576167234, "creation_date": 1576155385, "last_edit_date": 1576167234, "question_id": 59305116, "link": "https://stackoverflow.com/questions/59305116/iterate-over-combinations-of-elements-of-a-vector-and-manipulate-elements", "title": "Iterate over combinations of elements of a vector and manipulate elements", "body": "<p>I'd like to get all combinations of the elements of a vector. I'm using itertools' combinations() function. That's fine, but now I want to manipulate elements of the vector. Therefore I need an iterator that yields mutable references of the elements of the vector...</p>\n\n<p>My code basically looks like follows:</p>\n\n<pre><code>let mut v: Vec&lt;MyType&gt; = vec![];\nfor vpair in v.iter_mut().combinations(2) {\n     vpair.first().unwrap().do_something(vpair.last().unwrap());\n}\n</code></pre>\n\n<p>By calling <code>do_something()</code> I want to manipulate <code>vpair.first().unwrap()</code> and <code>vpair.last().unwrap()</code> on each iteration.</p>\n\n<p>The error I receive is:</p>\n\n<p><code>the trait std::clone::Clone is not implemented for &amp;mut MyType</code></p>\n\n<p>Can I somehow manage this issue or am I completely on the wrong track?</p>\n"}, {"tags": ["rust", "type-conversion"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 1, "creation_date": 1576153508, "post_id": 59304434, "comment_id": 104811488, "body": "I would expect you can do this the opposite way, but can&#39;t really turn a &quot;dynamic&quot; value into something available statically."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576153560, "post_id": 59304434, "comment_id": 104811519, "body": "that not possible you need a <code>&amp;&#39;static &amp;&#39;static str</code>"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 7, "creation_date": 1576154117, "post_id": 59304434, "comment_id": 104811825, "body": "Sounds like this might be an XY problem. Why do you need a <code>&amp;&#39;static &amp;str</code>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576156027, "post_id": 59304434, "comment_id": 104812869, "body": "The question code can be fixed by making a small change: <code>let var = &amp;&quot;temp&quot;;</code> However I assume this will not work for your actual code, which is why we need more information."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576156766, "post_id": 59304434, "comment_id": 104813260, "body": "@trentcl I was trying to find some information about that, is it transferring the first borrow&#39;s lifetime to the second borrow?(&amp;&amp;str) Which makes sense but i couldn&#39;t find any reference about the case."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1576158474, "post_id": 59304434, "comment_id": 104814221, "body": "@&#214;merErden <code>&quot;temp&quot;</code> is a const rvalue, which means it&#39;s subject to <a href=\"https://stackoverflow.com/questions/50345139/why-can-i-return-a-reference-to-a-local-literal-but-not-a-variable\">static promotion</a>. You can take as many <code>&amp;</code> references as you want to a literal and as long as you don&#39;t coerce them shorter they will all have the <code>&#39;static</code> lifetime. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ef3170da54b6db03083f5ab6ec84eb84\" rel=\"nofollow noreferrer\">Example</a>"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576159483, "post_id": 59304434, "comment_id": 104814853, "body": "@trentcl looking for this thanks ! And i guess this looks like an answer for this question."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1576161402, "post_id": 59304434, "comment_id": 104816047, "body": "Definitely looks like an X/Y problem. <a href=\"https://docs.rs/actix-files/0.2.0-alpha.3/actix_files/struct.Files.html#method.new\" rel=\"nofollow noreferrer\"><code>fs::Files::new</code></a> does <i>not</i> require its argument to be <code>&#39;static</code>; That would be weird."}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1576186335, "post_id": 59304434, "comment_id": 104827859, "body": "Maybe it helps to have <code>fun</code> accept a <code>String</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 0, "last_activity_date": 1576621917, "creation_date": 1576621917, "answer_id": 59383038, "question_id": 59304434, "link": "https://stackoverflow.com/questions/59304434/rust-str-convertion-to-static-str/59383038#59383038", "title": "Rust &amp;str convertion to &amp;&#39;static &amp;str", "body": "<p>When the compiler says you need <code>&amp;'static</code>, it doesn't really mean that. It's trying to tell you that <strong>temporary references are not allowed here</strong>.</p>\n\n<p><code>&amp;'static str</code> is a special case that is basically a leaked memory. In 99.99% of cases it's a bad idea to leak memory, so compiler's suggestion is stupid. Don't try to use <code>&amp;'static str</code>. Use an owned <code>String</code> instead.</p>\n\n<p>Keep in mind that <code>&amp;str</code> is not a string by itself, but a read-only view of some string stored elsewhere.</p>\n\n<p>So the real problem is that you've used a temporary <code>&amp;str</code>, and you should have used a permanently stored <code>String</code> instead.</p>\n\n<hr>\n\n<p>But for the 0.01% of cases where you can leak memory of a string, here's how:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let leaked: &amp;'static str = Box::leak(\"hi\".to_string().into_boxed_str());\n</code></pre>\n"}], "owner": {"reputation": 131, "user_id": 9018487, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-LQrZmtYn09k/AAAAAAAAAAI/AAAAAAAADfY/C3A7MMlUMe8/photo.jpg?sz=128", "display_name": "Piotr P\u0142aczek", "link": "https://stackoverflow.com/users/9018487/piotr-p%c5%82aczek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 403, "favorite_count": 0, "closed_date": 1576629729, "answer_count": 1, "score": 1, "last_activity_date": 1576629905, "creation_date": 1576153129, "last_edit_date": 1576156814, "question_id": 59304434, "link": "https://stackoverflow.com/questions/59304434/rust-str-convertion-to-static-str", "closed_reason": "Duplicate", "title": "Rust &amp;str convertion to &amp;&#39;static &amp;str", "body": "<p>I am receiving an <code>&amp;str</code> from the application's args but I need this value as <code>&amp;'static &amp;str</code>.\nHow can I convert it?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7ab020528a0d3e26a49b915542f50c8e\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7ab020528a0d3e26a49b915542f50c8e</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn fun(var: &amp;'static &amp;str) {}\n\nfn main() {\n    let var: &amp;str = \"temp\";\n    fun(var);\n}\n</code></pre>\n\n<pre class=\"lang-sh prettyprint-override\"><code>error[E0308]: mismatched types\n   --&gt; src/main.rs:102:9\n    |\n102 |         matches.value_of(\"STATIC-FILES\").unwrap(),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected &amp;str, found str\n    |\n    = note: expected type `&amp;'static &amp;str`\n               found type `&amp;str`\n\nerror: aborting due to previous error\n</code></pre>\n\n<hr>\n\n<h3>@more informations</h3>\n\n<pre><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 main.rs\n\u2502   \u2514\u2500\u2500 server.rs\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// file: main.rs\nextern crate clap;\n\nuse clap::{App, Arg};\n\nmod server;\n\nfn main() {\n    let app = App::new(\"My App\")\n    .arg(\n            Arg::with_name(\"STATIC-FILES\")\n                .help(\"Sets absolute path to client's static files\")\n                .default_value(\"/var/www/client\"),\n        )\n\n    let matches = app.get_matches();\n\n    let s = server::start(\n        matches.value_of(\"STATIC-FILES\").unwrap(),\n    );\n</code></pre>\n\n<pre><code>// file: server.rs\nuse actix_files as fs;\nuse actix_web::{guard, web, App, HttpResponse, HttpServer};\n\npub fn start(\n    static_files_path: &amp;'static &amp;str,\n) -&gt; io::Result&lt;()&gt; {\n\n    let sys = actix_rt::System::new(\"myappsvr\");\n\n    HttpServer::new(move || {\n        let sfp = move || static_files_path;\n        App::new()\n            .service(fs::Files::new(\"/\", sfp()).index_file(\"index.html\"))\n    })\n\n    (...)\n\n    .start();\n\n    sys.run();\n}\n</code></pre>\n\n<p>In <code>main.rs</code> I starting http server (actix). Path to directory with static files have to be passed as argument.</p>\n\n<p><code>App::new().service(fs::Files::new(\"/\", sfp()).index_file(\"index.html\"))</code> requires <code>&amp;'static &amp;str</code> in place of <code>spf()</code>.</p>\n"}, {"tags": ["arrays", "function", "rust", "reference", "binary-operators"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1576139337, "post_id": 59300309, "comment_id": 104803880, "body": "In C++ and Python, you can multiply an array by another? :O"}, {"owner": {"reputation": 111, "user_id": 8402106, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bwq80.jpg?s=128&g=1", "display_name": "chimbo", "link": "https://stackoverflow.com/users/8402106/chimbo"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1576139969, "post_id": 59300309, "comment_id": 104804134, "body": "In third party libraries such as Eigen (C++) and NumPy (Python), yes. In both, the common arithmetic operators (i.e. +, -, *, /) are overloaded to perform element-wise operations when used with two arrays (the array types specific to Eigen and NumPy, I mean; not the built in array types)."}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 1, "last_activity_date": 1576140842, "last_edit_date": 1576140842, "creation_date": 1576139676, "answer_id": 59300503, "question_id": 59300309, "link": "https://stackoverflow.com/questions/59300309/how-can-i-pass-an-mut-ndarrayarray-to-a-function-and-perform-element-wise-ari/59300503#59300503", "title": "How can I pass an &amp;mut ndarray::Array to a function and perform element-wise arithmetic with it?", "body": "<p>You've answered your own question: the multiplication you are trying to perform is <code>&amp;C @ B</code>, which isn't one of the four supported by <code>ndarray</code>. Also, you are passing <code>pz</code> as value to a function. It is consumed first round of the loop and isn't available any more for the rest. So that won't compile either.</p>\n\n<p>This works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate ndarray;\nuse ndarray::prelude::*;\n\nfn main() {\n    let pz = array![[0.7, 0.3], [0.3, 0.7]];\n    let mut y = Array2::&lt;f64&gt;::zeros((1, 2));\n\n    for _ in 1..10 {\n        do_some_maths(&amp;mut y, &amp;pz);\n    }\n\n    println!(\"Result: {}\", y);\n}\n\nfn do_some_maths(y: &amp;mut Array2&lt;f64&gt;, pz: &amp;Array2&lt;f64&gt;) {\n    *y *= &amp;pz.slice(s![.., 0]);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 7543, "user_id": 1794051, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4fc6d765eadabca02bdd7b44d6504720?s=128&d=identicon&r=PG", "display_name": "val", "link": "https://stackoverflow.com/users/1794051/val"}, "is_accepted": false, "score": 1, "last_activity_date": 1577785492, "last_edit_date": 1577785492, "creation_date": 1577784628, "answer_id": 59542163, "question_id": 59300309, "link": "https://stackoverflow.com/questions/59300309/how-can-i-pass-an-mut-ndarrayarray-to-a-function-and-perform-element-wise-ari/59542163#59542163", "title": "How can I pass an &amp;mut ndarray::Array to a function and perform element-wise arithmetic with it?", "body": "<p>A mutable reference is 'more powerful' than an immutable one, and you can always get a mutable reference to act as an immutable one, so that is not a problem.</p>\n\n<p>As edwardw points out, you probably do not want to consume your array <code>pz</code> on every loop (and the compiler won't let you do that anyway). Indeed, if you think about the signature of your <code>do_some_maths</code> function, what you have is:</p>\n\n<ul>\n<li>A mutable array that you want to modify</li>\n<li>An immutable one that you use in addition</li>\n</ul>\n\n<p>So it makes sense to have the signature being:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn do_some_maths(y: &amp;mut Array2&lt;f64&gt;, pz: &amp;Array2&lt;f64&gt;) {\n   ...\n}\n</code></pre>\n\n<p>Now, the <code>ndarray</code> crate lets you:</p>\n\n<ul>\n<li>Modify values in-place\nOR</li>\n<li>create new ones for your operations</li>\n</ul>\n\n<p>Generally, it is quite sensible about its inputs, taking references whenever possible as to not consume your input arrays. That means a good deal of (de)referencing might be needed, which you should feel free to use. In numpy, pretty much everything is a reference all the time, so you don't have to worry about it, but the logic is the same.</p>\n\n<p>If you want to create <code>Yp</code> from <code>Y</code>, you can do that by allocating a new <code>Yp</code> value:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn do_some_maths(y: &amp;mut Array2&lt;f64&gt;, pz: &amp;Array2&lt;f64&gt;) {\n    // yp is a new Array2&lt;f64&gt;\n    let yp: Array2&lt;f64&gt; = y * pz;\n    // We may want to modify `y` now\n    y.scaled_add(-2.3, yp);\n    y *= pz;\n}\n</code></pre>\n\n<p>The various operations made here are:</p>\n\n<ul>\n<li>&amp;Array2 * &amp;Array2 -> Array2</li>\n<li>scaled_add(self: &amp;mut Array2, f64, &amp;Array2) -> (), modifying the array in-place</li>\n<li>in-place scalar operation &amp;mut Array2 *= &amp;Array2</li>\n</ul>\n\n<p>In general, try to use references (mutable or not) as much as possible, except if you know that the input <em>should</em> be consumed. </p>\n\n<p>To clarify the parallel with numpy: numpy arrays are essentially <em>all</em> references. Rust gives you the granularity to either pass in values directly (which are therefore consumed - think of them as use-once, then they are destroyed) or references (either mutable or immutable depending on whether you need to mutate them). Numpy uses essentially mutable references everywhere (except if you explicitly switch the <code>WRITEABLE</code> flag).</p>\n"}], "owner": {"reputation": 111, "user_id": 8402106, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bwq80.jpg?s=128&g=1", "display_name": "chimbo", "link": "https://stackoverflow.com/users/8402106/chimbo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 432, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1577785492, "creation_date": 1576138826, "last_edit_date": 1592644375, "question_id": 59300309, "link": "https://stackoverflow.com/questions/59300309/how-can-i-pass-an-mut-ndarrayarray-to-a-function-and-perform-element-wise-ari", "title": "How can I pass an &amp;mut ndarray::Array to a function and perform element-wise arithmetic with it?", "body": "<h2>Motivation</h2>\n<p>I am trying to create my first real deal program in Rust for a school project (not a requirement..I just have been fascinated by Rust and decided that I'm going to take the plunge).</p>\n<p>The project is a simple simulation of a robot's decisions based on some sensor data, some probabilities, prediction of future rewards, and some other stuff. The program consists of a main loop where lots of math takes place at each time step for some time horizon into the future. The data that gets carried to each subsequent time step is represented by a matrix <em>Y</em> that consists of two columns of linear coefficients (which are modified at each time step) of a set of linear constraints (where more constraints/rows of coefficients are added to the set at each time step).</p>\n<p>Since the program will require lots of element-wise matrix operations and I'm well experienced in NumPy, the <code>ndarray</code> crate seemed like a perfect fit for the job. My thought process for the program was to make a mutable 2D array for <em>Y</em> that would get modified with each loop iteration, rather than allocating a new array every time. It has since dawned on me that the number of rows will grow an unknown amount with each iteration as well, so maybe this approach wasn't the greatest idea, but my question on the error I'm getting stands regardless.</p>\n<h2>Question</h2>\n<p>My question is this: if I want to modify an array at each iteration of a loop by passing a reference to the array into several functions that will modify its data, how can I also use the same array in basic element-wise arithmetic operations?</p>\n<p>Here is a bare-bones example of my code to demonstrate:</p>\n<pre><code>extern crate ndarray;\n\nuse ndarray::prelude::*;\n\nfn main() {\n    let pz = array![[0.7, 0.3], [0.3, 0.7]]; // measurement probabilities\n\n    let mut Y = Array2::&lt;f64&gt;::zeros((1, 2));\n\n    for i in 1..10 {\n        do_some_maths(&amp;mut Y, pz);\n        // other functions that will modify Y\n    }\n    \n    println!(&quot;Result: {}&quot;, Y);\n}\n\nfn do_some_maths(Y: &amp;mut Array2&lt;f64&gt;, pz: Array2&lt;f64&gt;) {\n\n    let Yp = Y * pz.slice(s![.., 0]);  // &lt;-- this is the problem\n\n    // do lots of matrix math with Yp\n    // ...\n    // then modify Y's data using Yp (hence Y needs to be &amp;mut)\n}\n</code></pre>\n<p>Which gives the following compiling error:</p>\n<pre><code>error[E0369]: binary operation `*` cannot be applied to type `&amp;mut ndarray::ArrayBase&lt;ndarray::OwnedRepr&lt;f64&gt;, ndarray::Dim&lt;[usize; 2]&gt;&gt;`\n  --&gt; src/main2.rs:21:16\n   |\n21 |     let Yp = Y * pz.slice(s![.., 0]);  // &lt;-- this is the problem\n   |              - ^ ------------------- ndarray::ArrayBase&lt;ndarray::ViewRepr&lt;&amp;f64&gt;, _&gt;\n   |              |\n   |              &amp;mut ndarray::ArrayBase&lt;ndarray::OwnedRepr&lt;f64&gt;, ndarray::Dim&lt;[usize; 2]&gt;&gt;\n   |\n   = note: an implementation of `std::ops::Mul` might be missing for `&amp;mut ndarray::ArrayBase&lt;ndarray::OwnedRepr&lt;f64&gt;, ndarray::Dim&lt;[usize; 2]&gt;&gt;`\n</code></pre>\n<p>I have spent many hours trying to understand</p>\n<ol>\n<li>what is the correct approach to my use case, and</li>\n<li>why the code I have written doesn't work.</li>\n</ol>\n<p>I read several questions on this site that were somewhat related, but none of them really went into the case of dealing with an Array reference as a function parameter and performing a binary operation on it.</p>\n<p>I've studied hard the first 5 chapters of the Rust book and dived deep into the documentation of <code>ndarray</code>, and I still can't find answers. <code>ndarray</code>'s documentation of <a href=\"https://docs.rs/ndarray/0.13.0/ndarray/struct.ArrayBase.html#binary-operators-with-two-arrays\" rel=\"nofollow noreferrer\"><code>ArrayBase</code></a> contains the following explanation, which I don't fully understand:</p>\n<blockquote>\n<h3>Binary Operations on Two Arrays</h3>\n<p>Let A be an array or view of any kind. Let B be an array with owned storage (either Array or ArcArray). Let C be an array with mutable data (either Array, ArcArray or ArrayViewMut). The following combinations of operands are supported for an arbitrary binary operator denoted by @ (it can be +, -, *, / and so on).</p>\n<ul>\n<li>&amp;A @ &amp;A which produces a new Array</li>\n<li>B @ A which consumes B, updates it with the result, and returns it</li>\n<li>B @ &amp;A which consumes B, updates it with the result, and returns it</li>\n<li>C @= &amp;A which performs an arithmetic operation in place</li>\n</ul>\n</blockquote>\n<p>Given this description, and searching through the many trait implementations for <code>Add</code>, <code>Mul</code>, etc., it seems to me that a <strong>mutable <code>ndarray::Array</code> cannot be an operand in a binary operation, except in the case of compound assignment.</strong></p>\n<p>Is that true, or am I missing something here? I don't want to simply memorize this little tidbit and move on; I really want to understand what is actually going on here, and where my understanding is lacking. Please help me to wrap my C++/Python trained brain around this. :)</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1576156534, "post_id": 59298027, "comment_id": 104813129, "body": "Check the <code>socket2</code> crate - with it you can bind() the socket before connect()"}, {"owner": {"reputation": 347, "user_id": 12167264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642adaee4e4afed5e9c20bb29327853f?s=128&d=identicon&r=PG&f=1", "display_name": "rusty", "link": "https://stackoverflow.com/users/12167264/rusty"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1576165901, "post_id": 59298027, "comment_id": 104818868, "body": "Thanks Svetlin for the pointer. socket2::Socket should certainly work IIUC, this method is available only for the non-async users. I recently ported our system to use async. Is there a way to do this with async?"}, {"owner": {"reputation": 347, "user_id": 12167264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642adaee4e4afed5e9c20bb29327853f?s=128&d=identicon&r=PG&f=1", "display_name": "rusty", "link": "https://stackoverflow.com/users/12167264/rusty"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1576166117, "post_id": 59298027, "comment_id": 104819001, "body": "Just for my understanding, the non-async sequence would be: socket2::Socket::bind() -&gt; socket2::Socket::connect() -&gt; socket2::Socket::into_tcp_stream(). At this point, one could do a tokio::net::TcpStream::from_std() to move to the async world. But the connect() above is going to be non-async/blocking.   Does this sound right?"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1576171740, "post_id": 59298027, "comment_id": 104821985, "body": "I guess you can do non-blocking connect/bind (by doing socket.set_nonblocking(true)?; first) but then you&#39;ll have to handle the complexity in your code."}, {"owner": {"reputation": 347, "user_id": 12167264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642adaee4e4afed5e9c20bb29327853f?s=128&d=identicon&r=PG&f=1", "display_name": "rusty", "link": "https://stackoverflow.com/users/12167264/rusty"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1576283458, "post_id": 59298027, "comment_id": 104861888, "body": "I ended up doing something similar: make the socket non-blocking + <code>tokio::timer::delay_for().await</code> in a retry loop."}, {"owner": {"reputation": 1668, "user_id": 1704411, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/9zqQG.png?s=128&g=1", "display_name": "Alice Ryhl", "link": "https://stackoverflow.com/users/1704411/alice-ryhl"}, "edited": false, "score": 0, "creation_date": 1608984529, "post_id": 59298027, "comment_id": 115723357, "body": "Answer updated for Tokio 1.x and 0.3"}], "answers": [{"tags": [], "owner": {"reputation": 1668, "user_id": 1704411, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/9zqQG.png?s=128&g=1", "display_name": "Alice Ryhl", "link": "https://stackoverflow.com/users/1704411/alice-ryhl"}, "is_accepted": false, "score": 2, "last_activity_date": 1608984496, "last_edit_date": 1608984496, "creation_date": 1580025493, "answer_id": 59916539, "question_id": 59298027, "link": "https://stackoverflow.com/questions/59298027/how-to-bind-on-tcp-client-side-in-rust-tokio/59916539#59916539", "title": "How to bind() on TCP client side in rust/tokio?", "body": "<p>In Tokio version 1.x and 0.3, you can do this through the <a href=\"https://docs.rs/tokio/1/tokio/net/struct.TcpSocket.html\" rel=\"nofollow noreferrer\"><code>TcpSocket</code></a> type using its <a href=\"https://docs.rs/tokio/1/tokio/net/struct.TcpSocket.html#method.bind\" rel=\"nofollow noreferrer\"><code>bind</code></a> method.</p>\n<pre><code>use std::io::Result;\nuse tokio::net::{TcpSocket, TcpStream};\n\nasync fn connect_bind(bind: SockAddr, connect: SockAddr) -&gt; Result&lt;TcpStream&gt; {\n    let socket = TcpSocket::new_v4()?;\n    socket.bind(bind)?;\n\n    socket.connect(connect).await\n}\n</code></pre>\n<hr />\n<p><strong>Old answer for Tokio 0.2</strong></p>\n<p>The best way of doing this at the moment is indeed to use <code>socket2</code> to create the socket and convert it into a Tokio <code>TcpStream</code>. In order to correctly handle the fact that the connection step will be blocking with this approach, you can use <a href=\"https://docs.rs/tokio/0.2/tokio/task/fn.spawn_blocking.html\" rel=\"nofollow noreferrer\"><code>tokio::task::spawn_blocking</code></a>.</p>\n<pre class=\"lang-rs prettyprint-override\"><code>use std::io::Result;\n\nuse tokio::task::spawn_blocking;\nuse tokio::net::TcpStream;\n\nuse socket2::{Socket, SockAddr, Domain, Type};\n\nasync fn connect_bind(bind: SockAddr, connect: SockAddr) -&gt; Result&lt;TcpStream&gt; {\n    spawn_blocking(move || {\n        let socket = Socket::new(Domain::ipv4(), Type::stream(), None)?;\n        socket.bind(&amp;bind)?;\n        socket.connect(&amp;connect)?;\n        TcpStream::from_std(socket.into_tcp_stream())\n    }).await?\n}\n</code></pre>\n<p>Using <code>spawn_blocking</code> like this is rather common \u2014 this is how Tokio implements file system operations.</p>\n"}], "owner": {"reputation": 347, "user_id": 12167264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642adaee4e4afed5e9c20bb29327853f?s=128&d=identicon&r=PG&f=1", "display_name": "rusty", "link": "https://stackoverflow.com/users/12167264/rusty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 499, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1608984496, "creation_date": 1576127146, "last_edit_date": 1576144089, "question_id": 59298027, "link": "https://stackoverflow.com/questions/59298027/how-to-bind-on-tcp-client-side-in-rust-tokio", "title": "How to bind() on TCP client side in rust/tokio?", "body": "<p>I have a need to make sure the client side of the TCP connection goes through a particular (IP) interface. The standard way would be to <code>bind()</code> the socket to the <code>IP:0</code>, before the <code>connect()</code>.</p>\n\n<p>I started looking at <code>tokio::net::TcpStream::connect()</code> and friends, which doesn't seem to have a way to do this. I took a step back and looked at <code>std::net::TcpStream</code>, which doesn't have it either.</p>\n\n<p>Am I missing something, or do I need to go through some lower level APIs?</p>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"tags": [], "owner": {"reputation": 9, "user_id": 12522279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4a85b89ba7c08c449478a8d3367cfa5c?s=128&d=identicon&r=PG&f=1", "display_name": "drklee3", "link": "https://stackoverflow.com/users/12522279/drklee3"}, "is_accepted": true, "score": 0, "last_activity_date": 1576126832, "creation_date": 1576126832, "answer_id": 59297990, "question_id": 59297985, "link": "https://stackoverflow.com/questions/59297985/how-do-i-fix-mismatched-return-types-with-a-custom-error-enum/59297990#59297990", "title": "How do I fix mismatched return types with a custom Error enum?", "body": "<p>Since starting the <code>HttpServer</code> responds with <code>Result&lt;(), io::error::Error&gt;</code>, the error needs to be converted into the custom <code>error::Error</code> enum.  This can be done by using the <code>?</code> operator then wrapping it again in an <code>Ok()</code>, so <code>Ok(HttpServer ... .start().await?)</code>.</p>\n\n<p>Or, a cleaner way (imo) convert the error with <code>.map_err(Into::into)</code>.</p>\n\n<p><code>.map_err()</code> doesn't need to be used for the <code>.bind()</code> call as the <code>?</code> operator will convert the error.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[actix_rt::main]\nasync fn main() -&gt; Result&lt;()&gt; {\n    std::env::set_var(\"RUST_LOG\", \"actix_web=info\");\n    env_logger::init();\n\n    HttpServer::new(|| {\n        App::new()\n            // enable logger\n            .wrap(middleware::Logger::default())\n            .service(\n                // static files\n                fs::Files::new(\"/static\", \"./static/\").show_files_listing(),\n            )\n            .service(album)\n            .service(image)\n    })\n    .bind(\"127.0.0.1:8080\")?\n    .start()\n    .await\n    .map_err(Into::into)\n}\n</code></pre>\n"}], "owner": {"reputation": 9, "user_id": 12522279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4a85b89ba7c08c449478a8d3367cfa5c?s=128&d=identicon&r=PG&f=1", "display_name": "drklee3", "link": "https://stackoverflow.com/users/12522279/drklee3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 0, "accepted_answer_id": 59297990, "answer_count": 1, "score": 1, "last_activity_date": 1576126832, "creation_date": 1576126814, "question_id": 59297985, "link": "https://stackoverflow.com/questions/59297985/how-do-i-fix-mismatched-return-types-with-a-custom-error-enum", "title": "How do I fix mismatched return types with a custom Error enum?", "body": "<p>I've been running into the following error with mismatched types.  Currently using a custom Error enum to hold errors from various crates as shown in <code>error.rs</code> below and I'm trying to use it for my main function's return type.  How can I convert the error so that there aren't mismatched types?</p>\n\n<h3>Error message</h3>\n\n<pre class=\"lang-sh prettyprint-override\"><code>\u2192 cargo build\n   Compiling dphoto v0.1.0 (/home/drk/Documents/github/dphoto)\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:10:1\n   |\n10 | #[actix_rt::main]\n   | ^^^^^^^^^^^^^^^^^ expected enum `error::Error`, found struct `std::io::Error`\n11 | async fn main() -&gt; Result&lt;()&gt; {\n   |                    ---------- expected `std::result::Result&lt;(), error::Error&gt;` because of return type\n   |\n   = note: expected type `std::result::Result&lt;_, error::Error&gt;`\n              found type `std::result::Result&lt;_, std::io::Error&gt;`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: could not compile `dphoto`.\n</code></pre>\n\n<h3>Build info and dependencies</h3>\n\n<pre class=\"lang-sh prettyprint-override\"><code>\u2192 rustc --version\nrustc 1.39.0 (4560ea788 2019-11-04)\n</code></pre>\n\n<h3>main.rs</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_files as fs;\nuse actix_web::{middleware, App, HttpServer};\n\nmod api;\nmod error;\nmod resizer;\nuse api::{album, image};\nuse error::Result;\n\n#[actix_rt::main]\nasync fn main() -&gt; Result&lt;()&gt; {\n    std::env::set_var(\"RUST_LOG\", \"actix_web=info\");\n    env_logger::init();\n\n    HttpServer::new(|| {\n        App::new()\n            // enable logger\n            .wrap(middleware::Logger::default())\n            .service(\n                // static files\n                fs::Files::new(\"/static\", \"./static/\").show_files_listing(),\n            )\n            .service(album)\n            .service(image)\n    })\n    .bind(\"127.0.0.1:8080\")?\n    .start()\n    .await\n}\n</code></pre>\n\n<h3>error.rs</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>...\n\n/// Common result type\npub type Result&lt;T&gt; = StdResult&lt;T, Error&gt;;\n\n/// Common error type to hold errors from other crates\n#[derive(Debug)]\npub enum Error {\n    /// A `image` crate error\n    Image(ImageError),\n    /// A `std::io` crate error\n    Io(IoError),\n}\n\nimpl From&lt;IoError&gt; for Error {\n    fn from(err: IoError) -&gt; Error {\n        Error::Io(err)\n    }\n}\n\n...\n</code></pre>\n"}, {"tags": ["generics", "rust", "argument-unpacking"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1576134251, "post_id": 59297712, "comment_id": 104801924, "body": "You are conflating value level construct with type level one. I&#39;d suggest you to clarify the question otherwise it should be closed."}, {"owner": {"reputation": 69, "user_id": 11916175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efab8058889340f9d89a4e6be129f36d?s=128&d=identicon&r=PG&f=1", "display_name": "Saxpy", "link": "https://stackoverflow.com/users/11916175/saxpy"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1576135083, "post_id": 59297712, "comment_id": 104802246, "body": "@edwardw Sorry I don&#39;t understand your comment. What do you mean by value level construct and type level one?"}], "answers": [{"comments": [{"owner": {"reputation": 69, "user_id": 11916175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efab8058889340f9d89a4e6be129f36d?s=128&d=identicon&r=PG&f=1", "display_name": "Saxpy", "link": "https://stackoverflow.com/users/11916175/saxpy"}, "edited": false, "score": 0, "creation_date": 1576202119, "post_id": 59299945, "comment_id": 104831738, "body": "This solves my specific problem (+1), thought I still wonder if there is a way to actually perform pattern matching. Would you know of a way?"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "reply_to_user": {"reputation": 69, "user_id": 11916175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efab8058889340f9d89a4e6be129f36d?s=128&d=identicon&r=PG&f=1", "display_name": "Saxpy", "link": "https://stackoverflow.com/users/11916175/saxpy"}, "edited": false, "score": 0, "creation_date": 1576235616, "post_id": 59299945, "comment_id": 104842679, "body": "@Saxpy Unfortunately, I don&#39;t think it is possible with current Rust."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 3, "last_activity_date": 1576137202, "creation_date": 1576137202, "answer_id": 59299945, "question_id": 59297712, "link": "https://stackoverflow.com/questions/59297712/is-it-possible-to-unpack-a-generic-tuple-via-pattern-matching-in-rust/59299945#59299945", "title": "Is it possible to unpack a generic tuple via pattern matching in Rust?", "body": "<p>You probably want the following:</p>\n\n<pre><code>pub struct QuadTree&lt;GenericPoint, V&gt; {\n  ...\n}\n</code></pre>\n\n<p>Then, you could require (via a trait) that <code>GenericPoint</code> offers an x- and a y-acceessor. Possibly you would also require <code>GenericPoint</code> to define type aliases for <code>Kx</code> and <code>Ky</code>.</p>\n"}], "owner": {"reputation": 69, "user_id": 11916175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efab8058889340f9d89a4e6be129f36d?s=128&d=identicon&r=PG&f=1", "display_name": "Saxpy", "link": "https://stackoverflow.com/users/11916175/saxpy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1576137202, "creation_date": 1576124796, "question_id": 59297712, "link": "https://stackoverflow.com/questions/59297712/is-it-possible-to-unpack-a-generic-tuple-via-pattern-matching-in-rust", "title": "Is it possible to unpack a generic tuple via pattern matching in Rust?", "body": "<p>It is possible to perform the following:</p>\n\n<pre><code>fn foo((a, b): (i32, f32)) {\n  unimplemented!();\n}\n</code></pre>\n\n<p>and it can be executed via:</p>\n\n<pre><code>let ab = (1, 2.0);\nfoo(ab);\n</code></pre>\n\n<p>In effect <code>ab</code> is unpacked into <code>a</code> and <code>b</code> separately.</p>\n\n<p>I'd like to do something similar with generics.</p>\n\n<pre><code>pub struct QuadTree&lt;(Kx, Ky), V&gt; {\n  ...\n}\n</code></pre>\n\n<p>Whether this is useful or not I'm not sure how to get this to compile. Ideally I'd like to be able to call something like this:</p>\n\n<pre><code>struct Point(i32, i32);    \n\n...\n\nlet quad_tree: QuadTree&lt;Point, String&gt; = QuadTree::new();\n</code></pre>\n\n<p>Would this be possible on Rust nightly without macros?</p>\n"}, {"tags": ["linux", "process", "rust", "waitpid"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576115646, "post_id": 59296406, "comment_id": 104797426, "body": "<i>but I have a problem using the waitpid function</i> \u2014 why do you ascribe the problem to <code>waitpid</code>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576123652, "post_id": 59296406, "comment_id": 104798989, "body": "I haven&#39;t studied your code so if you&#39;re doing a <code>mmap</code> or something, forgive me -- but it looks like you&#39;re expecting different processes to share memory, and processes don&#39;t (generally) work that way. See <a href=\"https://stackoverflow.com/questions/200469/what-is-the-difference-between-a-process-and-a-thread\">What is the difference between a process and a thread?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1576264450, "last_edit_date": 1576264450, "creation_date": 1576136644, "answer_id": 59299841, "question_id": 59296406, "link": "https://stackoverflow.com/questions/59296406/how-to-use-waitpid-to-wait-for-a-process-in-rust/59299841#59299841", "title": "How to use `waitpid` to wait for a process in Rust?", "body": "<p>This has nothing to do with <code>waitpid</code> and everything to do with <code>fork</code>. When you fork a process, the OS creates a copy of your data and the child operates on this copy <sup>1</sup>. When the child exits, its memory is discarded. The parent never sees the changes made by the child.</p>\n\n<p>If you need the parent to see the changes made by the child, you should do one of the following:</p>\n\n<ul>\n<li>Easiest and fastest is to use threads instead of processes. Threads share memory, so the parent and children all use the same memory. In Rust, the borrow checker ensures that parent and children behave correctly when accessing the same piece of memory.</li>\n<li>Use <a href=\"https://crates.io/crates/mmap\" rel=\"nofollow noreferrer\"><code>mmap</code></a> or something equivalent to share memory between the parent and children processes. Note however that it will be very difficult to ensure memory safety while the processes all try to access the same memory concurrently.</li>\n<li>Use some kind of <em>Inter-Process Communication</em> (IPC) mechanism to send the result back from the children to the parent. This is easier than <code>mmap</code> since there is no risk of collision during memory accesses but in your case, given the amount of data that will need to be sent, this will be the slowest.</li>\n</ul>\n\n<p><sup><strong>1</strong></sup> Actually, it uses Copy-On-Write, so data that is simply read is shared, but anything that either the parent or child writes will be copied and the other will not see the result of the write.</p>\n"}], "owner": {"reputation": 193, "user_id": 10330767, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wp-gWrY7MHM/AAAAAAAAAAI/AAAAAAAAAAc/OKAJPoTHw3M/photo.jpg?sz=128", "display_name": "Mateusz Piwowarski", "link": "https://stackoverflow.com/users/10330767/mateusz-piwowarski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 512, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1576264450, "creation_date": 1576113624, "last_edit_date": 1576115622, "question_id": 59296406, "link": "https://stackoverflow.com/questions/59296406/how-to-use-waitpid-to-wait-for-a-process-in-rust", "title": "How to use `waitpid` to wait for a process in Rust?", "body": "<p>I am trying to implement a merge sort using processes but I have a problem using the <code>waitpid</code> function: </p>\n\n<pre><code>extern crate nix;\nextern crate rand;\n\nuse nix::sys::wait::WaitStatus;\nuse rand::Rng;\nuse std::io;\nuse std::process::exit;\nuse std::thread::sleep;\nuse std::time::{Duration, Instant};\n\nuse nix::sys::wait::waitpid;\nuse nix::unistd::Pid;\nuse nix::unistd::{fork, getpid, getppid, ForkResult};\n\nstatic mut process_count: i32 = 0;\nstatic mut thread_count: i32 = 0;\n\nfn generate_array(len: usize) -&gt; Vec&lt;f64&gt; {\n    let mut my_vector: Vec&lt;f64&gt; = Vec::new();\n    for _ in 0..len {\n        my_vector.push(rand::thread_rng().gen_range(0.0, 100.0)); // 0 - 99.99999\n    }\n    return my_vector;\n}\n\nfn get_array_size_from_user() -&gt; usize {\n    let mut n = String::new();\n    io::stdin()\n        .read_line(&amp;mut n)\n        .expect(\"failed to read input.\");\n    let n: usize = n.trim().parse().expect(\"invalid input\");\n\n    return n;\n}\n\nfn display_array(array: &amp;mut Vec&lt;f64&gt;) {\n    println!(\"{:?}\", array);\n    println!();\n}\n\nfn clear_screen() {\n    print!(\"{}[2J\", 27 as char);\n    //print!(\"\\x1B[2J\"); // 2nd option\n}\n\npub fn mergeSort(a: &amp;mut Vec&lt;f64&gt;, low: usize, high: usize) {\n    let middle = (low + high) / 2;\n    let mut len = (high - low + 1);\n\n    if (len &lt;= 1) {\n        return;\n    }\n\n    let lpid = fork();\n\n    match lpid {\n        Ok(ForkResult::Child) =&gt; {\n            println!(\"Left Process Running \");\n            mergeSort(a, low, middle);\n            exit(0);\n        }\n        Ok(ForkResult::Parent { child }) =&gt; {\n            let rpid = fork();\n\n            match rpid {\n                Ok(ForkResult::Child) =&gt; {\n                    println!(\"Right Process Running \");\n                    mergeSort(a, middle + 1, high);\n                    exit(0);\n                }\n                Ok(ForkResult::Parent { child }) =&gt; {}\n                Err(err) =&gt; {\n                    panic!(\"Right process not created: {}\", err);\n                }\n            };\n        }\n\n        Err(err) =&gt; {\n            panic!(\"Left process not created {}\", err);\n        }\n    };\n\n    //waitpid(lpid, None);\n    //waitpid(rpid, None);\n\n    // Merge the sorted subarrays\n    merge(a, low, middle, high);\n}\n\nfn merge(a: &amp;mut Vec&lt;f64&gt;, low: usize, m: usize, high: usize) {\n    println!(\"x\");\n    let mut left = a[low..m + 1].to_vec();\n    let mut right = a[m + 1..high + 1].to_vec();\n\n    println!(\"left: {:?}\", left);\n    println!(\"right: {:?}\", right);\n\n    left.reverse();\n    right.reverse();\n\n    for k in low..high + 1 {\n        if left.is_empty() {\n            a[k] = right.pop().unwrap();\n            continue;\n        }\n        if right.is_empty() {\n            a[k] = left.pop().unwrap();\n            continue;\n        }\n        if right.last() &lt; left.last() {\n            a[k] = right.pop().unwrap();\n        } else {\n            a[k] = left.pop().unwrap();\n        }\n    }\n\n    println!(\"array: {:?}\", a);\n}\n\nunsafe fn display_process_thread_counts() {\n    unsafe {\n        println!(\"process count:\");\n        println!(\"{}\", process_count);\n        println!(\"thread count:\");\n        println!(\"{}\", thread_count);\n    }\n}\n\nunsafe fn process_count_plus_plus() {\n    process_count += 1;\n}\n\nunsafe fn thread_count_plus_plus() {\n    thread_count += 1;\n}\n\nfn print_time(start: Instant, end: Instant) {\n    println!(\"TIME:\");\n    println!(\"{:?}\", end.checked_duration_since(start));\n}\n\nfn main() {\n    println!(\"ENTER SIZE OF ARRAY \\n\");\n    let array_size = get_array_size_from_user();\n\n    let mut generated_array = generate_array(array_size);\n\n    clear_screen();\n\n    println!(\"GENERATED ARRAY: \\n\");\n    display_array(&amp;mut generated_array);\n\n    // SORTING\n    let start = Instant::now();\n    mergeSort(&amp;mut generated_array, 0, array_size - 1);\n    let end = Instant::now();\n\n    // RESULT\n\n    //unsafe{\n    //    process_count_plus_plus();\n    //    thread_count_plus_plus();\n    //}\n\n    println!(\"SORTED ARRAY: \\n\");\n    display_array(&amp;mut generated_array);\n\n    print_time(start, end);\n\n    unsafe {\n        display_process_thread_counts();\n    }\n}\n</code></pre>\n\n<p>I get these results without using <code>waitpid</code> for the vector <code>[3, 70, 97, 74]</code>:</p>\n\n<ol>\n<li><p>array before comparison: <code>[3, 70, 97, 74]</code></p>\n\n<p>comparison: <code>[97]</code>, <code>[74]</code></p>\n\n<p>array after comparison: <code>[3, 70, 74, 97]</code></p></li>\n<li><p>array before comparison: <code>[3, 70, 97, 74]</code></p>\n\n<p>comparison: <code>[3]</code>, <code>[70]</code></p>\n\n<p>array after comparison: <code>[3, 70, 97, 74]</code></p></li>\n<li><p>array before comparison: <code>[3, 70, 97, 74]</code></p>\n\n<p>comparison: <code>[3, 70]</code>, <strong><code>[97, 74]</code></strong> (should be <code>[74, 97]</code>)</p>\n\n<p>array after comparison: <code>[3, 70, 97, 74]</code></p></li>\n</ol>\n"}]