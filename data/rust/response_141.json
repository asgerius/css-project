[{"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 554, "user_id": 1293152, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/62a4db5608295ee73ea69dce2c2ef160?s=128&d=identicon&r=PG", "display_name": "Philippe Chaintreuil", "link": "https://stackoverflow.com/users/1293152/philippe-chaintreuil"}, "edited": false, "score": 1, "creation_date": 1563907876, "post_id": 46333242, "comment_id": 100854301, "body": "I totally thought the same thing as you when I read that.  I guess the important thing to know along with the response below is that the code you posted fails to compile, complaining of a <code>lifetime mismatch</code> between the <code>announcement</code> argument and the return type in the function prototype, explicitly noticing that you&#39;re returning data from <code>announcement</code>.  Thanks for posting this."}, {"owner": {"reputation": 554, "user_id": 1293152, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/62a4db5608295ee73ea69dce2c2ef160?s=128&d=identicon&r=PG", "display_name": "Philippe Chaintreuil", "link": "https://stackoverflow.com/users/1293152/philippe-chaintreuil"}, "edited": false, "score": 0, "creation_date": 1563908269, "post_id": 46333242, "comment_id": 100854476, "body": "By the way, for future Googlers: If you add an explicit (and matching) lifetime to <code>announcement</code> and the return type in the prototype, the function compiles, but then rust (correctly) complains about the lifetime not being long enough in <code>main()</code>."}], "answers": [{"comments": [{"owner": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "edited": false, "score": 1, "creation_date": 1505951862, "post_id": 46333270, "comment_id": 79627528, "body": "but in the doc it says <code>Then, because one of the parameters is &amp;self, the return type gets the lifetime of &amp;self, and all lifetimes have been accounted for.</code> , but it seems like all the lifetime has not been accounted for, how does the compiler know that assigning <code>&amp;self</code> lifetime is the valid one?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "edited": false, "score": 1, "creation_date": 1505953246, "post_id": 46333270, "comment_id": 79627835, "body": "@Jal yes, all the arguments / return types that require lifetimes have been <i>assigned</i> lifetimes, but that doesn&#39;t mean that the compiler-assigned lifetimes are the most precise or what you need. Perhaps the issue is just centered on the semantics around the phrase &quot;accounted for&quot;?"}, {"owner": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "edited": false, "score": 0, "creation_date": 1505953411, "post_id": 46333270, "comment_id": 79627869, "body": "ah, I see, the compiler just assign the lifetime to the most general case, which maybe a case that is not correct."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "reply_to_user": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "edited": false, "score": 1, "creation_date": 1505991448, "post_id": 46333270, "comment_id": 79643988, "body": "@Jal: I&#39;d like to add that the compiler shouldn&#39;t have to look at the implementation of a function. Lifetime elision rules are only concerned about the function signature. If it matches a certain pattern, lifetimes are assigned automatically. <code>fn(&amp;self, &amp;str) -&gt; &amp;str</code> is <i>always</i> short for <code>fn&lt;&#39;a&gt;(&amp;&#39;a self, &amp;str) -&gt; &amp;&#39;a str</code> regardless of how you implement that function. In your case, this matching pattern is not what you want which is why you have to be specific about the lifetimes."}, {"owner": {"reputation": 1197, "user_id": 6423456, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c12df3cae9bced6777b223671ce538fd?s=128&d=identicon&r=PG&f=1", "display_name": "John", "link": "https://stackoverflow.com/users/6423456/john"}, "edited": false, "score": 0, "creation_date": 1617805464, "post_id": 46333270, "comment_id": 118410066, "body": "<code>it won&#39;t guess what the lifetime of the remaining references should be</code>. Certainly seems like the compiler is guessing here. When I read that part of the book - even those exact quotes - I thought the same thing: the compiler only uses elision rules in common cases, where there is only one possible way to set explicit lifetimes anyway. Apparently not. The book could use some better wording to clarify this."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1505953871, "last_edit_date": 1505953871, "creation_date": 1505950897, "answer_id": 46333270, "question_id": 46333242, "link": "https://stackoverflow.com/questions/46333242/does-the-third-rule-of-lifetime-elision-capture-all-cases-for-struct-implementat/46333270#46333270", "title": "Does the third rule of lifetime elision capture all cases for struct implementations?", "body": "<p>No, the elision rules do <em>not</em> capture every possible case for lifetimes. If they did, then there wouldn't be any elision rules, they would be the <strong>only</strong> rules and we wouldn't need any syntax to specify explicit lifetimes.</p>\n\n<p>Quoting from the documentation you linked to, emphasis mine:</p>\n\n<blockquote>\n  <p>The patterns programmed into Rust's analysis of references are called\n  the lifetime elision rules. These aren't rules for programmers to\n  follow; the rules are a set of <strong>particular cases that the compiler will\n  consider, and if your code fits these cases, you don't need to write\n  the lifetimes explicitly</strong>.</p>\n  \n  <p>The elision rules don't provide full inference: if Rust\n  deterministically applies the rules but <strong>there's still ambiguity as to\n  what lifetimes the references have, it won't guess what the lifetime\n  of the remaining references should be</strong>. In this case, the compiler will\n  give you an error that can be resolved by adding the lifetime\n  annotations that correspond to your intentions for how the references\n  relate to each other.</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p>The lifetime of <code>announcement</code> is not as long as <code>&amp;self</code>, so it is not correct to associate the output lifetime to <code>&amp;self</code></p>\n  \n  <p>Why is the third rule of lifetime elision a valid way to assign output lifetime?</p>\n</blockquote>\n\n<p>\"correct\" is probably not the right word to use here. What the elision rules have done is <strong>a</strong> valid way, it just doesn't happen to be what you might have wanted.</p>\n\n<blockquote>\n  <p>shouldn't the output lifetime be associated to the longer of the input?</p>\n</blockquote>\n\n<p>Yes, that would be acceptable for this example, it's just not the most common case, so it's not what the elision rules were aimed to do.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31609137/155423\">Why are explicit lifetimes needed in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31083746/155423\">When do I need to specify explicit lifetimes in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29861388/155423\">When is it useful to define multiple lifetimes in a struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44709632/155423\">Why would you ever use the same lifetimes for references in a struct?</a></li>\n</ul>\n"}], "owner": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 182, "favorite_count": 0, "accepted_answer_id": 46333270, "answer_count": 1, "score": 5, "last_activity_date": 1505953871, "creation_date": 1505950597, "last_edit_date": 1505951229, "question_id": 46333242, "link": "https://stackoverflow.com/questions/46333242/does-the-third-rule-of-lifetime-elision-capture-all-cases-for-struct-implementat", "title": "Does the third rule of lifetime elision capture all cases for struct implementations?", "body": "<p>The third rule of lifetime elision says</p>\n\n<blockquote>\n  <p>If there are multiple input lifetime parameters, but one of them is <code>&amp;self</code> or <code>&amp;mut self</code> because this is a method, then the lifetime of <code>self</code> is assigned to all output lifetime parameters. This makes writing methods much nicer.</p>\n</blockquote>\n\n<p>Here is the <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html\" rel=\"noreferrer\">tutorial</a> describing what happened for this function</p>\n\n<pre><code>fn announce_and_return_part(&amp;self, announcement: &amp;str) -&gt; &amp;str\n</code></pre>\n\n<blockquote>\n  <p>There are two input lifetimes, so Rust applies the first lifetime elision rule and gives both <code>&amp;self</code> and <code>announcement</code> their own lifetimes. Then, because one of the parameters is <code>&amp;self</code>, the return type gets the lifetime of <code>&amp;self</code>, and all lifetimes have been accounted for.</p>\n</blockquote>\n\n<p>We can show that all the lifetimes are not accounted for since it is possible that <code>announcement</code> will have a different lifetime than <code>&amp;self</code>:</p>\n\n<pre><code>struct ImportantExcerpt&lt;'a&gt; {\n    part: &amp;'a str,\n}\n\nimpl&lt;'a&gt; ImportantExcerpt&lt;'a&gt; {\n    fn announce_and_return_part(&amp;self, announcement: &amp;str) -&gt; &amp;str {\n        println!(\"Attention please: {}\", announcement);\n        announcement\n    }\n}\n\nfn main() {\n    let i = ImportantExcerpt { part: \"IAOJSDI\" };\n    let test_string_lifetime;\n\n    {\n        let a = String::from(\"xyz\");\n        test_string_lifetime = i.announce_and_return_part(a.as_str());\n    }\n    println!(\"{:?}\", test_string_lifetime);   \n}\n</code></pre>\n\n<p>The lifetime of <code>announcement</code> is not as long as <code>&amp;self</code>, so it is not correct to associate the output lifetime to <code>&amp;self</code>, shouldn't the output lifetime be associated to the longer of the input?</p>\n\n<p>Why is the third rule of lifetime elision a valid way to assign output lifetime?</p>\n"}, {"tags": ["rust", "rustdoc"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1505940277, "post_id": 46331278, "comment_id": 79623702, "body": "Are you saying that the inline example should only be compiled when a feature is enabled? Or that you don&#39;t want the dependency to &quot;live&quot; in the main crate unless for building that example?"}, {"owner": {"reputation": 4670, "user_id": 31118, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/3271e0b4b0c400855211a0d92bec6319?s=128&d=identicon&r=PG", "display_name": "Ivan Dubrov", "link": "https://stackoverflow.com/users/31118/ivan-dubrov"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1505941063, "post_id": 46331278, "comment_id": 79624046, "body": "@E_net4 I want the dependency in the main crate, but only optional (to be enabled by the crate users). At the same time, the example I give in the documentation assumes that this dependency is enabled."}], "answers": [{"comments": [{"owner": {"reputation": 4670, "user_id": 31118, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/3271e0b4b0c400855211a0d92bec6319?s=128&d=identicon&r=PG", "display_name": "Ivan Dubrov", "link": "https://stackoverflow.com/users/31118/ivan-dubrov"}, "edited": false, "score": 0, "creation_date": 1505944147, "post_id": 46331421, "comment_id": 79625272, "body": "Doesn&#39;t quite work since certain pieces of my library are only enabled when &quot;stm32f103xx&quot; feature is present (so, example would not compile, but for a different reason :) ). Making a dependency non-optional does not turn on the feature. P.S. I guess I&#39;m trying to bee too smart... I think, I will simply run &quot;cargo test&#39; with that feature enabled and be done with that. :)"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 1, "last_activity_date": 1505941327, "last_edit_date": 1505941327, "creation_date": 1505940077, "answer_id": 46331421, "question_id": 46331278, "link": "https://stackoverflow.com/questions/46331278/is-there-a-way-to-enable-a-cargo-feature-only-when-rustdoc-verifies-examples/46331421#46331421", "title": "Is there a way to enable a Cargo feature only when rustdoc verifies examples?", "body": "<p>In order to always have a dependency when compiling any parts of the project (including tests such as that one), <a href=\"http://doc.crates.io/specifying-dependencies.html#development-dependencies\" rel=\"nofollow noreferrer\">Development Dependencies</a> are a good fit.</p>\n\n<pre><code>[dev-dependencies]\nstm32f103xx = \"0.7.5\"\n</code></pre>\n\n<p>As you mention that the crate is also optional as a main dependency, you can keep it as so in your manifest.</p>\n\n<pre><code>[dependencies]\nstm32f103xx = { version = \"0.7.5\", optional = true }\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4670, "user_id": 31118, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/3271e0b4b0c400855211a0d92bec6319?s=128&d=identicon&r=PG", "display_name": "Ivan Dubrov", "link": "https://stackoverflow.com/users/31118/ivan-dubrov"}, "edited": false, "score": 0, "creation_date": 1505943492, "post_id": 46331855, "comment_id": 79625054, "body": "I don&#39;t quite understand. Why building documentation would require that dependency? I would think that only verifying that examples are sound (running doctests) would require it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4670, "user_id": 31118, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/3271e0b4b0c400855211a0d92bec6319?s=128&d=identicon&r=PG", "display_name": "Ivan Dubrov", "link": "https://stackoverflow.com/users/31118/ivan-dubrov"}, "edited": false, "score": 0, "creation_date": 1505943736, "post_id": 46331855, "comment_id": 79625125, "body": "@IvanDubrov haha, good point. I mis-stated in the first paragraph (for whatever reason, <code>cargo doc</code> is the thing that runs the doc tests in my head), but I think the rest of my point is still valid."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1559376553, "post_id": 46331855, "comment_id": 99407720, "body": "The answer is related to the another topic - enabling docs when a feature is enabled. Thank google I have found it, but I think we should do something to let other people find this answer easily: the question title and description don&#39;t ask specifically for this."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1505949799, "last_edit_date": 1505949799, "creation_date": 1505941955, "answer_id": 46331855, "question_id": 46331278, "link": "https://stackoverflow.com/questions/46331278/is-there-a-way-to-enable-a-cargo-feature-only-when-rustdoc-verifies-examples/46331855#46331855", "title": "Is there a way to enable a Cargo feature only when rustdoc verifies examples?", "body": "<p><strong>No</strong>. Features are chosen by the end user of the crate, and you aren't the only person who chooses to run the tests. If you could do what you are asking, you'd actually force anyone who wanted to run the tests to download and compile the \"optional\" dependency, making it not very optional.</p>\n\n<hr>\n\n<p>What you can do instead is only include that piece of the documentation when the feature is enabled. It's not obvious, but documentation comments are transformed into the attribute syntax (<code>#[doc = \"...\"]</code>). Combined with <code>cfg_attr</code>, you can conditionally include documentation, thus conditionally compile and run an example:</p>\n\n<pre><code>#![cfg_attr(feature = \"alpha\", doc = \"\n# Examples\n```rust\nfn alpha() {}\n```\n\")]\n</code></pre>\n\n<p>Likewise, you can have the opposite case for a bit of documentation that says \"check out this awesome feature!\".</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/38292741/155423\">How would one achieve conditional compilation with Rust projects that have doctests?</a></li>\n<li><a href=\"https://stackoverflow.com/q/33999341/155423\">Generating documentation in macros</a></li>\n</ul>\n"}], "owner": {"reputation": 4670, "user_id": 31118, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/3271e0b4b0c400855211a0d92bec6319?s=128&d=identicon&r=PG", "display_name": "Ivan Dubrov", "link": "https://stackoverflow.com/users/31118/ivan-dubrov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 665, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1598543133, "creation_date": 1505939484, "last_edit_date": 1505940681, "question_id": 46331278, "link": "https://stackoverflow.com/questions/46331278/is-there-a-way-to-enable-a-cargo-feature-only-when-rustdoc-verifies-examples", "title": "Is there a way to enable a Cargo feature only when rustdoc verifies examples?", "body": "<p>I have the following piece in the crate documentation:</p>\n\n<pre><code>//! # Examples\n//! ```rust,no_run\n//! extern crate stm32f103xx;\n//! // ...\n//! ```\n</code></pre>\n\n<p>The problem is that the dependency on <code>stm32f103xx</code> crate is optional. Everything works fine if I enable feature <code>stm32f103xx</code> by default, but I don't want to make it default. Is there any way to enable that feature only when <code>rustdoc</code> verifies examples?</p>\n"}, {"tags": ["rust", "traits", "parameterized-types"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505934114, "post_id": 46329680, "comment_id": 79620603, "body": "You cannot allow the caller of your function to provide a type <code>F</code> and then ignore it and return a <code>f64</code> instead. You&#39;ll want something like <a href=\"https://play.rust-lang.org/?gist=b9b137cfe0ef79791dedb6cbadc3c05c&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 67, "user_id": 6622465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0d714c9d78d0589a65dc3ec14870931?s=128&d=identicon&r=PG&f=1", "display_name": "crs", "link": "https://stackoverflow.com/users/6622465/crs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505934227, "post_id": 46329680, "comment_id": 79620667, "body": "I&#39;m trying to be able to not provide any argument at all, but i want to create a default &quot;Signal&quot; trait (via an f64) for it to use in the struct."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505934586, "post_id": 46329680, "comment_id": 79620862, "body": "Did you see the examples in the linked duplicates, or the playground that I edited into my first comment?"}, {"owner": {"reputation": 67, "user_id": 6622465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0d714c9d78d0589a65dc3ec14870931?s=128&d=identicon&r=PG&f=1", "display_name": "crs", "link": "https://stackoverflow.com/users/6622465/crs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505934772, "post_id": 46329680, "comment_id": 79620953, "body": "Oops, nope - walked away from my computer and saw it on mobile. I&#39;ll take a gander in a few minutes"}, {"owner": {"reputation": 67, "user_id": 6622465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0d714c9d78d0589a65dc3ec14870931?s=128&d=identicon&r=PG&f=1", "display_name": "crs", "link": "https://stackoverflow.com/users/6622465/crs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505935455, "post_id": 46329680, "comment_id": 79621312, "body": "From the other question: &quot;For whatever T the caller chooses, I will create a Foo with that type&quot; -- Aaaahhhh! Ok. That makes complete sense. Don&#39;t try to make your constructor take in a generic type and then not even use it -- just tell the compiler you&#39;re going to use <code>f64s</code> there. Thanks!"}], "owner": {"reputation": 67, "user_id": 6622465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0d714c9d78d0589a65dc3ec14870931?s=128&d=identicon&r=PG&f=1", "display_name": "crs", "link": "https://stackoverflow.com/users/6622465/crs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 887, "favorite_count": 0, "closed_date": 1505933931, "answer_count": 0, "score": 0, "last_activity_date": 1505934655, "creation_date": 1505933342, "last_edit_date": 1505934042, "question_id": 46329680, "link": "https://stackoverflow.com/questions/46329680/is-it-possible-to-set-default-values-for-type-parameterized-fields-of-a-struct", "closed_reason": "Duplicate", "title": "Is it possible to set default values for type-parameterized fields of a struct?", "body": "<p>I have a trait that genericizes getting a (audio, etc) sample from a \"signal\":</p>\n\n<pre><code>pub trait Signal {\n    /// When requested, all signals must produce a f64 sample.\n    fn evaluate(&amp;mut self) -&gt; f64;\n}\n</code></pre>\n\n<p>I wanted to implement this trait for plain-old <code>f64</code>s and make it just keep on returning the same value instead of making a whole different struct that implements <code>Signal</code> to do the same thing:</p>\n\n<pre><code>impl Signal for f64 {\n    fn evaluate(&amp;mut self) -&gt; f64 {\n        *self\n    }\n}\n</code></pre>\n\n<p>It turns out that this doesn't matter anyway; even if I make said struct, when I try to give a default value it doesn't work either way.</p>\n\n<hr>\n\n<p>In one of my signal generators, I'd like to switch over from using a <code>f64</code> type:</p>\n\n<pre><code>// Sine implements Signal\npub struct Sine {\n    frequency: f64,\n    // Other fields omitted\n}\n</code></pre>\n\n<p>To a <code>Signal</code> type, to be able to have the frequency change over time:</p>\n\n<pre><code>pub struct Sine&lt;F&gt; where\n    F: Signal,\n{\n    frequency: F,\n    // Other fields omitted\n}\n</code></pre>\n\n<p>The problem arises when I go to make a <code>Sine::new()</code> function that tries to default the parameterized type (NOTE that I needed to use parameterized types to capture a trait type instead of using references due to a <a href=\"https://stackoverflow.com/questions/46260187/using-trait-types-with-rust-portaudio-in-non-blocking-mode\">previous issue with borrowing I had with <code>rust-portaudio</code></a>):</p>\n\n<pre><code>impl&lt;F&gt; Sine&lt;F&gt; where\n    F: Signal,\n{\n    /// Creates a new Sine wave signal generator.\n    pub fn new() -&gt; Sine&lt;F&gt; {\n        Sine {\n            frequency: 444.0,\n            // Other fields omitted\n        }\n    }\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/dsp/generators/sine.rs:35:24\n   |\n35 |             frequency: 444.0,\n   |                        ^^^^^ expected type parameter, found floating-point variable\n   |\n   = note: expected type `F`\n              found type `{float}`\n</code></pre>\n\n<p>This same struct definition works fine as long as I have a <code>new()</code> where you explicitly pass in a type that implements <code>Signal</code>:</p>\n\n<pre><code>let sine_gen1 = generators::Sine::new(440.0);\n</code></pre>\n\n<p>but I would like to be able to default values instead of passing all of the arguments all of the time.</p>\n\n<p>A few other things I've tried:</p>\n\n<ul>\n<li><code>444.0 as F</code>\n\n<ul>\n<li><code>error[E0605]: non-primitive cast: 'f64' as 'F' (error[E0605]: non-primitive cast: 'f64' as 'F')</code></li>\n</ul></li>\n<li><code>440.0_f64 as Signal</code>\n\n<ul>\n<li><code>error[E0620]: cast to unsized type: 'f64' as 'dsp::traits::Signal'</code></li>\n</ul></li>\n<li>Making a new struct (called <code>Constant</code>) that takes in a <code>f64</code> in its own <code>new()</code> function and implements <code>Signal</code>, then making an instance of that struct in <code>Sine::new()</code> and trying to set it to <code>frequency</code>\n\n<ul>\n<li>I haven't found a combination of doing this that seems to work, plus it kind of feels too hacky to be correct.</li>\n</ul></li>\n</ul>\n"}, {"tags": ["recursion", "rust", "flatten"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1505925105, "post_id": 46327184, "comment_id": 79615525, "body": "Actually, it&#39;s hard to answer without that <code>factoring_method</code>. Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1505991794, "post_id": 46327184, "comment_id": 79644232, "body": "Are <code>factoring_method</code> and <code>prime_factors</code> supposed to be the same function?"}, {"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "reply_to_user": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1506118298, "post_id": 46327184, "comment_id": 79707248, "body": "@sellibitze -- no the factoring method is separate and you have hit upon the same conceptual problem Shepmaster pointed out.  I apologize for not updating the question with the code requested by E_net4.  Been sick for a few days.  I&#39;ll try to update this evening to clarify."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1506181047, "post_id": 46327184, "comment_id": 79720811, "body": "It doesn&#39;t seem correct that <code>congruence_of_squares(9)</code> returns <code>[1, 9]</code>."}, {"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1506181238, "post_id": 46327184, "comment_id": 79720868, "body": "@Shepmaster why not?  Squares less than or equal to 9 are only 4 and 9.  4 is not a factor of 9, so it should return 9 and its complementary factor 1."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1506181521, "post_id": 46327184, "comment_id": 79720953, "body": "I should not have used &quot;correct&quot; (I actually don&#39;t understand congruence of squares or it&#39;s purpose), it would have been better for me to say &quot;useful&quot;. If it returns <code>[1, 9]</code>, then there&#39;s no forward progress possible for the algorithm; it will infinitely try to compute the factors of <code>9</code>, which has the factor <code>9</code>, which requires the factors of <code>9</code>, etc."}, {"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "edited": false, "score": 0, "creation_date": 1506265674, "post_id": 46327184, "comment_id": 79740166, "body": "Right.  Congruence of squares is only useful, AFAIK, for factoring very large numbers.  But I don&#39;t claim to fully grok it myself.  It&#39;s a bit frustrating b/c the textbook examples all use large semiprimes, so only one iteration is needed to find the prime factors.  I&#39;m not sure if that implies it&#39;s main utility is in large semiprimes or not."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1506180866, "creation_date": 1506180866, "answer_id": 46381277, "question_id": 46327184, "link": "https://stackoverflow.com/questions/46327184/recursive-function-that-returns-a-vec/46381277#46381277", "title": "Recursive function that returns a Vec", "body": "<p>Useful recursion requires two things:</p>\n\n<ol>\n<li>That a function call itself, either directly or indirectly.</li>\n<li>That there be some terminating case.</li>\n</ol>\n\n<p>One definition of the prime factorization of a number is:</p>\n\n<ul>\n<li>if the number is prime, that is the only prime factor</li>\n<li>otherwise, combine the prime factors of a pair of factors of the number</li>\n</ul>\n\n<p>From that, we can identify a termination condition (\"if it's prime\") and the recursive call (\"prime factors of factors\"). </p>\n\n<p>Note that we haven't written any code yet \u2014\u00a0everything to this point is conceptual.</p>\n\n<p>We can then transcribe the idea to Rust:</p>\n\n<pre><code>fn prime_factors(x: u64) -&gt; Vec&lt;u64&gt; {\n    if is_prime(x) {\n        vec![x]\n    } else {\n        factors(x).into_iter().flat_map(prime_factors).collect()\n    }\n}\n</code></pre>\n\n<p>Interesting pieces here:</p>\n\n<ul>\n<li>We use <code>into_iter</code> to avoid the need to dereference the iterated value.</li>\n<li>We can pass the function name directly as the closure because the types align.</li>\n</ul>\n\n<p>Some (inefficient) helper functions round out the implementation:</p>\n\n<pre><code>fn is_prime(x: u64) -&gt; bool {\n    !(2..x).any(|i| x % i == 0)\n}\n\nfn factors(x: u64) -&gt; Vec&lt;u64&gt; {\n    match (2..x).filter(|i| x % i == 0).next() {\n        Some(v) =&gt; vec![v, x / v],\n        None =&gt; vec![],\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 453, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1506180866, "creation_date": 1505924587, "last_edit_date": 1506175809, "question_id": 46327184, "link": "https://stackoverflow.com/questions/46327184/recursive-function-that-returns-a-vec", "title": "Recursive function that returns a Vec", "body": "<p>I continue to struggle with the concept of recursion.  I have a function that takes a <code>u64</code> and returns a <code>Vec&lt;u64&gt;</code> of factors of that integer.  I would like to recursively call this function on each item in the <code>Vec</code>, returning a flattened <code>Vec</code> until the function returns <code>Vec&lt;self&gt;</code> for each item, i.e., each item is prime.</p>\n\n<pre><code>fn prime_factors(x: u64) -&gt; Vec&lt;u64&gt; {\n    let factors = factoring_method(x);\n    factors.iter().flat_map(|&amp;i| factoring_method(i)).collect()\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=44be4e411fea0db7486c3a2f723b3590&amp;version=stable\" rel=\"nofollow noreferrer\">The complete code</a>)</p>\n\n<p>This returns only the <code>Vec</code> of factors of the final iteration and also has no conditional that allows it to keep going until items are all prime.</p>\n\n<p>The <code>factoring_method</code> is a congruence of squares that I'm pretty happy with.  I'm certain there's lots of room for optimization, but I'm hoping to get a working version complete before refactoring.  I think the recursion should in the <code>congruence_of_squares</code> \u2014 calling itself upon each member of the <code>Vec</code> it returns, but I'm not sure how to frame the conditional to keep it from doing so infinitely.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 4, "last_activity_date": 1505916599, "creation_date": 1505916599, "answer_id": 46324371, "question_id": 46322270, "link": "https://stackoverflow.com/questions/46322270/returning-an-error-when-there-are-more-items-in-an-iterator-than-expected/46324371#46324371", "title": "Returning an error when there are more items in an iterator than expected", "body": "<p>I'm going to assume that the original problem is to fetch N elements from an iterator and raise an error when the iterator still has more elements after that. I solved this first by creating a new iterator adaptor <code>TakeExactly</code>, which yields an iterator of <code>Result</code>s. After the first <code>n</code> retrievals, the iterator will start returning the items as errors. </p>\n\n<pre><code>use std::iter::Iterator;\n\nstruct TakeExactly&lt;I&gt; {\n    it: I,\n    n: usize,    \n}\n\nimpl&lt;I&gt; Iterator for TakeExactly&lt;I&gt;\nwhere \n    I: Iterator\n{\n    type Item = Result&lt;I::Item, I::Item&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match (self.it.next(), self.n) {\n            (None, _) =&gt; None,\n            (Some(x), 0) =&gt; Some(Err(x)),\n            (Some(x), _) =&gt; {\n                self.n -= 1;\n                Some(Ok(x))\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>Let's also make a utility function:</p>\n\n<pre><code>fn take_exactly&lt;I: IntoIterator&gt;(it: I, n: usize) -&gt; TakeExactly&lt;I::IntoIter&gt; {\n    TakeExactly {\n        it: it.into_iter(),\n        n,\n    }\n}\n</code></pre>\n\n<p>With that done, we can easily collect the expected number of items like this:</p>\n\n<pre><code>let x: Result&lt;Vec&lt;_&gt;, _&gt; = take_exactly(vec![5, 4, 3], 2).collect();\nassert_eq!(x, Err(3));\n\nlet x: Result&lt;String, _&gt; = take_exactly(\"Rustacean\".chars(), 9).collect();\nassert_eq!(x, Ok(\"Rustacean\".to_string()));\n</code></pre>\n\n<p>This is possible because <code>Result</code> implements <code>FromIterator</code> by delegating the collection of all <code>Ok</code> values, yielding the first error if one was found.</p>\n\n<p><a href=\"http://play.integer32.com/?gist=346c879a0a1dd084757065837756b18b&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 1, "accepted_answer_id": 46324371, "answer_count": 1, "score": 0, "last_activity_date": 1505922220, "creation_date": 1505910883, "last_edit_date": 1505922220, "question_id": 46322270, "link": "https://stackoverflow.com/questions/46322270/returning-an-error-when-there-are-more-items-in-an-iterator-than-expected", "title": "Returning an error when there are more items in an iterator than expected", "body": "<p><code>Option</code> has <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or\" rel=\"nofollow noreferrer\"><code>ok_or</code></a> that maps <code>Some</code> to <code>Ok</code> and <code>None</code> to <code>Err</code>, <em>e.g.</em>:</p>\n\n<pre><code>let foo = iterator.next().ok_or(MyError)?;\n</code></pre>\n\n<p>If I want to verify that the iterator returns <code>None</code> after already taking the necessary items (an expected number of them), what should I use? I'm looking for something that returns <code>Ok</code> if <code>None</code>, and a custom error in other cases:</p>\n\n<pre><code>let _ = iterator.next().the_method_i_search(|elem| MyError::MyCase(elem))?;\n</code></pre>\n\n<p>I know I can do:</p>\n\n<pre><code>if let Some(elem) = iterator.next() {\n    return Err(MyError::MyCase(elem));\n}\n</code></pre>\n\n<p>but I like the succinctness of the <code>?</code> operator and method chaining in Rust.</p>\n"}, {"tags": ["vector", "filter", "iterator", "rust", "move-semantics"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505910339, "post_id": 46321839, "comment_id": 79604728, "body": "<i>some similar questions out there</i> \u2014 please link to them."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1505910696, "post_id": 46321839, "comment_id": 79604994, "body": "<i>I&#39;d love to use iterators</i> \u2014  you can&#39;t. TL;DR the duplicate, iterators contain a <b>reference</b> to the underlying slice. Adding / removing an item can cause the vector to reallocate, invalidating the reference. Safe Rust isn&#39;t allowed to have invalid references. Writing the plain loop and jumping around via indexes is the solution."}], "owner": {"reputation": 613, "user_id": 4453524, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/sBZea.jpg?s=128&g=1", "display_name": "ljrk", "link": "https://stackoverflow.com/users/4453524/ljrk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 380, "favorite_count": 0, "closed_date": 1505910504, "answer_count": 0, "score": 0, "last_activity_date": 1505910389, "creation_date": 1505909696, "last_edit_date": 1505910389, "question_id": 46321839, "link": "https://stackoverflow.com/questions/46321839/appending-to-removing-elements-from-vector-while-iterating-over-said-vector", "closed_reason": "Duplicate", "title": "Appending to / removing elements from vector while iterating over said vector", "body": "<p>I have a vector <code>v</code> I want to iterate over, while executing a function on each element which</p>\n\n<ul>\n<li>modifies the element (could be done using <code>map()</code>)</li>\n<li>after that possibly removes the current element, depending on what was the result of the function (<code>filter()</code> -- but I do not want to call the function again, due to it modifying the state of the element)</li>\n<li>additionally might spawn new elements which should be appended to <code>v</code>:  This is <em>really</em> tricky, since I want the iteration to continue iterating over these freshly appended elements in the same loop which could, again, spawn new elements which could be appended and so on and so forth -- possibly never ending.</li>\n</ul>\n\n<p>One very much simplified example is this one:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![1,2,3];\n\n    let mut i = 0;\n    while i &lt; v.len() {\n        println!(\"{}\", v[i]);\n\n        // 1. modify element\n        v[i] += 1;\n\n        // look at result\n        match v[i] % 3 {\n            // 2a. remove element\n            0 =&gt; {\n                // no i increment since next element now has same index\n                v.remove(i);\n            },\n            // 2b. append element\n            1 =&gt; {\n                let temp = v[i];\n                v.push(temp+1);\n                i += 1;\n            },\n            // 2c. do nothing\n            _ =&gt; i += 1,\n        }\n    }\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>Rather than manually using <code>while</code> I'd love to use iterators in some way or another. <code>filter_mut()</code> already accomplishes 1, 2a. (and 2c.) but 2b. I have no idea how to handle.</p>\n\n<p>Due to appending possibly being recursive just holding a queue of newly appended elements does not suffice, at least a loop over such queues or similar would be needed -- but this, too, is not really \"nice\".</p>\n\n<p>There are some similar questions out there but they seem not to completely cover what I want to do.</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 2043, "user_id": 3291867, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/1Vaxp.jpg?s=128&g=1", "display_name": "mojtab23", "link": "https://stackoverflow.com/users/3291867/mojtab23"}, "edited": false, "score": 0, "creation_date": 1505913931, "post_id": 46320621, "comment_id": 79607303, "body": "I wrote similar code few month ago with older rust compiler and I got compile error, something like this &quot;can not borrow mutable more than once&quot;. but now it&#39;s working with version 1.20."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 2043, "user_id": 3291867, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/1Vaxp.jpg?s=128&g=1", "display_name": "mojtab23", "link": "https://stackoverflow.com/users/3291867/mojtab23"}, "edited": false, "score": 3, "creation_date": 1505914289, "post_id": 46320621, "comment_id": 79607624, "body": "@mojtab23 actually this is nothing new and should work fine since Rust 1.0; it compiles without issues with <a href=\"https://rust.godbolt.org\" rel=\"nofollow noreferrer\">godbolt&#39;s rustc 1.0</a>. The code you are referring to probably had some significant (even if subtle at first glance) difference."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 8, "last_activity_date": 1505906875, "last_edit_date": 1505906875, "creation_date": 1505906236, "answer_id": 46320621, "question_id": 46320374, "link": "https://stackoverflow.com/questions/46320374/why-are-multiple-mutable-borrows-possible-in-the-same-scope/46320621#46320621", "title": "Why are multiple mutable borrows possible in the same scope?", "body": "<p>Nothing weird happens here; the mutable borrow becomes void every time the <code>test_three</code> function concludes its work (which is right after it's called):</p>\n\n<pre><code>fn main() {\n    let mut s = String::from(\"hello\");\n\n    println!(\"{}\", s); // immutably borrow s and release it\n    test_three(&amp;mut s); // mutably borrow s and release it\n    println!(\"{}\", s); // immutably borrow s and release it\n    test_three(&amp;mut s); // mutably borrow s and release it\n    println!(\"{}\", s); // immutably borrow s and release it\n}\n</code></pre>\n\n<p>The function doesn't hold its argument - it only mutates the <code>String</code> it points to and releases the borrow right afterwards, because it is not needed anymore:</p>\n\n<pre><code>fn test_three(st: &amp;mut String) { // st is a mutably borrowed String\n    st.push('f'); // the String is mutated\n} // the borrow claimed by st is released\n</code></pre>\n"}], "owner": {"reputation": 2043, "user_id": 3291867, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/1Vaxp.jpg?s=128&g=1", "display_name": "mojtab23", "link": "https://stackoverflow.com/users/3291867/mojtab23"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 569, "favorite_count": 0, "accepted_answer_id": 46320621, "answer_count": 1, "score": 5, "last_activity_date": 1554909166, "creation_date": 1505905521, "last_edit_date": 1505911609, "question_id": 46320374, "link": "https://stackoverflow.com/questions/46320374/why-are-multiple-mutable-borrows-possible-in-the-same-scope", "title": "Why are multiple mutable borrows possible in the same scope?", "body": "<p>I wrote this code that borrows a mutable variable more than once and compiles without any error, but according to <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#mutable-references\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a> this should not compile:</p>\n\n<pre><code>fn main() {\n    let mut s = String::from(\"hello\");\n\n    println!(\"{}\", s);\n    test_three(&amp;mut s);\n    println!(\"{}\", s);\n    test_three(&amp;mut s);\n    println!(\"{}\", s);\n}\n\nfn test_three(st: &amp;mut String) {\n    st.push('f');\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=2817e3a0ebf5b39a3f41fad3c68edda7&amp;version=undefined\" rel=\"noreferrer\">playground</a>)</p>\n\n<p>Is this a bug or there is new feature in Rust? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1505889752, "post_id": 46314823, "comment_id": 79591393, "body": "I prefer your answer. I guess the only thing you didn&#39;t address was the fact that <code>data</code> is two different types in the snippets provided. The first one is the <code>MutexGuard&lt;T&gt;</code>, the second is just an integral variable."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1505889936, "post_id": 46314823, "comment_id": 79591486, "body": "@SimonWhitehead: Aah, right.  Didn&#39;t even see that."}, {"owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "edited": false, "score": 0, "creation_date": 1506059336, "post_id": 46314823, "comment_id": 79675009, "body": "@DK Thank you for the explanation. Now it makes sense."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 12, "last_activity_date": 1505912327, "last_edit_date": 1505912327, "creation_date": 1505889206, "answer_id": 46314823, "question_id": 46314582, "link": "https://stackoverflow.com/questions/46314582/confusing-automatic-dereferencing-of-arc/46314823#46314823", "title": "Confusing automatic dereferencing of Arc", "body": "<p>Follow the docs.  Starting with <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"noreferrer\"><code>Arc&lt;T&gt;</code></a>:</p>\n\n<ul>\n<li>Does <code>Arc::lock</code> exist?  No.  Check <code>Deref</code>.</li>\n<li><code>Deref::Target</code> is <code>T</code>.  Check <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"noreferrer\"><code>Mutex&lt;T&gt;</code></a>.</li>\n<li>Does <code>Mutex::lock</code> exist?  <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html#method.lock\" rel=\"noreferrer\">Yes</a>.  It returns <code>LockResult&lt;MutexGuard&lt;T&gt;&gt;</code>.</li>\n<li>Where does <code>unwrap</code> come from?  <a href=\"https://doc.rust-lang.org/std/sync/type.LockResult.html\" rel=\"noreferrer\"><code>LockResult&lt;T&gt;</code></a> is a synonym for <code>Result&lt;T, PoisonError&lt;T&gt;&gt;</code>.  So it's <code>Result::unwrap</code>, which results in a <code>MutexGuard&lt;T&gt;</code>.</li>\n<li>Therefore, <code>data</code> is of type <code>MutexGuard&lt;usize&gt;</code>.</li>\n</ul>\n\n<p>So this is wrong:</p>\n\n<blockquote>\n  <p>so when calling <code>data.lock()</code>, I assumed that the <code>Arc</code> is being automatically dereferenced and an <code>usize</code> is assigned to <code>data</code>.</p>\n</blockquote>\n\n<p>Thus the question is not why you can't assign directly, but how you're able to assign an <code>usize</code> value <em>at all</em>.  Again, follow the docs:</p>\n\n<ul>\n<li><code>data</code> is a <code>MutexGuard&lt;usize&gt;</code>, so check <a href=\"https://doc.rust-lang.org/std/sync/struct.MutexGuard.html\" rel=\"noreferrer\"><code>MutexGuard&lt;T&gt;</code></a>.</li>\n<li><code>*data</code> is a pointer dereference in a context that requires mutation.  Look for an implementation of <code>DerefMut</code>.</li>\n<li>It says that for <code>MutexGuard&lt;T&gt;</code>, it implements <code>DerefMut::deref_mut(&amp;mut self) -&gt; &amp;mut T</code>.</li>\n<li>Thus, the result of <code>*data</code> is <code>&amp;mut usize</code>.</li>\n</ul>\n\n<p>Then we have your modified example.  At this point, it should be clear that this is <em>not at all</em> doing the same thing: it's mutating a local variable that happens to contain the same value as the mutex.  But because it's a local variable, changing it has absolutely no bearing on the contents of the mutex.</p>\n\n<hr>\n\n<p>Thus, the short version is: the result of locking a mutex is a \"smart pointer\" wrapping the actual value, not the value itself.  Thus you have to dereference it to access the value.</p>\n"}], "owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1880, "favorite_count": 2, "answer_count": 1, "score": 3, "last_activity_date": 1505912327, "creation_date": 1505888190, "last_edit_date": 1505911471, "question_id": 46314582, "link": "https://stackoverflow.com/questions/46314582/confusing-automatic-dereferencing-of-arc", "title": "Confusing automatic dereferencing of Arc", "body": "<p>This is an example taken from the <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code> documentation</a>:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::sync::mpsc::channel;\nuse std::thread;\n\nconst N: usize = 10;\nfn main() {\n    let data = Arc::new(Mutex::new(0));\n    let (tx,rx) = channel();\n    for _ in 0..N{\n        let (data, tx) = (data.clone(), tx.clone());\n        thread::spawn(move || {\n            // snippet\n        });\n    }\n    rx.recv().unwrap();\n}\n</code></pre>\n\n<p>My question is where the <code>snippet</code> comment is. It is given as </p>\n\n<pre><code>let mut data = data.lock().unwrap();\n*data += 1;\nif *data == N {\n    tx.send(()).unwrap();\n}\n</code></pre>\n\n<p>The type of data is <code>Arc&lt;Mutex&lt;usize&gt;&gt;</code>, so when calling <code>data.lock()</code>, I assumed that the <code>Arc</code> is being automatically dereferenced and an <code>usize</code> is assigned to <code>data</code>. Why do we need a <code>*</code>in front of <code>data</code> again to dereference it?</p>\n\n<p>The following code which first dereferences the <code>Arc</code> and then proceeds with just an <code>usize</code> also works in place of the snippet.</p>\n\n<pre><code>let mut data = *data.lock().unwrap();\ndata += 1;\nif data == N {\n    tx.send(()).unwrap();\n}   \n</code></pre>\n"}, {"tags": ["rust", "visual-studio-code", "vscode-extensions"], "answers": [{"comments": [{"owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 1, "creation_date": 1533874543, "post_id": 51774756, "comment_id": 90515600, "body": "Great idea; Seems there already is an issue, <a href=\"https://github.com/rust-lang-nursery/rls-vscode/issues/350\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/rls-vscode/issues/350</a>"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1533845207, "last_edit_date": 1533845207, "creation_date": 1533844028, "answer_id": 51774756, "question_id": 46310047, "link": "https://stackoverflow.com/questions/46310047/is-there-any-way-to-fold-collapse-rust-documentation-comments-in-visual-studio-c/51774756#51774756", "title": "Is there any way to fold/collapse Rust documentation comments in Visual Studio Code?", "body": "<p>I was concerned by this as well, so I looked around. The good surprise is that since March 2018, it is possible to implement this thanks to a new <a href=\"https://code.visualstudio.com/updates/v1_23#_folding-provider-api\" rel=\"nofollow noreferrer\">folding provider API</a>.</p>\n\n<p>I did a little POC (the code is horrible and not secure, it is not intended to be used as is):</p>\n\n<pre><code>class CommentProvider implements vscode.FoldingRangeProvider {\n    // This method must return a list of the foldable ranges\n    provideFoldingRanges(document: vscode.TextDocument, context: vscode.FoldingContext, token: vscode.CancellationToken): vscode.ProviderResult&lt;vscode.FoldingRange[]&gt; {\n        let ret: vscode.FoldingRange[] = [];\n        for (let i = 0; i &lt; document.lineCount; ++i) {\n            let line = document.lineAt(i).text.trim();\n            if (line.startsWith(\"//!\")) {\n                let from = i;\n                do {\n                    ++i;\n                } while (document.lineAt(i).text.trim().startsWith(\"//!\"));\n                ret.push(new vscode.FoldingRange(from, i - 1));\n            }\n        }\n        return ret;\n    }\n}\n\nexport function activate(context: vscode.ExtensionContext) {\n    let sel: vscode.DocumentSelector = { scheme: 'file', language: 'rust' };\n    let pro = new CommentProvider();\n    vscode.languages.registerFoldingRangeProvider(sel, pro);\n}\n</code></pre>\n\n<p>and it must be registered correctly in the <code>package.json</code>:</p>\n\n<pre><code>\"activationEvents\": [\n    \"onLanguage:rust\"\n],\n\"contributes\": {\n    \"languages\": [\n        {\n            \"id\": \"rust\",\n            \"aliases\": [\n                \"rs\"\n            ],\n            \"extensions\": [\n                \"rs\"\n            ],\n            \"configuration\": \"./language-configuration.json\"\n        }\n    ]\n},\n</code></pre>\n\n<p>I am not sure about the values, though.</p>\n\n<p>The best would be to ask to the team doing the official rust extension to integrate this.</p>\n"}], "owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 391, "favorite_count": 0, "accepted_answer_id": 51774756, "answer_count": 1, "score": 4, "last_activity_date": 1533885417, "creation_date": 1505856702, "last_edit_date": 1533885417, "question_id": 46310047, "link": "https://stackoverflow.com/questions/46310047/is-there-any-way-to-fold-collapse-rust-documentation-comments-in-visual-studio-c", "title": "Is there any way to fold/collapse Rust documentation comments in Visual Studio Code?", "body": "<p>In VSCode, is there any way to fold/collapse Rust documentation comments (i.e., newline comments which start with: <code>//!</code> and <code>///</code>)? Swift has similar comments, so any answers pertaining to Swift may also be relevant to Rust.</p>\n\n<p>If this is not supported in VSCode proper, are there any extensions that can accomplish the same?</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 1, "creation_date": 1505820806, "post_id": 46297867, "comment_id": 79560873, "body": "you probably want to use <a href=\"http://docs.diesel.rs/diesel/prelude/trait.FirstDsl.html#method.first\" rel=\"nofollow noreferrer\">first</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1505825122, "creation_date": 1505825122, "answer_id": 46300821, "question_id": 46297867, "link": "https://stackoverflow.com/questions/46297867/how-do-i-get-an-optiont-instead-of-an-optionvect-from-a-diesel-query-which/46300821#46300821", "title": "How do I get an Option&lt;T&gt; instead of an Option&lt;Vec&lt;T&gt;&gt; from a Diesel query which only returns 1 or 0 records?", "body": "<p>As mentioned in the comments, use <a href=\"http://docs.diesel.rs/diesel/prelude/trait.FirstDsl.html#method.first\" rel=\"noreferrer\"><code>first</code></a>:</p>\n\n<blockquote>\n  <p>Attempts to load a single record. Returns <code>Ok(record)</code> if found, and <code>Err(NotFound)</code> if no results are returned. If the query truly is optional, you can call <code>.optional()</code> on the result of this to get a <code>Result&lt;Option&lt;U&gt;&gt;</code>.</p>\n</blockquote>\n\n<pre><code>fn find_msg_by_uuid&lt;'a&gt;(conn: &amp;PgConnection, msg_uuid: &amp;Uuid) -&gt; Option&lt;Message&gt; {\n    use schema::messages::dsl::*;\n    use diesel::OptionalExtension;\n\n    messages\n        .filter(uuid.eq(msg_uuid))\n        .first(conn)\n        .optional()\n        .unwrap()\n}\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 4388613, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kuTh2.png?s=128&g=1", "display_name": "dch", "link": "https://stackoverflow.com/users/4388613/dch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1037, "favorite_count": 0, "accepted_answer_id": 46300821, "answer_count": 1, "score": 5, "last_activity_date": 1505825304, "creation_date": 1505816211, "last_edit_date": 1505825304, "question_id": 46297867, "link": "https://stackoverflow.com/questions/46297867/how-do-i-get-an-optiont-instead-of-an-optionvect-from-a-diesel-query-which", "title": "How do I get an Option&lt;T&gt; instead of an Option&lt;Vec&lt;T&gt;&gt; from a Diesel query which only returns 1 or 0 records?", "body": "<p>I'm querying for existing records in a table called <code>messages</code>; this query is then used as part of a 'find or create' function:</p>\n\n<pre><code>fn find_msg_by_uuid&lt;'a&gt;(conn: &amp;PgConnection, msg_uuid: &amp;Uuid) -&gt; Option&lt;Vec&lt;Message&gt;&gt; {\n    use schema::messages::dsl::*;\n    use diesel::OptionalExtension;\n\n    messages.filter(uuid.eq(msg_uuid))\n        .limit(1)\n        .load::&lt;Message&gt;(conn)\n        .optional().unwrap()\n}\n</code></pre>\n\n<p>I've made this optional as both finding a record and finding none are both valid outcomes in this scenario, so as a result this query might return a <code>Vec</code> with one <code>Message</code> or an empty <code>Vec</code>, so I always end up checking if the <code>Vec</code> is empty or not using code like this: </p>\n\n<pre><code>let extant_messages = find_msg_by_uuid(conn, message_uuid);\n\nif !extant_messages.unwrap().is_empty() { ... }\n</code></pre>\n\n<p>and then if it isnt empty taking the first <code>Message</code> in the <code>Vec</code> as my found message using code like </p>\n\n<pre><code>let found_message = find_msg_by_uuid(conn, message_uuid).unwrap()[0];\n</code></pre>\n\n<p>I always take the first element in the <code>Vec</code> since the records are unique so the query will only ever return 1 or 0 records. </p>\n\n<p>This feels kind of messy to me and seems to take too many steps, I feel as if there is a record for the query then it should return <code>Option&lt;Message&gt;</code> not <code>Option&lt;Vec&lt;Message&gt;&gt;</code> or <code>None</code> if there is no record matching the query.</p>\n"}, {"tags": ["rust", "undefined-behavior", "mutable", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1505809487, "post_id": 46294102, "comment_id": 79553302, "body": "I am currently building a game with piston, and I <i>do</i> pass the mutable object every time it is needed. There is the straightforward solution, you know what you do, and it will not cause any trouble."}, {"owner": {"reputation": 173, "user_id": 5864378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5b9f110e2912de0b16215f1c70208cd1?s=128&d=identicon&r=PG&f=1", "display_name": "clotodex", "link": "https://stackoverflow.com/users/5864378/clotodex"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1505810020, "post_id": 46294102, "comment_id": 79553606, "body": "Thank you!, However I am still interested in a solution using Cell/RefCell/Box etc, since I don&#39;t quite understand the use cases yet. Otherwise it is nice to see that I am not alone in building this pattern :)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1505814096, "post_id": 46294102, "comment_id": 79556313, "body": "Can you show us your attempt at replacing the mutable borrow with the appropriate container types? Using <code>Rc</code> and <code>RefCell</code> is one possible approach, but you seem reluctant to use them in your question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505824065, "post_id": 46294102, "comment_id": 79563143, "body": "You&#39;ve been provided two idiomatic solutions (pass where needed and <code>Rc</code>) and you&#39;ve essentially rejected both of them. Perhaps you can explain what <b>you</b> consider idiomatic so we aren&#39;t left to guess what kind of answer might be accepted."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1505824865, "post_id": 46294102, "comment_id": 79563708, "body": "Also, it&#39;s <b>really unlikely</b> that you want to use <code>Rc::get_mut</code> at all. See <a href=\"https://stackoverflow.com/q/39065232/155423\">stackoverflow.com/q/39065232/155423</a> and <a href=\"https://stackoverflow.com/q/44012575/155423\">stackoverflow.com/q/44012575/155423</a>)."}, {"owner": {"reputation": 173, "user_id": 5864378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5b9f110e2912de0b16215f1c70208cd1?s=128&d=identicon&r=PG&f=1", "display_name": "clotodex", "link": "https://stackoverflow.com/users/5864378/clotodex"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505825395, "post_id": 46294102, "comment_id": 79564083, "body": "@Shepmaster thank you for those links, I&#39;ll have a look at them. I guess I am ok with the approach of passing all values to the functions. However I am way too unexperienced to know all possibilities of the cell types and smart pointers - Thus my question: Is there any <b>intended</b> way of doing this.  Since it seems that there isn&#39;t one, I am fine with the function approach."}], "owner": {"reputation": 173, "user_id": 5864378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5b9f110e2912de0b16215f1c70208cd1?s=128&d=identicon&r=PG&f=1", "display_name": "clotodex", "link": "https://stackoverflow.com/users/5864378/clotodex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 507, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1525721019, "creation_date": 1505804989, "last_edit_date": 1525721019, "question_id": 46294102, "link": "https://stackoverflow.com/questions/46294102/handle-multiple-mutable-references-borrowed-by-different-structs", "title": "Handle multiple mutable references borrowed by different structs", "body": "<p>I am relatively new to Rust and wanted to learn it by building a game with Piston.</p>\n\n<p>There I have a <code>Renderer</code> struct that renders the scene and a main loop that handles game-logic events. They both need a mutable borrow and I understand that multiple borrows can lead to undefined behaviour, but I don't understand how it can in my case, since I always use the object in <strong>different scopes</strong> and in <strong>the same thread</strong>.</p>\n\n<p>I had a look at <a href=\"https://stackoverflow.com/questions/38689844\">this</a> question and feel like I am supposed to use <code>Rc</code> and/or <code>RefCell</code> to solve this, but this seems too extreme. I also don't think I need ownership in the renderer (or do I, then why?), because the renderer lives shorter than the main loop.</p>\n\n<p>Another solution would be to pass the mutable object every time it is needed, but in the real case this is almost for every function and I come from Java/C++ where the below code worked.</p>\n\n<pre><code>struct Renderer&lt;'a&gt; {\n    w: &amp;'a mut Window,\n}\n\nimpl&lt;'a&gt; Renderer&lt;'a&gt; {\n    fn render(&amp;mut self) {\n        let w = &amp;mut self.w;\n        // complex render operation needing the window mutably\n    }\n}\n\nstruct Window {\n    //...\n}\n\nimpl Window {\n    fn poll_event(&amp;mut self) {\n        //some internal code of piston\n    }\n}\n\nfn main() {\n    let mut w = Window {};\n    let mut renderer = Renderer { w: &amp;mut w };\n\n    loop {\n        {\n            //first event handling\n            w.poll_event();\n        }\n        {\n            //AFTERWARDS rendering\n            renderer.render();\n        }\n    }\n}\n</code></pre>\n\n<p>With the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `w` as mutable more than once at a time\n  --&gt; src/main.rs:29:13\n   |\n24 |     let mut renderer = Renderer { w: &amp;mut w };\n   |                                           - first mutable borrow occurs here\n...\n29 |             w.poll_event();\n   |             ^ second mutable borrow occurs here\n...\n36 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>My <code>Rc</code> approach compiles fine, but seems over the top:</p>\n\n<pre><code>use std::rc::Rc;\n\nstruct Renderer {\n    w: Rc&lt;Window&gt;,\n}\n\nimpl Renderer {\n    fn render(&amp;mut self) {\n        let w = Rc::get_mut(&amp;mut self.w).unwrap();\n        // complex render operation needing the window mutably\n    }\n}\n\nstruct Window {\n    //...\n}\n\nimpl Window {\n    fn poll_event(&amp;mut self) {\n        //some internal code of piston\n    }\n}\n\nfn main() {\n    let mut w = Rc::new(Window {});\n    let mut renderer = Renderer { w: w.clone() };\n\n    loop {\n        {\n            //first event handling\n            Rc::get_mut(&amp;mut w).unwrap().poll_event();\n        }\n        {\n            //AFTERWARDS rendering\n            renderer.render();\n        }\n    }\n}\n</code></pre>\n\n<p>All I actually need to do is delaying the <code>&amp;mut</code>. This works with <code>Rc</code> but I don't need ownership - so all the <code>unwrap</code> stuff will never fail since I (can) use it in different scopes.</p>\n\n<p>Can this predicament be resolved or am I forced to use <code>Rc</code> in this case?</p>\n\n<p>If there is a more \"Rusty\" way of doing this, please let me know.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1505821226, "post_id": 46290754, "comment_id": 79561139, "body": "To expand on the quoted text, writing <code>&amp;x</code> can be very useful for an immutable <code>x</code> because it allows creating multiple references to <code>x</code> simultaneously. If every <code>&amp;x</code> automatically meant <code>&amp;mut x</code> when <code>x</code> is mutable, you wouldn&#39;t be able to create more than one reference to <code>x</code> in a single scope."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1505787472, "last_edit_date": 1505787472, "creation_date": 1505787060, "answer_id": 46290754, "question_id": 46290689, "link": "https://stackoverflow.com/questions/46290689/why-do-i-need-to-repeat-writing-mut-the-second-time/46290754#46290754", "title": "Why do I need to repeat writing `mut` the second time?", "body": "<p>I strongly encourage you to go back and re-read <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"noreferrer\"><em>The Rust Programming Language</em>, second edition</a>, specifically the section on <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch04-02-references-and-borrowing.html#mutable-references\" rel=\"noreferrer\">references and borrowing</a>.</p>\n\n<p>There are two types of references: immutable and mutable. Even if a variable <em>may</em> be mutated, you can choose to get an immutable reference to it. You make this choice by saying <code>&amp;foo</code> or <code>&amp;mut foo</code>.</p>\n\n<p>This capability is important to allow you to adhere to the <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"noreferrer\">rules of references</a>:</p>\n\n<blockquote>\n  <ol>\n  <li>At any given time, you can have either but not both of: \n  \n  <ul>\n  <li>One mutable reference.</li>\n  <li>Any number of immutable references.</li>\n  </ul></li>\n  </ol>\n</blockquote>\n\n<p>As <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_line\" rel=\"noreferrer\"><code>BufRead::read_line</code></a> requires a mutable reference to a <code>String</code>, you need to say <code>&amp;mut guess</code>.</p>\n"}], "owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 46290754, "answer_count": 1, "score": 1, "last_activity_date": 1505787472, "creation_date": 1505786552, "last_edit_date": 1505787299, "question_id": 46290689, "link": "https://stackoverflow.com/questions/46290689/why-do-i-need-to-repeat-writing-mut-the-second-time", "title": "Why do I need to repeat writing `mut` the second time?", "body": "<p>A mutable variable is declared and initialized with the keyword <code>mut</code>, but when it's used in the next line of code, the keyword <code>mut</code> must be repeated;</p>\n\n<pre><code>let mut guess = String::new();\n\nio::stdin()\n    .read_line(&amp;mut guess)\n    .expect(\"Failed to read line\");\n</code></pre>\n\n<p>My expectation is that once a variable is declared and initialized as mutable, it remains to be so. Is this a syntactic sugar or is there a specific reason for this?</p>\n\n<p>I would expect the above code to be like this:</p>\n\n<pre><code>let mut guess = String::new();\n\nio::stdin()\n    .read_line(&amp;guess)\n    .expect(\"Failed to read line\");\n</code></pre>\n\n<p>Note that I have omitted the <code>mut</code> keyword in the call to <code>read_line</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 3, "creation_date": 1505806505, "post_id": 46290655, "comment_id": 79551557, "body": "Note that given Unicode idiosyncrasies, &quot;number of characters&quot; probably doesn&#39;t mean what you think it does. For example, this string: &quot;e\u0301&quot; has <i>two</i> characters as evidenced in the playground: <a href=\"https://play.rust-lang.org/?gist=143ea763c0b16bd4ee12e628fb7ff4ca&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, although this string: &quot;&#233;&quot; only has one character: <a href=\"https://play.rust-lang.org/?gist=af950651bb6394e7bc2a966147e1b035&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 3, "creation_date": 1505828348, "post_id": 46290655, "comment_id": 79566439, "body": "see also <a href=\"https://crates.io/crates/unicode-segmentation\" rel=\"nofollow noreferrer\">crates.io/crates/unicode-segmentation</a>"}], "answers": [{"comments": [{"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 5, "creation_date": 1505800356, "post_id": 46290728, "comment_id": 79547899, "body": "BTW \u02cbs.chars().count()\u02cb is the number of unicode codepoints, you can use <a href=\"https://crates.io/crates/unicode-segmentation\" rel=\"nofollow noreferrer\">unicode-segmentation</a> to split on graphemes."}, {"owner": {"reputation": 4628, "user_id": 4384381, "user_type": "registered", "accept_rate": 20, "profile_image": "https://lh6.googleusercontent.com/-6FFBMHFCkdc/AAAAAAAAAAI/AAAAAAAAA1Q/tXOtf0uzrR4/photo.jpg?sz=128", "display_name": "Salvatore Cosentino", "link": "https://stackoverflow.com/users/4384381/salvatore-cosentino"}, "edited": false, "score": 0, "creation_date": 1505895086, "post_id": 46290728, "comment_id": 79594604, "body": "@Shepmaster, thank you fro your answer. I knew the chars and String are different, as you can guess from my question. I was simply wondering if there was a more efficient, and intuitive way to do it."}, {"owner": {"reputation": 4628, "user_id": 4384381, "user_type": "registered", "accept_rate": 20, "profile_image": "https://lh6.googleusercontent.com/-6FFBMHFCkdc/AAAAAAAAAAI/AAAAAAAAA1Q/tXOtf0uzrR4/photo.jpg?sz=128", "display_name": "Salvatore Cosentino", "link": "https://stackoverflow.com/users/4384381/salvatore-cosentino"}, "reply_to_user": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 0, "creation_date": 1505895096, "post_id": 46290728, "comment_id": 79594611, "body": "@Gr&#233;goryOBANOS thank you for your comment, but I am not planning to install anything for something that should be simple."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4628, "user_id": 4384381, "user_type": "registered", "accept_rate": 20, "profile_image": "https://lh6.googleusercontent.com/-6FFBMHFCkdc/AAAAAAAAAAI/AAAAAAAAA1Q/tXOtf0uzrR4/photo.jpg?sz=128", "display_name": "Salvatore Cosentino", "link": "https://stackoverflow.com/users/4384381/salvatore-cosentino"}, "edited": false, "score": 9, "creation_date": 1505911045, "post_id": 46290728, "comment_id": 79605260, "body": "@SalvatoreCosentino Bluntly put, counting the characters in a string is <b>not simple</b> (see also <a href=\"https://stackoverflow.com/q/38406793/155423\">Why is capitalizing the first letter of a string so convoluted in Rust?</a>) and you will be greatly disserviced if you avoid using Rust crates. Many programmers are under the wrong impression that dealing with natural language should be &quot;easy&quot;, allowing many programs to simply get it wrong. Rust is trying very hard to avoid that fate."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 52, "last_activity_date": 1579527845, "last_edit_date": 1579527845, "creation_date": 1505786865, "answer_id": 46290728, "question_id": 46290655, "link": "https://stackoverflow.com/questions/46290655/get-the-string-length-in-characters-in-rust/46290728#46290728", "title": "Get the String length in characters in Rust", "body": "<blockquote>\n  <p>Is there any method on <code>String</code> that returns the characters count, aside from the one I am using above?</p>\n</blockquote>\n\n<p>No. Using <code>s.chars().count()</code> is correct. Note that this is an O(N) operation (because UTF-8 is complex) while getting the number of bytes is an O(1) operation.</p>\n\n<p>You can see <a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"noreferrer\">all the methods on <code>str</code></a> for yourself.</p>\n\n<p>As pointed out in the comments, a <code>char</code> is a specific concept:</p>\n\n<blockquote>\n  <p>It's important to remember that <code>char</code> represents a Unicode Scalar Value, and may not match your idea of what a 'character' is. Iteration over grapheme clusters may be what you actually want.</p>\n</blockquote>\n\n<p>One such example is with precomposed characters:</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", \"e\u0301\".chars().count()); // 2\n    println!(\"{}\", \"\u00e9\".chars().count()); // 1\n}\n</code></pre>\n\n<p>You may prefer to use <a href=\"https://docs.rs/unicode-segmentation/1.6.0/unicode_segmentation/trait.UnicodeSegmentation.html#tymethod.graphemes\" rel=\"noreferrer\"><code>graphemes</code></a> from the <a href=\"https://crates.io/crates/unicode-segmentation\" rel=\"noreferrer\">unicode-segmentation</a> crate instead:</p>\n\n<pre><code>use unicode_segmentation::UnicodeSegmentation; // 1.6.0\n\nfn main() {\n    println!(\"{}\", \"\u00e9\".graphemes(true).count()); // 1\n    println!(\"{}\", \"\u00e9\".graphemes(true).count()); // 1\n}\n</code></pre>\n"}], "owner": {"reputation": 4628, "user_id": 4384381, "user_type": "registered", "accept_rate": 20, "profile_image": "https://lh6.googleusercontent.com/-6FFBMHFCkdc/AAAAAAAAAAI/AAAAAAAAA1Q/tXOtf0uzrR4/photo.jpg?sz=128", "display_name": "Salvatore Cosentino", "link": "https://stackoverflow.com/users/4384381/salvatore-cosentino"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 22700, "favorite_count": 9, "answer_count": 1, "score": 53, "last_activity_date": 1579527845, "creation_date": 1505786336, "last_edit_date": 1505786827, "question_id": 46290655, "link": "https://stackoverflow.com/questions/46290655/get-the-string-length-in-characters-in-rust", "title": "Get the String length in characters in Rust", "body": "<p>Based on the Rust <a href=\"https://doc.rust-lang.org/book/%22book%22\" rel=\"noreferrer\">book</a>, the <code>String::len</code> method returns the number of bytes composing the string, which may not correspond to the length in characters.</p>\n\n<p>For example if we consider the following string in Japanese, <code>len()</code> would return 30, which is the number of bytes and not the number of characters, which would be 10:</p>\n\n<pre><code>let s = String::from(\"\u30e9\u30a6\u30c8\u306f\u96e3\u3057\u3044\u3067\u3059\uff01\");\ns.len() // returns 30.\n</code></pre>\n\n<p>The only way I have found to get the number of characters is using the following function:</p>\n\n<pre><code>s.chars().count()\n</code></pre>\n\n<p>which returns 10, and is the correct number of characters.</p>\n\n<p>Is there any method on <code>String</code> that returns the characters count, aside from the one I am using above?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505771534, "post_id": 46288670, "comment_id": 79540571, "body": "Have you learned about <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-00-generics.html\" rel=\"nofollow noreferrer\">generics</a> yet? If yes, why  can&#39;t you make them work?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1505774285, "last_edit_date": 1505774285, "creation_date": 1505771992, "answer_id": 46288790, "question_id": 46288670, "link": "https://stackoverflow.com/questions/46288670/how-do-i-create-a-function-that-accepts-an-iterator-of-i32s-as-either-values-or/46288790#46288790", "title": "How do I create a function that accepts an iterator of i32s as either values or references and sums them?", "body": "<p>You need to declare that you will take a generic iterator that yields values which can be added to an <code>i32</code> and will return an <code>i32</code>:</p>\n\n<pre><code>use std::ops::Add;\n\npub fn mean&lt;I&gt;(x: i32, xs: I) -&gt; f64\nwhere\n    I: IntoIterator,\n    i32: Add&lt;I::Item, Output = i32&gt;,\n{\n    let (sum, len) = xs.into_iter().fold((x, 1u32), |acc, x| (acc.0 + x, acc.1 + 1));\n    f64::from(sum) / f64::from(len)\n}\n</code></pre>\n\n<p>For enhanced fun, it takes in something implementing <code>IntoIterator</code>, which means that call sites can be changed to</p>\n\n<pre><code>super::mean(46, &amp;array)\nsuper::mean(46, iter)\n</code></pre>\n"}], "owner": {"reputation": 191, "user_id": 7606550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d280cfb4b941e8d99e8ee7c8ba3873ff?s=128&d=identicon&r=PG&f=1", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/7606550/david-sanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 46288790, "answer_count": 1, "score": 1, "last_activity_date": 1505774285, "creation_date": 1505771226, "last_edit_date": 1505771928, "question_id": 46288670, "link": "https://stackoverflow.com/questions/46288670/how-do-i-create-a-function-that-accepts-an-iterator-of-i32s-as-either-values-or", "title": "How do I create a function that accepts an iterator of i32s as either values or references and sums them?", "body": "<p>Is there a way to have a single function that accepts an iterator to either values or references? If not, is there a way to rewrite one or both of the tests so that they can both call the same <code>mean</code> function?</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn test_mean_of_references() {\n        let array = [47, 48, 49];\n        assert_eq!(47.5, super::mean_of_references(46, &amp;mut array.iter()));\n    }\n\n    #[test]\n    fn test_mean_of_values() {\n        let array = [46, 47, 48];\n        let mut iter = array.iter().map(|x| x + 1);\n        assert_eq!(47.5, super::mean_of_values(46, &amp;mut iter));\n    }\n}\n\npub fn mean_of_values(x: i32, xs: &amp;mut std::iter::Iterator&lt;Item = i32&gt;) -&gt; f64 {\n    let (sum, len) = xs.fold((x, 1), |acc, x| (acc.0 + x, acc.1 + 1));\n    f64::from(sum) / f64::from(len)\n}\n\npub fn mean_of_references(x: i32, xs: &amp;mut std::iter::Iterator&lt;Item = &amp;i32&gt;) -&gt; f64 {\n    let (sum, len) = xs.fold((x, 1), |acc, x| (acc.0 + x, acc.1 + 1));\n    f64::from(sum) / f64::from(len)\n}\n</code></pre>\n"}, {"tags": ["struct", "reference", "rust", "traits"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1505768383, "post_id": 46287818, "comment_id": 79539364, "body": "Do you have a more practical use case, so that we might understand your concern? References and <code>Box</code> have quite different semantics. Also, is there a reason why you can&#39;t go for a monomorphism? As in, <code>struct A&lt;T: MyTrait&gt; { a: T }</code>?"}, {"owner": {"reputation": 2727, "user_id": 2512774, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8323bc93db4001617eaf11df02f33a18?s=128&d=identicon&r=PG", "display_name": "Carl Levasseur", "link": "https://stackoverflow.com/users/2512774/carl-levasseur"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1505769990, "post_id": 46287818, "comment_id": 79540042, "body": "I would have to write <code>A&lt;StructImplementingMyTrait&gt;</code> in structs using <code>A</code>, meaning these structs would probably need this <code>&lt;StructImplementingMyTrait&gt;</code> too, which is more verbose than the other solutions. Is there any advantage ?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1505770223, "post_id": 46287818, "comment_id": 79540136, "body": "That does not sound like a reasonable drawback against monomorphisation. Typical usage is still not that verbose (<code>let x = A { a: StructImplementingMyTrait };</code>), and you can type-alias around it (<code>type MyA = A&lt;StructImplementingMyTrait&gt;</code>)."}], "answers": [{"comments": [{"owner": {"reputation": 2727, "user_id": 2512774, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8323bc93db4001617eaf11df02f33a18?s=128&d=identicon&r=PG", "display_name": "Carl Levasseur", "link": "https://stackoverflow.com/users/2512774/carl-levasseur"}, "edited": false, "score": 0, "creation_date": 1505769131, "post_id": 46288137, "comment_id": 79539720, "body": "Alright, if I want to use a reference then, I still have to use that <code>&#39;b: &#39;a</code> syntax, right ? The fact that the doc says I won&#39;t need it often makes me think borrowing the value wouldn&#39;t be the right choice and I can&#39;t really see why"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2727, "user_id": 2512774, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8323bc93db4001617eaf11df02f33a18?s=128&d=identicon&r=PG", "display_name": "Carl Levasseur", "link": "https://stackoverflow.com/users/2512774/carl-levasseur"}, "edited": false, "score": 0, "creation_date": 1505769418, "post_id": 46288137, "comment_id": 79539824, "body": "@CarlLevasseur: It&#39;s just that it&#39;s pretty rare to start layering a reference to a struct which contains a reference to... I mean, if we start from the bogus number of 10% of structs only contain a reference, then we end up with 90% of structs have no reference, 9% have a reference, 0.9% have a reference to a struct with a reference, 0.09% have a reference to a struct with a reference to a struct with a reference, etc... as you can see, that&#39;s less than 1% of cases where you need <code>&#39;b: &#39;a</code> :)"}, {"owner": {"reputation": 2727, "user_id": 2512774, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8323bc93db4001617eaf11df02f33a18?s=128&d=identicon&r=PG", "display_name": "Carl Levasseur", "link": "https://stackoverflow.com/users/2512774/carl-levasseur"}, "edited": false, "score": 0, "creation_date": 1505770319, "post_id": 46288137, "comment_id": 79540176, "body": "Okay, I guess I made the error of using way too much references then"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2727, "user_id": 2512774, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8323bc93db4001617eaf11df02f33a18?s=128&d=identicon&r=PG", "display_name": "Carl Levasseur", "link": "https://stackoverflow.com/users/2512774/carl-levasseur"}, "edited": false, "score": 0, "creation_date": 1505770485, "post_id": 46288137, "comment_id": 79540231, "body": "@CarlLevasseur: Just because something is infrequent does not mean it&#39;s wrong! However, as you noticed, some features will put on some syntactic burden so sometimes you have to find a trade-off between performance and ease of use. If you want to squeeze out as much performance as possible, you may end up with crazy struct/function signatures with lots of generic parameters... such is life."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1505769012, "last_edit_date": 1505769012, "creation_date": 1505768399, "answer_id": 46288137, "question_id": 46287818, "link": "https://stackoverflow.com/questions/46287818/when-to-use-a-reference-or-a-box-to-have-a-field-that-implements-a-trait-in-a-st/46288137#46288137", "title": "When to use a reference or a box to have a field that implements a trait in a struct?", "body": "<p>Unfortunately, the quote you used applied to a completely different situation.</p>\n\n<blockquote>\n  <p>Really, <code>Box&lt;T&gt;</code> is only useful for recursive data structures (so that they can be represented rather than being of infinite size) and for the very occasional performance optimisation on large types (which you shouldn\u2019t try doing without measurements).</p>\n</blockquote>\n\n<p>Is speaking about using either of <code>MyEnum</code> or <code>Box&lt;MyEnum&gt;</code> for data members:</p>\n\n<ul>\n<li>it is not comparing to references,</li>\n<li>it is not talking about traits.</li>\n</ul>\n\n<p>So... reset your brain, and let's start from scratch again.</p>\n\n<hr>\n\n<p>The main difference between <code>Box</code> and a reference is <em>ownership</em>:</p>\n\n<ul>\n<li>A <code>Box</code> indicates that the surrounding struct <em>owns</em> the piece of data,</li>\n<li>A reference indicates that the surrounding struct <em>borrows</em> the piece of data.</li>\n</ul>\n\n<p>Their use, therefore, is dictated by whether you want ownership or borrowing, which is a situational decision: neither is better than the other in the same way that a screwdriver and a hammer are not better than the other.</p>\n\n<p><code>Rc</code> (and <code>Arc</code>) can somewhat alleviate the need to decide, as they allow multiple owners, however they also introduce the risk of reference cycles which is its own nightmare to debug so I would caution over overusing them.</p>\n"}], "owner": {"reputation": 2727, "user_id": 2512774, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8323bc93db4001617eaf11df02f33a18?s=128&d=identicon&r=PG", "display_name": "Carl Levasseur", "link": "https://stackoverflow.com/users/2512774/carl-levasseur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "accepted_answer_id": 46288137, "answer_count": 1, "score": 0, "last_activity_date": 1505769012, "creation_date": 1505767012, "last_edit_date": 1505768981, "question_id": 46287818, "link": "https://stackoverflow.com/questions/46287818/when-to-use-a-reference-or-a-box-to-have-a-field-that-implements-a-trait-in-a-st", "title": "When to use a reference or a box to have a field that implements a trait in a struct?", "body": "<p>I have the following code:</p>\n\n<pre><code>pub trait MyTrait {\n    pub fn do_something(&amp;self);\n}\n</code></pre>\n\n<p>If I want a struct <code>A</code> to have a field <code>a</code> that implements the trait <code>MyTrait</code>, there are 2 options:</p>\n\n<pre><code>pub struct A&lt;'a&gt; {\n    a: &amp;'a MyTrait\n}\n</code></pre>\n\n<p>or </p>\n\n<pre><code>pub struct A {\n    a: Box&lt;MyTrait&gt;\n}\n</code></pre>\n\n<p>But on <a href=\"https://stackoverflow.com/questions/27305585/difference-between-pass-by-reference-and-by-box\">Difference between pass by reference and by box</a>, someone said:</p>\n\n<blockquote>\n  <p>Really, <code>Box&lt;T&gt;</code> is only useful for recursive data structures (so that\n  they can be represented rather than being of infinite size) and for\n  the very occasional performance optimisation on large types (which you\n  shouldn\u2019t try doing without measurements).</p>\n</blockquote>\n\n<p>Unless <code>A</code> implements <code>MyTrait</code>, I'd say <code>A</code> is not a recursive data structure, so that makes me think I should prefer using a reference instead of a box.</p>\n\n<p>If I have another struct <code>B</code> that has a reference to some <code>A</code> object, like this:</p>\n\n<pre><code>pub struct A&lt;'a&gt; {\n    a: &amp;'a MyTrait\n}\n\npub struct B&lt;'a, 'b: 'a&gt; {\n    b: &amp;'a A&lt;'b&gt;\n}\n</code></pre>\n\n<p>I need to say that <code>'b</code> is larger than <code>'a</code>, and <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-02-advanced-lifetimes.html\" rel=\"nofollow noreferrer\">according to the documentation</a>:</p>\n\n<blockquote>\n  <p>You won't often need this syntax, but it can come up in situations\n  like this one, where you need to refer to something you have a\n  reference to.</p>\n</blockquote>\n\n<p>I feel like that's a bad choice too, because the example here is really simple and probably doesn't need this kind of advanced feature.</p>\n\n<p>How to decide whether I should use a reference or a box then?</p>\n"}, {"tags": ["memory-management", "rust", "destructor", "exception-safety"], "comments": [{"owner": {"reputation": 5782, "user_id": 2832398, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/356c99a077310a35816f852423859f4c?s=128&d=identicon&r=PG&f=1", "display_name": "lilezek", "link": "https://stackoverflow.com/users/2832398/lilezek"}, "edited": false, "score": 1, "creation_date": 1505765632, "post_id": 46287442, "comment_id": 79538072, "body": "You may want destructors to save things, especially if something went wrong."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1505765691, "post_id": 46287442, "comment_id": 79538096, "body": "And it&#39;s useful for debugging. The backtrace can help guide you to what has gone wrong."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 5782, "user_id": 2832398, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/356c99a077310a35816f852423859f4c?s=128&d=identicon&r=PG&f=1", "display_name": "lilezek", "link": "https://stackoverflow.com/users/2832398/lilezek"}, "edited": false, "score": 2, "creation_date": 1505766448, "post_id": 46287442, "comment_id": 79538470, "body": "@lilezek: Actually... you should probably NOT rely on destructors to save things. The program could abort, crash, be killed by the OS, ... and in any of those cases the destructors will never run. In the context of program termination, destructors can only be used to implement &quot;best effort&quot; operations and should NOT be used to implement &quot;mandatory&quot; operations. If you want to be able to resume from where you were, you need to regularly &quot;save&quot; your progress during the normal execution (with an atomic switch, in case failure occur during the save...)."}, {"owner": {"reputation": 5782, "user_id": 2832398, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/356c99a077310a35816f852423859f4c?s=128&d=identicon&r=PG&f=1", "display_name": "lilezek", "link": "https://stackoverflow.com/users/2832398/lilezek"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1505766638, "post_id": 46287442, "comment_id": 79538573, "body": "@MatthieuM. When I said save things I meant things like debug information, TCP socket states... Didn&#39;t meant to rely on destructors to save things to the disk (that might even break some already stored data)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 5782, "user_id": 2832398, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/356c99a077310a35816f852423859f4c?s=128&d=identicon&r=PG&f=1", "display_name": "lilezek", "link": "https://stackoverflow.com/users/2832398/lilezek"}, "edited": false, "score": 0, "creation_date": 1505767841, "post_id": 46287442, "comment_id": 79539127, "body": "@lilezek: I am happy that we agree :) (I have unfortunately be on the receiving end of a &quot;let&#39;s use the destructor to restore the state in the database&quot; attempt, and spent days trying to undo the damage)"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1505782322, "post_id": 46287442, "comment_id": 79543242, "body": "It has been possible to catch a panic across threads since Rust 1.0 (see <a href=\"https://doc.rust-lang.org/stable/std/thread/struct.JoinHandle.html#method.join\" rel=\"nofollow noreferrer\">JoinHandle::join</a>)."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1505765770, "creation_date": 1505765770, "answer_id": 46287534, "question_id": 46287442, "link": "https://stackoverflow.com/questions/46287442/why-do-destructors-run-when-a-panic-occurs/46287534#46287534", "title": "Why do destructors run when a panic occurs?", "body": "<p>There is a faulty premise in your question: it pre-supposes that the only reason to use a destructor is to clean-up resources of the current process.</p>\n\n<p>This is, indeed, the most common usage, but it is not the only one.</p>\n\n<p>For example, I could perfectly imagine that the destructor of a TCP connection would attempt to send a close message: the soonest the connection is closed, the soonest resources are released on the other end. Of course, it's only a best effort (in case of abort/crash the destructor is never run), but it can still be worthwhile.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1505766198, "creation_date": 1505766198, "answer_id": 46287626, "question_id": 46287442, "link": "https://stackoverflow.com/questions/46287442/why-do-destructors-run-when-a-panic-occurs/46287626#46287626", "title": "Why do destructors run when a panic occurs?", "body": "<blockquote>\n  <p>If a Rust program panics [...] just let the OS clean up after the process. </p>\n</blockquote>\n\n<p>When a panic occurs in <em>a thread</em>, the entire <em>process</em> does not need to exit. In these cases, it is good that the destructor runs.</p>\n\n<p>In other cases, a <code>Drop</code> implementation is used to perform a \"rollback\" of some critical section of code.</p>\n\n<blockquote>\n  <p>assuming there are no panic catchers (which for a while there wasn't)</p>\n</blockquote>\n\n<p>But <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\">now there <em>are</em></a>, so I'm unclear why you bring it up.</p>\n"}], "owner": {"reputation": 1109, "user_id": 1772476, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc3dd034928abd20bb22de44a4846c93?s=128&d=identicon&r=PG", "display_name": "Timidger", "link": "https://stackoverflow.com/users/1772476/timidger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 0, "accepted_answer_id": 46287534, "answer_count": 2, "score": 0, "last_activity_date": 1505766198, "creation_date": 1505765417, "last_edit_date": 1505765955, "question_id": 46287442, "link": "https://stackoverflow.com/questions/46287442/why-do-destructors-run-when-a-panic-occurs", "title": "Why do destructors run when a panic occurs?", "body": "<p>If a Rust program panics, and assuming there are no panic catchers (which for a while there wasn't), surely it would be safe and fine to not run destructors and just let the OS clean up after the process. Why does Rust unwind the thread?</p>\n\n<p>The only reason I can think of is for when there isn't an OS to reclaim the memory, but apart from that niche, it seems unnecessary.</p>\n"}, {"tags": ["caching", "rust"], "comments": [{"owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "edited": false, "score": 1, "creation_date": 1505764910, "post_id": 46286899, "comment_id": 79537717, "body": "&#39;If you never delete or modify elements of the cache, then your slice references are safe&#39;. If there are new elements added to cache, then slice elements are not safe. Hence either returning a slice or adding an element to cache should be mutually exclusive or the borrow checker will complain. Is that right ?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1505765924, "creation_date": 1505765924, "answer_id": 46287570, "question_id": 46286899, "link": "https://stackoverflow.com/questions/46286899/safe-caching-in-rust-without-refcounting/46287570#46287570", "title": "Safe caching in Rust without refcounting", "body": "<blockquote>\n  <p>If you never delete or modify elements of the cache, then your slice references are safe. The vectors might be moved when you add to the cache, but their slices shouldn't be.</p>\n</blockquote>\n\n<p>Your analysis appears correct to me.</p>\n\n<p>To be clear, this means that nothing can <em>ever</em> be removed from the <code>HashMap</code> and nothing can ever be added or removed from the <code>Vec</code> inside the <code>HashMap</code>. Doing any of that could cause memory to be reallocated and thus invalidate the references. It also only works because the <code>Vec</code> introduces a level of indirection to the heap which can then be stable.</p>\n\n<blockquote>\n  <p>This looks unsafe, but (I think) isn't.</p>\n</blockquote>\n\n<p><em>Safety</em> has very particular meaning in Rust. Specifically, <a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"nofollow noreferrer\">there are types of behavior that are never allowed in any Rust code</a>. Even when using an <code>unsafe</code> block, you <strong>are not allowed</strong> to invoke that behavior.</p>\n\n<p>Safe Rust is a subset of all Rust that the compiler can <em>guarantee</em> never performs any of the aforementioned issues. Notably, that means that there are certain types of code that do not generate undefined behavior, but that the compiler cannot guarantee. That's where <code>unsafe</code> code comes into play. The programmer, not the compiler, is required to verify the guarantees are never broken, just like they would in C or C++.</p>\n\n<p>Unsafe Rust code isn't <em>bad</em>, it just requires an order of magnitude more programmer scrutiny than safe Rust code. This is still a lot better than applying that level of scrutiny to all of your code (again, as you would in C or C++).</p>\n\n<blockquote>\n  <p>Is there any way to eliminate the refcount without resorting to unsafe code?</p>\n</blockquote>\n\n<p>There's nothing I'm aware of. What you can do is <a href=\"https://crates.io/\" rel=\"nofollow noreferrer\">look for a crate</a> that already does it for you. </p>\n\n<p>One I like to use is <a href=\"https://crates.io/crates/typed-arena\" rel=\"nofollow noreferrer\">typed-arena</a>, which allows allocating many things that all live the same length of time:</p>\n\n<pre><code>extern crate typed_arena;\n\nuse typed_arena::Arena;\n\nuse std::collections::HashMap;\n\nfn n_trues&lt;'a&gt;(n: usize, slab: &amp;'a Arena&lt;Vec&lt;bool&gt;&gt;, cache: &amp;mut HashMap&lt;usize, &amp;'a [bool]&gt;) -&gt; &amp;'a [bool] {\n    cache\n        .entry(n)\n        .or_insert_with(|| slab.alloc(vec![true; n]))\n        .clone()\n}\n\nfn main() {\n    let slab = Arena::new();\n    let mut cache = HashMap::new();\n    let zero = n_trues(0, &amp;slab, &amp;mut cache);\n    let one = n_trues(1, &amp;slab, &amp;mut cache);\n    let other_zero = n_trues(0, &amp;slab, &amp;mut cache);\n    assert_eq!(zero.as_ptr(), other_zero.as_ptr());\n    for x in [zero, one, other_zero].iter() {\n        println!(\"{:?}\", x);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 123, "user_id": 1454156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/866a1a825be7717cadea0beed21ae450?s=128&d=identicon&r=PG", "display_name": "user1454156", "link": "https://stackoverflow.com/users/1454156/user1454156"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 514, "favorite_count": 0, "accepted_answer_id": 46287570, "answer_count": 1, "score": 3, "last_activity_date": 1505765924, "creation_date": 1505763293, "last_edit_date": 1505764360, "question_id": 46286899, "link": "https://stackoverflow.com/questions/46286899/safe-caching-in-rust-without-refcounting", "title": "Safe caching in Rust without refcounting", "body": "<p>I'm trying to write a function that returns some sort of list. Since this function is pure, and I'm likely to call it multiple times, I want to cache the results. To avoid allocations, I want to return references that all point to the same memory location, so that I only need to perform an allocation once per unique call of the function.</p>\n\n<p>In principle, I could store each result as a vector in a cache, and return references to the result vector's slice. This looks unsafe, but (I think) isn't. If you never delete or modify elements of the cache, then your slice references are safe. The vectors might be moved when you add to the cache, but their slices shouldn't be.</p>\n\n<p>Obviously the borrow checker won't accept this solution. As far as it's concerned, the cache is borrowed when your function returns, and you can't call it again because that requires a mutable borrow.</p>\n\n<p>The best solution I have so far is on the playground <a href=\"https://play.rust-lang.org/?gist=1a3fece1f4df4f23e22712cb8f569114&amp;version=nightly\" rel=\"nofollow noreferrer\">here</a>, and included below:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::rc::Rc;\n\nfn n_trues(n: usize, cache: &amp;mut HashMap&lt;usize, Rc&lt;[bool]&gt;&gt;) -&gt; Rc&lt;[bool]&gt; {\n    cache\n        .entry(n)\n        .or_insert_with(|| vec![true; n].into())\n        .clone()\n}\n\nfn main() {\n    let mut cache = HashMap::new();\n    let zero = n_trues(0, &amp;mut cache);\n    let one = n_trues(1, &amp;mut cache);\n    let other_zero = n_trues(0, &amp;mut cache);\n    assert!(Rc::ptr_eq(&amp;zero, &amp;other_zero));\n    for x in [zero, one, other_zero].iter() {\n        println!(\"{:?}\", x);\n    }\n}\n</code></pre>\n\n<p>The <code>Rc</code> satisfies the borrow checker: deleting from the cache won't invalidate the other references, and you can't mutate the contents of an <code>Rc</code>. However, the actual refcounting is superfluous: we ensure that the cache goes out of scope only at the end of the program, so the cached values are not freed until then. This is the sort of thing the borrow checker can check: it can ensure that cache outlives all the results.</p>\n\n<p>Is there any way to eliminate the refcount without resorting to unsafe code?</p>\n"}, {"tags": ["rust", "string-formatting"], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 4038635, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-yzkljFH6WrI/AAAAAAAAAAI/AAAAAAAAAck/EC0ainkQXe4/photo.jpg?sz=128", "display_name": "Fred", "link": "https://stackoverflow.com/users/4038635/fred"}, "edited": false, "score": 0, "creation_date": 1505881260, "post_id": 46282397, "comment_id": 79588083, "body": "I had read through that documentation but a couple of things still escape me. Firstly, does the compiler infer that <code>myValue$</code> is specifying the width because it&#39;s a numeric value not preceded by a period? Secondly, why does <code>println!(&quot;{number:0&gt;#width$}&quot;, number=-19, width=6);</code> print <code>000-19</code> whereas <code>println!(&quot;{number:#&gt;0width$}&quot;, number=-19, width=6);</code> prints <code>-00019</code> and <code>println!(&quot;{number:#&gt;width$}&quot;, number=-19, width=6);</code> prints <code>###-19</code>? Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 71, "user_id": 4038635, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-yzkljFH6WrI/AAAAAAAAAAI/AAAAAAAAAck/EC0ainkQXe4/photo.jpg?sz=128", "display_name": "Fred", "link": "https://stackoverflow.com/users/4038635/fred"}, "edited": false, "score": 0, "creation_date": 1505929937, "post_id": 46282397, "comment_id": 79618386, "body": "@Fred <i>does the compiler infer</i> \u2014 there&#39;s no inference here; you are specifying that <code>myValue</code> is the width by using <code>$</code>. <i>000-19</i> \u2014 you are filling it out to 6 characters using <code>0</code> to fill, without regard to the sign. <i>-00019</i> \u2014 you are padding out to 6 characters with regard to the sign (the <code>#</code> means nothing in these cases). <i>###-19</i> \u2014 you are filling it out to 6 characters using <code>#</code> to fill, without regard to the sign."}, {"owner": {"reputation": 71, "user_id": 4038635, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-yzkljFH6WrI/AAAAAAAAAAI/AAAAAAAAAck/EC0ainkQXe4/photo.jpg?sz=128", "display_name": "Fred", "link": "https://stackoverflow.com/users/4038635/fred"}, "edited": false, "score": 0, "creation_date": 1506013888, "post_id": 46282397, "comment_id": 79659500, "body": "I think I&#39;ve figured it out. I now see that in <code>0&gt;</code> the <code>0</code> is the <code>fill</code> character, whereas in <code>&gt;0</code> the <code>0</code> is the <code>[&#39;0&#39;]</code> <code>format_spec</code>. However I believe <code>$</code> marks the argument for a parameter, as described in the specs thusly: <code>parameter := argument &#39;$&#39;</code>. It could be width but it could also be precision as in your example: <code>{number:.prec$}</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1567025438, "last_edit_date": 1567025438, "creation_date": 1505746518, "answer_id": 46282397, "question_id": 46282330, "link": "https://stackoverflow.com/questions/46282330/what-does-the-dollar-syntax-mean-in-a-rust-format-string/46282397#46282397", "title": "What does the dollar syntax mean in a Rust format string?", "body": "<p>It allows the width or precision of another formatted item to be provided as an argument instead of hard-coded as part of the format string. The parameter can be specified using a numeric index or a name.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/fmt/index.html#width\" rel=\"nofollow noreferrer\">The documentation says</a>:</p>\n\n<blockquote>\n  <p>The value for the width can also be provided as a [<code>usize</code>] in the list of\n  parameters by using the dollar syntax indicating that the second argument is\n  a [<code>usize</code>] specifying the width, for example:</p>\n\n<pre><code>// All of these print \"Hello x    !\"\nprintln!(\"Hello {:5}!\", \"x\");\nprintln!(\"Hello {:1$}!\", \"x\", 5);\nprintln!(\"Hello {1:0$}!\", 5, \"x\");\nprintln!(\"Hello {:width$}!\", \"x\", width = 5);\n</code></pre>\n  \n  <p>Referring to an argument with the dollar syntax does not affect the \"next\n  argument\" counter, so it's usually a good idea to refer to arguments by\n  position, or use named arguments.</p>\n</blockquote>\n\n<p>It <a href=\"https://doc.rust-lang.org/std/fmt/index.html#precision\" rel=\"nofollow noreferrer\">also says</a>:</p>\n\n<blockquote>\n  <p>There are three possible ways to specify the desired <code>precision</code>:</p>\n  \n  <p>[...]</p>\n  \n  <ol start=\"2\">\n  <li><p>An integer or name followed by dollar sign <code>.N$</code>:</p>\n  \n  <p>use format <em>argument</em> <code>N</code> (which must be a <code>usize</code>) as the precision.</p></li>\n  </ol>\n  \n  <p>[...]</p>\n  \n  <p>For example, the following calls all print the same thing <code>Hello x is 0.01000</code>:</p>\n\n<pre><code>// Hello {arg 0 (\"x\")} is {arg 1 (0.01) with precision specified inline (5)}\nprintln!(\"Hello {0} is {1:.5}\", \"x\", 0.01);\n\n// Hello {arg 1 (\"x\")} is {arg 2 (0.01) with precision specified in arg 0 (5)}\nprintln!(\"Hello {1} is {2:.0$}\", 5, \"x\", 0.01);\n\n// Hello {arg 0 (\"x\")} is {arg 2 (0.01) with precision specified in arg 1 (5)}\nprintln!(\"Hello {0} is {2:.1$}\", \"x\", 5, 0.01);\n\n// Hello {next arg (\"x\")} is {second of next two args (0.01) with precision\n//                          specified in first of next two args (5)}\nprintln!(\"Hello {} is {:.*}\",    \"x\", 5, 0.01);\n\n// Hello {next arg (\"x\")} is {arg 2 (0.01) with precision\n//                          specified in its predecessor (5)}\nprintln!(\"Hello {} is {2:.*}\",   \"x\", 5, 0.01);\n\n// Hello {next arg (\"x\")} is {arg \"number\" (0.01) with precision specified\n//                          in arg \"prec\" (5)}\nprintln!(\"Hello {} is {number:.prec$}\", \"x\", prec = 5, number = 0.01);\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 71, "user_id": 4038635, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-yzkljFH6WrI/AAAAAAAAAAI/AAAAAAAAAck/EC0ainkQXe4/photo.jpg?sz=128", "display_name": "Fred", "link": "https://stackoverflow.com/users/4038635/fred"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1054, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1567025438, "creation_date": 1505746340, "last_edit_date": 1505747280, "question_id": 46282330, "link": "https://stackoverflow.com/questions/46282330/what-does-the-dollar-syntax-mean-in-a-rust-format-string", "title": "What does the dollar syntax mean in a Rust format string?", "body": "<p>I'm going through Rust by Example and the use of <code>$</code> (the dollar sign) <a href=\"https://rustbyexample.com/hello/print.html\" rel=\"noreferrer\">in this example</a> isn't clear to me:</p>\n\n<pre><code>// You can right-align text with a specified width. This will output\n// \"     1\". 5 white spaces and a \"1\".\nprintln!(\"{number:&gt;width$}\", number=1, width=6);\n\n// You can pad numbers with extra zeroes. This will output \"000001\".\nprintln!(\"{number:&gt;0width$}\", number=1, width=6);\n</code></pre>\n\n<p>I found this in <a href=\"https://doc.rust-lang.org/std/fmt/index.html\" rel=\"noreferrer\">the documentation for <code>std::fmt</code></a>, but it doesn't clarify things for me:</p>\n\n<pre><code>format_string := &lt;text&gt; [ maybe-format &lt;text&gt; ] *\nmaybe-format := '{' '{' | '}' '}' | &lt;format&gt;\nformat := '{' [ argument ] [ ':' format_spec ] '}'\nargument := integer | identifier\n\nformat_spec := [[fill]align][sign]['#']['0'][width]['.' precision][type]\nfill := character\nalign := '&lt;' | '^' | '&gt;'\nsign := '+' | '-'\nwidth := count\nprecision := count | '*'\ntype := identifier | ''\ncount := parameter | integer\nparameter := argument '$'\n</code></pre>\n\n<p>Poking around at the code a bit, I've found that it doesn't compile without the dollar sign, but \"<code>width</code>\" can be replaced with any arbitrary identifier. i.e. the following is equivalent to the third line in the first code block:</p>\n\n<pre><code>println!(\"{number:&gt;test$}\", number=1, test=6);\n</code></pre>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1505737993, "post_id": 46278670, "comment_id": 79521560, "body": "The duplicate&#39;s solution <a href=\"https://play.rust-lang.org/?gist=94254124c3dc4a2523e3400498f1c376&amp;version=stable\" rel=\"nofollow noreferrer\">applied to your code</a>."}, {"owner": {"reputation": 559, "user_id": 379923, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/6462d7abae14fab3fe5986eafbc9c457?s=128&d=identicon&r=PG", "display_name": "doup", "link": "https://stackoverflow.com/users/379923/doup"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505844590, "post_id": 46278670, "comment_id": 79576124, "body": "Thanks! Btw, I saw your comment on the edit and learnt that VS Code errors don&#39;t tell all the story. Now I&#39;m looking the errors on the console, really informative. :-)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505845824, "post_id": 46278670, "comment_id": 79576720, "body": "I&#39;d have hoped that VS Code applies the &quot;underlining&quot; and &quot;highlighting&quot; from the plain-text form in some graphical way, not just losing them completely... For my part, thanks for letting me know it&#39;s from VS Code; now I have one more idea why sometimes error messages are missing important detail!"}], "owner": {"reputation": 559, "user_id": 379923, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/6462d7abae14fab3fe5986eafbc9c457?s=128&d=identicon&r=PG", "display_name": "doup", "link": "https://stackoverflow.com/users/379923/doup"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 72, "favorite_count": 0, "closed_date": 1505737959, "answer_count": 0, "score": 0, "last_activity_date": 1505739031, "creation_date": 1505735771, "last_edit_date": 1505736158, "question_id": 46278670, "link": "https://stackoverflow.com/questions/46278670/rust-mutable-inmutable-borrow-error-in-closure", "closed_reason": "Duplicate", "title": "Rust mutable/inmutable borrow error in closure", "body": "<p>I'm trying to abstract the initialisation of the <code>glium</code> crate but I'm having ownership problems. I've been looking the documentation and looks like it may be related to this rule:</p>\n\n<blockquote>\n  <ol>\n  <li>At any given time, you can have either but not both of:\n  \n  <ul>\n  <li>One mutable reference.</li>\n  <li>Any number of immutable references.</li>\n  </ul></li>\n  </ol>\n</blockquote>\n\n<p>I think that I understand the rule, how it applies and why it exists, but I can't see what's happening with my code. I've created a cleaned-up example:</p>\n\n<pre><code>extern crate glium;\n\nuse glium::glutin;\n\npub struct Renderer {\n    pub events_loop: glium::glutin::EventsLoop,\n    pub display: glium::Display,\n}\n\nimpl Renderer {\n    pub fn new() -&gt; Renderer {\n        let events_loop = glutin::EventsLoop::new();\n        let window = glutin::WindowBuilder::new();\n        let context = glutin::ContextBuilder::new();\n        let display = glium::Display::new(window, context, &amp;events_loop).unwrap();\n\n        Renderer {\n            events_loop: events_loop,\n            display: display,\n        }\n    }\n}\n\nfn main() {\n    let mut renderer = Renderer::new();\n\n    renderer.events_loop.poll_events(|event| {\n        // Some event handling logic with `match`, somewhere I've this line:\n        let window_size = renderer.display.gl_window().get_inner_size_pixels().unwrap();\n    });\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `renderer` as immutable because `renderer.events_loop` is also borrowed as mutable\n  --&gt; src/main.rs:27:38\n   |\n27 |     renderer.events_loop.poll_events(|event| {\n   |     --------------------             ^^^^^^^ immutable borrow occurs here\n   |     |\n   |     mutable borrow occurs here\n28 |         // Some event handling logic with `match`, somewhere I've this line:\n29 |         let window_size = renderer.display.gl_window().get_inner_size_pixels().unwrap();\n   |                           -------- borrow occurs due to use of `renderer` in closure\n30 |     });\n   |      - mutable borrow ends here\n</code></pre>\n\n<p>If <code>renderer</code> is not mutable, I get this one:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable field `renderer.events_loop` as mutable\n  --&gt; src/main.rs:27:5\n   |\n25 |     let renderer = Renderer::new();\n   |         -------- consider changing this to `mut renderer`\n26 |\n27 |     renderer.events_loop.poll_events(|event| {\n   |     ^^^^^^^^^^^^^^^^^^^^ cannot mutably borrow immutable field\n</code></pre>\n"}, {"tags": ["rust", "lock-free"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1505751186, "post_id": 46276752, "comment_id": 79530720, "body": "Hi Stjepan! I am really glad to see you here, especially on this very specific question which has you can see the &quot;usual suspects&quot; didn&#39;t manage to answer. If you want to chat or need anything, don&#39;t hesitate to pop in the Rust chatroom: <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">chat.stackoverflow.com/rooms/62927/rust</a>"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1505774489, "post_id": 46276752, "comment_id": 79541404, "body": "Thanks, coco does exactly what I need - I&#39;ve now added an answer with the code from question updated for coco. For me it doesn&#39;t matter that coco will be eventually deprecated, I&#39;ll just switch back to Crossbeam then."}, {"owner": {"reputation": 381, "user_id": 1321945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/44uYf.jpg?s=128&g=1", "display_name": "Stjepan Glavina", "link": "https://stackoverflow.com/users/1321945/stjepan-glavina"}, "edited": false, "score": 0, "creation_date": 1505934884, "post_id": 46276752, "comment_id": 79621014, "body": "Hi, Matthieu, and thanks! :) I&#39;m lurking in the room. Likewise, if there&#39;s anything else I can help with, feel free to ping me."}], "tags": [], "owner": {"reputation": 381, "user_id": 1321945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/44uYf.jpg?s=128&g=1", "display_name": "Stjepan Glavina", "link": "https://stackoverflow.com/users/1321945/stjepan-glavina"}, "is_accepted": true, "score": 6, "last_activity_date": 1505730199, "last_edit_date": 1505730199, "creation_date": 1505729449, "answer_id": 46276752, "question_id": 46267643, "link": "https://stackoverflow.com/questions/46267643/memory-reclamation-with-crossbeamepoch/46276752#46276752", "title": "Memory reclamation with crossbeam::epoch", "body": "<p>The crux of the problem is (as you already figured out yourself) that <code>guard.unlinked(prev)</code> defers execution of the following piece of code:</p>\n\n<pre><code>drop(Vec::from_raw_parts(prev.as_raw(), 0, 1));\n</code></pre>\n\n<p>But you want it to defer this instead:</p>\n\n<pre><code>drop(Vec::from_raw_parts(prev.as_raw(), 1, 1));\n</code></pre>\n\n<p>Or, equivalently:</p>\n\n<pre><code>drop(Box::from_raw(prev.as_raw());\n</code></pre>\n\n<p>In other words, <code>unlinked</code> simply frees the memory in which the object is stored, but doesn't drop the object itself.</p>\n\n<p>This is currently a known pain point in Crossbeam, but fortunately it will be resolved soon. Crossbeam's epoch-based garbage collector is currently undergoing a redesign and rewrite in order to:</p>\n\n<ul>\n<li>allow deferred drops and arbitrary deferred functions</li>\n<li>incrementally collect garbage in order to minimize pauses</li>\n<li>avoid overcrowding thread-local garbage bags</li>\n<li>more eagerly collect large pieces of garbage</li>\n<li>fix a soundness issue in the API</li>\n</ul>\n\n<p>If you're curious to find out more on the new Crossbeam design, check out the <a href=\"https://github.com/crossbeam-rs/rfcs\" rel=\"noreferrer\">RFCs</a> repository. I suggest starting with the <a href=\"https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-05-02-atomic-api.md\" rel=\"noreferrer\">RFC on new Atomic</a> and the <a href=\"https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-05-23-epoch-gc.md\" rel=\"noreferrer\">RFC on new GC</a>.</p>\n\n<p>I've created an experimental crate, <a href=\"https://github.com/stjepang/coco\" rel=\"noreferrer\">Coco</a>, which has a lot in common with Crossbeam's new design. If you need a solution right now, I'd suggest switching to it. But keep in mind that Coco will be deprecated in favor of Crossbeam as soon as we release a new version (probably this or the next month).</p>\n"}, {"tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": false, "score": 2, "last_activity_date": 1505993711, "last_edit_date": 1505993711, "creation_date": 1505765438, "answer_id": 46287450, "question_id": 46267643, "link": "https://stackoverflow.com/questions/46267643/memory-reclamation-with-crossbeamepoch/46287450#46287450", "title": "Memory reclamation with crossbeam::epoch", "body": "<p>As <a href=\"https://stackoverflow.com/a/46276752/1600898\">Stjepan answered</a> in some detail, it is a known limitation of current Crossbeam that it only supports deallocation and not full dropping of objects that have become unreachable, but are potentially still visible to other threads. This does not affect the lock-free collections supported by Crossbeam, which automatically remove items \"observed\" by the collection user - no peeking is allowed. This fits the need of a queue or stack, but not of e.g. a lock-free map.</p>\n\n<p>This is addressed by the <a href=\"https://crates.io/crates/coco\" rel=\"nofollow noreferrer\">coco</a> crate, which defines several concurrent collections and serves as a preview of the next generation of Crossbeam design. It supports deferred dropping of values. Here is a rendition of <code>Container</code> using coco:</p>\n\n<pre><code>use std::thread;\nuse std::sync::atomic::Ordering;\n\nuse coco::epoch::{self, Atomic, Owned};\n\nstruct Container&lt;T: Clone&gt; {\n    current: Atomic&lt;T&gt;,\n}\n\nimpl&lt;T: Clone&gt; Container&lt;T&gt; {\n    fn new(initial: T) -&gt; Container&lt;T&gt; {\n        Container { current: Atomic::new(initial) }\n    }\n\n    fn set_current(&amp;self, new: T) {\n        epoch::pin(|scope| {\n            let prev = self.current.swap(Owned::new(new).into_ptr(&amp;scope),\n                                         Ordering::AcqRel, &amp;scope);\n            unsafe {\n                scope.defer_drop(prev);\n            }\n        })\n    }\n\n    fn get_current(&amp;self) -&gt; T {\n        epoch::pin(|scope| {\n            let obj_ref = unsafe {\n                self.current.load(Ordering::Acquire, &amp;scope).as_ref().unwrap()\n            };\n            obj_ref.clone()\n        })\n    }\n}\n</code></pre>\n\n<p>When run with the same <code>main()</code> as in the question, it does not leak memory.</p>\n\n<p>One thing to take into account is that, according to the documentation, <code>epoch::pin()</code> comes with the cost of a <code>SeqCst</code> fence and a few atomic ops. (Note that <code>epoch::pin()</code> was not free under Crossbeam either, and was in fact much more expensive.) The delay of 10-15 ns on modern hardware might not be relevant for most uses, but users should be aware of it when writing code that attempts to squeeze every nanosecond out of its lock-free operations.</p>\n"}], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 897, "favorite_count": 0, "accepted_answer_id": 46276752, "answer_count": 2, "score": 6, "last_activity_date": 1506889208, "creation_date": 1505673875, "last_edit_date": 1506889208, "question_id": 46267643, "link": "https://stackoverflow.com/questions/46267643/memory-reclamation-with-crossbeamepoch", "title": "Memory reclamation with crossbeam::epoch", "body": "<p>I've encountered an issue with memory reclamation in <a href=\"https://docs.rs/crossbeam/0.3.0/crossbeam/\" rel=\"nofollow noreferrer\"><code>crossbeam</code></a>. Say you're implementing a simple thread-safe lock-free container that holds a single value. Any thread can obtain a clone of the stored value, and the value can get updated at any point, after which readers begin observing clones of the new value.</p>\n\n<p>Although the typical use case would be to specify something like <code>Arc&lt;X&gt;</code> as T, the implementation cannot rely on T being pointer-sized - for example, <code>X</code> could be a trait, resulting in a fat-pointer <code>Arc&lt;X&gt;</code>. But lock-free access to an arbitrary T seems like a great fit for <a href=\"https://aturon.github.io/blog/2015/08/27/epoch/\" rel=\"nofollow noreferrer\">epoch-based lock-free code</a>. Based on the examples, I came up with this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate crossbeam;\n\nuse std::thread;\nuse std::sync::atomic::Ordering;\n\nuse crossbeam::epoch::{self, Atomic, Owned};\n\nstruct Container&lt;T: Clone&gt; {\n    current: Atomic&lt;T&gt;,\n}\n\nimpl&lt;T: Clone&gt; Container&lt;T&gt; {\n    fn new(initial: T) -&gt; Container&lt;T&gt; {\n        Container { current: Atomic::new(initial) }\n    }\n\n    fn set_current(&amp;self, new: T) {\n        let guard = epoch::pin();\n        let prev = self.current.swap(Some(Owned::new(new)),\n                                     Ordering::AcqRel, &amp;guard);\n        if let Some(prev) = prev {\n            unsafe {\n                // once swap has propagated, *PREV will no longer\n                // be observable\n                //drop(::std::ptr::read(*prev));\n                guard.unlinked(prev);\n            }\n        }\n    }\n\n    fn get_current(&amp;self) -&gt; T {\n        let guard = epoch::pin();\n        // clone the latest visible value\n        (*self.current.load(Ordering::Acquire, &amp;guard).unwrap()).clone()\n    }\n}\n</code></pre>\n\n<p>When used with a type that doesn't allocate, e.g. with <code>T=u64</code>, it works great - <code>set_current</code> and <code>get_current</code> can be called millions of times without leaking. (The process monitor shows minor memory oscillations due to <code>epoch</code> pseudo-gc, as would be expected, but no long-term growth.) However, when T is a type that allocates, e.g. <code>Box&lt;u64&gt;</code>, one can easily observe leaks. For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    use std::sync::Arc;\n    let c = Arc::new(Container::new(Box::new(0)));\n    const ITERS: u64 = 100_000_000;\n    let producer = thread::spawn({\n        let c = Arc::clone(&amp;c);\n        move || {\n            for i in 0..ITERS {\n                c.set_current(Box::new(i));\n            }\n        }\n    });\n    let consumers: Vec&lt;_&gt; = (0..16).map(|_| {\n        let c = Arc::clone(&amp;c);\n        thread::spawn(move || {\n            let mut last = 0;\n            loop {\n                let current = c.get_current();\n                if *current == ITERS - 1 {\n                    break;\n                }\n                assert!(*current &gt;= last);\n                last = *current;\n            }\n        })}).collect();\n    producer.join().unwrap();\n    for x in consumers {\n        x.join().unwrap();\n    }\n}\n</code></pre>\n\n<p>Running this program shows a steady and significant increase in memory usage that ends up consuming the amount of memory proportional to the number of iterations.</p>\n\n<p>According to <a href=\"https://aturon.github.io/blog/2015/08/27/epoch/\" rel=\"nofollow noreferrer\">the blog post introducing it</a>, Crossbeam's epoch reclamation \"does not run destructors, but merely deallocates memory\". The <code>try_pop</code> in the Treiber stack example uses <code>ptr::read(&amp;(*head).data)</code> to move the value contained in <code>head.data</code> out of the <code>head</code> object destined for deallocation. The ownership of the data object is transferred to the caller which will either move it elsewhere or deallocate it when it goes out of scope.</p>\n\n<p>How would that translate to the code above? Is the setter the proper place for <code>guard.unlinked</code>, or how else does one ensure that the <code>drop</code> is run on the underlying object? Uncommenting the explicit <code>drop(ptr::read(*prev))</code> results in failed assertion that checks monotonicity, possibly indicating premature deallocation.</p>\n"}, {"tags": ["rust", "mutable"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1505666492, "last_edit_date": 1505666492, "creation_date": 1505666333, "answer_id": 46266422, "question_id": 46266400, "link": "https://stackoverflow.com/questions/46266400/how-can-rust-know-if-a-variable-is-mutable/46266422#46266422", "title": "How can Rust know if a variable is mutable?", "body": "<p>All variables are <em>immutable by default</em>. You must <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch03-01-variables-and-mutability.html\" rel=\"noreferrer\">explicitly tell the compiler which variables are mutable</a> though the <code>mut</code> keyword:</p>\n\n<pre><code>let mut v = Vec::new();\nv.push(1);\nv.push(2);\nv.push(3);\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.push\" rel=\"noreferrer\"><code>Vec::push</code></a> is defined to require a mutable reference to the vector (<code>&amp;mut self</code>):</p>\n\n<pre><code>fn push(&amp;mut self, value: T)\n</code></pre>\n\n<p>This uses <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch05-03-method-syntax.html\" rel=\"noreferrer\"><em>method syntax</em></a>, but is conceptually the same as:</p>\n\n<pre><code>fn push(&amp;mut Vec&lt;T&gt;, value: T)\n</code></pre>\n\n<hr>\n\n<p>I <strong>highly recommend</strong> that you read <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch01-00-introduction.html\" rel=\"noreferrer\"><em>The Rust Programming Language</em>, second edition</a>. It covers this beginner question as well as many other beginner questions you will have.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1505669102, "last_edit_date": 1505669102, "creation_date": 1505668559, "answer_id": 46266766, "question_id": 46266400, "link": "https://stackoverflow.com/questions/46266400/how-can-rust-know-if-a-variable-is-mutable/46266766#46266766", "title": "How can Rust know if a variable is mutable?", "body": "<p>In Rust, bindings are immutable by default. So you might think that the following are equivalent:</p>\n\n<pre><code>readonly List&lt;int&gt; list = new List&lt;int&gt;(); // C#\nlet list = Vec::new();                     // Rust\n</code></pre>\n\n<p>And these:</p>\n\n<pre><code>List&lt;int&gt; list = new List&lt;int&gt;(); // C#\nlet mut list = Vec::new();        // Rust\n</code></pre>\n\n<p>But, as you found out, this isn't quite the case.</p>\n\n<p>Inside the <code>Add</code> method in the C# version, there is no information about the binding that you used to invoke it. The <code>Add</code> method isn't able to declare that it mutates its data so there is no way for the C# compiler to prevent you passing a reference to a <code>readonly</code> binding. The <code>readonly</code> keyword prevents you overwriting the <code>list</code> binding with a completely new <code>List</code>, but it doesn't prevent you changing data inside the one you have. C# prevents you from changing the value of a <code>readonly</code> binding, but the value in this case is a pointer to your data, not the data itself.</p>\n\n<p>In Rust, if a method needs to mutate the underlying data, it must declare its first argument to be <code>self</code> or <code>&amp;mut self</code>.</p>\n\n<p>In the case of <code>self</code>, then the data is <em>moved</em> into the method, and you can no longer use the original binding. It doesn't matter if the method changes the data because the caller can't use that binding any more.</p>\n\n<p>In the case of a mutable reference, <code>&amp;mut self</code>, Rust will only let you create it if the original binding is also mutable. If the original binding is immutable then this will produce a compile error. It is impossible to call <code>v.push</code> if <code>v</code> is immutable, because <code>push</code> expects <code>&amp;mut self</code>.</p>\n\n<p>This can be restrictive, so Rust provides tools that let you fine-tune this behaviour to encode exactly the safety guarantees that you need. If you want to get something close to the C# behaviour, you can use a <code>RefCell</code> wrapper (or one of the several other wrapper types). A <code>RefCell&lt;Vec&lt;T&gt;&gt;</code> doesn't itself have to be mutable for functions to be able to unwrap it and modify the <code>Vec</code> inside.</p>\n"}], "owner": {"reputation": 2809, "user_id": 6720987, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/0TSHr.png?s=128&g=1", "display_name": "Jan-Fokke", "link": "https://stackoverflow.com/users/6720987/jan-fokke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 314, "favorite_count": 2, "accepted_answer_id": 46266422, "answer_count": 2, "score": 3, "last_activity_date": 1505669102, "creation_date": 1505666181, "last_edit_date": 1505666465, "question_id": 46266400, "link": "https://stackoverflow.com/questions/46266400/how-can-rust-know-if-a-variable-is-mutable", "title": "How can Rust know if a variable is mutable?", "body": "<p>The following C# code compiles fine:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>static readonly List&lt;int&gt; list = new List&lt;int&gt;();\nstatic void Main(string[] args)\n{\n    list.Add(1);\n    list.Add(2);\n    list.Add(3);\n}\n</code></pre>\n\n<p>If I write similar code in Rust, it won't compile because it cannot borrow immutable <code>v</code> as mutable:</p>\n\n<pre><code>let v = Vec::new();\nv.push(1);\nv.push(2);\nv.push(3);\n</code></pre>\n\n<p>How does the <code>push</code> function know <code>v</code> is immutable?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 67, "user_id": 6622465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0d714c9d78d0589a65dc3ec14870931?s=128&d=identicon&r=PG&f=1", "display_name": "crs", "link": "https://stackoverflow.com/users/6622465/crs"}, "edited": false, "score": 0, "creation_date": 1505618888, "post_id": 46260271, "comment_id": 79484157, "body": "Worked flawlessly, thanks! Looks like I still have a lot of learning to do with Rust."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1505617667, "creation_date": 1505617667, "answer_id": 46260271, "question_id": 46260187, "link": "https://stackoverflow.com/questions/46260187/using-trait-types-with-rust-portaudio-in-non-blocking-mode/46260271#46260271", "title": "Using Trait types with rust-portaudio in non-blocking mode", "body": "<blockquote>\n  <ol>\n  <li>Why was Rust able to allow me to use <code>SineGenerator</code> from <code>main()</code>, but won't let me use <code>Combine</code> which takes the same objects (with, I assume, the same lifetimes)?</li>\n  </ol>\n</blockquote>\n\n<p>A <code>'static</code> bound on a type parameter means that the type may not borrow anything that lives shorter than <code>'static</code>. Your <code>SineGenerator</code> doesn't borrow anything, so it respects that bound. <code>Combine</code>, on the other hand, doesn't respect the bound because it contains borrowed pointers, and you instantiate it with a lifetime that is shorter than <code>'static</code> by storing references to local variables in the <code>Combine</code> object.</p>\n\n<blockquote>\n  <ol start=\"2\">\n  <li>Is there a better way to implement <code>Combine</code> that will allow me to do what I want to do here? I had to take references because Trait types don't have defined size at compile-time.</li>\n  </ol>\n</blockquote>\n\n<p>The typical solution is to use type parameters instead of trait objects.</p>\n\n<pre><code>pub struct Combine&lt;F, S&gt;\nwhere\n    F: Evaluatable,\n    S: Evaluatable,\n{\n    first: F,\n    second: S,\n}\n\nfn main() {\n    let sine_generator1 = SineGenerator::new(44100.0, 200.0, 0.3);\n    let sine_generator2 = SineGenerator::new(44100.0, 250.0, 0.3);\n\n    let combine = Combine::new(sine_generator1, sine_generator2);\n    run(combine).unwrap()\n}\n</code></pre>\n\n<p>By having <code>Combine</code> own the <code>Evaluatable</code>s, it will respect the <code>'static</code> bound (if both <code>F</code> and <code>S</code> are <code>'static</code> themselves).</p>\n"}], "owner": {"reputation": 67, "user_id": 6622465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0d714c9d78d0589a65dc3ec14870931?s=128&d=identicon&r=PG&f=1", "display_name": "crs", "link": "https://stackoverflow.com/users/6622465/crs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 46260271, "answer_count": 1, "score": 4, "last_activity_date": 1505617667, "creation_date": 1505616579, "question_id": 46260187, "link": "https://stackoverflow.com/questions/46260187/using-trait-types-with-rust-portaudio-in-non-blocking-mode", "title": "Using Trait types with rust-portaudio in non-blocking mode", "body": "<p>I'm following the <a href=\"https://github.com/RustAudio/rust-portaudio/blob/master/examples/sine.rs\" rel=\"nofollow noreferrer\">sine example</a> in the rust-portaudio examples directory (which uses the non-blocking API), and I'm trying to get <code>run()</code> working with a Trait type argument instead of calculating the samples within <code>run()</code> itself.</p>\n\n<p>The trait I've defined is pretty simple:</p>\n\n<pre><code>pub trait Evaluatable {\n    fn evaluate(&amp;mut self) -&gt; (f32, f32);\n}\n</code></pre>\n\n<hr>\n\n<p>I changed the <code>run()</code> function signature to the following to accept my trait:</p>\n\n<pre><code>fn run&lt;E: Evaluatable + 'static&gt;(mut generator: E) -&gt; Result&lt;(), pa::Error&gt;\n</code></pre>\n\n<p>and upated the callback function to call <code>evaluate()</code> on the trait type instead of generating samples itself:</p>\n\n<pre><code>let callback = move |pa::OutputStreamCallbackArgs { buffer, frames, .. }| {\n    let mut idx = 0;\n    for _ in 0..frames {\n        let samples = generator.evaluate();\n        buffer[idx]   = samples.0;\n        buffer[idx+1] = samples.1;\n        idx += 2;\n    }\n    pa::Continue\n};\n</code></pre>\n\n<p><code>E</code> has to be <code>'static</code> due to this callback (see <a href=\"https://github.com/RustAudio/rust-portaudio/blob/master/src/lib.rs#L472\" rel=\"nofollow noreferrer\"><code>open_non_blocking_stream()</code></a>), which is the main source of my frustration...</p>\n\n<hr>\n\n<p>In <code>main</code>, I can create an <code>Evaluatable</code> type and pass it in just fine (aside: I'm surprised this works, do objects in <code>main</code> get <code>'static</code> lifetime?):</p>\n\n<pre><code>fn main() {\n    // Implements Evaluatable\n    // arguments are: sample rate, frequency, amplitude\n    let mut sine_generator = SineGenerator::new(44100.0, 200.0, 0.3);\n\n    run(sine_generator).unwrap()\n}\n</code></pre>\n\n<p>But I want to be able to combine signals, so I made a struct that can combine them:</p>\n\n<pre><code>use evaluatable::Evaluatable;\n\npub struct Combine&lt;'a&gt; {\n    first: &amp;'a mut (Evaluatable + 'a),\n    second: &amp;'a mut (Evaluatable + 'a),\n}\n\nimpl&lt;'a&gt; Combine&lt;'a&gt; {\n    pub fn new(first: &amp;'a mut Evaluatable, second: &amp;'a mut Evaluatable) -&gt; Combine&lt;'a&gt; {\n        Combine {first, second}\n    }\n}\n\nimpl&lt;'a&gt; Evaluatable for Combine&lt;'a&gt; {\n    fn evaluate(&amp;mut self) -&gt; (f32, f32) {\n        let first_output = self.first.evaluate();\n        let second_output = self.second.evaluate();\n\n\n        (first_output.0 + second_output.0, first_output.1 + second_output.1)\n    }\n}\n</code></pre>\n\n<p>And tried to use it in <code>main()</code>:</p>\n\n<pre><code>fn main() {\n    let mut sine_generator1 = SineGenerator::new(44100.0, 200.0, 0.3);\n    let mut sine_generator2 = SineGenerator::new(44100.0, 250.0, 0.3);\n\n    let combine = Combine::new(&amp;mut sine_generator1, &amp;mut sine_generator2);\n    run(combine).unwrap()\n}\n</code></pre>\n\n<p>Now, Rust seems to have a problem with the lifetimes not being <code>'static</code>:</p>\n\n<pre><code>Error[E0597]: `sine_generator1` does not live long enough\n  --&gt; src/main.rs:27:37\n   |\n27 |     let combine = Combine::new(&amp;mut sine_generator1, &amp;mut sine_generator2);\n   |                                     ^^^^^^^^^^^^^^^ does not live long enough\n28 |     run(combine).unwrap()\n29 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<hr>\n\n<ol>\n<li>Why was Rust able to allow me to use <code>SineGenerator</code> from <code>main()</code>, but won't let me use <code>Combine</code> which takes the same objects (with, I assume, the same lifetimes)?</li>\n<li>Is there a better way to implement <code>Combine</code> that will allow me to do what I want to do here? I had to take references because Trait types don't have defined size at compile-time.</li>\n</ol>\n"}, {"tags": ["javascript", "rust", "webassembly"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1521987003, "last_edit_date": 1521987003, "creation_date": 1505671403, "answer_id": 46267245, "question_id": 46258900, "link": "https://stackoverflow.com/questions/46258900/linkerror-when-trying-hello-world-in-rust-with-webassembly/46267245#46267245", "title": "LinkError when trying Hello World in Rust with WebAssembly", "body": "<h2>Summary</h2>\n\n<p>You have to define a bunch of functions and values which are imported by the WASM module. When the WASM module imports something you don't properly define, you get this linker error. Emscripten generates a whole bunch of JS-code which defines all imports the WASM module needs (which is \"easy\" in this case, because Emscripten also generates the WASM module itself).</p>\n\n<p>Right now, you either use the Emscripten runtime (the JS file) or you have to do a lot of stuff yourself.</p>\n\n<p>I'll try to explain in more detail, please bear with me:</p>\n\n<hr>\n\n<h2>Assembly and WASM</h2>\n\n<p><em>Assembly</em> is the human-readable form of <em>machine code</em> (but both terms are often used interchangeably, so we won't care in this post either and just call it <em>assembly</em>). Assembly is designed for the machine/the CPU to execute and therefore it's very simple. Assembly is basically a list of instructions where each instruction does a specific, tiny thing. For example, there is an instruction to add two numbers, to execute instructions at a different address, and so on.</p>\n\n<p>Notably missing is a <code>print</code> instruction. Something of the functionality of <code>print</code> is a completely different abstraction level and does a lot more than a single instruction. Additionally, what do we mean by \"printing\"? We expect the our program has access to some kind of console. To repeat the important part: <strong>WASM doesn't have a <code>print</code> instruction or anything similar!</strong></p>\n\n<p>Things like printing need to be provided by an <em>environment</em>. For most programs and for the majority of computer science, this environment is simply the <em>operating system</em>. It manages the \"console\" and it let's you print. The immediate environment of your WASM program is, however, the browser! So the browser has to offer you a way to print. </p>\n\n<h2>Linking</h2>\n\n<p><em>Linking</em> is the process of connecting (\"resolving\") imports and exports from different modules/compilation units with one another. For example, linking is necessary when you use <code>extern crate</code>s in Rust and when you compile multiple <code>.cpp</code> files in C++.</p>\n\n<p>It's also necessary when you instantiate a WASM module, because the module might have imports. And these imports need to be resolved before we can execute the module. </p>\n\n<p>So does your module have imports? Let's have a look! You can use the tool <code>wasm-dis</code> (disassembler) to turn the binary <code>wasm</code> code into a more or less readable assembly code: <code>$ wasm-dis hello.wasm &gt; hello.wast</code>. Looking at this file, we can see the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(import \"env\" \"DYNAMICTOP_PTR\" (global $import$0 i32))\n(import \"env\" \"STACKTOP\" (global $import$1 i32))\n(import \"env\" \"STACK_MAX\" (global $import$2 i32))\n(import \"env\" \"abort\" (func $import$3 (param i32)))\n...\n(58 more)\n</code></pre>\n\n<p>Even without knowing how to read this <code>wast</code> format, we can make a reasonable guess and assume that your module does indeed import stuff. We should have known, since the we want to print and there is no <code>print</code> instruction!</p>\n\n<p>(<em>You might be wondering why there isn't a <code>(import \"env\" \"print\" ...)</code>. I can't fully explain this, but the reason is basically: it's more complex than that. Emscripten only uses a small set of important imports and uses those imports to access other functions from the environment.</em>) </p>\n\n<h3>Linking with WASM (and Emscripten)</h3>\n\n<p>Linking in WASM is done by the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate\" rel=\"nofollow noreferrer\"><code>WebAssembly.instantiate()</code> method</a>. As you can see in the linked documentation, this method takes an <code>importObject</code>. Failing to define a function/value in this object, one for each import of the WASM module, results in a <code>WebAssembly.LinkError</code>. Makes sense.</p>\n\n<p>If you want to instantiate the WASM module defined by your file <code>hello.wasm</code>, you have to define all 62 of those imports. This seems really annoying, right? Indeed, you aren't really expected to do that: that's why Emscripten generated the necessary JS-code for you! <strong>WASM modules generated by Emscripten are supposed to be loaded with the Emscripten-generated JS-loader!</strong></p>\n\n<h3>Printing in a normal program?</h3>\n\n<p>It's worth taking a look at how programs running in a native environment (the operating system) do printing. They surely also need to be linked with the environment (i.e. the operating system), right? Not really. </p>\n\n<p>While programming languages like Rust, C and C++ do have a standard library which is used for printing, this standard library is not part of the operating system. It just uses the operating system itself. In the end, in order to print, a syscall is used. Syscalls use CPU interrupts to call a function of the operating system. This has some advantages (e.g. you don't need to link your program with the operating system), but also some important disadvantages (e.g. it's not very fast).</p>\n\n<p>AFAIK, these kinds of syscalls are not possible with WASM (at least as of now).</p>\n\n<h2>Not using Emscripten</h2>\n\n<p>Compiling to WASM requires two major things:</p>\n\n<ol>\n<li>WASM code generation: your compiler has to spit out WASM code</li>\n<li>Linking: since it's usually more than one crate, we need to link (as discussed above)</li>\n</ol>\n\n<p>Emscripten does both\u00b9 and can match code generation with linking since both parts are done by Emscripten. Are there alternatives?</p>\n\n<p>Yes! What you are looking for is the <code>wasm32-unknown-unknown</code> target of Rust. This target uses LLVM's WASM backend to do the code generation. With this target you can generate small WASM modules completely without Emscripten. And what's more: you can also write the JS-loader yourself since <em>you</em> decide about your imports and nothing is magically added. </p>\n\n<p>To learn more about this exciting topic, I'd recommend you to visit <a href=\"https://www.hellorust.com/\" rel=\"nofollow noreferrer\">hellorust.com</a>. On that website you can find simple examples and instructions on how to setup your build environment.</p>\n\n<hr>\n\n<p>\u00b9 Emscripten doesn't generate WASM directly. It generates asm.js code which is then converted into WASM.</p>\n"}], "owner": {"reputation": 85, "user_id": 8507868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc5663b825dd5e85c39b4e45ba3040b7?s=128&d=identicon&r=PG&f=1", "display_name": "The chef", "link": "https://stackoverflow.com/users/8507868/the-chef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 836, "favorite_count": 0, "accepted_answer_id": 46267245, "answer_count": 1, "score": 4, "last_activity_date": 1521987003, "creation_date": 1505600027, "last_edit_date": 1505671573, "question_id": 46258900, "link": "https://stackoverflow.com/questions/46258900/linkerror-when-trying-hello-world-in-rust-with-webassembly", "title": "LinkError when trying Hello World in Rust with WebAssembly", "body": "<p>I'm trying to run a hello world program made in Rust with WebAssembly, but I'm getting an error message when I try to load the program. </p>\n\n<p>I was able to get it running when following some tutorials that I found, the problem is that they use Emscripten to create JavaScript and HTML for loading the code, but this JavaScript and HTML includes tons and tons of boilerplate and other stuff. I got kinda lost and instead wanted to try to get a really simple example that I'm loading myself.</p>\n\n<p>I ran the following to compile hello.wasm</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>echo 'fn main() { println!(\"Hello, Emscripten!\"); }' &gt; hello.rs\nrustc --target=wasm32-unknown-emscripten hello.rs\n</code></pre>\n\n<p>To load hello.wasm, I took the example from the Mozilla WebAssembly docs and tried to run that.</p>\n\n<pre><code>var importObject = {\n  imports: {\n    imported_func: function(arg) {\n      console.log(arg);\n    }\n  }\n};\n\nfetch('hello.wasm').then(response =&gt;\n  response.arrayBuffer()\n).then(bytes =&gt;\n  WebAssembly.instantiate(bytes, importObject)\n).then(results =&gt; {\n  // Do something with the compiled results!\n});\n</code></pre>\n\n<p><code>WebAssembly.instantiate</code> crashes:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>LinkError: Import #0 module=\"env\" error: module is not an object or function\n</code></pre>\n\n<p>I found something about this error having to do with something missing, that the boilerplate code is supposed to load, but looking through the autogenerated HTML and JavaScript I couldn't figure out exactly what it could be.</p>\n"}, {"tags": ["rust", "unsafe", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505591555, "post_id": 46257713, "comment_id": 79479226, "body": "You could always just help <a href=\"https://github.com/rust-num/num/pull/330\" rel=\"nofollow noreferrer\">fix the underlying code to allow what you want without using any unsafe code</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505591741, "post_id": 46257713, "comment_id": 79479286, "body": "<i>I want to modify one of its interior values</i> \u2014 That already has a name in Rust, called <a href=\"https://doc.rust-lang.org/std/cell/index.html\" rel=\"nofollow noreferrer\">interior mutability</a>, but that&#39;s not what you want. You want to move out of a reference, which leaves the structure in an invalid state, causing problems on panic unwinding."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 4, "creation_date": 1505591901, "post_id": 46257713, "comment_id": 79479332, "body": "You can just pass value by reference: <code>container.contained = &amp;container.contained * 2_usize;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1505592047, "post_id": 46257713, "comment_id": 79479379, "body": "<a href=\"https://play.rust-lang.org/?gist=fcd37126aed717628035d07b8ef43d6f&amp;version=stable\" rel=\"nofollow noreferrer\">Applying the duplicate&#39;s solution to your problem</a>."}, {"owner": {"reputation": 749, "user_id": 504550, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/01c50fcd072b3dabca5184fd6c84718b?s=128&d=identicon&r=PG", "display_name": "coriolinus", "link": "https://stackoverflow.com/users/504550/coriolinus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505593567, "post_id": 46257713, "comment_id": 79479814, "body": "@Shepmaster thanks! I see how that works; it&#39;s what I wanted."}, {"owner": {"reputation": 749, "user_id": 504550, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/01c50fcd072b3dabca5184fd6c84718b?s=128&d=identicon&r=PG", "display_name": "coriolinus", "link": "https://stackoverflow.com/users/504550/coriolinus"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1505594109, "post_id": 46257713, "comment_id": 79479955, "body": "@red75prime Huh. I see that your method works, but I don&#39;t understand why that works. Is there some property or trait of <code>BigUint</code> which makes this possible? Normally I wouldn&#39;t expect multiplying a reference by a value to work at all."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1505594132, "post_id": 46257713, "comment_id": 79479960, "body": "@coriolinus to be clear, the duplicate answers your <b>question</b>, but <a href=\"https://stackoverflow.com/questions/46257713/is-there-some-unsafe-way-to-take-ownership-of-a-contained-value-in-order-to-muta?noredirect=1#comment79479332_46257713\">red75prime&#39;s comment</a> <b>solves your problem</b> and is what you should use here. It works because there <a href=\"https://docs.rs/num-bigint/0.1.40/num_bigint/struct.BigUint.html\" rel=\"nofollow noreferrer\">are implementations for references</a>: <code>impl&lt;&#39;a&gt; Mul&lt;&amp;&#39;a BigUint&gt; for BigUint</code>. That&#39;s why the traits take values to start with \u2014 a reference is a type of value."}, {"owner": {"reputation": 749, "user_id": 504550, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/01c50fcd072b3dabca5184fd6c84718b?s=128&d=identicon&r=PG", "display_name": "coriolinus", "link": "https://stackoverflow.com/users/504550/coriolinus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505644898, "post_id": 46257713, "comment_id": 79489328, "body": "@Shepmaster I&#39;d like to add an answer here outlining the three techniques we&#39;ve discussed, but I can&#39;t with it closed. Can you open it back up for me to do that?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505655259, "post_id": 46257713, "comment_id": 79492079, "body": "red75prime&#39;s comment isn&#39;t an answer for <i>this</i> question which has a very broad topic (<i>Is there some unsafe way to take ownership of a contained value in order to mutate it</i>), but it would be an appropriate answer for a different question that was specifically about <code>BigUint</code>. You could ask a new question specifically dedicated to that problem."}], "owner": {"reputation": 749, "user_id": 504550, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/01c50fcd072b3dabca5184fd6c84718b?s=128&d=identicon&r=PG", "display_name": "coriolinus", "link": "https://stackoverflow.com/users/504550/coriolinus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "closed_date": 1505591794, "answer_count": 0, "score": 2, "last_activity_date": 1545669751, "creation_date": 1505590289, "last_edit_date": 1505592402, "question_id": 46257713, "link": "https://stackoverflow.com/questions/46257713/is-there-some-unsafe-way-to-take-ownership-of-a-contained-value-in-order-to-muta", "closed_reason": "Duplicate", "title": "Is there some unsafe way to take ownership of a contained value in order to mutate it?", "body": "<p>I have a mutable reference to a container, and I want to modify one of its interior values:</p>\n\n<pre><code>struct BigContainer {\n    contained: BigUint,\n}\n\nfn double(container: &amp;mut BigContainer) {\n    container.contained = container.contained * 2_usize;\n}\n</code></pre>\n\n<p><code>BigUint</code> doesn't implement <code>MulAssign</code>, so we can't just use the <code>*=</code> operator. Consequently, the code as written fails, because <code>Mul</code> takes ownership of the value; we need to temporarily move out of borrowed content. (<a href=\"https://play.rust-lang.org/?gist=ff14f96b635557837ba3a68473318b7c&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>We can get around that by initializing a temporary value, and using <code>std::mem::replace</code>: (<a href=\"https://play.rust-lang.org/?gist=e0d277189ea554ce5395b0d6f2cda9bc&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre><code>fn double(container: &amp;mut BigContainer) {\n    let prev_value = mem::replace(&amp;mut container.contained, 0_usize.into());\n    container.contained = prev_value * 2_usize;\n}\n</code></pre>\n\n<p>This works, but it's a bit ugly, and we need to create that pointless filler value to temporarily hold the position open for us. What I <em>want</em> is some unsafe method which lets me just override the borrow checker. Unfortunately, the following does not work: (<a href=\"https://play.rust-lang.org/?gist=431ca67d523e0b087b530a3526ca45c1&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre><code>fn double(container: &amp;mut BigContainer) {\n    unsafe {\n        container.contained = container.contained * 2_usize;\n    }\n}\n</code></pre>\n\n<p>The <code>unsafe</code> block does nothing for us in this case. Is there any way to accomplish this, safe or not, which eliminates the temporary value allocation? If not, is the compiler at least smart enough to skip it? </p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505576913, "post_id": 46255634, "comment_id": 79474878, "body": "What&#39;s your <b>question</b>? You&#39;ve just pasted code and an error message."}, {"owner": {"reputation": 6004, "user_id": 6471538, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rX1ss.png?s=128&g=1", "display_name": "Robert Columbia", "link": "https://stackoverflow.com/users/6471538/robert-columbia"}, "edited": false, "score": 3, "creation_date": 1505576988, "post_id": 46255634, "comment_id": 79474908, "body": "Cannot infer question for &quot;U&quot;."}, {"owner": {"reputation": 3215, "user_id": 855474, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/8JCP8.png?s=128&g=1", "display_name": "BalaB", "link": "https://stackoverflow.com/users/855474/balab"}, "edited": false, "score": 1, "creation_date": 1505576989, "post_id": 46255634, "comment_id": 79474909, "body": "Question is simple : How can I solve the compilation issue ?   yes robert is correct."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505577029, "post_id": 46255634, "comment_id": 79474926, "body": "By providing a type for <code>U</code>."}, {"owner": {"reputation": 766, "user_id": 1660116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/023e6e2fb13bd8e3d1128eb0d704b613?s=128&d=identicon&r=PG", "display_name": "Victor Savu", "link": "https://stackoverflow.com/users/1660116/victor-savu"}, "edited": false, "score": 4, "creation_date": 1508589602, "post_id": 46255634, "comment_id": 80674040, "body": "I think the OP is right to be confused, since there is no <code>U</code> in the client code and not <code>U</code> even in the error message. So how could one start searching for what <code>U</code> needs to be specified? I think this is a valid question."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 13, "last_activity_date": 1568126938, "last_edit_date": 1568126938, "creation_date": 1505577832, "answer_id": 46255820, "question_id": 46255634, "link": "https://stackoverflow.com/questions/46255634/cannot-infer-type-for-u/46255820#46255820", "title": "Cannot infer type for `U`", "body": "<p>I strongly recommend that you go back and re-read <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a>, specifically the <a href=\"https://doc.rust-lang.org/stable/book/ch10-00-generics.html\" rel=\"noreferrer\">chapter on generics</a>.</p>\n\n<hr>\n\n<p><a href=\"https://docs.rs/diesel/0.16.0/diesel/prelude/trait.LoadDsl.html#method.get_result\" rel=\"noreferrer\"><code>LoadDsl::get_result</code></a> is defined as:</p>\n\n<pre><code>fn get_result&lt;U&gt;(self, conn: &amp;Conn) -&gt; QueryResult&lt;U&gt; \nwhere\n    Self: LoadQuery&lt;Conn, U&gt;, \n</code></pre>\n\n<p>In words, that means that the result of calling <code>get_result</code> will be a <code>QueryResult</code> parameterized by a type of the <em>callers</em> choice; the generic parameter <code>U</code>. </p>\n\n<p>Your call of <code>get_result</code> in no way specifies the concrete type of <code>U</code>. In many cases, type inference is used to know what the type should be, but you are just printing the value. This means it could be <em>any</em> type that implements the trait and is printable, which isn't enough to conclusively decide.</p>\n\n<p>You can use the <em>turbofish</em> operator:</p>\n\n<pre><code>foo.get_result::&lt;SomeType&gt;(conn)\n//            ^^^^^^^^^^^^ \n</code></pre>\n\n<p>Or you can save the result to a variable with a specified type:</p>\n\n<pre><code>let bar: QueryResult&lt;SomeType&gt; = foo.get_result(conn);\n</code></pre>\n\n<hr>\n\n<p>If you review the <a href=\"http://diesel.rs/guides/getting-started/\" rel=\"noreferrer\">Diesel tutorial</a>, you will see a function like this (which I've edited to remove non-relevant detail):</p>\n\n<pre><code>pub fn create_post() -&gt; Post {\n    diesel::insert(&amp;new_post).into(posts::table)\n        .get_result(conn)\n        .expect(\"Error saving new post\")\n}\n</code></pre>\n\n<p>Here, type inference kicks in because <code>expect</code> removes the <code>QueryResult</code> wrapper and the return value of the function must be a <code>Post</code>. Working backwards, the compiler knows that <code>U</code> must equal <code>Post</code>.</p>\n\n<p>If you check out the <a href=\"https://docs.rs/diesel/0.16.0/diesel/fn.insert.html\" rel=\"noreferrer\">documentation for <code>insert</code></a> you can see that you can call <code>execute</code> if you don't care to get the inserted value back:</p>\n\n<pre><code>diesel::insert(&amp;new_user)\n    .into(users)\n    .execute(&amp;connection)\n    .unwrap();\n</code></pre>\n"}], "owner": {"reputation": 3215, "user_id": 855474, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/8JCP8.png?s=128&g=1", "display_name": "BalaB", "link": "https://stackoverflow.com/users/855474/balab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7512, "favorite_count": 2, "accepted_answer_id": 46255820, "answer_count": 1, "score": 7, "last_activity_date": 1568126938, "creation_date": 1505576721, "last_edit_date": 1505576844, "question_id": 46255634, "link": "https://stackoverflow.com/questions/46255634/cannot-infer-type-for-u", "title": "Cannot infer type for `U`", "body": "<p>I am using Rust and Diesel:</p>\n\n<pre><code>fn create_asset_from_object(assets: &amp;HashMap&lt;String, Assets_Json&gt;) {\n    let connection: PgConnection  = establish_connection();\n    println!(\"==========================================================\");\n    insert_Asset(&amp;connection, &amp;assets);\n}\n\npub fn insert_Asset(conn: &amp;PgConnection, assests: &amp;HashMap&lt;String, Assets_Json&gt;){\n    use self::schema::assets;\n\n    for (currency, assetInfo) in assests {\n\n        let new_asset = self::models::NewAssets {\n            asset_name: &amp;currency,\n            aclass:  &amp;assetInfo.aclass,\n            altname: &amp;assetInfo.altname,\n            decimals:  assetInfo.decimals,\n            display_decimals: assetInfo.display_decimals,\n        };\n\n       //let result = diesel::insert(&amp;new_asset).into(assets::table).get_result(conn).expect(\"Error saving new post\");\n       println!(\"result, {:#?}\", diesel::insert(&amp;new_asset).into(assets::table).get_result(conn).expect(\"Error saving new post\"));\n\n    }\n}\n</code></pre>\n\n<p><strong>Compiler error:</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n   --&gt; src/persistence_service.rs:107:81\n    |\n107 |        println!(\"result, {:#?}\", diesel::insert(&amp;new_asset).into(assets::table).get_result(conn).expect(\"Error saving new post\"));\n    |                                                                                 ^^^^^^^^^^ cannot infer type for `U`\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505568348, "post_id": 46253306, "comment_id": 79472226, "body": "I never saw an answer to <a href=\"https://stackoverflow.com/questions/46194930/lifetime-problems-with-struct-containing-function-reference#comment79358569_46194930\">my comment on your original question</a> about why you want this to be a reference to a closure anyway."}, {"owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505569324, "post_id": 46253306, "comment_id": 79472506, "body": "@shepmaster: Is there another way to do this? What I want to do is take a datagram based socket, and wrap it in a new type that will allow me to send and receive abstract datagrams (There is no 1-1 correspondence between those and the underlying datagrams). Therefore I take a reference to the <code>recv_dgram</code> function."}], "answers": [{"comments": [{"owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 0, "creation_date": 1505570290, "post_id": 46254581, "comment_id": 79472773, "body": "Is there a difference between your first definition of <code>FragMsgReceiver</code> and the second one (Where you use <code>R</code> in the where clause)?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 0, "creation_date": 1505570573, "post_id": 46254581, "comment_id": 79472847, "body": "@real yes \u2014 it&#39;s no longer a reference to a trait object (note missing <code>&amp;&#39;a</code>) but instead is a generic type that will be monomorphized."}, {"owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 0, "creation_date": 1505571207, "post_id": 46254581, "comment_id": 79473060, "body": "I didn&#39;t know this was possible. So now the size of FragMsgReceiver&lt;R&gt; depends on the size of the closure? Is the whole closure stored inside FragMsgReceiver?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 0, "creation_date": 1505573183, "post_id": 46254581, "comment_id": 79473633, "body": "@real <i>the size of <code>FragMsgReceiver&lt;R&gt;</code> depends on the size of the closure</i> \u2014 yes, which <a href=\"https://gist.github.com/ac3265f7f24c7b270993fcb80d80aa76\" rel=\"nofollow noreferrer\">would be zero in this case</a>. <i>the whole closure stored inside <code>FragMsgReceiver</code></i> \u2014 yes, <code>FragMsgReceiver</code>  owns the closure."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 0, "creation_date": 1505573236, "post_id": 46254581, "comment_id": 79473660, "body": "@real If I may ask, what route of learning had you learn about references to trait objects <i>before</i> learning about generics?"}, {"owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 0, "creation_date": 1505621873, "post_id": 46254581, "comment_id": 79484627, "body": "I read the Rust book from from beginning to end, and then Rust by Example. I have the background of Assembly and C programming. In C you can only store a pointer to a function, you can&#39;t store the function itself inside a structure. It is very strange for me that the resulting structure is of size 0. Can you recommend anything else to read about this?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "edited": false, "score": 0, "creation_date": 1505655745, "post_id": 46254581, "comment_id": 79492180, "body": "To reiterate, <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch13-01-closures.html\" rel=\"nofollow noreferrer\">a closure is not a function</a>; C doesn&#39;t have closures (C++ does now though). In Rust, you can also store a function pointer, but that&#39;s not what is happening here. The compiler conceptually makes a copy of all the code that has a generic parameter and  &quot;inlines&quot; the concrete type. Since the closure doesn&#39;t capture anything, the struct doesn&#39;t have anything useful to store at runtime, so it&#39;s emptied out."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1505569628, "creation_date": 1505569628, "answer_id": 46254581, "question_id": 46253306, "link": "https://stackoverflow.com/questions/46253306/cannot-infer-a-lifetime-for-a-closure-returning-a-boxed-trait-that-contains-a-re/46254581#46254581", "title": "Cannot infer a lifetime for a closure returning a boxed trait that contains a reference", "body": "<p>It appears that you've missed a key takeaway of your previous questions and their duplicates:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41849854/155423\">Lifetime annotation for closure argument</a></li>\n<li><a href=\"https://stackoverflow.com/q/46194930/155423\">Cannot infer a lifetime for a struct containing a reference to a closure</a></li>\n<li><a href=\"https://stackoverflow.com/q/31403723/155423\">How to declare a lifetime for a closure argument</a></li>\n</ul>\n\n<p>By declaring a type on the closure argument, you <em>stop performing type inference</em> for the arguments. This causes a new implicit lifetime to be generated by the closure, one which does not match your requirements. Just don't declare the type at all.</p>\n\n<p>Next, you need to state that your closure is going to take a reference to some bytes and return a boxed trait object that will return some bytes of the same lifetime and contains a reference of that same lifetime:</p>\n\n<pre><code>struct FragMsgReceiver&lt;'a&gt; {\n    recv_dgram: &amp;'a for&lt;'b&gt; FnMut(&amp;'b mut [u8])\n        -&gt; Box&lt;MockFutureTrait&lt;Item = &amp;'b mut [u8]&gt; + 'b&gt;,\n}\n</code></pre>\n\n<p>See <a href=\"https://stackoverflow.com/q/42028470/155423\">Why is Box&lt;Iterator&lt;Item = &amp;Foo&gt; + &#39;a&gt; needed?</a> for more details about the <code>+ 'a</code> syntax.</p>\n\n<p>Then update <code>constrain_handler</code> to match:</p>\n\n<pre><code>struct FragMsgReceiver&lt;'a&gt; {\n    recv_dgram: &amp;'a for&lt;'b&gt; FnMut(&amp;'b mut [u8])\n        -&gt; Box&lt;MockFutureTrait&lt;Item = &amp;'b mut [u8]&gt; + 'b&gt;,\n}\n\nfn constrain_handler&lt;F&gt;(f: F) -&gt; F\nwhere\n    F: for&lt;'b&gt; FnMut(&amp;'b mut [u8])\n        -&gt; Box&lt;MockFutureTrait&lt;Item = &amp;'b mut [u8]&gt; + 'b&gt;,\n{\n    f\n}\n\nfn main() {\n    let mut recv_dgram = constrain_handler(|buf| Box::new(MockFuture { item: buf }));\n\n    let fmr = FragMsgReceiver {\n        recv_dgram: &amp;mut recv_dgram,\n    };\n}\n</code></pre>\n\n<hr>\n\n<p>The whole thing can be made simpler if you just take a generic closure directly:</p>\n\n<pre><code>struct FragMsgReceiver&lt;R&gt;\nwhere\n    R: for&lt;'b&gt; FnMut(&amp;'b mut [u8])\n        -&gt; Box&lt;MockFutureTrait&lt;Item = &amp;'b mut [u8]&gt; + 'b&gt;,\n{\n    recv_dgram: R,\n}\n\nfn main() {\n    let fmr = FragMsgReceiver {\n        recv_dgram: |buf| Box::new(MockFuture { item: buf }),\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 0, "accepted_answer_id": 46254581, "answer_count": 1, "score": 0, "last_activity_date": 1505655438, "creation_date": 1505560692, "last_edit_date": 1505655438, "question_id": 46253306, "link": "https://stackoverflow.com/questions/46253306/cannot-infer-a-lifetime-for-a-closure-returning-a-boxed-trait-that-contains-a-re", "title": "Cannot infer a lifetime for a closure returning a boxed trait that contains a reference", "body": "<p>I am trying to compile the following code (<a href=\"https://play.rust-lang.org/?gist=cbc2ef609a15c808fdf37ff2006f5fe5&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>trait MockFutureTrait {\n    type Item;\n}\n\nstruct MockFuture&lt;T&gt; {\n    item: T,\n}\n\nimpl&lt;T&gt; MockFutureTrait for MockFuture&lt;T&gt; {\n    type Item = T;\n}\n\nstruct FragMsgReceiver&lt;'a, 'c: 'a&gt; {\n    recv_dgram: &amp;'a FnMut(&amp;mut [u8])\n        -&gt; Box&lt;MockFutureTrait&lt;Item = &amp;mut [u8]&gt; + 'c&gt;,\n}\n\nfn constrain_handler&lt;F&gt;(f: F) -&gt; F\nwhere\n    F: FnMut(&amp;mut [u8]) -&gt; Box&lt;MockFutureTrait&lt;Item = &amp;mut [u8]&gt;&gt;,\n{\n    f\n}\n\n\nfn main() {\n    let mut recv_dgram = constrain_handler(|buf: &amp;mut [u8]| {\n        Box::new(MockFuture { item: buf }) as Box&lt;MockFutureTrait&lt;Item = &amp;mut [u8]&gt;&gt;\n    });\n\n    let ref_recv_dgram = &amp;mut recv_dgram;\n    let fmr = FragMsgReceiver {\n        recv_dgram: ref_recv_dgram,\n    };\n}\n</code></pre>\n\n<p>And I get the compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:28:37\n   |\n28 |         Box::new(MockFuture { item: buf }) as Box&lt;MockFutureTrait&lt;Item = &amp;mut [u8]&gt;&gt;\n   |                                     ^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 27:44...\n  --&gt; src/main.rs:27:44\n   |\n27 |       let mut recv_dgram = constrain_handler(|buf: &amp;mut [u8]| {\n   |  ____________________________________________^\n28 | |         Box::new(MockFuture { item: buf }) as Box&lt;MockFutureTrait&lt;Item = &amp;mut [u8]&gt;&gt;\n29 | |     });\n   | |_____^\nnote: ...so that expression is assignable (expected &amp;mut [u8], found &amp;mut [u8])\n  --&gt; src/main.rs:28:37\n   |\n28 |         Box::new(MockFuture { item: buf }) as Box&lt;MockFutureTrait&lt;Item = &amp;mut [u8]&gt;&gt;\n   |                                     ^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that expression is assignable (expected std::boxed::Box&lt;MockFutureTrait&lt;Item=&amp;mut [u8]&gt; + 'static&gt;, found std::boxed::Box&lt;MockFutureTrait&lt;Item=&amp;mut [u8]&gt;&gt;)\n  --&gt; src/main.rs:28:9\n   |\n28 |         Box::new(MockFuture { item: buf }) as Box&lt;MockFutureTrait&lt;Item = &amp;mut [u8]&gt;&gt;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I tried to add various lifetime hints, but I couldn't get this code to compile.</p>\n\n<p>My previous related questions on SO about this:</p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/questions/46194930\">Cannot infer a lifetime for a struct containing a reference to a closure</a>: Solving the same problem, when the return value is a simple struct and not a trait.</p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/46202681\">How can multiple struct fields be generics that use the same higher-kinded lifetime?</a>: About trying to solve this problem without Boxes. The answer suggests that for now I will have to use Box>.</p></li>\n</ul>\n\n<p>Note that I am using the helper function <code>constrain_handler</code> according to a suggestion I got in question 2; it allows me to overcome a different compilation error.</p>\n"}, {"tags": ["parsing", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505501138, "post_id": 46245672, "comment_id": 79455708, "body": "TL;DR linked duplicate: <code>fn until(&amp;mut self, stop: u8) -&gt; Result&lt;&amp;[u8], ParseError&gt;</code> --&gt; <code>fn until&lt;&#39;a&gt;(&amp;&#39;a mut self, stop: u8) -&gt; Result&lt;&amp;&#39;a [u8], ParseError&gt;</code>, not <code>fn until(&amp;mut self, stop: u8) -&gt; Result&lt;&amp;&#39;src [u8], ParseError&gt;</code>, which is what you want."}, {"owner": {"reputation": 197, "user_id": 6573388, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-L0xo75Zs0t0/AAAAAAAAAAI/AAAAAAAAAPg/kY31JcfEbg8/photo.jpg?sz=128", "display_name": "Tom&#225;\u0161 Kr&#225;l", "link": "https://stackoverflow.com/users/6573388/tom%c3%a1%c5%a1-kr%c3%a1l"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505502388, "post_id": 46245672, "comment_id": 79456293, "body": "Here is the full source code: <a href=\"https://pastebin.com/7b88frPq\" rel=\"nofollow noreferrer\">pastebin.com/7b88frPq</a>. Thank you for the quick response. The duplicate question indeed asnwers this one. I asked this one because I thought the problem was actually in the uri function."}], "owner": {"reputation": 197, "user_id": 6573388, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-L0xo75Zs0t0/AAAAAAAAAAI/AAAAAAAAAPg/kY31JcfEbg8/photo.jpg?sz=128", "display_name": "Tom&#225;\u0161 Kr&#225;l", "link": "https://stackoverflow.com/users/6573388/tom%c3%a1%c5%a1-kr%c3%a1l"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 339, "favorite_count": 0, "closed_date": 1505501086, "answer_count": 0, "score": 1, "last_activity_date": 1505502782, "creation_date": 1505500669, "last_edit_date": 1505502782, "question_id": 46245672, "link": "https://stackoverflow.com/questions/46245672/cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conflicting-requirements", "closed_reason": "Duplicate", "title": "Cannot infer an appropriate lifetime for autoref due to conflicting requirements", "body": "<p>I'm writing a HTTP parser in Rust. All the input is ASCII, so I just use <code>&amp;[u8]</code> for iterating over the bytes.</p>\n\n<pre><code>#[derive(Debug)]\npub enum ParseError {\n    Method,\n    OutOfBound,\n}\n\nstruct Bytes&lt;'src&gt; {\n    source: &amp;'src [u8],\n    i: usize, //current position in the source\n}\n\nimpl&lt;'src&gt; Bytes&lt;'src&gt; {\n    fn next(&amp;mut self) -&gt; Option&lt;u8&gt; {\n        if self.source.len() &gt; self.i + 1 {\n            self.i += 1;\n            Some(self.source[self.i - 1])\n        } else {\n            None\n        }\n    }\n\n    fn until(&amp;mut self, stop: u8) -&gt; Result&lt;&amp;[u8], ParseError&gt; {\n        let start = self.i;\n        while let Some(ch) = self.next() {\n            if ch == stop {\n                return Ok(&amp;self.source[start..self.i - 1]);\n            }\n        }\n\n        Err(ParseError::OutOfBound)\n    }\n}\n</code></pre>\n\n<p>This function:</p>\n\n<pre><code>use std::str;\n\nfn uri&lt;'str&gt;(bytes: &amp;mut Bytes&lt;'str&gt;) -&gt; Result&lt;&amp;'str str, ParseError&gt; {\n    let until = try!(bytes.until(b' '));\n    unsafe { Ok(str::from_utf8_unchecked(until)) }\n}\n</code></pre>\n\n<p>Produces an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/main.rs:37:28\n   |\n37 |     let until = try!(bytes.until(b' '));\n   |                            ^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the function body at 36:1...\n  --&gt; src/main.rs:36:1\n   |\n36 | / fn uri&lt;'str&gt;(bytes: &amp;mut Bytes&lt;'str&gt;) -&gt; Result&lt;&amp;'str str, ParseError&gt; {\n37 | |     let until = try!(bytes.until(b' '));\n38 | |     unsafe { Ok(str::from_utf8_unchecked(until)) }\n39 | | }\n   | |_^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:37:22\n   |\n37 |     let until = try!(bytes.until(b' '));\n   |                      ^^^^^\nnote: but, the lifetime must be valid for the lifetime 'str as defined on the function body at 36:1...\n  --&gt; src/main.rs:36:1\n   |\n36 | / fn uri&lt;'str&gt;(bytes: &amp;mut Bytes&lt;'str&gt;) -&gt; Result&lt;&amp;'str str, ParseError&gt; {\n37 | |     let until = try!(bytes.until(b' '));\n38 | |     unsafe { Ok(str::from_utf8_unchecked(until)) }\n39 | | }\n   | |_^\nnote: ...so that expression is assignable (expected std::result::Result&lt;&amp;'str str, _&gt;, found std::result::Result&lt;&amp;str, _&gt;)\n  --&gt; src/main.rs:38:14\n   |\n38 |     unsafe { Ok(str::from_utf8_unchecked(until)) }\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>That is strange since 'until' refers to one of the function arguments so that shouldn't be a problem here I think.</p>\n\n<p>What's more strange is that when I index bytes directly, it compiles.</p>\n\n<pre><code>fn uri&lt;'str&gt;(bytes: &amp;mut Bytes&lt;'str&gt;) -&gt; Result&lt;&amp;'str str, ParseError&gt; {\n    unsafe { Ok(str::from_utf8_unchecked(&amp;bytes.source[20..30])) }\n}\n</code></pre>\n\n<p>Why is that?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": false, "score": 4, "last_activity_date": 1505498784, "last_edit_date": 1505498784, "creation_date": 1505498568, "answer_id": 46245303, "question_id": 46245174, "link": "https://stackoverflow.com/questions/46245174/t-into-works-but-fromfromt-does-not/46245303#46245303", "title": "`T.into()` works but `From::from(T)` does not", "body": "<p>One solution would be to write your generics in terms of <code>From</code>:</p>\n\n<pre><code>fn convert&lt;T&gt;(input: T) -&gt; Result&lt;(), Box&lt;Error&gt;&gt;\nwhere\n    Box&lt;Error&gt;: From&lt;T&gt;,\n{\n    Err(input)?\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1505502633, "post_id": 46245307, "comment_id": 79456402, "body": "The converse, however, is true: if <code>U</code> implements <code>From&lt;T&gt;</code>, then <code>T</code> <i>does</i> implement <code>Into&lt;U&gt;</code> (because of the blanket impl of <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>Into</code></a>). The asymmetry of the relationship can be confusing."}, {"owner": {"reputation": 768, "user_id": 5884836, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/dec1d79e38f7c9000cbe6aff09c01816?s=128&d=identicon&r=PG&f=1", "display_name": "negamartin", "link": "https://stackoverflow.com/users/5884836/negamartin"}, "edited": false, "score": 0, "creation_date": 1505862538, "post_id": 46245307, "comment_id": 79583740, "body": "Oh, I see now, thanks. I assumed the From &lt;-&gt; Into relationship was both ways. It&#39;s nice you can place constraints with generics on the right hand side too!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1505499476, "last_edit_date": 1505499476, "creation_date": 1505498582, "answer_id": 46245307, "question_id": 46245174, "link": "https://stackoverflow.com/questions/46245174/t-into-works-but-fromfromt-does-not/46245307#46245307", "title": "`T.into()` works but `From::from(T)` does not", "body": "<blockquote>\n  <p>Why do the requirements change when using <code>From</code> or <code>Into</code>?</p>\n</blockquote>\n\n<p>Even when something implements <code>Into</code>, that <em>doesn't mean it implements <code>From</code></em>. For example, from the implementor list of <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"noreferrer\"><code>Into</code></a>:</p>\n\n<pre><code>impl&lt;T, U&gt; Into&lt;U&gt; for T \nwhere\n    U: From&lt;T&gt;, \n\nimpl Into&lt;Option&lt;P&lt;PathParameters&gt;&gt;&gt; for AngleBracketedParameterData\nimpl Into&lt;Vec&lt;Annotatable&gt;&gt; for Annotatable\nimpl&lt;T&gt; Into&lt;Vec&lt;T&gt;&gt; for ThinVec&lt;T&gt;\nimpl&lt;T&gt; Into&lt;Vec&lt;T&gt;&gt; for P&lt;[T]&gt;\n</code></pre>\n\n<p>Those last four types do <em>not</em> implement <code>From</code>, but they do implement <code>Into</code>. (Note that these types are actually internal compiler types and it's a bug that we can see them in the docs, but it's a useful demonstration for this case.)</p>\n\n<p>See <a href=\"https://stackoverflow.com/q/29812530/155423\">When should I implement std::convert::From vs std::convert::Into?</a> for more details about the differences of the two traits.</p>\n\n<hr>\n\n<p>You can instead declare that your generic type implements <code>From</code> to use it:</p>\n\n<pre><code>fn convert&lt;T&gt;(input: T) -&gt; Box&lt;Error&gt;\nwhere\n    Box&lt;Error&gt;: From&lt;T&gt;,\n{\n    From::from(input) // Fails to compile\n}\n</code></pre>\n"}], "owner": {"reputation": 768, "user_id": 5884836, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/dec1d79e38f7c9000cbe6aff09c01816?s=128&d=identicon&r=PG&f=1", "display_name": "negamartin", "link": "https://stackoverflow.com/users/5884836/negamartin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 46245307, "answer_count": 2, "score": 3, "last_activity_date": 1505499476, "creation_date": 1505497993, "last_edit_date": 1505498396, "question_id": 46245174, "link": "https://stackoverflow.com/questions/46245174/t-into-works-but-fromfromt-does-not", "title": "`T.into()` works but `From::from(T)` does not", "body": "<p>In this following code snippet, <code>convert</code> is trying to convert its input to a <code>Box&lt;Error&gt;</code>:</p>\n\n<pre><code>fn convert&lt;T: Into&lt;Box&lt;Error&gt;&gt;&gt;(input: T) -&gt; Box&lt;Error&gt; {\n    input.into() // Compiles\n    // From::from(input) // Fails to compile\n}\n</code></pre>\n\n<p>It works with <code>input.into()</code>, but when using <code>From::from(T)</code> it no longer works, it requires <code>T</code> to implement <code>Error</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `T: std::error::Error` is not satisfied\n --&gt; src/main.rs:4:3\n  |\n4 |   From::from(input)\n  |   ^^^^^^^^^^ the trait `std::error::Error` is not implemented for `T`\n  |\n  = help: consider adding a `where T: std::error::Error` bound\n  = note: required because of the requirements on the impl of `std::convert::From&lt;T&gt;` for `std::boxed::Box&lt;std::error::Error&gt;`\n  = note: required by `std::convert::From::from`\n</code></pre>\n\n<p>Why do the requirements change when using <code>From</code> or <code>Into</code>? This becomes specially annoying when using the <code>?</code> operator:</p>\n\n<pre><code>fn convert&lt;T: Into&lt;Box&lt;Error&gt;&gt;&gt;(input: T) -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    Err(input)? // Fails to compile\n}\n</code></pre>\n\n<p>Is there any way to use the <code>?</code> operator properly in these cases, or do I have to resort to manual <code>match</code> and <code>into</code>?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1505472029, "post_id": 46235975, "comment_id": 79438483, "body": "<i>Because it&#39;s not a good idea to start using a Map implementation directly, as it&#39;s not a good software engineering practice.</i> =&gt; You need to update your engineering practices. In native languages such as Rust or C++, using concrete instances (and generics) instead of interfaces enables the compiler to squeeze out the last ounces of performance."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1505487757, "last_edit_date": 1505487757, "creation_date": 1505475056, "answer_id": 46238543, "question_id": 46235975, "link": "https://stackoverflow.com/questions/46235975/create-an-object-safe-trait-in-rust-with-a-method-that-accepts-a-closure/46238543#46238543", "title": "Create an Object-safe Trait in Rust with a method that accepts a closure", "body": "<blockquote>\n  <p>How can one solve this issue? Because it's not a good idea to start using a Map implementation directly, as it's not a good software engineering practice.</p>\n</blockquote>\n\n<p>This is good practice in Java, but not necessarily in other languages. For example, in dynamically typed languages, provided all <code>Map</code> implementations use the same naming convention for the methods, they can be substituted without a lot of code changes. </p>\n\n<p>In languages like Rust, which have good type inference, you don't typically need to pollute the code with excessive type annotations. As a result, if you need to change a concrete type, there are fewer places that need to be updated, and it is less of a problem than you'd find in languages like Java.</p>\n\n<p>\"Good\" Java has the implicit goal that you might want to swap any implementation of your abstract type at <em>run-time</em>. Java makes this easy to do, so it's reasonable to do it, even though, in practice, this is needed very rarely. More likely, you will use some code that expects an abstract type, and you provide it with a concrete instance which is known at <em>compile-time</em>.</p>\n\n<p>This is exactly how Rust works with parameters. When you specify a <code>M: Map</code> parameter, you can work to <em>any</em> <code>M</code> which also implements <code>Map</code>. But the compiler will figure out at compile-time which concrete implementation you are actually using (this is called monomorphization). If you need to change the concrete implementation, you can do so by changing just one line of code. This also has huge benefits for performance.</p>\n\n<p>So, coming back to your first question:</p>\n\n<blockquote>\n  <p>How can one solve this issue?</p>\n</blockquote>\n\n<p>If you really want to do this, you can introduce <em>another</em> trait object for the mapper function. The reason why a trait object can't have a method with its own generic arguments  is because the compiler can't know at compile-time the size of whatever will go there. So just make your function argument into a trait object too, so that this problem goes away:</p>\n\n<pre><code>fn upsert(&amp;self, key: K, value: V, updater: &amp;Fn(&amp;mut V));\n</code></pre>\n\n<p>But my real answer is, as I've described above, to keep things simple. If you really need this <code>Map</code> abstraction, it should work perfectly well with type parameters whose instantiation is known at compile-time. Use trait objects for when a concrete type cannot be known at compile-time, for example where the implementation can change at run-time.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1505489427, "creation_date": 1505489427, "answer_id": 46243038, "question_id": 46235975, "link": "https://stackoverflow.com/questions/46235975/create-an-object-safe-trait-in-rust-with-a-method-that-accepts-a-closure/46243038#46243038", "title": "Create an Object-safe Trait in Rust with a method that accepts a closure", "body": "<p><em>Disclaimer: I find the premise (good practices) faulty, but still think the question worth answering. Run-time polymorphism has its place, notably to reduce compilation-times.</em></p>\n\n<p>It is perfectly possible to create an object-safe version of your trait, it just requires two components:</p>\n\n<ul>\n<li>the methods that you wish to use via run-time polymorphism should not have generic type parameters,</li>\n<li>the methods that have type parameters (and which you cannot use via run-time polymorphism) should be guarded via a <code>where Self: Sized</code> clause.</li>\n</ul>\n\n<p>It is possible to offer both alternatives of such methods, though in Rust it requires different names:</p>\n\n<pre><code>pub trait Map&lt;K: Sync, V&gt; {\n    fn put(&amp;mut self, k: K, v: V) -&gt; Option&lt;V&gt;;\n\n    fn upsert_erased(&amp;self, key: K, value: V, updater: &amp;Fn(&amp;mut V));\n\n    fn upsert&lt;U: Fn(&amp;mut V)&gt;(&amp;self, key: K, value: V, updater: &amp;U)\n        where Self: Sized\n    {\n        self.upsert_erased(key, value, updater);\n    }\n}\n</code></pre>\n\n<p>Not how I chose here to provide a default implementation of <code>upsert</code> via <code>upsert_erased</code>, it reduces the number of methods the concrete type will have to implement while still offering the possibility to actually implemented it if performance warrants it.</p>\n"}], "owner": {"reputation": 695, "user_id": 467323, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0933d7513d039b0fb5ab64db436501ab?s=128&d=identicon&r=PG", "display_name": "Mohammad Dashti", "link": "https://stackoverflow.com/users/467323/mohammad-dashti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 355, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1505489427, "creation_date": 1505466846, "last_edit_date": 1505467269, "question_id": 46235975, "link": "https://stackoverflow.com/questions/46235975/create-an-object-safe-trait-in-rust-with-a-method-that-accepts-a-closure", "title": "Create an Object-safe Trait in Rust with a method that accepts a closure", "body": "<p>I want to create a trait for Map with the following definition:</p>\n\n<pre><code>pub trait Map&lt;K: Sync, V&gt; {\n    fn put(&amp;mut self, k: K, v: V) -&gt; Option&lt;V&gt;;\n    fn upsert&lt;U: Fn(&amp;mut V)&gt;(&amp;self, key: K, value: V, updater: &amp;U);\n    fn get&lt;Q: ?Sized&gt;(&amp;self, k: &amp;Q) -&gt; Option&lt;V&gt; where K: Borrow&lt;Q&gt;, Q: Eq + Hash + Sync;\n    // other methods ommited for brevity\n}\n</code></pre>\n\n<p>Now, the problem is that if I implement this trait, for example as <strong>MyHashMap</strong>, then I cannot have an expression like this:</p>\n\n<pre><code>let map: Box&lt;Map&lt;i32, i32&gt;&gt; = Box::new(MyHashMap::&lt;i32, i32&gt;::new());\n</code></pre>\n\n<p>The error would be:</p>\n\n<blockquote>\n  <p>the trait <code>map::Map</code> cannot be made into an object</p>\n</blockquote>\n\n<p>How can one solve this issue? Because it's not a good idea to start using a Map implementation directly, as it's not a good software engineering practice.</p>\n\n<p>The main issue is that <strong>get</strong> and <strong>upsert</strong> methods in the trait accept generic type parameters. My first attempt was to get rid of these generic type parameters.</p>\n\n<p>For <strong>get</strong> method, it's possible, even though it deviates from the common signature of <strong>get</strong> in rust collections and makes its usage scenarios more limited. Here is the result:</p>\n\n<pre><code>pub trait Map&lt;K: Sync, V&gt; {\n    fn put(&amp;mut self, k: K, v: V) -&gt; Option&lt;V&gt;;\n    fn upsert&lt;U: Fn(&amp;mut V)&gt;(&amp;self, key: K, value: V, updater: &amp;U);\n    fn get(&amp;self, k: &amp;K) -&gt; Option&lt;V&gt;;\n    // other methods ommited for brevity\n}\n</code></pre>\n\n<p>However, I do not have any idea about the way to remove the generic type parameter in <strong>upsert</strong>.</p>\n\n<p>Any idea on how to deal with this issue?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1505456689, "creation_date": 1505456689, "answer_id": 46233018, "question_id": 46231159, "link": "https://stackoverflow.com/questions/46231159/trait-bound-t-fromresultt-error-is-not-satisfied/46233018#46233018", "title": "Trait bound T: From&lt;Result&lt;T, Error&gt;&gt; is not satisfied", "body": "<p>Since your <code>get_nonce</code> function returns a <code>Result</code>, you need to handle the possible error. There are three ways you can fix your code here:</p>\n\n<ul>\n<li>Given that <code>get_nonce</code> never returns an error, you can simply change it so that it returns <code>nonce</code> directly instead of <code>Ok(nonce)</code>.</li>\n<li>Or you can call <code>unwrap</code> on the result to access the <code>Vec&lt;u8&gt;</code> that's inside (and crash if you later change <code>get_nonce</code> to generate errors).</li>\n<li>Or you can add proper error handling all around (get rid of the <code>unwrap</code>s and use <code>try!</code> or the <code>?</code> operator to propagate errors and catch them properly at some top-level point).</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 2, "last_activity_date": 1505458436, "creation_date": 1505458436, "answer_id": 46233470, "question_id": 46231159, "link": "https://stackoverflow.com/questions/46231159/trait-bound-t-fromresultt-error-is-not-satisfied/46233470#46233470", "title": "Trait bound T: From&lt;Result&lt;T, Error&gt;&gt; is not satisfied", "body": "<p>The <code>Option&lt;Vec&lt;u8&gt;&gt;</code> is a red herring, the important thing is the prototype of <code>salt()</code>, and as you can see in the definition of <code>salt</code>:</p>\n\n<pre><code>pub fn salt&lt;T: Into&lt;Vec&lt;u8&gt;&gt;&gt;(mut self, salt: T)\n</code></pre>\n\n<p>it expects an argument that satisfies the trait <code>Into&lt;Vec&lt;u8&gt;&gt;</code>. From the <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\">documentation</a> you can see that there are these generic implementations of <code>Into&lt;T&gt;</code>:</p>\n\n<ul>\n<li><code>From&lt;T&gt;</code>for <code>U</code> implies <code>Into&lt;U&gt;</code> for <code>T</code></li>\n<li><code>Into</code> is reflexive, which means that <code>Into&lt;T&gt;</code> for <code>T</code> is implemented.</li>\n</ul>\n\n<p>So you may pass to <code>salt</code> either:</p>\n\n<ul>\n<li>A value of type <code>Vec&lt;u8&gt;</code>.</li>\n<li>A value of type <code>T</code> if there is such <code>From&lt;T&gt;</code> is implemented for <code>Vec&lt;u8&gt;</code>.</li>\n<li>A value that implements <code>Into&lt;Vec&lt;u8&gt;&gt;</code> directly.</li>\n</ul>\n\n<p>Now, you have a value of type <code>Result&lt;Vec&lt;u8&gt;, ConfigError&gt;</code>, that satisfies none of the above. And that is what all those error messages are trying to tell you.</p>\n\n<p>The easy solution is to change your function into:</p>\n\n<pre><code>pub fn get_nonce() -&gt; Vec&lt;u8&gt; {\n     ....\n     nonce\n}\n</code></pre>\n\n<p>If you cannot change that return type you can use <code>unwrap()</code> to get the real value from a <code>Result()</code> (and crash on error):</p>\n\n<pre><code>    .length(7)\n    .salt(get_nonce().unwrap())\n    .init()\n</code></pre>\n\n<p>If the <code>get_nonce()</code> function can really fail, then you would have to manage the error properly, maybe making your <code>MASK</code> value of type <code>Result&lt;Harsh, ConfigError&gt;</code>? </p>\n"}], "owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1762, "favorite_count": 0, "accepted_answer_id": 46233470, "answer_count": 2, "score": 0, "last_activity_date": 1505458436, "creation_date": 1505445505, "last_edit_date": 1505457336, "question_id": 46231159, "link": "https://stackoverflow.com/questions/46231159/trait-bound-t-fromresultt-error-is-not-satisfied", "title": "Trait bound T: From&lt;Result&lt;T, Error&gt;&gt; is not satisfied", "body": "<p>I want to load <code>nonce</code> from a toml config file.  <code>nonce</code> is retrieved in <code>pub fn get_nonce()</code>. I'd like to instantiate the result to <code>salt</code> of lazy_static macro type <code>HarshBuilder</code>.</p>\n\n<pre><code>use config::{Config, File, FileFormat, ConfigError};\nuse harsh::{Harsh, HarshBuilder};\nuse settings::Server;\n\nconst CFG_DEFAULT: &amp;'static str = \"conf/default\";\n\nlazy_static! {\n    static ref MASK: Harsh = HarshBuilder::new()\n        .length(7)\n        .salt(get_nonce())\n        .init()\n        .expect(\"invalid harsh build\");\n}\n\nfn conf_file() -&gt; Config {\n    let mut cfg = Config::default();\n    cfg.merge(File::from_str(CFG_DEFAULT, FileFormat::Toml))\n        .unwrap();\n\n    cfg\n}\n\npub fn get_nonce() -&gt; Result&lt;Vec&lt;u8&gt;, ConfigError&gt; {\n    let conf = conf_file();\n    let search: Server = conf.get(\"server\").unwrap();\n    let nonce: Vec&lt;u8&gt; = search.nonce.into_bytes();\n\n    Ok(nonce)\n}\n</code></pre>\n\n<p>The compiler returns an error:</p>\n\n<pre><code>error[E0277]: the trait bound `std::vec::Vec&lt;u8&gt;: std::convert::From&lt;std::result::Result&lt;std::vec::Vec&lt;u8&gt;, config::ConfigError&gt;&gt;` is not satisfied\n--&gt; lib.rs:40:14\n|\n40 |     .salt(get_nonce())\n|         ^^^^ the trait \n|\n`std::convert::From&lt;std::result::Result&lt;std::vec::Vec&lt;u8&gt;, config::ConfigError&gt;&gt;` is not implemented for `std::vec::Vec&lt;u8&gt;`\n\n|\n= help: the following implementations were found:\n         &lt;std::vec::Vec&lt;u8&gt; as std::convert::From&lt;std::ffi::CString&gt;&gt;\n         &lt;std::vec::Vec&lt;u8&gt; as std::convert::From&lt;std::string::String&gt;&gt;\n         &lt;std::vec::Vec&lt;T&gt; as std::convert::From&lt;&amp;'a mut [T]&gt;&gt;\n         &lt;std::vec::Vec&lt;T&gt; as std::convert::From&lt;std::borrow::Cow&lt;'a, [T]&gt;&gt;&gt;\n       and 5 others\n= note: required because of the requirements on the impl of `std::convert::Into&lt;std::vec::Vec&lt;u8&gt;&gt;` for `std::result::Result&lt;std::vec::Vec&lt;u8&gt;, config::ConfigError&gt;`\n</code></pre>\n\n<p>So <code>get_nonce()</code> returns an enum result of <code>Result&lt;String, ConfigError&gt;</code>.  This does not appear to satisfy <code>salt Option&lt;Vec&lt;u8&gt;&gt;</code>.  The attempt you see above is to convert <code>Result</code> enum to <code>Vec&lt;u8&gt;</code>.  However, this does not fix the error. </p>\n\n<p>Here is the <code>HarshBuilder</code> trait implementation for review:</p>\n\n<pre><code>/// Note that this factory will be consumed upon initialization.\n#[derive(Debug, Default)]\npub struct HarshBuilder {\n    salt: Option&lt;Vec&lt;u8&gt;&gt;,\n    // ...ommitted for brevity\n}\n\nimpl HarshBuilder {\n/// Creates a new `HarshBuilder` instance.\npub fn new() -&gt; HarshBuilder {\n    HarshBuilder {\n        salt: None,\n        // ...ommited for brevity\n    }\n}\n\n/// Note that this salt will be converted into a `[u8]` before use, meaning\n/// that multi-byte utf8 character values should be avoided.\npub fn salt&lt;T: Into&lt;Vec&lt;u8&gt;&gt;&gt;(mut self, salt: T) -&gt; HarshBuilder {\n    self.salt = Some(salt.into());\n    self\n}\n</code></pre>\n\n<p>Trait bounds and lifetime elision is still a subject that I'm trying to wrap my head around.  I can really use some guidance.  Perhaps, this may be the reason as to why the answer is not completely obvious for me here.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1505439517, "post_id": 46230328, "comment_id": 79424713, "body": "You say <code>self::C</code> doesn&#39;t work, but <code>Self::C</code> does."}, {"owner": {"reputation": 100, "user_id": 1725472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/94d7af433c2fde5d985d9a53c88ca940?s=128&d=identicon&r=PG", "display_name": "Matt Bettcher", "link": "https://stackoverflow.com/users/1725472/matt-bettcher"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1505440614, "post_id": 46230328, "comment_id": 79424936, "body": "I get unresolved import with that. I&#39;m using 1.20"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1505510749, "post_id": 46230328, "comment_id": 79459564, "body": "Works on the playground though: <a href=\"https://play.rust-lang.org/?gist=be07c2cf9daa912c6e988cb48c7ec58e&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 100, "user_id": 1725472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/94d7af433c2fde5d985d9a53c88ca940?s=128&d=identicon&r=PG", "display_name": "Matt Bettcher", "link": "https://stackoverflow.com/users/1725472/matt-bettcher"}, "edited": false, "score": 0, "creation_date": 1505697028, "post_id": 46233793, "comment_id": 79503037, "body": "Thanks so much for the answer! I appreciate the workaround as well. I will look into creating an issue for this."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 3, "last_activity_date": 1505459587, "creation_date": 1505459587, "answer_id": 46233793, "question_id": 46230328, "link": "https://stackoverflow.com/questions/46230328/access-associated-constant-items-without-scope-qualifier/46233793#46233793", "title": "Access associated constant items without scope qualifier", "body": "<p><code>use</code>ing of associated constants is not implemented in Rust 1.20. I haven't found an issue for that, so you can create your own issue in Rust GitHub repository.</p>\n\n<p>In the meantime you can use type alias to reduce character count.</p>\n\n<pre><code>type P = R6502;\nself.sr.set_bit(P::C, false);\n</code></pre>\n"}], "owner": {"reputation": 100, "user_id": 1725472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/94d7af433c2fde5d985d9a53c88ca940?s=128&d=identicon&r=PG", "display_name": "Matt Bettcher", "link": "https://stackoverflow.com/users/1725472/matt-bettcher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "accepted_answer_id": 46233793, "answer_count": 1, "score": 2, "last_activity_date": 1505481698, "creation_date": 1505438577, "last_edit_date": 1505481698, "question_id": 46230328, "link": "https://stackoverflow.com/questions/46230328/access-associated-constant-items-without-scope-qualifier", "title": "Access associated constant items without scope qualifier", "body": "<p>I would like to use the const <code>C</code> inside the impl <code>R6502</code> without having to specify the scope <code>R6502::</code></p>\n\n<pre><code>use bit::BitIndex;\n\npub struct R6502 {\n    pub sr: u8, // status register\n}\n\nimpl R6502 {\n    // status flag indexs\n    const C: usize = 0;\n    const Z: usize = 1;\n\n    pub fn step(&amp;mut self) {\n        self.sr.set_bit(R6502::C, false); // this is what I have to do\n        self.sr.set_bit(C, false); // this is what I want to do\n    }\n}\n</code></pre>\n\n<p>I tried use <code>self::C</code> and some other combinations of <code>use</code> to only get errors about items not found.</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505419056, "post_id": 46226982, "comment_id": 79418270, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. As it is, we have to guess what <code>Self::Future</code> is, among a number of other pieces of your application."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505419182, "post_id": 46226982, "comment_id": 79418345, "body": "Additionally, it would be good to explain what you don&#39;t understand from the <a href=\"https://hyper.rs/guides/server/echo/\" rel=\"nofollow noreferrer\">hyper examples which read a body stream</a>, which seems like it should be an easy place to start from."}], "answers": [{"comments": [{"owner": {"reputation": 3215, "user_id": 855474, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/8JCP8.png?s=128&g=1", "display_name": "BalaB", "link": "https://stackoverflow.com/users/855474/balab"}, "edited": false, "score": 0, "creation_date": 1505432843, "post_id": 46227447, "comment_id": 79423356, "body": "How to extract the body or its content in Method:POST ? I tried <a href=\"https://github.com/hyperium/hyper/blob/master/examples/server.rs\" rel=\"nofollow noreferrer\">github.com/hyperium/hyper/blob/master/examples/server.rs</a> But How to see the contents in req.body? chunk by chunk ?"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1521531619, "post_id": 46227447, "comment_id": 85757962, "body": "I don&#39;t quite see how this answers the question &quot;How to read the request body in hyper?&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1521547182, "post_id": 46227447, "comment_id": 85767996, "body": "@PhilippLudwig good point. The original question was poorly framed and I&#39;ve updated it."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1505419690, "creation_date": 1505419690, "answer_id": 46227447, "question_id": 46226982, "link": "https://stackoverflow.com/questions/46226982/why-does-nothing-happen-after-matching-on-a-requests-path-in-hyper/46227447#46227447", "title": "Why does nothing happen after matching on a request&#39;s path in hyper?", "body": "<p>You created a new <code>Response</code> called <code>response</code>, then created a second <code>Response</code> called <code>res</code>. You then modify <code>res</code> and then throw it away, returning <code>response</code> from your function. If you return the thing you modify, your server returns the <em>string</em> <code>\"req.body()\"</code>, just as you have specified. </p>\n\n<pre><code>fn call(&amp;self, req: hyper::server::Request) -&gt; Self::Future {\n    let mut response: Response = Response::new();\n\n    match (req.method(), req.path()) {\n        (&amp;Method::Post, \"/assets\") =&gt; {\n            if let Some(len) = req.headers().get::&lt;ContentLength&gt;() {\n                response.headers_mut().set(len.clone());\n            }\n\n            response = response.with_body(\"req.body()\");\n        }\n        _ =&gt; {\n            response.set_status(StatusCode::NotFound);\n        }\n    };\n\n    futures::future::ok(response)\n}\n</code></pre>\n\n<p>I would <strong>not</strong> set the content-length to an invalid value \u2014 your returned string does not match the length of the uploaded data.</p>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1505595714, "post_id": 46231808, "comment_id": 79480379, "body": "If Shepmaster really helped you, would you consider attributing some value to his answer? I don&#39;t see a single upvote there. You may also want to explain the necessary changes, so that future visitors do not have to look through all the code to understand what you did."}, {"owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "edited": false, "score": 0, "creation_date": 1512854006, "post_id": 46231808, "comment_id": 82427046, "body": "<a href=\"https://stackoverflow.com/questions/43419974/how-do-i-read-the-entire-body-of-a-tokio-based-hyper-request\" title=\"how do i read the entire body of a tokio based hyper request\">stackoverflow.com/questions/43419974/&hellip;</a>"}], "tags": [], "owner": {"reputation": 3215, "user_id": 855474, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/8JCP8.png?s=128&g=1", "display_name": "BalaB", "link": "https://stackoverflow.com/users/855474/balab"}, "is_accepted": false, "score": 0, "last_activity_date": 1505450446, "creation_date": 1505450446, "answer_id": 46231808, "question_id": 46226982, "link": "https://stackoverflow.com/questions/46226982/why-does-nothing-happen-after-matching-on-a-requests-path-in-hyper/46231808#46231808", "title": "Why does nothing happen after matching on a request&#39;s path in hyper?", "body": "<pre><code>Below code works, able to parse JSON on POST\n\n\n#[deny(warnings)]\n\nuse hyper::{Post, StatusCode};\nuse hyper::header::ContentLength;\nuse hyper::server::{Http, Service, Request, Response};\nuse futures::{future, Future, Stream}; \nuse futures;\nuse hyper;\nuse serde_json;\nuse std::io;\nuse std::error::Error;\n\n\npub struct Persistence;\n\nconst SERVICE: &amp;'static str = \"Persistence Service\";\nconst SUCCESS: &amp;'static str = r#\"{\"status\": \"success\"}\"#;\n\nimpl Service for Persistence {\n      type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = futures::BoxFuture&lt;Response, hyper::Error&gt;;\n\n    fn call(&amp;self, req: Request) -&gt; Self::Future {\n        let (method, uri, _version, headers, body) = req.deconstruct();\n        match (method, uri.path()) {\n            (Post, \"/assests\") =&gt; {\n                let mut res = Response::new();\n                let vec;\n                if let Some(len) = headers.get::&lt;ContentLength&gt;() {\n                    vec = Vec::with_capacity(**len as usize);\n                    res.headers_mut().set(len.clone());\n                } else {\n                    vec = vec![];\n                }\n                body.fold(vec, |mut acc, chunk| {\n                    acc.extend_from_slice(chunk.as_ref());\n                    Ok::&lt;_, hyper::Error&gt;(acc)\n                }).and_then(move |value| {\n                     use serde_json;\n\n                        let v: serde_json::Value = serde_json::from_slice(&amp;value).map_err(|e| {\n                            io::Error::new(\n                                io::ErrorKind::Other,\n                                e\n                            )\n                        })?;  \n                    println!(\"value..... {:?}\", &amp;v);\n                    Ok(res.with_body(SUCCESS))\n\n                }).boxed()\n            },\n            _ =&gt; future::ok(Response::new().with_status(StatusCode::NotFound)).boxed()\n        }\n    }\n\n}\n</code></pre>\n\n<p>THanks a lot @Shepmaster   :)  hip hip hurray!!</p>\n"}, {"tags": [], "owner": {"reputation": 55, "user_id": 2404131, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e40b35db236610754e7e910ddf0a37d?s=128&d=identicon&r=PG", "display_name": "user2404131", "link": "https://stackoverflow.com/users/2404131/user2404131"}, "is_accepted": false, "score": -1, "last_activity_date": 1515733285, "creation_date": 1515733285, "answer_id": 48219819, "question_id": 46226982, "link": "https://stackoverflow.com/questions/46226982/why-does-nothing-happen-after-matching-on-a-requests-path-in-hyper/48219819#48219819", "title": "Why does nothing happen after matching on a request&#39;s path in hyper?", "body": "<p>according to <a href=\"https://hyper.rs/guides/server/handle_post/#handling-json-and-other-data-types\" rel=\"nofollow noreferrer\">https://hyper.rs/guides/server/handle_post/#handling-json-and-other-data-types</a></p>\n\n<p>and here is the code:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate serde_json;\n\nuse futures::Future;\nuse futures::{Stream};\n\nuse hyper::{Get, Post, StatusCode};\nuse hyper::header::{ContentLength};\nuse hyper::server::{Http, Service, Request, Response};\n\nstatic INDEX: &amp;'static [u8] = b\"Try POST /echo\";\n\nstruct Echo;\n\nimpl Service for Echo {\n    type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, req: Request) -&gt; Self::Future {\n        match (req.method(), req.path()) {\n            (&amp;Get, \"/\") | (&amp;Get, \"/echo\") =&gt; {\n                Box::new(futures::future::ok(\n                    Response::new()\n                        .with_header(ContentLength(INDEX.len() as u64))\n                        .with_body(INDEX)))\n            },\n            (&amp;Post, \"/echo\") =&gt; {\n        Box::new(req.body().concat2().map(|b| {\n                    let bad_request: &amp;[u8] = b\"Missing field\";\n                    let json: serde_json::Value =\n                        if let Ok(j) = serde_json::from_slice(b.as_ref()) {\n                        j\n                        } else {\n                            return Response::new()\n                                .with_status(StatusCode::BadRequest)\n                                .with_header(ContentLength(bad_request.len() as u64))\n                                .with_body(bad_request);\n                    };\n\n                    // use json as you like\n\n                    let body = serde_json::to_string(&amp;json).unwrap();\n                    Response::new()\n                        .with_header(ContentLength(body.len() as u64))\n                        .with_body(body)\n                }))\n            },\n            _ =&gt; {\n                Box::new(futures::future::ok(\n                    Response::new().with_status(StatusCode::NotFound)))\n            }\n        }\n    }\n}\n\n\nfn main() {\n    let addr = \"127.0.0.1:1337\".parse().unwrap();\n\n    let server = Http::new().bind(&amp;addr, || Ok(Echo)).unwrap();\n    println!(\"Listening on http://{} with 1 thread.\", server.local_addr().unwrap());\n    server.run().unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 3215, "user_id": 855474, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/8JCP8.png?s=128&g=1", "display_name": "BalaB", "link": "https://stackoverflow.com/users/855474/balab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 985, "favorite_count": 0, "accepted_answer_id": 46227447, "answer_count": 3, "score": -1, "last_activity_date": 1521547158, "creation_date": 1505417724, "last_edit_date": 1521547158, "question_id": 46226982, "link": "https://stackoverflow.com/questions/46226982/why-does-nothing-happen-after-matching-on-a-requests-path-in-hyper", "title": "Why does nothing happen after matching on a request&#39;s path in hyper?", "body": "<p>I am trying to read POSTed JSON using hyper 0.11.2. I don't see anything happening after \"Reached\" is printed.</p>\n\n<pre><code>fn call(&amp;self, req: hyper::server::Request) -&gt; Self::Future {\n    let mut response: Response = Response::new();\n\n    match (req.method(), req.path()) {\n        (&amp;Method::Post, \"/assests\") =&gt; {\n             println!(\"Reached ... \"); //POST: 200 OK\n            //let (method, uri, _version, head \n            let mut res: Response = Response::new();\n            if let Some(len) = req.headers().get::&lt;ContentLength&gt;() {\n                res.headers_mut().set(len.clone());\n            }\n\n            println!(\"Reached xxx {:?}\", req.body());\n            res.with_body(\"req.body()\");\n        }\n        _ =&gt; {\n            response.set_status(StatusCode::NotFound);\n        }\n    };\n\n    futures::future::ok(response)\n}\n</code></pre>\n\n<p>Output: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Reached ...\nReached xxx Body(Body { [stream of values] })\n</code></pre>\n"}, {"tags": ["c++", "rust", "vulkan"], "comments": [{"owner": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505411475, "post_id": 46222284, "comment_id": 79414267, "body": "Enable api dump layer, save logs from both applications (C++ and Rust) and compare them. And share them as well. It may be easier to compare directly what Vulkan functions are called and with what parameters than to compare code written in different programming languages."}, {"owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "reply_to_user": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505415282, "post_id": 46222284, "comment_id": 79416374, "body": "@Ekzuzy Sure, I forgot to mention that I already dumped the logs and they look approximately the same (except for addresses). I don&#39;t have enough reputation to add them to my question, but they are located here: C++ <a href=\"https://pastebin.com/JyQX8HRa\" rel=\"nofollow noreferrer\">pastebin.com/JyQX8HRa</a> Rust <a href=\"https://pastebin.com/yWJbhPqp\" rel=\"nofollow noreferrer\">pastebin.com/yWJbhPqp</a>"}, {"owner": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505416884, "post_id": 46222284, "comment_id": 79417196, "body": "These api dumps are indeed very similar. But the error code returned by the vkQueueSubmit() function is the VK_ERROR_VALIDATION_FAILED_EXT which is reported by the debug report. Maybe the problem is not connected with swapchain images or layout transitions but with the validation / debug report itself? Some time ago someone here on StackOverflow had a problem with his application. It didn&#39;t work for him but worked fine on my computer. The only difference was debug report which I disabled during debugging. When he disabled it, application started working for him as well. Did You try that?"}, {"owner": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505417002, "post_id": 46222284, "comment_id": 79417243, "body": "It&#39;s a blind shot but I don&#39;t have any other ideas what can be potentially wrong. There are some differences in these two api dumps but they shouldn&#39;t generate such problems. If it&#39;s not the debug report, maybe some specific Rust behavior? I don&#39;t know, some additional thread managed internally by Rust environment or, as You wrote, too early deallocation of resources (I don&#39;t know Rust at all). I will look at it a bit more but for now I don&#39;t have any other ideas about potential problems."}, {"owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "reply_to_user": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505417412, "post_id": 46222284, "comment_id": 79417447, "body": "@Ekzuzy Yes, when I disable the debug layer in the Rust application it appears to work fine, but I can&#39;t tell if the pipeline barriers are actually functioning correctly. However the C++ application runs fine on my computer with the debug layer enabled so I&#39;m concerned there is something else going on. I wonder if I have dangling pointers in my API calls or the event loop has some subtle difference."}, {"owner": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505417584, "post_id": 46222284, "comment_id": 79417527, "body": "Did You try enabling validation layers not in Your code but globally, as described in Vulkan SDK through environment variables and validation layers config file? This way You don&#39;t need to modify Your code yet You still should have a validation information printed in the console window. And it shouldn&#39;t interfere with Your code."}, {"owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "reply_to_user": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505419159, "post_id": 46222284, "comment_id": 79418325, "body": "@Ekzuzy I&#39;ve removed the validation layers and I have a layer settings file which includes warnings, but when I do <code>SET VK_INSTANCE_LAYERS=VK_LAYER_LUNARG_api_dump;VK_LAYER_LUNARG_&zwnj;&#8203;standard_validation &amp;&amp; t.exe &gt; debug.txt</code> the program runs fine with no warnings (even the &quot;additional bits&quot; warning) so I&#39;m not sure the validation layer is being added correctly :-) I will try to look into it"}, {"owner": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505419896, "post_id": 46222284, "comment_id": 79418725, "body": "If api dump layer works correctly, other layers should work as well. I can&#39;t say that the code sample doesn&#39;t have any bugs, but I tried to test it with validation layers enabled and fixed it until all errors and warnings are gone. ;-)"}, {"owner": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "edited": false, "score": 1, "creation_date": 1505421825, "post_id": 46222284, "comment_id": 79419668, "body": "Firstly do not return <code>VK_TRUE</code> from your debug callback. Secondly layers enabled from command line may require <a href=\"https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers/blob/master/layers/vk_layer_settings.txt\" rel=\"nofollow noreferrer\">vk_layer_settings.txt</a> to show warnings."}, {"owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "reply_to_user": {"reputation": 2603, "user_id": 8306143, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jpU8P.jpg?s=128&g=1", "display_name": "Ekzuzy", "link": "https://stackoverflow.com/users/8306143/ekzuzy"}, "edited": false, "score": 0, "creation_date": 1505423031, "post_id": 46222284, "comment_id": 79420271, "body": "@Ekzuzy No problem, the tutorials are great! Thanks for writing them and all of your help here."}, {"owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "reply_to_user": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "edited": false, "score": 0, "creation_date": 1505423160, "post_id": 46222284, "comment_id": 79420329, "body": "@krOoze Very nice catch! The issue seems to have been caused by the <code>VK_TRUE</code> in the callback. I had no idea of that restriction, as I copied the callback from an <a href=\"https://github.com/MaikKlein/ash/blob/a26f2613fd5fda5cb43384834dbec9e311b0d0ac/examples/src/lib.rs#L132\" rel=\"nofollow noreferrer\">ash example</a>. Thanks. If you want to submit that as an answer I&#39;ll mark it as accepted."}, {"owner": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "edited": false, "score": 0, "creation_date": 1505423485, "post_id": 46222284, "comment_id": 79420472, "body": "@JST It is the cause of <code>VK_ERROR_VALIDATION_FAILED_EXT</code>. It isn&#39;t really the cause of the error/warning messages. PS: the logs have <code>pNext</code> set to something while in your code I see you pass <code>null</code> which is odd."}, {"owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "reply_to_user": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "edited": false, "score": 0, "creation_date": 1505425292, "post_id": 46222284, "comment_id": 79421136, "body": "@krOoze But I think <code>VK_TRUE</code> explains why the Rust code executes differently than C++, right? That was my main concern.  Interesting, I noticed the C++ logs show <code>pNext</code> values as well."}, {"owner": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "edited": false, "score": 0, "creation_date": 1505426314, "post_id": 46222284, "comment_id": 79421517, "body": "@JST I does not explain why one has error message and other does not. The logs seem otherwisely identical as far as I can tell. Does that error message disappear from the log with <code>VK_FALSE</code> callback? If so that&#39;s some kind of a layer bug."}, {"owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "reply_to_user": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "edited": false, "score": 0, "creation_date": 1505426425, "post_id": 46222284, "comment_id": 79421561, "body": "@krOoze Sorry, yes that&#39;s what I meant. The error message doesn&#39;t display when I return <code>VK_FALSE</code> from the callback."}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "edited": false, "score": 0, "creation_date": 1505430773, "post_id": 46229394, "comment_id": 79422819, "body": "Great summary, this makes sense."}], "tags": [], "owner": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "is_accepted": true, "score": 2, "last_activity_date": 1507655887, "last_edit_date": 1507655887, "creation_date": 1505430055, "answer_id": 46229394, "question_id": 46222284, "link": "https://stackoverflow.com/questions/46222284/vulkan-image-layout-not-transitioning-in-pipeline-barrier/46229394#46229394", "title": "Vulkan image layout not transitioning in pipeline barrier", "body": "<p><code>VK_ERROR_VALIDATION_FAILED_EXT</code> is often returned in the case when you return <code>VK_TRUE</code> from your debug callback. <a href=\"https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#PFN_vkDebugReportCallbackEXT\" rel=\"nofollow noreferrer\">The specification</a> advises against doing that:</p>\n\n<blockquote>\n  <p>The callback returns a <code>VkBool32</code> that indicates to the calling layer the application\u2019s desire to abort the call. A value of <code>VK_TRUE</code> indicates that the application wants to abort this call. If the application returns <code>VK_FALSE</code>, the command <strong>must</strong> not be aborted. Applications <strong>should</strong> always return <code>VK_FALSE</code> so that they see the same behavior with and without validation layers enabled.</p>\n</blockquote>\n\n<p>The value <code>VK_TRUE</code> is intended only for the purposes of layer development. Its current use is for unit testing of the layers, which requires the command to be aborted before it reaches the GPU driver (to prevent crashes the test is not interested in). It is common mistake to use it in applications. As the quote says applications are supposed to always use <code>VK_FALSE</code>.</p>\n\n<p>In your case the layer is behaving bit oddly, but what probably happened is:</p>\n\n<ol>\n<li>Both your app and the tutorial produce a benign warning on <code>vkCmdPipelineBarrier</code>.</li>\n<li>Because you return <code>VK_TRUE</code> the barrier is aborted and does not count.</li>\n<li><code>vkCmdPipelineBarrier</code> returns <code>void</code> (i.e. cannot return <code>VK_ERROR_VALIDATION_FAILED_EXT</code>) so you never learned it was actually aborted.</li>\n<li>Because the layout transition was aborted you have image in wrong layout on <code>vkQueueSubmit</code> and so you get an appropriate error.</li>\n</ol>\n"}], "owner": {"reputation": 33, "user_id": 7397537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92c235c69374202f077d71f2e1300418?s=128&d=identicon&r=PG&f=1", "display_name": "JST", "link": "https://stackoverflow.com/users/7397537/jst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 518, "favorite_count": 0, "accepted_answer_id": 46229394, "answer_count": 1, "score": 3, "last_activity_date": 1507655887, "creation_date": 1505400845, "question_id": 46222284, "link": "https://stackoverflow.com/questions/46222284/vulkan-image-layout-not-transitioning-in-pipeline-barrier", "title": "Vulkan image layout not transitioning in pipeline barrier", "body": "<p>I ported most of <a href=\"https://github.com/GameTechDev/IntroductionToVulkan/blob/master/Project/Tutorial02/Tutorial02.cpp\" rel=\"nofollow noreferrer\">Introduction to Vulkan - Tutorial 02</a> from C++ into a single Rust function to keep it simple. The function calls Vulkan through Rust FFI provided by <a href=\"https://github.com/MaikKlein/ash\" rel=\"nofollow noreferrer\">ash</a>.</p>\n\n<p>I'm having an issue getting the pipeline barriers and semaphores to function correctly. As far as I can tell, this code seems to create the same validation debug log info as the C++ code.</p>\n\n<p>When I run the C++ code with validation layers enabled, <code>vkQueueSubmit</code> is successful. When I run the Rust function below (with validation layers enabled), <code>queue_submit</code> fails and I receive</p>\n\n<blockquote>\n  <p>Cannot submit cmd buffer using image (0x6) [sub-resource: aspectMask\n  0x1 array layer 0, mip level 0], with layout VK_IMAGE_LAYOUT_UNDEFINED\n  when first use is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL.</p>\n</blockquote>\n\n<p>...which implies to me that there the image layout transition isn't taking place, so there may be something wrong with how I configure/submit my pipeline barriers.</p>\n\n<pre><code>#[macro_use]\nextern crate ash;\nextern crate kernel32;\nextern crate winit;\nuse std::default::Default;\nuse std::ffi::{CStr, CString};\nuse std::ptr;\nuse ash::vk;\nuse ash::Entry;\nuse ash::extensions::{DebugReport, Surface, Swapchain, Win32Surface};\nuse ash::version::{DeviceV1_0, EntryV1_0, InstanceV1_0};\nuse winit::os::windows::WindowExt;\n\nunsafe extern \"system\" fn vulkan_debug_callback(\n    _: vk::DebugReportFlagsEXT,\n    _: vk::DebugReportObjectTypeEXT,\n    _: vk::uint64_t,\n    _: vk::size_t,\n    _: vk::int32_t,\n    _: *const vk::c_char,\n    p_message: *const vk::c_char,\n    _: *mut vk::c_void,\n) -&gt; u32 {\n    println!(\"{:?}\", CStr::from_ptr(p_message));\n    1\n}\n\nfn main() {\n    let mut events_loop = winit::EventsLoop::new();\n    let window_width = 1024;\n    let window_height = 768;\n    let window = winit::WindowBuilder::new()\n        .with_title(\"Example\")\n        .with_dimensions(window_width, window_height)\n        .build(&amp;events_loop)\n        .unwrap();\n\n    unsafe {\n        let entry = Entry::new().unwrap();\n        let name = CString::new(\"Example\").unwrap();\n        let name_raw = name.as_ptr();\n\n        let app_info = [\n            vk::ApplicationInfo {\n                s_type: vk::StructureType::ApplicationInfo,\n                p_next: ptr::null(),\n                p_application_name: name_raw,\n                application_version: 0,\n                p_engine_name: name_raw,\n                engine_version: 0,\n                api_version: vk_make_version!(1, 0, 36),\n            },\n        ];\n\n        let layer_names = [CString::new(\"VK_LAYER_LUNARG_standard_validation\").unwrap()];\n        let layer_names_raw: Vec&lt;*const i8&gt; = layer_names.iter().map(|x| x.as_ptr()).collect();\n\n        let extension_names_raw = vec![\n            Surface::name().as_ptr(),\n            Win32Surface::name().as_ptr(),\n            DebugReport::name().as_ptr(),\n        ];\n\n        let create_info = vk::InstanceCreateInfo {\n            s_type: vk::StructureType::InstanceCreateInfo,\n            p_next: ptr::null(),\n            flags: Default::default(),\n            p_application_info: app_info.as_ptr(),\n            pp_enabled_layer_names: layer_names_raw.as_ptr(),\n            enabled_layer_count: layer_names_raw.len() as u32,\n            pp_enabled_extension_names: extension_names_raw.as_ptr(),\n            enabled_extension_count: extension_names_raw.len() as u32,\n        };\n\n        let instance = entry.create_instance(&amp;create_info, None).unwrap();\n\n        let debug_info = vk::DebugReportCallbackCreateInfoEXT {\n            s_type: vk::StructureType::DebugReportCallbackCreateInfoExt,\n            p_next: ptr::null(),\n            flags: vk::DEBUG_REPORT_ERROR_BIT_EXT | vk::DEBUG_REPORT_WARNING_BIT_EXT |\n                vk::DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT |\n                vk::DEBUG_REPORT_INFORMATION_BIT_EXT |\n                vk::DEBUG_REPORT_DEBUG_BIT_EXT,\n            pfn_callback: vulkan_debug_callback,\n            p_user_data: ptr::null_mut(),\n        };\n\n        let debug_report_loader = DebugReport::new(&amp;entry, &amp;instance).unwrap();\n\n        let debug_callback = debug_report_loader\n            .create_debug_report_callback_ext(&amp;debug_info, None)\n            .unwrap();\n\n        let surface_loader = Surface::new(&amp;entry, &amp;instance).unwrap();\n        let win32_create_info = vk::Win32SurfaceCreateInfoKHR {\n            s_type: vk::StructureType::Win32SurfaceCreateInfoKhr,\n            p_next: ptr::null(),\n            flags: Default::default(),\n            hinstance: kernel32::GetModuleHandleW(ptr::null()) as *mut _,\n            hwnd: window.get_hwnd() as *mut _,\n        };\n\n        let surface = Win32Surface::new(&amp;entry, &amp;instance)\n            .unwrap()\n            .create_win32_surface_khr(&amp;win32_create_info, None)\n            .unwrap();\n\n        let (physical_device, graphics_queue_family_index, present_queue_family_index) = instance\n            .enumerate_physical_devices()\n            .unwrap()\n            .iter()\n            .filter_map(|&amp;p| {\n                let candidates =\n                    instance\n                        .get_physical_device_queue_family_properties(p)\n                        .iter()\n                        .enumerate()\n                        .filter_map(|(index, info)| {\n                            let has_graphics = info.queue_flags.subset(vk::QUEUE_GRAPHICS_BIT);\n                            let has_present = surface_loader\n                                .get_physical_device_surface_support_khr(p, index as u32, surface);\n                            if has_graphics || has_present {\n                                Some((index as u32, has_graphics, has_present))\n                            } else {\n                                None\n                            }\n                        })\n                        .collect::&lt;Vec&lt;(u32, bool, bool)&gt;&gt;();\n                match candidates.iter().find(|&amp;x| x.1 &amp;&amp; x.2) {\n                    Some(ref both) =&gt; Some((p, both.0, both.0)),\n                    None =&gt; match candidates.iter().find(|&amp;x| x.1) {\n                        Some(ref graphics) =&gt; match candidates.iter().find(|&amp;x| x.2) {\n                            Some(ref present) =&gt; Some((p, graphics.0, present.0)),\n                            None =&gt; None,\n                        },\n                        None =&gt; None,\n                    },\n                }\n            })\n            .nth(0)\n            .unwrap();\n\n        let device_extension_names_raw = [Swapchain::name().as_ptr()];\n        let queue_priorities = [1.0];\n        let queue_create_infos = [\n            vk::DeviceQueueCreateInfo {\n                s_type: vk::StructureType::DeviceQueueCreateInfo,\n                p_next: ptr::null(),\n                flags: Default::default(),\n                queue_family_index: graphics_queue_family_index,\n                p_queue_priorities: queue_priorities.as_ptr(),\n                queue_count: queue_priorities.len() as u32,\n            },\n        ];\n\n        let device_create_info = vk::DeviceCreateInfo {\n            s_type: vk::StructureType::DeviceCreateInfo,\n            p_next: ptr::null(),\n            flags: Default::default(),\n            queue_create_info_count: 1 as u32,\n            p_queue_create_infos: queue_create_infos.as_ptr(),\n            enabled_layer_count: 0,\n            pp_enabled_layer_names: ptr::null(),\n            enabled_extension_count: device_extension_names_raw.len() as u32,\n            pp_enabled_extension_names: device_extension_names_raw.as_ptr(),\n            p_enabled_features: ptr::null(),\n        };\n        let device = instance\n            .create_device(physical_device, &amp;device_create_info, None)\n            .unwrap();\n\n        let present_queue = device.get_device_queue(present_queue_family_index, 0);\n\n        let image_available_semaphore_create_info = vk::SemaphoreCreateInfo {\n            s_type: vk::StructureType::SemaphoreCreateInfo,\n            p_next: ptr::null(),\n            flags: Default::default(),\n        };\n        let image_available_semaphore = device\n            .create_semaphore(&amp;image_available_semaphore_create_info, None)\n            .unwrap();\n\n        let render_complete_semaphore_create_info = vk::SemaphoreCreateInfo {\n            s_type: vk::StructureType::SemaphoreCreateInfo,\n            p_next: ptr::null(),\n            flags: Default::default(),\n        };\n        let render_complete_semaphore = device\n            .create_semaphore(&amp;render_complete_semaphore_create_info, None)\n            .unwrap();\n        let swapchain_loader = Swapchain::new(&amp;instance, &amp;device).unwrap();\n\n        let pool_create_info = vk::CommandPoolCreateInfo {\n            s_type: vk::StructureType::CommandPoolCreateInfo,\n            p_next: ptr::null(),\n            flags: vk::CommandPoolCreateFlags::empty(),\n            queue_family_index: present_queue_family_index,\n        };\n\n        device.device_wait_idle().unwrap();\n        let surface_capabilities = surface_loader\n            .get_physical_device_surface_capabilities_khr(physical_device, surface)\n            .unwrap();\n\n        let surface_formats = surface_loader\n            .get_physical_device_surface_formats_khr(physical_device, surface)\n            .unwrap();\n\n        let surface_format =\n            if surface_formats.len() == 1 &amp;&amp; surface_formats[0].format == vk::Format::Undefined {\n                vk::SurfaceFormatKHR {\n                    format: vk::Format::B8g8r8Unorm,\n                    color_space: surface_formats[0].color_space,\n                }\n            } else {\n                match (surface_formats)\n                    .iter()\n                    .find(|&amp;sf| sf.format == vk::Format::B8g8r8Unorm)\n                {\n                    Some(sf) =&gt; sf.clone(),\n                    None =&gt; surface_formats[0].clone(),\n                }\n            };\n\n        let image_extent = match surface_capabilities.current_extent.width {\n            std::u32::MAX =&gt; vk::Extent2D {\n                width: window_width,\n                height: window_height,\n            },\n            _ =&gt; surface_capabilities.current_extent.clone(),\n        };\n\n        let mut image_count = surface_capabilities.min_image_count + 1;\n        if surface_capabilities.max_image_count &gt; 0 &amp;&amp;\n            image_count &gt; surface_capabilities.max_image_count\n        {\n            image_count = surface_capabilities.max_image_count;\n        }\n\n        image_count = image_count;\n\n        let pre_transform = if surface_capabilities\n            .supported_transforms\n            .subset(vk::SURFACE_TRANSFORM_IDENTITY_BIT_KHR)\n        {\n            vk::SURFACE_TRANSFORM_IDENTITY_BIT_KHR\n        } else {\n            surface_capabilities.current_transform\n        };\n\n        let present_modes = surface_loader\n            .get_physical_device_surface_present_modes_khr(physical_device, surface)\n            .unwrap();\n\n        let present_mode = present_modes\n            .iter()\n            .cloned()\n            .find(|&amp;mode| mode == vk::PresentModeKHR::Fifo)\n            .unwrap_or(vk::PresentModeKHR::Fifo);\n\n        let swapchain_create_info = vk::SwapchainCreateInfoKHR {\n            s_type: vk::StructureType::SwapchainCreateInfoKhr,\n            p_next: ptr::null(),\n            flags: Default::default(),\n            surface: surface,\n            min_image_count: image_count,\n            image_color_space: surface_format.color_space,\n            image_format: surface_format.format,\n            image_extent: image_extent,\n            image_usage: vk::IMAGE_USAGE_COLOR_ATTACHMENT_BIT | vk::IMAGE_USAGE_TRANSFER_DST_BIT,\n            image_sharing_mode: vk::SharingMode::Exclusive,\n            pre_transform,\n            composite_alpha: vk::COMPOSITE_ALPHA_OPAQUE_BIT_KHR,\n            present_mode,\n            clipped: 1,\n            old_swapchain: vk::SwapchainKHR::null(),\n            image_array_layers: 1,\n            p_queue_family_indices: ptr::null(),\n            queue_family_index_count: 0,\n        };\n\n        let swapchain = swapchain_loader\n            .create_swapchain_khr(&amp;swapchain_create_info, None)\n            .unwrap();\n\n        let command_pool = device.create_command_pool(&amp;pool_create_info, None).unwrap();\n\n        let command_buffer_allocate_info = vk::CommandBufferAllocateInfo {\n            s_type: vk::StructureType::CommandBufferAllocateInfo,\n            p_next: ptr::null(),\n            command_buffer_count: image_count,\n            command_pool: command_pool,\n            level: vk::CommandBufferLevel::Primary,\n        };\n\n        let command_buffers = device\n            .allocate_command_buffers(&amp;command_buffer_allocate_info)\n            .unwrap();\n\n        let swapchain_images = swapchain_loader\n            .get_swapchain_images_khr(swapchain)\n            .unwrap();\n\n        let command_buffer_begin_info = vk::CommandBufferBeginInfo {\n            s_type: vk::StructureType::CommandBufferBeginInfo,\n            p_next: ptr::null(),\n            p_inheritance_info: ptr::null(),\n            flags: vk::COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT,\n        };\n\n        let subresource_range = vk::ImageSubresourceRange {\n            aspect_mask: vk::IMAGE_ASPECT_COLOR_BIT,\n            base_mip_level: 0,\n            level_count: 1,\n            base_array_layer: 0,\n            layer_count: 1,\n        };\n\n        for (index, swapchain_image) in swapchain_images.iter().enumerate() {\n            let barrier_from_present_to_clear = vk::ImageMemoryBarrier {\n                s_type: vk::StructureType::ImageMemoryBarrier,\n                p_next: ptr::null(),\n                src_access_mask: vk::ACCESS_MEMORY_READ_BIT,\n                dst_access_mask: vk::ACCESS_TRANSFER_WRITE_BIT,\n                old_layout: vk::ImageLayout::Undefined,\n                new_layout: vk::ImageLayout::TransferDstOptimal,\n                src_queue_family_index: vk::VK_QUEUE_FAMILY_IGNORED,\n                dst_queue_family_index: vk::VK_QUEUE_FAMILY_IGNORED,\n                image: *swapchain_image,\n                subresource_range: subresource_range.clone(),\n            };\n\n            let barrier_from_clear_to_present = vk::ImageMemoryBarrier {\n                s_type: vk::StructureType::ImageMemoryBarrier,\n                p_next: ptr::null(),\n                src_access_mask: vk::ACCESS_TRANSFER_WRITE_BIT,\n                dst_access_mask: vk::ACCESS_MEMORY_READ_BIT,\n                old_layout: vk::ImageLayout::TransferDstOptimal,\n                new_layout: vk::ImageLayout::PresentSrcKhr,\n                src_queue_family_index: vk::VK_QUEUE_FAMILY_IGNORED,\n                dst_queue_family_index: vk::VK_QUEUE_FAMILY_IGNORED,\n                image: *swapchain_image,\n                subresource_range: subresource_range.clone(),\n            };\n\n            let command_buffer = command_buffers[index];\n\n            device\n                .begin_command_buffer(command_buffer, &amp;command_buffer_begin_info)\n                .unwrap();\n\n            device.cmd_pipeline_barrier(\n                command_buffer,\n                vk::PIPELINE_STAGE_TRANSFER_BIT,\n                vk::PIPELINE_STAGE_TRANSFER_BIT,\n                vk::DependencyFlags::empty(),\n                &amp;[],\n                &amp;[],\n                &amp;[barrier_from_present_to_clear],\n            );\n\n            let clear_color = vk::ClearColorValue::new_float32([1.0, index as f32 / 4.0, 0.2, 0.0]);\n\n            device.cmd_clear_color_image(\n                command_buffer,\n                *swapchain_image,\n                vk::ImageLayout::TransferDstOptimal,\n                &amp;clear_color,\n                &amp;[subresource_range.clone()],\n            );\n\n            device.cmd_pipeline_barrier(\n                command_buffer,\n                vk::PIPELINE_STAGE_TRANSFER_BIT,\n                vk::PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,\n                vk::DependencyFlags::empty(),\n                &amp;[],\n                &amp;[],\n                &amp;[barrier_from_clear_to_present],\n            );\n\n            device.end_command_buffer(command_buffer).unwrap();\n        }\n\n        events_loop.run_forever(|event| match event {\n            winit::Event::WindowEvent {\n                event: winit::WindowEvent::Closed,\n                ..\n            } =&gt; {\n                device.device_wait_idle().unwrap();\n                device.destroy_semaphore(image_available_semaphore, None);\n                device.destroy_semaphore(render_complete_semaphore, None);\n\n                device.destroy_command_pool(command_pool, None);\n                swapchain_loader.destroy_swapchain_khr(swapchain, None);\n                device.destroy_device(None);\n                surface_loader.destroy_surface_khr(surface, None);\n                debug_report_loader.destroy_debug_report_callback_ext(debug_callback, None);\n                instance.destroy_instance(None);\n                winit::ControlFlow::Break\n            }\n            _ =&gt; {\n                let image_index = swapchain_loader\n                    .acquire_next_image_khr(\n                        swapchain,\n                        std::u64::MAX,\n                        image_available_semaphore,\n                        vk::Fence::null(),\n                    )\n                    .unwrap();\n\n                let present_semaphores = [image_available_semaphore];\n                let render_semaphores = [render_complete_semaphore];\n                let command_buffer = [command_buffers[image_index as usize]];\n\n                let submit_info = [\n                    vk::SubmitInfo {\n                        s_type: vk::StructureType::SubmitInfo,\n                        p_next: ptr::null(),\n                        wait_semaphore_count: present_semaphores.len() as u32,\n                        p_wait_semaphores: present_semaphores.as_ptr(),\n                        p_wait_dst_stage_mask: &amp;vk::PIPELINE_STAGE_TRANSFER_BIT,\n                        command_buffer_count: command_buffer.len() as u32,\n                        p_command_buffers: command_buffer.as_ptr(),\n                        signal_semaphore_count: render_semaphores.len() as u32,\n                        p_signal_semaphores: render_semaphores.as_ptr(),\n                    },\n                ];\n\n                device\n                    .queue_submit(present_queue, &amp;submit_info, vk::Fence::null())\n                    .unwrap();\n\n                let present_info = vk::PresentInfoKHR {\n                    s_type: vk::StructureType::PresentInfoKhr,\n                    p_next: ptr::null(),\n                    wait_semaphore_count: render_semaphores.len() as u32,\n                    p_wait_semaphores: render_semaphores.as_ptr(),\n                    swapchain_count: 1,\n                    p_swapchains: &amp;swapchain,\n                    p_image_indices: &amp;image_index,\n                    p_results: ptr::null_mut(),\n                };\n\n                swapchain_loader\n                    .queue_present_khr(present_queue, &amp;present_info)\n                    .unwrap();\n\n                winit::ControlFlow::Continue\n            }\n        });\n    }\n}\n</code></pre>\n\n<p>It's possible that some of the values could be deallocated too early, or that I'm passing pointers incorrectly, but I can't see where (I'm relatively new to Rust).</p>\n\n<p>Sorry for the code length, I'm not sure how to simplify this example further. The interesting parts are at the bottom where I submit the pipeline barriers and semaphores. The Vulkan SDK I'm using is 1.0.57.0, ash is 0.18.4, winit is 0.7, kernel32-sys is 0.2.2.</p>\n\n<p>I would appreciate any suggestions to go about debugging this as well. I tried (and will keep trying) stepping into the validation layers to check the individual API calls and compare side-by-side, but it wasn't obvious where the difference is introduced.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 67949, "user_id": 297696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/782a7a5f79b342bb12dc0aaae3a0c34d?s=128&d=identicon&r=PG", "display_name": "wkl", "link": "https://stackoverflow.com/users/297696/wkl"}, "edited": false, "score": 3, "creation_date": 1505400097, "post_id": 46221869, "comment_id": 79406955, "body": "To expedite our help: what is your code outputting/what is going wrong?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505400949, "post_id": 46221869, "comment_id": 79407572, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. For example, the vast majority of your <code>main</code> function has no bearing on your question."}], "answers": [{"tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 0, "last_activity_date": 1505478655, "last_edit_date": 1505478655, "creation_date": 1505475451, "answer_id": 46238663, "question_id": 46221869, "link": "https://stackoverflow.com/questions/46221869/how-do-i-write-the-transpose-function-example-from-rust-by-example/46238663#46238663", "title": "How do I write the transpose function example from Rust by Example?", "body": "<p>I don't want to give you the full solution because i would do you a disservice if you're learning Rust.\nThere's a key ingredient that you're missing at this point of the tutorial. Not your fault. </p>\n\n<p>Matrix is a \"tuple struct\" (also sometimes called a newtype) and it's covered in a later section of Rust by example.\nIf you want to peek ahead, in the <a href=\"https://rustbyexample.com/custom_types/structs.html\" rel=\"nofollow noreferrer\">section on structs</a> you'll learn the two pieces you're missing.</p>\n\n<p><strong>Piece one</strong>: <code>struct Matrix(f32, f32, f32, f32);</code> as defined in the tutorial can be destructured in a similar way as the simple tuple.</p>\n\n<p>If you have a <code>let matrix = Matrix(1.1, 1.2, 2.1, 2.2);</code> you can do this to create names for its individual elements:</p>\n\n<pre><code>let Matrix(r1c1, r2c2, r2c1, r2c2) = matrix\n</code></pre>\n\n<p>What you did (<code>matrix.0</code>, <code>matrix.1</code>...) works too, though...</p>\n\n<p><strong>Piece two</strong>. When you want to create a new instance of <code>Matrix</code>, you do <code>Matrix(1.1, 1.2, 2.1, 2.2)</code>. From your attempt at writing transpose you're trying to return a tuple, but a tuple struct like <code>Matrix</code> is a different, incompatible type (that's why it's also called a \"newtype\")</p>\n"}, {"tags": [], "owner": {"reputation": 359, "user_id": 706495, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/873ec31f6bf9b96a77768f01fe3b9cb3?s=128&d=identicon&r=PG", "display_name": "Mike", "link": "https://stackoverflow.com/users/706495/mike"}, "is_accepted": false, "score": 0, "last_activity_date": 1538827753, "last_edit_date": 1538827753, "creation_date": 1538824214, "answer_id": 52678442, "question_id": 46221869, "link": "https://stackoverflow.com/questions/46221869/how-do-i-write-the-transpose-function-example-from-rust-by-example/52678442#52678442", "title": "How do I write the transpose function example from Rust by Example?", "body": "<p>Using <code>reverse</code> as the example says and rewriting the <code>reverse</code> function to accept <code>f32</code>,</p>\n\n<pre><code>fn reverse(pair: (f32, f32)) -&gt; (f32, f32) {\n    let (a, b) = pair;\n    (b, a)\n}\n\nfn transpose(mat: Matrix) -&gt; Matrix {\n    let (a, b) = reverse((mat.1, mat.2));\n    Matrix(mat.0, a, b, mat.3)\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 7422786, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0e6d8e18bf7bb5e9dcd5bc47b7c598c?s=128&d=identicon&r=PG&f=1", "display_name": "Xavier Belenus", "link": "https://stackoverflow.com/users/7422786/xavier-belenus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1113, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1538827753, "creation_date": 1505399711, "last_edit_date": 1505479975, "question_id": 46221869, "link": "https://stackoverflow.com/questions/46221869/how-do-i-write-the-transpose-function-example-from-rust-by-example", "title": "How do I write the transpose function example from Rust by Example?", "body": "<p>I'm following the Rust by Example tutorial and am on the second part of the <a href=\"https://rustbyexample.com/primitives/tuples.html\" rel=\"nofollow noreferrer\">Tuples activity</a> which is to add a <code>transpose</code> function using the <code>reverse</code> function as a template. This will accept a matrix as an argument and return a matrix in which two elements have been swapped. For example:</p>\n\n<pre><code>println!(\"Matrix:\\n{}\", matrix);\nprintln!(\"Transpose:\\n{}\", transpose(matrix));\n</code></pre>\n\n<p>Expected results:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Input Matrix:\n( 1.1 1.2 2.1 2.2 )\nTransposed output:\n( 1.1 2.1 1.2 2.2 )\n</code></pre>\n\n<p>I can't find the right code, here is what I'm trying:</p>\n\n<pre><code>// this is defined in the tutorial\n#[derive(Debug)]\nstruct Matrix(f32, f32, f32, f32);\n\n// this is my attempt that does not compile\nfn transpose(maat: Matrix) -&gt; (Matrix) {\n    let matrix = maat;\n    (matrix.0, matrix.2, matrix.1, matrix.3)\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 15768, "user_id": 3122885, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/fe1eced7899a319fb446e04b63ac7eea?s=128&d=identicon&r=PG&f=1", "display_name": "octavian", "link": "https://stackoverflow.com/users/3122885/octavian"}, "edited": false, "score": 0, "creation_date": 1505395442, "post_id": 46219386, "comment_id": 79403312, "body": "Is there any quick fix in the code for this? Maybe specify somewhere <code>64</code> rather than <code>32</code> or viceversa?"}, {"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "reply_to_user": {"reputation": 15768, "user_id": 3122885, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/fe1eced7899a319fb446e04b63ac7eea?s=128&d=identicon&r=PG&f=1", "display_name": "octavian", "link": "https://stackoverflow.com/users/3122885/octavian"}, "edited": false, "score": 0, "creation_date": 1505396238, "post_id": 46219386, "comment_id": 79403994, "body": "try build a 32bits binary : using rustup default stable-i686.  You still can, of course change ::std::mem::transmute(tenv) to ::std::mem::transmute(tenv as i64), but IDK if it&#39;s valid :D"}, {"owner": {"reputation": 15768, "user_id": 3122885, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/fe1eced7899a319fb446e04b63ac7eea?s=128&d=identicon&r=PG&f=1", "display_name": "octavian", "link": "https://stackoverflow.com/users/3122885/octavian"}, "edited": false, "score": 0, "creation_date": 1505396891, "post_id": 46219386, "comment_id": 79404505, "body": "Running <code>rustup default stable-i686</code> results in this <code>thread &#39;main&#39; panicked at &#39;Unable to find libclang: &quot;the `libclang` shared library could not be opened: &#47;usr&#47;local&#47;opt&#47;llvm&#47;lib&#47;libclang.dylib&quot;&#39;</code>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15768, "user_id": 3122885, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/fe1eced7899a319fb446e04b63ac7eea?s=128&d=identicon&r=PG&f=1", "display_name": "octavian", "link": "https://stackoverflow.com/users/3122885/octavian"}, "edited": false, "score": 1, "creation_date": 1505399366, "post_id": 46219386, "comment_id": 79406410, "body": "@octavian: The quickest fix would be to fork the crate (its code is likely on github), patch it with <code>isize</code> instead of <code>i32</code> and then use your local fork until your PR is merged into the official one."}], "tags": [], "owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "is_accepted": false, "score": 1, "last_activity_date": 1505397920, "last_edit_date": 1505397920, "creation_date": 1505392605, "answer_id": 46219386, "question_id": 46217914, "link": "https://stackoverflow.com/questions/46217914/transmute-called-with-types-of-different-sizes/46219386#46219386", "title": "transmute called with types of different sizes", "body": "<p>The target type is a pointer, so it's architecture specific: 32 bits on a 32-bit platform, 64 bits on a 64-bit platform. <code>usize</code> and <code>isize</code> can be used in for this case.</p>\n\n<p>If it's not your code, you should open an issue on the original repository.</p>\n\n<p>You could try to build a 32-bit binary, using <code>rustup default stable-i686</code></p>\n\n<blockquote>\n  <p>how does <code>transmute</code> know what type to convert the variable that's given to it? <code>::std::mem::transmute(tenv)</code> takes only one argument, so how does it know both the source type and the destination type?</p>\n</blockquote>\n\n<p>Rust infers the source and target type from the context, in the same way <code>Iterator::collect</code> does.</p>\n"}], "owner": {"reputation": 15768, "user_id": 3122885, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/fe1eced7899a319fb446e04b63ac7eea?s=128&d=identicon&r=PG&f=1", "display_name": "octavian", "link": "https://stackoverflow.com/users/3122885/octavian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 432, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1505397920, "creation_date": 1505388563, "last_edit_date": 1505397821, "question_id": 46217914, "link": "https://stackoverflow.com/questions/46217914/transmute-called-with-types-of-different-sizes", "title": "transmute called with types of different sizes", "body": "<p>I'm trying to build a Rust project with <code>cargo build</code> but I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0512]: transmute called with types of different sizes\n   |\n90 |     ::std::mem::transmute(tenv)\n   |     ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: source type: i32 (32 bits)\n   = note: target type: *mut traction::Environment&lt;JNIPlatform&lt;'a&gt;, std::string::String&gt; (64 bits)\n</code></pre>\n\n<p>The code on which this breaks is this:</p>\n\n<pre><code>let tenv = env.get_field_unsafe(obj, JFieldID::from(field), jni::signature::JavaType::Primitive(jni::signature::Primitive::Int)).unwrap_alog().i().unwrap();\n::std::mem::transmute(tenv)\n</code></pre>\n\n<p>I have no knowledge of Rust so I can only guess what this does.</p>\n\n<p>Since this is a type conversion issue I'm assuming this has something to do with my operating system. Other people who cloned the same repository didn't have any issue like this (both on macOS and Windows). I have macOS Sierra 10.12.6.</p>\n\n<p>Another question: how does <code>transmute</code> know what type to convert the variable that's given to it? <code>::std::mem::transmute(tenv)</code> takes only one argument, so how does it know both the source type and the destination type?</p>\n"}, {"tags": ["rust", "rpc"], "answers": [{"tags": [], "owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "is_accepted": false, "score": 1, "last_activity_date": 1505378469, "creation_date": 1505378469, "answer_id": 46214368, "question_id": 46213803, "link": "https://stackoverflow.com/questions/46213803/can-i-connect-to-a-tarpc-rpc-service-without-using-anything-but-the-address-from/46214368#46214368", "title": "Can I connect to a Tarpc RPC Service without using anything but the address from the server?", "body": "<p>Using tokio, you need a reactor to run your async client.\nI don't think you need to use the same reactor as the server, but you can have only one reactor per thread.</p>\n\n<p>So you can spawn a client thread, or even build a different binary for your client.</p>\n\n<p>You will have to get server address in another way, but that shouldn't be too hard ;)</p>\n"}], "owner": {"reputation": 21, "user_id": 8607704, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ibEGy.jpg?s=128&g=1", "display_name": "Rusty Patrick", "link": "https://stackoverflow.com/users/8607704/rusty-patrick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1505398083, "creation_date": 1505376607, "last_edit_date": 1505398083, "question_id": 46213803, "link": "https://stackoverflow.com/questions/46213803/can-i-connect-to-a-tarpc-rpc-service-without-using-anything-but-the-address-from", "title": "Can I connect to a Tarpc RPC Service without using anything but the address from the server?", "body": "<p>I am using <a href=\"https://github.com/google/tarpc\" rel=\"nofollow noreferrer\">Tarpc</a>. </p>\n\n<p><strong>Client</strong></p>\n\n<pre><code>let (_, mut auth_reactor) = auth::spawn_server(auth_server_address);\nlet auth_client: auth::FutureClient = auth_reactor\n    .run(auth::FutureClient::connect(\n        auth_server_address,\n        client::Options::default(),\n    ))\n    .unwrap();\n\nauth_reactor\n    .run(\n        auth_client\n            .authme(byte_vector_auth.clone())\n            .map_err(|e| println!(\"{}\", e))\n            .and_then(|i| {\n                println!(\"{:?}\", i);\n                Ok(())\n            }),\n    )\n    .unwrap();\n</code></pre>\n\n<p><strong>Server</strong></p>\n\n<pre><code>pub fn spawn_server(address: SocketAddr) -&gt; (server::Handle, reactor::Core) {\n    let reactor = reactor::Core::new().unwrap();\n    client::Options::default().handle(reactor.handle());\n    let (auth_handler, server) = AuthServer\n        .listen(address, &amp;reactor.handle(), server::Options::default())\n        .unwrap();\n    reactor.handle().spawn(server);\n    return (auth_handler, reactor);\n}\n</code></pre>\n\n<p>I'm returning the reactor because I need it for the client.</p>\n"}]