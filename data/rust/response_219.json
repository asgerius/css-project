[{"tags": ["rust", "metaprogramming", "rust-proc-macros"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1553269912, "post_id": 55271857, "comment_id": 97335199, "body": "One way to achieve a similar effect by relying on the actual type system might be to connect <code>Option&lt;T&gt;</code> back to <code>T</code> by using a trait, for example: <code>impl&lt;T&gt; MyTrait for Option&lt;T&gt; { type Assoc = T; }</code>. Then your macro can expand to <code>set_bar(&amp;mut self, v: &lt;Option&lt;String&gt; as MyTrait&gt;::Assoc)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "edited": false, "score": 0, "creation_date": 1553162665, "post_id": 55277337, "comment_id": 97285723, "body": "Thank you, but just to say that <code>typepath.path.is_ident(&quot;Option&quot;)</code> is <code>false</code>. <code>is_ident</code> checks for <code>self.leading_colon.is_none() &amp;&amp; self.segments.len() == 1 &amp;&amp; self.segments[0].arguments.is_none() &amp;&amp; self.segments[0].ident == ident</code> and <code>self.segments[0].arguments.is_none()</code> is <code>false</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "edited": false, "score": 0, "creation_date": 1553163379, "post_id": 55277337, "comment_id": 97286102, "body": "@\u0110or\u0111eZelji\u0107 I think that&#39;s better now. Once again, I cannot test it right now. Also, this can be refactored to be nicer, but I give you a general idea of how to do it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553176202, "post_id": 55277337, "comment_id": 97293664, "body": "<i>You cannot handle those arbitrary names</i> \u2014 this is the true key."}, {"owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "edited": false, "score": 0, "creation_date": 1603102487, "post_id": 55277337, "comment_id": 113920246, "body": "@Boiethios would this be easier with <code>syn::visit</code>?"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1553176180, "last_edit_date": 1553176180, "creation_date": 1553160842, "answer_id": 55277337, "question_id": 55271857, "link": "https://stackoverflow.com/questions/55271857/how-can-i-get-the-t-from-an-optiont-when-using-syn/55277337#55277337", "title": "How can I get the T from an Option&lt;T&gt; when using syn?", "body": "<p>You should do something like this untested example:</p>\n\n<pre><code>use syn::{GenericArgument, PathArguments, Type};\n\nfn extract_type_from_option(ty: &amp;Type) -&gt; Type {\n    fn path_is_option(path: &amp;Path) -&gt; bool {\n        leading_colon.is_none()\n            &amp;&amp; path.segments.len() == 1\n            &amp;&amp; path.segments.iter().next().unwrap().ident == \"Option\"\n    }\n\n    match ty {\n        Type::Path(typepath) if typepath.qself.is_none() &amp;&amp; path_is_option(typepath.path) =&gt; {\n            // Get the first segment of the path (there is only one, in fact: \"Option\"):\n            let type_params = typepath.path.segments.iter().first().unwrap().arguments;\n            // It should have only on angle-bracketed param (\"&lt;String&gt;\"):\n            let generic_arg = match type_params {\n                PathArguments::AngleBracketed(params) =&gt; params.args.iter().first().unwrap(),\n                _ =&gt; panic!(\"TODO: error handling\"),\n            };\n            // This argument must be a type:\n            match generic_arg {\n                GenericArgument::Type(ty) =&gt; ty,\n                _ =&gt; panic!(\"TODO: error handling\"),\n            }\n        }\n        _ =&gt; panic!(\"TODO: error handling\"),\n    }\n}\n</code></pre>\n\n<p>There's not many things to explain, it just \"unrolls\" the diverse components of a type:</p>\n\n<p><code>Type</code> -> <code>TypePath</code> -> <code>Path</code> -> <code>PathSegment</code> -> <code>PathArguments</code> -> <code>AngleBracketedGenericArguments</code> -> <code>GenericArgument</code> -> <code>Type</code>.</p>\n\n<p>If there is an easier way to do that, I would be happy to know it.</p>\n\n<hr>\n\n<p>Note that since <code>syn</code> is a parser, it works with tokens. You cannot know for sure that this is an <code>Option</code>. The user could, for example, type <code>std::option::Option</code>, or write <code>type MaybeString = std::option::Option&lt;String&gt;;</code>. You cannot handle those arbitrary names.</p>\n"}, {"tags": [], "owner": {"reputation": 1132, "user_id": 469066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4e60024c0f6cba6a076bc41bf481024?s=128&d=identicon&r=PG", "display_name": "David Bernard", "link": "https://stackoverflow.com/users/469066/david-bernard"}, "is_accepted": false, "score": 4, "last_activity_date": 1558554845, "last_edit_date": 1558554845, "creation_date": 1558554702, "answer_id": 56264023, "question_id": 55271857, "link": "https://stackoverflow.com/questions/55271857/how-can-i-get-the-t-from-an-optiont-when-using-syn/56264023#56264023", "title": "How can I get the T from an Option&lt;T&gt; when using syn?", "body": "<p>My updated version of <a href=\"https://stackoverflow.com/a/55277337/155423\">the response from @French Boiethios</a>, tested and used in a public crate, with support of several syntaxes for <code>Option</code>:</p>\n\n<ul>\n<li><code>Option</code></li>\n<li><code>std::option::Option</code></li>\n<li><code>::std::option::Option</code></li>\n<li><code>core::option::Option</code></li>\n<li><code>::core::option::Option</code></li>\n</ul>\n\n<pre><code>fn extract_type_from_option(ty: &amp;syn::Type) -&gt; Option&lt;&amp;syn::Type&gt; {\n    use syn::punctuated::Pair;\n    use syn::token::Colon2;\n    use syn::{GenericArgument, Path, PathArguments, PathSegment};\n\n    fn extract_type_path(ty: &amp;syn::Type) -&gt; Option&lt;&amp;Path&gt; {\n        match *ty {\n            syn::Type::Path(ref typepath) if typepath.qself.is_none() =&gt; Some(&amp;typepath.path),\n            _ =&gt; None,\n        }\n    }\n\n    // TODO store (with lazy static) the vec of string\n    // TODO maybe optimization, reverse the order of segments\n    fn extract_option_segment(path: &amp;Path) -&gt; Option&lt;Pair&lt;&amp;PathSegment, &amp;Colon2&gt;&gt; {\n        let idents_of_path = path\n            .segments\n            .iter()\n            .into_iter()\n            .fold(String::new(), |mut acc, v| {\n                acc.push_str(&amp;v.ident.to_string());\n                acc.push('|');\n                acc\n            });\n        vec![\"Option|\", \"std|option|Option|\", \"core|option|Option|\"]\n            .into_iter()\n            .find(|s| &amp;idents_of_path == *s)\n            .and_then(|_| path.segments.last())\n    }\n\n    extract_type_path(ty)\n        .and_then(|path| extract_option_segment(path))\n        .and_then(|pair_path_segment| {\n            let type_params = &amp;pair_path_segment.into_value().arguments;\n            // It should have only on angle-bracketed param (\"&lt;String&gt;\"):\n            match *type_params {\n                PathArguments::AngleBracketed(ref params) =&gt; params.args.first(),\n                _ =&gt; None,\n            }\n        })\n        .and_then(|generic_arg| match *generic_arg.into_value() {\n            GenericArgument::Type(ref ty) =&gt; Some(ty),\n            _ =&gt; None,\n        })\n}\n</code></pre>\n"}], "owner": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1882, "favorite_count": 1, "accepted_answer_id": 55277337, "answer_count": 2, "score": 5, "last_activity_date": 1558554845, "creation_date": 1553126204, "last_edit_date": 1553176093, "question_id": 55271857, "link": "https://stackoverflow.com/questions/55271857/how-can-i-get-the-t-from-an-optiont-when-using-syn", "title": "How can I get the T from an Option&lt;T&gt; when using syn?", "body": "<p>I'm using <code>syn</code> to parse Rust code. When I read a named field's type using <code>field.ty</code>, I get a <code>syn::Type</code>. When I print it using <code>quote!{#ty}.to_string()</code> I get <code>\"Option&lt;String&gt;\"</code>. </p>\n\n<p>How can I get just <code>\"String\"</code>? I want to use <code>#ty</code> in <code>quote!</code> to print <code>\"String\"</code> instead of <code>\"Option&lt;String&gt;\"</code>.</p>\n\n<p>I want to generate code like:</p>\n\n<pre><code>impl Foo {\n    pub set_bar(&amp;mut self, v: String) {\n        self.bar = Some(v);\n    }\n}\n</code></pre>\n\n<p>starting from</p>\n\n<pre><code>struct Foo {\n    bar: Option&lt;String&gt;\n}\n</code></pre>\n\n<p>My attempt:</p>\n\n<pre><code>let ast: DeriveInput = parse_macro_input!(input as DeriveInput);\n\nlet data: Data = ast.data;\n\nmatch data {\n    Data::Struct(ref data) =&gt; match data.fields {\n        Fields::Named(ref fields) =&gt; {\n\n            fields.named.iter().for_each(|field| {\n                let name = &amp;field.ident.clone().unwrap();\n\n                let ty = &amp;field.ty;\n                quote!{\n                    impl Foo {\n                        pub set_bar(&amp;mut self, v: #ty) {\n                            self.bar = Some(v);\n                        }\n                    }\n                };      \n            });\n        }\n        _ =&gt; {}\n    },\n    _ =&gt; panic!(\"You can derive it only from struct\"),\n}\n</code></pre>\n"}, {"tags": ["cmake", "rust", "rust-cargo", "visual-studio-2017-build-tools"], "comments": [{"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1553148149, "post_id": 55270829, "comment_id": 97279597, "body": "Maybe you need to install <code>pkg-config</code>?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1553153279, "post_id": 55270829, "comment_id": 97281271, "body": "<i>&quot;is <code>cmake</code> not installed?&quot;</i>? What does happen if you run the command in a terminal (e.g. powershell)?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1553153345, "post_id": 55270829, "comment_id": 97281299, "body": "I&#39;m not sure what exactly is included in &quot;Visual C++ tools for CMake&quot;, but are you sure that <a href=\"https://www.cmake.org/\" rel=\"nofollow noreferrer\">cmake</a> itself is installed? What happens if you run <code>cmake --version</code>?"}, {"owner": {"reputation": 2209, "user_id": 5246900, "user_type": "registered", "accept_rate": 15, "profile_image": "https://www.gravatar.com/avatar/00303a968628b3aa8ab8d648747b8157?s=128&d=identicon&r=PG&f=1", "display_name": "mr.boris", "link": "https://stackoverflow.com/users/5246900/mr-boris"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1553206871, "post_id": 55270829, "comment_id": 97309420, "body": "@Jmb as it turned out &quot;Visual C++ tools for CMake&quot; option does include CMake during the installation proccess of Visual Studio Build Tools but you have to add CMake bin folder to PATH variables manually after installation is complete."}], "answers": [{"comments": [{"owner": {"reputation": 367, "user_id": 9466638, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Tgag8QP-4Xg/AAAAAAAAAAI/AAAAAAAABkY/04NueYDlkV4/photo.jpg?sz=128", "display_name": "Eugene Kortov", "link": "https://stackoverflow.com/users/9466638/eugene-kortov"}, "edited": false, "score": 1, "creation_date": 1587156014, "post_id": 55290090, "comment_id": 108408783, "body": "This path can change so in 2019 community it looks like <code>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft&zwnj;&#8203;\\CMake\\CMake\\bin</code>"}], "tags": [], "owner": {"reputation": 2209, "user_id": 5246900, "user_type": "registered", "accept_rate": 15, "profile_image": "https://www.gravatar.com/avatar/00303a968628b3aa8ab8d648747b8157?s=128&d=identicon&r=PG&f=1", "display_name": "mr.boris", "link": "https://stackoverflow.com/users/5246900/mr-boris"}, "is_accepted": true, "score": 12, "last_activity_date": 1553207003, "last_edit_date": 1553207003, "creation_date": 1553206681, "answer_id": 55290090, "question_id": 55270829, "link": "https://stackoverflow.com/questions/55270829/rust-on-windows-cmake-issue/55290090#55290090", "title": "Rust on Windows CMake issue", "body": "<p>I solved it by adding CMake bin into the PATH variables. Just searched for <code>cmake.exe</code> file or <code>CMake</code> folder in recently installed Visual Studio Build Tools directory and found <code>cmake.exe</code></p>\n\n<p>For me it was <code>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin</code></p>\n\n<p>So that I didn't have to install CMake separately.</p>\n\n<p>Also I added Windows 10 SDK checkbox during installation procces of Visual Studio Build Tools.</p>\n\n<p>Now there is no errors while building my project. I hope this helps someone.</p>\n"}], "owner": {"reputation": 2209, "user_id": 5246900, "user_type": "registered", "accept_rate": 15, "profile_image": "https://www.gravatar.com/avatar/00303a968628b3aa8ab8d648747b8157?s=128&d=identicon&r=PG&f=1", "display_name": "mr.boris", "link": "https://stackoverflow.com/users/5246900/mr-boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2028, "favorite_count": 0, "accepted_answer_id": 55290090, "answer_count": 1, "score": 6, "last_activity_date": 1553207003, "creation_date": 1553119354, "last_edit_date": 1553152317, "question_id": 55270829, "link": "https://stackoverflow.com/questions/55270829/rust-on-windows-cmake-issue", "title": "Rust on Windows CMake issue", "body": "<p>I've installed Rust with <code>rustup-init.exe</code> on my PC (Windows 10 Pro) and then Microsoft Visual C++ Build Tools 2017 with Visual C++ tools for CMake option.</p>\n\n<p>For simple example there is no problems:</p>\n\n<pre><code>fn main() {\n   println!(\"Hello world!\");\n}\n</code></pre>\n\n<p>I execute <code>cargo run</code> command and as a result I get <code>Hello world!</code> as expected.</p>\n\n<hr>\n\n<p>But now I want to check out <a href=\"https://azul.rs/\" rel=\"noreferrer\">Azul GUI framework</a></p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate azul;\n\nfn main() {\n   println!(\"Hello world!\");\n}\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"my_first_azul_app\"\nversion = \"0.1.0\"\nauthors = [\"Author\"]\nedition = \"2018\"\n\n[dependencies]\nazul = { git = \"https://github.com/maps4print/azul\" }\n</code></pre>\n\n<p>When I execute <code>cargo run</code> command an error occurs:</p>\n\n<pre><code>...\n\nerror: failed to run custom build command for `harfbuzz-sys v0.3.0 (https://github.com/maps4print/azul-dependencies?rev=c1548977fb62399f39aa642d2e7e24a24a25246e#c1548977)`\nprocess didn't exit successfully: `C:\\Users\\admin\\Documents\\Rust\\Projects\\my_first_azul_app\\target\\debug\\build\\harfbuzz-sys-37196527d1c78dd0\\build-script-build` (exit code: 101)\n--- stdout\ncargo:rerun-if-env-changed=HARFBUZZ_SYS_NO_PKG_CONFIG\nrunning: \"cmake\" \"C:\\\\Users\\\\admin\\\\.cargo\\\\git\\\\checkouts\\\\azul-dependencies-70bb1f94316762f9\\\\c154897\\\\harfbuzz-sys-0.3.0\\\\harfbuzz\" \"-G\" \"Visual Studio 15 2017 Win64\" \"-Thost=x64\" \"-DCMAKE_INSTALL_PREFIX=C:\\\\Users\\\\admin\\\\Documents\\\\Rust\\\\Projects\\\\my_first_azul_app\\\\target\\\\debug\\\\build\\\\harfbuzz-sys-9193f770b45e8642\\\\out\" \"-DCMAKE_C_FLAGS= /nologo /MD\" \"-DCMAKE_C_FLAGS_DEBUG= /nologo /MD\" \"-DCMAKE_CXX_FLAGS= /nologo /MD\" \"-DCMAKE_CXX_FLAGS_DEBUG= /nologo /MD\" \"-DCMAKE_BUILD_TYPE=Debug\"\n\n--- stderr\nthread 'main' panicked at '\nfailed to execute command: cannot find the file specified. (os error 2)\nis `cmake` not installed?\n\n...\n</code></pre>\n\n<hr>\n\n<p>How to fix this issue with CMake and Rust? Should I specify CMake path or so?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553112519, "post_id": 55268021, "comment_id": 97269768, "body": "See also <a href=\"https://stackoverflow.com/q/39638363/155423\">How can I use a HashMap with f64 as key in Rust?</a>; <a href=\"https://stackoverflow.com/q/28247990/155423\">How to do a binary search on a Vec of floats?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 0, "creation_date": 1553110579, "post_id": 55268778, "comment_id": 97268825, "body": "One last thing - the floating-point types (<code>f32</code>&amp; <code>f64</code>) don&#39;t implement <code>Eq</code> or <code>Hash</code> - <code>Eq</code>, because <code>NaN</code> is not equal to any number or itself; and <code>Hash</code> because there is no consensus on how to deal with +/-0, NaN, denormals, and there are issues with different bitwise representations (which may hash differently) representing the same number."}], "tags": [], "owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "is_accepted": true, "score": 1, "last_activity_date": 1553112394, "last_edit_date": 1553112394, "creation_date": 1553110052, "answer_id": 55268778, "question_id": 55268021, "link": "https://stackoverflow.com/questions/55268021/can-i-specialise-a-trait-on-a-nested-type/55268778#55268778", "title": "Can I specialise a trait on a nested type?", "body": "<p>It seems like you want a different implementation of <code>Monotonic&lt;T&gt;</code>, where the collection is not a <code>Vec</code> - that's not possible with the way you have currently defined <code>Monotonic</code>. You could, instead, create another type <code>MonotonicHashSet&lt;T&gt;</code>, and use <code>HashSet</code> as the backing collection.</p>\n\n<p>If, instead, you would like to make <code>Monotonic</code> accept different collection types, then you may want to also genericize it over the collection type. This, however, could get complicated quickly. In Rust, the properties we generally associate with collections are split across several traits, defined in the <a href=\"https://doc.rust-lang.org/std/iter/index.html\" rel=\"nofollow noreferrer\"><code>iter</code> module</a>. They're split up so that each collection type can define it's behavior granularly and correctly for whatever constraints the collection has. So, for your <code>Monotonic</code> and <code>LastTick</code> types, it's important to consider what requirements you might have, and what traits that means you will require for collections to be used with that type.</p>\n\n<p>One last note: While <code>Vec</code> accepts any type <code>T</code>, a <code>HashSet</code> requires total equality from the <code>Eq</code> trait, and hashability, through the <code>Hash</code> trait. These different requirements are worth considering, because unlike, for example, C#, Rust does not provide default implementations of these operations for all types - you have to provide them or <a href=\"https://doc.rust-lang.org/book/appendix-03-derivable-traits.html\" rel=\"nofollow noreferrer\"><code>#[derive()]</code> them</a>.</p>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "accepted_answer_id": 55268778, "answer_count": 1, "score": 0, "last_activity_date": 1553112394, "creation_date": 1553107281, "last_edit_date": 1553112249, "question_id": 55268021, "link": "https://stackoverflow.com/questions/55268021/can-i-specialise-a-trait-on-a-nested-type", "title": "Can I specialise a trait on a nested type?", "body": "<p>I have a queue <code>Strategy</code> trait with implementations for <code>Monotonic</code> and <code>LastTick</code> parameterised on the type I want to insert:</p>\n\n<pre><code>struct Monotonic&lt;T&gt; {\n    items: Vec&lt;T&gt;,\n}\nstruct LastTick&lt;T&gt; {\n    items: Vec&lt;T&gt;,\n}\n\nstruct SetDelta;\n\ntrait Strategy&lt;T&gt; {\n    type T;\n    fn enqueue(&amp;mut self, v: T);\n    fn has_pending(&amp;self) -&gt; bool;\n}\n\nimpl&lt;T&gt; Strategy&lt;T&gt; for Monotonic&lt;T&gt; {\n    type T = Self;\n    fn enqueue(&amp;mut self, v: T) {\n        self.items.push(v);\n    }\n    fn has_pending(&amp;self) -&gt; bool {\n        !self.items.is_empty()\n    }\n}\n\nimpl&lt;T&gt; Strategy&lt;T&gt; for LastTick&lt;T&gt; {\n    type T = Self;\n    fn enqueue(&amp;mut self, v: T) {\n        self.items.push(v);\n    }\n    fn has_pending(&amp;self) -&gt; bool {\n        !self.items.is_empty()\n    }\n}\n\nimpl&lt;T&gt; Strategy&lt;T&gt; for LastTick&lt;T&gt; {\n    type T = Self;\n    fn enqueue(&amp;mut self, v: T) {\n        self.items.push(v);\n    }\n    fn has_pending(&amp;self) -&gt; bool {\n        !self.items.is_empty()\n    }\n}\n\nimpl&lt;T&gt; LastTick&lt;T&gt; {\n    fn new() -&gt; Self {\n        LastTick { items: Vec::new() }\n    }\n}\nimpl&lt;T&gt; Monotonic&lt;T&gt; {\n    fn new() -&gt; Self {\n        Monotonic { items: Vec::new() }\n    }\n}\n\n#[test]\nfn monotonic_scalar_queue() {\n    let mut a = Monotonic::&lt;f64&gt;::new();\n    a.enqueue(123.4);\n    assert!(a.has_pending());\n}\n\n#[test]\nfn monotonic_list_queue() {\n    let mut a = Monotonic::&lt;[f64; 3]&gt;::new();\n    a.enqueue([123.4, 345.8, 324.1]);\n    assert!(a.has_pending());\n}\n\n#[test]\nfn monotonic_tuple_queue() {\n    let mut a = Monotonic::&lt;(f64, String, u32)&gt;::new();\n    a.enqueue((123.4, \"hello\".into(), 324));\n    assert!(a.has_pending());\n}\n</code></pre>\n\n<p>The above work fine. I want to keep the same interface for a <code>HashSet</code> where the behaviour is slightly different.</p>\n\n<pre><code>#[test]\nfn monotonic_set_queue() {\n    let mut a = Monotonic::&lt;HashSet&lt;f64&gt;&gt;::new();\n    // I want to insert a f64 and implement the logic of the hashset in\n    // the implementation, but it expects a new HashSet\n    a.enqueue(123.4);\n    assert!(a.has_pending());\n}\n</code></pre>\n\n<p>I tried</p>\n\n<pre><code>impl&lt;T&gt; Strategy&lt;T&gt; for Monotonic&lt;HashSet&lt;f64&gt;&gt; {\n    type T = Self;\n    fn enqueue(&amp;mut self, v: T) {\n        self.items.push(v);\n    }\n    fn has_pending(&amp;self) -&gt; bool {\n        !self.items.is_empty()\n    }\n}\n</code></pre>\n\n<p>and also</p>\n\n<pre><code>impl Strategy&lt;f64&gt; for Monotonic&lt;f64&gt; {\n    type T = HashSet&lt;f64&gt;;\n    fn enqueue(&amp;mut self, v: f64) {\n        self.items.push(v);\n    }\n    fn has_pending(&amp;self) -&gt; bool {\n        !self.items.is_empty()\n    }\n}\n</code></pre>\n\n<p>with different results, but no luck. Is there a way to specify this easily?</p>\n"}, {"tags": ["rust", "serde", "toml"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553106089, "post_id": 55267317, "comment_id": 97266550, "body": "See also <a href=\"https://stackoverflow.com/q/55245914/155423\">How to use Serde to parse a YAML file with multiple different types?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553106146, "post_id": 55267317, "comment_id": 97266581, "body": "Exactly what Rust type do you expect <code>{1, true}</code> to deserialize to? It doesn&#39;t even appear to be valid TOML."}, {"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553272462, "post_id": 55267317, "comment_id": 97336608, "body": "No, it&#39;s probably not. I wanted to basically supply either a value (is a json value in fact) or a value and a boolean... Arrays can be mixed. I eventually had to work around it using an untagged enum which ended up more verbose than I wanted, but it works."}], "owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 580, "favorite_count": 0, "closed_date": 1553106014, "answer_count": 0, "score": 0, "last_activity_date": 1553106031, "creation_date": 1553104566, "last_edit_date": 1553105962, "question_id": 55267317, "link": "https://stackoverflow.com/questions/55267317/how-to-express-this-toml-format-in-serde", "closed_reason": "Duplicate", "title": "How to express this TOML format in Serde", "body": "<p>I have a Rust structure that I can deserialize:</p>\n\n<pre><code>pub struct ProcessReference {\n    pub alias: Name,\n    pub source: String,\n    #[serde(rename = \"input\")]\n    pub initializations: Option&lt;HashMap&lt;String, JsonValue&gt;&gt;,\n}\n</code></pre>\n\n<p>where <code>input</code> is optional. This accepts TOML formats:</p>\n\n<pre><code>[[process]]\nalias = \"other\"\nsource = \"other.toml\"\n</code></pre>\n\n<p>or</p>\n\n<pre><code>[[process]]\nalias = \"other\"\nsource = \"other.toml\"\ninput.input1 = 1\n</code></pre>\n\n<p>I would like to have the <code>input</code> be extendable with a second value, not just the <code>JsonValue</code>, so that this could also be deserialized:</p>\n\n<pre><code>[[process]]\nalias = \"other\"\nsource = \"other.toml\"\ninput.input1 = {1, true}\n</code></pre>\n\n<p>similar to that used by Cargo for dependencies:</p>\n\n<pre><code>[dependencies]\nflowrlib = { path = \"../flowrlib\", version = \"~0.7.0\" }\nyaml-rust = \"~0.3.5\"\n</code></pre>\n\n<p>How can I express that in Serde?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1730, "user_id": 2383477, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/yozFQ.jpg?s=128&g=1", "display_name": "Nathan Lafferty", "link": "https://stackoverflow.com/users/2383477/nathan-lafferty"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1553102267, "post_id": 55266061, "comment_id": 97264602, "body": "Assuming I want to implement add, mult, divide, sub for reference and ownership (&amp;Vec, Vec) means 8 functions. Doing all of that twice for LHS and RHS means 16. Its not hard, just boilerplate."}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 2, "creation_date": 1553102385, "post_id": 55266061, "comment_id": 97264668, "body": "You could probably write a <a href=\"https://doc.rust-lang.org/book/macros.html\" rel=\"nofollow noreferrer\">macro</a> that expands to both implementations"}, {"owner": {"reputation": 1730, "user_id": 2383477, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/yozFQ.jpg?s=128&g=1", "display_name": "Nathan Lafferty", "link": "https://stackoverflow.com/users/2383477/nathan-lafferty"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1553102874, "post_id": 55266061, "comment_id": 97264921, "body": "@apemanzilla, wouldn&#39;t that require me to use the macro inline where I want to use it? <code>let result = vecadd!(0.5, my_vec_3)</code>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1553103489, "post_id": 55266061, "comment_id": 97265261, "body": "Example of implementing numeric traits with a macro:  <a href=\"https://github.com/servo/euclid/blob/19a833debdd272ca90d90134f469ca9020a2e9b3/src/num.rs#L43-L58\" rel=\"nofollow noreferrer\">github.com/servo/euclid/blob/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553103902, "post_id": 55266061, "comment_id": 97265461, "body": "See also <a href=\"https://stackoverflow.com/q/45174458/155423\">How can I implement an operator like Add for a reference type so that I can add more than two values at once?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553104338, "post_id": 55266061, "comment_id": 97265698, "body": "<i>I could write an implementation for <code>impl Add&lt;&amp;Vec3&gt; for f32</code></i> \u2014 That would only allow <code>43f32 + &amp;my_vec_3</code>"}, {"owner": {"reputation": 1730, "user_id": 2383477, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/yozFQ.jpg?s=128&g=1", "display_name": "Nathan Lafferty", "link": "https://stackoverflow.com/users/2383477/nathan-lafferty"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553106083, "post_id": 55266061, "comment_id": 97266547, "body": "@Shepmaster, I&#39;m thinking through an implementation involving macros. So far I think I need to define a macro for each operation (Add, Mult, AddAssign, SubAssign etc.). Each macro would expand providing three * four implementations. (Add for Vec3, Add&lt;f32&gt; for Vec3, Add&lt;Vec3&gt; for f32; and for $lhs, $rhs; for &amp;$lhs, $rhs; for $lhs, &amp;$rhs; for &amp;$lhs, &amp;$lhs). Am I on the right track? Is it possible to use the rust source macros directly or will I need to copy them into my project?"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 2, "creation_date": 1553107637, "post_id": 55266061, "comment_id": 97267371, "body": "@NathanLafferty macros are importable, no need to copy their definitions. But if you use a macro to generate trait implementations, you don&#39;t have to expose the macro - impls are there already, so the user of your lib (or you in a different project depending on it) has no use for the macro."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1553113654, "post_id": 55266061, "comment_id": 97270354, "body": "To add to Michail&#39;s comment, if you use macros internally to your crate to implement <code>Add</code>, your users will not need to know that and can not import the macros. However, you cannot import the macros that the Rust standard library uses to implement their own code for the same reason. In either case, the macros would need to be deliberately exported, if that were desired for some reason."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 2, "creation_date": 1553123227, "post_id": 55266061, "comment_id": 97274040, "body": "@Nathan you do not need to define macro for each operation. You can call macros from macros, etc. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cda956155176bae5ba5309b1aab451a8\" rel=\"nofollow noreferrer\">Here&#39;s an example</a> you can start with."}, {"owner": {"reputation": 1730, "user_id": 2383477, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/yozFQ.jpg?s=128&g=1", "display_name": "Nathan Lafferty", "link": "https://stackoverflow.com/users/2383477/nathan-lafferty"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553125599, "post_id": 55266061, "comment_id": 97274720, "body": "@zrzka, it looks like that playground contains everything I&#39;d hope for (sans generating the owner/reference cases, but that&#39;s easy now that I understand how it works thanks to Shepmaster!). I was going to look at implementing it tomorrow. If you made it more generic (&quot;You can&#39;t do what you want directly, but you can define a macro to automate the boilerplate&quot;) I would &quot;accept&quot; the answer. Or I can submit an answer myself :) -- Thanks everyone!"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553158912, "post_id": 55266061, "comment_id": 97283762, "body": "@Nathan I can do it, but as you already have all the required info, feel free to finish it &amp; answer your own question. As a bonus, you can earn Self-Learner badge :)"}], "answers": [{"tags": [], "owner": {"reputation": 1730, "user_id": 2383477, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/yozFQ.jpg?s=128&g=1", "display_name": "Nathan Lafferty", "link": "https://stackoverflow.com/users/2383477/nathan-lafferty"}, "is_accepted": true, "score": 3, "last_activity_date": 1553194517, "last_edit_date": 1553194517, "creation_date": 1553190187, "answer_id": 55286325, "question_id": 55266061, "link": "https://stackoverflow.com/questions/55266061/how-to-implement-bidirectional-lhs-and-rhs-operators-in-rust/55286325#55286325", "title": "How to implement bidirectional LHS and RHS operators in Rust?", "body": "<p>The language does not automate this for you.</p>\n\n<p>Your options are:</p>\n\n<ol>\n<li>Write the implementations yourself</li>\n<li>Build a <a href=\"https://doc.rust-lang.org/book/macros.html\" rel=\"nofollow noreferrer\">macro</a> and use metaprogramming</li>\n</ol>\n\n<p>zrzka was kind enough to construct a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cda956155176bae5ba5309b1aab451a8\" rel=\"nofollow noreferrer\">Rust Playground</a> that provides example macros for this specific use-case.</p>\n\n<p>This <a href=\"https://stackoverflow.com/questions/45174458/how-can-i-implement-an-operator-like-add-for-a-reference-type-so-that-i-can-add\">question</a> also provides some helpful hints since the <a href=\"https://github.com/rust-lang/rust/blob/1.18.0/src/libcore/internal_macros.rs#L34-L70\" rel=\"nofollow noreferrer\">Rust Source Code</a> itself uses these macros to automate some of the tedium.</p>\n\n<p>One concern I had was if I used a macro I would have to call it inline (like <code>vec![]</code>). Since macros are expanded at compile time, your macro will generate your functions for you that you can call normally. RLS will still provide syntax support and everything will work as you expect it should.</p>\n\n<p>Here's the implementation I ended up going with. I'm sure much more could be automated (<code>forward_ref_binop</code> for one) but I'm happy with it.</p>\n\n<pre><code>/// Generates the operations for vector methods. `let result = my_vec_3 + my_other_vec3`\n/// Handles `Vec3, Vec3`, `Vec3, &amp;Vec3`, `&amp;Vec3, Vec3`, `&amp;Vec3, &amp;Vec3`\n/// `vec3_vec3_op(ops::AddAssign, add_assign)` (note the camelcase add_assign name)\nmacro_rules! vec3_vec3_op {\n    ($($path:ident)::+, $fn:ident) =&gt; {\n        impl $($path)::+&lt;Vec3&gt; for Vec3 {\n            type Output = Vec3;\n\n            fn $fn(self, other: Vec3) -&gt; Self::Output {\n                Vec3 {\n                    e0: self.e0.$fn(other.e0),\n                    e1: self.e1.$fn(other.e1),\n                    e2: self.e2.$fn(other.e2),\n                }\n            }\n        }\n\n        impl $($path)::+&lt;&amp;Vec3&gt; for &amp;Vec3 {\n            type Output = Vec3;\n\n            fn $fn(self, other: &amp;Vec3) -&gt; Self::Output {\n                Vec3 {\n                    e0: self.e0.$fn(other.e0),\n                    e1: self.e1.$fn(other.e1),\n                    e2: self.e2.$fn(other.e2),\n                }\n            }\n        }\n\n        impl $($path)::+&lt;&amp;Vec3&gt; for Vec3 {\n            type Output = Vec3;\n\n            fn $fn(self, other: &amp;Vec3) -&gt; Self::Output {\n                Vec3 {\n                    e0: self.e0.$fn(other.e0),\n                    e1: self.e1.$fn(other.e1),\n                    e2: self.e2.$fn(other.e2),\n                }\n            }\n        }\n\n        impl $($path)::+&lt;Vec3&gt; for &amp;Vec3 {\n            type Output = Vec3;\n\n            fn $fn(self, other: Vec3) -&gt; Self::Output {\n                Vec3 {\n                    e0: self.e0.$fn(other.e0),\n                    e1: self.e1.$fn(other.e1),\n                    e2: self.e2.$fn(other.e2),\n                }\n            }\n        }\n    };\n}\n\n/// Generates the operations for vector method assignment. `my_vec += my_other_vec`\n/// Handles `Vec3, Vec3` and `Vec3, &amp;Vec3`\n/// `vec3_vec3_opassign(ops::AddAssign, add_assign)` (note the camelcase add_assign name)\nmacro_rules! vec3_vec3_opassign {\n    ($($path:ident)::+, $fn:ident) =&gt; {\n        impl $($path)::+&lt;Vec3&gt; for Vec3 {\n            fn $fn(&amp;mut self, other: Vec3) {\n                self.e0.$fn(other.e0);\n                self.e1.$fn(other.e1);\n                self.e2.$fn(other.e2);\n            }\n        }\n\n        impl $($path)::+&lt;&amp;Vec3&gt; for Vec3 {\n            fn $fn(&amp;mut self, other: &amp;Vec3) {\n                self.e0.$fn(other.e0);\n                self.e1.$fn(other.e1);\n                self.e2.$fn(other.e2);\n            }\n        }\n    };\n}\n\n/// Generates the operations for method assignment. `my_vec += f32`\n/// `vec3_opassign(ops:AddAssign, add_assign)` (note the camelcase add_assign name)\nmacro_rules! vec3_opassign {\n    ($($path:ident)::+, $fn:ident, $ty:ty) =&gt; {\n        impl $($path)::+&lt;$ty&gt; for Vec3 {\n            fn $fn(&amp;mut self, other: $ty) {\n                self.e0.$fn(other);\n                self.e1.$fn(other);\n                self.e2.$fn(other);\n            }\n        }\n    }\n}\n\n/// Generates the operations for the method. `let result = my_vec + 4f32`\n/// Handles `Vec3, T`, `T, Vec3`, `&amp;Vec3, T`, `T, &amp;Vec3`\n/// `vec3_op!(ops:Add, add, f32)`\nmacro_rules! vec3_op {\n    ($($path:ident)::+, $fn:ident, $ty:ty) =&gt; {\n        // impl ops::Add::add for Vec3\n        impl $($path)::+&lt;$ty&gt; for Vec3 {\n            type Output = Vec3;\n\n            // fn add(self, other: f32) -&gt; Self::Output\n            fn $fn(self, other: $ty) -&gt; Self::Output {\n                Vec3 {\n                    // e0: self.e0.add(other)\n                    e0: self.e0.$fn(other),\n                    e1: self.e1.$fn(other),\n                    e2: self.e2.$fn(other),\n                }\n            }\n        }\n\n        impl $($path)::+&lt;$ty&gt; for &amp;Vec3 {\n            type Output = Vec3;\n\n            fn $fn(self, other: $ty) -&gt; Self::Output {\n                Vec3 {\n                    e0: self.e0.$fn(other),\n                    e1: self.e1.$fn(other),\n                    e2: self.e2.$fn(other),\n                }\n            }\n        }\n\n        impl $($path)::+&lt;Vec3&gt; for $ty {\n            type Output = Vec3;\n\n            fn $fn(self, other: Vec3) -&gt; Self::Output {\n                Vec3 {\n                    e0: self.$fn(other.e0),\n                    e1: self.$fn(other.e1),\n                    e2: self.$fn(other.e2),\n                }\n            }\n        }\n\n        impl $($path)::+&lt;&amp;Vec3&gt; for $ty {\n            type Output = Vec3;\n\n            fn $fn(self, other: &amp;Vec3) -&gt; Self::Output {\n                Vec3 {\n                    e0: self.$fn(other.e0),\n                    e1: self.$fn(other.e1),\n                    e2: self.$fn(other.e2),\n                }\n            }\n        }\n    }\n}\n\nmacro_rules! vec3_op_for {\n    ($ty: ty) =&gt; {\n        vec3_op!(ops::Add, add, $ty);\n        vec3_op!(ops::Sub, sub, $ty);\n        vec3_op!(ops::Mul, mul, $ty);\n        vec3_op!(ops::Div, div, $ty);\n        vec3_opassign!(ops::AddAssign, add_assign, $ty);\n        vec3_opassign!(ops::SubAssign, sub_assign, $ty);\n        vec3_opassign!(ops::MulAssign, mul_assign, $ty);\n        vec3_opassign!(ops::DivAssign, div_assign, $ty);\n    };\n}\n\nvec3_vec3_op!(ops::Add, add);\nvec3_vec3_op!(ops::Sub, sub);\nvec3_vec3_op!(ops::Mul, mul);\nvec3_vec3_op!(ops::Div, div);\nvec3_vec3_opassign!(ops::AddAssign, add_assign);\nvec3_vec3_opassign!(ops::SubAssign, sub_assign);\nvec3_vec3_opassign!(ops::MulAssign, mul_assign);\nvec3_vec3_opassign!(ops::DivAssign, div_assign);\nvec3_op_for!(f32);\n</code></pre>\n\n<p>From here if I expanded my <code>Vec3</code> class to handle generics, it would be trivial to add additional types.</p>\n"}], "owner": {"reputation": 1730, "user_id": 2383477, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/yozFQ.jpg?s=128&g=1", "display_name": "Nathan Lafferty", "link": "https://stackoverflow.com/users/2383477/nathan-lafferty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 408, "favorite_count": 2, "accepted_answer_id": 55286325, "answer_count": 1, "score": 2, "last_activity_date": 1553286966, "creation_date": 1553100394, "last_edit_date": 1553286966, "question_id": 55266061, "link": "https://stackoverflow.com/questions/55266061/how-to-implement-bidirectional-lhs-and-rhs-operators-in-rust", "title": "How to implement bidirectional LHS and RHS operators in Rust?", "body": "<p>In Rust you can overload operators (<code>+</code>, <code>-</code>, <code>/</code>, <code>*</code>, <code>+=</code>, etc.). I have a simple add implementation for my <code>Vec3</code> type:</p>\n\n<pre><code>use std::ops::Add;\n\nstruct Vec3 {\n    e0: f32,\n    e1: f32,\n    e2: f32,\n}\n\nimpl Add&lt;f32&gt; for &amp;Vec3 {\n    type Output = Vec3;\n\n    fn add(self, other: f32) -&gt; Vec3 {\n        Vec3 {\n            e0: self.e0 + other,\n            e1: self.e1 + other,\n            e2: self.e2 + other,\n        }\n    }\n}\n</code></pre>\n\n<p>And I can use it by doing:</p>\n\n<pre><code>let result = my_vec_3 + 43f32;\n</code></pre>\n\n<p>But doing it the other way errors out:</p>\n\n<pre><code>let this_wont_compile = 43f32 + my_vec_3;\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: cannot add `Vec3` to `f32`\n  --&gt; src/lib.rs:23:35\n   |\n23 |     let this_wont_compile = 43f32 + my_vec_3;\n   |                                   ^ no implementation for `f32 + Vec3`\n   |\n   = help: the trait `std::ops::Add&lt;Vec3&gt;` is not implemented for `f32`\n</code></pre>\n\n<p>I know I could write an implementation for <code>impl Add&lt;&amp;Vec3&gt; for f32</code> but that's what I'm looking to automate.</p>\n\n<p>How can you write your implementation such that the <code>LHS</code> and <code>RHS</code> are interchangeable? Is it possible in Rust?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553104358, "post_id": 55259283, "comment_id": 97265715, "body": "Apart from <code>Rc</code> &amp; <code>Arc</code>, there&#39;s also <code>Weak</code>. You can find more info in the <a href=\"https://doc.rust-lang.org/book/ch15-06-reference-cycles.html\" rel=\"nofollow noreferrer\">Creating Reference Cycles and Leaking Memory is Safe</a> chapter in the Rust Programming Language Book."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 4, "last_activity_date": 1553087994, "last_edit_date": 1553087994, "creation_date": 1553079984, "answer_id": 55259283, "question_id": 55259041, "link": "https://stackoverflow.com/questions/55259041/lifetime-with-shared-state/55259283#55259283", "title": "Lifetime with shared state", "body": "<p>Since your first struct has a reference that has a reference of another struct in itself, you need to specify these children lifetimes too:</p>\n\n<pre><code>struct AppState&lt;'a&gt; {\n    services: &amp;'a AppServices&lt;'a&gt;,\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e03f5c1c5443b9b6dec8546547448e8f\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This way you are saying to the compiler that <code>AppState</code> and <code>AppServices</code> lifetimes are bound, thus <code>AppServices</code> members have the lifetime <code>'a</code> as well.</p>\n\n<p>However, apart from lifetime issues, you have a cyclic data structure. If you want to share data between structs, there are some specific smart pointers like <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> and for multithreaded applications <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a>. </p>\n\n<p>Instead of sharing raw pointers of the struct, you can share <code>Arc</code> smart pointers and mutate data with the help of <code>Mutex</code> to guarantee single access for a thread.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5433755c30b18063724ed95e70e7a27a\" rel=\"nofollow noreferrer\">A solution that uses an <code>Arc</code></a>\n to solve such a cyclic data structure problem.</p>\n"}], "owner": {"reputation": 1338, "user_id": 1945875, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/7f3d8f25d208327860bdfebf145e481b?s=128&d=identicon&r=PG", "display_name": "Helmut Januschka", "link": "https://stackoverflow.com/users/1945875/helmut-januschka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 55259283, "answer_count": 1, "score": 3, "last_activity_date": 1553088051, "creation_date": 1553079167, "last_edit_date": 1553088051, "question_id": 55259041, "link": "https://stackoverflow.com/questions/55259041/lifetime-with-shared-state", "title": "Lifetime with shared state", "body": "<p>I want to have:</p>\n\n<ul>\n<li>an <code>AppState</code> that has an <code>AppServices</code>,</li>\n<li>this <code>AppServices</code>  should have services <code>IdService</code>,</li>\n<li><code>IdService</code> itself should have access to the <code>AppState</code>.</li>\n</ul>\n\n<p>Below is the idea I came up with, but I am not able to get the lifetime markers done correctly. \ud83e\udd2f</p>\n\n<pre><code>struct IdService&lt;'a&gt; {\n    name: String,\n    state: &amp;'a AppState,\n}\nstruct AppServices&lt;'a&gt; {\n    id: Option&lt;&amp;'a IdService&gt;,\n}\n\nstruct AppState&lt;'a&gt; {\n    services: &amp;'a AppServices,\n}\n\nimpl&lt;'a&gt; AppState&lt;'a&gt; {\n    pub fn new() -&gt; Self {\n        AppState {\n            services: AppServices { id: None },\n        };\n    }\n}\n\nfn main() {\n    let mut state = AppState::new();\n    let id_service = IdService {\n        name: \"test\".to_string(),\n        state: state,\n    };\n    let services = AppServices {\n        id: Some(id_service),\n    };\n    state.services = services;\n}\n</code></pre>\n\n<p>Compiler output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:3:16\n  |\n3 |     state: &amp;'a AppState,\n  |                ^^^^^^^^ expected lifetime parameter\n\nerror[E0106]: missing lifetime specifier\n --&gt; src/main.rs:6:20\n  |\n6 |     id: Option&lt;&amp;'a IdService&gt;,\n  |                    ^^^^^^^^^ expected lifetime parameter\n\nerror[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:10:19\n   |\n10 |     services: &amp;'a AppServices,\n   |                   ^^^^^^^^^^^ expected lifetime parameter\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1553073048, "post_id": 55256359, "comment_id": 97245638, "body": "This is interesting but I suspect this is a XY problem and that a loosely typed <code>allCaches</code> struct isn&#39;t the right data structure for your (unspecified) need."}, {"owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1553075011, "post_id": 55256359, "comment_id": 97246797, "body": "Ok. That&#39;s possible. However, my problem seems to be fairly clearly specified. I have a struct which I&#39;d like to use to organise my data and as part of that organisation I&#39;d like to hold a HashMap of parameterised types. I have an approach that works but is ugly and I&#39;d like to know if there is a better approach."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1553075470, "post_id": 55256359, "comment_id": 97247081, "body": "The better approach in my opinion would be to avoid the mess of loosely typed maps. Rust is a typed language and you&#39;re trying very hard to code as in an loosely typed one. A solution might be to define several maps with their types."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1553082589, "post_id": 55256359, "comment_id": 97251362, "body": "I think the example needs a little more detail, to define the type of <code>caches</code>, define what <i>exactly</i> <code>downcast_ref</code> and <code>populate_vector</code> do, eliminate the undefined <code>debug!</code> macro, etc. A <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is the goal. I have some ideas for improvements, but I don&#39;t understand what the snippet is doing."}, {"owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1553087128, "post_id": 55256359, "comment_id": 97254236, "body": "@trentcl The problem is really a structural problem and that makes it hard to give an MCV example. My comment above tries to summarise why I&#39;m doing what I&#39;m doing. It could be that Denys&#39; comment is correct and I need to clarify my thoughts a little better and approach this differently. I&#39;ll try out some more ideas and see if I can provide a better example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1553087616, "post_id": 55256359, "comment_id": 97254537, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/44912349/155423\">How can I avoid a ripple effect from changing a concrete struct to generic?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55256359/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1553088975, "post_id": 55256359, "comment_id": 97255387, "body": "I&#39;ll add that if there is an exhaustive, finite-sized list (&quot;closed set&quot;) of all the possible types that <code>T</code> can be, 99% of the time you want an <code>enum</code>. Trait objects are for when you have an &quot;open set&quot;; i.e., you can&#39;t enumerate all the types that <code>T</code> might be either because you don&#39;t have control over them or because you want to leave your API open to future expansion without affecting usage sites. A chain of <code>if is_this_type... else if is_that_type ... else if ...</code> is just an awkward and <i>not-compile-time-checked</i> <code>match</code> on what is effectively an <code>enum</code>."}, {"owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1553090540, "post_id": 55256359, "comment_id": 97256445, "body": "Using enums is better, wrt the checking aspects. I just can&#39;t find a good example of how to use an enum with a generic type. I think the reference that @Shepmaster makes to &quot;avoiding ripple&quot; will help me figure out a better way to implement a solution. Thanks for the advice."}], "owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "closed_date": 1553090554, "answer_count": 0, "score": 1, "last_activity_date": 1553077708, "creation_date": 1553070346, "last_edit_date": 1553070600, "question_id": 55256359, "link": "https://stackoverflow.com/questions/55256359/how-should-i-store-generic-values-in-a-hashmap-contained-within-a-non-generic-st", "closed_reason": "Duplicate", "title": "How should I store generic values in a HashMap contained within a non-generic structure", "body": "<p>I would like to have a struct:</p>\n\n<pre><code>struct AllCaches {\n    vectors: HashMap&lt;usize, Cache&lt;T&gt;&gt;,\n}\n</code></pre>\n\n<p>The purpose of <code>AllCaches</code> is to hold various bits of useful information relating to <code>Cache</code>s which are typed (<code>&lt;T&gt;</code>).</p>\n\n<p>Clearly, this isn't valid code, since I would need to specify <code>&lt;T&gt;</code> in my <code>AllCaches</code> declaration. I can't do that since the <code>AllCaches</code> struct is intended to hold all my caches irrespective of their <code>&lt;T&gt;</code>.</p>\n\n<p>My current solution involves a trait which I implement as:</p>\n\n<pre><code>struct AllCaches {\n    vectors: HashMap&lt;usize, Box&lt;dyn CacheTrait&gt;&gt;,\n}\n</code></pre>\n\n<p>I have managed to make this work, but it involves a lot of nasty/messy down casting and horrible looking code such as:</p>\n\n<pre><code>let data;\nif let Some(thing) = caches.downcast_ref::&lt;Cache&lt;u64&gt;&gt;() {\n    debug!(\"U64\");\n    data = VectorType::U64(thing.populate_vector(&amp;req.index, &amp;mvector));\n} else if let Some(thing) = caches.downcast_ref::&lt;Cache&lt;f64&gt;&gt;() {\n    debug!(\"F64\");\n    data = VectorType::F64(thing.populate_vector(&amp;req.index, &amp;mvector));\n}\n</code></pre>\n\n<p>(using downcast-rs crate to achieve the down casting).</p>\n\n<p>The impact on my code is that I need a lot of very repetitive (<code>&lt;T&gt;</code>) specific functionality and the benefit of having a generic type seems to be lost.</p>\n\n<p>This seems horrible to me and I feel like there must be a better answer.</p>\n\n<p>I've wrestled with this for a week (on and off) and investigated other options such as using enums, but that didn't seem to improve the situation (although, maybe I didn't understand that approach completely). I've done a lot of googling and reading documentation, I'm fairly inexperience with Rust, but not made much progress.</p>\n"}, {"tags": ["static", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1553065446, "post_id": 55252819, "comment_id": 97242167, "body": "As a note: <code>static mut</code> won&#39;t be removed in Rust (&lt; 2.0), because it would be a breaking change and Rust doesn&#39;t do that so you&#39;re free to use it (although it&#39;s not recommended)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553087304, "post_id": 55252819, "comment_id": 97254350, "body": "<a href=\"https://github.com/rust-lang/rust/issues/53639\" rel=\"nofollow noreferrer\">Issue #53639</a> exists because a large proportion of people that use <code>static mut</code> <i>misuse</i> it, introducing memory unsafety. If you care about safety (and you should), then you should try to remove it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1553087392, "post_id": 55252819, "comment_id": 97254401, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a> or <a href=\"https://stackoverflow.com/q/27221504/155423\">How can you make a safe static singleton in Rust?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55252819/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "edited": false, "score": 0, "creation_date": 1553141408, "post_id": 55253928, "comment_id": 97278119, "body": "This is certainly the simplest answer! But it requires me to change the type <code>run</code> accepts to either a generic <code>F: FnMut(Input) -&gt; Output</code> or <code>impl FnMut(Input) -&gt; Output</code> either of which turns out to slow down my compiles when I edit <code>logic</code> significantly, (around 4s to around 15s). I&#39;m not sure why this is, but it&#39;s enough to prevent me from using this method."}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "reply_to_user": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "edited": false, "score": 0, "creation_date": 1553148092, "post_id": 55253928, "comment_id": 97279581, "body": "interesting behavior. @Ryan1729 have you tried to combine it with your approach, i.e. wrap State into RefCell?"}, {"owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "edited": false, "score": 0, "creation_date": 1553219423, "post_id": 55253928, "comment_id": 97312478, "body": "If I wrap <code>State</code> in a <code>RefCell</code> and call <code>try_borrow_mut</code> in the closure I seem to get slightly shorter compile times than without it (three runs clocked in at 13.53s, 13.72s, and 12.58s respectively) but the mutex solution is still compiling much faster."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 2, "last_activity_date": 1553087200, "last_edit_date": 1553087200, "creation_date": 1553058730, "answer_id": 55253928, "question_id": 55252819, "link": "https://stackoverflow.com/questions/55252819/can-i-avoid-recompiling-my-platform-layer-without-static-mut/55253928#55253928", "title": "Can I avoid recompiling my platform layer without `static mut`?", "body": "<p>You can move <code>state</code> to <code>main()</code>  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut state = logic::new();\n    platform_layer::run(move |input| logic::update_and_render(&amp;mut state, input));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 2, "last_activity_date": 1553067636, "last_edit_date": 1553067636, "creation_date": 1553066342, "answer_id": 55255384, "question_id": 55252819, "link": "https://stackoverflow.com/questions/55252819/can-i-avoid-recompiling-my-platform-layer-without-static-mut/55255384#55255384", "title": "Can I avoid recompiling my platform layer without `static mut`?", "body": "<p>You can use a static mutex and get a local mutable reference when needed:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nuse std::sync::Mutex;\n\nfn update_and_render(input: Input) -&gt; Output {\n    lazy_static! {\n        static ref STATE_MUTEX: Mutex&lt;logic::State&gt; = Mutex::new(logic::new());\n    }\n    let mut state = STATE_MUTEX.lock().unwrap();\n    logic::update_and_render(state, input)\n}\n</code></pre>\n\n<p>This is fast, safe, and ready for access from multiple threads.</p>\n"}], "owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "closed_date": 1553090042, "accepted_answer_id": 55255384, "answer_count": 2, "score": 1, "last_activity_date": 1553090050, "creation_date": 1553049933, "last_edit_date": 1553054892, "question_id": 55252819, "link": "https://stackoverflow.com/questions/55252819/can-i-avoid-recompiling-my-platform-layer-without-static-mut", "closed_reason": "Duplicate", "title": "Can I avoid recompiling my platform layer without `static mut`?", "body": "<p>I have a library \"business logic\" crate I want to be able to write multiple binary crate \"frontends\" or \"platform layers\" for. These platform layers tend to use libraries calling platform APIs and that tends to imply long compile times. I want to be able to iterate on the business logic crate without needing to recompile the platform layer. But, I want to be able to compile the project into a single binary for each platform, and I'd rather not mess with shared object files/DLLs if I don't have to.</p>\n\n<p>I have a way to do this using a <code>fn</code> pointer and <code>static mut</code>, but there's <a href=\"https://github.com/rust-lang/rust/issues/53639\" rel=\"nofollow noreferrer\">this <code>rust-lang/rust</code> issue about potentially removing it</a>, so I'd like to know if there is a way to get the results I want without using it.</p>\n\n<p>For reference, the way I got it working was like this:</p>\n\n<pre><code>use platform_types::{Input, Output};\n\nfn update_and_render(input: Input) -&gt; Output {\n    static mut STATE: logic::State = logic::new();\n    let state: &amp;mut logic::State = unsafe { &amp;mut STATE };\n\n    logic::update_and_render(state, input)\n}\n\nfn main() {\n    platform_layer::run(update_and_render);\n}\n</code></pre>\n\n<p>where the above code is in the main crate, <code>logic</code> is the business logic crate, <code>platform_layer</code> is the platform layer crate, and <code>platform_types</code> contains the common types between the three other crates.</p>\n\n<p>I tried using a <code>RefCell</code> with <code>try_borrow_mut</code> I got the error <code>std::cell::RefCell&lt;State&gt; cannot be shared between threads safely</code> and mentions that <code>Sync</code> is not implemented for <code>std::cell::RefCell&lt;State&gt;</code> and the error did not go away if I tried implementing Sync for <code>State</code> experimentally. I then tried a <code>Mutex</code>, but as far as I can tell I can't put one in a <code>static</code>.</p>\n\n<p>EDIT: If it makes a difference, I don't actually expect to need to call the function pointer from multiple threads, although I understand that handing one out implicitly allows that. If I ever (accidentally?) do call the function pointer from multiple threads, a failed <code>debug_assert!</code> or similar is obviously preferable to UB.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1553033015, "post_id": 55250588, "comment_id": 97233803, "body": "It is unclear what you currently have and why that attempt does not work. Please provide a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. The <a href=\"https://stackoverflow.com/tags/rust/info\">rust tag info</a> also provides some tips towards creating an MCVE."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1553034966, "post_id": 55250588, "comment_id": 97234456, "body": "I have edited the question, but some details are still missing: that function is a method, you must also specify what is being implemented here."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1553068684, "creation_date": 1553068684, "answer_id": 55255940, "question_id": 55250588, "link": "https://stackoverflow.com/questions/55250588/how-can-i-retrieve-the-port-from-a-crust-session/55255940#55255940", "title": "How can I retrieve the port from a crust Session?", "body": "<p>Looking at the <a href=\"https://docs.rs/crust/0.31.0/src/crust/main/service.rs.html#227-229\" rel=\"nofollow noreferrer\">source for <code>get_peer_ip_addr</code></a>, it uses <code>get_peer_socket_addr</code> to get the socket, which contains both the address and the port. Unfortunately <code>get_peer_socket_addr</code> is private, so you can't get the port. There is an <a href=\"https://github.com/maidsafe/crust/issues/1152\" rel=\"nofollow noreferrer\">open question</a> about this issue in the crust bugtracker.</p>\n"}], "owner": {"reputation": 29, "user_id": 8751557, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62ae7ec998fd91af21cbb8a37e8392a8?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/8751557/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1553087482, "creation_date": 1553032640, "last_edit_date": 1553087482, "question_id": 55250588, "link": "https://stackoverflow.com/questions/55250588/how-can-i-retrieve-the-port-from-a-crust-session", "title": "How can I retrieve the port from a crust Session?", "body": "<p>I'm trying the examples from the <a href=\"https://crates.io/crates/crust\" rel=\"nofollow noreferrer\"><code>crust</code></a> crate but cannot figure how to obtain the port from a peer I'm connected to.</p>\n\n<p>The crust example includes the following function</p>\n\n<pre><code>use crust::Service;\n\npub fn print_connected_nodes(&amp;self, service: &amp;Service) {\n    println!(\"Node count: {}\", self.nodes.len());\n    for (id, node) in &amp;self.nodes {\n        let ip = service.get_peer_ip_addr(node).unwrap();\n        let status = if service.is_connected(node) {\n            \"Connected   \"\n        } else {\n            \"Disconnected\"\n        };\n\n        println!(\"[{} - {}] {} {:?}\", id, ip, status, node);\n    }\n\n    println!();\n}\n</code></pre>\n\n<p>There I can establish a connection and obtain the IP address with <code>let ip = service.get_peer_ip_addr(node)</code> but after reading the documentation I cannot find any method to obtain the port.</p>\n\n<p>Is there another method to obtain the port?</p>\n"}, {"tags": ["rust", "yaml", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553013959, "post_id": 55245914, "comment_id": 97225063, "body": "Have you <a href=\"https://serde.rs/string-or-struct.html\" rel=\"nofollow noreferrer\">read the Serde documentation</a>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1553014765, "post_id": 55245914, "comment_id": 97225497, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=57c5990c3595c0a740138dcb4e0daa4c\" rel=\"nofollow noreferrer\">The duplicates applied to your question (using JSON)</a>. TL;DR: create an <a href=\"https://serde.rs/enum-representations.html#untagged\" rel=\"nofollow noreferrer\">untagged enum</a>: <code>#[serde(untagged)] enum Environment { Vec(Vec&lt;String&gt;), Hash(BTreeMap&lt;String, String&gt;) }</code> and use that for your <code>environment</code>."}, {"owner": {"reputation": 2560, "user_id": 5112122, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206053108358704/picture?type=large", "display_name": "Horacio", "link": "https://stackoverflow.com/users/5112122/horacio"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553078462, "post_id": 55245914, "comment_id": 97248927, "body": "Thank you @Shepmaster the second helps me a lot, and the documentation it&#39;s how I started, but Enum approach is much better. Thanks you"}], "owner": {"reputation": 2560, "user_id": 5112122, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206053108358704/picture?type=large", "display_name": "Horacio", "link": "https://stackoverflow.com/users/5112122/horacio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1325, "favorite_count": 0, "closed_date": 1553014626, "answer_count": 0, "score": 4, "last_activity_date": 1553014661, "creation_date": 1553013387, "last_edit_date": 1553013895, "question_id": 55245914, "link": "https://stackoverflow.com/questions/55245914/how-to-use-serde-to-parse-a-yaml-file-with-multiple-different-types", "closed_reason": "Duplicate", "title": "How to use Serde to parse a YAML file with multiple different types?", "body": "<p>I'm trying to parse this YAML file</p>\n\n<pre><code>application:\n  build: something\n  container_name: another_thing\n  environment:\n    - ONE_ENV=fake\n    - SEC_ENV=something\n</code></pre>\n\n<p>I've created this code that works perfectly:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde_yaml;\n\nuse std::fs::File;\nuse std::io::Read;\n\n#[derive(Debug, PartialEq, Serialize, Deserialize)]\nstruct Application {\n    application: Data,\n}\n\n#[derive(Debug, PartialEq, Serialize, Deserialize)]\nstruct Data {\n    build: String,\n    container_name: String,\n\n    #[serde(skip_serializing_if = \"Option::is_none\")]\n    environment: Option&lt;Vec&lt;String&gt;&gt;,\n}\n\nfn main() {\n    let filename = \"example.yml\";\n    match File::open(filename) {\n        Ok(mut file) =&gt; {\n            let mut content = String::new();\n            file.read_to_string(&amp;mut content).unwrap();\n\n            let application_data: Application = serde_yaml::from_str(&amp;content).unwrap();\n            println!(\"{:?}\", application_data.application.environment);\n        }\n        Err(error) =&gt; {\n            println!(\"There is an error {}: {}\", filename, error);\n        }\n    }\n}\n</code></pre>\n\n<p>I need to support this format too:</p>\n\n<pre><code>application:\n  build: something\n  container_name: another_thing\n  environment:\n    ONE_ENV: fake\n    SEC_ENV: something\n</code></pre>\n\n<p>How I can deal with two different ways to parse?</p>\n"}, {"tags": ["rust", "type-inference", "type-systems", "hindley-milner"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1553006723, "post_id": 55243660, "comment_id": 97220359, "body": "Note that this question is inspired from <a href=\"https://stackoverflow.com/q/55209837/155423\">another question</a>. The author of that question did not appear to want to provide a MCVE, so I&#39;ve created this question as a cleaner example."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 1, "creation_date": 1553008979, "post_id": 55243660, "comment_id": 97221893, "body": "modified? - yes, see <a href=\"https://github.com/rust-lang/rustc-guide/blob/master/src/type-inference.md#type-inference\" rel=\"nofollow noreferrer\">Type Inference</a>: <i>The type inference is based on the standard Hindley-Milner (HM) type inference algorithm, but extended in various way to accommodate subtyping, region inference, and higher-ranked types.</i>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1553009406, "post_id": 55243660, "comment_id": 97222188, "body": "I wonder if this is something that <a href=\"https://github.com/rust-lang/chalk\" rel=\"nofollow noreferrer\">chalk</a> can help with when it lands\u2026"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553026262, "post_id": 55243660, "comment_id": 97231179, "body": "Tried with <code>-Z chalk</code> (nightly) and same result."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1553012974, "post_id": 55244911, "comment_id": 97224482, "body": "<i>&quot;I suspect it has something to do with the fact that methods can be implemented on traits&quot;</i> \u2014 I don&#39;t think it&#39;s specifically about the possibility of there being an ambiguous trait. I think it&#39;s just that the type must be known at the point of calling a method, in order to know which function is intended. It could be a trait but there could also be multiple types with this method in their impl."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553013668, "post_id": 55244911, "comment_id": 97224911, "body": "I appreciate the response, but isn&#39;t a very satisfying answer. The second half of the post (starting at &quot;You can see...&quot;) is simply a restatement of the problem in the question and doesn&#39;t provide an answer. The first half correlates with my experiences, but, as you point out, isn&#39;t based on any particular authoritative source."}], "tags": [], "owner": {"reputation": 428, "user_id": 7343786, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MhMp4LR2GVc/AAAAAAAAAAI/AAAAAAAAAFQ/Ry3ux41tyCo/photo.jpg?sz=128", "display_name": "Harrison Mc", "link": "https://stackoverflow.com/users/7343786/harrison-mc"}, "is_accepted": false, "score": 8, "last_activity_date": 1553010304, "creation_date": 1553010304, "answer_id": 55244911, "question_id": 55243660, "link": "https://stackoverflow.com/questions/55243660/why-does-calling-a-method-on-a-variable-prevent-rust-from-inferring-the-type-of/55244911#55244911", "title": "Why does calling a method on a variable prevent Rust from inferring the type of the variable?", "body": "<p>I don't know the full answer and I have next to no knowledge of the internal workings of the Rust compiler, but here are some deductions I've come to from my experience with Rust.</p>\n\n<p>Information about types in Rust can \"flow backwards\", but there are certain times when Rust needs to know (for absolute certain) the type of an expression. In these situations, it must \"already\" know the type, i.e. it will not continue to look forward.</p>\n\n<p>From what I've seen, this situation is limited to method calls. I suspect it has something to do with the fact that methods can be implemented on traits, which substantially complicates things. I doubt that there are any traits in scope with a method named <code>some_method</code>, but I think that whenever the Rust compiler encounters a method call it requires the type to already be known for certain.</p>\n\n<p>You can see this happen a <em>lot</em> with method calls on types which implement traits, the most common being the <code>collect</code> method on a type that implements the <code>Iter</code> trait. You will be able to call <code>collect</code>, but won't be able to call any methods on the result unless you specify the type.</p>\n\n<p>So this works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn create_numbers(last_num: i32) -&gt; Vec&lt;i32&gt; {\n    let x = (0..10).collect();\n    x\n}\n</code></pre>\n\n<p>But this does not:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn create_numbers(last_num: i32) -&gt; Vec&lt;i32&gt; {\n    let x = (0..10).collect();\n    // In order to call `push`, we need to *already* know the type\n    // of x for \"absolute certain\", and the Rust compiler doesn't \n    // keep looking forward\n    x.push(42);\n    x\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1553099199, "post_id": 55251229, "comment_id": 97262748, "body": "I don&#39;t think we need proof that eddyb is a prominent member; just a note next his name when you give the first comments would be enough. I think this answer would be improved by removing the Proof and Temporary sections; you can comment on your own answers for work in progress stuff, etc... no need to scare people with a longer answer when 1/3 doesn&#39;t actually answer. // // // On another note: awesome digging!"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1553595579, "post_id": 55251229, "comment_id": 97433124, "body": "1) No official documentation for the <i>in-order</i> type checking (incl. Rust compiler docs) 2) Lot of other issues / PRs mention <i>in-order</i> with a note that it&#39;s a known limitation 3) It&#39;s covered by tests like <a href=\"https://github.com/rust-lang/rust/blob/1.33.0/src/test/ui/span/method-and-field-eager-resolution.rs\" rel=\"nofollow noreferrer\">this one</a> 4) Recompiled rustc with debug assertions and matched the output with the source code. I can confirm that there&#39;s <i>in-order</i> type checking (but not the rustc expert, still may be wrong). Impossible to summarize my findings in a short answer (too long, complicated, so many paths)."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1553596181, "post_id": 55251229, "comment_id": 97433495, "body": "Based on summary from my previous comment, I&#39;m affraid that there&#39;s not much else to add. I&#39;m happy with what I&#39;ve found, learned some internals, but I also agree that this isn&#39;t satisfying / very good answer. It&#39;s probably all we can do now unless some rust compiler team member steps in. If you want to play with it, <a href=\"https://github.com/rust-lang/rustc-guide/issues/8\" rel=\"nofollow noreferrer\">here&#39;re</a> some notes from Niko describing the fastest way to get a working compiler (if you&#39;d like to rebuild with debug assertions)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1553603922, "post_id": 55251229, "comment_id": 97438296, "body": "I personally find your answer very satisfying; sure it&#39;s not a &quot;proof&quot;, but I don&#39;t think the Rust language is willing to enshrine type inference in the specification (as it leads to stagnation), so I suspect that studying the code and referencing known limitations is the best we can get."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1554041599, "post_id": 55251229, "comment_id": 97599439, "body": "Happy 10K reputation!"}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 21, "last_activity_date": 1554042054, "last_edit_date": 1554042054, "creation_date": 1553036649, "answer_id": 55251229, "question_id": 55243660, "link": "https://stackoverflow.com/questions/55243660/why-does-calling-a-method-on-a-variable-prevent-rust-from-inferring-the-type-of/55251229#55251229", "title": "Why does calling a method on a variable prevent Rust from inferring the type of the variable?", "body": "<p>Based on known facts (see below), it fails to compile because:</p>\n\n<ul>\n<li>the type checker goes through the function <strong>in the order it was written</strong>,</li>\n<li>in <code>let example = Default::default();</code>, <code>example</code> can be anything which implements <code>Default</code>,</li>\n<li>field accesses &amp; method calls require a known type,</li>\n<li>\"anything implementing <code>Default</code>\" is not a known type.</li>\n</ul>\n\n<p>I replaced <code>some_method()</code> with a field access and it produces same error.</p>\n\n<hr>\n\n<p>From <a href=\"https://github.com/rust-lang/rust/issues/42333\" rel=\"nofollow noreferrer\">Type inference depends on ordering (#42333)</a>:</p>\n\n<blockquote>\n  <pre class=\"lang-rust prettyprint-override\"><code>use std::path::PathBuf;\n\npub struct Thing {\n    pub f1: PathBuf,\n}\n\nfn junk() -&gt; Vec&lt;Thing&gt; {\n    let mut things = Vec::new();\n    for x in vec![1, 2, 3] {\n        if x == 2 {\n            for thing in things.drain(..) {\n                thing.f1.clone();\n            }\n            return vec![]\n        }\n        things.push(Thing{f1: PathBuf::from(format!(\"/{}\", x))});\n    }   \n    things  \n}               \n\nfn main() { \n    junk();\n}\n</code></pre>\n</blockquote>\n\n<p>This produces a compiler error with Rust 1.33.0:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:13:17\n   |\n9  |     let mut things = Vec::new();\n   |         ---------- consider giving `things` a type\n...\n13 |                 thing.f1.clone();\n   |                 ^^^^^ cannot infer type\n   |\n   = note: type must be known at this point\n</code></pre>\n\n<p>You should focus on the following comments from <a href=\"https://github.com/eddyb\" rel=\"nofollow noreferrer\">eddyb</a> (a well-known member of the the Rust language design team <a href=\"https://internals.rust-lang.org/t/subteam-reports-2016-05-09/3449\" rel=\"nofollow noreferrer\">since May, 2016</a>).</p>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/42333#issuecomment-306694398\" rel=\"nofollow noreferrer\">Comment #1</a>:</p>\n\n<blockquote>\n  <p>This is a known limitation of the in-order type-checker. While <em>inference</em> flows freely, <code>thing.f1.clone()</code> is checked <em>before</em> <code>things.push(Thing {...})</code> so it isn't known that <code>thing: Thing</code> when you try to access the <code>f1</code> field. We may in the future move away from this, but there are no immediate plans.</p>\n</blockquote>\n\n<p>What's more important is <a href=\"https://github.com/rust-lang/rust/issues/42333#issuecomment-306777156\" rel=\"nofollow noreferrer\">comment #2</a>:</p>\n\n<blockquote>\n  <p>What I mean is that the type-checker goes through the function <em>in the order it was written</em>. [...] Fields accesses and methods calls are simply not supported unless the type <em>is already known</em>.</p>\n</blockquote>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 933, "favorite_count": 3, "accepted_answer_id": 55251229, "answer_count": 2, "score": 31, "last_activity_date": 1554042054, "creation_date": 1553006637, "last_edit_date": 1553009071, "question_id": 55243660, "link": "https://stackoverflow.com/questions/55243660/why-does-calling-a-method-on-a-variable-prevent-rust-from-inferring-the-type-of", "title": "Why does calling a method on a variable prevent Rust from inferring the type of the variable?", "body": "<p>This code compiles:</p>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Example;\n\nimpl Example {\n    fn some_method(&amp;self) {}\n}\n\nfn reproduction() -&gt; Example {\n    let example = Default::default();\n    // example.some_method();\n    example\n}\n</code></pre>\n\n<p>If the commented line is added back, it will cause an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/lib.rs:10:5\n   |\n9  |     let example = Default::default();\n   |         ------- consider giving `example` a type\n10 |     example.some_method();\n   |     ^^^^^^^ cannot infer type\n   |\n   = note: type must be known at this point\n</code></pre>\n\n<p>Why does adding this method call cause type inference to fail?</p>\n\n<p>I've seen these two questions:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/37542971/155423\">How does Rust&#39;s type inference work across multiple statements?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44737154/155423\">How does Rust infer resultant types from From::&lt;&gt;::from()?</a></li>\n</ul>\n\n<p>From them, I know that Rust uses a (<a href=\"https://rust-lang.github.io/rustc-guide/type-inference.html\" rel=\"noreferrer\">modified</a>) version of Hindley-Milner. The latter question has <a href=\"https://stackoverflow.com/a/44739469/155423\">an answer</a> that describes Rust's type inference as a system of equations. <a href=\"https://stackoverflow.com/a/44737275/155423\">Another answer</a> explicitly states that \"Type information in Rust can flow backwards\".</p>\n\n<p>Using this knowledge applied to this situation, we have:</p>\n\n<ol>\n<li><code>example</code> is type <code>?E</code></li>\n<li><code>?E</code> must have a method called <code>some_method</code></li>\n<li><code>?E</code> is returned</li>\n<li>The return type is <code>Example</code></li>\n</ol>\n\n<p>Working backward, it's easy for a human to see that <code>?E</code> must be <code>Example</code>. Where is the gap between what I can see and what the compiler can see?</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 14, "creation_date": 1552996746, "post_id": 55240308, "comment_id": 97213676, "body": "If this is a property of your type, you might consider redesigning it: combine <code>enum Currency { Usd, Eur, Chf, ...}</code> with <code>struct Money { currency: Currency, quantity: u32 }</code>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1552997093, "post_id": 55240308, "comment_id": 97213886, "body": "This use case is centered around a bad data modeling. Of course it&#39;s an example but the reason it matters is that you don&#39;t often (never?) need such accessor if your data are correctly modeled."}, {"owner": {"reputation": 21289, "user_id": 532430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/uAwnB.png?s=128&g=1", "display_name": "thwd", "link": "https://stackoverflow.com/users/532430/thwd"}, "edited": false, "score": 0, "creation_date": 1552998080, "post_id": 55240308, "comment_id": 97214589, "body": "Thank you for your feedback. The example is purely illustrative. I&#39;m designing a little toy language and I wondered how Rust handled this particular case."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552998831, "post_id": 55240308, "comment_id": 97215085, "body": "Either you need a custom type to discriminate <code>USD(u32)</code> from <code>EUR(u32)</code> for example, because they are different, or these behave the same, and the whole purpose of your type is invalidated. Or maybe I&#39;m missing something."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 6, "creation_date": 1552999060, "post_id": 55240308, "comment_id": 97215222, "body": "You can do <code>unsafe {(std::mem::transmute_copy::&lt;Money, u64&gt;(self)&gt;&gt;32) as u32}</code>. Just tell nobody where you found it."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553002148, "post_id": 55240308, "comment_id": 97217359, "body": "This specific <code>transmute_copy</code> dance works if your number of discriminants fits <code>u32</code> (<code>4_294_967_295</code>) ... Just saying ..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1553003487, "post_id": 55240308, "comment_id": 97218221, "body": "I believe that using <code>transmute_copy</code> here invokes <i>undefined behavior</i> because the layout of an enum is undefined. If nothing else, it assumes that the discriminant comes before the value, which isn&#39;t guaranteed. I strongly recommend not using it."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1553003931, "post_id": 55240308, "comment_id": 97218500, "body": "In case there&#39;s still a doubt: the <code>unsafe</code> trick can be considered as a joke or as a demonstration of the way enums are encoded,  but <i>not</i> as a proper snippet you should paste into your code."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1553004323, "post_id": 55240308, "comment_id": 97218761, "body": "Agree, here&#39;s the <a href=\"https://doc.rust-lang.org/reference/type-layout.html#the-default-representation\" rel=\"nofollow noreferrer\">The Default Representation</a> link, which says <i>Nominal types without a repr attribute have the default representation. Informally, this representation is also called the rust representation. <b>There are no guarantees of data layout made by this representation.</b></i>"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 6, "creation_date": 1552996708, "post_id": 55240432, "comment_id": 97213640, "body": "But IMHO this defeats the purpose of having a <code>Money</code> enum, because you get a plain <code>u32</code> without the knowledge of the currency at all. Yes it&#39;s possible, don&#39;t know if it&#39;s good :/"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552997156, "post_id": 55240432, "comment_id": 97213935, "body": "@hellow I&#39;m inclined to agree. trentcl also makes a relevant comment on the question about the design."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 8, "creation_date": 1552997912, "post_id": 55240432, "comment_id": 97214463, "body": "Note that it&#39;s also possible to write it as <code>Money::USD(amount)|Money::CHF(amount)|Money::EUR(amount) =&gt; amount</code> (I don&#39;t pretend it&#39;s better but it&#39;s less verbose)"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 14, "last_activity_date": 1552996333, "creation_date": 1552996333, "answer_id": 55240432, "question_id": 55240308, "link": "https://stackoverflow.com/questions/55240308/unwrap-enum-when-all-variants-are-of-the-same-type/55240432#55240432", "title": "Unwrap enum when all variants are of the same type", "body": "<p>There isn't a built-in way to do this, unfortunately. The usual approach is to create an accessor method:</p>\n\n<pre><code>impl Money {\n    pub fn amount(&amp;self) -&gt; u32 {\n        match *self {\n            Money::USD(amount) =&gt; amount,\n            Money::EUR(amount) =&gt; amount,\n            Money::CHF(amount) =&gt; amount,\n        }\n    }\n}\n</code></pre>\n\n<p>At least this way you only have to do it once.</p>\n"}], "owner": {"reputation": 21289, "user_id": 532430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/uAwnB.png?s=128&g=1", "display_name": "thwd", "link": "https://stackoverflow.com/users/532430/thwd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 525, "favorite_count": 0, "accepted_answer_id": 55240432, "answer_count": 1, "score": 6, "last_activity_date": 1552996333, "creation_date": 1552995948, "question_id": 55240308, "link": "https://stackoverflow.com/questions/55240308/unwrap-enum-when-all-variants-are-of-the-same-type", "title": "Unwrap enum when all variants are of the same type", "body": "<p>Consider an enum definition like this:</p>\n\n<pre><code>enum Money {\n    USD(u32),\n    EUR(u32),\n    CHF(u32),\n    // many more...\n}\n</code></pre>\n\n<p>Note that all enum variants are of type <code>u32</code>.</p>\n\n<pre><code>fn amount(money: Money) -&gt; u32 {\n    // ?\n}\n</code></pre>\n\n<p>Can I generically extract the wrapped <code>u32</code> contained in a <code>Money</code>  instance without matching on all cases, if yes, how?</p>\n"}, {"tags": ["rust", "future", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": false, "score": 5, "last_activity_date": 1567758629, "last_edit_date": 1567758629, "creation_date": 1552988646, "answer_id": 55237862, "question_id": 55237128, "link": "https://stackoverflow.com/questions/55237128/cant-read-a-simple-payload-making-http-request-via-hyperclientclient-the-t/55237862#55237862", "title": "Can&#39;t read a simple payload making HTTP request via hyper::client::Client: the trait bound `Body: Future` is not satisfied", "body": "<p><code>and_then</code> must return a future, or something that can be converted into a future via the <a href=\"https://docs.rs/futures/0.1.25/futures/future/trait.IntoFuture.html\" rel=\"nofollow noreferrer\"><code>IntoFuture</code></a> trait. You're returning <code>res.into_body()</code>, which is not a future - <a href=\"https://docs.rs/hyper/0.12.25/hyper/struct.Body.html#impl-Stream\" rel=\"nofollow noreferrer\">it's actually a stream</a>.</p>\n\n<p>To get this to work, you'll need to convert that stream into a future which represents the body having been fully read. There's several options available to you here:</p>\n\n<ul>\n<li><code>res.into_body().concat2()</code>, which concatenates all of the read bytes into a single buffer</li>\n<li><code>res.into_body().collect()</code>, which collects all of the chunks of bytes into a <code>Vec</code></li>\n<li><code>res.into_body().into_future()</code>, which will resolve to a tuple containing the first item from the stream, and the remainder of the stream itself (i.e. <code>(T, Stream&lt;Item = T&gt;)</code>)</li>\n</ul>\n\n<p>The fact that there's multiple different (and equally valid) ways to represent a <code>Stream</code> as a <code>Future</code> is likely why the former doesn't have a blanket implementation of <code>IntoFuture</code>.</p>\n\n<p>An example of using <code>concat2</code> is shown <a href=\"https://docs.rs/hyper/0.12.25/hyper/client/index.html#example\" rel=\"nofollow noreferrer\">in the Hyper docs</a>.</p>\n"}], "owner": {"reputation": 21, "user_id": 3025837, "user_type": "registered", "profile_image": "https://graph.facebook.com/662063377/picture?type=large", "display_name": "saxman", "link": "https://stackoverflow.com/users/3025837/saxman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 505, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1567758629, "creation_date": 1552986469, "last_edit_date": 1553001301, "question_id": 55237128, "link": "https://stackoverflow.com/questions/55237128/cant-read-a-simple-payload-making-http-request-via-hyperclientclient-the-t", "title": "Can&#39;t read a simple payload making HTTP request via hyper::client::Client: the trait bound `Body: Future` is not satisfied", "body": "<p>I am attempting to convert a <code>Result</code> to a <code>Buffer</code>:</p>\n\n<pre><code>let ufc_root: String =\n    String::from(\"https://www.ufc.com/athletes/all?filters%5B0%5D=status%3A23\");\n// let ufc_root: String = String::from(\"https://www.google.com\");\nlet https = HttpsConnector::new(4).unwrap();\nlet client = Client::builder().build::&lt;_, hyper::Body&gt;(https);\n\nclient\n    .get(ufc_root.parse::&lt;hyper::Uri&gt;().unwrap())\n    .and_then(|res| {\n        println!(\"http status code: {}\", res.status());\n        println!(\"http response headers:\\n{:?}: \", res.headers());\n        res.into_body()\n    })\n    .from_err::&lt;WebScrapeError&gt;()\n    .and_then(|body| {\n        body.for_each(|chunk| {\n            println!(\"{}\", chunk.into_bytes());\n        });\n\n        let jon_jones = Subject {\n            name: \"Jon Jones\".to_string(),\n            link: \"http://www.jonjones.com\".to_string(),\n        };\n        let subjects = vec![jon_jones];\n        Ok(subjects)\n    })\n    .from_err()\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `hyper::Body: hyper::rt::Future` is not satisfied\n  --&gt; src/scrapper.rs:24:14\n   |\n24 |             .and_then(|res| {\n   |              ^^^^^^^^ the trait `hyper::rt::Future` is not implemented for `hyper::Body`\n   |\n   = note: required because of the requirements on the impl of `futures::future::IntoFuture` for `hyper::Body`\n\nerror[E0599]: no method named `from_err` found for type `futures::future::and_then::AndThen&lt;hyper::client::ResponseFuture, hyper::Body, [closure@src/scrapper.rs:24:23: 28:14]&gt;` in the current scope\n  --&gt; src/scrapper.rs:29:14\n   |\n29 |             .from_err::&lt;WebScrapeError&gt;()\n   |              ^^^^^^^^\n   |\n   = note: the method `from_err` exists but the following trait bounds were not satisfied:\n           `&amp;mut futures::future::and_then::AndThen&lt;hyper::client::ResponseFuture, hyper::Body, [closure@src/scrapper.rs:24:23: 28:14]&gt; : hyper::rt::Future`\n           `&amp;mut futures::future::and_then::AndThen&lt;hyper::client::ResponseFuture, hyper::Body, [closure@src/scrapper.rs:24:23: 28:14]&gt; : hyper::rt::Stream`\n           `futures::future::and_then::AndThen&lt;hyper::client::ResponseFuture, hyper::Body, [closure@src/scrapper.rs:24:23: 28:14]&gt; : hyper::rt::Future`\n</code></pre>\n\n<p>Why doesn't this compile?</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552947648, "post_id": 55230896, "comment_id": 97196101, "body": "It claims to require a <i>nightly</i> version of the compiler. Your <code>1.33.0</code> is just a stable version. <code>rustup toolchain add nightly</code>"}, {"owner": {"reputation": 3118, "user_id": 1005169, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/dad86a58fdf87f48302bb45e08ca3b84?s=128&d=identicon&r=PG", "display_name": "twigg", "link": "https://stackoverflow.com/users/1005169/twigg"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1552948645, "post_id": 55230896, "comment_id": 97196433, "body": "@E_net4 Yeah I switched to nightly and it works. Just seems strange that stable 1.33.0 wouldn&#39;t work with a nighly 1.31.0, I would have thought the nightly code  from 1.31.0 would be pushed into the stable 1.31.0+ versions once tested etc"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1552949955, "post_id": 55230896, "comment_id": 97196850, "body": "&gt; once tested etc  Exactly - nightly features are available in stable compiler versions only after they went through the process of stabilization, which may take a lot of time, and certainly there is no explicitly defined release cadence for all of them. Some nightly features could be removed outright."}, {"owner": {"reputation": 4240, "user_id": 1541330, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9d7b0057ffc24e644c4a30ba599d7753?s=128&d=identicon&r=PG&f=1", "display_name": "U007D", "link": "https://stackoverflow.com/users/1541330/u007d"}, "edited": false, "score": 1, "creation_date": 1552959579, "post_id": 55230896, "comment_id": 97199005, "body": "&gt; Just seems strange that stable 1.33.0 wouldn&#39;t work with a nighly 1.31.0 &lt;  Not every nightly feature stabilizes each release--in fact, the overwhelming majority do not--they are developed and tested over a much longer cadence than the 6 week release cycle.  And since stable releases explicitly disallow use of all nightly features (stable features only), this is why you still need nightly."}, {"owner": {"reputation": 3118, "user_id": 1005169, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/dad86a58fdf87f48302bb45e08ca3b84?s=128&d=identicon&r=PG", "display_name": "twigg", "link": "https://stackoverflow.com/users/1005169/twigg"}, "reply_to_user": {"reputation": 4240, "user_id": 1541330, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9d7b0057ffc24e644c4a30ba599d7753?s=128&d=identicon&r=PG&f=1", "display_name": "U007D", "link": "https://stackoverflow.com/users/1541330/u007d"}, "edited": false, "score": 0, "creation_date": 1553003622, "post_id": 55230896, "comment_id": 97218309, "body": "@U007D fair enough, that&#39;s just me not understanding its release cycle"}, {"owner": {"reputation": 2883, "user_id": 199972, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/0187303da7758b4f82b36f402d6b3738?s=128&d=identicon&r=PG", "display_name": "Dirk J&#228;ckel", "link": "https://stackoverflow.com/users/199972/dirk-j%c3%a4ckel"}, "edited": false, "score": 0, "creation_date": 1600594754, "post_id": 55230896, "comment_id": 113131894, "body": "Rust is now at 1.45.0 (2020-07-13) and <code>pear_codegen v0.1.4</code> is still asking for a version 1.31.0-nightly (2018-10-05). That is certainly odd. Will the features from 1.31.0-nightly ever be in the stable version?"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1552983407, "post_id": 55232546, "comment_id": 97205756, "body": "I am wondering if <i>nightly</i> should be renamed <i>experimental</i> to make things clearer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1553004110, "post_id": 55232546, "comment_id": 97218598, "body": "@MatthieuM. in the <a href=\"https://semver.org/\" rel=\"nofollow noreferrer\">SemVer</a> sense, <code>x.y.z</code>, <code>x.y.z-beta</code> and <code>x.y.z-nightly</code> have no relation to each other. (<i>A pre-release version indicates that the version is unstable and might not satisfy the intended compatibility requirements as denoted by its associated normal version</i>). While it&#39;s possible that &quot;experimental&quot; would have been a better name to start with, I doubt that making any such change now would outweigh the costs of the change. &#175;_(\u30c4)_/&#175;"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1553004892, "post_id": 55232546, "comment_id": 97219139, "body": "You lost an arm: \\. I do agree that it&#39;s probably not worth changing."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1552960346, "creation_date": 1552960346, "answer_id": 55232546, "question_id": 55230896, "link": "https://stackoverflow.com/questions/55230896/rocket-requires-a-minimum-version-of-rust-nightly-but-a-higher-stable-version-i/55232546#55232546", "title": "Rocket requires a minimum version of Rust nightly, but a higher stable version is already installed", "body": "<p>If software requires a nightly build of Rust, no stable version of Rust can be substituted: you are <strong>required</strong> to use nightly.</p>\n\n<p>The nightly channel of Rust is a superset of stable Rust. Features that are not yet complete or simply haven't proven their value are included in nightly builds of Rust. You opt into using a given feature via a <a href=\"https://stackoverflow.com/q/27454761/155423\">crate attribute</a>.</p>\n\n<p>These unstable features may completely change or even be <em>removed</em> at any time. Said another way, an unstable feature is <em>never</em> guaranteed to exist in any particular Rust stable version. </p>\n\n<p>If it helps, you can think of nightly versions as an \"alternate reality\" track of development. The version number of nightly is only a loose indicator of where they exist in time; the compilation date and git commit hash are much more informative.</p>\n\n<blockquote>\n  <p>I would have thought the nightly code from 1.31.0 would be pushed into the stable 1.31.0+ versions once tested</p>\n</blockquote>\n\n<p>This is how the <em>beta</em> channel works \u2014 anything in 1.x.y-beta will be in 1.x.y-stable (assuming no major emergency occurs).</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/49673121/155423\">What is the stabilization process?</a></li>\n<li><a href=\"https://stackoverflow.com/q/53136717/155423\">error[E0554]: #![feature] may not be used on the stable release channel Couldn&#39;t install racer using cargo</a></li>\n<li><a href=\"https://stackoverflow.com/q/27454761/155423\">What is a crate attribute and where do I add it?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 33207, "user_id": 1399491, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/a1cb3dec3a6f3411ce3460276e44b292?s=128&d=identicon&r=PG", "display_name": "Alex W", "link": "https://stackoverflow.com/users/1399491/alex-w"}, "is_accepted": false, "score": 1, "last_activity_date": 1612629657, "creation_date": 1612629657, "answer_id": 66079311, "question_id": 55230896, "link": "https://stackoverflow.com/questions/55230896/rocket-requires-a-minimum-version-of-rust-nightly-but-a-higher-stable-version-i/66079311#66079311", "title": "Rocket requires a minimum version of Rust nightly, but a higher stable version is already installed", "body": "<p>You aren't doing anything wrong, Rocket just requires Nightly builds so it has access to newer features of Rust that might've not stabilized yet.</p>\n<p>You can opt to only use a Nightly build for your Rocket project, per <a href=\"https://rocket.rs/v0.4/guide/getting-started/\" rel=\"nofollow noreferrer\">the documentation</a>:</p>\n<pre><code>rustup override set nightly\n</code></pre>\n<p><a href=\"https://rocket.rs/v0.4/guide/getting-started/\" rel=\"nofollow noreferrer\">Getting started guide</a></p>\n"}], "owner": {"reputation": 3118, "user_id": 1005169, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/dad86a58fdf87f48302bb45e08ca3b84?s=128&d=identicon&r=PG", "display_name": "twigg", "link": "https://stackoverflow.com/users/1005169/twigg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1991, "favorite_count": 0, "accepted_answer_id": 55232546, "answer_count": 2, "score": 6, "last_activity_date": 1612629657, "creation_date": 1552947545, "last_edit_date": 1600191641, "question_id": 55230896, "link": "https://stackoverflow.com/questions/55230896/rocket-requires-a-minimum-version-of-rust-nightly-but-a-higher-stable-version-i", "title": "Rocket requires a minimum version of Rust nightly, but a higher stable version is already installed", "body": "<p>I'm trying to run <a href=\"https://rocket.rs/v0.4/guide/getting-started/\" rel=\"nofollow noreferrer\">Rocket</a> but I'm falling at the first hurdle. When trying to <code>cargo run</code>, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: failed to run custom build command for `pear_codegen v0.1.2`\nError: Pear requires a nightly or dev version of Rust.\nInstalled version is: 1.33.0 (2019-02-28). Minimum required: 1.31.0-nightly (2018-10-05).\n</code></pre>\n\n<p>I'm new to Rust, but coming from other languages this makes no sense whatsoever. It needs version 1.31.0 as a minimum but I have version 1.33.0 installed.</p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["process", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552946199, "post_id": 55230450, "comment_id": 97195583, "body": "Very relevant question: <a href=\"https://stackoverflow.com/q/49210815/1233251\">stackoverflow.com/q/49210815/1233251</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552960667, "post_id": 55230450, "comment_id": 97199216, "body": "Leading underscores indicate that a variable is unused, but you wish to use <code>_child</code>. Use <code>child</code> instead, please."}, {"owner": {"reputation": 79, "user_id": 10220930, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/54xcC.jpg?s=128&g=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/10220930/andrew"}, "edited": false, "score": 0, "creation_date": 1552999339, "post_id": 55230450, "comment_id": 97215411, "body": "Didn&#39;t know it, thanks for the remark."}], "answers": [{"tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 6, "last_activity_date": 1552960803, "last_edit_date": 1552960803, "creation_date": 1552952995, "answer_id": 55231715, "question_id": 55230450, "link": "https://stackoverflow.com/questions/55230450/how-to-kill-a-running-child-process-on-windows-in-rust/55231715#55231715", "title": "How to kill a running child process on Windows in Rust?", "body": "<p>TL;DR: Use the <a href=\"https://doc.rust-lang.org/std/process/struct.Child.html#method.kill\" rel=\"noreferrer\">kill</a> method. For example:</p>\n\n<pre><code>use std::process;\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let mut child = process::Command::new(\"ping\")\n        .arg(\"8.8.8.8\")\n        .arg(\"-t\")\n        .spawn()\n        .expect(\"Couldn't run 'ping'\");\n\n    thread::sleep(Duration::from_secs(5));\n    child.kill().expect(\"!kill\");\n}\n</code></pre>\n\n<p>Notice how you don't need a separate thread, since the spawned process is already parallel to the parent process.</p>\n\n<p>In your question, there is a code example which uses \"cmd /C\" to run the \"ping\". This spawns not one but two processes: the \"cmd\" process and the \"ping\" process. Killing the <code>child</code> will kill the \"cmd\" process but might leave the \"ping\" process running.</p>\n\n<p>Using \"cmd /C\" is also dangerous, allowing for <a href=\"https://www.owasp.org/index.php/Command_Injection\" rel=\"noreferrer\">command injection</a>.</p>\n\n<blockquote>\n  <p>How can I access the <code>_child</code> created in the <code>create_process</code> function to terminate its process?</p>\n</blockquote>\n\n<p>The <code>_child</code> <a href=\"https://doc.rust-lang.org/std/process/struct.Child.html#synthetic-implementations\" rel=\"noreferrer\">is <code>Send</code></a>, which means that you can send it from thread to thread. The particulars of sending data across threads is likely to have been covered already in a number of corresponding Stack Overflow questions.</p>\n\n<blockquote>\n  <p>Are there any other ways to kill that process? </p>\n</blockquote>\n\n<p>You can use the native platform APIs. For example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[dependencies]\ngstuff = \"0.5.2\"\nwinapi = {version = \"0.3.6\", features = [\"psapi\", \"shellapi\"]}\n</code></pre>\n\n<pre><code>#[macro_use]\nextern crate gstuff;\n\nuse std::process;\nuse std::ptr::null_mut;\nuse std::thread;\nuse std::time::Duration;\nuse winapi::shared::minwindef::DWORD;\nuse winapi::shared::ntdef::HANDLE;\nuse winapi::um::processthreadsapi::{OpenProcess, TerminateProcess};\nuse winapi::um::winnt::{PROCESS_QUERY_INFORMATION, PROCESS_TERMINATE};\n\nstruct Process(HANDLE);\nimpl Process {\n    fn open(pid: DWORD) -&gt; Result&lt;Process, String&gt; {\n        // https://msdn.microsoft.com/en-us/library/windows/desktop/ms684320%28v=vs.85%29.aspx\n        let pc = unsafe { OpenProcess(PROCESS_QUERY_INFORMATION | PROCESS_TERMINATE, 0, pid) };\n        if pc == null_mut() {\n            return ERR!(\"!OpenProcess\");\n        }\n        Ok(Process(pc))\n    }\n\n    fn kill(self) -&gt; Result&lt;(), String&gt; {\n        unsafe { TerminateProcess(self.0, 1) };\n        Ok(())\n    }\n}\nimpl Drop for Process {\n    fn drop(&amp;mut self) {\n        unsafe { winapi::um::handleapi::CloseHandle(self.0) };\n    }\n}\n\nfn main() {\n    let child = process::Command::new(\"ping\")\n        .arg(\"8.8.8.8\")\n        .arg(\"-t\")\n        .spawn()\n        .expect(\"Couldn't run 'ping'\");\n\n    let pid = child.id();\n    let pc = Process::open(pid as DWORD).expect(\"!open\");\n    println!(\"Process {} opened.\", pid);\n    thread::sleep(Duration::from_secs(5));\n    pc.kill().expect(\"!kill\");\n    println!(\"Process {} killed.\", pid);\n}\n</code></pre>\n"}], "owner": {"reputation": 79, "user_id": 10220930, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/54xcC.jpg?s=128&g=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/10220930/andrew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1662, "favorite_count": 0, "accepted_answer_id": 55231715, "answer_count": 1, "score": 2, "last_activity_date": 1552960803, "creation_date": 1552945392, "last_edit_date": 1552960609, "question_id": 55230450, "link": "https://stackoverflow.com/questions/55230450/how-to-kill-a-running-child-process-on-windows-in-rust", "title": "How to kill a running child process on Windows in Rust?", "body": "<p>I have a function which creates a process on Windows.</p>\n\n<pre><code>pub fn create_process(url: String) {\n    thread::spawn(move || {\n        let _child = process::Command::new(\"cmd.exe\")\n            .arg(\"/C\")\n            .arg(\"ping\")\n            .arg(&amp;url)\n            .arg(\"-t\")\n            .spawn()\n            .expect(\"Couldn't run 'ping'\");\n    });\n}\n</code></pre>\n\n<p>I have a function which I want to terminate (kill) the process created by 'create_process()':</p>\n\n<pre><code>pub fn stop() {\n    // ?????\n}\n</code></pre>\n\n<p>How can I access the <code>_child</code> created in <code>create_process</code> function to terminate its process? Are there any other ways to kill that process?</p>\n"}, {"tags": ["rust", "conditional-compilation"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1552959738, "post_id": 55229433, "comment_id": 97199036, "body": "<i>whether we&#39;re compiling for a build script</i> \u2014 this doesn&#39;t make sense. A build script is only contained within a special file (e.g. <code>build.rs</code>). There is no other context that it can be compiled in."}, {"owner": {"reputation": 2524, "user_id": 1000145, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ed1f474d23ef1e028ef377c4f638d409?s=128&d=identicon&r=PG", "display_name": "Tim Vis&#233;e", "link": "https://stackoverflow.com/users/1000145/tim-vis%c3%a9e"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553004844, "post_id": 55229433, "comment_id": 97219107, "body": "Thanks for your answer. I&#39;ll explain what situation I&#39;d like to use it for: It&#39;s for generating shell completion scripts through <code>clap</code> at compile time. I&#39;ve quite a comprehensive <code>App</code> definition across multiple files (in the main application). I want to pull this in in <code>build.rs</code> to generate the definitions. This pulls some dependencies with it, which I&#39;d like to exclude when used by the <code>build.rs</code> file.  (what is suggested: <a href=\"https://docs.rs/clap/2.32.0/clap/struct.App.html#examples-47\" rel=\"nofollow noreferrer\">docs.rs/clap/2.32.0/clap/struct.App.html#examples-47</a>) (what I want to use: <a href=\"https://github.com/timvisee/ffsend/blob/master/src/cmd/handler.rs#L51\" rel=\"nofollow noreferrer\">github.com/timvisee/ffsend/blob/master/src/cmd/handler.rs#L5&zwnj;&#8203;1</a>)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553005150, "post_id": 55229433, "comment_id": 97219320, "body": "<i>which I&#39;d like to exclude when used by the build.rs file</i> \u2014 why? You will have to build these for the main application anyway"}, {"owner": {"reputation": 2524, "user_id": 1000145, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ed1f474d23ef1e028ef377c4f638d409?s=128&d=identicon&r=PG", "display_name": "Tim Vis&#233;e", "link": "https://stackoverflow.com/users/1000145/tim-vis%c3%a9e"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553005372, "post_id": 55229433, "comment_id": 97219486, "body": "It requires me to define quite a few <code>dev-dependencies</code>. Along with that, it feels unnecessary include quite a lot of code that isn&#39;t covered in the <code>build.rs</code> script. I believe the script should be as simple as possible, without pulling in the whole main application. I&#39;d like to refrain from defining <code>App</code> a second time, and want to prevent duplicate code."}], "answers": [{"comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1552983396, "post_id": 55233900, "comment_id": 97205751, "body": "You can enable feature at build time by putting following line <code>println!(&quot;cargo:rustc-cfg=feature=\\&quot;build-time\\&quot;&quot;)</code> into the <code>build.rs:main</code> for example. But the scope is different. It affects current crate only, not dependencies (see <a href=\"https://github.com/rust-lang/cargo/issues/5499\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/5499</a> for more info). Also if you enable feature in this way, it will be enabled in the build result (bin, lib) as well. So, it doesn&#39;t help in this case."}, {"owner": {"reputation": 2524, "user_id": 1000145, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ed1f474d23ef1e028ef377c4f638d409?s=128&d=identicon&r=PG", "display_name": "Tim Vis&#233;e", "link": "https://stackoverflow.com/users/1000145/tim-vis%c3%a9e"}, "edited": false, "score": 0, "creation_date": 1553004902, "post_id": 55233900, "comment_id": 97219145, "body": "That&#39;s indeed one way of going about it, but it feels a little clunky. I&#39;d prefer having an extra feature just for the <code>build.rs</code> script instead of the other way around. But I don&#39;t think there&#39;s a way to instruct the compiler to do so. Any logic in the <code>build.rs</code> script would only be evaluated after compiling it (and pulling in application sources)."}], "tags": [], "owner": {"reputation": 730, "user_id": 3283003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/969f644f75512332a20f0ea1ff6e64d0?s=128&d=identicon&r=PG&f=1", "display_name": "Squirrel", "link": "https://stackoverflow.com/users/3283003/squirrel"}, "is_accepted": false, "score": 1, "last_activity_date": 1553005937, "last_edit_date": 1553005937, "creation_date": 1552971412, "answer_id": 55233900, "question_id": 55229433, "link": "https://stackoverflow.com/questions/55229433/conditional-compilation-for-rust-build-rs-script/55233900#55233900", "title": "Conditional compilation for Rust build.rs script?", "body": "<p>You can just put the build code in build.rs (or presumably have build.rs declare a mod xyz to pull in another file).</p>\n\n<p>I wonder if the question you are trying to ask is whether you can reference the same code from build.rs and main.rs, and if so can that code tell if it's being called by one or the other. It seems you could switch on an environment variable set when using build.rs (using something like <a href=\"https://doc.rust-lang.org/stable/std/macro.option_env.html\" rel=\"nofollow noreferrer\"><code>option_env</code></a>, but possibly a nicer way might be to enable a feature in the main code from within build.rs.</p>\n\n<p>(Have a read of <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">the documentation for build scripts</a> if you haven't already.)</p>\n"}], "owner": {"reputation": 2524, "user_id": 1000145, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ed1f474d23ef1e028ef377c4f638d409?s=128&d=identicon&r=PG", "display_name": "Tim Vis&#233;e", "link": "https://stackoverflow.com/users/1000145/tim-vis%c3%a9e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1261, "favorite_count": 0, "answer_count": 1, "score": 6, "last_activity_date": 1553524146, "creation_date": 1552940299, "last_edit_date": 1553524146, "question_id": 55229433, "link": "https://stackoverflow.com/questions/55229433/conditional-compilation-for-rust-build-rs-script", "title": "Conditional compilation for Rust build.rs script?", "body": "<p>The Rust language supports <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html\" rel=\"nofollow noreferrer\">conditional compilation</a> using attributes like <code>#[cfg(test)]</code>.\nRust also supports <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">build scripts</a> using a <code>build.rs</code> file to run code as part of the build process to prepare for compilation.</p>\n\n<p>I would like to use conditional compilation in Rust code to conditionally compile depending on whether we're compiling for a build script, similar to how that is possible for <code>test</code> builds.</p>\n\n<p>Imagine the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(build)]\nfn main() {\n    // Part of build script\n}\n\n#[cfg(not(build))]\nfn main() {\n    // Not part of build script, probably regular build\n}\n</code></pre>\n\n<p>This does not work, because <code>build</code> is not a valid identifier here.\nIs it possible to do this using a different attribute, or could some other trick be used to achieve something similar?</p>\n\n<hr>\n\n<p>For some context on this issue:<br>\nMy goal is to generate shell completion scripts through <code>clap</code> at compile time. I've quite a comprehensive <code>App</code> definition across multiple files in the  application. I'd like to use this in <code>build.rs</code> by including these parts using the <code>include!(...)</code> macro (as <a href=\"https://docs.rs/clap/2.32.0/clap/struct.App.html#examples-47\" rel=\"nofollow noreferrer\">suggested</a> by <code>clap</code>), so I don't have to define <code>App</code> a second time. This pulls some dependencies with it, which I'd like to exclude when used by the <code>build.rs</code> file as they aren't needed in that case. <a href=\"https://github.com/timvisee/ffsend/blob/f51bd673ff60f9403260702a90a4f192e6f93538/src/cmd/handler.rs#L51\" rel=\"nofollow noreferrer\">This</a> is what I'm trying to make available in my <code>build.rs</code> script.</p>\n"}, {"tags": ["multithreading", "concurrency", "rust"], "answers": [{"comments": [{"owner": {"reputation": 301, "user_id": 7692787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BHZtQ.jpg?s=128&g=1", "display_name": "ludeed", "link": "https://stackoverflow.com/users/7692787/ludeed"}, "edited": false, "score": 0, "creation_date": 1552938171, "post_id": 55228719, "comment_id": 97192367, "body": "If I kill the thread that spawns other threads, what happen to the other threads ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 301, "user_id": 7692787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BHZtQ.jpg?s=128&g=1", "display_name": "ludeed", "link": "https://stackoverflow.com/users/7692787/ludeed"}, "edited": false, "score": 1, "creation_date": 1552938497, "post_id": 55228719, "comment_id": 97192523, "body": "@LudeeD there is to way to kill a thread in Rust, so the answer is <a href=\"http://wiki.c2.com/?MuAnswer\" rel=\"nofollow noreferrer\"><i>mu</i></a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1552938884, "last_edit_date": 1552938884, "creation_date": 1552937207, "answer_id": 55228719, "question_id": 55228629, "link": "https://stackoverflow.com/questions/55228629/how-does-rust-handle-killing-threads/55228719#55228719", "title": "How does Rust handle killing threads?", "body": "<blockquote>\n  <p>How does Rust handle killing threads?</p>\n</blockquote>\n\n<p>It doesn't; there is no way to kill a thread.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/26199926/155423\">How to terminate or suspend a Rust thread from another thread?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35883390/155423\">How to check if a thread has finished in Rust?</a></li>\n</ul>\n\n<blockquote>\n  <p>Is there a parent-child connection between threads that are spawned?</p>\n</blockquote>\n\n<p>When you spawn a thread, you get a <a href=\"https://doc.rust-lang.org/std/thread/struct.JoinHandle.html\" rel=\"noreferrer\"><code>JoinHandle</code></a> that allows you to wait for the child thread to finish. The child does not know of the parent.</p>\n\n<blockquote>\n  <p>[what happens to the other threads] in the context of a thread panicking and dying</p>\n</blockquote>\n\n<p>The documentation for <a href=\"https://doc.rust-lang.org/std/thread/fn.spawn.html\" rel=\"noreferrer\"><code>thread::spawn</code></a> covers this well:</p>\n\n<blockquote>\n  <p>The join handle will implicitly <em>detach</em> the child thread upon being\n  dropped. In this case, the child thread may outlive the parent (unless\n  the parent thread is the main thread; the whole process is terminated when\n  the main thread finishes). Additionally, the join handle provides a <a href=\"https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join\" rel=\"noreferrer\"><code>join</code></a>\n  method that can be used to join the child thread. If the child thread\n  panics, <a href=\"https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join\" rel=\"noreferrer\"><code>join</code></a> will return an <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err\" rel=\"noreferrer\"><code>Err</code></a> containing the argument given to\n  <a href=\"https://doc.rust-lang.org/std/macro.panic.html\" rel=\"noreferrer\"><code>panic</code></a>.</p>\n</blockquote>\n\n<p>That is, once a child thread has been started, what happens to the parent thread basically doesn't matter, unless the parent thread was the main thread, in which case the entire process is terminated.</p>\n"}], "owner": {"reputation": 301, "user_id": 7692787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BHZtQ.jpg?s=128&g=1", "display_name": "ludeed", "link": "https://stackoverflow.com/users/7692787/ludeed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1983, "favorite_count": 0, "accepted_answer_id": 55228719, "answer_count": 1, "score": 3, "last_activity_date": 1552938884, "creation_date": 1552936776, "last_edit_date": 1552937238, "question_id": 55228629, "link": "https://stackoverflow.com/questions/55228629/how-does-rust-handle-killing-threads", "title": "How does Rust handle killing threads?", "body": "<p>Is there a parent-child connection between threads that are spawned?\nIf I kill the thread from where I spawned other threads, are those going to get killed too? Is this OS specific?</p>\n"}, {"tags": ["rust", "coercion"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552932257, "post_id": 55227015, "comment_id": 97189624, "body": "Is <code>&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;T</code> -&gt; <code>&amp;U</code> what you are looking for?"}, {"owner": {"reputation": 1811, "user_id": 9808098, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d9c44d685cabf03d0555543896b4ba1?s=128&d=identicon&r=PG&f=1", "display_name": "vesii", "link": "https://stackoverflow.com/users/9808098/vesii"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552933770, "post_id": 55227015, "comment_id": 97190326, "body": "@Shepmaster Ah, what does it mean? I&#39;m lookin for a useful example."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552934517, "post_id": 55227015, "comment_id": 97190700, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/47237733/why-doesnt-a-nested-reference-to-an-array-coerce-to-a-slice\">Why doesn&#39;t a nested reference to an array coerce to a slice?</a> tl;dr: it&#39;s not implemented."}], "owner": {"reputation": 1811, "user_id": 9808098, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d9c44d685cabf03d0555543896b4ba1?s=128&d=identicon&r=PG&f=1", "display_name": "vesii", "link": "https://stackoverflow.com/users/9808098/vesii"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1552935233, "answer_count": 0, "score": 1, "last_activity_date": 1552932050, "creation_date": 1552930388, "last_edit_date": 1592644375, "question_id": 55227015, "link": "https://stackoverflow.com/questions/55227015/what-is-an-example-of-implicit-coercion-transitivity", "closed_reason": "Duplicate", "title": "What is an example of implicit coercion transitivity?", "body": "<p>I read the following <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">in the Nomicon</a>:</p>\n<blockquote>\n<p>Coercion is allowed between the following types:</p>\n<p>Transitivity: <code>T_1</code> to <code>T_3</code> where <code>T_1</code> coerces to <code>T_2</code> and <code>T_2</code> coerces to <code>T_3</code>.</p>\n</blockquote>\n<p>I could not find an example which proves it. I can not think of two types that have no implicit coercion between them but there is a third type that has an implicit coercion between those two.</p>\n<p>This is the first time I came across this great concept so I'd be glad to see a real example.</p>\n"}, {"tags": ["rust", "char", "ascii", "predicate"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1552928977, "post_id": 55226368, "comment_id": 97187897, "body": "In addition to my answer, I would recommend changing the final <code>map</code> to a <code>for</code> loop. It is not really good style to put side effects in a <code>map</code> function, and it leads to problems with borrowing, which are unnecessary here. Here is how I would fix it: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fd45cf27e26e150f6eb0247fac3198be\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1552929090, "post_id": 55226368, "comment_id": 97187964, "body": "@PeterHall thank you for the suggestion. I was just trying that approach after reading your answer below. Thanks again."}], "answers": [{"comments": [{"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "edited": false, "score": 0, "creation_date": 1552932243, "post_id": 55226530, "comment_id": 97189619, "body": "I&#39;ve just looked at the signature for <code>char::is_numeric</code> vs <code>char::is_ascii_punctuation</code> and the former takes <code>self</code> while the latter takes <code>&amp;self</code>.  As to specifically why all the ascii methods for <code>char</code> take <code>&amp;self</code> rather than <code>self</code>, I have no idea. Especially as the methods all seem to dereference <code>self</code> in the function body."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1552995316, "last_edit_date": 1552995316, "creation_date": 1552928626, "answer_id": 55226530, "question_id": 55226368, "link": "https://stackoverflow.com/questions/55226368/type-mismatch-using-trim-end-matches-as-closure-function-expected-signature/55226530#55226530", "title": "Type mismatch using trim_end_matches as closure function: expected signature ... found signature of &quot;for&lt;&#39;r&gt; ...&quot;", "body": "<p>As the error says, <code>trim_end_matches</code> expects the argument to be a function that takes a <code>char</code>, but <code>char::is_ascii_punctuation</code> takes its argument by reference.</p>\n\n<p>You can just add a closure to convert:</p>\n\n<pre><code>.map(|word| word.trim_end_matches(|c| char::is_ascii_punctuation(&amp;c)))\n</code></pre>\n\n<hr>\n\n<p>Most predicate methods on <code>char</code> (e.g. <code>is_alphanumerc</code>) take <code>self</code> but, for historical backwards-compatibility reasons (see <a href=\"https://github.com/rust-lang/rust/pull/44042#issuecomment-370399951\" rel=\"nofollow noreferrer\">RFC comments</a>), the ASCII-specific methods take <code>&amp;self</code>. For non-ASCII methods you could just do, for example:</p>\n\n<pre><code>.map(|word| word.trim_end_matches(char::is_alphanumeric))\n</code></pre>\n"}], "owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 380, "favorite_count": 0, "accepted_answer_id": 55226530, "answer_count": 1, "score": 1, "last_activity_date": 1552995441, "creation_date": 1552928063, "last_edit_date": 1552995441, "question_id": 55226368, "link": "https://stackoverflow.com/questions/55226368/type-mismatch-using-trim-end-matches-as-closure-function-expected-signature", "title": "Type mismatch using trim_end_matches as closure function: expected signature ... found signature of &quot;for&lt;&#39;r&gt; ...&quot;", "body": "<p>I have the code below to do a word count in which punctuation is ignored.</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn word_count(words: &amp;str) -&gt; HashMap&lt;String, u32&gt; {\n    let mut hm: HashMap&lt;String, u32&gt; = HashMap::new();\n    words\n        .split_whitespace()\n        .map(|word| word.trim_end_matches(char::is_ascii_punctuation))\n        .map(|word| {\n            hm.entry(word.to_string())\n                .and_modify(|val| *val += 1)\n                .or_insert(0)\n        });\n    hm\n}\n</code></pre>\n\n<p>But the compiler complains with </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in function arguments\n --&gt; src/lib.rs:7:26\n  |\n7 |         .map(|word| word.trim_end_matches(char::is_ascii_punctuation))\n  |                          ^^^^^^^^^^^^^^^^\n  |                          |\n  |                          expected signature of `fn(char) -&gt; _`\n  |                          found signature of `for&lt;'r&gt; fn(&amp;'r char) -&gt; _`\n  |\n  = note: required because of the requirements on the impl of `std::str::pattern::Pattern&lt;'_&gt;` for `for&lt;'r&gt; fn(&amp;'r char) -&gt; bool {std::char::methods::&lt;impl char&gt;::is_ascii_punctuation}`\n</code></pre>\n\n<p>I can't make out what the error really means or how my usage differs from that in the docs for <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.trim_end_matches\" rel=\"nofollow noreferrer\"><code>trim_end_matches</code></a>: <code>assert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");</code></p>\n"}, {"tags": ["postgresql", "rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1552917124, "post_id": 55219102, "comment_id": 97180675, "body": "I&#39;d say, either use <code>$1::uuid</code> and <code>&amp;stuff.stuff_id</code> (no conversion to <code>&amp;str</code>) or use <code>$1</code> (no <code>::uuid</code>) and <code>&amp;format!(&quot;{}&quot;, &amp;stuff.stuff_id).as_str()</code>. As is you&#39;re telling postgres to expect a UUID object, but you&#39;re passing a string\u2026"}, {"owner": {"reputation": 3010, "user_id": 1222135, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b80a4b5f0be0575599f7b18b80ced91c?s=128&d=identicon&r=PG", "display_name": "greg", "link": "https://stackoverflow.com/users/1222135/greg"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1552925927, "post_id": 55219102, "comment_id": 97186193, "body": "@Jmb, the <code>$1::uuid</code> is a cast operator on the first argument, if the first argument is a string, it will be cast into a <code>uuid</code>. On the rust part, the array used to pass query parameters is an array of <code>&amp;str</code>. I will follow @shepmaster instruction to provide a better question."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1552928415, "last_edit_date": 1592644375, "creation_date": 1552928415, "answer_id": 55226470, "question_id": 55219102, "link": "https://stackoverflow.com/questions/55219102/cannot-convert-to-or-from-a-postgres-value-of-type-uuid-when-inserting-into-po/55226470#55226470", "title": "Cannot convert to or from a Postgres value of type `uuid` when inserting into Postgres", "body": "<p>The <a href=\"https://crates.io/crates/postgres\" rel=\"nofollow noreferrer\">crate page</a> states:</p>\n<blockquote>\n<h2>Optional features</h2>\n<h3>UUID type</h3>\n<p>UUID support is provided optionally by the <code>with-uuid</code> feature, which adds <code>ToSql</code> and <code>FromSql</code> implementations for <code>uuid</code>'s <code>Uuid</code> type. Requires <code>uuid</code> version 0.5.</p>\n</blockquote>\n<p>You haven't specified the feature, and you are using an incompatible version of uuid.</p>\n<p><strong>Cargo.toml</strong></p>\n<pre class=\"lang-none prettyprint-override\"><code>[package]\nname = &quot;repro&quot;\nversion = &quot;0.1.0&quot;\nedition = &quot;2018&quot;\n\n[dependencies]\npostgres = { version = &quot;0.15.2&quot;, features = [&quot;with-uuid&quot;] }\nuuid = &quot;0.5&quot;\n</code></pre>\n<p><strong>Database setup</strong></p>\n<pre class=\"lang-sql prettyprint-override\"><code>CREATE TABLE junk (id uuid);\n</code></pre>\n<p><strong>Code</strong></p>\n<pre class=\"lang-rust prettyprint-override\"><code>use postgres::{Connection, TlsMode};\nuse std::error::Error;\nuse uuid::Uuid;\n\nfn main() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let conn = Connection::connect(\n        &quot;postgresql://shep@localhost:5432/stackoverflow&quot;,\n        TlsMode::None,\n    )\n    .unwrap();\n\n    let stuff_id = Uuid::default();\n\n    conn.execute(\n        &quot;insert into public.junk (id) values ($1)&quot;,\n        &amp;[&amp;stuff_id],\n    )?;\n\n    Ok(())\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a></li>\n</ul>\n"}], "owner": {"reputation": 3010, "user_id": 1222135, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b80a4b5f0be0575599f7b18b80ced91c?s=128&d=identicon&r=PG", "display_name": "greg", "link": "https://stackoverflow.com/users/1222135/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 468, "favorite_count": 1, "accepted_answer_id": 55226470, "answer_count": 1, "score": 1, "last_activity_date": 1552985390, "creation_date": 1552904446, "last_edit_date": 1552985390, "question_id": 55219102, "link": "https://stackoverflow.com/questions/55219102/cannot-convert-to-or-from-a-postgres-value-of-type-uuid-when-inserting-into-po", "title": "Cannot convert to or from a Postgres value of type `uuid` when inserting into Postgres", "body": "<p>Here is the code I use to insert data in a Postgres database using the <code>postgres</code> crate (not present on Rust Playground unfortunately):</p>\n\n<p>With the following Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"suff-import\"\nversion = \"0.1.0\"\nauthors = [\"greg\"]\n\n[dependencies]\ncsv = \"1\"\npostgres = \"0.15\"\nuuid = \"0.7\"\n\n</code></pre>\n\n<p>File <code>main.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate csv;\nextern crate postgres;\nextern crate uuid;\n\nuse uuid::Uuid;\nuse postgres::{Connection, TlsMode};\nuse std::error::Error;\nuse std::io;\nuse csv::StringRecord;\n\nstruct Stuff {\n    stuff_id: Uuid,\n    created_at: String,\n    description: String,\n    is_something: bool,\n}\n\nimpl Stuff {\n    fn from_string_record(record: StringRecord) -&gt; Stuff {\n        Stuff {\n            stuff_id: Uuid::parse_str(record.get(0).unwrap()).unwrap(),\n            created_at: record.get(1).unwrap().to_string(),\n            description: record.get(2).unwrap().to_string(),\n            is_something: record.get(3).unwrap().to_string().parse::&lt;i32&gt;().unwrap() == 2,\n        }\n    }\n}\n\nfn save_row(dbcon: &amp;Connection, stuff: Stuff) -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    dbcon.execute(\n        \"insert into public.stuff (stuff_id, created_at, description, is_something) values ($1::uuid, $2, $3, $4)\",\n        &amp;[&amp;format!(\"{}\", &amp;stuff.stuff_id).as_str(), &amp;stuff.created_at, &amp;stuff.description, &amp;stuff.is_something]\n    )?;\n    Ok(())\n}\n\n\nfn import() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let mut reader = csv::Reader::from_reader(io::stdin());\n    let dbcon = Connection::connect(\"postgres://gregoire@10.129.198.251/gregoire\", TlsMode::None).unwrap();\n\n    for result in reader.records() {\n        let record = result?;\n        println!(\".\");\n        save_row(&amp;dbcon, Stuff::from_string_record(record))?;\n    }\n\n    Ok(())\n}\n\nfn main() {\n    if let Err(error) = import() {\n        println!(\"There were some errors: {}\", error);\n        std::process::exit(1);\n    }\n}\n</code></pre>\n\n<p>The program compiles, but it exits when run with the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./target/debug/suff-import &lt;&lt;EOF\nstuff_id,created_at,description,is_something\n5252fff5-d04f-4e0f-8d3e-27da489cf40c,\"2019-03-15 16:39:32\",\"This is a description\",1\nEOF\n.\nThere were some errors: type conversion error: cannot convert to or from a Postgres value of type `uuid`\n\n</code></pre>\n\n<p>I tested turning the UUID into a <code>&amp;str</code> with the <code>format!</code> macro as Postgres should implicitly do the conversion to UUID, but it did not work (same error message). I then added an explicit <code>$1::uuid</code> in the Postgres query but the problem still occurs. </p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1552913323, "post_id": 55216601, "comment_id": 97178258, "body": "It&#39;s important to note that types outside of the standard library can implement <code>Write</code> (or more generically, any trait from any crate can be implemented by a type in another crate). The best thing to do is is look at your own locally-generated documentation in your project (<code>cargo doc</code>) to ensure that types from other crates you are using are included."}, {"owner": {"reputation": 2611, "user_id": 1256550, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a518982e4b321585b3490809d459cbcc?s=128&d=identicon&r=PG", "display_name": "undefined", "link": "https://stackoverflow.com/users/1256550/undefined"}, "edited": false, "score": 1, "creation_date": 1590834348, "post_id": 55216601, "comment_id": 109834498, "body": "If it possible to get it programmatically? Like getting a <code>Vec&lt;Trait&gt;</code> when the trait and all the implements are local?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 2611, "user_id": 1256550, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a518982e4b321585b3490809d459cbcc?s=128&d=identicon&r=PG", "display_name": "undefined", "link": "https://stackoverflow.com/users/1256550/undefined"}, "edited": false, "score": 0, "creation_date": 1590908926, "post_id": 55216601, "comment_id": 109854727, "body": "@undefined Rust doesn&#39;t have Reflection builtin, therefore I highly doubt it. Or maybe I&#39;m missunderstanding your question. You better should create a new one :)"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 9, "last_activity_date": 1552898523, "last_edit_date": 1552898523, "creation_date": 1552895034, "answer_id": 55216601, "question_id": 55216559, "link": "https://stackoverflow.com/questions/55216559/how-can-i-get-a-list-of-types-that-implement-a-particular-trait-in-rust/55216601#55216601", "title": "How can I get a list of types that implement a particular trait in Rust?", "body": "<p>When you lookup the <a href=\"https://doc.rust-lang.org/std/\" rel=\"noreferrer\">API for <code>std</code></a> you can search for your trait there (e.g. <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html\" rel=\"noreferrer\"><code>std::io::Write</code></a>).</p>\n\n<p>When you scroll down to the section \"<a href=\"https://doc.rust-lang.org/std/io/trait.Write.html#implementors\" rel=\"noreferrer\">Implementors</a>\" you will see all structs/enums that implement that trait in <code>std</code>.</p>\n\n<p>To get a better overview, you can use the <kbd>+</kbd> or <kbd>-</kbd> keys to collapse all sections and have a nice overview, e.g. </p>\n\n<p><img src=\"https://i.stack.imgur.com/ZgB09.png\" alt=\"Write implementors overview\"></p>\n"}], "owner": {"reputation": 153, "user_id": 8522152, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e4d2890561489533101b153f549c752?s=128&d=identicon&r=PG&f=1", "display_name": "dchiba", "link": "https://stackoverflow.com/users/8522152/dchiba"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 578, "favorite_count": 0, "accepted_answer_id": 55216601, "answer_count": 1, "score": 3, "last_activity_date": 1565803160, "creation_date": 1552894834, "last_edit_date": 1565803160, "question_id": 55216559, "link": "https://stackoverflow.com/questions/55216559/how-can-i-get-a-list-of-types-that-implement-a-particular-trait-in-rust", "title": "How can I get a list of types that implement a particular trait in Rust?", "body": "<p>I want to know a struct that implements <code>std::io::Write</code>; is it described in some document?</p>\n"}, {"tags": ["datetime", "rust", "rust-chrono"], "answers": [{"tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 10, "last_activity_date": 1552913187, "last_edit_date": 1552913187, "creation_date": 1552878744, "answer_id": 55214287, "question_id": 55214065, "link": "https://stackoverflow.com/questions/55214065/how-to-set-a-chrono-datetime-to-a-specific-date-and-time/55214287#55214287", "title": "How to set a chrono DateTime to a specific date and time?", "body": "<p>There is a function called <a href=\"https://docs.rs/chrono/0.4.6/chrono/offset/trait.TimeZone.html#method.ymd\" rel=\"noreferrer\"><code>ymd</code></a> for the <code>TimeZone</code> trait that returns a date. You can then call <a href=\"https://docs.rs/chrono/0.4.6/chrono/struct.Date.html#method.and_hms\" rel=\"noreferrer\"><code>and_hms</code></a> on this date to set a specific time.</p>\n\n<pre><code>use chrono::TimeZone;\nlet dt = chrono::Local.ymd(2019, 3, 17).and_hms(16, 43, 0);\n</code></pre>\n"}], "owner": {"reputation": 1538, "user_id": 1046184, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/49c6adaf420d8003e9c2e568f211f7ae?s=128&d=identicon&r=PG", "display_name": "Factor Three", "link": "https://stackoverflow.com/users/1046184/factor-three"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 837, "favorite_count": 0, "accepted_answer_id": 55214287, "answer_count": 1, "score": 3, "last_activity_date": 1552913187, "creation_date": 1552876764, "last_edit_date": 1552913168, "question_id": 55214065, "link": "https://stackoverflow.com/questions/55214065/how-to-set-a-chrono-datetime-to-a-specific-date-and-time", "title": "How to set a chrono DateTime to a specific date and time?", "body": "<p>I need to create a <code>chrono::DateTime&lt;Local&gt;</code> instance that is set to a specific date and time. For example, I need to create a <code>DateTime&lt;Local&gt;</code> instance that is set to something like 3/17/2019 at 4:43 PM (or 3/17/2019 at 16:43).</p>\n\n<p>The documentation for the <code>DateTime</code> struct shows how to get the current date and time via the <code>now</code> function and plenty of support for getting time durations. There appears to be some confusing traits and conversion functions, but there doesn't appear to be anything that allows me to directly create a <code>DateTime</code> instance that represents a specific date and time.</p>\n\n<p>Is it possible to create such an instance? If so, how?</p>\n"}, {"tags": ["generics", "rust", "generic-programming", "rust-diesel"], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 10461877, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-_Nfeb4HI7k0/AAAAAAAAAAI/AAAAAAAAAEo/RgIHYh8Y1pQ/photo.jpg?sz=128", "display_name": "Frank Br&#252;tting", "link": "https://stackoverflow.com/users/10461877/frank-br%c3%bctting"}, "edited": false, "score": 0, "creation_date": 1552951229, "post_id": 55213728, "comment_id": 97197166, "body": "Ok, so inserting the trait bounds mentioned in the cargo errors doesn\u2019t really help here. I mostly understand what you\u2019re doing here, yet I sadly don\u2019t see a comprehensible path from those error messages to your proposed solution, even when doing small steps. So guess one just has to know more about how Diesel works. However, thank you very much for your help!  In the <code>filter</code> variant, all tables have a primary key \u201cid: String\u201d column. How does this need to be specified? And is there a benefit in making the primary key generic, even if it is <code>&amp;str</code> in all cases?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1553025992, "last_edit_date": 1553025992, "creation_date": 1552873322, "answer_id": 55213728, "question_id": 55213466, "link": "https://stackoverflow.com/questions/55213466/generic-usage-of-diesels-find-or-filter-to-perform-deletions/55213728#55213728", "title": "Generic usage of Diesel&#39;s find or filter to perform deletions", "body": "<p>Generics aren't easy. Generics in a highly generic system like Diesel are even harder.</p>\n\n<p>I prefer to break the steps down into <em>very</em> small parts and avoid chaining as much as possible. With that in play, you will basically need to add trait bounds for each step. One nice thing to do is to use / create type aliases for very complicated trait bounds. <a href=\"https://docs.rs/diesel/1.4.1/diesel/helper_types/index.html\" rel=\"noreferrer\">Diesel provides a number of these</a> and you can make your own for your special uses.</p>\n\n<p>While I looked at the error messages generated, I mostly looked at the type bounds described by the functions / methods being called.</p>\n\n<p>Point-by-point:</p>\n\n<ol>\n<li><a href=\"https://docs.rs/diesel/1.4.1/diesel/query_dsl/methods/trait.FindDsl.html#tymethod.find\" rel=\"noreferrer\"><code>.find</code></a> comes from <a href=\"https://docs.rs/diesel/1.4.1/diesel/query_dsl/methods/trait.FindDsl.html#tymethod.find\" rel=\"noreferrer\"><code>FindDsl</code></a>.</li>\n<li><a href=\"https://docs.rs/diesel/1.4.1/diesel/fn.delete.html\" rel=\"noreferrer\"><code>delete</code></a> requires <a href=\"https://docs.rs/diesel/1.4.1/diesel/query_builder/trait.IntoUpdateTarget.html\" rel=\"noreferrer\"><code>IntoUpdateTarget</code></a>.</li>\n<li>The resulting type of calling <code>delete</code> is a <a href=\"https://docs.rs/diesel/1.4.1/diesel/query_builder/struct.DeleteStatement.html\" rel=\"noreferrer\"><code>DeleteStatement</code></a>, parameterized with <code>T::Table</code> and <code>T::WhereClause</code>. This is the custom type alias <code>DeleteFindStatement</code>.</li>\n<li><a href=\"https://docs.rs/diesel/1.4.1/diesel/query_dsl/methods/trait.ExecuteDsl.html#tymethod.execute\" rel=\"noreferrer\"><code>.execute</code></a> comes from <a href=\"https://docs.rs/diesel/1.4.1/diesel/query_dsl/methods/trait.ExecuteDsl.html#tymethod.execute\" rel=\"noreferrer\"><code>ExecuteDsl</code></a>.</li>\n</ol>\n\n<pre><code>use diesel::{\n    associations::HasTable,\n    helper_types::Find,\n    query_builder::{DeleteStatement, IntoUpdateTarget},\n    query_dsl::methods::ExecuteDsl,\n};\n\ntype DeleteFindStatement&lt;F&gt; =\n    DeleteStatement&lt;&lt;F as HasTable&gt;::Table, &lt;F as IntoUpdateTarget&gt;::WhereClause&gt;;\n\nimpl DB {\n    pub fn remove_row&lt;Tbl, Pk&gt;(&amp;self, table: Tbl, pk: Pk) -&gt; Result&lt;(), Box&lt;Error&gt;&gt;\n    where\n        Tbl: FindDsl&lt;Pk&gt;,\n        Find&lt;Tbl, Pk&gt;: IntoUpdateTarget,\n        DeleteFindStatement&lt;Find&lt;Tbl, Pk&gt;&gt;: ExecuteDsl&lt;SqliteConnection&gt;,\n    {\n        let find = table.find(pk);\n        let delete = diesel::delete(find);\n        delete.execute(&amp;self.conn)?;\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>You will need to try it on your own for the <code>filter</code>-based version, as you didn't provide enough code to tell what <code>id</code> should even be; as shown in your error message.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/54558719/155423\">How to define a function-local type alias of the function&#39;s type parameters (or their associated types)?</a></li>\n</ul>\n\n<blockquote>\n  <p>is there a benefit in making the primary key generic, even if it is <code>&amp;str</code> in all cases?</p>\n</blockquote>\n\n<p>For me, it's easier to use a generic type than it is to insert a bunch of generic lifetime parameters.</p>\n"}], "owner": {"reputation": 55, "user_id": 10461877, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-_Nfeb4HI7k0/AAAAAAAAAAI/AAAAAAAAAEo/RgIHYh8Y1pQ/photo.jpg?sz=128", "display_name": "Frank Br&#252;tting", "link": "https://stackoverflow.com/users/10461877/frank-br%c3%bctting"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1802, "favorite_count": 0, "accepted_answer_id": 55213728, "answer_count": 1, "score": 4, "last_activity_date": 1553025992, "creation_date": 1552870460, "last_edit_date": 1552871311, "question_id": 55213466, "link": "https://stackoverflow.com/questions/55213466/generic-usage-of-diesels-find-or-filter-to-perform-deletions", "title": "Generic usage of Diesel&#39;s find or filter to perform deletions", "body": "<p>I'm trying to use generic Diesel functions to shrink repetitive tasks like deleting a row based on the primary key. </p>\n\n<p>I got generic insertion of rows working relatively quick, but deletion queries seem to be quite hard. I tried solving it both by using <code>find()</code> and <code>filter()</code>. I also consulted similar topics <a href=\"https://stackoverflow.com/questions/48487871/generic-function-using-diesel-causes-overflow\">1</a> and <a href=\"https://stackoverflow.com/questions/47874398/how-do-i-combine-multiple-functions-using-diesel-into-one-through-abstraction\">2</a> without success.</p>\n\n<h3>Using <code>find</code></h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use diesel::prelude::*;\nuse diesel::query_dsl::methods::FindDsl;\nuse std::error::Error;\n\npub struct DB {\n    conn: SqliteConnection,\n}\n\nimpl DB {\n    pub fn remove_row&lt;'a, T&gt;(&amp;self, table: T, pk: &amp;'a str) -&gt; Result&lt;(), Box&lt;Error&gt;&gt;\n    where\n        T: FindDsl&lt;&amp;'a str&gt;,\n        &lt;T as FindDsl&lt;&amp;'a str&gt;&gt;::Output: diesel::Identifiable,\n        &lt;T as FindDsl&lt;&amp;'a str&gt;&gt;::Output: diesel::associations::HasTable,\n    {\n        diesel::delete(table.find(pk)).execute(&amp;self.conn)?;\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>This leads to the following error which I cannot interpret at all:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `_: std::marker::Sized`\n   --&gt; src/db/mod.rs:103:3\n    |\n103 |         diesel::delete (table.find (pk)) .execute (&amp;self.conn) ?;\n    |         ^^^^^^^^^^^^^^\n    |\n    = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n    = note: required because of the requirements on the impl of `diesel::query_dsl::filter_dsl::FilterDsl&lt;_&gt;` for `&lt;&lt;&lt;T as diesel::query_dsl::filter_dsl::FindDsl&lt;&amp;'a str&gt;&gt;::Output as diesel::associations::HasTable&gt;::Table as diesel::query_builder::AsQuery&gt;::Query`\n    = note: required because of the requirements on the impl of `diesel::query_builder::IntoUpdateTarget` for `&lt;T as diesel::query_dsl::filter_dsl::FindDsl&lt;&amp;'a str&gt;&gt;::Output`\n    = note: required by `diesel::delete`\n</code></pre>\n\n<h3>Using <code>filter()</code></h3>\n\n<pre><code>use diesel::prelude::*;\nuse diesel::query_dsl::methods::FilterDsl;\nuse std::error::Error;\n\npub struct DB {\n    conn: SqliteConnection,\n}\n\nimpl DB {\n    pub fn remove_row&lt;T&gt;(&amp;self, table: T, pk: &amp;str) -&gt; Result&lt;(), Box&lt;Error&gt;&gt;\n    where\n        T: FilterDsl&lt;bool&gt;,\n        &lt;T as FilterDsl&lt;bool&gt;&gt;::Output: diesel::Identifiable,\n        &lt;T as FilterDsl&lt;bool&gt;&gt;::Output: diesel::associations::HasTable,\n    {\n        diesel::delete(table.filter(id.eq(pk))).execute(&amp;self.conn)?;\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>In addition to the previous error, this has an error message about <code>id</code> not being known in the data structure. I can think about one missing trait, which guarantees the existence of that row, but I haven\u2019t found anything about such behavior.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find value `id` in this scope\n   --&gt; src/db/mod.rs:117:33\n    |\n117 |         diesel::delete (table.filter (id.eq (pk))) .execute (&amp;self.conn) ?;\n    |                                       ^^ not found in this scope\nhelp: possible candidates are found in other modules, you can import them into scope\n    |\n4   | use crate::db::schema::events::columns::id;\n    |\n4   | use crate::db::schema::ignored_events::columns::id;\n    |\n4   | use crate::db::schema::locations::columns::id;\n    |\n4   | use std::process::id;\n\n\nerror[E0275]: overflow evaluating the requirement `_: std::marker::Sized`\n   --&gt; src/db/mod.rs:117:3\n    |\n117 |         diesel::delete (table.filter (id.eq (pk))) .execute (&amp;self.conn) ?;\n    |         ^^^^^^^^^^^^^^\n    |\n    = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n    = note: required because of the requirements on the impl of `diesel::query_dsl::filter_dsl::FilterDsl&lt;_&gt;` for `&lt;&lt;&lt;T as diesel::query_dsl::filter_dsl::FilterDsl&lt;bool&gt;&gt;::Output as diesel::associations::HasTable&gt;::Table as diesel::query_builder::AsQuery&gt;::Query`\n    = note: required because of the requirements on the impl of `diesel::query_builder::IntoUpdateTarget` for `&lt;T as diesel::query_dsl::filter_dsl::FilterDsl&lt;bool&gt;&gt;::Output`\n    = note: required by `diesel::delete`\n</code></pre>\n"}, {"tags": ["xml", "rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1552844533, "creation_date": 1552844533, "answer_id": 55210010, "question_id": 55208814, "link": "https://stackoverflow.com/questions/55208814/how-to-deserialize-xml-to-different-structs-based-on-tag-name-using-serde-xml-rs/55210010#55210010", "title": "How to deserialize XML to different structs based on tag name using serde_xml_rs?", "body": "<p>Usually you would do this by mirroring the same data structure in your Rust types:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\nstruct LevelData {\n    planetary: PlanetaryData,\n}\n\n#[derive(Serialize, Deserialize)]\nstruct PlanetaryData {\n    mass: f64,\n}\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 8665027, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CcIW5WObokg/AAAAAAAAAAI/AAAAAAAAAAQ/H4dkDXKsivo/photo.jpg?sz=128", "display_name": "Andrew Chon", "link": "https://stackoverflow.com/users/8665027/andrew-chon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 0, "accepted_answer_id": 55210010, "answer_count": 1, "score": 0, "last_activity_date": 1552844589, "creation_date": 1552837287, "last_edit_date": 1552844589, "question_id": 55208814, "link": "https://stackoverflow.com/questions/55208814/how-to-deserialize-xml-to-different-structs-based-on-tag-name-using-serde-xml-rs", "title": "How to deserialize XML to different structs based on tag name using serde_xml_rs?", "body": "<p>I am using <a href=\"https://crates.io/crates/serde-xml-rs\" rel=\"nofollow noreferrer\">serde-xml-rs</a> for easy information transfer that I or anyone else can change later without having to code in Rust.</p>\n\n<p>It looks something like this:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;root&gt;\n    &lt;mass&gt;1&lt;/mass&gt;\n    &lt;pole_radius&gt;1&lt;/pole_radius&gt;\n    &lt;eq_radius&gt;1&lt;/eq_radius&gt;\n    &lt;atmos_n2&gt;1&lt;/atmos_n2&gt;\n    &lt;atmos_o2&gt;1&lt;/atmos_o2&gt;\n    &lt;atmos_ar&gt;1&lt;/atmos_ar&gt;\n    &lt;atmos_co2&gt;1&lt;/atmos_co2&gt;\n    &lt;atmos_ne&gt;1&lt;/atmos_ne&gt;\n    &lt;atmos_he&gt;1&lt;/atmos_he&gt;\n    &lt;atmos_ch4&gt;1&lt;/atmos_ch4&gt;\n    &lt;atmos_h20&gt;1&lt;/atmos_h20&gt;\n&lt;/root&gt;\n</code></pre>\n\n<p>Which works, but it's kind of ugly and a lot to take in. I want it to be more like this:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;root&gt;\n    &lt;planetary&gt;\n        &lt;mass&gt;1&lt;/mass&gt;\n        &lt;pole_radius&gt;1&lt;/pole_radius&gt;\n        &lt;eq_radius&gt;1&lt;/eq_radius&gt;\n    &lt;/planetary&gt;\n    &lt;atmos&gt;\n        &lt;n2&gt;1&lt;/n2&gt;\n        &lt;o2&gt;1&lt;/o2&gt;\n        &lt;!-- slimmed it down so that it saves space for this post --&gt;\n    &lt;atmos&gt;\n&lt;/root&gt;\n</code></pre>\n\n<p>I am not sure how to use <code>serde_xml_rs</code> to work with that system. Here is how it is setup right now, which works when it reads the first XML snippet:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_xml_rs;\n\nuse std::fs::File;\nuse std::io::Read;\n\n#[derive(Serialize, Deserialize)]\nstruct LevelData {\n    mass: f64,\n    // more here, again slimmed for the post\n}\n\nfn init() {\n    let mut file = File::open(\"Level.xml\").unwrap();\n    let mut buff = String::new();\n    file.read_to_string(&amp;mut buff).unwrap();\n    let level_data: LevelData = serde_xml_rs::from_str(&amp;buff).unwrap();\n}\nfn main() {\n    init();\n}\n</code></pre>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 2, "creation_date": 1552830835, "post_id": 55207764, "comment_id": 97151543, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/q/34439977/5223757\">Lifetime of variables passed to a new thread</a>"}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "reply_to_user": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 1, "creation_date": 1552831121, "post_id": 55207764, "comment_id": 97151628, "body": "Thanks @wizzwizz4, that&#39;s just what I was trying to find!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552831227, "post_id": 55207764, "comment_id": 97151665, "body": "See also the additional duplicate."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1552831252, "post_id": 55207764, "comment_id": 97151671, "body": "@Zak In which case, can you click the &quot;this answered my question&quot; button? Edit: Never mind; you have."}], "owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 33, "favorite_count": 0, "closed_date": 1552831140, "answer_count": 0, "score": 1, "last_activity_date": 1552831207, "creation_date": 1552830609, "question_id": 55207764, "link": "https://stackoverflow.com/questions/55207764/using-program-arguments-within-a-thread", "closed_reason": "Duplicate", "title": "Using program arguments within a thread", "body": "<p>I am having issues passing command-line arguments into threads so have constructed this program which illustrates my issue.</p>\n\n<pre><code>use std::env;\nuse std::io::{self, Write};\nuse std::thread;\n\nfn main() {\n  let stdout = io::stdout();\n\n  let args: Vec&lt;String&gt; = env::args().collect();\n  let arg = &amp;args[1];\n\n  let thread = thread::spawn(move || {\n    writeln!(stdout.lock(), \"argument was \\\"{}\\\"\", arg).unwrap();\n  });\n\n  thread.join().unwrap();\n}\n</code></pre>\n\n<p>However, the compiler gives me the following error when I try to compile this...</p>\n\n<pre><code>error[E0597]: `args` does not live long enough\n  --&gt; main.rs:9:14\n   |\n9  |   let arg = &amp;args[1];\n   |              ^^^^ borrowed value does not live long enough\n...\n16 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>I am unsure as to how to compile a program like this. I understand the the <code>&amp;str</code> created by <code>&amp;args[1]</code> does not have a static lifetime so cannot be passed into the thread. However, what options are there for passing in program arguments into a thread?</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552808313, "post_id": 55204816, "comment_id": 97146097, "body": "when you bind a value, you must use let, for example, <code>let (s3, s4) = ...</code>"}, {"owner": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552808630, "post_id": 55204816, "comment_id": 97146157, "body": "As i mentioned it works for single variable without using let keyword. then how that happens."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 1, "creation_date": 1552808823, "post_id": 55204816, "comment_id": 97146207, "body": "I think you need to read <a href=\"https://stackoverflow.com/a/47649554/9204\">stackoverflow.com/a/47649554/9204</a> and <a href=\"https://stackoverflow.com/questions/42311825/what-is-exactly-lvalue-context-in-rust\" title=\"what is exactly lvalue context in rust\">stackoverflow.com/questions/42311825/&hellip;</a>."}, {"owner": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "edited": false, "score": 0, "creation_date": 1552809321, "post_id": 55204816, "comment_id": 97146292, "body": "the example seems little complicated to me since I am beginner, can you please explain what is fundamental difference between first(not working) and second example(working) in updated question."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1552814116, "post_id": 55204816, "comment_id": 97147293, "body": "Ok, added an answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552829519, "post_id": 55204816, "comment_id": 97151122, "body": "Please take the time to go back and re-read <a href=\"https://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>, specifically the <a href=\"https://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html\" rel=\"nofollow noreferrer\">section on variables</a>. Many introductory topics are covered by the book, such as introductory syntax."}], "answers": [{"comments": [{"owner": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "edited": false, "score": 0, "creation_date": 1552809771, "post_id": 55204855, "comment_id": 97146372, "body": "Found this explanation.  <a href=\"https://www.reddit.com/r/rust/comments/6d4j9b/invalid_lefthand_side_expression_why/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/6d4j9b/&hellip;</a>"}], "tags": [], "owner": {"reputation": 4270, "user_id": 3197668, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qSH5e.jpg?s=128&g=1", "display_name": "Alexander Ejbekov", "link": "https://stackoverflow.com/users/3197668/alexander-ejbekov"}, "is_accepted": false, "score": 1, "last_activity_date": 1552829320, "last_edit_date": 1552829320, "creation_date": 1552808329, "answer_id": 55204855, "question_id": 55204816, "link": "https://stackoverflow.com/questions/55204816/what-is-the-meaning-of-the-error-left-hand-of-expression-not-valid/55204855#55204855", "title": "What is the meaning of the error &quot;left-hand of expression not valid&quot;?", "body": "<p>You're missing the <code>let</code> keyword; it should be a variable or a let statement:</p>\n\n<pre><code>let (s3, s4) = take_n_giveback(s3, s4);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 595, "user_id": 1602870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bef8865f3a9e875278c74f3b9e2de014?s=128&d=identicon&r=PG", "display_name": "pexeer", "link": "https://stackoverflow.com/users/1602870/pexeer"}, "is_accepted": false, "score": -1, "last_activity_date": 1552829424, "last_edit_date": 1552829424, "creation_date": 1552808439, "answer_id": 55204872, "question_id": 55204816, "link": "https://stackoverflow.com/questions/55204816/what-is-the-meaning-of-the-error-left-hand-of-expression-not-valid/55204872#55204872", "title": "What is the meaning of the error &quot;left-hand of expression not valid&quot;?", "body": "<pre><code>fn main() {\n    let s3 = String::from(\"hello\");\n    let s4 = String::from(\"wolrd\");\n\n    let (s3, s4) = take_n_giveback(s3, s4);\n\n    println!(\"{0} and {1}\", s3, s4);\n}\n\nfn take_n_giveback(x: String, y: String) -&gt; (String, String) {\n    (x, y)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "edited": false, "score": 0, "creation_date": 1552895156, "post_id": 55205526, "comment_id": 97168374, "body": "although I have understood how it works, can you explain how it gets a fixed location when we write let (s3, s4) = take_n_giveback(s3, s4)? is it like when we create binding using &quot;let&quot; rust allocates continuous memory location s3 and s4 and then it becomes lvalue?"}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "edited": false, "score": 0, "creation_date": 1552901242, "post_id": 55205526, "comment_id": 97171335, "body": "<code>let</code> uses a pattern, not an lvalue, so <code>(s3, s4)</code> here doesn&#39;t need a fixed location at all. It does allocate memory locations (on stack) for <code>s3</code> and <code>s4</code>, but I don&#39;t know if they are guaranteed to follow each other."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "edited": false, "score": 0, "creation_date": 1552901499, "post_id": 55205526, "comment_id": 97171485, "body": "Maybe it&#39;ll also help to think of something which is a lvalue, but not a pattern: indexing or field acccess. So you can write <code>s[0] = x;</code> (for suitable types), but not <code>let s[0] = x;</code>."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "edited": false, "score": 1, "creation_date": 1552902009, "post_id": 55205526, "comment_id": 97171758, "body": "I&#39;ve checked the reference and lvalues are now called place expressions. So the answer has been slightly updated."}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": true, "score": 10, "last_activity_date": 1552901931, "last_edit_date": 1552901931, "creation_date": 1552814096, "answer_id": 55205526, "question_id": 55204816, "link": "https://stackoverflow.com/questions/55204816/what-is-the-meaning-of-the-error-left-hand-of-expression-not-valid/55205526#55205526", "title": "What is the meaning of the error &quot;left-hand of expression not valid&quot;?", "body": "<pre><code>let ... = ... // or let mut\n</code></pre>\n\n<p>is a <strong>binding</strong>: it creates new variables.</p>\n\n<pre><code>... = ...\n</code></pre>\n\n<p>(without <code>let</code>) is an <strong>assignment</strong>: it changes values of already bound variables (or their parts). See <a href=\"https://stackoverflow.com/questions/47648958/whats-the-semantic-of-assignment-in-rust/47649554#47649554\">What&#39;s the semantic of assignment in Rust?</a> for more explanation of this difference.</p>\n\n<p>The left hand of a binding must be a <strong>pattern</strong>; the left hand of an assignment must be an <strong>place expression</strong> (formerly called lvalue). As explained in <a href=\"https://doc.rust-lang.org/reference/expressions.html#place-expressions-and-value-expressions\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/reference/expressions.html#place-expressions-and-value-expressions</a></p>\n\n<blockquote>\n  <blockquote>\n    <p>A place expression is an expression that represents a memory location. These expressions are paths which refer to local variables, static variables, dereferences (<code>*expr</code>), array indexing expressions (<code>expr[expr]</code>), field references (<code>expr.f</code>) and parenthesized place expressions. All other expressions are value expressions.</p>\n  </blockquote>\n</blockquote>\n\n<p><code>(s3, s4)</code> is a pattern, but it isn't a place expression, because it isn't one of the above; it doesn't represent a fixed memory location.</p>\n\n<blockquote>\n  <p>This operation works fine when passing single string and returning back.</p>\n</blockquote>\n\n<p>A variable name, like <code>s3</code>, can be used both a pattern and as a place expression. But with different meanings! When it's used in an assignment </p>\n\n<pre><code>let mut s3 = String::from(\"hello\");\ns3 = take_n_giveback(s3);\n</code></pre>\n\n<p>it represents the location of the variable declared by <code>let mut s3</code>, so there is only a single variable; but in</p>\n\n<pre><code>let mut s3 = String::from(\"hello\");\nlet s3 = take_n_giveback(s3);\n</code></pre>\n\n<p>it creates a new variable called <code>s3</code>, so there are two different variables which happen to have the same name. This is why it works even if the first one is not <code>mut</code>.</p>\n"}], "owner": {"reputation": 541, "user_id": 8407160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATLGJ.png?s=128&g=1", "display_name": "Akshay Naik", "link": "https://stackoverflow.com/users/8407160/akshay-naik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 843, "favorite_count": 0, "accepted_answer_id": 55205526, "answer_count": 3, "score": 1, "last_activity_date": 1552901931, "creation_date": 1552807929, "last_edit_date": 1552829310, "question_id": 55204816, "link": "https://stackoverflow.com/questions/55204816/what-is-the-meaning-of-the-error-left-hand-of-expression-not-valid", "title": "What is the meaning of the error &quot;left-hand of expression not valid&quot;?", "body": "<p>I wrote this code to see what happens when I pass two strings to a function and return them back again:</p>\n\n<pre><code>fn main() {\n    let mut s3 = String::from(\"hello\");\n    let mut s4 = String::from(\"wolrd\");\n\n    (s3, s4) = take_n_giveback(s3, s4);\n\n    println!(\"{0} and {1}\", s3, s4);\n}\n\nfn take_n_giveback(x: String, y: String) -&gt; (String, String) {\n    (x, y)\n}\n</code></pre>\n\n<p>I am getting an error which is not helpful:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0070]: invalid left-hand side expression\n --&gt; src/main.rs:5:5\n  |\n5 |     (s3, s4) = take_n_giveback(s3, s4);\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ left-hand of expression not valid\n</code></pre>\n\n<p>This operation works fine when passing single string and returning back. </p>\n\n<pre><code>fn main() {\n    let mut s3 = String::from(\"hello\");\n    s3 = take_n_giveback(s3);\n    println!(\"{0} \", s3);\n}\n\nfn take_n_giveback(x: String) -&gt; (String) {\n    x\n}\n</code></pre>\n\n<p>What's wrong here? What is the meaning of the error and in what situations can be encountered in code?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1552775922, "post_id": 55202126, "comment_id": 97141434, "body": "Do you really need an array of tuples to iterate over? At least in the MCVE?"}, {"owner": {"reputation": 657, "user_id": 2547570, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/66ac34b6d04aa0bf9c738ef391c8b722?s=128&d=identicon&r=PG", "display_name": "mq7", "link": "https://stackoverflow.com/users/2547570/mq7"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1552776136, "post_id": 55202126, "comment_id": 97141487, "body": "I included the tuple because the behavior with tuples was different. For example, <code>for (a, mut b) in &amp;mut[..]</code> produces new errors."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552786789, "post_id": 55202126, "comment_id": 97143193, "body": "This is an old and somewhat obscure compiler bug. The linked Q&amp;A found the same thing. The same thing they did will also work here (wrap the expression in <code>{}</code> instead of <code>()</code>). You could also write something like <code>&amp;mut (&amp;obj[&quot;key&quot;]).as_array().unwrap().iter()</code>; the shared reference lets the compiler know that it can use <code>Index</code> instead of <code>IndexMut</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1552787344, "post_id": 55202126, "comment_id": 97143268, "body": "Credit for figuring it out should also go to @Michail for workshopping the example in chat."}], "owner": {"reputation": 657, "user_id": 2547570, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/66ac34b6d04aa0bf9c738ef391c8b722?s=128&d=identicon&r=PG", "display_name": "mq7", "link": "https://stackoverflow.com/users/2547570/mq7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "closed_date": 1552829916, "answer_count": 0, "score": 1, "last_activity_date": 1552775964, "creation_date": 1552775389, "last_edit_date": 1552775964, "question_id": 55202126, "link": "https://stackoverflow.com/questions/55202126/mut-owned-value-errors", "closed_reason": "Duplicate", "title": "&amp;mut (owned value) errors", "body": "<p>I have a reference to an object (<code>&amp;T</code>) and <code>&amp;mut ((&amp;T).method1().method2().iter())</code> where <code>iter()</code> returns an owned value. However, this produces an error that it tries to mutably borrow <code>&amp;T</code>.</p>\n\n<p>This simple example is working:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A;\n\nimpl A {\n    fn get_array(&amp;self) -&gt; Vec&lt;u32&gt; {\n        vec![1,2,3]\n    }\n}\n\n\nfn main() {\n    let a = &amp;A{};\n    for (_q_name, q_iter) in &amp;mut [\n        (\n            \"iterator1\",\n            &amp;mut (a.get_array().iter()) // mutably borrow iterator\n                as &amp;mut dyn std::iter::Iterator&lt;Item = &amp;u32&gt;,\n        ),\n    ] {\n\n        for n in  q_iter {\n            println!(\"{}\", n);\n        }\n    }\n}\n\n</code></pre>\n\n<p>This does not:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json::{json,Value};\n\nfn main() {\n    let obj:&amp;Value = &amp;json!({\n        \"key\": [1,2,3],\n    });\n\n\n    let mut it = obj[\"key\"].as_array().unwrap().iter();\n    for (_q_name, q_iter) in &amp;mut [\n        (\n            \"iterator1\",\n//          &amp;mut (obj[\"key\"].as_array().unwrap().iter())      // error\n//          &amp;mut it                                           // ok\n                as &amp;mut dyn std::iter::Iterator&lt;Item = &amp;Value&gt;,\n        ),\n    ] {\n\n        for n in  q_iter {\n            println!(\"{}\", n);\n        }\n    }\n\n}\n\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0596]: cannot borrow `*obj` as mutable, as it is behind a `&amp;` reference\n  --&gt; src/main.rs:14:16\n   |\n14 |          &amp;mut (obj[\"key\"].as_array().unwrap().iter())      // error\n   |                ^^^ `obj` is a `&amp;` reference, so the data it refers to cannot be borrowed as mutable\nhelp: consider changing this to be a mutable reference\n   |\n5  |     let obj:&amp;Value = &amp;mut json!({\n6  |         \"key\": [1,2,3],\n7  |     });\n   |\n\n</code></pre>\n\n<p>I just want my iterator mutable, not <code>obj</code>.</p>\n\n<p>If I cannot mutably borrow an owned value, why is the first example working?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=51e7ddceb4eb7a9325137c658e7287ab\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Edit: removed wrong code</p>\n"}, {"tags": ["rust", "covariance"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1552770633, "post_id": 55200843, "comment_id": 97140171, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\">Why doesn&#39;t Rust support trait object upcasting?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 5, "creation_date": 1552771109, "post_id": 55200843, "comment_id": 97140297, "body": "<code>B</code> is a sub<i>trait</i> of <code>A</code>, not a sub<i>type</i>. Subtyping in Rust is only to do with lifetimes, as the Nomicon says: &quot;The only reason we have subtyping is so we can pass long-lived things where short-lived things are expected.&quot;"}, {"owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552828829, "post_id": 55200843, "comment_id": 97150933, "body": "@trentcl then why do they say : <code>Box&lt;T&gt;</code> is covariant of type <code>T</code>, where T can be any type?"}, {"owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552828891, "post_id": 55200843, "comment_id": 97150951, "body": "@trentcl btw it is not a duplicate, mine it&#39;s about covariance."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552829853, "post_id": 55200843, "comment_id": 97151216, "body": "<code>Box&lt;T&gt;</code> is covariant in <code>T</code>, but <code>dyn B</code> is not a subtype of <code>dyn A</code>, so <code>Box&lt;dyn B&gt;</code> is not a subtype of <code>Box&lt;dyn A&gt;</code>. Simple as that. A supertrait relationship is not an inheritance relationship. The duplicate explains why your code doesn&#39;t work, but it doesn&#39;t have anything to do with subtyping or variance."}, {"owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552830747, "post_id": 55200843, "comment_id": 97151515, "body": "The duplicate explains why there&#39;s no coercion between traits.  In all other languages,  variance in generic type establish if we can create subtype relationship between C&lt;B&gt; and C&lt;A&gt; if B &lt;: A.  My point is: the doc mislead the reader by saying it is covariant over T when there are no use cases to that.  Except, if there is another lifetime inside the T, such as :  T is a &amp;&#39;a E."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1552832661, "post_id": 55208084, "comment_id": 97152113, "body": "<i>&quot;The Nomicon is not a fully polished document.&quot;</i> \u2014 personally, I this whole section is quite bad and introducing a hypothetical language extension is not the right way to teach this."}, {"owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "edited": false, "score": 0, "creation_date": 1552839747, "post_id": 55208084, "comment_id": 97154434, "body": "Thanks for the explanation.  I understand that subtyping is only available for lifetimes.  However, the way they present it with &#39;a and T having different variability is so stupid IMO.  It is not clear that T must have a lifetime."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1552856367, "post_id": 55208084, "comment_id": 97159632, "body": "Regarding &quot;<code>B</code> is clearly a subtype of <code>A</code>&quot;, I would add that <code>A</code> and <code>B</code> are note even <i>types</i>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1552856514, "post_id": 55208084, "comment_id": 97159683, "body": "@SvenMarnach depends on if we are being strict about using <a href=\"https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type\">the <code>dyn</code> keyword</a>... In some contexts <code>A</code> is indeed a type, but for maximum clarity it&#39;s better to say that <code>dyn A</code> is the type."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1553544140, "last_edit_date": 1553544140, "creation_date": 1552832579, "answer_id": 55208084, "question_id": 55200843, "link": "https://stackoverflow.com/questions/55200843/covariance-of-box-type-in-rust/55208084#55208084", "title": "Covariance of Box type in Rust", "body": "<h2>What subtyping and variance means in Rust</h2>\n\n<p>The Nomicon is not a fully polished document. Right now, 5 of the most recent 10 issues in that repo specifically deal with subtyping or variance based on their title alone. The concepts in the Nomicon can require substantial effort, but the information is generally there.</p>\n\n<p>First off, check out some initial paragraphs (emphasis mine):</p>\n\n<blockquote>\n  <p>Subtyping in Rust is a bit different from subtyping in other languages. This makes it harder to give simple examples, which is a problem since subtyping, and especially variance, are already hard to understand properly.</p>\n  \n  <p>To keep things simple, this section will consider a small <strong>extension to the Rust language</strong> that adds a new and simpler subtyping relationship. After establishing concepts and issues under this simpler system, we will then relate it back to how subtyping actually occurs in Rust.</p>\n</blockquote>\n\n<p>It then goes on to show some trait-based code. Reiterating the point, this code is <strong>not</strong> Rust code anymore; traits do not form subtypes in Rust!</p>\n\n<p>Later on, there's this quote:</p>\n\n<blockquote>\n  <p>First and foremost, subtyping references based on their lifetimes is the <em>entire point of subtyping</em> in Rust. The only reason we have subtyping is so we can pass long-lived things where short-lived things are expected.</p>\n</blockquote>\n\n<p>Rust's notion of subtyping <strong>only applies to lifetimes</strong>.</p>\n\n<h2>What's an example of subtyping and variance?</h2>\n\n<h3>Variant lifetimes</h3>\n\n<p>Here's an example of subtyping and variance of lifetimes at work inside of a <code>Box</code>.</p>\n\n<p><strong>A failing case</strong></p>\n\n<pre><code>fn smaller&lt;'a&gt;(v: Box&lt;&amp;'a i32&gt;) {\n    bigger(v)\n}\n\nfn bigger(v: Box&lt;&amp;'static i32&gt;) {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:2:12\n  |\n2 |     bigger(v)\n  |            ^ lifetime mismatch\n  |\n  = note: expected type `std::boxed::Box&lt;&amp;'static i32&gt;`\n             found type `std::boxed::Box&lt;&amp;'a i32&gt;`\nnote: the lifetime 'a as defined on the function body at 1:12...\n --&gt; src/lib.rs:1:12\n  |\n1 | fn smaller&lt;'a&gt;(v: Box&lt;&amp;'a i32&gt;) {\n  |            ^^\n  = note: ...does not necessarily outlive the static lifetime\n</code></pre>\n\n<p><strong>A working case</strong></p>\n\n<pre><code>fn smaller&lt;'a&gt;(v: Box&lt;&amp;'a i32&gt;) {}\n\nfn bigger(v: Box&lt;&amp;'static i32&gt;) {\n    smaller(v)\n}\n</code></pre>\n\n<h3>Invariant lifetimes</h3>\n\n<p>Here's a case that works:</p>\n\n<pre><code>struct S&lt;'a&gt;(&amp;'a i32);\n\nfn smaller&lt;'a&gt;(_v: &amp;S&lt;'a&gt;, _x: &amp;'a i32) {}\n\nfn bigger(v: &amp;S&lt;'static&gt;) {\n    let x: i32 = 1;\n    smaller(v, &amp;x);\n}\n</code></pre>\n\n<p>The same code with all the references changed to mutable references will fail because mutable references are invariant:</p>\n\n<pre><code>struct S&lt;'a&gt;(&amp;'a mut i32);\n\nfn smaller&lt;'a&gt;(_v: &amp;mut S&lt;'a&gt;, _x: &amp;'a mut i32) {}\n\nfn bigger(v: &amp;mut S&lt;'static&gt;) {\n    let mut x: i32 = 1;\n    smaller(v, &amp;mut x);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `x` does not live long enough\n --&gt; src/lib.rs:7:16\n  |\n7 |     smaller(v, &amp;mut x);\n  |     -----------^^^^^^-\n  |     |          |\n  |     |          borrowed value does not live long enough\n  |     argument requires that `x` is borrowed for `'static`\n8 | }\n  | - `x` dropped here while still borrowed\n</code></pre>\n\n<h2>Addressing specific points</h2>\n\n<blockquote>\n  <p><code>B</code> is clearly a \"subtype\" of <code>A</code></p>\n</blockquote>\n\n<p>It is not.</p>\n\n<blockquote>\n  <p><code>Box</code> is covariant over its input</p>\n</blockquote>\n\n<p>It is, where covariance is only applicable to lifetimes.</p>\n\n<blockquote>\n  <p>I don't know why it doesn't work or why it won't do any type coercion.</p>\n</blockquote>\n\n<p>This is covered by <a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\">Why doesn&#39;t Rust support trait object upcasting?</a></p>\n\n<blockquote>\n  <p>Why would they consider <code>Box&lt;T&gt;</code> to be covariant</p>\n</blockquote>\n\n<p>Because it is, for the things in Rust to which variance is applied.</p>\n\n<h2>See also</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/37580570/155423\">How do I deal with wrapper type invariance in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32165917/155423\">Why does linking lifetimes matter only with mutable references?</a></li>\n<li><a href=\"https://stackoverflow.com/q/55344893/155423\">What is an example of contravariant use in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 669, "favorite_count": 0, "accepted_answer_id": 55208084, "answer_count": 1, "score": 5, "last_activity_date": 1609335921, "creation_date": 1552765656, "last_edit_date": 1609335921, "question_id": 55200843, "link": "https://stackoverflow.com/questions/55200843/covariance-of-box-type-in-rust", "title": "Covariance of Box type in Rust", "body": "<p>After I read <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">the subtyping chapter of the Nomicon</a>, I couldn't wrap my head around covariance of a type parameter.  Especially for the <code>Box&lt;T&gt;</code> type, which is described as: <code>T is covariant</code>.</p>\n<p>However, if I write this code:</p>\n<pre><code>trait A {}\ntrait B: A {}\n\nstruct C;\nimpl A for C {}\nimpl B for C {}\n\nfn foo(v: Box&lt;dyn A&gt;) {}\n\nfn main() {\n    let c = C;\n    let b: Box&lt;dyn B&gt; = Box::new(c);\n    foo(b);\n}\n</code></pre>\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0dc4421860c4c4c5861d68cbf17cde5e\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:13:9\n   |\n13 |     foo(b);\n   |         ^ expected trait `A`, found trait `B`\n   |\n   = note: expected type `std::boxed::Box&lt;(dyn A + 'static)&gt;`\n              found type `std::boxed::Box&lt;dyn B&gt;`\n</code></pre>\n<p><code>B</code> is clearly a &quot;subtype&quot; of <code>A</code> and <code>Box</code> is covariant over its input.  I don't know why it doesn't work or why it won't do any type coercion. Why would they consider <code>Box&lt;T&gt;</code> to be covariant where the only use cases are invariants?</p>\n"}, {"tags": ["rust", "rust-diesel", "rust-rocket"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1552831147, "creation_date": 1552831147, "answer_id": 55207839, "question_id": 55199658, "link": "https://stackoverflow.com/questions/55199658/accessing-the-rocket-0-4-database-connection-pool-in-a-request-guard/55207839#55207839", "title": "Accessing the Rocket 0.4 database connection pool in a request guard", "body": "<p>The Rocket <a href=\"https://rocket.rs/v0.4/guide/state/#databases\" rel=\"noreferrer\">guide for database state</a> says:</p>\n\n<blockquote>\n  <p>Whenever a connection to the database is needed, use your [database pool] type as a request guard</p>\n</blockquote>\n\n<p>Since a database pool can be created via <code>FromRequest</code> and you are implementing <code>FromRequest</code>, use the existing implementation via <code>DbPool::from_request(request)</code>: </p>\n\n<pre><code>use rocket::{\n    request::{self, FromRequest, Request},\n    Outcome,\n};\n\n// =====\n// This is a dummy implementation of a pool\n// Refer to the Rocket guides for the correct way to do this\nstruct DbPool;\n\nimpl&lt;'a, 'r&gt; FromRequest&lt;'a, 'r&gt; for DbPool {\n    type Error = &amp;'static str;\n\n    fn from_request(_: &amp;'a Request&lt;'r&gt;) -&gt; request::Outcome&lt;Self, Self::Error&gt; {\n        Outcome::Success(Self)\n    }\n}\n// =====\n\nstruct MyDbType;\n\nimpl MyDbType {\n    fn from_db(_: &amp;DbPool) -&gt; Self {\n        Self\n    }\n}\n\nimpl&lt;'a, 'r&gt; FromRequest&lt;'a, 'r&gt; for MyDbType {\n    type Error = &amp;'static str;\n\n    fn from_request(request: &amp;'a Request&lt;'r&gt;) -&gt; request::Outcome&lt;Self, Self::Error&gt; {\n        let pool = DbPool::from_request(request);\n        pool.map(|pool| MyDbType::from_db(&amp;pool))\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 139, "user_id": 7057235, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e47093457e44a9115cd8aacc2c5aba1?s=128&d=identicon&r=PG&f=1", "display_name": "Luuk Wester", "link": "https://stackoverflow.com/users/7057235/luuk-wester"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 521, "favorite_count": 0, "accepted_answer_id": 55207839, "answer_count": 1, "score": 0, "last_activity_date": 1552831147, "creation_date": 1552757884, "last_edit_date": 1552830221, "question_id": 55199658, "link": "https://stackoverflow.com/questions/55199658/accessing-the-rocket-0-4-database-connection-pool-in-a-request-guard", "title": "Accessing the Rocket 0.4 database connection pool in a request guard", "body": "<p>I am creating a webapp with authentication using Rocket. To do this, I created a <code>User</code> struct that implements <code>FromRequest</code>. It takes the authorization header, which contains a JSON Web Token. I deserialize this token to obtain the payload, and then I query the user from the database. This means that the <code>FromRequest</code> implementation needs a <code>diesel::PgConnection</code>. In Rocket 0.3 this meant calling <code>PgConnection::establish</code>, but with Rocket 0.4 we have access to a connection pool. Normally I would access this connection pool as follows:</p>\n\n<pre><code>fn get_data(conn: db::MyDatabasePool) -&gt; MyModel {\n    MyModel::get(&amp;conn)\n}\n</code></pre>\n\n<p>However, within the impl block for <code>FromRequest</code> I can not just add the <code>conn</code> argument to the argument list of <code>from_request</code> function. How do I access my connection pool outside of a request guard?</p>\n"}, {"tags": ["rust", "traits", "trait-objects"], "answers": [{"comments": [{"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 0, "creation_date": 1552756749, "post_id": 55199300, "comment_id": 97136219, "body": "Great answer, thank you! I think for my current purposes dereferencing of the boxes should work fine. But it&#39;s nice to understand when to use Rc and Arc. The only thing I still don&#39;t understand is why my code with the reference to a Box doesn&#39;t compile..."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1552757456, "post_id": 55199300, "comment_id": 97136433, "body": "@dying_sphynx I added some explanation. I think there is another question that goes into more detail on why <code>&amp;T</code> -&gt; <code>&amp;dyn Trait</code> is a valid coercion but <code>&amp;Box&lt;T&gt;</code> -&gt; <code>&amp;Box&lt;dyn Trait&gt;</code> isn&#39;t; if I can find it I will link to it."}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1552759074, "post_id": 55199300, "comment_id": 97136944, "body": "One more interesting thing: I tried to inline calls to <code>Rc::clone</code> in your full example, but it didn&#39;t work (failed with the same problem of coercion of references you mention at the end). But when I used <code>m1.clone()</code> instead of <code>Rc::clone(&amp;m1)</code> - it worked. That is unexpected, since I thought that <code>Rc::clone(&amp;x)</code> and <code>x.clone()</code> should work the same: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=51f4e673374091fa2409534bbc4478be\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1552760451, "post_id": 55199300, "comment_id": 97137390, "body": "@dying_sphynx I think that&#39;s because of the difference between <a href=\"https://stackoverflow.com/questions/53341819/what-is-the-relation-between-auto-dereferencing-and-deref-coercion\">method auto-deref and coercion</a> (in this case unsized coercion, not deref coercion). <code>m1.clone()</code> will always resolve to the type of <code>m1</code>, which is <code>Rc&lt;Iron&gt;</code>. But <code>Rc::clone(&amp;m1)</code> needs to infer the argument of <code>Rc&lt;_&gt;</code>, and it doesn&#39;t know that the coercion needs to happen &quot;outside&quot; the function call, so it picks the wrong thing (<code>Rc&lt;dyn Material&gt;</code> instead of <code>Rc&lt;Iron&gt;</code>)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1552760486, "post_id": 55199300, "comment_id": 97137406, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b5ac143ae7ae9a43c94d32dd8f35434e\" rel=\"nofollow noreferrer\">Here&#39;s two other ways I found to resolve it.</a>"}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1552768949, "post_id": 55199300, "comment_id": 97139753, "body": "I&#39;ve tried your suggestions with references: <code>&amp;*m1</code> works beautifully by creating a reference to the Box content, but it looks like just using <code>&amp;m1</code> in this context doesn&#39;t work: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dab48d496bb4306deaea773a937ed76f\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1552769765, "post_id": 55199300, "comment_id": 97139965, "body": "@dying_sphynx You&#39;re right, thanks for the correction! I thought I had tried it but I must have made a mistake."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1552769655, "last_edit_date": 1552769655, "creation_date": 1552755619, "answer_id": 55199300, "question_id": 55198844, "link": "https://stackoverflow.com/questions/55198844/how-to-share-heap-allocated-trait-objects/55199300#55199300", "title": "How to share heap-allocated trait objects?", "body": "<h2><code>Rc</code> or <code>Arc</code></h2>\n\n<p>When you need <em>shared ownership</em>, <code>Rc</code> or <code>Arc</code> is usually the first tool to reach for. These types implement sharing by reference counting, so cloning one is cheap (just copy a pointer and increment the refcount). Either works handily in this case:</p>\n\n<pre><code>struct Sphere {\n    radius: f64,\n    material: Rc&lt;dyn Material&gt;,\n}\n\nlet m1 = Rc::new(Iron {});\nlet s1 = Sphere {\n    radius: 1.0,\n    material: m1,\n};\n</code></pre>\n\n<p><code>m1</code> is of the concrete type <code>Rc&lt;Iron&gt;</code>, but because it implements the <a href=\"https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\" rel=\"nofollow noreferrer\"><code>CoerceUnsized</code></a> trait, it can be <a href=\"https://stackoverflow.com/q/52288980/3650362\">automatically coerced</a> in contexts that expect an <code>Rc&lt;dyn Material&gt;</code>. You can make multiple <code>Sphere</code>s refer to the same material by <code>clone</code>ing <code>m1</code>. (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fc9bebf1cfe478f6fd889819fd5ee0ed\" rel=\"nofollow noreferrer\">Full example</a>)</p>\n\n<p>The difference between <code>Rc</code> and <code>Arc</code> is that <code>Arc</code> is safe to use for sharing between multiple threads, but <code>Rc</code> is not. (Also see <a href=\"https://stackoverflow.com/q/49377231/3650362\">When to use Rc vs Box?</a>)</p>\n\n<h2>References</h2>\n\n<p>As for your reference example:</p>\n\n<blockquote>\n  <p>This also works, but as far as I understand, my Materials will be allocated on the stack instead of the heap.</p>\n</blockquote>\n\n<p>It's true that <em>lifetimes</em> are derived from the stack, but the reference itself does not need to point to something on the stack. For example, you can take a reference to the <code>T</code> in a <code>Box&lt;T&gt;</code> by dereferencing the <code>Box</code>:</p>\n\n<pre><code>struct Sphere&lt;'a&gt; {\n    radius: f64,\n    material: &amp;'a dyn Material,\n}\n\nlet m1 = Box::new(Iron {});\nlet s1 = Sphere {\n    radius: 1.0,\n    material: &amp;*m1, // dereference the `Box` and get a reference to the inside\n};\nlet s2 = Sphere {\n    radius: 2.0,\n    material: &amp;*m1,\n};\n</code></pre>\n\n<p>This is even cheaper than using <code>Rc</code> because <code>&amp;</code> references are <code>Copy</code>able, but even though the <code>Iron</code> itself is stored on the heap, the references that point to it are still bound to the lifetime of the <em>stack</em> variable <code>m1</code>. If you can't make <code>m1</code> live long enough, you'll probably want to use <code>Rc</code> instead of plain references.</p>\n\n<h2>Reference to a <code>Box</code></h2>\n\n<p>This approach should also work, although it is unnecessary. The reason it doesn't is because, although you can coerce a <code>Box&lt;Iron&gt;</code> to a <code>Box&lt;dyn Material&gt;</code>, you <em>can't</em> coerce a <code>&amp;Box&lt;Iron&gt;</code> to a <code>&amp;Box&lt;dyn Material&gt;</code>; the types are incompatible. Instead, you need to create a stack variable of type <code>Box&lt;dyn Material&gt;</code> so that you can take references to it.</p>\n\n<pre><code>let m1: Box&lt;dyn Material&gt; = Box::new(Iron {}); // coercion happens here\nlet s1 = Sphere {\n    radius: 1.0,\n    material: &amp;m1,  // so that this reference is the right type\n};\n</code></pre>\n"}], "owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "accepted_answer_id": 55199300, "answer_count": 1, "score": 3, "last_activity_date": 1552830051, "creation_date": 1552752923, "last_edit_date": 1552830051, "question_id": 55198844, "link": "https://stackoverflow.com/questions/55198844/how-to-share-heap-allocated-trait-objects", "title": "How to share heap-allocated trait objects?", "body": "<p>I have a trait and a struct implementing that trait (a trait object). I'd like to allocate my trait objects on the heap and to have other structures refer to them.</p>\n\n<h1>Box field</h1>\n\n<pre><code>trait Material {}\n\nstruct Iron {}\n\nimpl Material for Iron {}\n\n// It works, but takes ownership of boxes.\nstruct Sphere {\n    radius: f64,\n    material: Box&lt;dyn Material&gt;,\n}\n</code></pre>\n\n<p>This code works but I can't have two spheres sharing the same <code>Material</code>, because the <code>Box</code> owns the material and a sphere owns its <code>Box</code> field.</p>\n\n<h1>Reference field</h1>\n\n<p>My next attempt is to use a normal reference instead of a <code>Box</code>:</p>\n\n<pre><code>struct Sphere&lt;'a&gt; {\n    radius: f64,\n    material: &amp;'a dyn Material,\n}\n</code></pre>\n\n<p>This also works, but as far as I understand, my <code>Material</code>s will be allocated on the stack instead of the heap. What if the <code>Material</code> value is really big and I'd rather have it on the heap? This leads me to the next approach which does not compile:</p>\n\n<h1>Reference to a Box</h1>\n\n<pre><code>struct Sphere&lt;'a&gt; {\n    radius: f64,\n    material: &amp;'a Box&lt;dyn Material&gt;,\n}\n\nfn main() {\n    let m1 = &amp;Box::new(Iron {});\n    let s1 = Sphere {\n        radius: 1.0,\n        material: m1,\n    };\n    assert_eq!(s1.radius, 1.0);\n}\n</code></pre>\n\n<p>This gives me the following error:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:16:19\n   |\n16 |         material: m1,\n   |                   ^^ expected trait Material, found struct `Iron`\n   |\n   = note: expected type `&amp;std::boxed::Box&lt;(dyn Material + 'static)&gt;`\n              found type `&amp;std::boxed::Box&lt;Iron&gt;`\n</code></pre>\n\n<p>I am not quite sure where <code>'static</code> comes from in that type and it looks like it confuses the type checker. Otherwise <code>dyn Material</code> and <code>Iron</code> can be unified as far as I can understand. </p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=797c332c3e14d52c92f1f3094c30826f\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552746820, "post_id": 55195454, "comment_id": 97133037, "body": "You aren&#39;t checking the return value of <code>EvtQuery</code> \u2014 you are only supposed to call <code>GetLastError</code> if it returns <code>NULL</code>. Why are you doing this?"}, {"owner": {"reputation": 383, "user_id": 7090217, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fa6f84366f0ecf5164229bd38e03eb7f?s=128&d=identicon&r=PG&f=1", "display_name": "codexy", "link": "https://stackoverflow.com/users/7090217/codexy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552748823, "post_id": 55195454, "comment_id": 97133690, "body": "@Shepmaster, it is returning NULL so I printed error to see why"}], "answers": [{"tags": [], "owner": {"reputation": 370, "user_id": 6147212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/394e67cd097dccaa9269211224cac310?s=128&d=identicon&r=PG&f=1", "display_name": "The Om", "link": "https://stackoverflow.com/users/6147212/the-om"}, "is_accepted": true, "score": 2, "last_activity_date": 1595422870, "last_edit_date": 1595422870, "creation_date": 1552748802, "answer_id": 55198210, "question_id": 55195454, "link": "https://stackoverflow.com/questions/55195454/why-do-i-get-error-invalid-parameter-when-using-evtquery-with-the-winapi-crate/55198210#55198210", "title": "Why do I get ERROR_INVALID_PARAMETER when using EvtQuery with the winapi crate?", "body": "<p>The flags parameter of <code>EvtQuery</code> must be one or more values from the <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/winevt/ne-winevt-evt_query_flags\" rel=\"nofollow noreferrer\"><code>EVT_QUERY_FLAGS</code></a> enumeration.</p>\n<p>You are using the literal 0, which is <a href=\"https://github.com/kinke/mingw-w64-crt/blob/master/mingw-w64-headers/include/winevt.h\" rel=\"nofollow noreferrer\">no existing flag</a>:</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>typedef enum _EVT_QUERY_FLAGS {\n  EvtQueryChannelPath           = 0x1,\n  EvtQueryFilePath              = 0x2,\n  EvtQueryForwardDirection      = 0x100,\n  EvtQueryReverseDirection      = 0x200,\n  EvtQueryTolerateQueryErrors   = 0x1000 \n} EVT_QUERY_FLAGS;\n</code></pre>\n<p>In your case, you can use <code>EvtQueryChannelPath</code> with the numerical value of 1. This is exposed as <a href=\"https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/winevt/constant.EvtQueryChannelPath.html\" rel=\"nofollow noreferrer\"><code>EvtQueryChannelPath</code></a> in winapi.</p>\n"}], "owner": {"reputation": 383, "user_id": 7090217, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fa6f84366f0ecf5164229bd38e03eb7f?s=128&d=identicon&r=PG&f=1", "display_name": "codexy", "link": "https://stackoverflow.com/users/7090217/codexy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 55198210, "answer_count": 1, "score": 0, "last_activity_date": 1595422870, "creation_date": 1552730053, "last_edit_date": 1552746537, "question_id": 55195454, "link": "https://stackoverflow.com/questions/55195454/why-do-i-get-error-invalid-parameter-when-using-evtquery-with-the-winapi-crate", "title": "Why do I get ERROR_INVALID_PARAMETER when using EvtQuery with the winapi crate?", "body": "<p>I'm trying to read the Windows event log using <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/winevt/nf-winevt-evtquery\" rel=\"nofollow noreferrer\"><code>EvtQuery</code></a> and the <a href=\"https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/um/winevt/index.html\" rel=\"nofollow noreferrer\">winapi crate</a>.</p>\n\n<p>I'm getting system error 87 - ERROR_INVALID_PARAMETER</p>\n\n<pre><code>fn to_vec(str: &amp;str) -&gt; Vec&lt;u16&gt; {\n    return std::ffi::OsStr::new(str)\n        .encode_wide()\n        .chain(Some(0).into_iter())\n        .collect();\n}\n\nfn read_log() {\n    let v = to_vec(\"System\");\n    let provider = v.as_ptr();\n    let vv = to_vec(\"*\");\n    let my_query = vv.as_ptr();\n    unsafe {\n        let query_read = winapi::um::winevt::EvtQuery(std::ptr::null_mut(), provider, my_query, 0);\n        let status = winapi::um::errhandlingapi::GetLastError();\n        println!(\"{}\", status);\n    }\n}\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1552722147, "post_id": 55194085, "comment_id": 97126824, "body": "&quot;But it&#39;s more strange that if I add a semicolon to the end of if-let statement, making it an expression, then the code compiles normally.&quot; Isn&#39;t it the opposite? <code>if-let</code> is an expression, if you add a semicolon you make it into a statement."}, {"owner": {"reputation": 306, "user_id": 6804703, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T8mmzU7CMaQ/AAAAAAAAAAI/AAAAAAAACpM/SUjjWffX6f0/photo.jpg?sz=128", "display_name": "a.yekimov", "link": "https://stackoverflow.com/users/6804703/a-yekimov"}, "reply_to_user": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1552722585, "post_id": 55194085, "comment_id": 97126919, "body": "I&#39;m sure it&#39;t not. Expressions returns values. Look above at <code>let env = match</code>... <code>match {};</code> here is expression too."}, {"owner": {"reputation": 306, "user_id": 6804703, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T8mmzU7CMaQ/AAAAAAAAAAI/AAAAAAAACpM/SUjjWffX6f0/photo.jpg?sz=128", "display_name": "a.yekimov", "link": "https://stackoverflow.com/users/6804703/a-yekimov"}, "reply_to_user": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1552723593, "post_id": 55194085, "comment_id": 97127112, "body": "Ok. In this context, at the end of function, things really gets opposide. Anyway, I don&#39;t understand why borrow checker is complaining? The error should be &quot;if may be missing an else clause&quot;."}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 1, "creation_date": 1552727455, "post_id": 55194085, "comment_id": 97127885, "body": "this is well known behavior in rust, related to lifetimes of temporary variables. For example, check this issue: <a href=\"https://github.com/rust-lang/rust/issues/22449\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/22449</a>"}, {"owner": {"reputation": 306, "user_id": 6804703, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T8mmzU7CMaQ/AAAAAAAAAAI/AAAAAAAACpM/SUjjWffX6f0/photo.jpg?sz=128", "display_name": "a.yekimov", "link": "https://stackoverflow.com/users/6804703/a-yekimov"}, "edited": false, "score": 0, "creation_date": 1552733339, "post_id": 55194085, "comment_id": 97129287, "body": "Thank you. I searched through many examples from this and related issues. All of them involves &quot;temoraries&quot;. But in my case I see no &quot;temoraries&quot;. But I agree that the case looks similar. Anyway, with NLL feature up there is no compilation error, so I&#39;m wating for NLL in stable."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552746343, "post_id": 55194085, "comment_id": 97132916, "body": "@a.yekimov NLL has been available in stable Rust for multiple releases now. Use edition 2018."}, {"owner": {"reputation": 306, "user_id": 6804703, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T8mmzU7CMaQ/AAAAAAAAAAI/AAAAAAAACpM/SUjjWffX6f0/photo.jpg?sz=128", "display_name": "a.yekimov", "link": "https://stackoverflow.com/users/6804703/a-yekimov"}, "edited": false, "score": 0, "creation_date": 1552757081, "post_id": 55194085, "comment_id": 97136317, "body": "In fact I already do. But without #![feature(nll)] in nightly the code  doesn&#39;t compile. I&#39;m confused."}], "answers": [{"tags": [], "owner": {"reputation": 306, "user_id": 6804703, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T8mmzU7CMaQ/AAAAAAAAAAI/AAAAAAAACpM/SUjjWffX6f0/photo.jpg?sz=128", "display_name": "a.yekimov", "link": "https://stackoverflow.com/users/6804703/a-yekimov"}, "is_accepted": false, "score": 0, "last_activity_date": 1552733714, "creation_date": 1552733714, "answer_id": 55195958, "question_id": 55194085, "link": "https://stackoverflow.com/questions/55194085/if-let-statement-dropped-here-while-still-borrowed/55195958#55195958", "title": "if-let statement, dropped here while still borrowed", "body": "<p>It looks like an issue exists for the case: <a href=\"https://github.com/rust-lang/rust/issues/21114\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/21114</a>. Thanks to @Laney.</p>\n"}], "owner": {"reputation": 306, "user_id": 6804703, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T8mmzU7CMaQ/AAAAAAAAAAI/AAAAAAAACpM/SUjjWffX6f0/photo.jpg?sz=128", "display_name": "a.yekimov", "link": "https://stackoverflow.com/users/6804703/a-yekimov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 526, "favorite_count": 0, "closed_date": 1552746306, "answer_count": 1, "score": 0, "last_activity_date": 1552733714, "creation_date": 1552717858, "last_edit_date": 1552720147, "question_id": 55194085, "link": "https://stackoverflow.com/questions/55194085/if-let-statement-dropped-here-while-still-borrowed", "closed_reason": "Duplicate", "title": "if-let statement, dropped here while still borrowed", "body": "<p>I faced some troubles with borrow checker. Here is the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate odbc_safe;\n\nuse odbc_safe::*;\n\nfn main() {\n    let env = match Environment::new() {\n        Return::Success(env) =&gt; env,\n        _ =&gt; panic!(\"\"),\n    };\n    let env = match env.declare_version_3_8() {\n        Return::Success(env) =&gt; env,\n        _ =&gt; panic!(\"\"),\n    };\n    if let Return::Success(ds) = DataSource::with_parent(&amp;env) {\n\n    }\n}\n</code></pre>\n\n<p>You can see that it depends on <code>odbc_safe</code> crate. I got failed to reproduce problem without this dependency, so the code is such is. Anyway, it doesn't compile with an error:</p>\n\n<pre><code>error[E0597]: `env` does not live long enough\n  --&gt; src\\main.rs:14:59\n   |\n14 |     if let Return::Success(ds) = DataSource::with_parent(&amp;env) {\n   |                                                           ^^^ borrowed value does not live long enough\n...\n17 | }\n   | - `env` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>This behaviour is strange to me, since <code>ds</code> dies at the end of <code>if-let</code> and frees the reference to <code>env</code>. But it's more strange that if I add a semicolon to the end of if-let statement, making it an expression, then the code compiles normally. Thus follow code does compile normally:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate odbc_safe;\n\nuse odbc_safe::*;\n\nfn main() {\n    let env = match Environment::new() {\n        Return::Success(env) =&gt; env,\n        _ =&gt; panic!(\"\"),\n    };\n    let env = match env.declare_version_3_8() {\n        Return::Success(env) =&gt; env,\n        _ =&gt; panic!(\"\"),\n    };\n    if let Return::Success(ds) = DataSource::with_parent(&amp;env) {\n\n    };\n}\n</code></pre>\n\n<p>As I said, I got no luck to reproduce the trouble with no <code>odbc_safe</code> depenency. I tried to mimic types from it, but everything worked as expected.</p>\n\n<p>rust version:\nstable-x86_64-pc-windows-gnu (default)\nrustc 1.33.0 (2aa4c46cf 2019-02-28)</p>\n\n<p>odbc_safe version: 0.4.1</p>\n\n<p>Any ideas what is going on?</p>\n"}, {"tags": ["performance", "optimization", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1552670441, "post_id": 55187397, "comment_id": 97113527, "body": "You might be overthinking this, and making it far more complicated than necessary. It&#39;s a little bit difficult to see exactly what you&#39;re looking for, but perhaps you just need a different data structure, such as a <code>VecDeque</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1552671508, "post_id": 55187397, "comment_id": 97114091, "body": "Something like this? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=76d3cc91046b742fa2877b4b46282c97\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 2, "creation_date": 1552675813, "post_id": 55187397, "comment_id": 97116154, "body": "Why are both <code>Vec</code> and <code>BinaryHeap</code> involved? When you say that you want to edit elements within a list, do you mean the <code>Vec</code> or the <code>BinaryHeap</code>?"}, {"owner": {"reputation": 393, "user_id": 4607066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b780e369b4fea45427deffd7f622e457?s=128&d=identicon&r=PG", "display_name": "ChosunOne", "link": "https://stackoverflow.com/users/4607066/chosunone"}, "edited": false, "score": 0, "creation_date": 1552677580, "post_id": 55187397, "comment_id": 97116952, "body": "Peter, that&#39;s very much what I&#39;m looking for.  Thank you!"}, {"owner": {"reputation": 393, "user_id": 4607066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b780e369b4fea45427deffd7f622e457?s=128&d=identicon&r=PG", "display_name": "ChosunOne", "link": "https://stackoverflow.com/users/4607066/chosunone"}, "reply_to_user": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1552677721, "post_id": 55187397, "comment_id": 97117015, "body": "@michalsrb the original vector is dropped once the heap is created because in my application logic the order that the elements are merged is very critical to correct function. I was playing with the idea of using a heap because I want to minimize the cost of inserting things into the list as my application logic will not always produce things in order."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552737902, "post_id": 55187397, "comment_id": 97130434, "body": "This confuses me a lot. In the <code>while</code> loop <code>first</code> and <code>next</code> are no longer members of any list, because <code>a</code> has been dropped and you popped them out of <code>b</code>. So... you can just reassign them, if you want (<code>first = new_num; next = new_num;</code>) and the test will pass. But it sounds like you want to have a side effect on some <i>other</i> data structure that isn&#39;t shown? Or you want to have a side effect on the other elements of the heap? I don&#39;t understand."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1552761018, "post_id": 55187397, "comment_id": 97137560, "body": "I vote to close your question has unclear since yesterday I don&#39;t understand it. Don&#39;t hesitate to <a href=\"https://stackoverflow.com/posts/55187397/edit\">edit</a> it to clarify your question."}, {"owner": {"reputation": 393, "user_id": 4607066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b780e369b4fea45427deffd7f622e457?s=128&d=identicon&r=PG", "display_name": "ChosunOne", "link": "https://stackoverflow.com/users/4607066/chosunone"}, "edited": false, "score": 0, "creation_date": 1552765021, "post_id": 55187397, "comment_id": 97138651, "body": "It should not be overlooked that there are multiple references to elements in the heap, so just because an element has been popped out of the heap does not imply that there underlying data has also been popped out."}], "answers": [{"comments": [{"owner": {"reputation": 393, "user_id": 4607066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b780e369b4fea45427deffd7f622e457?s=128&d=identicon&r=PG", "display_name": "ChosunOne", "link": "https://stackoverflow.com/users/4607066/chosunone"}, "edited": false, "score": 0, "creation_date": 1552765255, "post_id": 55196828, "comment_id": 97138731, "body": "It should be noted that while it seems over complicated in this example, it represents a more delicate piece of code found at <a href=\"https://github.com/ChosunOne/merkle_bit/blob/stable/src/merkle_bit.rs\" rel=\"nofollow noreferrer\">github.com/ChosunOne/merkle_bit/blob/stable/src/merkle_bit.r&zwnj;&#8203;s</a> in create_tree .  I have been benchmarking the results and have so far gained about 30% speed improvements by moving in this direction.  Thank you for your concise answer."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 393, "user_id": 4607066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b780e369b4fea45427deffd7f622e457?s=128&d=identicon&r=PG", "display_name": "ChosunOne", "link": "https://stackoverflow.com/users/4607066/chosunone"}, "edited": false, "score": 0, "creation_date": 1552837140, "post_id": 55196828, "comment_id": 97153576, "body": "@ChosunOne Ok, fair enough! Sounds like progress then."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1552768042, "last_edit_date": 1552768042, "creation_date": 1552739634, "answer_id": 55196828, "question_id": 55187397, "link": "https://stackoverflow.com/questions/55187397/how-to-merge-two-elements-of-a-list-in-rust/55196828#55196828", "title": "How to merge two elements of a list in Rust?", "body": "<p>My understanding of your requirement is that you need the <code>Vec</code> to be able to hold items that are <em>either</em> a value <em>or</em> a reference to another item, while keeping the structure <em>similar</em> to what you have presented.</p>\n\n<p>We can model that by changing your item type to an <code>enum</code>, which can hold either a value or a reference to another item:</p>\n\n<pre><code>pub enum Num {\n    Raw(usize),\n    Ref(Rc&lt;RefCell&lt;Num&gt;&gt;),\n}\n</code></pre>\n\n<p>And add methods to include abstractions for constructing the different variants and for accessing the underlying numeric value:</p>\n\n<pre><code>impl Num {\n    pub fn new(num: usize) -&gt; Num {\n        Num::Raw(num)\n    }\n\n    pub fn new_ref(other: Rc&lt;RefCell&lt;Num&gt;&gt;) -&gt; Num {\n        Num::Ref(other)    \n    }\n\n    pub fn get_num(&amp;self) -&gt; usize {\n        match &amp;self {\n            Num::Raw(n) =&gt; *n,\n            Num::Ref(r) =&gt; r.borrow().get_num()\n        }\n    }\n}\n</code></pre>\n\n<p>If you create a new value like this:</p>\n\n<pre><code>let new_num = Rc::new(RefCell::new(Num::new(100)));\n</code></pre>\n\n<p>You can reference it in other nodes like this:</p>\n\n<pre><code>*first.borrow_mut() = Num::new_ref(Rc::clone(&amp;new_num));\n*next.borrow_mut() = Num::new_ref(Rc::clone(&amp;new_num));\n</code></pre>\n\n<p>The full code then looks like this:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\nuse std::collections::BinaryHeap;\n\n#[derive(PartialOrd, Ord, PartialEq, Eq)]\npub enum Num {\n    Raw(usize),\n    Ref(Rc&lt;RefCell&lt;Num&gt;&gt;),\n}\n\nimpl Num {\n    pub fn new(num: usize) -&gt; Num {\n        Num::Raw(num)\n    }\n\n    pub fn new_ref(other: Rc&lt;RefCell&lt;Num&gt;&gt;) -&gt; Num {\n        Num::Ref(other)    \n    }\n\n    pub fn get_num(&amp;self) -&gt; usize {\n        match &amp;self {\n            Num::Raw(n) =&gt; *n,\n            Num::Ref(r) =&gt; r.borrow().get_num()\n        }\n    }\n}\n\nfn main() {\n    let mut a = vec![];\n    for i in 0..10 {\n        a.push(Rc::new(RefCell::new(Num::new(i))));\n    }\n    let mut b = BinaryHeap::with_capacity(a.len());\n    for i in 0..a.len() - 1 {\n        b.push((i, Rc::clone(&amp;a[i]), Rc::clone(&amp;a[i + 1])));\n    }\n\n    drop(a);\n\n    let new_num = Rc::new(RefCell::new(Num::new(100)));\n\n    while !b.is_empty() {\n        let c = b.pop().unwrap();\n        let first = c.1;\n        let next = c.2;\n        println!(\"c: c.0: {}\", c.0);\n        println!(\"c: first.num before: {}\", RefCell::borrow(&amp;first).get_num());\n        println!(\"c: next.num before: {}\", RefCell::borrow(&amp;next).get_num());\n\n        *first.borrow_mut() = Num::new_ref(Rc::clone(&amp;new_num))\n        *next.borrow_mut() = Num::new_ref(Rc::clone(&amp;new_num))\n\n        println!(\"c: first.num after: {}\", RefCell::borrow(&amp;first).get_num());\n        println!(\"c: next.num after: {}\", RefCell::borrow(&amp;next).get_num());\n        assert_eq!(RefCell::borrow(&amp;first).get_num(), RefCell::borrow(&amp;next).get_num());\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>As for whether this will prove to be better performance than a different approach, it's hard to say. Your starting point seems quite complicated, and if you can simplify that and use a different underlying data structure, then you should try it and benchmark. I have often been surprised at the actual speed of O(n) operations on a <code>Vec</code>, even when the size is around 1000 items or more.</p>\n"}], "owner": {"reputation": 393, "user_id": 4607066, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b780e369b4fea45427deffd7f622e457?s=128&d=identicon&r=PG", "display_name": "ChosunOne", "link": "https://stackoverflow.com/users/4607066/chosunone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 442, "favorite_count": 1, "accepted_answer_id": 55196828, "answer_count": 1, "score": 4, "last_activity_date": 1552768042, "creation_date": 1552668989, "question_id": 55187397, "link": "https://stackoverflow.com/questions/55187397/how-to-merge-two-elements-of-a-list-in-rust", "title": "How to merge two elements of a list in Rust?", "body": "<p>I've been working to try to optimize a section of my code and I've hit an area where I think I could use some community wisdom.  I'm essentially trying to merge two elements of a list without moving the elements in the list (via two removes and an insert), because as far as I can tell in Rust doing so to a vector costs O(n) time.</p>\n\n<p>Take a glance at the code that captures the essence of my problem:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::RefCell;\nuse std::rc::Rc;\nuse std::collections::BinaryHeap;\n\n#[derive(PartialOrd, Ord, PartialEq, Eq)]\npub struct Num {\n    pub num: usize\n}\n\nimpl Num {\n    pub fn new(num: usize) -&gt; Num {\n        Num {\n            num\n        }\n    }\n}\n\nfn main() {\n    let mut a = vec![];\n    for i in 0..10 {\n        a.push(Rc::new(RefCell::new(Num::new(i))));\n    }\n    let mut b = BinaryHeap::with_capacity(a.len());\n    for i in 0..a.len() - 1 {\n        b.push((i, Rc::clone(&amp;a[i]), Rc::clone(&amp;a[i + 1])));\n    }\n\n    drop(a);\n\n    while !b.is_empty() {\n        let c = b.pop().unwrap();\n        let first = c.1;\n        let next = c.2;\n        println!(\"c: c.0: {}\", c.0);\n        println!(\"c: first.num before: {}\", RefCell::borrow(&amp;first).num);\n        println!(\"c: next.num before: {}\", RefCell::borrow(&amp;next).num);\n\n        // Here I want to replace the two structs referenced in first and next\n        // with a single new struct that first and next both point to.\n        // e.g. first -&gt; new_num &lt;- next\n\n        println!(\"c: first.num after: {}\", RefCell::borrow(&amp;first).num);\n        println!(\"c: next.num after: {}\", RefCell::borrow(&amp;next).num);\n        assert_eq!(RefCell::borrow(&amp;first).num, RefCell::borrow(&amp;next).num);\n    }\n}\n</code></pre>\n\n<p>I want to be able to take two elements within a list, merge them into one pseudo-element, where the two previous \"elements\" are actually just pointers to the same new element. However, I'm having trouble finding a way to do this without copying memory or structures around in the list.</p>\n"}, {"tags": ["rust", "borrow-checker", "nom"], "answers": [{"comments": [{"owner": {"reputation": 2012, "user_id": 205674, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/32a2b57f8035456fd763cbb2610c8f58?s=128&d=identicon&r=PG", "display_name": "Bittrance", "link": "https://stackoverflow.com/users/205674/bittrance"}, "edited": false, "score": 0, "creation_date": 1552668055, "post_id": 55185423, "comment_id": 97112281, "body": "Thank you, that does indeed seem to be the case! Simply mapping the error into a new error with the old error as a string did the trick. The real code uses <code>CompleteStr</code> so it should not have a &quot;problem&quot; with incomplete data."}], "tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": true, "score": 8, "last_activity_date": 1552662568, "last_edit_date": 1552662568, "creation_date": 1552662039, "answer_id": 55185423, "question_id": 55184864, "link": "https://stackoverflow.com/questions/55184864/nom-parser-borrow-checker-issue/55185423#55185423", "title": "nom parser borrow checker issue", "body": "<pre><code>let res = nom_parser(&amp;buf)?.1;\n                          ^ here\n</code></pre>\n\n<p>You are using the <code>?</code> operator to propagate the error out of <code>main</code>. The <code>IResult&lt;&amp;[u8], String, u32&gt;</code> = <code>Result&lt;(&amp;[u8], String), nom::Err&lt;&amp;[u8], u32&gt;&gt;</code>. So in case of error the <code>&amp;buf</code> is returned as part of it, so it must stay alive even after <code>main</code> function exits, but it won't because <code>buf</code> is local variable inside <code>main</code>.</p>\n\n<p>In your case the <code>nom_parser</code> never returns error, but the validation only cares about the types and function signatures.</p>\n\n<p>To fix it, you should process the error somehow before propagating it up. For example:</p>\n\n<pre><code>let res = nom_parser(&amp;buf).map_err(|_| failure::format_err!(\"Parsing failed!\"))?.1;\n</code></pre>\n\n<p>Note that <code>Err</code> in the <code>IResult</code> is not always <em>hard error</em>. It could be <code>nom::Err::Incomplete</code>, meaning that the parsing may succeed if more data is supplied, or <code>nom::Err::Error</code> meaning that the input was not matched by the parser (so perhaps another parser in <code>alt!</code> could succeed), or <code>nom::Err::Failure</code>, meaning that something went really wrong during parsing. Depending on the situation, you may consider them all as failure, or handle them differently.</p>\n"}, {"tags": [], "owner": {"reputation": 499, "user_id": 2657597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd722d2a072baf7f1140c287ccb7e306?s=128&d=identicon&r=PG", "display_name": "Louis Garczynski", "link": "https://stackoverflow.com/users/2657597/louis-garczynski"}, "is_accepted": false, "score": 0, "last_activity_date": 1552662891, "creation_date": 1552662891, "answer_id": 55185651, "question_id": 55184864, "link": "https://stackoverflow.com/questions/55184864/nom-parser-borrow-checker-issue/55185651#55185651", "title": "nom parser borrow checker issue", "body": "<p>The problem appears to be in <code>IResult&lt;I, O, E = u32&gt;</code>, which expends to <code>Result&lt;(I, O), Err&lt;I, E&gt;&gt;</code></p>\n\n<p>As you can see, when you use the <code>?</code>, the <code>Err</code> that you may return can still contain a reference to the type I, which is your <code>&amp;[u8]</code>, and return from your function.</p>\n\n<p>The only way for the function to return this reference would be that the reference has a lifetime that doesn't end with the function, <code>'static</code></p>\n\n<p>A simple solution to your problem would be to change the <code>&amp;[u8]</code> to a <code>Vec&lt;u8&gt;</code>, even if I'm not sure what you're trying to do with it.</p>\n"}], "owner": {"reputation": 2012, "user_id": 205674, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/32a2b57f8035456fd763cbb2610c8f58?s=128&d=identicon&r=PG", "display_name": "Bittrance", "link": "https://stackoverflow.com/users/205674/bittrance"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 275, "favorite_count": 0, "accepted_answer_id": 55185423, "answer_count": 2, "score": 4, "last_activity_date": 1552662891, "creation_date": 1552660207, "question_id": 55184864, "link": "https://stackoverflow.com/questions/55184864/nom-parser-borrow-checker-issue", "title": "nom parser borrow checker issue", "body": "<p>I have this Rust program using nom 4.2.2. (I have taken the liberty of expanding the nom parser function.)</p>\n\n<pre><code>extern crate failure;\nextern crate nom;\n\nuse failure::Error;\nuse std::fs::File;\nuse std::io::Read;\n\nfn nom_parser(i: &amp;[u8]) -&gt; ::nom::IResult&lt;&amp;[u8], String, u32&gt; {\n    { ::nom::lib::std::result::Result::Ok((i, (\"foo\".to_owned()))) }\n}\n\nfn my_parser(buf: &amp;[u8]) -&gt; Result&lt;(&amp;[u8], String), Error&gt; {\n  Ok((buf, \"foo\".to_owned()))\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n  let handler = |mut entries: String| { entries.clear() };\n  loop {\n    let mut buf = Vec::new();\n    File::open(\"/etc/hosts\")?.read_to_end(&amp;mut buf)?;\n    let res = nom_parser(&amp;buf)?.1;\n    // let res = my_parser(&amp;buf)?.1;\n    handler(res);\n  }\n}\n</code></pre>\n\n<p>Compiling this program with <code>rustc 1.33.0 (2aa4c46cf 2019-02-28)</code> yields the following issue:</p>\n\n<pre><code>error[E0597]: `buf` does not live long enough\n  --&gt; nom-parsing/src/main.rs:21:26\n   |\n21 |     let res = nom_parser(&amp;buf)?.1;\n   |               -----------^^^^-\n   |               |          |\n   |               |          borrowed value does not live long enough\n   |               argument requires that `buf` is borrowed for `'static`\n...\n24 |   }\n   |   - `buf` dropped here while still borrowed\n</code></pre>\n\n<p>Switching to the commented out version of the parser compiles just fine.  How are <code>my_parser</code> and <code>nom_parser</code> different? Who is borrowing buf? How should I change the program to placate the borrow checker?</p>\n"}, {"tags": ["unit-testing", "rust", "segmentation-fault"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1552659495, "post_id": 55184513, "comment_id": 97107112, "body": "Rust compiler guarantees that you will not get segmentation fault unless you are writing an <code>unsafe</code> notated code. Could you please share the code that makes your program to get segmentation fault."}, {"owner": {"reputation": 3702, "user_id": 312692, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7095c2c6e64c9147a017300fff9864d7?s=128&d=identicon&r=PG", "display_name": "wen", "link": "https://stackoverflow.com/users/312692/wen"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1552659616, "post_id": 55184513, "comment_id": 97107209, "body": "@AkinerAlkan I mean, I could share the code, but the whole point of the exercise is that I&#39;m writing a test to illustrate some edge cases in a library which uses <code>unsafe</code> internally."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1552659628, "post_id": 55184513, "comment_id": 97107222, "body": "Yes, fork your program, and do your code that must segfault in the child. Then verify that it was killed."}, {"owner": {"reputation": 3702, "user_id": 312692, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7095c2c6e64c9147a017300fff9864d7?s=128&d=identicon&r=PG", "display_name": "wen", "link": "https://stackoverflow.com/users/312692/wen"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552659684, "post_id": 55184513, "comment_id": 97107263, "body": "@FrenchBoiethios Thanks! Do you know of any way to distinguish a segfault from a panic in this way?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1552659774, "post_id": 55184513, "comment_id": 97107322, "body": "segfault imply undefined behavior, undefined behavior imply undefined behavior. What you ask is non sense. The only way should be to send yourself a segfault signal."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1552660131, "post_id": 55184513, "comment_id": 97107542, "body": "Furthermore, if you can detect the situation in order to guarantee a segfault (instead of random corrupted data), why not just panic? And if you can&#39;t, what does your test do?"}, {"owner": {"reputation": 3702, "user_id": 312692, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7095c2c6e64c9147a017300fff9864d7?s=128&d=identicon&r=PG", "display_name": "wen", "link": "https://stackoverflow.com/users/312692/wen"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1552660541, "post_id": 55184513, "comment_id": 97107816, "body": "@SebastianRedl I&#39;m using this test to detect whether or not someone else&#39;s library is still broken for some edge cases. If it is, that&#39;s the behaviour I&#39;m expecting, and buildling my code around. I&#39;d like to <i>know</i> if this changes in the future, and hence want my test to fail once the library is no longer broken."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1552660600, "post_id": 55184513, "comment_id": 97107855, "body": "@wen but that a false assumption UB is UB"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552661001, "post_id": 55184513, "comment_id": 97108129, "body": "On some platforms, dereferencing a null pointer (for example) always triggers a segfault. The OP can rely on this."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 5, "creation_date": 1552664599, "post_id": 55184513, "comment_id": 97110330, "body": "@FrenchBoiethios: You are assuming that the optimizer did not transform the program in a strange way based on the assumption that since the pointer was derferenced it was not null."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1552668020, "post_id": 55184513, "comment_id": 97112261, "body": "@wen It might be a better use of your time to fork the library and fix the bug instead of writing this test. :)"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1552688934, "post_id": 55185886, "comment_id": 97121280, "body": "&quot;Dereferencing [...] a null pointer doesn&#39;t actually guarantee segfault, though it will on most modern platforms&quot; <i>if</i> the compiler actually generates an instruction to dereference a null pointer. But since dereferencing 0 is UB, the compiled code may never actually do that, regardless of what it <i>looks</i> like it should do"}], "tags": [], "owner": {"reputation": 499, "user_id": 2657597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd722d2a072baf7f1140c287ccb7e306?s=128&d=identicon&r=PG", "display_name": "Louis Garczynski", "link": "https://stackoverflow.com/users/2657597/louis-garczynski"}, "is_accepted": false, "score": 3, "last_activity_date": 1558555522, "last_edit_date": 1558555522, "creation_date": 1552663622, "answer_id": 55185886, "question_id": 55184513, "link": "https://stackoverflow.com/questions/55184513/writing-a-rust-test-which-expects-a-segfault/55185886#55185886", "title": "Writing a Rust test which expects a segfault", "body": "<p>First, I'd like to point out that the only sure way to segfault that I am aware of is to send the SIGSEGV signal to your own process, possibly using the \"raise\" function or a rust equivalent.</p>\n\n<p>Dereferencing a pointer to unallocated memory or a null pointer doesn't actually guarantee segfault, though it will on most modern platforms.</p>\n\n<p>The simplest way to check for a segfault is to fork your program (possibly using the <a href=\"https://docs.rs/nix/0.13.0/nix/unistd/fn.fork.html\" rel=\"nofollow noreferrer\">nix crate</a>). Once done, execute the function that should make you segfault on the child process, while the parent process waits.</p>\n\n<p>After waiting a sufficient amount of time (any more than a few hundred milliseconds is overkill), check that the child thread is dead. To do that, simply kill it, and an error should be raised if it's already dead.</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1552666504, "creation_date": 1552666504, "answer_id": 55186718, "question_id": 55184513, "link": "https://stackoverflow.com/questions/55184513/writing-a-rust-test-which-expects-a-segfault/55186718#55186718", "title": "Writing a Rust test which expects a segfault", "body": "<p>The only correct way to test this is, in my opinion, pretty heavy. In the test, I would run a static analyser that can detect this possible undefined behavior, and verify that this very issue is still there.</p>\n\n<p>I am not aware of a Rust crate that does a static analysis, though, so I guess that you would depend on an extern tool using the C ABI.</p>\n"}], "owner": {"reputation": 3702, "user_id": 312692, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7095c2c6e64c9147a017300fff9864d7?s=128&d=identicon&r=PG", "display_name": "wen", "link": "https://stackoverflow.com/users/312692/wen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 199, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1558555522, "creation_date": 1552659080, "question_id": 55184513, "link": "https://stackoverflow.com/questions/55184513/writing-a-rust-test-which-expects-a-segfault", "title": "Writing a Rust test which expects a segfault", "body": "<p>I'd like to write a test in Rust where the <em>expected</em> behaviour of the <code>#[test]</code> function is to segfault. Is this possible?</p>\n"}, {"tags": ["rust", "type-conversion"], "comments": [{"owner": {"reputation": 1377, "user_id": 1425638, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/utPAI.jpg?s=128&g=1", "display_name": "Viezevingertjes", "link": "https://stackoverflow.com/users/1425638/viezevingertjes"}, "edited": false, "score": 0, "creation_date": 1552629058, "post_id": 55176192, "comment_id": 97091031, "body": "The way you mention is the only way to cast i guess... it&#39;s a safe cast and cannot run to a runtime exception afaik."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552652689, "post_id": 55176192, "comment_id": 97102971, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, fields and modules; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>serialize_char</code> instead, please."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552653442, "post_id": 55176192, "comment_id": 97103401, "body": "If you &quot;don&#39;t care about the sign&quot;, why are you using <code>i8</code> instead of <code>u8</code> to begin with?"}, {"owner": {"reputation": 39, "user_id": 2247126, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bfc158d31b3a98a36ca8190a80e162d6?s=128&d=identicon&r=PG", "display_name": "D Yamamoto", "link": "https://stackoverflow.com/users/2247126/d-yamamoto"}, "edited": false, "score": 0, "creation_date": 1552661591, "post_id": 55176192, "comment_id": 97108481, "body": "Because something cares about the sign, but I only care about it&#39;s representation in memory."}], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 1, "last_activity_date": 1552652517, "last_edit_date": 1552652517, "creation_date": 1552644136, "answer_id": 55180019, "question_id": 55176192, "link": "https://stackoverflow.com/questions/55176192/how-do-i-convert-from-a-mut-t-to-a-mut-u-type/55180019#55180019", "title": "How do I convert from a &amp;mut T to a &amp;mut U type?", "body": "<p>Traits in Rust can be generic, so you can define a trait with signature like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait SerializeChar&lt;T&gt; {\n    fn serialize_char(&amp;mut self, value: &amp;mut T);\n}\n</code></pre>\n\n<p>and then implement it for your structure with <code>T = u8</code> and <code>T = i8</code>:  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Thing {}\n\nimpl SerializeChar&lt;u8&gt; for Thing {\n    fn serialize_char(&amp;mut self, value: &amp;mut u8) { *value = 55; }\n}\n\nimpl SerializeChar&lt;i8&gt; for Thing {\n    fn serialize_char(&amp;mut self, value: &amp;mut i8) { *value = 56; }\n}\n</code></pre>\n\n<p>test:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut a = 0u8;\n    let mut b = 0i8;\n    let mut thing = Thing{};\n    thing.serialize_char(&amp;mut a);\n    thing.serialize_char(&amp;mut b);\n    dbg!(a);\n    dbg!(b);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1552653602, "post_id": 55182691, "comment_id": 97103499, "body": "What guarantees are there that a positive <code>i8</code> value will have the same representation as a <code>u8</code>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1552660166, "post_id": 55182691, "comment_id": 97107565, "body": "@PeterHall rust state use two complement representation, <a href=\"https://doc.rust-lang.org/reference/types/numeric.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/types/numeric.html</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1552655990, "last_edit_date": 1552655990, "creation_date": 1552653072, "answer_id": 55182691, "question_id": 55176192, "link": "https://stackoverflow.com/questions/55176192/how-do-i-convert-from-a-mut-t-to-a-mut-u-type/55182691#55182691", "title": "How do I convert from a &amp;mut T to a &amp;mut U type?", "body": "<p>First things first, this has nothing to do with the borrow checker. Being told that one type is not the same as another type is the purview of the <strong>type</strong> checker. </p>\n\n<blockquote>\n  <p>Is there any safe or unsafe way to pass <code>test</code> as an argument to <code>SerializeChar</code> similar to just casting in C++?</p>\n</blockquote>\n\n<h3>Via raw pointers</h3>\n\n<p>Convert it in this sequence:</p>\n\n<ol>\n<li><code>&amp;mut i8</code></li>\n<li><code>*mut i8</code></li>\n<li><code>*mut u8</code></li>\n<li><code>&amp;mut u8</code></li>\n</ol>\n\n<pre><code>fn serialize_char(value: &amp;mut u8) {\n    *value = std::u8::MAX\n}\n\nfn main() {\n    let mut test: i8 = 0;\n    serialize_char(unsafe { &amp;mut *(&amp;mut test as *mut i8 as *mut u8) });\n    println!(\"{}\", test); // -1\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/nomicon/casts.html\" rel=\"nofollow noreferrer\">Casts in the Nomicon</a></li>\n</ul>\n\n<h3><code>transmute</code></h3>\n\n<p>Using <code>as</code> should always be your first attempt, but there's also the Big Hammer of <a href=\"https://doc.rust-lang.org/std/mem/fn.transmute.html\" rel=\"nofollow noreferrer\"><code>transmute</code></a>. This allows you do all sorts of bad things compared to the simpler sequence of <code>as</code> casts and is not favored when there's an alternative:</p>\n\n<pre><code>use std::mem;\n\nfn serialize_char(value: &amp;mut u8) {\n    *value = std::u8::MAX\n}\n\nfn main() {\n    let mut test: i8 = 0;\n    serialize_char(unsafe { mem::transmute(&amp;mut test) });\n    println!(\"{}\", test); // -1\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/nomicon/transmutes.html\" rel=\"nofollow noreferrer\">Transmutes in the Nomicon</a></li>\n</ul>\n\n<h3>Safety</h3>\n\n<p>All of the casts via <code>as</code> are safe, although they might produce bogus or unexpected data.</p>\n\n<p>Converting from <code>*mut u8</code> to <code>&amp;mut u8</code> or using <code>transmute</code> is unsafe because the programmer must ensure that:</p>\n\n<ul>\n<li>the rules of references are upheld</li>\n<li>the values all have valid values for their types</li>\n</ul>\n\n<p>We know that the reference is valid: there's still only one mutable reference and it points to live data.</p>\n\n<p>A <code>u8</code> and an <code>i8</code> are both valid for any 8-bit pattern of bits, even though the semantic values may change, as shown by how <code>u8::MAX</code> becomes <code>-1</code> .</p>\n\n<hr>\n\n<p>All this being said, that doesn't mean that there aren't better ways to accomplish your goal. As <a href=\"https://stackoverflow.com/a/55180019/155423\">Laney mentions</a>, you could create a trait for interesting types and hide the unsafe code internal to the implementations. This allows your users to avoid the unsafety.</p>\n\n<p>You could also use a macro to create multiple similar functions without actually having them be the same. </p>\n\n<p>There\u2019s probably a higher level way of solving your real problem as well. Why must you mutate the data in place here? It seems very unusual for serialization. </p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1552665022, "last_edit_date": 1552665022, "creation_date": 1552653475, "answer_id": 55182806, "question_id": 55176192, "link": "https://stackoverflow.com/questions/55176192/how-do-i-convert-from-a-mut-t-to-a-mut-u-type/55182806#55182806", "title": "How do I convert from a &amp;mut T to a &amp;mut U type?", "body": "<p>You can't do this safely. Once you have a <code>&amp;mut</code> reference to a <code>u8</code>, the code using it can only treat it as a <code>u8</code>, and you'd need some unsafe code to do the conversions.</p>\n\n<p><code>as</code> works with primitive numeric values because it copies the data in memory, and it can take care of any conversions at that point. This won't work with a reference because it can't change the original value.</p>\n\n<p>If you absolutely can't change the signature of <code>thing.serialize_char</code>, <em>and</em> you can't change the type of the <code>test</code> variable, a workaround is to use another variable and then update the original afterwards:</p>\n\n<pre><code>let mut test: i8 = 0; \n\nlet mut test_u8 = test as u8;\nthing.serialize_char(&amp;mut test_u8);\ntest = test_u8 as i8;\n</code></pre>\n\n<p>This will not work if <code>serialize_char</code> needs the reference for longer than the function call - but if that is the case the borrow-checker will soon let you know!</p>\n"}], "owner": {"reputation": 39, "user_id": 2247126, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bfc158d31b3a98a36ca8190a80e162d6?s=128&d=identicon&r=PG", "display_name": "D Yamamoto", "link": "https://stackoverflow.com/users/2247126/d-yamamoto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 351, "favorite_count": 0, "accepted_answer_id": 55182691, "answer_count": 3, "score": 1, "last_activity_date": 1552665022, "creation_date": 1552628285, "last_edit_date": 1552652470, "question_id": 55176192, "link": "https://stackoverflow.com/questions/55176192/how-do-i-convert-from-a-mut-t-to-a-mut-u-type", "title": "How do I convert from a &amp;mut T to a &amp;mut U type?", "body": "<p>I'm trying to understand the borrow checker. I have a function with the signature </p>\n\n<pre><code>fn SerializeChar(&amp;mut self, value: &amp;mut u8)\n</code></pre>\n\n<p>I would like to get data from <code>u8</code> and <code>i8</code> because I don't care about the sign:</p>\n\n<pre><code>let mut test: i8 = 0; \nthing.SerializeChar(&amp;mut test); //Error: &amp;mut u8 expected\n</code></pre>\n\n<p>That's fine, but how exactly do I cast this? </p>\n\n<p><code>&amp;mut (test as u8)</code> is not the same thing. Is there any safe or unsafe way to pass test as an argument to <code>SerializeChar</code> similar to just casting in C++? Also I would not want to destroy <code>test</code> when I do it, as I still need <code>test</code>, and still want it as an <code>i8</code>, not a <code>u8</code>. </p>\n\n<p>I'm not trying to clone the value. I want the address to <code>test</code>, because data in <code>SerializeChar</code> is mutable and needs to modify whatever is put in. In C++ terms I don't want a <code>char</code>, I want a <code>*char</code> because I need to modify 8 bits in memory. It's possible that I can do two separate versions of <code>SerializeChar</code>, but before that I wanted to know if it's possible to actually do something like <code>*u8(test)</code> that the borrow checker is okay with.</p>\n"}, {"tags": ["ruby", "rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1552613611, "post_id": 55173958, "comment_id": 97087534, "body": "More information: <a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_return/\" rel=\"nofollow noreferrer\">Rust omnibus for ruby</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552663640, "post_id": 55173958, "comment_id": 97109757, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/48235267/conversion-between-a-rust-str-and-fficstring-and-back-again-partially-corrupts\">Conversion between a Rust str and ffi::CString and back again partially corrupts the string</a>"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1552613554, "post_id": 55174054, "comment_id": 97087523, "body": "if you give the ownership yes, don&#39;t forget that to release the memory you must at some point use <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.from_raw\" rel=\"nofollow noreferrer\"><code>from_raw()</code></a>"}], "tags": [], "owner": {"reputation": 394, "user_id": 211722, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7522bc6856e0d8d1d38e27aafe04b57?s=128&d=identicon&r=PG", "display_name": "Daniel Heath", "link": "https://stackoverflow.com/users/211722/daniel-heath"}, "is_accepted": false, "score": 2, "last_activity_date": 1552652025, "last_edit_date": 1552652025, "creation_date": 1552610792, "answer_id": 55174054, "question_id": 55173958, "link": "https://stackoverflow.com/questions/55173958/string-becomes-empty-passing-through-ffi-from-rust-to-ruby/55174054#55174054", "title": "String becomes empty passing through FFI from rust to ruby", "body": "<p>Figured it out - I needed to use <code>CString::into_raw</code> on the rust side to prevent it getting cleaned up.</p>\n"}], "owner": {"reputation": 394, "user_id": 211722, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7522bc6856e0d8d1d38e27aafe04b57?s=128&d=identicon&r=PG", "display_name": "Daniel Heath", "link": "https://stackoverflow.com/users/211722/daniel-heath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1552652025, "creation_date": 1552610016, "question_id": 55173958, "link": "https://stackoverflow.com/questions/55173958/string-becomes-empty-passing-through-ffi-from-rust-to-ruby", "title": "String becomes empty passing through FFI from rust to ruby", "body": "<p>I have a rubygem with a native extension written in rust.</p>\n\n<p>The native extension supports serializing its data-structure to JSON.</p>\n\n<p>However, whilst I've confirmed it's generating JSON, the string is always empty on the ruby side.</p>\n\n<p>Here's the ruby code:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>module RustCuckooFilter\n  extend FFI::Library\n  ffi_lib 'libcuckoofilter_cabi'\n\n  class Instance &lt; FFI::AutoPointer\n    def export(path)\n      RustCuckooFilter.export(self)\n    end\n  end\n\n  attach_function :export, :rcf_cuckoofilter_export, [Instance], :pointer\n</code></pre>\n\n<p>And the rust code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Exports the filter to a file\n#[no_mangle]\npub extern \"C\" fn rcf_cuckoofilter_export(filter: *mut rcf_cuckoofilter) -&gt; *const c_char {\n    let filter = unsafe { filter.as_mut() };\n    let serialized = serde_json::to_string(&amp;filter.expect(\"Given rcf_cuckoofilter* is a null pointer\").export()).unwrap();\n    let cstr = CString::new(serialized).expect(\"JSON was not a valid c string\");\n    let ptr = cstr.as_ptr();\n    unsafe {\n        println!(\"{:#?}\", ptr);\n        println!(\"{}\", CStr::from_ptr(ptr).to_str().expect(\"validity\"));\n    }\n    ptr\n}\n</code></pre>\n\n<p>On the Rust side, the <code>println!</code> use confirms that the pointer contains a JSON string. </p>\n\n<p>By comparing the address it prints with the return value of <code>#export</code> in ruby I can see that the same pointer is used.</p>\n\n<p>However, calling <code>get_bytes(0, 10)</code> on the pointer reveals that it starts with null bytes, and attempting to convert it to a string returns an empty string.</p>\n\n<p>I suspect that it's getting zeroed out because the variables lifetime is over and I'm building in debug mode; however, I'm not clear what I'd need to change.</p>\n"}, {"tags": ["unit-testing", "rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552606992, "post_id": 55172558, "comment_id": 97086140, "body": "<i>It raised some error</i> \u2014 Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/55172558/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Provide the <b>entire</b> error without attempting to interpret it. Try to reproduce your error in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1552723754, "post_id": 55172558, "comment_id": 97127142, "body": "&quot;In JavaScript, I can do it like this: &quot; - No, you can&#39;t. This comparison is false, although the JSON is semantically equal: <code>JSON.stringify({&quot;foo&quot;: 1, &quot;bar&quot;: 2}) === JSON.stringify({&quot;bar&quot;: 2, &quot;foo&quot;: 1})</code>"}], "answers": [{"comments": [{"owner": {"reputation": 93, "user_id": 2456849, "user_type": "registered", "accept_rate": 18, "profile_image": "https://i.stack.imgur.com/E8By1.png?s=128&g=1", "display_name": "MichalObi", "link": "https://stackoverflow.com/users/2456849/michalobi"}, "edited": false, "score": 0, "creation_date": 1552672350, "post_id": 55175416, "comment_id": 97114509, "body": "Can&#39;t do this - Array / JsValue do not implement iter"}, {"owner": {"reputation": 499, "user_id": 2657597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd722d2a072baf7f1140c287ccb7e306?s=128&d=identicon&r=PG", "display_name": "Louis Garczynski", "link": "https://stackoverflow.com/users/2657597/louis-garczynski"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552876416, "post_id": 55175416, "comment_id": 97163711, "body": "@trentcl Also fixed"}], "tags": [], "owner": {"reputation": 499, "user_id": 2657597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd722d2a072baf7f1140c287ccb7e306?s=128&d=identicon&r=PG", "display_name": "Louis Garczynski", "link": "https://stackoverflow.com/users/2657597/louis-garczynski"}, "is_accepted": false, "score": 1, "last_activity_date": 1552876341, "last_edit_date": 1552876341, "creation_date": 1552622938, "answer_id": 55175416, "question_id": 55172558, "link": "https://stackoverflow.com/questions/55172558/how-do-i-compare-values-of-two-jsvalues-in-rust-code/55175416#55175416", "title": "How do I compare values of two JsValues in Rust code?", "body": "<p>If I understand correctly, you are not supposed to compare them. They don't implement <code>Eq</code> or <code>PartialEq</code>, and you therefore cannot compare slices or arrays of them.</p>\n\n<p>In fact they don't even live inside Rust, and are simply indexes to values outside.</p>\n\n<p>You probably can't sort them either because they don't implement <code>Ord</code>.</p>\n\n<p>The idiomatic way to do this would be to convert them to Rust primitives using the <code>as_f64</code> methods, and then do whatever you need to.</p>\n\n<p>It would be easier if you had a <code>TypedArray</code>, which can readily be converted to a vec.</p>\n\n<pre><code>let js_array_to_sort = Array::of3(&amp;JsValue::from(1), &amp;JsValue::from(3), &amp;JsValue::from(2));\n\nlet rust_vec = js_array_to_sort\n    .values().into_iter()\n    .map(|js_val|\n        js_val.as_f64().unwrap() as i64\n    )\n    .collect::&lt;Vec&lt;i64&gt;&gt;();\n\nlet mut sorted_rust_vec = rust_vec.clone();\nsorted_rust_vec.sort();\n\ndbg!(sorted_rust_vec == rust_vec);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4313, "user_id": 2224047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UZ83S.jpg?s=128&g=1", "display_name": "Nikolai  Shevchenko", "link": "https://stackoverflow.com/users/2224047/nikolai-shevchenko"}, "edited": false, "score": 0, "creation_date": 1569837521, "post_id": 58161882, "comment_id": 102712716, "body": "This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post. - <a href=\"/review/low-quality-posts/24181111\">From Review</a>"}, {"owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "reply_to_user": {"reputation": 4313, "user_id": 2224047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UZ83S.jpg?s=128&g=1", "display_name": "Nikolai  Shevchenko", "link": "https://stackoverflow.com/users/2224047/nikolai-shevchenko"}, "edited": false, "score": 1, "creation_date": 1569846951, "post_id": 58161882, "comment_id": 102717296, "body": "@NikolayShevchenko I have added explanation there, I think you clicked delete before I submitted."}], "tags": [], "owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "is_accepted": false, "score": 1, "last_activity_date": 1569846860, "last_edit_date": 1569846860, "creation_date": 1569820799, "answer_id": 58161882, "question_id": 55172558, "link": "https://stackoverflow.com/questions/55172558/how-do-i-compare-values-of-two-jsvalues-in-rust-code/58161882#58161882", "title": "How do I compare values of two JsValues in Rust code?", "body": "<p>Try <code>Object::is(&amp;first, &amp;second)</code> from js_sys.</p>\n\n<p>You can use <code>JSON::stringify(...)</code> and then compare it in similar way you are doing in JavaScript</p>\n\n<pre><code>#[wasm_bindgen_test]\nfn test_algo() {\n    let js_array_to_sort = Array::of3(&amp;JsValue::from(1), &amp;JsValue::from(2), &amp;JsValue::from(3));\n    let js_array_after_sort = Array::of3(&amp;JsValue::from(1), &amp;JsValue::from(2), &amp;JsValue::from(3));\n    let to_array = JsValue::from(&amp;js_array_to_sort);\n    let from_array = JsValue::from(&amp;js_array_after_sort);\n    let to_str: JsString = JSON::stringify(&amp;to_array).unwrap();\n    let from_str: JsString = JSON::stringify(&amp;from_array).unwrap();\n    assert_eq!(to_str == from_str, true);\n    assert_eq!(Object::is(&amp;to_str, &amp;from_str), true);\n}\n</code></pre>\n\n<p>Please use your own sorting algorithm. I have taken the values as sorted to compare, if not sorted then you can see the assertion error.</p>\n"}], "owner": {"reputation": 93, "user_id": 2456849, "user_type": "registered", "accept_rate": 18, "profile_image": "https://i.stack.imgur.com/E8By1.png?s=128&g=1", "display_name": "MichalObi", "link": "https://stackoverflow.com/users/2456849/michalobi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 506, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1569846860, "creation_date": 1552600256, "last_edit_date": 1552723305, "question_id": 55172558, "link": "https://stackoverflow.com/questions/55172558/how-do-i-compare-values-of-two-jsvalues-in-rust-code", "title": "How do I compare values of two JsValues in Rust code?", "body": "<p>In JavaScript, I can do it like this: </p>\n\n<pre class=\"lang-js prettyprint-override\"><code>JSON.stringify([1,2,3]) ===  JSON.stringify([1,2,3]) // true\n</code></pre>\n\n<p>In Rust compiled to Wasm, I tried something like:</p>\n\n<pre><code>#[wasm_bindgen_test]\nfn test_algo() {\n    let js_array_to_sort = Array::of3(&amp;JsValue::from(1), &amp;JsValue::from(3), &amp;JsValue::from(2));\n    let js_array_after_sort = Array::of3(&amp;JsValue::from(1), &amp;JsValue::from(2), &amp;JsValue::from(3));\n    let array = JsValue::from(&amp;js_array_to_sort);\n\n    assert_eq!(\n        JSON::stringify(BubbleSort::sort(SortArray::new(array))).unwrap(),\n        JSON::stringify(JsValue::from(&amp;js_array_after_sort)).unwrap(),\n    );\n}\n</code></pre>\n\n<p>It raised some error with <code>wasm-pack test --chrome</code> about no <code>partialeq</code> for <code>JsString</code> - a result of <code>JSON::stringify</code>:</p>\n\n<pre><code> error[E0277]: can't compare `js_sys::JsString` with `js_sys::JsString`\n    --&gt; src/algorithms/bubble.rs:36:5\n     |\n  36 | /     assert_eq!(\n  37 | |         JSON::stringify(&amp;BubbleSort::sort(SortArray::new(array))).unwrap(),\n  38 | |         JSON::stringify(&amp;JsValue::from(&amp;js_array_after_sort)).unwrap(),\n  39 | |     );\n     | |______^ no implementation for `js_sys::JsString == js_sys::JsString`\n     |\n     = help: the trait `std::cmp::PartialEq` is not implemented for `js_sys::JsString`\n</code></pre>\n\n<p>If I try to convert to a string and compare in some other way (like directly with <code>JsString</code> method), I always get the same kind of compiling error.</p>\n\n<p>If I try to compare this array directly, I have similar behavior to this in JavaScript:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>JsValue([1,2,3]) == JsValue([1,2,3]) // false\n</code></pre>\n\n<p>In <code>Cargo.toml</code> I have:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[dependencies]\nwasm-bindgen = \"0.2.39\"\njs-sys = \"0.3.16\"\nwasm-bindgen-test = \"0.2.39\"\n</code></pre>\n\n<p>How do I make this kind of comparison?</p>\n\n<p>Edit.</p>\n\n<p>I come up with something like this to pass this test:</p>\n\n<pre><code>  assert_eq!(\n        String::from(JSON::stringify(&amp;BubbleSort::sort(SortArray::new(array))).unwrap()),\n        String::from(JSON::stringify(&amp;JsValue::from(&amp;js_array_after_sort)).unwrap()),\n    );\n</code></pre>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1552598092, "post_id": 55171692, "comment_id": 97083466, "body": "You need to move <code>freefall.rs</code> into a subdirectory called <code>projectile</code>. Also note that <code>use std;</code> doesn&#39;t do anything, and that rust module names are lower case by convention."}, {"owner": {"reputation": 51, "user_id": 10926030, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-w_r5FGhM3is/AAAAAAAAAAI/AAAAAAAAACw/oToWnr9Lvv0/photo.jpg?sz=128", "display_name": "Andrew Chon", "link": "https://stackoverflow.com/users/10926030/andrew-chon"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1552598976, "post_id": 55171692, "comment_id": 97083828, "body": "Thank you, much appreciated"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552599944, "post_id": 55171692, "comment_id": 97084157, "body": "You should make an effort not to confuse <i>files</i> with <i>modules</i>. Files may contain multiple modules (but modules may not be spread across multiple files, as in some other languages). You could, for example, put the contents of <code>freefall.rs</code> directly within <code>mod freefall { &#47;* here *&#47; }</code>, and not have to create a new file."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552608129, "post_id": 55171692, "comment_id": 97086415, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, fields and modules; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>projectile</code>; <code>free_fall</code> instead, please."}], "answers": [{"comments": [{"owner": {"reputation": 51, "user_id": 10926030, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-w_r5FGhM3is/AAAAAAAAAAI/AAAAAAAAACw/oToWnr9Lvv0/photo.jpg?sz=128", "display_name": "Andrew Chon", "link": "https://stackoverflow.com/users/10926030/andrew-chon"}, "edited": false, "score": 0, "creation_date": 1552599026, "post_id": 55172251, "comment_id": 97083853, "body": "Thank you. I wasn&#39;t aware that I had to do it in that way."}], "tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": true, "score": 1, "last_activity_date": 1552608206, "last_edit_date": 1552608206, "creation_date": 1552598728, "answer_id": 55172251, "question_id": 55171692, "link": "https://stackoverflow.com/questions/55171692/use-a-module-inside-of-a-module-in-rust/55172251#55172251", "title": "Use a module inside of a module in Rust", "body": "<p>In Rust, single-file modules can't declare other modules from other files with the <code>mod</code> keyword. To do this, you need to create a directory for the module, name the module root file <code>mod.rs</code>, and create a separate file (or directory) inside that one for each nested module.</p>\n\n<p>As a rule of thumb, you should declare every module in the \"root file\" (typically <code>main.rs</code>, <code>lib.rs</code> or <code>mod.rs</code>) of the directory, and <code>use</code> it everywhere else. Conveniently, you can use <code>crate::</code> as the root module of your crate, and refer to your modules using that.</p>\n\n<hr>\n\n<p>For example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src/\n  main.rs             crate\n  foo.rs              crate::foo\n  bar.rs              crate::bar\n  baz/\n    mod.rs            crate::baz\n    inner.rs          crate::baz::inner\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>// declare the modules---we only do this once in our entire crate\npub mod foo;\npub mod bar;\npub mod baz;\n\nfn main() { }\n</code></pre>\n\n<p><strong>foo.rs</strong></p>\n\n<pre><code>// use other modules in this crate\nuse crate::bar::*;\nuse crate::baz::inner::*;\n</code></pre>\n\n<p><strong>baz/mod.rs</strong></p>\n\n<pre><code>// the baz module contains a nested module,\n// which has to be declared here\npub mod inner;\n</code></pre>\n\n<hr>\n\n<p>Some resources for further reading:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/book/ch07-02-modules-and-use-to-control-scope-and-privacy.html\" rel=\"nofollow noreferrer\">The Module System to Control Scope and Privacy</a></li>\n<li><a href=\"https://medium.com/@tak2siva/rust-modules-explained-96809931bbbf\" rel=\"nofollow noreferrer\">Rust modules explained</a></li>\n</ul>\n"}], "owner": {"reputation": 51, "user_id": 10926030, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-w_r5FGhM3is/AAAAAAAAAAI/AAAAAAAAACw/oToWnr9Lvv0/photo.jpg?sz=128", "display_name": "Andrew Chon", "link": "https://stackoverflow.com/users/10926030/andrew-chon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "closed_date": 1552608443, "accepted_answer_id": 55172251, "answer_count": 1, "score": 0, "last_activity_date": 1552608360, "creation_date": 1552596362, "last_edit_date": 1552608360, "question_id": 55171692, "link": "https://stackoverflow.com/questions/55171692/use-a-module-inside-of-a-module-in-rust", "closed_reason": "Duplicate", "title": "Use a module inside of a module in Rust", "body": "<p>I have a file <em>Projectile.rs</em> that is in the <code>src</code> directory. It is currently used by <em>main.rs</em>. However, I require the file <em>FreeFall.rs</em> sharing the same directory to be used in <em>Projectile.rs</em>. Here is how it looks at the moment:</p>\n\n<p><strong>DIRECTORY</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src\n |___main.rs\n |___Projectile.rs\n |___FreeFall.rs\n</code></pre>\n\n<p><strong>MAIN.RS</strong></p>\n\n<pre><code>mod Projectile;\nfn main() {\n    println!(\"Goed... momenteel\");\n    Projectile::projectile(10.0, 5.0, 100.0, 7.5);\n}\n</code></pre>\n\n<p><strong>PROJECTILE.RS</strong></p>\n\n<pre><code>use std;\nmod FreeFall;\npub fn projectile(init: f64, AngleX: f64, AngleY: f64, AngleZ: f64) {\n    let mut FFAccel = FreeFall::acceleration();\n    struct Velocities {\n        x: f64,\n        y: f64,\n        z: f64,\n        t: f64,\n    };\n    let mut Object1 = Velocities {\n        x: init * AngleX.sin(),\n        y: init * AngleY.cos(),\n        z: init * AngleZ.tan(),\n        t: (2.0 * init.powf(-1.0) * AngleY.sin()) / FFAccel,\n    };\n    println!(\"{}\", Object1.t);\n}\n</code></pre>\n\n<p><strong>FREEFALL.RS</strong></p>\n\n<pre><code>use std;\n\npub fn acceleration() {\n    // maths here\n}\n</code></pre>\n\n<p>I can't just use the value 9.81 (which is the average gravity on Earth) because it does not take into account air resistance, terminal velocity, etc.</p>\n\n<p>I tried including the <code>FreeFall</code> module into <em>main.rs</em> instead, but it did not work.</p>\n"}, {"tags": ["rust", "timeout", "channel"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1552587432, "post_id": 55168967, "comment_id": 97078283, "body": "Can&#39;t you use <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv_timeout\" rel=\"nofollow noreferrer\"><code>recv_timeout</code></a>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1552587509, "post_id": 55168967, "comment_id": 97078314, "body": "Although, probably you want <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv_deadline\" rel=\"nofollow noreferrer\"><code>recv_deadline</code></a>, which is still unstable.."}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1552592469, "post_id": 55168967, "comment_id": 97080736, "body": "I want to read all responses for a fixed duration (say a minute). Tbh my only problem is having to manually sleep to avoid overusage of cpu, something which in Go for example is handled with select and I guess the select! macro does something similar."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552633515, "post_id": 55168967, "comment_id": 97092515, "body": "What is the purpose of <i>&quot;without external crates&quot;</i>? Rust is built around crates and recommends you to use other peoples work. I don&#39;t get why so many people think it&#39;s a bad thing :/"}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1552641733, "post_id": 55168967, "comment_id": 97096378, "body": "I think using an external crate for something that simple is unnecessary. Although I found most of these crates great, it does feel some times a bit like nodejs ending up with a million dependencies."}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1552597786, "post_id": 55170970, "comment_id": 97083328, "body": "I wonder what does Rust internally use to not drain cpu usage?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 1, "creation_date": 1552598483, "post_id": 55170970, "comment_id": 97083632, "body": "You can check the source: <a href=\"https://github.com/rust-lang/rust/blob/master/src/libstd/sync/mpsc/stream.rs#L191-L203\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/blob/master/src/libstd/sync/mpsc/&hellip;</a>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1552632794, "last_edit_date": 1552632794, "creation_date": 1552593191, "answer_id": 55170970, "question_id": 55168967, "link": "https://stackoverflow.com/questions/55168967/how-do-i-read-from-a-mpscchannel-for-a-specified-amount-of-time-without-unstab/55170970#55170970", "title": "How do I read from a mpsc::channel for a specified amount of time without unstable features or external crates?", "body": "<p>You can do this with <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv_timeout\" rel=\"nofollow noreferrer\"><code>recv_timeout</code></a>, which should also be a lot neater:</p>\n\n<pre><code>pub fn get&lt;T&gt;(rx: &amp;Receiver&lt;T&gt;, get_duration: Duration) -&gt; Result&lt;(), Error&gt; {\n    let start_time = Instant::now();\n    loop {\n        let now = Instant::now();\n        if start_time + get_duration &gt; now {\n            let duration = start_time + get_duration - now;\n            match rx.recv_timeout(duration) {\n                Ok(resp) =&gt; {\n                    // handle message\n                }\n                Err(RecvTimeoutError::Timeout) =&gt; break,\n                Err(RecvTimeoutError::Disconnected) =&gt; {\n                    // handle disconnect\n                }\n            }\n        } else {\n            break;\n        }\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>When <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv_deadline\" rel=\"nofollow noreferrer\"><code>recv_deadline</code></a> stabilises, you can make this even simpler because you will just calculate the deadline once and then keep passing it, instead of recomputing the new duration each iteration.</p>\n\n<hr>\n\n<p><em>Edit:</em> A case in point for why you should use <code>recv_deadline</code> when it becomes stable is a bug in the code I just gave you. <code>Duration</code> is always positive, but my original calculation did not check to prevent underflow, which would have caused an intermittent panic. I have updated it now to ensure that won't happen.</p>\n\n<p>Here's what it would look like using deadlines (in Nightly Rust) instead:</p>\n\n<pre><code>#![feature(deadline_api)]\n\npub fn get&lt;T&gt;(rx: &amp;Receiver&lt;T&gt;, get_duration: Duration) -&gt; Result&lt;(), Error&gt; {\n    let deadline = Instant::now() + get_duration;\n    loop {\n        match rx.recv_deadline(deadline) {\n            Ok(resp) =&gt; {\n                // handle message\n            }\n            Err(RecvTimeoutError::Timeout) =&gt; break,\n            Err(RecvTimeoutError::Disconnected) =&gt; {\n                // handle disconnect\n            }\n        }\n    }\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 0, "accepted_answer_id": 55170970, "answer_count": 1, "score": 1, "last_activity_date": 1552632794, "creation_date": 1552585504, "last_edit_date": 1552591673, "question_id": 55168967, "link": "https://stackoverflow.com/questions/55168967/how-do-i-read-from-a-mpscchannel-for-a-specified-amount-of-time-without-unstab", "title": "How do I read from a mpsc::channel for a specified amount of time without unstable features or external crates?", "body": "<p>I'm trying to continuously read from a <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html\" rel=\"nofollow noreferrer\"><code>Receiver</code></a> for a specified duration. I've come up with the following solution</p>\n\n<pre><code>pub fn get&lt;T&gt;(\n    rx: &amp;Receiver&lt;T&gt;,\n    get_duration: time::Duration,\n) -&gt; Result&lt;(), Err&gt; {\n    let (dur_tx, dur_rx) = channel();\n    let _ = thread::spawn(move || {\n        // timer to kill receiving\n        thread::sleep(get_duration);\n        let _ = dur_tx.send(\"tick\");\n    });\n\n    let mut time_to_break = false;\n    while time_to_break == false {\n        match rx.try_recv() {\n            Ok(resp) =&gt; {\n                //...\n            }\n            Err(_) =&gt; ()\n        }\n        thread::sleep(time::Duration::from_millis(1)); // avoid using cpu 100%\n        let _ = dur_rx.try_recv().map(|_| time_to_break = true);\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>Is there a better way around this without unstable or deprecated features (e.g. <a href=\"https://doc.rust-lang.org/std/macro.select.html\" rel=\"nofollow noreferrer\"><code>select</code></a>) or external crates?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1552583089, "post_id": 55168119, "comment_id": 97075826, "body": "When LLVM knows something is immutable, it can make a lot of optimisations that would be unsafe if that thing turned out to be mutable. Everything is immutable by default in Rust, so the compiler needs to flag to LLVM that it can&#39;t just rearrange code however it wants."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1552583518, "post_id": 55168119, "comment_id": 97076097, "body": "zero cost mean that if you want implement it by hand you will have the same cost of the abstraction. if you need same feature offer <code>Cell</code> you will have the same lose of optimisation."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552584952, "post_id": 55168119, "comment_id": 97076939, "body": "<a href=\"https://github.com/rust-lang/rust/issues/34496\" rel=\"nofollow noreferrer\">Issue #34496</a> relates to this, as does the <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\">documentation for <code>UnsafeCell</code></a> (note that <code>Cell</code> itself is not special to the compiler, since it is not a lang item; it &quot;inherits&quot; this property from its internal <code>UnsafeCell</code>)."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1552591544, "last_edit_date": 1552591544, "creation_date": 1552585699, "answer_id": 55169016, "question_id": 55168119, "link": "https://stackoverflow.com/questions/55168119/what-costs-are-incurred-when-using-cellt-as-opposed-to-just-t/55169016#55169016", "title": "What costs are incurred when using Cell&lt;T&gt; as opposed to just T?", "body": "<p><strong>TL;DR</strong> <code>Cell</code> is <strong>Zero-Overhead Abstraction</strong>; that is, the same functionality implemented manually has the same cost.</p>\n\n<hr>\n\n<p>The term <strong>Zero-Cost Abstractions</strong> is not English, it's jargon. The idea of <strong>Zero-Cost Abstractions</strong> is that the <em>layer of abstraction</em> itself does not add any cost compared to <em>manually</em> doing the same thing.</p>\n\n<p>There are various misunderstandings that have sprung up: most notably, I have regularly seen zero-cost understood as <em>\"the operation is free\"</em>, which is not the case.</p>\n\n<p>To add to the confusion, the exception mechanism used by most C++ implementations, and which Rust uses for <code>panic = unwind</code> is called Zero-Cost Exceptions, and purports<sup>1</sup> to add no overhead on the non-throwing path. It's a different kind of Zero-Cost...</p>\n\n<p>Lately, my recommendation is to switch to using the term <strong>Zero-Overhead Abstractions</strong>: first because it's a distinct term from Zero-Cost Exceptions, so less likely to be mistaken, and second because it emphasizes that the Abstraction does not add Overhead, which is what we are trying to convey in the first place.</p>\n\n<p><sup>1</sup> <em>The objective is only partially achieved. While the same assembly executed with and without the possibility of throwing indeed has the same performance, the presence of potential exceptions may hinder the optimizer and cause it to generate sub-optimal assembly in the first place.</em></p>\n\n<hr>\n\n<blockquote>\n  <p>With all that said, I'd like to understand the actual cost of using <code>Cell&lt;T&gt;</code>, including whatever optimizations it may prevent.</p>\n</blockquote>\n\n<p>On the memory side, there is no overhead:</p>\n\n<ul>\n<li><code>sizeof::&lt;Cell&lt;T&gt;&gt;() == sizeof::&lt;T&gt;()</code>,</li>\n<li>given a <code>cell</code> of type <code>Cell&lt;T&gt;</code>, <code>&amp;cell == cell.as_ptr()</code>.</li>\n</ul>\n\n<p>(You can peek <a href=\"https://doc.rust-lang.org/src/core/cell.rs.html#230-232\" rel=\"noreferrer\">at the source code</a>)</p>\n\n<p>On the access side, <code>Cell&lt;T&gt;</code> does incur a run-time cost compared to <code>T</code>; the cost of the extra functionality.</p>\n\n<p>The most immediate cost is that manipulating the value through a <code>&amp;Cell&lt;T&gt;</code> requires copying it back and forth<sup>1</sup>. This is a bitwise copy, so the optimizer <em>may</em> elide it, if it can prove that it is safe to do so.</p>\n\n<p>Another notable cost is that <code>UnsafeCell&lt;T&gt;</code>, on which <code>Cell&lt;T&gt;</code> is based, breaks the rules that <code>&amp;T</code> means that <code>T</code> cannot be modified.</p>\n\n<p>When a compiler can prove that a portion of memory cannot be modified, it can optimize out further reads: read <code>t.foo</code> in a register, then use the register value rather than reading <code>t.foo</code> again.</p>\n\n<p>In traditional Rust code, a <code>&amp;T</code> gives such a guarantee: no matter if there are opaque function calls, calls to C code, etc... between two reads to <code>t.foo</code>, the second read will return the same value as the first, guaranteed. With a <code>&amp;Cell&lt;T&gt;</code>, there is no such guarantee any longer, and thus unless the optimizer can prove beyond doubt that the value is unmodified<sup>2</sup>, then it cannot apply such optimizations.</p>\n\n<p><sup>1</sup> <em>You can manipulate the value at no cost through <code>&amp;mut Cell&lt;T&gt;</code> or using <code>unsafe</code> code.</em></p>\n\n<p><sup>2</sup> <em>For example, if the optimizer knows that the value resides on the stack, and it never passed the address of the value to anyone else, then it can reasonably conclude that no one else can modify the value. Although a stack-smashing attack may, of course.</em></p>\n"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 55169016, "answer_count": 1, "score": 4, "last_activity_date": 1552591544, "creation_date": 1552582500, "question_id": 55168119, "link": "https://stackoverflow.com/questions/55168119/what-costs-are-incurred-when-using-cellt-as-opposed-to-just-t", "title": "What costs are incurred when using Cell&lt;T&gt; as opposed to just T?", "body": "<p>I ran across a <a href=\"https://www.reddit.com/r/rust/comments/755a5x/i_have_finally_understood_what_cell_and_refcell/do3tw4c/\" rel=\"nofollow noreferrer\">comment on reddit</a> that indicates that using <code>Cell&lt;T&gt;</code> prevents certain optimizations from occurring:</p>\n\n<blockquote>\n  <p>Cell works with no memory overhead (Cell is the same size as T) and little runtime overhead (it \"just\" inhibits optimisations, it doesn't introduce extra explicit operations)</p>\n</blockquote>\n\n<p>This seems counter to other things I've read about <code>Cell&lt;T&gt;</code>, in particular that it's \"zero-cost.\" The first place I encountered this categorization is <a href=\"https://manishearth.github.io/blog/2015/05/27/wrapper-types-in-rust-choosing-your-guarantees/\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>With all that said, I'd like to understand the actual cost of using <code>Cell&lt;T&gt;</code>, including whatever optimizations it may prevent.</p>\n"}, {"tags": ["rust", "future", "smart-pointers", "rust-tokio", "hyper"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552572808, "post_id": 55164529, "comment_id": 97068563, "body": "A reference to an <code>Arc</code> doesn&#39;t make much sense IMHO. You either pass <code>&amp;ChallengeState</code> if you want to do something with it or <code>Arc</code> when you need to store it."}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552573824, "post_id": 55164529, "comment_id": 97069362, "body": "This Arc is shared with other threads. I&#39;m thinking of a reference to avoid having to clone on each service_fn call."}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552582272, "post_id": 55164529, "comment_id": 97075345, "body": "I&#39;ve updated the code with the relevant problem only."}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1552573760, "post_id": 55164735, "comment_id": 97069303, "body": "This gives a different problem: &quot;this closure implements <code>FnOnce</code>, not <code>Fn</code>&quot;. Challenge needs to be moved every time not once."}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552577545, "post_id": 55164735, "comment_id": 97072147, "body": "@hellow sorry it&#39;s mostly unit-tests. Anyway the problem seems quite straightforward. I&#39;m passing a reference to an Arc and the compiler can&#39;t make out the lifetime of the original Arc to check if it&#39;s lifetime will match from what I understand."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1552578633, "post_id": 55164735, "comment_id": 97072904, "body": "@NikosKostoulas Would you say that <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3899d8aeef32153ee6048eb74a7ab884\" rel=\"nofollow noreferrer\">this is a minimal reproduction</a> or your problem?"}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1552578969, "post_id": 55164735, "comment_id": 97073180, "body": "yep with <code>&amp;&#39;a Arc&lt;Mutex&lt;ChallengeState&gt;&gt;,</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1552579070, "post_id": 55164735, "comment_id": 97073242, "body": "@NikosKostoulas So is this the fix you are looking for? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8132244742bbd18a528a85a191dfea8a\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1552580501, "post_id": 55164735, "comment_id": 97074272, "body": "Yes but I get an additional problem when I use another method where I unlock the Arc Mutex! <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=10ea31450e88a122455006760d7fcdd1\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "edited": false, "score": 0, "creation_date": 1552597285, "post_id": 55164735, "comment_id": 97083087, "body": "Weird issue right? And when I try to apply <code>&#39;a</code> lifetime to challenge in all methods I get an error in run_listener."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1552572835, "creation_date": 1552572835, "answer_id": 55164735, "question_id": 55164529, "link": "https://stackoverflow.com/questions/55164529/issue-passing-mutable-arc-reference-to-hyper-service-fn-handler/55164735#55164735", "title": "Issue passing mutable Arc reference to hyper service_fn handler", "body": "<p>The whole point of an <code>Arc</code> is that it counts how many references there are, which happens when it is cloned. Passing around references to an <code>Arc</code> defeats the point.</p>\n\n<p>Instead of passing references, pass the <code>Arc</code> itself. So <code>handle</code>'s signature becomes:</p>\n\n<pre><code>fn handle&lt;'a&gt;(\n    req: Request&lt;Body&gt;,\n    challenge: Arc&lt;Mutex&lt;ChallengeState&gt;&gt;,\n) -&gt; BoxFut&lt;'a&gt;\n</code></pre>\n\n<p>Passing the <code>Arc</code> by references from the closure isn't possible because you would be referencing something that immediately goes out of scope. Instead, <em>move</em> the <code>Arc</code> into <code>handle</code>:</p>\n\n<pre><code>let listener_service = move || {\n    service_fn(move |req: Request&lt;Body&gt;| handle(req, challenge))\n}; \n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 11101215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66d8c0618d88e52c23e4ec6a09f7feb5?s=128&d=identicon&r=PG&f=1", "display_name": "Nikos Kostoulas", "link": "https://stackoverflow.com/users/11101215/nikos-kostoulas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 541, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1552584746, "creation_date": 1552572250, "last_edit_date": 1552584746, "question_id": 55164529, "link": "https://stackoverflow.com/questions/55164529/issue-passing-mutable-arc-reference-to-hyper-service-fn-handler", "title": "Issue passing mutable Arc reference to hyper service_fn handler", "body": "<p>I've been trying the following</p>\n\n<p>Relevant imports and code shown</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::thread;\nuse hyper::rt::{self, Future, Stream};\nuse hyper::service::service_fn;\nuse hyper::{Body, Request, Response, Server, StatusCode};\n\npub struct ChallengeState;\npub struct ChallengeResponse;\n\ntype BoxFut&lt;'a&gt; = Box&lt;Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; + Send + 'a&gt;;\n\nfn handle_challengeproof&lt;'a&gt;(\n    req: Request&lt;Body&gt;,\n    challenge: &amp;Arc&lt;Mutex&lt;ChallengeState&gt;&gt;,\n) -&gt; BoxFut&lt;'a&gt; {\n    let resp = req.into_body().concat2().map(move |body| {\n        let challenge_lock = challenge.lock().unwrap();\n        Response::builder()\n        .status(StatusCode::OK)\n        .body(Body::from(\"test\"))\n        .unwrap()\n    });\n    Box::new(resp)\n}\n\nfn handle&lt;'a&gt;(\n    req: Request&lt;Body&gt;,\n    challenge: &amp;Arc&lt;Mutex&lt;ChallengeState&gt;&gt;,\n) -&gt; BoxFut&lt;'a&gt; {\n    handle_challengeproof(req, challenge)\n}\n\npub fn run_listener(\n    challenge: Arc&lt;Mutex&lt;ChallengeState&gt;&gt;,\n) -&gt; thread::JoinHandle&lt;()&gt; {\n    let addr = ([127, 0, 0, 1], 9999).into();\n\n    let listener_service = move || {\n        let challenge = Arc::clone(&amp;challenge);\n        service_fn(move |req: Request&lt;Body&gt;| {\n            handle(req, &amp;challenge)\n        })\n    };\n\n    let server = Server::bind(&amp;addr)\n        .serve(listener_service)\n        .map_err(|_| () );\n\n    thread::spawn(move || {\n        rt::run(server);\n    })\n}\n</code></pre>\n\n<p>I've been trying to avoid an extra clone of Arc by passing a reference to the handle method but can't seem to get around this. Avoiding the lifetime on handle() got a different error regarding futures asking for static lifetime.</p>\n\n<p>Code updated with only relevant stuff @ <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=10ea31450e88a122455006760d7fcdd1\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=10ea31450e88a122455006760d7fcdd1</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552568418, "post_id": 55163051, "comment_id": 97065232, "body": "Capacity =/= length. I cannot find the duplicate right now."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1552568609, "post_id": 55163051, "comment_id": 97065372, "body": "<code>gen_range(1, 2^32);</code> does not do what you think it does (xor vs pow)"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1552571309, "post_id": 55163051, "comment_id": 97067463, "body": "Take a look at the implementation for <a href=\"https://doc.rust-lang.org/src/alloc/vec.rs.html#356-361\" rel=\"nofollow noreferrer\"><code>Vec::with_capacity(usize)</code></a>, it sets the <code>len</code> to 0, therefore making it UB to access any value in the <code>Vec</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552573287, "post_id": 55163051, "comment_id": 97068922, "body": "<i>it seems more efficient</i> \u2014 yes, which is why <code>Iterator::collect</code> makes sure to allocate the correct space up front. Use one of the solutions from <a href=\"https://stackoverflow.com/q/48218459/155423\">How do I generate a vector of random numbers in a range?</a>. These are additionally efficient because they do not create the RNG multiple times and do not repeatedly generate the range to pick inside."}, {"owner": {"reputation": 139, "user_id": 10907660, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UljqA.png?s=128&g=1", "display_name": "Julia O", "link": "https://stackoverflow.com/users/10907660/julia-o"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552623248, "post_id": 55163051, "comment_id": 97089587, "body": "@hellow - Thank you very much for pointing that out. <a href=\"https://stackoverflow.com/questions/51208703/how-to-raise-a-number-to-a-power\" title=\"how to raise a number to a power\">stackoverflow.com/questions/51208703/&hellip;</a> tells me exactly that."}], "answers": [{"tags": [], "owner": {"reputation": 2463, "user_id": 2346731, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54b21109a70f680b9c50261b90d22f87?s=128&d=identicon&r=PG", "display_name": "Marcus", "link": "https://stackoverflow.com/users/2346731/marcus"}, "is_accepted": true, "score": 7, "last_activity_date": 1552568596, "creation_date": 1552568596, "answer_id": 55163269, "question_id": 55163051, "link": "https://stackoverflow.com/questions/55163051/how-to-populate-a-vector-with-predefined-capacity/55163269#55163269", "title": "How to populate a vector with predefined capacity?", "body": "<p><code>with_capacity</code> does not initialize the values of the vector, it just allocates space for them. From <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.with_capacity\" rel=\"noreferrer\">the documentation</a>:</p>\n\n<blockquote>\n  <p>It is important to note that although the returned vector has the\n  capacity specified, the vector will have a zero length. For an\n  explanation of the difference between length and capacity, see\n  <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#capacity-and-reallocation\" rel=\"noreferrer\">Capacity and reallocation</a>.</p>\n</blockquote>\n\n<p>This means that when your loop code is executed, there are no items in the vector, and therefore it loops a total of zero times. Resulting in no change in the vector.</p>\n"}], "owner": {"reputation": 139, "user_id": 10907660, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UljqA.png?s=128&g=1", "display_name": "Julia O", "link": "https://stackoverflow.com/users/10907660/julia-o"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 0, "closed_date": 1552582865, "accepted_answer_id": 55163269, "answer_count": 1, "score": 2, "last_activity_date": 1552609305, "creation_date": 1552567904, "last_edit_date": 1552573185, "question_id": 55163051, "link": "https://stackoverflow.com/questions/55163051/how-to-populate-a-vector-with-predefined-capacity", "closed_reason": "Duplicate", "title": "How to populate a vector with predefined capacity?", "body": "<p>I am trying to populate a vector after initialising it with <code>with_capacity()</code> as the number of elements is known prior to its creation and it seems more efficient with it.</p>\n\n<p>The following code does NOT populate with random values AT ALL: <code>println!(\"{}\", v.len());</code> outputs zero. </p>\n\n<pre><code>use rand::Rng;\n\nfn main() {\n    const NUMBER_OF_RANDOM_NUMBERS: usize = 10;\n\n    let mut v = Vec::with_capacity(NUMBER_OF_RANDOM_NUMBERS);\n\n    for i in &amp;mut v {\n        *i += rand::thread_rng().gen_range(1, 2^32);\n    }\n\n    println!(\"{}\", v.len());\n}\n</code></pre>\n\n<p>My thinking is after <code>let mut v = Vec::with_capacity(NUMBER_OF_RANDOM_NUMBERS)</code> a brand new vector gets initialised with 10 zeros and then using <code>rand::thread_rng().gen_range(1, 2^32)</code> to insert, or should I say, add a random number to each zero.</p>\n\n<p>Am I missing something here?</p>\n"}, {"tags": ["arrays", "enums", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1552564167, "post_id": 55161524, "comment_id": 97062467, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/49388285/is-there-a-more-idiomatic-way-to-initialize-an-array-with-random-numbers-than-a\" title=\"is there a more idiomatic way to initialize an array with random numbers than a\">stackoverflow.com/questions/49388285/&hellip;</a> <a href=\"https://stackoverflow.com/questions/31360993/what-is-the-proper-way-to-initialize-a-fixed-length-array\" title=\"what is the proper way to initialize a fixed length array\">stackoverflow.com/questions/31360993/&hellip;</a> <a href=\"https://stackoverflow.com/questions/31360993/what-is-the-proper-way-to-initialize-a-fixed-length-array\" title=\"what is the proper way to initialize a fixed length array\">stackoverflow.com/questions/31360993/&hellip;</a> and <a href=\"https://stackoverflow.com/questions/55143009/is-it-possible-to-declare-an-immutable-array-and-assign-value-to-its-elements-se\" title=\"is it possible to declare an immutable array and assign value to its elements se\">stackoverflow.com/questions/55143009/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1552564250, "post_id": 55161524, "comment_id": 97062521, "body": "<i>&quot;the compiler is dumb&quot;</i> nah.. it&#39;s not. It has valid reasons to not let that happen."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552564468, "post_id": 55161524, "comment_id": 97062670, "body": "@hellow Two of those links are to the same question."}, {"owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552801915, "post_id": 55161524, "comment_id": 97145059, "body": "@hellow No, the compiler is truly dumb in this case. It has no good reason to not allow <code>[Tile::Water; 10]</code> and in fact it should eventually be allowed (<a href=\"https://github.com/rust-lang/rust/issues/49147\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/49147</a>)."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 4, "creation_date": 1552564959, "post_id": 55161860, "comment_id": 97063006, "body": "How is your answer different from the suggested duplicate: <a href=\"https://stackoverflow.com/questions/28656387/initialize-a-large-fixed-size-array-with-non-copy-types\" title=\"initialize a large fixed size array with non copy types\">stackoverflow.com/questions/28656387/&hellip;</a>"}, {"owner": {"reputation": 25, "user_id": 11202572, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-WXwXoIWqf_g/AAAAAAAAAAI/AAAAAAAAAQ4/9xNzlza716g/photo.jpg?sz=128", "display_name": "Tesik", "link": "https://stackoverflow.com/users/11202572/tesik"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552690799, "post_id": 55161860, "comment_id": 97121752, "body": "@hellow The suggested question asks for non-Copy types generally. Non-Copy types usually have a good reason not to be copied &quot;as-is&quot; but an enum with only some variants which hold a reference is a specific case where, in many cases, copying is safe. That is not to say such enums should implement Copy. The compiler does not analyze, whether the value in question can be safely copied and straight out assumes it cannot. I asked for a work-around in this specific case."}], "tags": [], "owner": {"reputation": 12082, "user_id": 1391953, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a8ca191ed6a7d4942492f13ec8a8f4c?s=128&d=identicon&r=PG", "display_name": "vkurchatkin", "link": "https://stackoverflow.com/users/1391953/vkurchatkin"}, "is_accepted": true, "score": -1, "last_activity_date": 1552591107, "last_edit_date": 1552591107, "creation_date": 1552564399, "answer_id": 55161860, "question_id": 55161524, "link": "https://stackoverflow.com/questions/55161524/array-of-enum-with-a-possible-variant-containing-reference/55161860#55161860", "title": "Array of enum with a possible variant containing reference", "body": "<p>Try this:</p>\n\n<pre><code>enum Tile {\n    Water,\n    Debris,\n    Ship(Rc&lt;Ship&gt;),\n}\n\nimpl Default for Tile {\n    fn default() -&gt; Self {\n        Tile::Water\n    }\n}\n\nfn main() {\n    let mut b: [[Tile; 10]; 10] = Default::default();\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 11202572, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-WXwXoIWqf_g/AAAAAAAAAAI/AAAAAAAAAQ4/9xNzlza716g/photo.jpg?sz=128", "display_name": "Tesik", "link": "https://stackoverflow.com/users/11202572/tesik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "closed_date": 1552567025, "accepted_answer_id": 55161860, "answer_count": 1, "score": 0, "last_activity_date": 1552591284, "creation_date": 1552563384, "last_edit_date": 1552564099, "question_id": 55161524, "link": "https://stackoverflow.com/questions/55161524/array-of-enum-with-a-possible-variant-containing-reference", "closed_reason": "Duplicate", "title": "Array of enum with a possible variant containing reference", "body": "<p>I tried coding the paper game of battleships, where a battlefield is an enum array. I couldn't find a way to initialize the array.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Tile {\n    Water,\n    Debris,\n    Ship(Rc&lt;Ship&gt;),\n}\n\nfn main() {\n    let mut a = [[Tile::Water; 10]; 10]; //Tile::Water doesn't implement Copy (the compiler is dumb)\n    let mut b: [[Tile; 10]; 10];\n    for i in 1..10 {\n        for j in 1..10 {\n            b[i][j] = Tile::Water;\n        }\n    } //use of possibly uninitialized b (I'm trying to initialize it)\n}\n</code></pre>\n\n<p>How can this be done? I am <strong>not</strong> looking for another solution for the game, it is just an example here.</p>\n"}, {"tags": ["reference", "rust", "lifetime", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1552562012, "last_edit_date": 1552562012, "creation_date": 1552557132, "answer_id": 55159426, "question_id": 55159003, "link": "https://stackoverflow.com/questions/55159003/do-lifetime-annotations-in-rust-change-the-lifetime-of-the-variables/55159426#55159426", "title": "Do lifetime annotations in Rust change the lifetime of the variables?", "body": "<p>First, it's important to understand the difference between a lifetime and a scope. References have lifetimes, which are dependent on the scopes of the variables they refer to.</p>\n\n<p>A variable scope is lexical: </p>\n\n<pre><code>fn main() {\n    let string1 = String::from(\"long string is long\"); // &lt;-- scope of string1 begins here\n    let result;\n    {\n        let string2 = String::from(\"xyz\"); // &lt;-- scope of string2 begins here\n        result = longest(string1.as_str(), string2.as_str());\n        // &lt;-- scope of string2 ends here\n    }\n    println!(\"The longest string is {}\", result);\n    // &lt;-- scope of string1 ends here\n}\n</code></pre>\n\n<p>When you create a new reference to a variable, the lifetime of the reference is tied solely to the scope of the variable. Other references have different lifetime information attached to them, depending on where the reference came from and what information is known in that context. When you put named lifetime annotations on a type, the type-checker simply ensures that the lifetime information attached to any references is compatible with the annotations.</p>\n\n<pre><code>fn main() {\n    let string1 = String::from(\"long string is long\");\n    let result;\n    {\n        let string2 = String::from(\"xyz\");\n        // The lifetime of result cannot be longer than `'a` \n        result = longest(string1.as_str(), string2.as_str());\n        // But a reference to string2 also has lifetime `'a`, which means that\n        // the lifetime `'a` is only valid for the scope of string2 \n        // &lt;-- i.e. to here\n    }\n    // But then we try to use it here \u2014 oops!\n    println!(\"The longest string is {}\", result);\n}\n</code></pre>\n\n<blockquote>\n  <p>We\u2019ve told Rust that the lifetime of the reference returned by the longest function is the same as the smaller of the lifetimes of the references passed in.</p>\n</blockquote>\n\n<p>Sort of. We <em>did</em> tell this information to Rust, however, the borrow-checker will still check if it is true! If it's isn't <em>already</em> true then we will get an error. We can't change the truthfulness of that information, we can only tell Rust the constraints we want, and it will tell us if we are right.</p>\n\n<p>In your example, you could make the <code>main</code> function valid by changing the lifetime annotations on <code>longest</code>:</p>\n\n<pre><code>fn longest&lt;'a, 'b&gt;(x: &amp;'a str, y: &amp;'b str) -&gt; &amp;'a str {\n    if x.len() &gt; y.len() {\n        x\n    } else {\n        y // oops!\n    }\n}\n</code></pre>\n\n<p>But now you get an error <em>inside</em> <code>longest</code> because it no longer meets the requirements: it is now never valid to return <code>y</code> because its lifetime could be shorter than <code>'a</code>. In fact, the only ways to implement this function correctly are:</p>\n\n<ol>\n<li>Return <code>x</code></li>\n<li>Return a slice of <code>x</code></li>\n<li>Return a <code>&amp;'static str</code> \u2014 since <code>'static</code> outlives all other lifetimes</li>\n<li>Use <code>unsafe</code> code</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1552557600, "creation_date": 1552557600, "answer_id": 55159576, "question_id": 55159003, "link": "https://stackoverflow.com/questions/55159003/do-lifetime-annotations-in-rust-change-the-lifetime-of-the-variables/55159576#55159576", "title": "Do lifetime annotations in Rust change the lifetime of the variables?", "body": "<p>What the book is merely suggesting is that a lifetime parameter of a function cannot interfere with the affected value's lifetime. They cannot make a value live longer (or the opposite) than what is already prescribed by the program.</p>\n\n<p>However, different function signatures <em>can decide the lifetime of those references</em>. Since references are covariant with respect to their lifetimes, you can turn a reference of a \"wider\" lifetime into a smaller one within that lifetime.</p>\n\n<p>For example, given the definition</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn longest&lt;'a&gt;(a: &amp;'a str, b: &amp;'a str) -&gt; &amp;'a str\n</code></pre>\n\n<p>, the lifetimes of the two input references must match. However, we can write this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let local = \"I am local string.\".to_string();\n\nlongest(&amp;local, \"I am &amp;'static str!\");\n</code></pre>\n\n<p>The string literal, which has a <code>'static</code> lifetime, is compatible with the lifetime <code>'a</code>, in this case mainly constrained by the string <code>local</code>.</p>\n\n<p>Likewise, in the example above, the lifetime <code>'a</code> has to be constrained to the nested string <code>string2</code>, otherwise it could not be passed by reference to the function. This also means that the output reference is restrained by this lifetime, which is why the code fails to compile when attempting to use the output of <code>longest</code> outside the scope of <code>string2</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `string2` does not live long enough\n  --&gt; src/main.rs:14:44\n   |\n14 |         result = longest(string1.as_str(), string2.as_str());\n   |                                            ^^^^^^^ borrowed value does not live long enough\n15 |     }\n   |     - `string2` dropped here while still borrowed\n16 |     println!(\"The longest string is {}\", result);\n   |                                          ------ borrow later used here\n</code></pre>\n\n<p>See also this question for an extended explanation of lifetimes and their covariance/contravariance characteristics:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42637911/1233251\">How can this instance seemingly outlive its own parameter lifetime?</a></li>\n</ul>\n"}], "owner": {"reputation": 205, "user_id": 7816353, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-S3tHJJ35of8/AAAAAAAAAAI/AAAAAAAAAm0/us_9hLFEMvc/photo.jpg?sz=128", "display_name": "ayush prashar", "link": "https://stackoverflow.com/users/7816353/ayush-prashar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 712, "favorite_count": 0, "accepted_answer_id": 55159576, "answer_count": 2, "score": 3, "last_activity_date": 1552562012, "creation_date": 1552555786, "last_edit_date": 1552557679, "question_id": 55159003, "link": "https://stackoverflow.com/questions/55159003/do-lifetime-annotations-in-rust-change-the-lifetime-of-the-variables", "title": "Do lifetime annotations in Rust change the lifetime of the variables?", "body": "<p>The Rust <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-annotation-syntax\" rel=\"nofollow noreferrer\">chapter</a> states that the annotations don't tamper with the lifetime of a variable but how true is that? According to the book, the function <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-annotations-in-function-signatures\" rel=\"nofollow noreferrer\">longest</a> takes two references of the strings and return the longer one. But here in the error case </p>\n\n<pre><code>fn longest&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str {\n    if x.len() &gt; y.len() {\n        x\n    } else {\n        y\n    }\n}\n\nfn main() {\n    let string1 = String::from(\"long string is long\");\n    let result;\n    {\n        let string2 = String::from(\"xyz\");\n        result = longest(string1.as_str(), string2.as_str());\n    }\n    println!(\"The longest string is {}\", result);\n}\n</code></pre>\n\n<p>it does actually change the lifetime of the result variable, doesn't it? </p>\n\n<blockquote>\n  <p>We\u2019ve told Rust that the lifetime of the reference returned by the longest function is the same as the smaller of the lifetimes of the references passed in. </p>\n</blockquote>\n"}, {"tags": ["rust", "traits", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "edited": false, "score": 0, "creation_date": 1552551024, "post_id": 55157361, "comment_id": 97054461, "body": "Ok... first thanks for your answer. That is not what I want. I want the &quot;rust way&quot;. Can you show me the rust way, or give me a hint that can I figure it out alone. I made my trait <code>&#39;static</code>, because of a compiler error on this signature <code>fn add(&amp;mut self, surface: impl Surface)</code> without <code>&#39;static</code> the compiler will throw an error, but thanks for the hint I changed it as follows: <code>fn add(&amp;mut self, surface: impl Surface + &#39;static)</code>. Now I can remove the &#39;static from the trait. But the problem still exists. If I have to refactor my architecture, to archive the rust way, no problem, I&#39;m learning."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 3, "last_activity_date": 1552590878, "last_edit_date": 1552590878, "creation_date": 1552549833, "answer_id": 55157361, "question_id": 55157003, "link": "https://stackoverflow.com/questions/55157003/how-to-implement-a-trait-with-static-lifetime-for-a-struct-with-lifetime-a/55157361#55157361", "title": "How to implement a trait with &#39;static lifetime for a struct with lifetime &#39;a?", "body": "<p>First things first:</p>\n\n<pre><code>impl&lt;'a&gt; Surface for Obj&lt;'a&gt; where 'a: 'static {}\n</code></pre>\n\n<p>is verbose for</p>\n\n<pre><code>impl Surface for Obj&lt;'static&gt; {}\n</code></pre>\n\n<hr>\n\n<p>You identified your problem correctly:</p>\n\n<blockquote>\n  <p>In other words <code>&amp;mut some_struct</code> is lifetime <code>'a</code> but needs <code>'static</code></p>\n</blockquote>\n\n<p>You need to declare <code>some_struct</code> as <code>static</code>:</p>\n\n<pre><code>fn main() {\n    static mut SOME_STRUCT: SomeOtherStruct = SomeOtherStruct {};\n    // ...\n    let obj = unsafe { Obj::new(&amp;mut SOME_STRUCT) };\n    //  ...\n}\n</code></pre>\n\n<p>The problem is, that you cannot access mutable static variables safely, because they can be mutated be multiple thread simultaneously and that is a problem, hence you need <code>unsafe</code>.</p>\n\n<p>So no, your code is not \"Rust like\", but I'm afraid you can't change that with your current architecture.</p>\n\n<hr>\n\n<blockquote>\n  <p>The trait needs to be 'static because I want to store objects from type <code>Surface</code> in a <code>Vec&lt;Box&lt;Surface&gt;&gt;</code>.</p>\n</blockquote>\n\n<p>I don't get why you think you need <code>'static</code> in the first place, e.g. this code is perfectly legal:</p>\n\n<pre><code>trait Foo {}\nstruct Bar;\n\nimpl Foo for Bar {}\n\nfn main() {\n    let b: Box&lt;Foo&gt; = Box::new(Bar);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "is_accepted": false, "score": 2, "last_activity_date": 1552590978, "last_edit_date": 1552590978, "creation_date": 1552585864, "answer_id": 55169070, "question_id": 55157003, "link": "https://stackoverflow.com/questions/55157003/how-to-implement-a-trait-with-static-lifetime-for-a-struct-with-lifetime-a/55169070#55169070", "title": "How to implement a trait with &#39;static lifetime for a struct with lifetime &#39;a?", "body": "<p><a href=\"https://stackoverflow.com/a/55157361/155423\">@hellow's answer</a> works and solves my problem, but it feels hacky and working against Rust.</p>\n\n<p>With your hints, I found a better solution that alsos work and does not use <code>unsafe</code>.</p>\n\n<p><strong>Solution 1</strong></p>\n\n<p>I specified explicit lifetime parameters for the <code>Manager</code> and for the type <code>Box&lt;Surface + 'a&gt;</code>:</p>\n\n<pre><code>trait Surface {}\n\nstruct Manager&lt;'a&gt; {\n    storage: Vec&lt;Box&lt;Surface + 'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Manager&lt;'a&gt; {\n    fn add(&amp;mut self, surface: impl Surface + 'a) {\n        self.storage.push(Box::new(surface));\n    }\n}\n\nstruct SomeOtherStruct {}\n\nstruct Obj&lt;'a&gt; {\n    data: &amp;'a mut SomeOtherStruct,\n}\n\nimpl&lt;'a&gt; Obj&lt;'a&gt; {\n    fn new(some_struct: &amp;'a mut SomeOtherStruct) -&gt; Self {\n        Obj {\n            data: some_struct\n        }\n    }\n}\n\nimpl&lt;'a&gt; Surface for Obj&lt;'a&gt; {}\n\nfn main() {\n    let mut some_struct = SomeOtherStruct{};\n    let mut manager = Manager { storage: Vec::new() };\n\n    let obj = Obj::new(&amp;mut some_struct);\n    manager.add(obj);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=aa3aca0c435797da1630d3ff5b2ada49\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p><strong>Solution 2</strong></p>\n\n<p>Store a <code>Box&lt;SomeOtherStruct&gt;</code> instead of <code>&amp;mut SomeOtherStruct</code> in <code>Obj</code>. This will eliminate the lifetimes:</p>\n\n<pre><code>trait Surface {}\n\nstruct Manager {\n    storage: Vec&lt;Box&lt;Surface&gt;&gt;,\n}\n\nimpl Manager {\n    fn add(&amp;mut self, surface: impl Surface + 'static) {\n        self.storage.push(Box::new(surface));\n    }\n}\n\nstruct SomeOtherStruct {}\n\nstruct Obj {\n    data: Box&lt;SomeOtherStruct&gt;,\n}\n\nimpl Obj {\n    fn new(some_struct: Box&lt;SomeOtherStruct&gt;) -&gt; Self {\n        Obj {\n            data: some_struct\n        }\n    }\n}\n\nimpl Surface for Obj {}\n\nfn main() {\n    let some_struct = SomeOtherStruct{};\n    let mut manager = Manager { storage: Vec::new() };\n\n    let obj = Obj::new(Box::new(some_struct));\n    manager.add(obj);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=18954cd6563a6b2bfc226006e0c7f07f\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>In my opinion both solutions are good. I don't know which solution is better and I've no experience with pro and cons of this solutions.\nFor me (maybe because I'm a beginner and still leaning Rust) it's easier to avoid lifetimes and use <code>Box</code>, <code>Rc</code> etc.  </p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1552591069, "creation_date": 1552591069, "answer_id": 55170424, "question_id": 55157003, "link": "https://stackoverflow.com/questions/55157003/how-to-implement-a-trait-with-static-lifetime-for-a-struct-with-lifetime-a/55170424#55170424", "title": "How to implement a trait with &#39;static lifetime for a struct with lifetime &#39;a?", "body": "<blockquote>\n  <p>How to implement a trait with <code>'static</code> lifetime for a struct with lifetime <code>'a</code>?</p>\n</blockquote>\n\n<p>You do not and cannot. The purpose of the <code>'static</code> lifetime is to say \"something that lives for the entire duration of the program\". No arbitrary lifetime <code>'a</code> meets this requirement <em>except</em> <code>'static</code> itself.</p>\n"}], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1601, "favorite_count": 0, "accepted_answer_id": 55170424, "answer_count": 3, "score": 3, "last_activity_date": 1552591069, "creation_date": 1552548356, "last_edit_date": 1552590683, "question_id": 55157003, "link": "https://stackoverflow.com/questions/55157003/how-to-implement-a-trait-with-static-lifetime-for-a-struct-with-lifetime-a", "title": "How to implement a trait with &#39;static lifetime for a struct with lifetime &#39;a?", "body": "<p>I have a <code>trait Surface: 'static</code> that I want to implement for a <code>struct Obj&lt;'a&gt;</code>. The trait needs to be <code>'static</code> because I want to store objects from type <code>Surface</code> in a <code>Vec&lt;Box&lt;Surface&gt;&gt;</code>.</p>\n\n<p>In the first step I tried this.</p>\n\n<pre><code>impl&lt;'a&gt; Surface for Obj&lt;'a&gt; {}\n</code></pre>\n\n<p>This will not work because of a lifetime mismatch between <code>'static</code> and <code>'a</code>. In other words: <code>Surface</code> can live longer than <code>Obj</code> because <code>Surface</code> is <code>'static</code>.\nI changed my implementation as follows.</p>\n\n<pre><code>impl&lt;'a&gt; Surface for Obj&lt;'a&gt; where 'a: 'static {}\n</code></pre>\n\n<p>As far as I understand the documentation correctly, what I'm doing is, <code>'a</code> can outlive <code>'static</code>. Do I want this?</p>\n\n<p>If I transfer the ownership of <code>Obj&lt;'a&gt;</code>, the compiler tells me that a mutable reference inside <code>Obj</code> will not live long enough and is still borrowed.</p>\n\n<p>Here is a short example.</p>\n\n<pre><code>trait Surface: 'static {}\n\nstruct Manager {\n    storage: Vec&lt;Box&lt;Surface&gt;&gt;,\n}\n\nimpl Manager {\n    fn add(&amp;mut self, surface: impl Surface) {\n        self.storage.push(Box::new(surface));\n    }\n}\n\nstruct SomeOtherStruct {}\n\nstruct Obj&lt;'a&gt; {\n    data: &amp;'a mut SomeOtherStruct,\n}\n\nimpl&lt;'a&gt; Obj&lt;'a&gt; {\n    fn new(some_struct: &amp;'a mut SomeOtherStruct) -&gt; Self {\n        Obj { data: some_struct }\n    }\n}\n\nimpl&lt;'a&gt; Surface for Obj&lt;'a&gt; where 'a: 'static {}\n\nfn main() {\n    let mut some_struct = SomeOtherStruct {};\n    let mut manager = Manager {\n        storage: Vec::new(),\n    };\n\n    let obj = Obj::new(&amp;mut some_struct);\n    manager.add(obj);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=114c32349d4b9893f810c6bfe3297bd8\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `some_struct` does not live long enough\n  --&gt; src/main.rs:33:24\n   |\n33 |     let obj = Obj::new(&amp;mut some_struct);\n   |               ---------^^^^^^^^^^^^^^^^-\n   |               |        |\n   |               |        borrowed value does not live long enough\n   |               argument requires that `some_struct` is borrowed for `'static`\n34 |     manager.add(obj);\n35 | }\n   | - `some_struct` dropped here while still borrowed\n</code></pre>\n\n<p>In other words <code>&amp;mut some_struct</code> is lifetime <code>'a</code> but needs <code>'static</code>. Ok it's clear because <code>some_struct</code> lives in <code>Obj&lt;'a&gt;</code> so it cannot be <code>'static</code>?</p>\n\n<p>Is this what I'm trying to do \"Rust like\"? I've no idea how to get it to work. Its really confusing with the lifetimes. I think I can get around this by using a <code>Rc&lt;T&gt;</code>, but this will make things more complex.</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 11, "last_activity_date": 1552546715, "last_edit_date": 1552546715, "creation_date": 1552546202, "answer_id": 55156510, "question_id": 55156459, "link": "https://stackoverflow.com/questions/55156459/is-there-a-way-to-merge-two-iterators-into-the-same-vec/55156510#55156510", "title": "Is there a way to merge two iterators into the same Vec?", "body": "<p>You're looking for <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.chain\" rel=\"noreferrer\"><code>Iterator::chain</code></a></p>\n\n<pre><code>let a = vec![1, 2, 3, 4].into_iter().map(|x| x * 2);\nlet b = vec![0, 3, 5, 6, 7].into_iter().map(|x| x * 3);\nlet c = a.chain(b);\nassert_eq!(\n    c.filter(|&amp;x| x &gt; 5).collect::&lt;Vec&lt;u8&gt;&gt;(),\n    vec![6, 8, 9, 15, 18, 21]\n);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1552593486, "post_id": 55171015, "comment_id": 97081265, "body": "This doesn&#39;t do the filtering."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1552606487, "last_edit_date": 1552606487, "creation_date": 1552593347, "answer_id": 55171015, "question_id": 55156459, "link": "https://stackoverflow.com/questions/55156459/is-there-a-way-to-merge-two-iterators-into-the-same-vec/55171015#55171015", "title": "Is there a way to merge two iterators into the same Vec?", "body": "<p>Alternatively, you could use <a href=\"https://doc.rust-lang.org/std/iter/trait.Extend.html#tymethod.extend\" rel=\"nofollow noreferrer\"><code>extend()</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a = (0..500000).map(|x| x * 2);\nlet b = (0..500000).map(|x| x * 3);\nlet mut c = Vec::with_capacity(a.size_hint().1.unwrap() + b.size_hint().1.unwrap());\nc.extend(a);\nc.extend(b);\n</code></pre>\n\n<p>This requires you to explicitly use <code>with_capacity()</code> which <code>chain()</code> and <code>collect()</code> would have done for you. In the situation where <code>a</code> is already constructed, <code>extend()</code> will be suitable instead of building a temporary vector.</p>\n\n<p>I did not find any benchmark difference between <code>chain()</code> and <code>extend</code> in this case (<a href=\"https://gist.github.com/c8fcb2cb741f28b84ba8c1a3876ed5e1\" rel=\"nofollow noreferrer\">benchmark</a>)</p>\n\n<blockquote>\n  <p>This doesn't do the filtering. <a href=\"https://stackoverflow.com/users/8922/sebastian-redl\">Sebastian Redl</a></p>\n</blockquote>\n\n<p>Correct! Fixing this mistake shows that for some reason, LLVM no longer optimizes <code>chain()</code> now. The version with <code>extend</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a = (0..500000).map(|x| x * 2);\nlet b = (0..500000).map(|x| x * 3);\nlet mut c = Vec::with_capacity(a.size_hint().1.unwrap() + b.size_hint().1.unwrap());\nc.extend(a.filter(|&amp;x| x &gt; 5));\nc.extend(b.filter(|&amp;x| x &gt; 5));\n</code></pre>\n\n<p>Is twice as fast than the version with <code>chain</code> (this is what I expected in the first place):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a = (0..500000).map(|x| x * 2);\nlet b = (0..500000).map(|x| x * 3);\nlet _c: Vec&lt;_&gt; = a.chain(b).filter(|&amp;x| x &gt; 5).collect();\n</code></pre>\n\n<p>(<a href=\"https://gist.github.com/449d6f4c5b8932995e9bc8c60e15b1f9\" rel=\"nofollow noreferrer\">benchmark</a>)</p>\n"}], "owner": {"reputation": 39, "user_id": 11194430, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1316fdc387b8402bbe135670efe71d?s=128&d=identicon&r=PG&f=1", "display_name": "picked name", "link": "https://stackoverflow.com/users/11194430/picked-name"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3005, "favorite_count": 0, "accepted_answer_id": 55156510, "answer_count": 2, "score": 2, "last_activity_date": 1552606487, "creation_date": 1552545927, "last_edit_date": 1552590478, "question_id": 55156459, "link": "https://stackoverflow.com/questions/55156459/is-there-a-way-to-merge-two-iterators-into-the-same-vec", "title": "Is there a way to merge two iterators into the same Vec?", "body": "<p>I have two iterators that will end up merging into the same <code>Vec</code>, but I need to perform a filter on the end result before merging. For example:</p>\n\n<pre><code>let a = vec![1, 2, 3, 4].into_iter().map(|x| x * 2);\nlet b = vec![0, 3, 5, 6, 7].into_iter().map(|x| x * 3);\nlet c = a + b;\nassert_eq!(\n    c.filter(|&amp;x| x &gt; 5).collect::&lt;Vec&lt;u8&gt;&gt;(),\n    vec![6, 8, 9, 15, 18, 21]\n);\n</code></pre>\n\n<p>I <em>could</em> do something like this:</p>\n\n<pre><code>let mut a = vec![1, 2, 3, 4]\n    .into_iter()\n    .map(|x| x * 2)\n    .collect::&lt;Vec&lt;u8&gt;&gt;();\nlet b = vec![0, 3, 5, 6, 7]\n    .into_iter()\n    .map(|x| x * 3)\n    .collect::&lt;Vec&lt;u8&gt;&gt;();\na.extend(b);\nassert_eq!(\n    a.into_iter().filter(|&amp;x| x &gt; 5).collect::&lt;Vec&lt;u8&gt;&gt;(),\n    vec![6, 8, 9, 15, 18, 21]\n);\n</code></pre>\n\n<p>But the extra allocation kills performance in my case (yes, I checked!) </p>\n"}, {"tags": ["error-handling", "syntax", "rust", "future"], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 0, "last_activity_date": 1552545791, "creation_date": 1552545791, "answer_id": 55156423, "question_id": 55155493, "link": "https://stackoverflow.com/questions/55155493/is-there-a-more-ergonomic-syntax-for-either-when-using-futures/55156423#55156423", "title": "Is there a more ergonomic syntax for Either when using futures?", "body": "<blockquote>\n  <p>Is there some syntax sugar to make this easier?</p>\n</blockquote>\n\n<p>Yes, it's called async/await, but it's not quite ready for wide consumption. It is only supported on nightly, it uses a slightly different version of futures that Tokio only supports via an interop library that causes additional syntactic overhead, and documentation for the whole thing is still spotty.</p>\n\n<p>Here are some relevant links:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/52835725/what-is-the-purpose-of-async-await-in-rust\">What is the purpose of async/await in Rust?</a><br>\n<a href=\"https://jsdw.me/posts/rust-asyncawait-preview/\" rel=\"nofollow noreferrer\">https://jsdw.me/posts/rust-asyncawait-preview/</a><br>\n<a href=\"https://areweasyncyet.rs/\" rel=\"nofollow noreferrer\">https://areweasyncyet.rs/</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1552609042, "last_edit_date": 1552609042, "creation_date": 1552577517, "answer_id": 55166446, "question_id": 55155493, "link": "https://stackoverflow.com/questions/55155493/is-there-a-more-ergonomic-syntax-for-either-when-using-futures/55166446#55166446", "title": "Is there a more ergonomic syntax for Either when using futures?", "body": "<p>I do not see how <code>async</code> / <code>await</code> syntax will categorically help you with <code>Either</code>. Ultimately, you still need to return a single concrete type, and that's what <code>Either</code> provides. <code>async</code> / <code>await</code> will reduce the need for combinators like <code>Future::map</code> or <code>Future::and_then</code> however.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52001592/155423\">Why can impl trait not be used to return multiple / conditional types?</a></li>\n</ul>\n\n<hr>\n\n<p>That being said, you don't need to use <code>Either</code> here.</p>\n\n<p>You have consecutive <code>Result</code>-returning functions, so you can borrow a trick from JavaScript and use an <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/IIFE\" rel=\"nofollow noreferrer\">IIFE</a> to use use the <code>?</code> operator. Then, we can \"lift up\" the combined <code>Result</code> into a future and chain it with the future from the receiver:</p>\n\n<pre><code>fn deferred_task() -&gt; impl Future&lt;Item = i32, Error = MyError&gt; {\n    let (tx, rx) = oneshot::channel();\n\n    let x = (|| {\n        let _i = query_data().map_err(|_| MyError { error_code: 1 })?;\n        send_promise_to_worker(tx).map_err(|_| MyError { error_code: 2 })?;\n        Ok(())\n    })();\n\n    future::result(x).and_then(|()| rx.map_err(MyError::from))\n}\n</code></pre>\n\n<p>In the future, that IIFE could be replaced with a <code>try</code> block, as I understand it.</p>\n\n<p>You could also go the other way and convert everything to a future:</p>\n\n<pre><code>fn deferred_task() -&gt; impl Future&lt;Item = i32, Error = MyError&gt; {\n    let (tx, rx) = oneshot::channel();\n\n    query_data()\n        .map_err(|_| MyError { error_code: 1 })\n        .into_future()\n        .and_then(|_i| {\n            send_promise_to_worker(tx)\n                .map_err(|_| MyError { error_code: 2 })\n                .into_future()\n        })\n        .and_then(|_| rx.map_err(MyError::from))\n}\n</code></pre>\n\n<p>This <em>would</em> be helped with <code>async</code> / <code>await</code> syntax:</p>\n\n<pre><code>async fn deferred_task() -&gt; Result&lt;i32, MyError&gt; {\n    let (tx, rx) = oneshot::channel();\n\n    query_data().map_err(|_| MyError { error_code: 1 })?;\n\n    send_promise_to_worker(tx).map_err(|_| MyError { error_code: 2 })?;\n\n    let v = await! { rx }?;\n\n    Ok(v)\n}\n</code></pre>\n\n<p>I have also seen improved syntax for constructing the <code>Either</code> by adding <code>left</code> and <code>right</code> methods to the <code>Future</code> trait:</p>\n\n<pre><code>foo.left();\n// vs\nEither::left(foo);\n</code></pre>\n\n<p>However, this doesn't appear in any of the current implementations.</p>\n\n<blockquote>\n  <p>A <code>Future</code> <em>is</em> a <code>Result</code></p>\n</blockquote>\n\n<p>No, it is not. </p>\n\n<p>There are two relevant <code>Future</code>s to talk about:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/futures/0.1.25/futures/future/trait.Future.html\" rel=\"nofollow noreferrer\">From the futures 0.1 crate</a></li>\n<li><a href=\"https://doc.rust-lang.org/nightly/std/future/trait.Future.html\" rel=\"nofollow noreferrer\">From the (nightly) standard library</a></li>\n</ul>\n\n<p>Notably, <code>Future::poll</code> returns a type that can be in two states:</p>\n\n<ul>\n<li>Complete</li>\n<li>Not complete</li>\n</ul>\n\n<p>In the futures crate, \"success\" and \"failure\" are tied to \"complete\", whereas in the standard library they are not. In the crate, <code>Result</code> implements <a href=\"https://docs.rs/futures/0.1.25/futures/future/trait.IntoFuture.html#impl-IntoFuture\" rel=\"nofollow noreferrer\"><code>IntoFuture</code></a>, and in the standard library you can use <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.13/futures/future/fn.ready.html\" rel=\"nofollow noreferrer\"><code>future::ready</code></a>. Both of these allow converting a <code>Result</code> into a future, but that doesn't mean that <code>Result</code> <em>is</em> a future, no more than saying that a <code>Vec&lt;u8&gt;</code> is an iterator, even though it can be converted into one.</p>\n\n<p>It's possible that the <code>?</code> operator (powered by the <code>Try</code> trait), will be enhanced to automatically convert from a <code>Result</code> to a specific type of <code>Future</code>, or that <code>Result</code> will even implement <code>Future</code> directly, but I have not heard of any such plans.</p>\n"}], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 279, "favorite_count": 0, "accepted_answer_id": 55166446, "answer_count": 2, "score": 1, "last_activity_date": 1552609042, "creation_date": 1552541216, "last_edit_date": 1552574461, "question_id": 55155493, "link": "https://stackoverflow.com/questions/55155493/is-there-a-more-ergonomic-syntax-for-either-when-using-futures", "title": "Is there a more ergonomic syntax for Either when using futures?", "body": "<p>Here's an example of using Tokio to run a function that returns a future:</p>\n\n<pre><code>use futures::sync::oneshot;\nuse futures::Future;\nuse std::thread;\nuse std::time::Duration;\nuse tokio;\n\n#[derive(Debug)]\nstruct MyError {\n    error_code: i32,\n}\n\nimpl From&lt;oneshot::Canceled&gt; for MyError {\n    fn from(_: oneshot::Canceled) -&gt; MyError {\n        MyError { error_code: 1 }\n    }\n}\n\nfn deferred_task() -&gt; impl Future&lt;Item = i32, Error = MyError&gt; {\n    let (sx, rx) = oneshot::channel();\n    thread::spawn(move || {\n        thread::sleep(Duration::from_millis(100));\n        sx.send(100).unwrap();\n    });\n    return rx.map_err(|e| MyError::from(e));\n}\n\nfn main() {\n    tokio::run(deferred_task().then(|r| {\n        println!(\"{:?}\", r);\n        Ok(())\n    }));\n}\n</code></pre>\n\n<p>However, when the function in question (i.e. <code>deferred_task</code>) is non-trivial, the code becomes much more complex when I write it, because the <code>?</code> operation doesn't seem to easily mix with returning a future:</p>\n\n<pre><code>fn send_promise_to_worker(sx: oneshot::Sender&lt;i32&gt;) -&gt; Result&lt;(), ()&gt; {\n    // Send the oneshot somewhere in a way that might fail, eg. over a channel\n    thread::spawn(move || {\n        thread::sleep(Duration::from_millis(100));\n        sx.send(100).unwrap();\n    });\n    Ok(())\n}\n\nfn deferred_task() -&gt; impl Future&lt;Item = i32, Error = MyError&gt; {\n    let (sx, rx) = oneshot::channel();\n    send_promise_to_worker(sx)?; // &lt;-------- Can't do this, because the return is not a result\n    return rx.map_err(|e| MyError::from(e));\n}\n</code></pre>\n\n<p>A <code>Future</code> <em>is</em> a <code>Result</code>, it's meaningless to wrap it in result, and it breaks the <code>impl Future</code> return type.</p>\n\n<p>Instead you get a deeply nested chain of:</p>\n\n<pre><code>fn deferred_task() -&gt; impl Future&lt;Item = i32, Error = MyError&gt; {\n    let (sx, rx) = oneshot::channel();\n    match query_data() {\n        Ok(_i) =&gt; match send_promise_to_worker(sx) {\n            Ok(_) =&gt; Either::A(rx.map_err(|e| MyError::from(e))),\n            Err(_e) =&gt; Either::B(futures::failed(MyError { error_code: 2 })),\n        },\n        Err(_) =&gt; Either::B(futures::failed(MyError { error_code: 2 })),\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1043ad9ef290ef869269e059b7ae6fe9\" rel=\"nofollow noreferrer\">full code</a></p>\n\n<p>The more results you have, the deeper the nesting; exactly what the <code>?</code> operator solves normally.</p>\n\n<p>Am I missing something? Is there some syntax sugar to make this easier?</p>\n"}, {"tags": ["unit-testing", "testing", "rust", "mocking"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552522280, "post_id": 55152927, "comment_id": 97046346, "body": "Don&#39;t make sense in Rust ?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1552562232, "last_edit_date": 1552562232, "creation_date": 1552521834, "answer_id": 55152946, "question_id": 55152927, "link": "https://stackoverflow.com/questions/55152927/how-to-mock-specific-methods-but-not-all-of-them-in-rust/55152946#55152946", "title": "How to mock specific methods but not all of them in Rust?", "body": "<blockquote>\n  <p>How to mock specific methods but not all of them in Rust?</p>\n</blockquote>\n\n<p>As you have already learned, you cannot replace methods on a type. The only thing you can do is move the methods to a trait and then provide production and test-specific implementations of that trait. How you structure the trait determines the granularity of what you are able to test.</p>\n\n<h1>Trait with a default implementation</h1>\n\n<p>Depending on your use case, you might be able to use a default implementation:</p>\n\n<pre><code>trait SomeRng {\n    fn random_number(&amp;self) -&gt; u64;\n\n    fn plus_one(&amp;self) -&gt; u64 {\n        self.random_number() + 1\n    }\n}\n\nstruct RngTest(u64);\nimpl SomeRng for RngTest {\n    fn random_number(&amp;self) -&gt; u64 {\n        self.0\n    }\n}\n\n#[test]\nfn plus_one_works() {\n    let rng = RngTest(41);\n    assert_eq!(rng.plus_one(), 42);\n}\n</code></pre>\n\n<p>Here, <code>random_number</code> is a required method, but <code>plus_one</code> has a default implementation. Implementing <code>random_number</code> gives you <code>plus_one</code> by default. You could also choose to implement <code>plus_one</code> if you could do it more efficiently.</p>\n\n<h1>What does the real rand crate do?</h1>\n\n<p>The real <a href=\"https://docs.rs/rand/0.6.5\" rel=\"nofollow noreferrer\">rand crate</a> uses two traits:</p>\n\n<ul>\n<li><p><a href=\"https://docs.rs/rand/0.6.5/rand/trait.Rng.html\" rel=\"nofollow noreferrer\"><code>Rng</code></a></p>\n\n<pre><code>pub trait Rng: RngCore { /* ... */ }\n</code></pre>\n\n<blockquote>\n  <p>An automatically-implemented extension trait on <code>RngCore</code> providing high-level generic methods for sampling values and other convenience methods.</p>\n</blockquote></li>\n<li><p><a href=\"https://docs.rs/rand/0.6.5/rand/trait.RngCore.html\" rel=\"nofollow noreferrer\"><code>RngCore</code></a></p>\n\n<pre><code>pub trait RngCore { /* ... */ }\n</code></pre>\n\n<blockquote>\n  <p>The core of a random number generator.</p>\n</blockquote></li>\n</ul>\n\n<p>This splits the core interesting parts of the implementation from the helper methods. You can then control the core and test the helpers:</p>\n\n<pre><code>trait SomeRngCore {\n    fn random_number(&amp;self) -&gt; u64;\n}\n\ntrait SomeRng: SomeRngCore {\n    fn plus_one(&amp;self) -&gt; u64 {\n        self.random_number() + 1\n    }\n}\n\nimpl&lt;R: SomeRngCore&gt; SomeRng for R {}\n\nstruct RngTest(u64);\nimpl SomeRngCore for RngTest {\n    fn random_number(&amp;self) -&gt; u64 {\n        self.0\n    }\n}\n\n#[test]\nfn plus_one_works() {\n    let rng = RngTest(41);\n    assert_eq!(rng.plus_one(), 42);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 784, "user_id": 2648947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/1KZNZ.jpg?s=128&g=1", "display_name": "SS_Rebelious", "link": "https://stackoverflow.com/users/2648947/ss-rebelious"}, "is_accepted": false, "score": 0, "last_activity_date": 1552606693, "last_edit_date": 1552606693, "creation_date": 1552591359, "answer_id": 55170500, "question_id": 55152927, "link": "https://stackoverflow.com/questions/55152927/how-to-mock-specific-methods-but-not-all-of-them-in-rust/55170500#55170500", "title": "How to mock specific methods but not all of them in Rust?", "body": "<p>Thanks to @Shepmaster I came to this workaround. I have added the actual <code>Rng</code> to have more context.</p>\n\n<pre><code>use rand::{thread_rng, Rng}; // 0.6.5\n\nstruct RngTest(Vec&lt;u64&gt;);\n\nimpl RngTest {\n    fn random_number(&amp;self) -&gt; u64 {\n        let random_value = thread_rng().choose(&amp;self.0);\n        *random_value.unwrap()\n    }\n\n    fn plus_one(&amp;self) -&gt; u64 {\n        self.random_number() + 1\n    }\n}\n\n#[test]\nfn plus_one_works() {\n    let rng = RngTest(vec![1]);\n    assert_eq!(rng.plus_one(), 2);\n}\n</code></pre>\n\n<p>I can set an appropriate value in the object and don't need to use traits. There is a downside though - this forces me to have a special instance of my type for this specific test which I would like to avoid because my actual type has <em>a lot</em> of fields and I wanted to define its creation once for all the tests using <code>speculate</code>.</p>\n"}], "owner": {"reputation": 784, "user_id": 2648947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/1KZNZ.jpg?s=128&g=1", "display_name": "SS_Rebelious", "link": "https://stackoverflow.com/users/2648947/ss-rebelious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1267, "favorite_count": 2, "accepted_answer_id": 55152946, "answer_count": 2, "score": 1, "last_activity_date": 1552606693, "creation_date": 1552521701, "last_edit_date": 1552591225, "question_id": 55152927, "link": "https://stackoverflow.com/questions/55152927/how-to-mock-specific-methods-but-not-all-of-them-in-rust", "title": "How to mock specific methods but not all of them in Rust?", "body": "<p>I have troubles figuring out unit tests for the methods of the target struct.</p>\n\n<p>I have a method <code>random_number</code> that returns a random value based on the attribute of the struct and there is another method <code>plus_one</code> that takes the result of the first method and does something with it:</p>\n\n<pre><code>pub struct RngTest {\n    pub attr: u64,\n}\n\nimpl RngTest {\n    pub fn random_number(&amp;self) -&gt; u64 {\n        let random = 42; // lets pretend it is random\n        return random * self.attr;\n    }\n\n    pub fn plus_one(&amp;self) -&gt; u64 {\n        return self.random_number() + 1;\n    }\n}\n</code></pre>\n\n<p>Having a unit test for the first method, what is the strategy to test the other? I want to mock <code>self.random_number()</code> output for the unit test of <code>plus_one()</code> to have sane code in unit tests. There is a nice post that compares <a href=\"https://asomers.github.io/mock_shootout/\" rel=\"nofollow noreferrer\">different mocking libraries</a> and concludes (sadly enough) that none of them is really good to stand out from the others. </p>\n\n<p>The only thing I learned while reading instructions for these libraries is that the only way I can mock methods is by moving them to a trait. I didn't see any example in these libraries (I looked at 4 or 5 of them) where they test a case similar to this. </p>\n\n<p>After moving these methods to a trait (even as they are), how do I mock <code>random_number</code> to unit test the output of <code>RngTest::plus_one</code>?</p>\n\n<pre><code>pub trait SomeRng {\n    fn random_number(&amp;self) -&gt; u64 {\n        let random = 42; // lets pretend it is random\n        return random * self.attr;\n    }\n\n    fn plus_one(&amp;self) -&gt; u64 {\n        return self.random_number() + 1;\n    }\n}\n\nimpl SomeRng for RngTest {}\n</code></pre>\n"}]