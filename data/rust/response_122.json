[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494453630, "post_id": 43903359, "comment_id": 74840725, "body": "<a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.swap\" rel=\"nofollow noreferrer\"><code>slice::swap</code></a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494453821, "post_id": 43903359, "comment_id": 74840789, "body": "Welcome to Stack Overflow! The code you have provided does <b>not</b> produce the error message you have provided, instead it says <code>types differ in mutability</code>. Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>; you will be expected to provide one for all questions where you ask &quot;why isn&#39;t this code working?&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494454005, "post_id": 43903359, "comment_id": 74840839, "body": "<a href=\"https://gist.github.com/7245fbcac3450761e71469a5a7026f4d\" rel=\"nofollow noreferrer\">gist.github.com/7245fbcac3450761e71469a5a7026f4d</a>. See also <a href=\"http://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String) or Vec (&amp;Vec) as a function argument?</a>."}, {"owner": {"reputation": 1, "user_id": 7994179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d7eabf1da7f1d4ff20226291cb5b04f?s=128&d=identicon&r=PG&f=1", "display_name": "Mhs", "link": "https://stackoverflow.com/users/7994179/mhs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494454427, "post_id": 43903359, "comment_id": 74840977, "body": "Thanks, I&#39;ll keep it in mind"}], "owner": {"reputation": 1, "user_id": 7994179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d7eabf1da7f1d4ff20226291cb5b04f?s=128&d=identicon&r=PG&f=1", "display_name": "Mhs", "link": "https://stackoverflow.com/users/7994179/mhs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 374, "favorite_count": 0, "closed_date": 1494453593, "answer_count": 0, "score": 0, "last_activity_date": 1494453693, "creation_date": 1494453465, "last_edit_date": 1494453693, "question_id": 43903359, "link": "https://stackoverflow.com/questions/43903359/how-i-can-get-mutable-element-from-vec-in-rust", "closed_reason": "Duplicate", "title": "How I can get mutable element from Vec in Rust", "body": "<p>I'm new to Rust and I'm trying to get <code>Vec&lt;i32&gt;</code> element in <code>swap()</code> function and change it:</p>\n\n<pre><code>use std::ops::Index;\nfn main() {\n    let mut vec = Vec::new();\n    for i in 0..10 {\n        vec.push(i);\n        print!(\"{} \", i);\n    }\n    println!(\" &lt;- Before sort\");\n    bubble_sort(&amp;mut vec);\n    for i in &amp;vec {\n        print!(\"{} \", i);\n    }\n    println!(\" &lt;- After sort\");\n}\n\nfn bubble_sort(vec: &amp;mut Vec&lt;i32&gt;) {\n    for j in 0..(vec.len() - 1) {\n        for i in 0..(vec.len() - j - 1) {\n            if vec[i] &lt; vec[i + 1] {\n                swap(vec.index(i), vec.index(i + 1));\n            }\n        }\n    }\n}\n\nfn swap&lt;'l&gt;(a: &amp;'l mut i32, b: &amp;'l mut i32) {\n    let temp = *a;\n    *a = *b;\n    *b = temp;\n}\n</code></pre>\n\n<p>Where I should set elements as mutable? \nIf I trying do it in <code>swap(vec.index(i), vec.index(i+1));</code> it says <code>error: cannot borrow immutable borrowed content as mutable</code></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "is_accepted": false, "score": 0, "last_activity_date": 1494456864, "last_edit_date": 1494456864, "creation_date": 1494456517, "answer_id": 43903854, "question_id": 43903157, "link": "https://stackoverflow.com/questions/43903157/error-rust-syncing-channel-updates-nightly-error-reading-rustc-version/43903854#43903854", "title": "Error rust syncing channel updates &#39;nightly --- (error reading rustc version)&#39;", "body": "<p>When doing:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>-&gt;rustup override set nightly-x86_64-unknown-linux-gnu\ninfo: using existing install for 'nightly-x86_64-unknown-linux-gnu'\ninfo: override toolchain for '/home/' set to 'nightly-x86_64-unknown-linux-gnu'\n\n  nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.19.0-nightly (d3abc80b3 2017-05-09)\n</code></pre>\n\n<p>Is able to recognize now:</p>\n\n<ul>\n<li><code>nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.19.0-nightly (d3abc80b3 2017-05-09)</code> </li>\n</ul>\n\n<p>instead of</p>\n\n<ul>\n<li><code>nightly-x86_64-unknown-linux-gnu unchanged - (error reading rustc version)</code></li>\n</ul>\n\n<p>Then I do <code>update nightly</code> because maybe it was corrupt or maybe not and it is normal, and maybe it would have worked</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>-&gt;rustup update nightly\ninfo: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n\n  nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.19.0-nightly (d3abc80b3 2017-05-09)\n</code></pre>\n\n<p>I did some tests and at first did not recognize it <code>rustc 1.19.0-nightly (d3abc80b3 2017-05-09)</code> I had to execute 2 times <code>-&gt;rustup update nightly</code></p>\n\n<hr>\n\n<p>According to was looking can be used <code>toolchain uninstall</code> <em>but this last I can not confirm</em>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>-&gt;rustup toolchain uninstall nightly\ninfo: uninstalling toolchain 'nightly-x86_64-unknown-linux-gnu'\ninfo: toolchain 'nightly-x86_64-unknown-linux-gnu' uninstalled\n\n-&gt;rustup self update\n\n//..\n-&gt;rustup update nightly\n//..\n</code></pre>\n\n<hr>\n\n<p>Note: Maybe this <code>(error reading rustc version)</code> Really is not any serious \"error\" and can work without recognizing the version <code>rustc 1.19.0-nightly (d3abc80b3 2017-05-09)</code></p>\n"}, {"tags": [], "owner": {"reputation": 992, "user_id": 1510611, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/29f2322d4cb7701902099116c656ab54?s=128&d=identicon&r=PG", "display_name": "Antonio Romero Oca", "link": "https://stackoverflow.com/users/1510611/antonio-romero-oca"}, "is_accepted": false, "score": 0, "last_activity_date": 1494491267, "creation_date": 1494491267, "answer_id": 43910259, "question_id": 43903157, "link": "https://stackoverflow.com/questions/43903157/error-rust-syncing-channel-updates-nightly-error-reading-rustc-version/43910259#43910259", "title": "Error rust syncing channel updates &#39;nightly --- (error reading rustc version)&#39;", "body": "<p>After <code>rustup update</code> I got:</p>\n\n<pre><code>  stable-x86_64-unknown-linux-gnu unchanged - (error reading rustc version)\n   nightly-x86_64-unknown-linux-gnu updated - rustc 1.19.0-nightly (978d2cfee 2017-05-10)\n</code></pre>\n\n<p>After that I tried: <code>rustup default stable</code> and I get:</p>\n\n<pre><code>  stable-x86_64-unknown-linux-gnu unchanged - rustc 1.17.0 (56124baa9 2017-04-24)\n</code></pre>\n\n<p>And if I try again <code>rustup update</code> I get:</p>\n\n<pre><code>   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.17.0 (56124baa9 2017-04-24)\n  nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.19.0-nightly (978d2cfee 2017-05-10)\n</code></pre>\n\n<p>So it seems to be fixed. </p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 777, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1494491267, "creation_date": 1494452372, "question_id": 43903157, "link": "https://stackoverflow.com/questions/43903157/error-rust-syncing-channel-updates-nightly-error-reading-rustc-version", "title": "Error rust syncing channel updates &#39;nightly --- (error reading rustc version)&#39;", "body": "<p>I'm having errors with autocomplete so I decided to install everything again but this having this error when doing:</p>\n\n<pre><code>rustup update nightly\n</code></pre>\n\n<blockquote>\n  <p>info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'</p>\n  \n  <p>nightly-x86_64-unknown-linux-gnu unchanged - (error reading rustc\n  version)</p>\n</blockquote>\n\n<p>in rust rustc 1.17.0 </p>\n"}, {"tags": ["unit-testing", "rust", "hyper"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494459121, "post_id": 43902650, "comment_id": 74842383, "body": "Those are no good impl of <code>Read</code> and <code>Write</code>... That could lead to other issues."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1494605819, "post_id": 43902650, "comment_id": 74916964, "body": "It&#39;s ugly, but you could just copy the internal implementation of <a href=\"https://github.com/hyperium/hyper/blob/0.10.x/src/mock.rs\" rel=\"nofollow noreferrer\"><code>MockStream</code></a>."}], "answers": [{"comments": [{"owner": {"reputation": 6767, "user_id": 376138, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2ff45dcc3874524bc53094d03fbb1f2c?s=128&d=identicon&r=PG", "display_name": "pixelistik", "link": "https://stackoverflow.com/users/376138/pixelistik"}, "edited": false, "score": 0, "creation_date": 1494533491, "post_id": 43908109, "comment_id": 74882678, "body": "I understand the problem, thank you. However, if I try <code>let request = hyper::server::Request::new(b&quot;GET &#47; HTTP&#47;1.0\\r\\n\\r\\n&quot;, socket).unwrap();</code>, the compiler will complain about mismatched types: expected type <code>&amp;mut hyper::buffer::BufReader&lt;&amp;mut hyper::net::NetworkStream + &#39;static&gt;</code> found type <code>&amp;&#39;static [u8; 18]</code>. I will try to modify my mock to actually return valid HTTP data."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 6767, "user_id": 376138, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2ff45dcc3874524bc53094d03fbb1f2c?s=128&d=identicon&r=PG", "display_name": "pixelistik", "link": "https://stackoverflow.com/users/376138/pixelistik"}, "edited": false, "score": 0, "creation_date": 1494570968, "post_id": 43908109, "comment_id": 74894297, "body": "@pixelistik: Yes sorry. It looks like it&#39;s more specific than that, I&#39;ll remove the suggestion."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1494570977, "last_edit_date": 1494570977, "creation_date": 1494484406, "answer_id": 43908109, "question_id": 43902650, "link": "https://stackoverflow.com/questions/43902650/how-to-test-a-hyper-server-http-handler-function/43908109#43908109", "title": "How to test a Hyper server HTTP handler function?", "body": "<p>The request decoder will expect to find a HTTP request, which is provided by the reader.</p>\n\n<p>Your reader provides... <em>nothing</em>. Obviously this will cause the parser to fail.</p>\n"}, {"tags": [], "owner": {"reputation": 6767, "user_id": 376138, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2ff45dcc3874524bc53094d03fbb1f2c?s=128&d=identicon&r=PG", "display_name": "pixelistik", "link": "https://stackoverflow.com/users/376138/pixelistik"}, "is_accepted": false, "score": 2, "last_activity_date": 1494653164, "last_edit_date": 1494653164, "creation_date": 1494627497, "answer_id": 43947205, "question_id": 43902650, "link": "https://stackoverflow.com/questions/43902650/how-to-test-a-hyper-server-http-handler-function/43947205#43947205", "title": "How to test a Hyper server HTTP handler function?", "body": "<p><em>Answering my own question, building on the input by @Matthieu and @Shepmaster.</em></p>\n\n<p>I copied the <code>MockStream</code> implementation from the <a href=\"https://github.com/hyperium/hyper/blob/0.10.x/src/mock.rs\" rel=\"nofollow noreferrer\">Hyper code</a>, instead of building my own.</p>\n\n<p>Using this, I can now do what I wanted: check if my HTTP response contains the expected term:</p>\n\n<pre><code>#[test]\nfn test_handle() {\n    let handler = HttpHandler {};\n\n    // Create a minimal HTTP request\n    let mut request_mock_network_stream = MockStream::with_input(b\"GET / HTTP/1.0\\r\\n\\r\\n\");\n\n    let mut reader = hyper::buffer::BufReader::new(&amp;mut request_mock_network_stream as\n                                                   &amp;mut hyper::net::NetworkStream);\n\n    let socket = SocketAddr::new(IpAddr::V4(Ipv4Addr::new(127, 0, 0, 1)), 8080);\n\n    let request = hyper::server::Request::new(&amp;mut reader, socket).unwrap();\n\n    let mut headers = hyper::header::Headers::new();\n    let mut response_mock_network_stream = MockStream::new();\n\n    {\n        let response = hyper::server::Response::new(&amp;mut response_mock_network_stream,\n                                                    &amp;mut headers);\n\n        handler.handle(request, response);\n    }\n\n    let result = str::from_utf8(&amp;response_mock_network_stream.write).unwrap();\n\n    assert!(result.contains(\"Hello\"));\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=ad704b56c433d64ed7e3da3748822c28&amp;version=undefined\" rel=\"nofollow noreferrer\">Full runnable code</a></p>\n"}], "owner": {"reputation": 6767, "user_id": 376138, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2ff45dcc3874524bc53094d03fbb1f2c?s=128&d=identicon&r=PG", "display_name": "pixelistik", "link": "https://stackoverflow.com/users/376138/pixelistik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 678, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1494653164, "creation_date": 1494449978, "last_edit_date": 1494605178, "question_id": 43902650, "link": "https://stackoverflow.com/questions/43902650/how-to-test-a-hyper-server-http-handler-function", "title": "How to test a Hyper server HTTP handler function?", "body": "<p>My application uses the <a href=\"https://hyper.rs/\" rel=\"nofollow noreferrer\">hyper</a> crate to serve some data over HTTP. The core is a handler function, like this:</p>\n\n<pre><code>struct HttpHandler {}\n\nimpl hyper::server::Handler for HttpHandler {\n    fn handle(&amp;self, req: hyper::server::Request, res: hyper::server::Response) {\n        res.send(b\"Hello\").unwrap();\n    }\n}\n</code></pre>\n\n<p>Hyper will call this function for each HTTP request, providing the <code>Request</code> <code>req</code> and <code>Response</code> <code>res</code> variables.</p>\n\n<p>I want to unit test my <code>handle</code> function, so I call the function, providing a <code>Request</code> and <code>Response</code>, and assert that the <code>Response</code> has been used to send the expected data (\"Hello\").</p>\n\n<p>I'm trying to instantiate a <code>Request</code> and a <code>Response</code> object, to pass into the <code>handle</code> function. For this, several dependencies are needed, which I need to create. For this, I ended up implementing a mock <code>NetworkStream</code>:</p>\n\n<pre><code>mod tests {\n    use std::io;\n    use std::io::prelude::*;\n    use std::net::{IpAddr, Ipv4Addr, SocketAddr, SocketAddrV4};\n    use std::time::Duration;\n    use hyper::server::Handler;\n\n    use super::*;\n\n    struct MockNetworkStream {}\n\n    impl Read for MockNetworkStream {\n        fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; io::Result&lt;usize&gt; {\n            Ok(1)\n        }\n    }\n\n    impl Write for MockNetworkStream {\n        fn write(&amp;mut self, buf: &amp;[u8]) -&gt; io::Result&lt;usize&gt; {\n            Ok(1)\n        }\n\n        fn flush(&amp;mut self) -&gt; io::Result&lt;()&gt; {\n            Ok(())\n        }\n    }\n\n    impl hyper::net::NetworkStream for MockNetworkStream {\n        fn peer_addr(&amp;mut self) -&gt; Result&lt;SocketAddr, io::Error&gt; {\n            Ok(SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)))\n        }\n\n        fn set_read_timeout(&amp;self, dur: Option&lt;Duration&gt;) -&gt; Result&lt;(), io::Error&gt; {\n            Ok(())\n        }\n\n        fn set_write_timeout(&amp;self, dur: Option&lt;Duration&gt;) -&gt; Result&lt;(), io::Error&gt; {\n            Ok(())\n        }\n    }\n\n    #[test]\n    fn test_handle() {\n        let handler = HttpHandler {};\n\n        let mut request_mock_network_stream = MockNetworkStream {};\n\n        let mut reader = hyper::buffer::BufReader::new(&amp;mut request_mock_network_stream as\n                                                       &amp;mut hyper::net::NetworkStream);\n\n        let socket = SocketAddr::new(IpAddr::V4(Ipv4Addr::new(127, 0, 0, 1)), 8080);\n\n        // The following fails with\n        //    'tests::test_handle' panicked at 'called `Result::unwrap()` on an `Err` value: Header'\n        let request = hyper::server::Request::new(&amp;mut reader, socket).unwrap();\n\n        let mut headers = hyper::header::Headers::new();\n        let mut response_mock_network_stream = MockNetworkStream {};\n        let response = hyper::server::Response::new(&amp;mut response_mock_network_stream,\n                                                    &amp;mut headers);\n\n        handler.handle(request, response);\n\n        // I would like to do some assert like this:\n        // assert_eq!(result, b\"Hello\");\n    }\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=0ceece17653d361c64a83d56d21a2e71&amp;version=undefined\" rel=\"nofollow noreferrer\">Full runnable playground example</a></p>\n\n<p>However, instantiating the <code>Request</code> panics:</p>\n\n<pre><code>// The following fails with\n//    'tests::test_handle' panicked at 'called `Result::unwrap()` on an `Err` value: Header'\nlet request = hyper::server::Request::new(&amp;mut reader, socket).unwrap();\n</code></pre>\n\n<p>Where is the mistake in my mock setup? Is there a more straightforward way to test such a handler function without so much boilerplate code?</p>\n"}, {"tags": ["rust", "gtk-rs"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1494448745, "post_id": 43899394, "comment_id": 74838482, "body": "The error is related to the lifetime of <code>window</code>, which you don&#39;t show. More context is necessary."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1494449285, "post_id": 43899394, "comment_id": 74838756, "body": "More specifically, you&#39;re trying to do something with the closure that could result in calling <code>window.hide()</code> <i>after</i> <code>window</code> has been destroyed, and similarly with the other closure for <code>window.show_all()</code>. You need to somehow prove to the compiler that those methods will only be called while <code>window</code> is still alive."}], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1494925592, "post_id": 43992218, "comment_id": 75022371, "body": "Maybe you don&#39;t need the complexity of the <code>clone!</code> macro, you only need to clone <code>window</code> before accessing it, which is fairly standard in Rust. E.g. <code>window_0.connect_delete_event({let window = window.clone(); move |_, _| { ... }});</code> Not much more code than using <code>clone!</code>, and potentially clearer to the reader not familiar with the macro."}], "tags": [], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "is_accepted": false, "score": 1, "last_activity_date": 1494906892, "creation_date": 1494906892, "answer_id": 43992218, "question_id": 43899394, "link": "https://stackoverflow.com/questions/43899394/rust-closure-errors-which-is-owned-by-the-current-function-capture-of-mo/43992218#43992218", "title": "Rust closure errors -&gt; ...which is owned by the current function | capture of moved value:", "body": "<p>I have solved the above using a macro that I have drawn from some sample projects of gtk-rs</p>\n\n<pre><code>macro_rules! clone {\n        (@param _) =&gt; ( _ );\n        (@param $x:ident) =&gt; ( $x );\n        ($($n:ident),+ =&gt; move || $body:expr) =&gt; (\n            {\n                $( let $n = $n.clone(); )+\n                move || $body\n            }\n        );\n        ($($n:ident),+ =&gt; move |$($p:tt),+| $body:expr) =&gt; (\n            {\n                $( let $n = $n.clone(); )+\n                move |$(clone!(@param $p),)+| $body\n            }\n        );\n    }\n</code></pre>\n\n<hr>\n\n<p>Taking the case described I have used it this way:</p>\n\n<pre><code>window_0.connect_delete_event(clone!(window =&gt; move |_, _| {\n\n//window_0.destroy();\nwindow.hide();\nInhibit(true)  \n}));\n\nbutton_0.connect_clicked(clone!(window =&gt; move |_|{  \n    window.show_all(); \n\n}));\n</code></pre>\n\n<p>This is the relevant part <code>window_0.connect_delete_event(clone!(window =&gt; move</code>. In my case it also applies to <code>button_0.connect_clicked</code> because <code>window</code> Is used later in a similar place</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1494906892, "creation_date": 1494438158, "last_edit_date": 1494451730, "question_id": 43899394, "link": "https://stackoverflow.com/questions/43899394/rust-closure-errors-which-is-owned-by-the-current-function-capture-of-mo", "title": "Rust closure errors -&gt; ...which is owned by the current function | capture of moved value:", "body": "<p>This code:</p>\n\n<pre><code>//let seen_cell = std::cell::RefCell::new(window_0);\nwindow_0.connect_delete_event(|_, _| {\n\n    //window_0.destroy();\n    window.hide();\n    Inhibit(true)  \n    });\n\nbutton_0.connect_clicked(|_|{  \n    window.show_all(); \n    }  \n);\n</code></pre>\n\n<p>Produces the errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `window`, which is owned by the current function\n   --&gt; src/main.rs:192:36\n    |\n192 |     window_0.connect_delete_event( |_, _| {\n    |                                    ^^^^^^ may outlive borrowed value `window`\n...\n195 |         window.hide();\n    |         ------ `window` is borrowed here\n    |\nhelp: to force the closure to take ownership of `window` (and any other referenced variables), use the `move` keyword, as shown:\n    |     window_0.connect_delete_event( move |_, _| {\n\nerror[E0373]: closure may outlive the current function, but it borrows `window`, which is owned by the current function\n   --&gt; src/main.rs:199:30\n    |\n199 |     button_0.connect_clicked(|_|{\n    |                              ^^^ may outlive borrowed value `window`\n200 |         window.show_all();\n    |         ------ `window` is borrowed here\n    |\nhelp: to force the closure to take ownership of `window` (and any other referenced variables), use the `move` keyword, as shown:\n    |     button_0.connect_clicked(move |_|{\n</code></pre>\n\n<p>If I try this:</p>\n\n<pre><code>//let seen_cell = std::cell::RefCell::new(window_0);\nwindow_0.connect_delete_event(move |_, _| {\n\n    //window_0.destroy();\n    window.hide();\n    Inhibit(true)  \n    });\n\nbutton_0.connect_clicked(|_|{  \n    window.show_all(); \n    }  \n);\n</code></pre>\n\n<p>I get the errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `window`, which is owned by the current function\n   --&gt; src/main.rs:199:30\n    |\n199 |     button_0.connect_clicked(|_|{\n    |                              ^^^ may outlive borrowed value `window`\n200 |         window.show_all();\n    |         ------ `window` is borrowed here\n    |\nhelp: to force the closure to take ownership of `window` (and any other referenced variables), use the `move` keyword, as shown:\n    |     button_0.connect_clicked(move |_|{\n\nerror[E0382]: capture of moved value: `window`\n   --&gt; src/main.rs:199:30\n    |\n192 |     window_0.connect_delete_event(move |_, _| {\n    |                                   ----------- value moved (into closure) here\n...\n199 |     button_0.connect_clicked(|_|{\n    |                              ^^^ value captured here after move\n    |\n    = note: move occurs because `window` has type `gtk::Window`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>If I try this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//let seen_cell = std::cell::RefCell::new(window_0);\nwindow_0.connect_delete_event(move |_, _| {\n\n    //window_0.destroy();\n    window.hide();\n    Inhibit(true)  \n    });\n\nbutton_0.connect_clicked(move|_|{  \n    window.show_all(); \n    }  \n);\n</code></pre>\n\n<p>I get the errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: capture of moved value: `window`\n   --&gt; src/main.rs:200:9\n    |\n192 |     window_0.connect_delete_event(move |_, _| {\n    |                                   ----------- value moved (into closure) here\n...\n200 |         window.show_all();\n    |         ^^^^^^ value captured here after move\n    |\n    = note: move occurs because `window` has type `gtk::Window`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I have read similar questions but I have not been able to solve this case. How can I solve this in the best way, perhaps by using <code>Arc</code> or similar?</p>\n"}, {"tags": ["rust", "visual-studio-code"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494434530, "post_id": 43898241, "comment_id": 74830425, "body": "That does depend on the IDE, you should highlight that instead of Rust. What Visual Studio Code extensions have you installed? Have you tried the same for other external crates (<code>byteorder</code>, <code>itertools</code>, ...)?"}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494435922, "post_id": 43898241, "comment_id": 74831236, "body": "@E_net4 Thanks for comment leave an update"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494440069, "post_id": 43898241, "comment_id": 74833668, "body": "Your screenshot does not show the use of <code>byteorder</code>. Also, you forgot to include the extensions that you have installed."}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494442037, "post_id": 43898241, "comment_id": 74834798, "body": "@E_net4 True you have, my fault. In a hurry to answer, and not autocomplete to <code>byteorder</code> only for <code>std</code>. Thanks for your time"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494443963, "post_id": 43898241, "comment_id": 74835961, "body": "Have you run <code>cargo build</code> on your project?"}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1494444775, "post_id": 43898241, "comment_id": 74836443, "body": "@E_net4 I have looked and I do not see it, I have also done <code>cargo clean</code>"}], "answers": [{"comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494716293, "post_id": 43901712, "comment_id": 74948523, "body": "After all I decided to install everything again, it is very possible that your answer is the solution, for others, but I am having some problems with RLS."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 1, "creation_date": 1494716495, "post_id": 43901712, "comment_id": 74948560, "body": "@AngelAngel On that you will just have to wait until the next nightly release. A serious bug in RLS emerged a few days ago that was only fixed yesterday and made into [PR #41969](<a href=\"https://github.com/rust-lang/rust/pull/41969\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/41969</a> ) today. If you don&#39;t want to wait however, head on to the RLS repository and build it from the sources!"}, {"owner": {"reputation": 742, "user_id": 1006006, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/c7e18db000f12082ea6b1a68ae678701?s=128&d=identicon&r=PG", "display_name": "Vishal Kumar", "link": "https://stackoverflow.com/users/1006006/vishal-kumar"}, "edited": false, "score": 0, "creation_date": 1496509347, "post_id": 43901712, "comment_id": 75695594, "body": "@E_net4 even after building from rls branch and vscode-rust branch external package are not working. RLS analysis is finished as per status bar. Also macro expansion like push method on vec! is not working."}, {"owner": {"reputation": 742, "user_id": 1006006, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/c7e18db000f12082ea6b1a68ae678701?s=128&d=identicon&r=PG", "display_name": "Vishal Kumar", "link": "https://stackoverflow.com/users/1006006/vishal-kumar"}, "edited": false, "score": 0, "creation_date": 1496632487, "post_id": 43901712, "comment_id": 75724108, "body": "@E_net4 thanks for it. I tries IntelliJ and external package works very well. I am having some trouble with macros but I think for now i will use it."}, {"owner": {"reputation": 460, "user_id": 5118766, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0hCTb.jpg?s=128&g=1", "display_name": "flashjpr", "link": "https://stackoverflow.com/users/5118766/flashjpr"}, "edited": false, "score": 0, "creation_date": 1523830976, "post_id": 43901712, "comment_id": 86709656, "body": "Ty. Using the official rust-lang.rust extension does the job and offers autocompletion."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1558465565, "last_edit_date": 1558465565, "creation_date": 1494446349, "answer_id": 43901712, "question_id": 43898241, "link": "https://stackoverflow.com/questions/43898241/no-rust-autocomplete-in-visual-studio-code-for-external-crates-such-as-gtk-rs/43901712#43901712", "title": "No Rust autocomplete in Visual Studio Code for external crates such as &#39;gtk-rs&#39;", "body": "<p>Although there could be many possible causes of a problem with the <a href=\"https://github.com/editor-rs/vscode-rust\" rel=\"nofollow noreferrer\">Rust extension</a> in Visual Studio Code, the following steps should help anyone with issues of this kind:</p>\n\n<ul>\n<li>Do not use the old extension \"Rusty Code\", since it's no longer maintained. Instead, you have two options:\n\n<ul>\n<li>The official <a href=\"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust\" rel=\"nofollow noreferrer\">rust-lang.rust</a> extension is developed by an official Rust team and is focused on Rust Language Server (RLS) integration. It is in active development.</li>\n<li>The <a href=\"https://marketplace.visualstudio.com/items?itemName=kalitaalexey.vscode-rust\" rel=\"nofollow noreferrer\">kalitaalexey.vscode-rust</a> extension, forked from Rusty Code, is older but possibly more stable than the official extension when run in Legacy Mode. It is currently under very passive maintenance however.</li>\n</ul></li>\n<li>You might need to build your project so that dependencies are downloaded and compiled locally, thus enabling the extension to retrieve additional information about them. Every time you modify your dependency list, be sure that your program is declaring them with <code>extern crate</code>, then run <code>cargo build</code> on your project. If the Code command is available, press <kbd>F1</kbd> then type in \"build\" and enter. Don't forget to build after cleaning the project as well.</li>\n<li>It's always worth making sure that the extension is up to date and properly configured. Update the extension, and check out the respective documentation for instructions on how to make it work. when using kalitaalexey.vscode-rust, see the <a href=\"https://github.com/editor-rs/vscode-rust/blob/master/doc/main.md\" rel=\"nofollow noreferrer\">main documentation</a> and have it work in either Legacy mode or using the RLS.</li>\n<li>The RLS has come a long way over the past few years, and should be the <em>default choice</em> for Visual Studio Code. The RLS can even be installed automatically from the IDE, via <a href=\"https://rustup.rs\" rel=\"nofollow noreferrer\">Rustup</a>.</li>\n<li>Check the status bar. If something is wrong, it should tell you so. Open the extension task's output window for error messages. If something still isn't right, try reloading your window.</li>\n</ul>\n\n<p>If there's still a problem after these steps, it might actually be a bug, which should be reported.</p>\n"}, {"tags": [], "owner": {"reputation": 1122, "user_id": 5645292, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jO79K.jpg?s=128&g=1", "display_name": "Daniel Cooke", "link": "https://stackoverflow.com/users/5645292/daniel-cooke"}, "is_accepted": false, "score": 0, "last_activity_date": 1564856433, "creation_date": 1564856433, "answer_id": 57341033, "question_id": 43898241, "link": "https://stackoverflow.com/questions/43898241/no-rust-autocomplete-in-visual-studio-code-for-external-crates-such-as-gtk-rs/57341033#57341033", "title": "No Rust autocomplete in Visual Studio Code for external crates such as &#39;gtk-rs&#39;", "body": "<p>Before trying out E_net4's solutions, make sure you are running your Rust project from root. (same directory as Cargo.toml)</p>\n\n<p>I was running :</p>\n\n<pre><code>-app\n   - src\n   - Cargo.toml\n-app2\n   - src\n   - Cargo.toml\n</code></pre>\n\n<p>As my workspace root.</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9795, "favorite_count": 0, "accepted_answer_id": 43901712, "answer_count": 2, "score": 12, "last_activity_date": 1564856433, "creation_date": 1494434198, "last_edit_date": 1494441849, "question_id": 43898241, "link": "https://stackoverflow.com/questions/43898241/no-rust-autocomplete-in-visual-studio-code-for-external-crates-such-as-gtk-rs", "title": "No Rust autocomplete in Visual Studio Code for external crates such as &#39;gtk-rs&#39;", "body": "<p>Maybe this question has been done before but I can not find anything. </p>\n\n<p>I would like to know what steps to follow so that Visual Studio Code can show the autocomplete window that shows Rust methods and such, for example when using <kbd>ctrl</kbd>+<kbd>space</kbd> (In many commons, editors) What I see is that it works for <code>std</code> but not for <code>gtk-rs</code>. </p>\n\n<p>I was wondering if I would have to tell you in some way how to find the files or something like that.</p>\n\n<p>I do not know if this will depend on each editor or all have some specific files included, my IDE is Visual Studio Code.</p>\n\n<hr>\n\n<p><em>...you forgot to include the extensions that you have installed</em></p>\n\n<p>kalitaalexey\nRust for Visual Studio Code</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Rust Language Server integration.\nAutocompletion (via racer or RLS).\nGo To Definition (via racer or RLS).\nGo To Symbol (via rustsym or RLS).\nCode formatting (via rustfmt).\nCode Snippets.\n//..\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4455, "user_id": 1460448, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/0dd5a0fbb2b5d5592a49d2e60ef98f0a?s=128&d=identicon&r=PG&f=1", "display_name": "xji", "link": "https://stackoverflow.com/users/1460448/xji"}, "edited": false, "score": 0, "creation_date": 1553011207, "post_id": 43892581, "comment_id": 97223399, "body": "I&#39;ve tried to use Entry API but struggled for my use case, which is to modify the value first, and then, if after modification, the value turns out to satisfy certain criteria/becomes empty, delete it from the hashmap. Is that not feasible with this approach?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4455, "user_id": 1460448, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/0dd5a0fbb2b5d5592a49d2e60ef98f0a?s=128&d=identicon&r=PG&f=1", "display_name": "xji", "link": "https://stackoverflow.com/users/1460448/xji"}, "edited": false, "score": 1, "creation_date": 1553013123, "post_id": 43892581, "comment_id": 97224588, "body": "@xij: It&#39;s very close to what Shepmaster&#39;s answer, below, is doing. Just be careful with the scope of your borrows, that is, enclose the modification inside a block <code>{ let key = occupied.get_mut(); &#47;* mutate *&#47; }</code> and then check/remove."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1553019368, "post_id": 43892581, "comment_id": 97227870, "body": "Trying to give credit where credit is due, the answer below was the OP&#39;s, they just put it in the <i>question</i>. They chose not to move it to an answer themselves, so <a href=\"https://stackoverflow.com/revisions/43892402/3\">I did it for them</a> (this is why it&#39;s community wiki)."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1494419437, "creation_date": 1494419437, "answer_id": 43892581, "question_id": 43892402, "link": "https://stackoverflow.com/questions/43892402/whats-an-idiomatic-way-to-delete-a-value-from-hashmap-if-it-is-empty/43892581#43892581", "title": "What&#39;s an idiomatic way to delete a value from HashMap if it is empty?", "body": "<p>Whenever you have a double look-up of a key, you need to think <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.entry\" rel=\"noreferrer\"><strong>Entry API</strong></a>.</p>\n\n<p>With the entry API, you get a handle to a key-value pair and can:</p>\n\n<ul>\n<li>read the key,</li>\n<li>read/modify the value,</li>\n<li>remove the entry entirely (getting the key and value back).</li>\n</ul>\n\n<p>It's extremely powerful.</p>\n\n<p>In this case:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::collections::hash_map::Entry;\n\nfn remove(hm: &amp;mut HashMap&lt;i32, String&gt;, index: i32) {\n    if let Entry::Occupied(o) = hm.entry(index) {\n        if o.get().is_empty() {\n            o.remove_entry();\n        }\n    }\n}\n\nfn main() {\n    let mut hm = HashMap::new();\n    hm.insert(1, String::from(\"\"));\n\n    remove(&amp;mut hm, 1);\n\n    println!(\"{:?}\", hm);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4455, "user_id": 1460448, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/0dd5a0fbb2b5d5592a49d2e60ef98f0a?s=128&d=identicon&r=PG&f=1", "display_name": "xji", "link": "https://stackoverflow.com/users/1460448/xji"}, "edited": false, "score": 1, "creation_date": 1553011395, "post_id": 43990739, "comment_id": 97223524, "body": "This method suits my use case of first modifying the value, and then determining whether to remove it or not. The accepted answer didn&#39;t seem to be able to do this."}, {"owner": {"reputation": 99684, "user_id": 149482, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/cb6a2b464b7190c48e4f148a0e51d13a?s=128&d=identicon&r=PG", "display_name": "Matt Joiner", "link": "https://stackoverflow.com/users/149482/matt-joiner"}, "edited": false, "score": 0, "creation_date": 1574031089, "post_id": 43990739, "comment_id": 104074691, "body": "Why did you make this community wiki? You still deserve the reputation for answering your own questions."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 99684, "user_id": 149482, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/cb6a2b464b7190c48e4f148a0e51d13a?s=128&d=identicon&r=PG", "display_name": "Matt Joiner", "link": "https://stackoverflow.com/users/149482/matt-joiner"}, "edited": false, "score": 0, "creation_date": 1574031690, "post_id": 43990739, "comment_id": 104074787, "body": "@MattJoiner the OP did not post this, I did. Unfortunately, the OP <a href=\"https://stackoverflow.com/posts/43892402/revisions\">answered their own question <i>in the question</i></a>, so I moved it to an answer so that it could be voted up and down separately. It wouldn\u2019t make sense for me to get rep for it, so community wiki it is. This is also <a href=\"https://stackoverflow.com/questions/43892402/whats-an-idiomatic-way-to-delete-a-value-from-hashmap-if-it-is-empty/43990739?noredirect=1#comment97227870_43892581\">mentioned above</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1494894761, "creation_date": 1494894761, "answer_id": 43990739, "question_id": 43892402, "link": "https://stackoverflow.com/questions/43892402/whats-an-idiomatic-way-to-delete-a-value-from-hashmap-if-it-is-empty/43990739#43990739", "title": "What&#39;s an idiomatic way to delete a value from HashMap if it is empty?", "body": "<p>I did this in the end:</p>\n\n<pre><code>match self.data.entry(index) {\n    Occupied(mut occupied) =&gt; {\n        let is_empty = {\n            let ks = occupied.get_mut();\n            ks.remove(primary_key);\n            ks.is_empty()\n        };\n        if is_empty {\n            occupied.remove();\n        }\n\n    },\n    Vacant(_) =&gt; unreachable!()\n}\n</code></pre>\n"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1371, "favorite_count": 0, "accepted_answer_id": 43892581, "answer_count": 2, "score": 5, "last_activity_date": 1494894790, "creation_date": 1494418940, "last_edit_date": 1494894790, "question_id": 43892402, "link": "https://stackoverflow.com/questions/43892402/whats-an-idiomatic-way-to-delete-a-value-from-hashmap-if-it-is-empty", "title": "What&#39;s an idiomatic way to delete a value from HashMap if it is empty?", "body": "<p>The following code works, but it doesn't look nice as the definition of <code>is_empty</code> is too far away from the usage.</p>\n\n<pre><code>fn remove(&amp;mut self, index: I, primary_key: &amp;Rc&lt;K&gt;) {\n    let is_empty;\n    {\n        let ks = self.data.get_mut(&amp;index).unwrap();\n        ks.remove(primary_key);\n        is_empty = ks.is_empty();\n    }\n    // I have to wrap `ks` in an inner scope so that we can borrow `data` mutably.\n    if is_empty {\n        self.data.remove(&amp;index);\n    }\n}\n</code></pre>\n\n<p>Do we have some ways to drop the variables in condition before entering the if branches, e.g.</p>\n\n<pre><code>if {ks.is_empty()} {\n    self.data.remove(&amp;index);\n}\n</code></pre>\n"}, {"tags": ["csv", "rust", "data-processing"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1494413552, "post_id": 43887908, "comment_id": 74814530, "body": "Use the csv crate? <a href=\"https://docs.rs/csv\" rel=\"nofollow noreferrer\">docs.rs/csv</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2156, "user_id": 6102259, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/455bec478ad99c6edcb4e812563a600c?s=128&d=identicon&r=PG&f=1", "display_name": "ketan", "link": "https://stackoverflow.com/users/6102259/ketan"}, "edited": false, "score": 2, "creation_date": 1494417683, "post_id": 43890323, "comment_id": 74817692, "body": "@swizard- Can you please explain little bit coding stuff I&#39;m new to rust."}], "tags": [], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "is_accepted": false, "score": 1, "last_activity_date": 1494422055, "last_edit_date": 1494422055, "creation_date": 1494413424, "answer_id": 43890323, "question_id": 43887908, "link": "https://stackoverflow.com/questions/43887908/how-to-read-and-process-a-pipe-delimited-file-in-rust/43890323#43890323", "title": "How to read and process a pipe delimited file in Rust?", "body": "<p>I'd suggest something like this:</p>\n\n<pre><code>use std::str;\nuse std::collections::HashMap;\nuse std::io::{BufReader, BufRead, Cursor};\n\nfn main() {\n    let data = \"\nA|1|Pass\nB|2|Fail\nA|3|Fail\nC|6|Pass\nA|8|Pass\nB|10|Fail\nC|25|Pass\nA|12|Fail\nC|26|Pass\nC|26|Fail\";\n    let lines = BufReader::new(Cursor::new(data))\n        .lines()\n        .flat_map(Result::ok)\n        .flat_map(parse_line);\n    for ((fa, fb), s) in group(lines) {\n        println!(\"{}|{}|{}\", fa, fb, s);\n    }\n}\n\ntype ParsedLine = ((String, String), usize);\n\nfn parse_line(line: String) -&gt; Option&lt;ParsedLine&gt; {\n    let mut fields = line\n        .split('|')\n        .map(str::trim);\n    if let (Some(fa), Some(fb), Some(fc)) = (fields.next(), fields.next(), fields.next()) {\n        fb.parse()\n            .ok()\n            .map(|v| ((fa.to_string(), fc.to_string()), v))\n    } else {\n        None\n    }\n}\n\nfn group&lt;I&gt;(input: I) -&gt; Vec&lt;ParsedLine&gt; where I: Iterator&lt;Item = ParsedLine&gt; {\n    let mut table = HashMap::new();\n    for (k, v) in input {\n        let mut sum = table.entry(k).or_insert(0);\n        *sum += v;\n    }\n    let mut output: Vec&lt;_&gt; = table\n        .into_iter()\n        .collect();\n    output.sort_by(|a, b| a.0.cmp(&amp;b.0));\n    output\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=eeb41ee75ecf92637c1d72b7e5126f2e&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground link</a></p>\n\n<p>Here a <code>HashMap</code> is used for grouping entries and then results are moved to a <code>Vec</code> for sorting.</p>\n"}, {"comments": [{"owner": {"reputation": 2156, "user_id": 6102259, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/455bec478ad99c6edcb4e812563a600c?s=128&d=identicon&r=PG&f=1", "display_name": "ketan", "link": "https://stackoverflow.com/users/6102259/ketan"}, "edited": false, "score": 0, "creation_date": 1494475592, "post_id": 43903357, "comment_id": 74846033, "body": "@Shepmaster- How I can pushed this result in one csv file like output.csv?"}, {"owner": {"reputation": 2156, "user_id": 6102259, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/455bec478ad99c6edcb4e812563a600c?s=128&d=identicon&r=PG&f=1", "display_name": "ketan", "link": "https://stackoverflow.com/users/6102259/ketan"}, "edited": false, "score": 0, "creation_date": 1494477595, "post_id": 43903357, "comment_id": 74846559, "body": "@Shepmaster- yeah. Got it. Thanks for your help."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1494461857, "last_edit_date": 1495542870, "creation_date": 1494453459, "answer_id": 43903357, "question_id": 43887908, "link": "https://stackoverflow.com/questions/43887908/how-to-read-and-process-a-pipe-delimited-file-in-rust/43903357#43903357", "title": "How to read and process a pipe delimited file in Rust?", "body": "<p>As was mentioned, use the <a href=\"https://crates.io/crates/csv\" rel=\"nofollow noreferrer\">csv crate</a> to do the heavy lifting of parsing the file. Then it's just a matter of grouping each row by using a <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeMap.html\" rel=\"nofollow noreferrer\"><code>BTreeMap</code></a> which also helpfully performs sorting. The <a href=\"https://stackoverflow.com/q/28512394/155423\">entry API</a> helps efficiently insert into the <code>BTreeMap</code>.</p>\n\n<pre><code>extern crate csv;\nextern crate rustc_serialize;\n\nuse std::fs::File;\nuse std::collections::BTreeMap;\n\n#[derive(Debug, RustcDecodable)]\nstruct Record {\n    name: String,\n    value: i32,\n    passed: String,\n}\n\nfn main() {\n    let file = File::open(\"input\").expect(\"Couldn't open input\");\n    let mut csv_file = csv::Reader::from_reader(file).delimiter(b'|').has_headers(false);\n\n    let mut sums = BTreeMap::new();\n    for record in csv_file.decode() {\n        let record: Record = record.expect(\"Could not parse input file\");\n        let key = (record.name, record.passed);\n        *sums.entry(key).or_insert(0) += record.value;\n    }\n\n    println!(\"name,result,num\");\n    for ((name, passed), sum) in sums {\n        println!(\"{},{},{}\", name, passed, sum);\n    }\n}\n</code></pre>\n\n<p>You'll note that the output is correct:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>name,result,num\nA,Fail,15\nA,Pass,9\nB,Fail,12\nC,Fail,26\nC,Pass,57\n</code></pre>\n"}], "owner": {"reputation": 2156, "user_id": 6102259, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/455bec478ad99c6edcb4e812563a600c?s=128&d=identicon&r=PG&f=1", "display_name": "ketan", "link": "https://stackoverflow.com/users/6102259/ketan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 991, "favorite_count": 0, "accepted_answer_id": 43903357, "answer_count": 2, "score": 0, "last_activity_date": 1494461857, "creation_date": 1494406844, "last_edit_date": 1494422041, "question_id": 43887908, "link": "https://stackoverflow.com/questions/43887908/how-to-read-and-process-a-pipe-delimited-file-in-rust", "title": "How to read and process a pipe delimited file in Rust?", "body": "<p>I want to read a pipe delimited file, process the data, and generate a result in CSV format. </p>\n\n<p><strong>Input file data</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>A|1|Pass\nB|2|Fail\nA|3|Fail\nC|6|Pass\nA|8|Pass\nB|10|Fail\nC|25|Pass\nA|12|Fail\nC|26|Pass\nC|26|Fail\n</code></pre>\n\n<p>I'm want to apply a group by function on column 1 and column 3 and generate column 2's sum according to a particular group.</p>\n\n<p>I'm stuck at the point of how to maintain the records to apply the group by function:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufReader};\nuse std::io::{BufRead};\nuse std::collections::HashMap;\n\nfn say_hello(id: &amp;str, value: i32, no_change : i32) {\n\n    if no_change == 101 {\n        let mut data = HashMap::new();\n    }\n    if value == 0 {\n        if data.contains_key(id) {\n            for (key, value) in &amp;data {\n                if value.is_empty() {\n\n                }\n            }\n        } else {\n            data.insert(id,\"\");\n        }\n    } else if value == 2 {\n        if data.contains_key(id) {\n            for (key, value) in &amp;data {\n                if value.is_empty() {\n\n                } else {\n\n                }\n            }\n        } else {\n            data.insert(id,\"\");\n        }\n    }\n}\n\nfn main() {\n\n    let f = File::open(\"sample2.txt\").expect(\"Unable to open file\");\n    let br = BufReader::new(f);\n    let mut no_change = 101;\n    for line in br.lines() {\n        let mut index = 0;\n        for value in line.unwrap().split('|') {\n            say_hello(&amp;value,index,no_change);\n            index = index + 1;\n        }\n    }\n}\n</code></pre>\n\n<p>I'm expecting a result like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>name,result,num\nA,Fail,15\nA,Pass,9\nB,Fail,12\nC,Fail,26\nC,Pass,57\n</code></pre>\n\n<p>Is there any specific technique to read a pipe-delimited file and process the data like above? Python's pandas accomplished this requirement but I want to do it in Rust.</p>\n"}, {"tags": ["rust", "mutable", "hindley-milner"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1494404318, "post_id": 43886963, "comment_id": 74808201, "body": "You&#39;re in luck, there is work ongoing to review Rust type inference and Niko Matsakis has been blogging about his work on a new unification engine: <a href=\"http://smallcultfollowing.com/babysteps/blog/2017/03/25/unification-in-chalk-part-1/\" rel=\"nofollow noreferrer\">Unification in Chalk - Part 1</a> and <a href=\"http://smallcultfollowing.com/babysteps/blog/2017/04/23/unification-in-chalk-part-2/\" rel=\"nofollow noreferrer\">Unification in Chalk - Part 2</a>."}, {"owner": {"reputation": 1136, "user_id": 5147158, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7f5a49ac25a325cbd8293c5c6793c40f?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Lenkefi", "link": "https://stackoverflow.com/users/5147158/peter-lenkefi"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494404662, "post_id": 43886963, "comment_id": 74808425, "body": "@MatthieuM. Thanks, I&#39;ll read this!"}], "answers": [{"comments": [{"owner": {"reputation": 1136, "user_id": 5147158, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7f5a49ac25a325cbd8293c5c6793c40f?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Lenkefi", "link": "https://stackoverflow.com/users/5147158/peter-lenkefi"}, "edited": false, "score": 1, "creation_date": 1494404647, "post_id": 43887077, "comment_id": 74808418, "body": "So you are saying that there must be no generalizing in the algorithm?"}, {"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "reply_to_user": {"reputation": 1136, "user_id": 5147158, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7f5a49ac25a325cbd8293c5c6793c40f?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Lenkefi", "link": "https://stackoverflow.com/users/5147158/peter-lenkefi"}, "edited": false, "score": 0, "creation_date": 1494405501, "post_id": 43887077, "comment_id": 74808944, "body": "@PeterLenkefi, it is generalize until it finds the first specialized complete type"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1136, "user_id": 5147158, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7f5a49ac25a325cbd8293c5c6793c40f?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Lenkefi", "link": "https://stackoverflow.com/users/5147158/peter-lenkefi"}, "edited": false, "score": 1, "creation_date": 1494420925, "post_id": 43887077, "comment_id": 74820235, "body": "@PeterLenkefi What do you mean by &quot;no generalizing&quot;? <code>v = Vec::new()</code> is, effectively, a constraint that <code>v: Vec&lt;T&gt;</code> for some <code>T</code>; <code>v.push(3)</code> is a constraint that <code>T = {integer}</code> (which will default to <code>i32</code> in the absence of proof otherwise). How could either of those constraints be <i>more</i> generalized?"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "reply_to_user": {"reputation": 1136, "user_id": 5147158, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7f5a49ac25a325cbd8293c5c6793c40f?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Lenkefi", "link": "https://stackoverflow.com/users/5147158/peter-lenkefi"}, "edited": false, "score": 2, "creation_date": 1494423032, "post_id": 43887077, "comment_id": 74821988, "body": "@PeterLenkefi It&#39;s important to remember that Rust doesn&#39;t have a type hierarchy of numbers so Rust can&#39;t simply make it a <code>Vec&lt;Number&gt;</code> or <code>Vec&lt;Rational&gt;</code> or some such thing. The closest it could do might be a <code>Vec&lt;&amp;PartialOrd&gt;</code> but creating <a href=\"https://doc.rust-lang.org/book/trait-objects.html\" rel=\"nofollow noreferrer\">trait objects</a> would have a runtime cost and Rust tries to make runtime costs explicit."}, {"owner": {"reputation": 978, "user_id": 1753545, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/p8AyY.png?s=128&g=1", "display_name": "max", "link": "https://stackoverflow.com/users/1753545/max"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1535040487, "post_id": 43887077, "comment_id": 90929651, "body": "@trentcl &quot;no generalizing&quot; means the types stay monomorphic (i.e. no universal quantification, unlike HM&#39;s let-polymorphism)"}], "tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": false, "score": 5, "last_activity_date": 1494418112, "last_edit_date": 1494418112, "creation_date": 1494404399, "answer_id": 43887077, "question_id": 43886963, "link": "https://stackoverflow.com/questions/43886963/how-does-rust-solve-mutability-for-hindley-milner/43887077#43887077", "title": "How does Rust solve mutability for Hindley-Milner?", "body": "<p>If I'm not wrong it does this:</p>\n\n<pre><code>let mut a;\na = 3;     //here a is already infered as mut int\na = 2.5;   //fails because int != float\n</code></pre>\n\n<p>For the vec snippet:</p>\n\n<pre><code>let mut v;\nv = Vec::new();// now v type is Vec&lt;something&gt;\nv.push(3);     // v type is Vec&lt;int&gt;\nv.push(2.3);   // here fails because Vec&lt;int&gt; != Vec&lt;float&gt;\n</code></pre>\n\n<p>Notice I did not used rust types, but just for having a general idea.</p>\n"}, {"comments": [{"owner": {"reputation": 978, "user_id": 1753545, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/p8AyY.png?s=128&g=1", "display_name": "max", "link": "https://stackoverflow.com/users/1753545/max"}, "edited": false, "score": 0, "creation_date": 1535040262, "post_id": 43890579, "comment_id": 90929506, "body": "I think OP wanted to know whether <code>let mut</code> bindings use let-polymorphism + syntactic value restriction, or simply use monomorphic types."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1494425308, "last_edit_date": 1494425308, "creation_date": 1494414076, "answer_id": 43890579, "question_id": 43886963, "link": "https://stackoverflow.com/questions/43886963/how-does-rust-solve-mutability-for-hindley-milner/43890579#43890579", "title": "How does Rust solve mutability for Hindley-Milner?", "body": "<p>It is considered an issue (as far as diagnostic quality goes) that rustc is slightly too eager in its type inference.</p>\n\n<p>If we check your first example:</p>\n\n<pre><code>let mut a = 3;\na = 2.5;\n</code></pre>\n\n<p>Then the first line leads to inferring that <code>a</code> has a <code>{generic integer type}</code>, and the second line will lead to diagnose that <code>2.5</code> cannot be assigned to <code>a</code> because it's not a generic integer type.</p>\n\n<p>It is expected that a better algorithm would instead register the conflict, and then point at the lines from which each type came. Maybe we'll get that with <a href=\"http://smallcultfollowing.com/babysteps/blog/2017/03/25/unification-in-chalk-part-1/\" rel=\"nofollow noreferrer\">Chalk</a>.</p>\n\n<p><em>Note: the generic integer type is a trick of Rust to make integer literals \"polymorphic\", if there is no other hint at what specific integer type it should be, it will default to <code>i32</code>.</em></p>\n\n<hr>\n\n<p>The second example occurs in basically the same way.</p>\n\n<pre><code>let mut v = Vec::new();\nv.push(3);\n</code></pre>\n\n<p>In details:</p>\n\n<ul>\n<li><code>v</code> is assigned type <code>$T</code></li>\n<li><code>Vec::new()</code> produces type <code>Vec&lt;$U&gt;</code></li>\n<li><code>3</code> produces type <code>{integer}</code></li>\n</ul>\n\n<p>So, on the first line, we get <code>$T == Vec&lt;$U&gt;</code> and on the second line we get <code>$U == {integer}</code>, so <code>v</code> is deduced to have type <code>Vec&lt;{integer}&gt;</code>.</p>\n\n<p>If there is no other source to learn the exact integer type, it falls back to <code>i32</code> by default.</p>\n\n<hr>\n\n<p>I would like to note that mutability does not actually impact inference here; from the point of view of type inference, or type unification, the following code samples are equivalent:</p>\n\n<pre><code>//  With mutability:\nlet mut a = 1;\na = 2.5;\n\n//  Without mutability:\nlet a = if &lt;condition&gt; { 1 } else { 2.5 };\n</code></pre>\n\n<p>There are much worse issues in Rust with regard to HM, <code>Deref</code> and sub-typing come as much more challenging.</p>\n"}], "owner": {"reputation": 1136, "user_id": 5147158, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7f5a49ac25a325cbd8293c5c6793c40f?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Lenkefi", "link": "https://stackoverflow.com/users/5147158/peter-lenkefi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1447, "favorite_count": 0, "accepted_answer_id": 43890579, "answer_count": 2, "score": 6, "last_activity_date": 1494425308, "creation_date": 1494404045, "question_id": 43886963, "link": "https://stackoverflow.com/questions/43886963/how-does-rust-solve-mutability-for-hindley-milner", "title": "How does Rust solve mutability for Hindley-Milner?", "body": "<p>I've read that Rust has very good type inference using Hindley-Milner. Rust also has mutable variables and AFAIK there must be some constraints when a HM algorithm works with mutability because it could over-generalize. The following code:</p>\n\n<pre><code>let mut a;\na = 3;\na = 2.5;\n</code></pre>\n\n<p>Does not compile, because at the second row integer was inferred and a floating point value cannot be assigned to an integer variable. So I'm guessing that for simple variables, as soon as a non-generic type is inferred, the variable becomes a mono-type and cannot be generalized anymore.</p>\n\n<p>But what about a template, like Vec? For example this code:</p>\n\n<pre><code>let mut v;\nv = Vec::new();\nv.push(3);\nv.push(2.3);\n</code></pre>\n\n<p>This fails again, but for the last line again. That means that the second row inferred the type partially (Vec) and the third one inferred the container type.</p>\n\n<p>What's the rule? Is there something like value-restriction that I don't know about? Or am I over-complicating things and Rust has much tighter rules (like no generalization at all)?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494386974, "post_id": 43882955, "comment_id": 74800808, "body": "I do not understand very well what you ask, my English is not good, but maybe this will help you, added in your initial <b>Cargo.toml</b> <code>[dependencies.foo] path = &quot;.&#47;proj&#47;src&#47;bin&quot;</code>"}, {"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "reply_to_user": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494389054, "post_id": 43882955, "comment_id": 74801283, "body": "@AngelAngel Thanks for the suggestion, but <code>foo</code> isn&#39;t a dependency needed to compile like a lib, but a separate rust program with it&#39;s own compilation steps."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1494391212, "creation_date": 1494391212, "answer_id": 43883705, "question_id": 43882955, "link": "https://stackoverflow.com/questions/43882955/building-submodule-binary-crates-with-cargo/43883705#43883705", "title": "Building submodule binary crates with cargo", "body": "<blockquote>\n  <p>My first thought was to have a build.rs that issued its own cargo command, but I couldn't find a flag for cargo that allowed passing a directory to use as root.</p>\n</blockquote>\n\n<p>There is a command-line argument, but it doesn't expect a directory; rather, it expects a full path to the <code>Cargo.toml</code> file. The argument is named <code>--manifest-path</code>, and it's available on many subcommands, such as <code>build</code> and <code>run</code>. It's used like this (note that relative paths are also valid):</p>\n\n<pre><code>$ cargo build --manifest-path=/path/to/proj/src/bin/foo-bin-rs/Cargo.toml\n</code></pre>\n\n<p>If you need to run the executable from your build script, you can simply use <code>cargo run</code> to build and run in one go, as usual.</p>\n"}], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 661, "favorite_count": 0, "accepted_answer_id": 43883705, "answer_count": 1, "score": 3, "last_activity_date": 1494391212, "creation_date": 1494385552, "question_id": 43882955, "link": "https://stackoverflow.com/questions/43882955/building-submodule-binary-crates-with-cargo", "title": "Building submodule binary crates with cargo", "body": "<p>I have the following crate structure:</p>\n\n<pre><code>|\u2500\u2500 proj/\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 bin/\n            \u2514\u2500\u2500 foo-bin-rs/\n                \u2514\u2500\u2500 src/\n                    \u2514\u2500\u2500 main.rs\n                \u2514\u2500\u2500 Cargo.toml\n        \u2514\u2500\u2500 main.rs\n    \u2514\u2500\u2500 Cargo.toml\n    \u2514\u2500\u2500 build.rs\n</code></pre>\n\n<p><code>foo-bin-rs</code> is a submodule. I'd like to find a clean way to issue a build\ncommand through cargo that would build <code>foo-bin-rs</code> as a part of the build\ncommand used for <code>proj</code>. I've not found any documentation that uses the\n<code>src/bin</code> directory with binaries that are their own separate crate, just\nsingle files. My first thought was to have a <code>build.rs</code> that issued its own\n<code>cargo</code> command, but I couldn't find a flag for cargo that allowed passing a\ndirectory to use as root. What is the canonical solution for this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494383231, "post_id": 43882354, "comment_id": 74800006, "body": "@Shepmaster Thanks for the link, I read the link, but I did not understand it very well, so after searching I found this -&gt; <a href=\"http://doc.crates.io/specifying-dependencies.html\" rel=\"nofollow noreferrer\">doc.crates.io/specifying-dependencies.html</a> And make this change in my <b>cargo.toml</b> <code>glib = { git = &quot;https:&#47;&#47;github.com&#47;gtk-rs&#47;glib&quot; }</code>And it seems to work but I do not know if it&#39;s the right way."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494452230, "post_id": 43882354, "comment_id": 74840153, "body": "The <b>Cargo.lock</b> <i>before</i> you used the git dependency for glib and <i>after</i> you added glib to Cargo.toml. The point in time when you had the problem: &quot;being linked to by more than one package&quot;."}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 216, "favorite_count": 0, "closed_date": 1494381764, "answer_count": 0, "score": 0, "last_activity_date": 1494385792, "creation_date": 1494380913, "last_edit_date": 1494385792, "question_id": 43882354, "link": "https://stackoverflow.com/questions/43882354/native-library-glib-is-being-linked-to-by-more-than-one-package-and-can-only", "closed_reason": "Duplicate", "title": "native library `glib` is being linked to by more than one package, and can only be linked to by one package", "body": "<p>Assuming this code:</p>\n\n<pre><code>extern crate glib;\n\nfn main() { \n</code></pre>\n\n<p>When I <code>cargo run</code> I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0463]: can't find crate for `glib`\n  --&gt; src/main.rs:17:1\n   |\n17 | extern crate glib;\n   | ^^^^^^^^^^^^^^^^^^ can't find crate\n</code></pre>\n\n<p>My Cargo.toml looks like</p>\n\n<pre><code>[dependencies]\ngtk = { git = \"https://github.com/gtk-rs/gtk\" }\n\n[features]\ndefault = [\"gtk/v3_10\"]\n</code></pre>\n\n<p><code>glib</code> does not appear. If I add it:</p>\n\n<pre><code>[dependencies]\ngtk = { git = \"https://github.com/gtk-rs/gtk\" }\nglib = \"0.1.3\"\n\n[features]\ndefault = [\"gtk/v3_10\"]\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: native library `glib` is being linked to by more than one package, and can only be linked to by one package\n</code></pre>\n\n<p>How can I fix this error? What does it mean and why it is displayed?</p>\n\n<p>I have looked at <strong>Cargo.lock</strong> and it seems to have <code>name =\" glib \"</code> but I do not know how to handle this situation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>//..\n[[package]]\nname = \"gdk-sys\"\nversion = \"0.3.4\"\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\ndependencies = [\n //..\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\n //..\n]\n\n[[package]]\nname = \"gio\"\nversion = \"0.1.3\"\nsource = \"git+https://github.com/gtk-rs/gio#c8b2d3bce17dc4bb5562b83a73602ebf09fe201c\"\ndependencies = [\n //..\n \"glib 0.1.3 (git+https://github.com/gtk-rs/glib)\",\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\n //..\n]\n\n[[package]]\nname = \"gio-sys\"\nversion = \"0.3.4\"\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\ndependencies = [\n //..\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\n //..\n]\n\n[[package]]\nname = \"glib\"\nversion = \"0.1.3\"\nsource = \"git+https://github.com/gtk-rs/glib#65d9f4dc60b6119a5cb9cc8390c8bfc77cd13ef5\"\ndependencies = [\n \"bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\n \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n//..\n</code></pre>\n\n<hr>\n\n<p>I do not know if you mentioned, with your comment, that I put as I have the charge.toml now and that is working, so I leave it here:</p>\n\n<p><strong>Cargo.toml</strong> This seems to solve the problem but I do not know if it is the right way</p>\n\n<pre><code>[package]\n//..\n\n[dependencies]\ngtk = { git = \"https://github.com/gtk-rs/gtk\" }\nglib = { git = \"https://github.com/gtk-rs/glib\" }\n\n[features]\ndefault = [\"gtk/v3_10\"]\n</code></pre>\n\n<hr>\n\n<p>Full Cargo.lock <em>before</em> in show code snippet</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>[root]\r\nname = \"test_thread_gtk\"\r\nversion = \"0.1.0\"\r\ndependencies = [\r\n \"gtk 0.1.3 (git+https://github.com/gtk-rs/gtk)\",\r\n]\r\n\r\n[[package]]\r\nname = \"atk-sys\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\r\ndependencies = [\r\n \"bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"bitflags\"\r\nversion = \"0.5.0\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\n\r\n[[package]]\r\nname = \"bitflags\"\r\nversion = \"0.8.2\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\n\r\n[[package]]\r\nname = \"c_vec\"\r\nversion = \"1.2.1\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\n\r\n[[package]]\r\nname = \"cairo-rs\"\r\nversion = \"0.1.3\"\r\nsource = \"git+https://github.com/gtk-rs/cairo#680ccfdb1ea4509d42a0333bd5bd9d43d75db077\"\r\ndependencies = [\r\n \"c_vec 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"cairo-sys-rs 0.3.4 (git+https://github.com/gtk-rs/cairo)\",\r\n \"glib 0.1.3 (git+https://github.com/gtk-rs/glib)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"cairo-sys-rs\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/cairo#680ccfdb1ea4509d42a0333bd5bd9d43d75db077\"\r\ndependencies = [\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gdk\"\r\nversion = \"0.5.3\"\r\nsource = \"git+https://github.com/gtk-rs/gdk#a585b1f09b0f059f2d6a14862258d374564c1ce3\"\r\ndependencies = [\r\n \"bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"cairo-rs 0.1.3 (git+https://github.com/gtk-rs/cairo)\",\r\n \"cairo-sys-rs 0.3.4 (git+https://github.com/gtk-rs/cairo)\",\r\n \"gdk-pixbuf 0.1.3 (git+https://github.com/gtk-rs/gdk-pixbuf)\",\r\n \"gdk-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gio 0.1.3 (git+https://github.com/gtk-rs/gio)\",\r\n \"glib 0.1.3 (git+https://github.com/gtk-rs/glib)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pango 0.1.3 (git+https://github.com/gtk-rs/pango)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gdk-pixbuf\"\r\nversion = \"0.1.3\"\r\nsource = \"git+https://github.com/gtk-rs/gdk-pixbuf#09fafcfc515b9866d4aa88b026cc2261bf322350\"\r\ndependencies = [\r\n \"gdk-pixbuf-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"glib 0.1.3 (git+https://github.com/gtk-rs/glib)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gdk-pixbuf-sys\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\r\ndependencies = [\r\n \"bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"gio-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gdk-sys\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\r\ndependencies = [\r\n \"bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"cairo-sys-rs 0.3.4 (git+https://github.com/gtk-rs/cairo)\",\r\n \"gdk-pixbuf-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gio-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pango-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gio\"\r\nversion = \"0.1.3\"\r\nsource = \"git+https://github.com/gtk-rs/gio#c8b2d3bce17dc4bb5562b83a73602ebf09fe201c\"\r\ndependencies = [\r\n \"bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"gio-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"glib 0.1.3 (git+https://github.com/gtk-rs/glib)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gio-sys\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\r\ndependencies = [\r\n \"bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"glib\"\r\nversion = \"0.1.3\"\r\nsource = \"git+https://github.com/gtk-rs/glib#65d9f4dc60b6119a5cb9cc8390c8bfc77cd13ef5\"\r\ndependencies = [\r\n \"bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"glib-sys\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\r\ndependencies = [\r\n \"bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gobject-sys\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\r\ndependencies = [\r\n \"bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gtk\"\r\nversion = \"0.1.3\"\r\nsource = \"git+https://github.com/gtk-rs/gtk#25f753392840348645855f60cbd08521043d5926\"\r\ndependencies = [\r\n \"bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"cairo-rs 0.1.3 (git+https://github.com/gtk-rs/cairo)\",\r\n \"cairo-sys-rs 0.3.4 (git+https://github.com/gtk-rs/cairo)\",\r\n \"gdk 0.5.3 (git+https://github.com/gtk-rs/gdk)\",\r\n \"gdk-pixbuf 0.1.3 (git+https://github.com/gtk-rs/gdk-pixbuf)\",\r\n \"gdk-pixbuf-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gdk-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gio 0.1.3 (git+https://github.com/gtk-rs/gio)\",\r\n \"gio-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"glib 0.1.3 (git+https://github.com/gtk-rs/glib)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gtk-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pango 0.1.3 (git+https://github.com/gtk-rs/pango)\",\r\n]\r\n\r\n[[package]]\r\nname = \"gtk-sys\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\r\ndependencies = [\r\n \"atk-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"cairo-sys-rs 0.3.4 (git+https://github.com/gtk-rs/cairo)\",\r\n \"gdk-pixbuf-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gdk-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gio-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pango-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"lazy_static\"\r\nversion = \"0.2.8\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\n\r\n[[package]]\r\nname = \"libc\"\r\nversion = \"0.2.22\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\n\r\n[[package]]\r\nname = \"pango\"\r\nversion = \"0.1.3\"\r\nsource = \"git+https://github.com/gtk-rs/pango#485658b9479671818c8d15877d2078f12c71ec78\"\r\ndependencies = [\r\n \"bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"glib 0.1.3 (git+https://github.com/gtk-rs/glib)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pango-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n]\r\n\r\n[[package]]\r\nname = \"pango-sys\"\r\nversion = \"0.3.4\"\r\nsource = \"git+https://github.com/gtk-rs/sys#9556f8fe2dd00cfce05614b290a09d683b4b4209\"\r\ndependencies = [\r\n \"bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\",\r\n \"libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"pkg-config\"\r\nversion = \"0.3.9\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\n\r\n[[package]]\r\nname = \"winapi\"\r\nversion = \"0.2.8\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\n\r\n[metadata]\r\n\"checksum atk-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\" = \"&lt;none&gt;\"\r\n\"checksum bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4f67931368edf3a9a51d29886d245f1c3db2f1ef0dcc9e35ff70341b78c10d23\"\r\n\"checksum bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1370e9fc2a6ae53aea8b7a5110edbd08836ed87c88736dfabccade1c2b44bff4\"\r\n\"checksum c_vec 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6237ac5a4b1e81c213c24c6437964c61e646df910a914b4ab1487b46df20bd13\"\r\n\"checksum cairo-rs 0.1.3 (git+https://github.com/gtk-rs/cairo)\" = \"&lt;none&gt;\"\r\n\"checksum cairo-sys-rs 0.3.4 (git+https://github.com/gtk-rs/cairo)\" = \"&lt;none&gt;\"\r\n\"checksum gdk 0.5.3 (git+https://github.com/gtk-rs/gdk)\" = \"&lt;none&gt;\"\r\n\"checksum gdk-pixbuf 0.1.3 (git+https://github.com/gtk-rs/gdk-pixbuf)\" = \"&lt;none&gt;\"\r\n\"checksum gdk-pixbuf-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\" = \"&lt;none&gt;\"\r\n\"checksum gdk-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\" = \"&lt;none&gt;\"\r\n\"checksum gio 0.1.3 (git+https://github.com/gtk-rs/gio)\" = \"&lt;none&gt;\"\r\n\"checksum gio-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\" = \"&lt;none&gt;\"\r\n\"checksum glib 0.1.3 (git+https://github.com/gtk-rs/glib)\" = \"&lt;none&gt;\"\r\n\"checksum glib-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\" = \"&lt;none&gt;\"\r\n\"checksum gobject-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\" = \"&lt;none&gt;\"\r\n\"checksum gtk 0.1.3 (git+https://github.com/gtk-rs/gtk)\" = \"&lt;none&gt;\"\r\n\"checksum gtk-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\" = \"&lt;none&gt;\"\r\n\"checksum lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3b37545ab726dd833ec6420aaba8231c5b320814b9029ad585555d2a03e94fbf\"\r\n\"checksum libc 0.2.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"babb8281da88cba992fa1f4ddec7d63ed96280a1a53ec9b919fd37b53d71e502\"\r\n\"checksum pango 0.1.3 (git+https://github.com/gtk-rs/pango)\" = \"&lt;none&gt;\"\r\n\"checksum pango-sys 0.3.4 (git+https://github.com/gtk-rs/sys)\" = \"&lt;none&gt;\"\r\n\"checksum pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3a8b4c6b8165cd1a1cd4b9b120978131389f64bdaf456435caa41e630edba903\"\r\n\"checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}, {"tags": ["rust", "gtk", "gtk-rs"], "comments": [{"owner": {"reputation": 1862, "user_id": 3109776, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87db024fd752fcee30ae94a18d526dd0?s=128&d=identicon&r=PG", "display_name": "AndreLDM", "link": "https://stackoverflow.com/users/3109776/andreldm"}, "edited": false, "score": 2, "creation_date": 1494427769, "post_id": 43881251, "comment_id": 74825825, "body": "Take a look at <a href=\"https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add\" rel=\"nofollow noreferrer\">g_idle_add</a>"}, {"owner": {"reputation": 752, "user_id": 7496656, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zMGuk.jpg?s=128&g=1", "display_name": "Jan Zerebecki", "link": "https://stackoverflow.com/users/7496656/jan-zerebecki"}, "edited": false, "score": 1, "creation_date": 1494428367, "post_id": 43881251, "comment_id": 74826343, "body": "GTK is not thread safe and thus code registered with <a href=\"http://gtk-rs.org/docs/glib/fn.idle_add.html\" rel=\"nofollow noreferrer\">idle_add</a> will be called on the main thread. But code that never calls GTK can run in a thread like you did, so your suggestion is fine. Does this answer your question?"}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 752, "user_id": 7496656, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zMGuk.jpg?s=128&g=1", "display_name": "Jan Zerebecki", "link": "https://stackoverflow.com/users/7496656/jan-zerebecki"}, "edited": false, "score": 0, "creation_date": 1494431585, "post_id": 43881251, "comment_id": 74828652, "body": "@JanZerebecki Thanks for your comment, after this question, even worked as a new thread, I was looking for yesterday and found <code>glib::idle_add</code> As you also comment and I had some errors when trying to use it -&gt; <a href=\"http://stackoverflow.com/questions/43882354/native-library-glib-is-being-linked-to-by-more-than-one-package-and-can-only\" title=\"native library glib is being linked to by more than one package and can only\">stackoverflow.com/questions/43882354/&hellip;</a> Maybe I want to have a look. Thanks for your time"}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 1862, "user_id": 3109776, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87db024fd752fcee30ae94a18d526dd0?s=128&d=identicon&r=PG", "display_name": "AndreLDM", "link": "https://stackoverflow.com/users/3109776/andreldm"}, "edited": false, "score": 0, "creation_date": 1494431742, "post_id": 43881251, "comment_id": 74828751, "body": "@AndreLDM Thanks for your comment And its link, but JanZerebecki, put the rust-rs link, maybe it is more useful for other users but thanks"}, {"owner": {"reputation": 10263, "user_id": 518853, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IjKPw.png?s=128&g=1", "display_name": "liberforce", "link": "https://stackoverflow.com/users/518853/liberforce"}, "edited": false, "score": 0, "creation_date": 1494501467, "post_id": 43881251, "comment_id": 74860921, "body": "Just a comment, if you want to share some code, it&#39;s probably a better idea to program in english. Function names are in english and it&#39;s not a good idea for readability to mix several languages."}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 710, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1494382948, "creation_date": 1494371836, "last_edit_date": 1494382948, "question_id": 43881251, "link": "https://stackoverflow.com/questions/43881251/how-can-i-integrate-code-into-the-gtk-main-loop", "title": "How can I integrate code into the GTK main loop?", "body": "<p>I have working code without a GUI which manages some threads. Now I want to integrate it with a GUI created in GTK. It builds the GUI with <code>test_glade</code>  which makes use of <code>gtk::main</code>:</p>\n\n<pre><code>fn main() {\n\n    //..\n    test_glade();\n    //..\n\n    // Question about this\n    while estado &lt; 4 {\n\n        if *count.lock().unwrap() == arc_pref.cantidad {\n            estado = 3;     \n        }else if estado == 2{\n            estado = 1;\n        }else if estado == 1{\n            estado = 2;\n        }else if *count.lock().unwrap() == 0 &amp;&amp; estado == 3{\n            estado = 1;\n        }\n        //..\n\n        estados(count.clone(), arc_pref.clone(), estado).join();\n    }\n\n}\n\nfn test_glade(){\n\n    gtk::init();  \n    //..\n    window.show_all();  \n    gtk::main();//main loop gtk\n}\n//..\n</code></pre>\n\n<p>After looking, I see that this is the main loop, so my code does not run.</p>\n\n<pre><code>//..\ntest_glade();\n//..\n\n// Question about this\nwhile estado &lt; 4 {\n    //..\n    estados(count.clone(), arc_pref.clone(), estado).join();\n}\n</code></pre>\n\n<p>How can I integrate my code which uses some threads into the GTK main loop?</p>\n\n<p>For now I have created a new thread, and I have put the code inside the thread, and it seems to work:</p>\n\n<pre><code>fn test_glade(){\n\n    gtk::init();  \n    //..\n    thread::spawn(move|| {\n        //code Question\n\n    });\n    //..\n    window.show_all();  \n    gtk::main();//main loop gtk\n}\n//..\n</code></pre>\n"}, {"tags": ["file-io", "rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 3, "creation_date": 1494359876, "post_id": 43878672, "comment_id": 74792588, "body": "You&#39;re missing the <code>Ok</code> branch of your match. So the match block expression can only evaluate to the panic!() which isn&#39;t a &#39;known type&#39; per the error."}, {"owner": {"reputation": 133, "user_id": 89306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89efd55e84616b730cad47fed31c240c?s=128&d=identicon&r=PG", "display_name": "Reuben", "link": "https://stackoverflow.com/users/89306/reuben"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1494362457, "post_id": 43878672, "comment_id": 74793944, "body": "That was it, thank you! :) I guess I should be more literal when copying examples. If you submit as an answer I&#39;ll accept it."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1494364461, "post_id": 43878672, "comment_id": 74794924, "body": "@turbulencetoo Isn&#39;t the compiler supposed to complain when a match arm is missing? I suspect the compiler is, in an attempt to temporarily ignore an error and provide more useful diagnostic, in fact reporting a <i>less</i> useful error. When you remove the second <code>match</code> (and the definition of <code>v</code>), the compiler correctly complains about non-exhaustive patterns with <code>Ok(_)</code> not being covered."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1494364659, "post_id": 43878672, "comment_id": 74795016, "body": "right!? I&#39;m not really proficient enough to explain exactly what&#39;s going on which is why I left my explanation as a comment."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1494364959, "post_id": 43878672, "comment_id": 74795148, "body": "@user4815162342 I don&#39;t think the compiler is holding onto the error, it&#39;s just &quot;normal&quot; type inference. Because there&#39;s no <code>Ok</code> case, the type of <code>file</code> can&#39;t be inferred, so that error is reported first."}], "answers": [{"comments": [{"owner": {"reputation": 133, "user_id": 89306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89efd55e84616b730cad47fed31c240c?s=128&d=identicon&r=PG", "display_name": "Reuben", "link": "https://stackoverflow.com/users/89306/reuben"}, "edited": false, "score": 0, "creation_date": 1494375153, "post_id": 43880060, "comment_id": 74798184, "body": "Sorry for including the <code>let mut v = Vec::new();</code>, I was experimenting with another approach to see why the error was happening and forgot to remove that before uploading. Thanks for the very complete response and link. :)"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1494645827, "post_id": 43880060, "comment_id": 74930396, "body": "@Shepmaster just wondering why you chose <code>*.unwrap_or_else()</code> instead of <code>*.expect(). </code> Seems like the inclusion of the specific error message <code>|e|</code> does not contribute much since the text of the message tells the story. Just was wondering if <code>.expect()</code> would be more economical. Or could you use <code>?</code> as in <code>file.read_to_string(&amp;mut s)?;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1494648907, "post_id": 43880060, "comment_id": 74930816, "body": "@krishnab No, you <a href=\"http://stackoverflow.com/q/30555477/155423\">cannot use <code>?</code> in a function that doesn&#39;t return <code>Result</code></a>. The important thing here was the use of <code>path</code> in the first failure case; the error message doesn&#39;t include that. The second case was done just for consistency."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1539008970, "last_edit_date": 1539008970, "creation_date": 1494364875, "answer_id": 43880060, "question_id": 43878672, "link": "https://stackoverflow.com/questions/43878672/type-deduction-error-when-reading-from-file/43880060#43880060", "title": "Type deduction error when reading from file", "body": "<p>You have multiple overlapping issues. Whenever debugging a programming problem, it helps to create a <a href=\"/help/mcve\">Minimal, Complete Verifiable Example</a>.</p>\n\n<p>Start by commenting out <code>match file.read_to_string(&amp;mut s) { /* ... */ }</code>. Then you will get another error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:15:17\n   |\n15 |     let mut v = Vec::new();\n   |         -----   ^^^^^^^^ cannot infer type for `T`\n   |         |\n   |         consider giving `v` a type\n</code></pre>\n\n<p>Comment out that line too, giving:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0004]: non-exhaustive patterns: `Ok(_)` not covered\n --&gt; src/main.rs:6:22\n  |\n6 |     let file = match std::fs::File::open(&amp;path) {\n  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ pattern `Ok(_)` not covered\n</code></pre>\n\n<p>This is your real issue. <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow noreferrer\"><code>Result</code></a> is an enum with two values, <code>Ok</code> and <code>Err</code>. You have to handle all variants in a match.</p>\n\n<p>In this case, it's easiest to use <code>unwrap_or_else</code>:</p>\n\n<pre><code>let file = std::fs::File::open(\"input.txt\").unwrap_or_else(|e| {\n    panic!(\n        \"Failed to read file {}: {}\",\n        path.display(),\n        e.description()\n    )\n});\n</code></pre>\n\n<p>You can remove the unused vector and apply the same <code>unwrap_or_else</code> to the other failure case. You then need to:</p>\n\n<ol>\n<li>Import <code>std::io::Read</code>.</li>\n<li>Declare <code>file</code> as mutable.</li>\n</ol>\n\n<p>You can also:</p>\n\n<ol>\n<li>Print an error directly using <code>{}</code>.</li>\n<li>Pass a string slice to <code>File::open</code>.</li>\n</ol>\n\n\n\n<pre><code>use std::io::Read;\n\nfn main() {\n    let path = \"input.txt\";\n    let mut file = std::fs::File::open(path).unwrap_or_else(|e| {\n        panic!(\"Failed to read file {}: {}\", path, e);\n    });\n\n    let mut s = String::new();\n    file.read_to_string(&amp;mut s).unwrap_or_else(|e| {\n        panic!(\"Failed to read file contents: {}\", e);\n    });\n\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>Compare your code against <a href=\"https://stackoverflow.com/q/31192956/155423\">What&#39;s the de-facto way of reading and writing files in Rust 1.x?</a> as well.</p>\n"}], "owner": {"reputation": 133, "user_id": 89306, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89efd55e84616b730cad47fed31c240c?s=128&d=identicon&r=PG", "display_name": "Reuben", "link": "https://stackoverflow.com/users/89306/reuben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 0, "accepted_answer_id": 43880060, "answer_count": 1, "score": 0, "last_activity_date": 1539008970, "creation_date": 1494359185, "last_edit_date": 1494361354, "question_id": 43878672, "link": "https://stackoverflow.com/questions/43878672/type-deduction-error-when-reading-from-file", "title": "Type deduction error when reading from file", "body": "<p>According to <a href=\"http://rustbyexample.com/std_misc/file/open.html\" rel=\"nofollow noreferrer\">multiple</a> <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\">sources</a>, I believe this is the correct way to read a string from a file:</p>\n\n<pre><code>use std::error::Error;\n\nfn main() {\n    let path = std::path::Path::new(\"input.txt\");\n\n    let file = match std::fs::File::open(&amp;path) {\n        Err(e) =&gt; {\n            panic!(\"Failed to read file {}: {}\",\n                   path.display(),\n                   e.description())\n        }\n    };\n\n    let mut s = String::new();\n    let mut v = Vec::new();\n    match file.read_to_string(&amp;mut s) {\n        Err(e) =&gt; panic!(\"Failed to read file contents: {}\", e.description()),\n    }\n\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>But this code produces an error using Rust 1.17.0 so I must be missing something:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the type of this value must be known in this context\n  --&gt; src/main.rs:16:11\n   |\n16 |     match file.read_to_string(&amp;mut s) {\n   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["vector", "rust", "lifetime"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 1, "creation_date": 1494347222, "post_id": 43875165, "comment_id": 74785295, "body": "Why is <code>professors</code> a reference to <code>Vec</code> rather than just a normal (owning) <code>Vec</code>? Do you actually want the ownership to be external?"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1494347427, "post_id": 43875165, "comment_id": 74785430, "body": "Ah good point. I think I just got confused between the &amp;self and the inclusion of the vector. Yeah, that makes sense."}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1494347457, "post_id": 43875165, "comment_id": 74785451, "body": "I will try that. But do you know how to add a lifetime to a vector? I looked around in the documentation but could not find it."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 1, "creation_date": 1494347758, "post_id": 43875165, "comment_id": 74785636, "body": "you can&#39;t do it. A lifetime describes a constraint for your code that you are asking the compiler to verify, you can&#39;t force a lifetime. <a href=\"https://doc.rust-lang.org/book/lifetimes.html\" rel=\"nofollow noreferrer\">As the book puts it &quot;lifetimes are descriptive, not prescriptive&quot;</a>; you can&#39;t create a <code>Vec</code> inside <code>default</code> and have a reference to it escape the method"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1494347849, "post_id": 43875165, "comment_id": 74785715, "body": "Okay I see. I did not see that in the book. Thanks for the suggestions @PaoloFalabella"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1494347943, "post_id": 43875165, "comment_id": 74785756, "body": "@ildjarn Okay, I think I am getting a better picture of the how this works in Rust. Thanks for the kind feedback."}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494350621, "post_id": 43875165, "comment_id": 74787264, "body": "I do not know very well what you want to achieve in the end, but maybe I can use <code>use std::cell::RefCell;</code> In this question there are some links and an answer that maybe is what you are looking for <a href=\"http://stackoverflow.com/questions/36413364/as-i-can-make-the-vector-is-mutable-inside-struct\" title=\"as i can make the vector is mutable inside struct\">stackoverflow.com/questions/36413364/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 1, "creation_date": 1494352726, "post_id": 43876030, "comment_id": 74788383, "body": "Ahh, thanks for the guidance here. Yes, I will make sure to shorten my code samples in the future. I really appreciate your thorough answers. They really help a lot. The biggest issue for newbies, like me, to a language are good examples of well written code. So I think I will go through some more of the past answers on Rust questions to find good examples. Hopefully that will improve my understanding of the lifetimes and borrowing, etc. :)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1494349971, "last_edit_date": 1495541436, "creation_date": 1494349971, "answer_id": 43876030, "question_id": 43875165, "link": "https://stackoverflow.com/questions/43875165/trouble-setting-the-lifetime-on-a-new-empty-vector/43876030#43876030", "title": "trouble setting the lifetime on a new empty vector", "body": "<p>Reduced, you end up with something like</p>\n\n<pre><code>struct Professor&lt;'a&gt;(&amp;'a u8);\n\npub struct ProfessorGroup&lt;'a&gt; {\n    professors: &amp;'a Vec&lt;Professor&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Default for ProfessorGroup&lt;'a&gt; {\n    fn default() -&gt; ProfessorGroup&lt;'a&gt; {\n        ProfessorGroup {\n            professors: &amp;mut Vec&lt;'a&gt;::&lt;Professor&lt;'a&gt;&gt;::new(), \n        }\n    }\n}\n</code></pre>\n\n<p>In order: </p>\n\n<ol>\n<li>As mentioned, you can't return a reference. Convert the member to a <code>Vec</code>, not a <code>&amp;Vec</code>. Additionally, you want to match <code>&amp;mut value</code> to <code>&amp;mut Type</code> and <code>&amp;value</code> to <code>&amp;Type</code>, don't cross them.</li>\n<li>Remove the first <code>&lt;'a&gt;</code> to get: <code>Vec::&lt;Professor&lt;'a&gt;&gt;::new()</code>. This compiles.</li>\n<li>Realize you don't have to do that because the entire point of type inference is to reduce the amount of stuff you tell the compiler. You can just type <code>Vec::new()</code>.</li>\n</ol>\n\n<p><code>Vec</code> also implements <code>Default</code> itself, so for this small example, you can just <code>#[derive(Default)]</code>. If it makes sense, you could just implement (or derive) <code>Default</code> for all the component types.</p>\n\n<hr>\n\n<blockquote>\n  <p>I understand about lifetimes and borrowing. That is not the problem. </p>\n</blockquote>\n\n<p>You may wish to re-evaluate your confidence in this statement, due to this part of the line:</p>\n\n<pre><code>professors: &amp;mut Vec&lt;'a&gt;::&lt;Professor&lt;'a&gt;&gt;::new()\n//          ^^^^\n</code></pre>\n\n<p>You <a href=\"https://stackoverflow.com/q/32682876/155423\"><em>cannot</em> return a reference to a value created in a function</a>, no exceptions. Lifetimes prevent this.</p>\n\n<p>You should also review how to create a <a href=\"/help/mcve\">Minimal, Complete, Verifiable Example</a>. In this case, why do you have <strong>8 fields</strong> that have nothing to do with your problem? Why did you not share the definition of all the types you included anyway? When trying to understand <em>any</em> programming problem, reduce it until only the problem remains. </p>\n"}], "owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 889, "favorite_count": 0, "accepted_answer_id": 43876030, "answer_count": 1, "score": 1, "last_activity_date": 1494349971, "creation_date": 1494347066, "last_edit_date": 1494349357, "question_id": 43875165, "link": "https://stackoverflow.com/questions/43875165/trouble-setting-the-lifetime-on-a-new-empty-vector", "title": "trouble setting the lifetime on a new empty vector", "body": "<p>I am trying to set the lifetime on a new vector of a particular type. I understand about lifetimes and borrowing. That is not the problem. The problem is the actual syntax to set the lifetime to <code>&lt;'a&gt;.</code> </p>\n\n<p>I keep getting an error about the vector not living long enough, but when I try and set the lifetime I get a different error. Here is what my code looks like. </p>\n\n<pre><code>#[derive(Clone, Copy, Debug)]\npub struct ProfessorGroup&lt;'a&gt; {\n    name: &amp;'a str,\n    gender: Gender,\n    professors: &amp;'a Vec&lt;Professor&lt;'a&gt;&gt;,\n    rank: ProfessorRank,\n    attrition_rate:f64,\n    promotion_rate:f64,\n    hiring_rate:f64,\n    current_number:i32,\n}\nimpl&lt;'a&gt; Default for ProfessorGroup&lt;'a&gt;{\n    fn default() -&gt; ProfessorGroup&lt;'a&gt;{\n        ProfessorGroup {\n            name: \"uninitialized group\",\n            gender: Gender::Female,\n            professors:&amp;mut Vec&lt;'a&gt;::&lt;Professor&lt;'a&gt;&gt;::new(),//PROBLEM CODE\n            rank: ProfessorRank::Assistant,\n            attrition_rate: 0.0,\n            promotion_rate: 0.0,\n            hiring_rate: 0.0,\n            current_number: 0,\n        }\n        }\n}\n</code></pre>\n\n<p>The error I am getting is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected `:`, found `&gt;`\n  --&gt; src/Actors/ProfessorGroups.rs:21:35\n   |\n21 |             professors:&amp;mut Vec&lt;'a&gt;::&lt;Professor&lt;'a&gt;&gt;::new(),\n   |                                   ^\n\nerror[E0063]: missing fields `attrition_rate`, `current_number`, `hiring_rate` and 3 other fields in initializer of `Actors::ProfessorGroups::ProfessorGroup&lt;'_&gt;`\n</code></pre>\n\n<p>The error seems to kill access to the fields below--hence the missing fields comment. </p>\n\n<p>I tried <code>professors:&amp;mut &lt;'a&gt;Vec::&lt;Professor&lt;'a&gt;&gt;::new(),</code> but that gave the same error. </p>\n\n<p>I took out the lifetime altogether <code>professors:&amp;mut Vec::&lt;Professor&lt;'a&gt;&gt;::new(),</code> but that just gave me an error that the vector was not living long enough. </p>\n\n<p>I looked through the documentation but the closest I found was something like this, which did not work either: <a href=\"https://users.rust-lang.org/t/why-cant-i-specify-type-parameters-directly-after-the-type/2365\" rel=\"nofollow noreferrer\">https://users.rust-lang.org/t/why-cant-i-specify-type-parameters-directly-after-the-type/2365</a></p>\n\n<p>Can anyone see where I am making an error in the syntax?</p>\n"}, {"tags": ["c", "windows", "gcc", "rust"], "comments": [{"owner": {"reputation": 15295, "user_id": 3436922, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/Y8KQX.jpg?s=128&g=1", "display_name": "LPs", "link": "https://stackoverflow.com/users/3436922/lps"}, "edited": false, "score": 1, "creation_date": 1494325001, "post_id": 43866969, "comment_id": 74769244, "body": "<code>gcc -o myprog main.c libfunc.a</code> ---&gt; <code>gcc -lfunc.a  main.c -o myprog</code>"}, {"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 1, "creation_date": 1494325258, "post_id": 43866969, "comment_id": 74769392, "body": "What happens if you use <code>gcc -o myprog main.c func.lib</code>? You are doing all of this on Windows, right - how come you don&#39;t put a .exe extension on the executable?"}, {"owner": {"reputation": 50953, "user_id": 1983495, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/aMDiK.jpg?s=128&g=1", "display_name": "Iharob Al Asimi", "link": "https://stackoverflow.com/users/1983495/iharob-al-asimi"}, "reply_to_user": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 1, "creation_date": 1494325430, "post_id": 43866969, "comment_id": 74769511, "body": "@immibis <code>--target=i686-unknown-linux-gnu</code> I don&#39;t think it&#39;s on windows."}, {"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 1, "creation_date": 1494325853, "post_id": 43866969, "comment_id": 74769786, "body": "Well then &quot;My active toolchain: stable-i686-pc-windows-gnu&quot; - why are you using a Windows toolchain on Linux? Are you trying to cross-compile?"}, {"owner": {"reputation": 131, "user_id": 7960238, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-uQnSAq5nyA8/AAAAAAAAAAI/AAAAAAAAAK4/SZkxKXvhwTg/photo.jpg?sz=128", "display_name": "Anton Klochkov", "link": "https://stackoverflow.com/users/7960238/anton-klochkov"}, "reply_to_user": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 0, "creation_date": 1494327173, "post_id": 43866969, "comment_id": 74770689, "body": "@immibis I tried using i686-unknown-linux-gnu in Linux. If I use: <code>gcc -o myprog main.c func.lib</code>, then I do: <code>gcc -o myprog main.c func.lib -lgcc_eh -lshell32 -luserenv -lws2_32 -ladvapi32</code> But I get an error: <code>undefined reference to __ms_vsnprintf&#39;</code>"}, {"owner": {"reputation": 539, "user_id": 2805824, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tBgwo.gif?s=128&g=1", "display_name": "Gaurav Pathak", "link": "https://stackoverflow.com/users/2805824/gaurav-pathak"}, "edited": false, "score": 0, "creation_date": 1494330509, "post_id": 43866969, "comment_id": 74773000, "body": "Try using <code>gcc -o myprog main.c -L &lt;&#47;path&#47;to&#47;libfunc.a&gt; -lfunc</code>"}, {"owner": {"reputation": 80047, "user_id": 169346, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/645dbb4f7ba1ff9d7ff2de02f68fbe9c?s=128&d=identicon&r=PG", "display_name": "JeremyP", "link": "https://stackoverflow.com/users/169346/jeremyp"}, "edited": false, "score": 0, "creation_date": 1494337723, "post_id": 43866969, "comment_id": 74778438, "body": "Does Rust know that C expects all functions to start with an underscore? i.e. what if you call the Rust function <code>_double_input(...)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 131, "user_id": 7960238, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-uQnSAq5nyA8/AAAAAAAAAAI/AAAAAAAAAK4/SZkxKXvhwTg/photo.jpg?sz=128", "display_name": "Anton Klochkov", "link": "https://stackoverflow.com/users/7960238/anton-klochkov"}, "edited": false, "score": 0, "creation_date": 1494348605, "post_id": 43873046, "comment_id": 74786123, "body": "Thank you very much! It works! I can not believe it!:)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1494346349, "last_edit_date": 1494346349, "creation_date": 1494341375, "answer_id": 43873046, "question_id": 43866969, "link": "https://stackoverflow.com/questions/43866969/how-do-i-create-a-static-library-in-rust-to-link-with-c-code-in-windows/43873046#43873046", "title": "How do I create a static library in Rust to link with C code in Windows?", "body": "<p>TL;DR: Install a different flavor of GCC</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>pacman -R local/gcc\npacman -S mingw-w64-i686-gcc\n</code></pre>\n\n<hr>\n\n<p>Half-informed guessing follows...</p>\n\n<p>After some help on Rust IRC, it sounds like the issue is that the MSYS2 / MinGW <code>gcc</code> is a \"stock\" compiler, one without special knowledge of MSYS / MinGW / Windows special features.</p>\n\n<p><code>mingw-w64-i686-gcc</code> (or <code>mingw-w64-x86_64-gcc</code>) <em>does</em> know about Windows-specific symbols, which libbacktrace, a part of the Rust distribution, requires.</p>\n\n<p>The \"correct\" GCC build should have the string \"Built by MSYS2 project\" in the <code>gcc --version</code> output.</p>\n\n<hr>\n\n<p>With that, the full process looks like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc --version --verbose\nrustc 1.17.0 (56124baa9 2017-04-24)\nhost: i686-pc-windows-gnu\n$ gcc --version\ngcc.exe (Rev2, Built by MSYS2 project) 6.3.0\n\n$ rustc --crate-type=staticlib func.rs\nnote: link against the following native artifacts when linking against this static library\nnote: the order and any duplication can be significant on some platforms, and so may need to be preserved\nnote: library: advapi32\nnote: library: ws2_32\nnote: library: userenv\nnote: library: shell32\nnote: library: gcc_eh\n$ gcc -o main main.c func.lib -ladvapi32 -lws2_32 -luserenv -lshell32 -lgcc_eh\n$ ./main\n4 * 2 = 8\n</code></pre>\n"}], "owner": {"reputation": 131, "user_id": 7960238, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-uQnSAq5nyA8/AAAAAAAAAAI/AAAAAAAAAK4/SZkxKXvhwTg/photo.jpg?sz=128", "display_name": "Anton Klochkov", "link": "https://stackoverflow.com/users/7960238/anton-klochkov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4196, "favorite_count": 2, "accepted_answer_id": 43873046, "answer_count": 1, "score": 12, "last_activity_date": 1544284907, "creation_date": 1494324566, "last_edit_date": 1544284907, "question_id": 43866969, "link": "https://stackoverflow.com/questions/43866969/how-do-i-create-a-static-library-in-rust-to-link-with-c-code-in-windows", "title": "How do I create a static library in Rust to link with C code in Windows?", "body": "<p>I have 2 files:</p>\n\n<p><strong>func.rs</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern fn double_input(input: i32) -&gt; i32 { input * 2 }\n</code></pre>\n\n<p><strong>main.c</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdint.h&gt;\n#include &lt;stdio.h&gt;\n\nextern int32_t double_input(int32_t input);\n\nint main() {\n   int input = 4;\n   int output = double_input(input);\n   printf(\"%d * 2 = %d\\n\", input, output);\n   return 0;\n}\n</code></pre>\n\n<p>I want to create static lib in Rust and link the library to main.c. My active toolchain is <code>stable-i686-pc-windows-gnu</code>. I'm doing this in cmd:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc --crate-type=staticlib func.rs \n</code></pre>\n\n<p>But the file <strong>func.lib</strong> is created, so I do:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>gcc -o myprog main.c func.lib -lgcc_eh -lshell32 -luserenv -lws2_32 -ladvapi32\n</code></pre>\n\n<p>But I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>undefined reference to __ms_vsnprintf'\n</code></pre>\n\n<p>If I do:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc --crate-type=staticlib --target=i686-unknown-linux-gnu lib.rs\n</code></pre>\n\n<p>Then <strong>libfunc.a</strong> is created, but when I do:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>gcc -o myprog main.c libfunc.a\n</code></pre>\n\n<p>I get an error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>main.c:(.text+0x1e): undefined reference to `double_input'\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["struct", "rust", "fold"], "answers": [{"comments": [{"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1494291521, "post_id": 43859383, "comment_id": 74754381, "body": "Oh okay. I will give that a shot. Thanks for the direction on this."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1494291834, "last_edit_date": 1494291834, "creation_date": 1494291228, "answer_id": 43859383, "question_id": 43859333, "link": "https://stackoverflow.com/questions/43859333/rust-using-higher-order-function-on-a-struct-embedded-in-another-struct/43859383#43859383", "title": "Rust using higher order function on a struct embedded in another struct", "body": "<p>The symbols between the vertical bars in a closure are parameter names, not arbitrary expressions.</p>\n\n<p><code>fold</code> passes two arguments to the closure: the current accumulator and an item emitted by the iterator (which in this case is a reference to an item in the vector). A good name for the second argument here would be <code>professor_group</code>. We can then use the name <code>professor_group</code> to perform any operation on the current <code>ProfessorGroup</code>, e.g. access one of its fields.</p>\n\n<pre><code>pub fn get_professor_count(&amp;mut self) -&gt; i32 {\n    self.professors.iter().fold(0, |sum, professor_group| sum + professor_group.current_number)\n}\n</code></pre>\n"}], "owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 43859383, "answer_count": 1, "score": 1, "last_activity_date": 1494291834, "creation_date": 1494290829, "last_edit_date": 1494291694, "question_id": 43859333, "link": "https://stackoverflow.com/questions/43859333/rust-using-higher-order-function-on-a-struct-embedded-in-another-struct", "title": "Rust using higher order function on a struct embedded in another struct", "body": "<p>I am writing some simulations to look at the hiring practices in university departments. So I have different groups of professors in a department which I contain in a <code>struct.</code> There are multiple groups in the department. So each professor group is made up of members at different Professor Ranks: Full, Associate, or Assistant professors.</p>\n\n<p>To group all of the professors at the same rank, I created another <code>struct</code> called <code>DepartmentLevels</code> which contains a reference to a vector of the <code>ProfessorGroups</code> struct. Now each <code>ProfessorGroup</code> has an attribute <code>current_number</code> which indicates the number of professors in that group. </p>\n\n<p>So I am trying to write a method on the <code>DepartmentLevels</code> struct that sums up the professor counts for each group in the vector--and hence the total number of professors at that level. Since the vector is an iterator, I thought I could use a higher order function. The problems is trying to get the higher order function to work properly to access the nested <code>struct.</code> I was hoping someone might be able to point the way.</p>\n\n<pre><code>#[derive(Clone, Copy, Debug)]\npub struct ProfessorGroup&lt;'a&gt; {\n    name: &amp;'a str,\n    gender: Gender,\n    level: ProfessorRank,\n    attrition_rate:f64,\n    promotion_rate:f64,\n    hiring_rate:f64,\n    current_number:i32,\n}\n\n#[derive(Clone, Copy, Debug)]\npub struct DepartmentLevels&lt;'a&gt; {\n    name: &amp;'a str,\n    professors: &amp;'a Vec&lt;ProfessorGroup&lt;'a&gt;&gt;,\n    number_of_vacancies: i32,\n    number_of_promotions: i32,\n    number_of_hires: i32,\n\nimpl&lt;'a&gt; DepartmentLevels&lt;'a&gt; {\n    pub fn get_professor_count(&amp;mut self) -&gt; i32 { //PROBLEM BELOW\n        let result = self.professors.iter().fold(0,|sum, self.professors.current_number| sum + self.professors.current_number);\n        result\n    }\n}\n</code></pre>\n\n<p>The error message I am getting is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `,`, `::`, or `:`, found `.`\n  --&gt; src/DepartmentLevels/DepartmentLevels.rs:18:55\n   |\n18 |         let result = self.professors.iter().fold(0,|sum, self.professors.current_number| sum + self.professors.current_number);\n   |                                                       ^ expected one of `,`, `::`, or `:` here\n\nerror[E0424]: expected unit struct/variant or constant, found closure capture `self`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1494282145, "post_id": 43857592, "comment_id": 74752014, "body": "TL;DR: There&#39;s no guarantee that your reference to <code>Prefe</code> will live longer than the thread does. You need to transfer ownership to the thread instead. You can use <code>Arc</code> to have shared ownership, but you need to explicitly <code>.clone()</code> it before giving it away if you need to keep ownership."}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494282978, "post_id": 43857592, "comment_id": 74752259, "body": "Really your comment, it was the one that helped me do this <code>let test = Arc::new(prefe); let f = test.clone(); start(f).join(); println!(&quot;{}&quot;, test.cantidad);</code> thanks again."}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 471, "favorite_count": 0, "closed_date": 1494281901, "answer_count": 0, "score": 1, "last_activity_date": 1494281918, "creation_date": 1494279114, "last_edit_date": 1494281654, "question_id": 43857592, "link": "https://stackoverflow.com/questions/43857592/the-type-closure-does-not-fulfill-the-required-lifetime", "closed_reason": "Duplicate", "title": "the type closure does not fulfill the required lifetime", "body": "<p>I had a code similar to this:</p>\n\n<pre><code>use std::thread;\n\nfn main() {\n    let mut prefe: Prefe = Prefe::new();\n    start(&amp;prefe).join();\n    println!(\"Test {}\", prefe.cantidad);\n}\n\nfn start(pre: &amp;Prefe) -&gt; thread::JoinHandle&lt;i32&gt; {\n    thread::spawn(move || {\n        std::thread::sleep(std::time::Duration::from_secs(50));\n        let t: i32 = 3 as i32;\n        t\n    })\n}\n</code></pre>\n\n<p>But when trying to use this:</p>\n\n<pre><code>std::thread::sleep(std::time::Duration::from_secs(pre.minutos_pom_corto));\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0477]: the type `[closure@src/main.rs:15:19: 22:6 pre:&amp;Prefe]` does not fulfill the required lifetime\n  --&gt; src/main.rs:15:5\n   |\n15 |     thread::spawn(move || {\n   |     ^^^^^^^^^^^^^\n   |\n   = note: type must outlive the static lifetime\n</code></pre>\n\n<p>After reading some things and <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\">Arc</a>, I have this code which seems to work:</p>\n\n<pre><code>use std::thread;\nuse std::sync::Arc;\n\nfn main() {\n    let mut prefe: Prefe = Prefe::new();\n    let test = Arc::new(prefe);\n    start(test).join();    \n    //println!(\"Test {}\", prefe.cantidad); // &lt;- With this commented\n}\n\nfn start(pre: Arc&lt;Prefe&gt;) -&gt; thread::JoinHandle&lt;i32&gt; {\n    thread::spawn(move || {\n        std::thread::sleep(std::time::Duration::from_secs(pre.minutos_pom_corto));\n        let t: i32 = 3 as i32;\n        t\n    })\n}\n</code></pre>\n\n<p>Without commenting <code>println!(\"Test {}\", prefe.cantidad);</code>, I get this error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code> let test = Arc::new(prefe);\n    |                ----- value moved here\n</code></pre>\n\n<p>I tried the following:</p>\n\n<pre><code>//..\nlet test = Arc::new(&amp;prefe);\n//..\n\nfn start(pre: Arc&lt;&amp;Prefe&gt;) -&gt; thread::JoinHandle&lt;i32&gt; {\n</code></pre>\n\n<p>But I get an error similar to the first one</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0477]: the type `[closure@src/main.rs:19:19: 26:6 pre:std::sync::Arc&lt;&amp;Prefe&gt;]` does not fulfill the required lifetime\n  --&gt; src/main.rs:19:5\n   |\n19 |     thread::spawn(move || {\n   |     ^^^^^^^^^^^^^\n   |\n   = note: type must outlive the static lifetime\n</code></pre>\n\n<p>I tried the following changes but it still does not work:</p>\n\n<pre><code>    //..\n    let test = Arc::new(&amp;prefe);\n    start(&amp;test).join();\n    println!(\"{}\", prefe.cantidad);\n    //..\n\nfn start(pre: &amp;Arc&lt;&amp;Prefe&gt;) -&gt; thread::JoinHandle&lt;i32&gt; {\n</code></pre>\n\n\n\n<pre><code>    //..\n    let test = Arc::new(&amp;prefe);\n    let f = test.clone();\n    start(&amp;f).join();\n\n    println!(\"{}\", prefe.cantidad);\n    //..\n\nfn start(pre: &amp;Arc&lt;&amp;Prefe&gt;) -&gt; thread::JoinHandle&lt;i32&gt; {\n</code></pre>\n\n<p>How can I fix this error, or what is the correct way to do what is shown?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 131, "user_id": 2080539, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ee4a32ab9cd6aa3fe6c935875ae223da?s=128&d=identicon&r=PG", "display_name": "Przemek Hugh Kaznowski", "link": "https://stackoverflow.com/users/2080539/przemek-hugh-kaznowski"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494277169, "post_id": 43857098, "comment_id": 74750183, "body": "Thank you @Shepmaster for pointing to the correct article"}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 2, "last_activity_date": 1494324579, "last_edit_date": 1494324579, "creation_date": 1494276964, "answer_id": 43857139, "question_id": 43857098, "link": "https://stackoverflow.com/questions/43857098/how-to-return-a-instance-of-a-struct-that-uses-a-locally-declared-variable/43857139#43857139", "title": "How to return a instance of a struct that uses a locally declared variable", "body": "<p>Just switch <code>Topping.name</code> from being a <code>&amp;str</code> to being a <code>String</code>.</p>\n\n<p>You can't return a reference to the result of <code>read_line</code> (a <code>String</code>) because that <code>String</code> will get dropped at the end of <code>handle_topping</code>. You can, however, move ownership of the <code>String</code> into the struct and return a <code>Topping {name: String, veg: bool, ...}</code>.</p>\n"}], "owner": {"reputation": 131, "user_id": 2080539, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ee4a32ab9cd6aa3fe6c935875ae223da?s=128&d=identicon&r=PG", "display_name": "Przemek Hugh Kaznowski", "link": "https://stackoverflow.com/users/2080539/przemek-hugh-kaznowski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 207, "favorite_count": 0, "closed_date": 1494276967, "accepted_answer_id": 43857139, "answer_count": 1, "score": 1, "last_activity_date": 1494324579, "creation_date": 1494276792, "last_edit_date": 1494277009, "question_id": 43857098, "link": "https://stackoverflow.com/questions/43857098/how-to-return-a-instance-of-a-struct-that-uses-a-locally-declared-variable", "closed_reason": "Duplicate", "title": "How to return a instance of a struct that uses a locally declared variable", "body": "<p>I am trying to figure out how to declare a variable locally and use it in a value that is being returned. The following is the code that is causing the problem</p>\n\n<pre><code>use std::io;\nuse std::string::String;\nuse std::io::Write; // Used for flush implicitly\nuse topping::Topping;\n\npub fn read_line(stdin: io::Stdin, prompt: &amp;str) -&gt; String {\n    print!(\"{}\", prompt);\n    let _ = io::stdout().flush();\n    let mut result = String::new();\n    let _ = stdin.read_line(&amp;mut result);\n    return result;\n}\n\npub fn handle_topping&lt;'a&gt;(stdin: io::Stdin) -&gt; Topping&lt;'a&gt;{\n    let name = read_line(stdin, \"Topping name: \");\n    //let price = read_line(stdin, \"Price: \");\n    return Topping {name: &amp;name, price: 0.7, vegetarian: false};\n}\n</code></pre>\n\n<p>I have the following struct as a helper</p>\n\n<pre><code>pub struct Topping&lt;'a&gt; {\n    pub name: &amp;'a str,\n    pub vegetarian: bool,\n    pub price: f32,\n}\n</code></pre>\n\n<p>The compiler throws the following error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `name` does not live long enough\n  --&gt; src/helpers.rs:17:28\n   |\n17 |     return Topping {name: &amp;name, price: 0.7, vegetarian: false};\n   |                            ^^^^ does not live long enough\n18 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the body at 14:58...\n  --&gt; src/helpers.rs:14:59\n   |\n14 |   pub fn handle_topping&lt;'a&gt;(stdin: io::Stdin) -&gt; Topping&lt;'a&gt;{\n   |  ___________________________________________________________^ starting here...\n15 | |     let name = read_line(stdin, \"Topping name: \");\n16 | |     //let price = read_line(stdin, \"Price: \");\n17 | |     return Topping {name: &amp;name, price: 0.7, vegetarian: false};\n18 | | }\n   | |_^ ...ending here\n</code></pre>\n\n<p>I don't particularly want to change the struct, would much rather get some advice on what it is that I am not understanding.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 1053, "user_id": 4247851, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/W4hFQ.png?s=128&g=1", "display_name": "Shanavas M", "link": "https://stackoverflow.com/users/4247851/shanavas-m"}, "edited": false, "score": 0, "creation_date": 1558852442, "post_id": 43849041, "comment_id": 99232168, "body": "<a href=\"https://stackoverflow.com/a/56311216/4247851\">stackoverflow.com/a/56311216/4247851</a>"}], "answers": [{"comments": [{"owner": {"reputation": 15683, "user_id": 46571, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/79eede5b02caa81db17f34026b24a734?s=128&d=identicon&r=PG", "display_name": "pyon", "link": "https://stackoverflow.com/users/46571/pyon"}, "edited": false, "score": 0, "creation_date": 1494264616, "post_id": 43849574, "comment_id": 74743244, "body": "Oops, yes, I forgot to add <code>&amp;self</code> parameters in my original question."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1494251875, "last_edit_date": 1494251875, "creation_date": 1494251727, "answer_id": 43849574, "question_id": 43849041, "link": "https://stackoverflow.com/questions/43849041/reuse-default-method-implementations-in-trait-impls/43849574#43849574", "title": "Reuse default method implementations in trait impls", "body": "<p>You don't.</p>\n\n<p>First of all, Rust doesn't have subclassing like C++ does.  <code>Foo::run</code> isn't a thing that exists in a way you can call it.  That method body is only used when you implement <code>Foo</code> for a type and <em>don't</em> provide an implementation of the <code>run</code> method.  It is effectively copy+pasted by the compiler into each <code>impl</code> where it is needed.</p>\n\n<p>Secondly, the two examples aren't comparable because you've radically changed the meaning.  In the C++ case, you're defining an instance method.  In the Rust case, you're defining a <em>static</em> method.  Instance methods in Rust require an explicit <code>self</code> parameter.  Even if that weren't the case, though, it wouldn't change anything about the first point.</p>\n\n<p>If you want to provide some common functionality, you need to write that somewhere else.  The simplest way to do this is to use a free function like so:</p>\n\n<pre><code>trait Foo {\n    fn run(&amp;mut self) {\n        println!(\"Foo::run()\");\n    }\n}\n\nfn run_base(foo: &amp;mut Foo) {\n    println!(\"run_base()\");\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn run(&amp;mut self) {\n        run_base(self);\n        println!(\"Bar::run()\");\n    }\n}\n\nfn main() {\n    let mut bar = Bar;\n    bar.run();\n}\n</code></pre>\n"}], "owner": {"reputation": 15683, "user_id": 46571, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/79eede5b02caa81db17f34026b24a734?s=128&d=identicon&r=PG", "display_name": "pyon", "link": "https://stackoverflow.com/users/46571/pyon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 730, "favorite_count": 0, "closed_date": 1494251840, "accepted_answer_id": 43849574, "answer_count": 1, "score": 1, "last_activity_date": 1494268507, "creation_date": 1494250284, "last_edit_date": 1494268507, "question_id": 43849041, "link": "https://stackoverflow.com/questions/43849041/reuse-default-method-implementations-in-trait-impls", "closed_reason": "Duplicate", "title": "Reuse default method implementations in trait impls", "body": "<p>In C++, an overridden virtual member function can call the version defined in its base class:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>struct foo {\n  virtual void run() {\n    printf(\"printf yeah!\\n\");\n  }\n};\n\nstruct bar : foo {\n  void run() {\n    foo::run();\n    std::cout &lt;&lt; \"un-cout-h!\" &lt;&lt; std::endl;\n  }\n};\n</code></pre>\n\n<p>I want to do something similar in Rust. I have a trait containing default method definitions, and I want to reuse those definitions in impls where those methods are overridden:</p>\n\n<pre><code>trait Foo {\n    fn run(&amp;self) {\n        // do something\n    }\n}\n\nimpl Foo for Bar {\n    fn run(&amp;self) {\n        // call default implementation of Foo::run()\n        // run custom logic\n    }\n}\n</code></pre>\n\n<p>How do I do this?</p>\n\n<hr>\n\n<p><strong>Edit:</strong> The proposed solution isn't completely satisfactory. Once I override a method, I intend the overridden implementation not to be usable by third parties.</p>\n"}, {"tags": ["memory-management", "struct", "rust", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 1, "creation_date": 1494228751, "post_id": 43841773, "comment_id": 74720120, "body": "Ah this makes sense. I get why the getter function was still considered borrowing. Thanks for the tip on the Copy, Clone traits too. That is such a useful tip, as it seems the equivalent of passing/returning by value instead of by reference. I appreciate the clear explanation of the memory model in Rust as well."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1494227511, "creation_date": 1494227511, "answer_id": 43841773, "question_id": 43841496, "link": "https://stackoverflow.com/questions/43841496/rust-borrowing-issue-with-a-getter-method-on-a-struct/43841773#43841773", "title": "Rust borrowing issue with a getter method on a struct", "body": "<p>Thr problem you encounter is that neither <code>Gender</code> nor <code>ProfessorGroup</code> are <code>Copy</code>.</p>\n\n<p>Simply adding <code>#[derive(Clone, Copy)]</code> to both of them would solve your issues.</p>\n\n<hr>\n\n<p>By default Rust types are <em>affine</em>. This is a strict departure from other languages, so it takes some getting used to.</p>\n\n<p>An <em>Affine</em> type is a type that can be consumed (moved) at most once: think of it as a cake, you can't have your cake and eat it too right? A cake is affine!</p>\n\n<p>When you write <code>fn get_gender(&amp;self) -&gt; Gender { self.gender }</code> you are trying to return <code>self.gender</code>: this requires moving it out of <code>self</code> which is not allowed because <code>self</code> is not yours it's only borrowed! (You can't steal someone else cake, just look at it)</p>\n\n<p>There are multiple solutions:</p>\n\n<ul>\n<li>you can return a <em>reference</em> instead: <code>-&gt; &amp;Gender { &amp;self.gender }</code>,</li>\n<li>you can <code>clone</code> the gender (if it implements <code>Clone</code>): <code>{ self.gender.clone() }</code>,</li>\n<li>you can have <code>Gender</code> implement <code>Copy</code>.</li>\n</ul>\n\n<p>Personally, when types <em>can</em> implement <code>Copy</code>, I would recommend they do. Makes life simpler.</p>\n"}], "owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 261, "favorite_count": 0, "accepted_answer_id": 43841773, "answer_count": 1, "score": 2, "last_activity_date": 1494227511, "creation_date": 1494226485, "question_id": 43841496, "link": "https://stackoverflow.com/questions/43841496/rust-borrowing-issue-with-a-getter-method-on-a-struct", "title": "Rust borrowing issue with a getter method on a struct", "body": "<p>I am new to Rust, so am still trying to get used to the memory model of the language. </p>\n\n<p>So I am running into an error <code>cannot move out of borrowed content.</code> when I build a <code>getter</code> method on a struct. I could not quite figure out why it is, but it seems to relate to some trait on an Enum. </p>\n\n<pre><code>enum Gender{\n    Male,\n    Female,\n}\nimpl Default for Gender {\n    fn default() -&gt; Gender { Gender::Female }\n}\nimpl Clone for Gender {\n    fn clone(&amp;self) -&gt; Gender { *self }\n}\n\n\n#[derive(Default, Builder, Debug)]\n#[builder(setter(into))]\nstruct ProfessorGroup {\n    name: &amp;'static str,\n    gender:Gender,\n    level:Levels,\n    attrition_rate:f64,\n    promotion_rate:f64,\n    hiring_rate:f64,\n    current_number:u32,\n}\nimpl ProfessorGroup {\n    pub fn get_gender(&amp;self) -&gt; Gender { self.gender }\n    pub fn get_name(&amp;self) -&gt; &amp;'static str {self.name}\n    pub fn get_attrition_rate(&amp;self) -&gt; f64 {self.attrition_rate}\n</code></pre>\n\n<p>The error message I am getting has to do with the <code>Enum</code> for Gender.</p>\n\n<pre><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/Actors/ProfessorGroups.rs:42:33\n\n42 |     pub fn get_gender(&amp;self) -&gt; Gender { self.gender }\n   |                                          ^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/Actors/ProfessorGroups.rs:27:33\n   |\n27 |     fn clone(&amp;self) -&gt; Levels { *self }\n   |                                 ^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I made sure to take a reference to self. I also did not make any assignment in these functions--just getter functions--yet somehow the borrowing is getting messed up. </p>\n"}, {"tags": ["struct", "rust", "builder"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1494225168, "post_id": 43840415, "comment_id": 74718184, "body": "The book&#39;s <code>Circle</code> example is a less than ideal choice to demonstrate the builder pattern. Realistic builders often contain entirely different fields than the type they are building. For example, <code>OpenOptions</code> uses a sophisticated builder to build <code>File</code> which ends up holding a single integer. The same with <code>Command</code>, where the resulting <code>Child</code> ends up holding three file handles and a process handles, again very different than the arguments passed to the builder. A builder that just repeats the type it&#39;s building looks like somewhat of an anti-pattern."}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1494225919, "post_id": 43840415, "comment_id": 74718584, "body": "Okay, that makes sense @user4815162342. I am familiar with the types of builders where the fields differ between the builder and the object being built. Thanks for the info."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1494247751, "post_id": 43840415, "comment_id": 74732067, "body": "@user4815162342 It&#39;s certainly not an anti-pattern. One of the major use cases of a builder is that it keeps the internal representation hidden. This means that extending the builder with additional fields can be done without breaking changes."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1494253094, "post_id": 43840415, "comment_id": 74735921, "body": "@user4815162342 and remember the book is aimed at people who already know one programming language; it&#39;s not intended as an introduction to the builder pattern (or testing, or programming, or ...) but simply to the Rust-specific syntax and semantics."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494267994, "post_id": 43840415, "comment_id": 74745203, "body": "@Shepmaster Agreed, but it doesn&#39;t mean the presented example cannot be more elegant or lifelike. The current example from the book made the OP think that code duplication is inherent to builder, it just seemed like bad style. On the other hand, builder examples from the stdlib, such as <code>Command</code>, don&#39;t have that kind of duplication at all and are great examples of the pattern. But the book is developed openly, so instead of typing here I can try to think of a better example and submit a PR. :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1494268538, "post_id": 43840415, "comment_id": 74745502, "body": "@user4815162342 looks like it&#39;s been removed from the second edition of the book anyway."}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494268909, "post_id": 43840415, "comment_id": 74745691, "body": "@Shepmaster oh is there a second edition of the book. If it is not too much trouble, could you provide the link? The github link only references the first edition of the book <a href=\"https://github.com/rust-lang/book\" rel=\"nofollow noreferrer\">github.com/rust-lang/book</a>"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494268992, "post_id": 43840415, "comment_id": 74745733, "body": "@Shepmaster Oh wait. I found it. No need to post it. Here it is. <a href=\"https://rust-lang.github.io/book/second-edition/index.html\" rel=\"nofollow noreferrer\">rust-lang.github.io/book/second-edition/index.html</a>"}], "answers": [{"comments": [{"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1494223132, "post_id": 43840603, "comment_id": 74717291, "body": "Oh that is interesting. I am still totally new to Rust, so have not even learned about Macros yet. But I see what you mean. Cool, I will try these out. Thanks."}], "tags": [], "owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "is_accepted": false, "score": 1, "last_activity_date": 1494222609, "creation_date": 1494222609, "answer_id": 43840603, "question_id": 43840415, "link": "https://stackoverflow.com/questions/43840415/do-rust-builder-patterns-have-to-use-redundant-struct-code/43840603#43840603", "title": "Do Rust builder patterns have to use redundant struct code?", "body": "<p>This seems like the sort of thing a macro might be able to do.  A quick search found the <a href=\"https://crates.io/crates/derive_builder\" rel=\"nofollow noreferrer\">derive_builder</a> and <a href=\"https://crates.io/crates/builder_macro\" rel=\"nofollow noreferrer\">builder_macro</a> crates which seem to implement this functionality.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1494253565, "creation_date": 1494253565, "answer_id": 43850221, "question_id": 43840415, "link": "https://stackoverflow.com/questions/43840415/do-rust-builder-patterns-have-to-use-redundant-struct-code/43850221#43850221", "title": "Do Rust builder patterns have to use redundant struct code?", "body": "<blockquote>\n  <p>Do Rust builder patterns have to use redundant struct code?</p>\n</blockquote>\n\n<p>No. But sometimes they <em>might</em>. For example, consider if we wanted to have special logic (or even just complicated logic) around our constructor:</p>\n\n<pre><code>/// Width must always be greater than height!\nstruct HorizontalEllipse {\n    width: f64,\n    height: f64,\n}\n\nimpl HorizontalEllipse {\n    fn area(&amp;self) -&gt; f64 {\n        std::f64::consts::PI * (self.width / 2.0) * (self.height / 2.0)\n    }\n}\n\nstruct HorizontalEllipseBuilder {\n    width: f64,\n    height: f64,\n}\n\nimpl HorizontalEllipseBuilder {\n    fn new() -&gt; HorizontalEllipseBuilder {\n        HorizontalEllipseBuilder {\n            width: 0.0,\n            height: 0.0,\n        }\n    }\n\n    fn width(&amp;mut self, width: f64) -&gt; &amp;mut HorizontalEllipseBuilder {\n        self.width = width;\n        self\n    }\n\n    fn height(&amp;mut self, height: f64) -&gt; &amp;mut HorizontalEllipseBuilder {\n        self.height = height;\n        self\n    }\n\n    fn finalize(&amp;self) -&gt; Result&lt;HorizontalEllipse, String&gt; {\n        let HorizontalEllipseBuilder { height, width } = *self;\n        if height &gt;= width {\n            Err(\"This is not horizontal\".into())\n        } else {\n            Ok(HorizontalEllipse { width, height })\n        }\n    }\n}\n\nfn main() {\n    let c = HorizontalEllipseBuilder::new()\n        .width(1.0)\n        .height(2.0)\n        .finalize()\n        .expect(\"not a valid ellipse\");\n\n    println!(\"area: {}\", c.area());\n    println!(\"width: {}\", c.width);\n    println!(\"height: {}\", c.height);\n}\n</code></pre>\n\n<p>Now a <code>HorizontalEllipse</code> knows that it is always true that <code>width &gt; height</code>. We've moved that check from many potential places (each method) to one, the constructor. We then moved the constructor to a new type because it was complicated (not really, but truly complicated examples are usually... complicated).</p>\n\n<p>Many builders I've seen also have \"enhanced\" types of the real object:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Person {\n    name: String,\n}\n\n#[derive(Debug, Default)]\nstruct PersonBuilder {\n    name: Option&lt;String&gt;,\n}\n\nimpl PersonBuilder {\n    fn name(self, name: &amp;str) -&gt; Self {\n        PersonBuilder { name: Some(name.into()), ..self }\n    }\n\n    fn build(self) -&gt; Person {\n        Person {\n            name: self.name.unwrap_or_else(|| \"Stefani Joanne Angelina Germanotta\".into()),\n        }\n    }\n}\n\nfn main() {\n    let person = PersonBuilder::default().build();\n    println!(\"{:?}\", person);\n\n    let person = PersonBuilder::default().name(\"krishnab\").build();\n    println!(\"{:?}\", person);\n}\n</code></pre>\n\n<p>You don't see that in the book's example because it's trying to be simpler and not involve ownership concerns.</p>\n"}], "owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1540, "favorite_count": 1, "accepted_answer_id": 43850221, "answer_count": 2, "score": 3, "last_activity_date": 1494253565, "creation_date": 1494221711, "last_edit_date": 1494252433, "question_id": 43840415, "link": "https://stackoverflow.com/questions/43840415/do-rust-builder-patterns-have-to-use-redundant-struct-code", "title": "Do Rust builder patterns have to use redundant struct code?", "body": "<p>I was looking at the <a href=\"https://doc.rust-lang.org/stable/book/method-syntax.html\" rel=\"nofollow noreferrer\">Method syntax section of the Rust documentation</a> and came across an example of the builder pattern. The <code>CircleBuilder</code> struct in the example below is an exact duplicate of the <code>Circle</code> struct. It seems like this redundant code violates the usual norms of programming. </p>\n\n<p>I understand why the example created a new struct, because the creator did not want to implement the builder methods against the original <code>Circle</code> struct. That is fine, but is there a way to rewrite this example so that there is no redundancy--yet still keeping the nice builder interface in the <code>main()</code> function intact?</p>\n\n<p>I tried to create an empty struct or a struct with just one throwaway element, but that did not work. </p>\n\n<pre><code>struct Circle {\n    x: f64,\n    y: f64,\n    radius: f64,\n}\n\nimpl Circle {\n    fn area(&amp;self) -&gt; f64 {\n        std::f64::consts::PI * (self.radius * self.radius)\n    }\n}\n\nstruct CircleBuilder {\n    x: f64,\n    y: f64,\n    radius: f64,\n}\n\nimpl CircleBuilder {\n    fn new() -&gt; CircleBuilder {\n        CircleBuilder { x: 0.0, y: 0.0, radius: 1.0, }\n    }\n\n    fn x(&amp;mut self, coordinate: f64) -&gt; &amp;mut CircleBuilder {\n        self.x = coordinate;\n        self\n    }\n\n    fn y(&amp;mut self, coordinate: f64) -&gt; &amp;mut CircleBuilder {\n        self.y = coordinate;\n        self\n    }\n\n    fn radius(&amp;mut self, radius: f64) -&gt; &amp;mut CircleBuilder {\n        self.radius = radius;\n        self\n    }\n\n    fn finalize(&amp;self) -&gt; Circle {\n        Circle { x: self.x, y: self.y, radius: self.radius }\n    }\n}\n\nfn main() {\n    let c = CircleBuilder::new()\n                .x(1.0)\n                .y(2.0)\n                .radius(2.0)\n                .finalize();\n\n    println!(\"area: {}\", c.area());\n    println!(\"x: {}\", c.x);\n    println!(\"y: {}\", c.y);\n}\n</code></pre>\n"}, {"tags": ["rust", "traits", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1494219932, "post_id": 43840020, "comment_id": 74716194, "body": "You must have an alert every time I ask a Rust question :) Interesting, but it doesn&#39;t seem like associated type constructors are going to be in Rust any time soon.  What would the workaround be?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 2, "creation_date": 1494220311, "post_id": 43840020, "comment_id": 74716315, "body": "I&#39;m watching <a href=\"https://stackoverflow.com/questions/tagged/rust\">stackoverflow.com/questions/tagged/rust</a>, and I&#39;m not alone. ;) As far as I know, there&#39;s no workaround, which is why this feature is in the process of being developed."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 4, "last_activity_date": 1494219364, "creation_date": 1494219364, "answer_id": 43840020, "question_id": 43839941, "link": "https://stackoverflow.com/questions/43839941/trait-which-returns-iterator-with-lifetime-bounded-by-the-lifetime-of-an-argumen/43840020#43840020", "title": "Trait which returns iterator with lifetime bounded by the lifetime of an argument", "body": "<p>What you're looking for is <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/11/02/associated-type-constructors-part-1-basic-concepts-and-introduction/\" rel=\"nofollow noreferrer\">associated type constructors</a>, a planned feature that is not yet implemented in Rust. With associated type constructors, your code would look like this:</p>\n\n<pre><code>trait Zip {}\ntrait Foo {\n    type FooIterator&lt;'a, 'c&gt;: Iterator&lt;Item = u32&gt; + 'a + 'c;\n    // Foo.bar() returns an iterator that has a lifetime less than the Foo\n    fn bar&lt;'a, 'b: 'a, 'c, 'd: 'c&gt;(&amp;'b self, &amp;'d Zip) -&gt; Self::FooIterator&lt;'a, 'c&gt;;\n}\n</code></pre>\n\n<p>Actually, I'm not sure all those lifetimes are necessary, because a <code>&amp;'a T</code> can be coerced to a <code>&amp;'b T</code> where <code>'a: 'b</code>. Thus, the following might be good enough:</p>\n\n<pre><code>trait Zip {}\ntrait Foo {\n    type FooIterator&lt;'a, 'c&gt;: Iterator&lt;Item = u32&gt; + 'a + 'c;\n    // Foo.bar() returns an iterator that has a lifetime less than the Foo\n    fn bar&lt;'a, 'c&gt;(&amp;'a self, &amp;'c Zip) -&gt; Self::FooIterator&lt;'a, 'c&gt;;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1494258932, "last_edit_date": 1494258932, "creation_date": 1494257699, "answer_id": 43851704, "question_id": 43839941, "link": "https://stackoverflow.com/questions/43839941/trait-which-returns-iterator-with-lifetime-bounded-by-the-lifetime-of-an-argumen/43851704#43851704", "title": "Trait which returns iterator with lifetime bounded by the lifetime of an argument", "body": "<p>Depending on how you want to use this trait, you may be able to make it work by implementing it for <code>&amp;'a Struct</code> instead of for <code>Struct</code>, thus \"hoisting\" the responsibility for finding the right lifetime from the trait into the caller.</p>\n\n<p>Remove the lifetime annotation from the trait and change <code>bar</code> so it takes <code>self</code>, plus another argument of the same lifetime:</p>\n\n<pre><code>trait Foo {\n    type FooIterator: Iterator&lt;Item = u32&gt;;\n    fn bar(self, other: Self) -&gt; Self::FooIterator;\n}\n</code></pre>\n\n<p>(Removing <code>'a</code> from the trait is possible because <code>bar</code> consumes the reference instead of reborrowing it -- <code>self</code> doesn't have to outlive the return value anymore because it's been moved into it.)</p>\n\n<p>Then <code>impl</code> it for a reference of lifetime <code>'a</code>:</p>\n\n<pre><code>impl&lt;'a&gt; Foo for &amp;'a Vec&lt;u32&gt; {\n    type FooIterator = ...; // something presumably containing 'a\n    fn bar(self, other: Self) -&gt; Self::FooIterator {\n        ...\n    }\n}\n</code></pre>\n\n<p>This works because the compiler can limit the lifetime <code>'a</code> to one for which the impl applies.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=14c0ec2549a35f87b06fe3d2d6f7abb8&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Here's a playground link</a> where <code>bar</code> is basically a wrapper around <code>.chain()</code>.</p>\n\n<p>I'm ignoring the <code>Zip</code> trait for now because how to incorporate it depends on what it provides. Instead, I suppose that <code>bar</code> only accepts an argument of the same type as <code>Self</code>. However, you can probably add it as well, maybe using the same technique if you need to.</p>\n"}], "owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 393, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1494258932, "creation_date": 1494218867, "last_edit_date": 1494258062, "question_id": 43839941, "link": "https://stackoverflow.com/questions/43839941/trait-which-returns-iterator-with-lifetime-bounded-by-the-lifetime-of-an-argumen", "title": "Trait which returns iterator with lifetime bounded by the lifetime of an argument", "body": "<p>I have a trait which says that any implementation of <code>Foo</code> needs to provide a method <code>bar</code> which returns an object of some type which implements <code>Iterator&lt;Item = u32&gt;</code>:</p>\n\n<pre><code>trait Foo {\n    type FooIterator: Iterator&lt;Item = u32&gt;;\n    fn bar(&amp;self) -&gt; FooIterator;\n}\n</code></pre>\n\n<p>For this case, I believe that the default lifetime elision means that the iterator returned by <code>bar</code> is required to live on its own, without being tied to the lifetime of the <code>Foo</code> it is iterating over.  User Habnabit on #rust irc suggested the following way to say that the lifetime of the <code>FooIterator</code> is less than the lifetime of the <code>Foo</code>. i.e. it allows the implementation of the <code>FooIterator</code> to keep a reference to the <code>Foo</code> that it comes from:</p>\n\n<pre><code>trait Foo&lt;'a&gt; {\n    type FooIterator: Iterator&lt;Item = u32&gt; + 'a;\n    fn bar&lt;'b: 'a&gt;(&amp;'b self) -&gt; Self::FooIterator;\n}\n</code></pre>\n\n<p>What I really want is the case where the function <code>bar</code> takes an additional argument, and the implementation of <code>FooIterator</code> is allowed to keep a reference to both the <code>Foo</code> and the additional argument. i.e. the lifetime of <code>FooIterator</code> is bounded by the lifetime of the <code>Foo</code> and the lifetime of the additional argument.</p>\n\n<p>My literal translation of this idea would be</p>\n\n<pre><code>trait Zip {}\ntrait Foo&lt;'a, 'c&gt; {\n    type FooIterator: Iterator&lt;Item = u32&gt; + 'a + 'c;\n    // Foo.bar() returns an iterator that has a lifetime less than the Foo\n    fn bar&lt;'b: 'a, 'd: 'c&gt;(&amp;'b self, &amp;'d Zip) -&gt; Self::FooIterator;\n}\n</code></pre>\n\n<p>But I was told there there is no \"good\" way to do this.  What would be the best way to implement this idiom?  What would the above code do exactly?</p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494204229, "post_id": 43838140, "comment_id": 74712808, "body": "Perhaps you could use some words to describe what the code does / is supposed to do?"}, {"owner": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494204334, "post_id": 43838140, "comment_id": 74712823, "body": "Just wondering if there is a way for a iterator to look ahead or look behind instead of using two iterators"}], "answers": [{"tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": false, "score": 3, "last_activity_date": 1494222168, "creation_date": 1494222168, "answer_id": 43840508, "question_id": 43838140, "link": "https://stackoverflow.com/questions/43838140/forward-and-current-iterators/43840508#43840508", "title": "Forward and current iterators", "body": "<p>I am not certain of what is the exact question but the code itself could be rewritten using the <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.windows\" rel=\"nofollow noreferrer\"><code>windows</code></a> iterator:</p>\n\n<pre><code>fn main() {\n    let a = [1, 2, 3, 4, 5];\n    for w in a.windows(2) {\n        println!(\"elem1: {:?}, elem2: {:?}\", w[0], w[1]);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1494222168, "creation_date": 1494203308, "last_edit_date": 1494204199, "question_id": 43838140, "link": "https://stackoverflow.com/questions/43838140/forward-and-current-iterators", "title": "Forward and current iterators", "body": "<p>Is there was another way of writing this?</p>\n\n<pre><code>fn main() {\n    let mut a = [1, 2, 3, 4, 5];\n    let mut iter1 = a.iter();\n    let mut iter2 = a.iter().skip(1).peekable();\n\n    while iter2.peek().is_some() {\n        println!(\"iter1: {:?}, iter2: {:?}\", iter1.next(), iter2.next());\n    }\n}\n</code></pre>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494205183, "post_id": 43838265, "comment_id": 74712963, "body": "Thanks for your explanation now I think it is clearer if return a <code>i32</code> For example it would only have to indicate it, thus <code>-&gt; JoinHandle&lt;i32&gt;</code> O as an argument for <code>T</code>, Thanks for your time."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 13, "last_activity_date": 1494204656, "creation_date": 1494204656, "answer_id": 43838265, "question_id": 43838125, "link": "https://stackoverflow.com/questions/43838125/how-can-i-return-a-joinhandle-from-a-function/43838265#43838265", "title": "How can I return a JoinHandle from a function?", "body": "<p>Review the function signature of <a href=\"https://doc.rust-lang.org/std/thread/fn.spawn.html\" rel=\"noreferrer\"><code>thread::spawn</code></a>:</p>\n\n<pre><code>pub fn spawn&lt;F, T&gt;(f: F) -&gt; JoinHandle&lt;T&gt;\nwhere\n    F: FnOnce() -&gt; T,\n    F: Send + 'static,\n    T: Send + 'static,\n</code></pre>\n\n<p>This says that <code>spawn</code> takes a generic type <code>F</code>. This type must implement the trait <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"noreferrer\"><code>FnOnce</code></a>. That implementation takes no arguments and returns an argument of type <code>T</code>. <code>spawn</code> returns a <code>JoinHandle</code> that is parameterized with the <em>same</em> type <code>T</code>.</p>\n\n<p>To use this information, you need to know what type your closure returns. Once you know that, that is the type that your <code>JoinHandle</code> should be parameterized with.</p>\n\n<p>Your example closure calls <code>println!</code> which has a return type of <code>()</code>, so that is what <em>this</em> <code>JoinHandle</code> would use.</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2348, "favorite_count": 0, "accepted_answer_id": 43838265, "answer_count": 1, "score": 8, "last_activity_date": 1518216652, "creation_date": 1494203160, "last_edit_date": 1518216652, "question_id": 43838125, "link": "https://stackoverflow.com/questions/43838125/how-can-i-return-a-joinhandle-from-a-function", "title": "How can I return a JoinHandle from a function?", "body": "<p>What is the best way to handle a situation like this:</p>\n\n<pre><code>use std::thread;\n\nstruct Prefe;\n\nfn main() {\n    let prefe = Prefe;\n\n    start(&amp;prefe).join();\n}\n\nfn start(pre: &amp;Prefe) -&gt; thread::JoinHandle {\n    thread::spawn(move || {\n        println!(\"Test spawn\");\n    })\n}\n</code></pre>\n\n<p>I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0243]: wrong number of type arguments: expected 1, found 0\n  --&gt; src/main.rs:11:26\n   |\n11 | fn start(pre: &amp;Prefe) -&gt; thread::JoinHandle {\n   |                          ^^^^^^^^^^^^^^^^^^ expected 1 type argument\n</code></pre>\n\n<p>I think I could use something like this, but I do not know what to use for <code>T</code>:</p>\n\n<pre><code>fn start&lt;T&gt;(pre: &amp;Prefe, t: T) -&gt; thread::JoinHandle&lt;T&gt; {\n    thread::spawn(move || {\n        println!(\"Test spawn\");\n    })\n}\n</code></pre>\n\n<p>I see that <code>thread::spawn</code> uses this to return, but I do not know if this can help me or how to use it:</p>\n\n<pre><code>Builder::new().spawn(f).unwrap()\n</code></pre>\n\n<p>This seems to work, but I do not know if this is the right or wrong way:</p>\n\n<pre><code>fn start(pre: &amp;Prefe) -&gt; thread::JoinHandle&lt;()&gt; {\n    thread::spawn(move || {\n        println!(\"Test spawn\");\n    })\n}\n</code></pre>\n"}, {"tags": ["multithreading", "callback", "rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 3, "creation_date": 1494178480, "post_id": 43834497, "comment_id": 74705804, "body": "nitpick: <a href=\"https://github.com/Timmmm/soundio-rs/blob/master/libsoundio-sys/lib.rs#L321\" rel=\"nofollow noreferrer\">github.com/Timmmm/soundio-rs/blob/master/libsoundio-sys/&hellip;</a> you should use <code>Option&lt;extern fn (...)&gt;</code>, not <code>*mut extern fn (...)</code>. The <code>fn</code> type is already a function pointer, adding <code>*mut</code> makes it a double-pointer. The <code>Option&lt;&gt;</code> makes it nullable. See <a href=\"http://stackoverflow.com/questions/26117197/create-interface-to-c-function-pointers-in-rust\" title=\"create interface to c function pointers in rust\">stackoverflow.com/questions/26117197/&hellip;</a> and <a href=\"https://doc.rust-lang.org/book/ffi.html#the-nullable-pointer-optimization\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1494179081, "post_id": 43834497, "comment_id": 74706011, "body": "Ah nice catch. Presumably that applies to <code>write_callback</code> and so on too? But why does it work at all if I&#39;m passing double-pointers?"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1494179187, "post_id": 43834497, "comment_id": 74706058, "body": "Actually never mind, the binary FFI is still ok-ish because a pointer is still a pointer, and I am just casting to <code>*mut _</code> wherever I use it. I will fix all those - thanks!"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 2, "creation_date": 1494189430, "post_id": 43834497, "comment_id": 74709490, "body": "Hmm, could you write a minimal example that can be compiled in the playground? That would make it much easier to experiment and write a good answer."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1494192052, "post_id": 43834497, "comment_id": 74710266, "body": "&quot;I must need shared ownership of something&quot; - you can&#39;t pass a reference to a scoped thread?"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1494234333, "post_id": 43834497, "comment_id": 74723205, "body": "@user4815162342: Good idea, I will do that."}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1494234409, "post_id": 43834497, "comment_id": 74723245, "body": "@the8472: Maybe. I&#39;m not sure this works if the thread is created by the C library. Anyway I&#39;ll make a more minimal test case and then we can see."}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 300, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1494190089, "creation_date": 1494177947, "last_edit_date": 1494190089, "question_id": 43834497, "link": "https://stackoverflow.com/questions/43834497/how-to-wrap-multi-threaded-callbacks-in-rust", "title": "How to wrap multi-threaded callbacks in Rust?", "body": "<p>I'm struggling with my <a href=\"https://crates.io/crates/soundio\" rel=\"nofollow noreferrer\">soundio crate</a>, which is a wrapper for <a href=\"https://github.com/andrewrk/libsoundio\" rel=\"nofollow noreferrer\">libsoundio</a>. If you want to play a .wav file, the C library requires you to pass a callback function when you open the output stream. That callback is called in a loop <em>in another thread</em>, and you output the samples in it.</p>\n\n<p>I can do it like this:</p>\n\n<pre><code>struct WavPlayer {\n    reader: hound::WavReader&lt;BufReader&lt;File&gt;&gt;,\n}\n\nimpl WavPlayer {\n    fn write_callback(&amp;mut self, stream: &amp;mut soundio::OutStreamWriter) {\n        // Copy samples from `self.reader` to `stream`.\n    }\n}\n\n// In main():\n    let mut player = WavPlayer {\n        reader: ...,\n    };\n\n    let mut output_stream = output_dev.open_outstream(\n        ...\n        |x| player.write_callback(x),\n    )?;\n</code></pre>\n\n<p>The parameter to <code>open_outstream()</code> is <code>FnMut(&amp;mut OutStreamWriter)</code>.</p>\n\n<p>The problem is that <code>output_dev</code> takes ownership of <code>WavPlayer</code> and then you can't control it or monitor it any more. When the wav file ends it is really difficult to tell the main program to exit, and there's no way I can easily pause or seek it. What I really want is an interface like this:</p>\n\n<pre><code>trait SoundPlayer {\n    fn play(&amp;mut self);\n    fn stop(&amp;mut self);\n    fn seek(&amp;mut self, pos: Duration);\n    fn position(&amp;self) -&gt; Duration;\n\n    fn get_write_callback(&amp;self) -&gt; &amp;FnMut(&amp;mut soundio::OutStreamWriter);\n}\n</code></pre>\n\n<p>However, I cannot work out what combination of <code>Mutex</code>, <code>RefCell</code>, <code>Arc</code>, etc. I need for the callback. I must need shared ownership of <em>something</em> because I need access to the <code>SoundPlayer</code> from <code>main()</code> and (indirectly, via the callback) from <code>output_dev</code>, so I guess there must be an <code>Arc</code> in there somewhere.</p>\n\n<p>And I'll need interior mutability because I really want to be able to call <code>play()</code> while <code>output_dev</code> still has a reference to the player.</p>\n\n<p><a href=\"https://github.com/Timmmm/soundio-rs/blob/master/examples/player/main.rs\" rel=\"nofollow noreferrer\">Here is my current code</a> that works, but doesn't quit when the file ends and you can't pause or seek.</p>\n\n<p>I'm a bit lost here. I know I could use <code>mpsc</code> to send samples but that seems like a cop-out.</p>\n"}, {"tags": ["generics", "types", "error-handling", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494178685, "post_id": 43834456, "comment_id": 74705876, "body": "Regarding your backtracing issue: have you tried <a href=\"https://crates.io/crates/error-chain\" rel=\"nofollow noreferrer\"><code>error_chain</code></a>? It has a backtrace functionality, integrated."}, {"owner": {"reputation": 1913, "user_id": 275196, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/2c20425d4619585036e00049e4f325d6?s=128&d=identicon&r=PG", "display_name": "moatPylon", "link": "https://stackoverflow.com/users/275196/moatpylon"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494181754, "post_id": 43834456, "comment_id": 74706934, "body": "I&#39;ll take a look"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1494209810, "creation_date": 1494209810, "answer_id": 43838808, "question_id": 43834456, "link": "https://stackoverflow.com/questions/43834456/trouble-creating-terse-and-generic-error-type/43838808#43838808", "title": "Trouble creating terse and generic error type", "body": "<p>What does the error <code>the type parameter `A` is not constrained by the impl trait, self type, or predicates</code> mean? Let's look at a reduced example:</p>\n\n<pre><code>trait Foo {\n    type Error;\n}\n\nstruct Bar;\n\nstruct Baz;\n\nimpl Foo for Bar {\n    type Error = std::io::Error;\n}\n\nimpl Foo for Baz {\n    type Error = std::io::Error;\n}\n\nstruct Quux;\n\nimpl&lt;T: Foo&gt; From&lt;T::Error&gt; for Quux {\n    fn from(err: T::Error) -&gt; Quux {\n        Quux\n    }\n}\n</code></pre>\n\n<p>The issue is that a type <code>U</code> can match <code>T::Error</code> for multiple <code>T</code>. Here, for example, <code>std::io::Error</code> would match both <code>Bar::Error</code> and <code>Baz::Error</code>. So, which type should the compiler choose for <code>T</code>?</p>\n\n<p>The solution is simple: don't use <code>A::Error</code> and <code>B::Error</code>; instead, define <code>A</code> and <code>B</code> to <em>be</em> the error types directly. When you use <code>AppError</code> within <code>App</code>, you'll return <code>AppError&lt;A::Error, B::Error&gt;</code> instead of <code>AppError&lt;A, B&gt;</code>. Yes, you'll have to repeat <code>::Error</code> everywhere; I don't think there's a solution for that.</p>\n"}, {"tags": [], "owner": {"reputation": 1913, "user_id": 275196, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/2c20425d4619585036e00049e4f325d6?s=128&d=identicon&r=PG", "display_name": "moatPylon", "link": "https://stackoverflow.com/users/275196/moatpylon"}, "is_accepted": true, "score": 0, "last_activity_date": 1494411597, "creation_date": 1494411597, "answer_id": 43889674, "question_id": 43834456, "link": "https://stackoverflow.com/questions/43834456/trouble-creating-terse-and-generic-error-type/43889674#43889674", "title": "Trouble creating terse and generic error type", "body": "<p>In the end I went with a custom error type which retrieves a backtrace on construction (using the <a href=\"https://crates.io/crates/backtrace\" rel=\"nofollow noreferrer\"><code>backtrace</code></a> crate) and stores the actual error as a <code>Box&lt;Error&gt;</code>:</p>\n\n<pre><code>#[derive(Debug)]\npub struct AppError {\n    err:   Box&lt;Error + Send + Sync&gt;,\n    trace: Vec&lt;String&gt;,\n}\n\nimpl AppError {\n    pub fn new&lt;E: Into&lt;Box&lt;Error + Send + Sync&gt;&gt;&gt;(err: E) -&gt; Self {\n        let mut trace = Vec::new();\n        // Get backtrace\n\n        AppError {\n            err: err.into(),\n            trace,\n        }\n    }\n}\n\nimpl Display for AppError {...}\n\nimpl Error for AppError {...}\n</code></pre>\n\n<p>The only wrinkle is since <code>AppError</code> implements <code>Error</code>, I can't have a blanket <code>impl&lt;E: Error&gt; From&lt;E&gt; for AppError</code>. Instead:</p>\n\n<pre><code>impl&lt;E: AppErrorTag&gt; From&lt;E&gt; for AppError {...}\n\ntrait AppErrorTag: Into&lt;Box&lt;Error + Send + Sync&gt;&gt; {}\n</code></pre>\n\n<p>And then <code>impl AppErrorTag for x {}</code> for every relevant error type <code>x</code>.</p>\n\n<p>With this, error types are terse (simply <code>AppError</code>), generic (just a matter of tagging relevant types), and has a backtrace. The disadvantage is that the error can't be deconstructed and inspected. The need for a tag can be a bit of a pain specially for errors on external crates due to coherence rules. The real ideal solution would use negative trait bounds, but we're not there yet.</p>\n"}], "owner": {"reputation": 1913, "user_id": 275196, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/2c20425d4619585036e00049e4f325d6?s=128&d=identicon&r=PG", "display_name": "moatPylon", "link": "https://stackoverflow.com/users/275196/moatpylon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "accepted_answer_id": 43889674, "answer_count": 2, "score": 0, "last_activity_date": 1494411597, "creation_date": 1494177620, "question_id": 43834456, "link": "https://stackoverflow.com/questions/43834456/trouble-creating-terse-and-generic-error-type", "title": "Trouble creating terse and generic error type", "body": "<p>I'm having a hard time trying to create an error type which is both generic and doesn't devolve into a mess of <code>impl</code>s and generic arguments.</p>\n\n<p>I have a struct with a few generic parameters for subsystems, each of which has methods returning custom error types:</p>\n\n<pre><code>struct App&lt;A: ..., B: ..., ...&gt; {\n    a: A,\n    b: B,\n    ...\n}\n\nimpl&lt;A: ..., B: ..., ...&gt; App&lt;A, B, ...&gt; {\n    fn do_something_cross_cutting(&amp;self) -&gt; Result&lt;(), AppError&gt; {\n        a.run()?;\n        b.run()?;\n\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>How should <code>AppError</code> be cleanly defined? At first I tried using <code>quick_error!</code> like so:</p>\n\n<pre><code>quick_error! {\n    #[derive(Debug)]\n    enum AppError&lt;A: ..., B: ..., ...&gt; {\n        AError(err: A::Error) {\n            from()\n            display(...)\n        }\n\n        BError(err: B::Error) {\n            from()\n            display(...)\n        }\n\n        ...\n    }\n}\n</code></pre>\n\n<p>But <code>quick_error!</code> doesn't seem to support generic enums. Furthermore, since <code>AppError</code> is now generic <em>and</em> it doesn't look like it's possible to define type aliases inside <code>impl</code> blocks, every method that could fail would have a very extensive return type (<code>Result&lt;_, AppError&lt;A, B, ...&gt;&gt;</code>).</p>\n\n<p><code>quick_error!</code> could be avoided, but again at the expense of readability and code size, and it doesn't solve the second problem.</p>\n\n<p>I came up with the following alternative, but isn't compiling:</p>\n\n<pre><code>quick_error! {\n    #[derive(Debug)]\n    enum AppError {\n        AError(err: Box&lt;Error&gt;) {\n            display(...)\n        }\n\n        BError(err: Box&lt;Error&gt;) {\n            display(...)\n        }\n\n        ...\n    }\n}\n\nimpl&lt;A: ...&gt; From&lt;A::Error&gt; for AppError {\n    fn from(err: A::Error) -&gt; Self {\n        AppError::AError(Box::new(err))\n    }\n}\n\n...\n</code></pre>\n\n<p><code>rustc</code> complains with <code>the type parameter `A` is not constrained by the impl trait, self type, or predicates</code>, and I have no idea how to fix it.</p>\n\n<p>The last possibility is the least verbose: simply propagate a <code>Box&lt;Error&gt;</code>. It's my plan B. The biggest problem is that useful information is lost. By defining <code>AppError</code> (and, recursively, subsystem-specific error types), I get a poor man's backtrace on error. Using <code>Box&lt;Error&gt;</code> would make errors difficult to trace.</p>\n\n<p>Is there any other alternative, or am I approaching this the wrong way?</p>\n"}, {"tags": ["oop", "iterator", "rust", "traits", "lifetime-scoping"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494173056, "post_id": 43833588, "comment_id": 74703947, "body": "You have a further problem: what is the parent of the parent? You&#39;ll need to keep a stack of references to nodes in the iterator if you don&#39;t have parent pointers in your tree."}, {"owner": {"reputation": 3, "user_id": 7195478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1d941c92afbfe5a89e51278f875c9a9?s=128&d=identicon&r=PG&f=1", "display_name": "Spencer Killen", "link": "https://stackoverflow.com/users/7195478/spencer-killen"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494173340, "post_id": 43833588, "comment_id": 74704030, "body": "@MatthieuM. the parent of a parent is None"}, {"owner": {"reputation": 3, "user_id": 7195478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1d941c92afbfe5a89e51278f875c9a9?s=128&d=identicon&r=PG&f=1", "display_name": "Spencer Killen", "link": "https://stackoverflow.com/users/7195478/spencer-killen"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494173558, "post_id": 43833588, "comment_id": 74704111, "body": "Oh, wait now I see what you mean. Yes I&#39;ll need to track that thanks"}], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 7195478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1d941c92afbfe5a89e51278f875c9a9?s=128&d=identicon&r=PG&f=1", "display_name": "Spencer Killen", "link": "https://stackoverflow.com/users/7195478/spencer-killen"}, "edited": false, "score": 0, "creation_date": 1494179985, "post_id": 43834384, "comment_id": 74706345, "body": "Thank you, I wasn&#39;t aware you could implement methods for a reference type. Could you point me to the documentation or explanation for rules of that, it doesn&#39;t seem to be explained in the methods chapter of the rust book"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3, "user_id": 7195478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1d941c92afbfe5a89e51278f875c9a9?s=128&d=identicon&r=PG&f=1", "display_name": "Spencer Killen", "link": "https://stackoverflow.com/users/7195478/spencer-killen"}, "edited": false, "score": 0, "creation_date": 1494181305, "post_id": 43834384, "comment_id": 74706781, "body": "@SpencerKillen: Note that there are two forms of <code>impl</code>: inherent <code>impl</code> are about implementing methods for a struct or enum, whereas trait <code>impl</code> are about implementing a <a href=\"https://doc.rust-lang.org/book/traits.html\" rel=\"nofollow noreferrer\">trait</a>. It&#39;s the trait you can implement either for a type <i>or</i> a reference (mutable or not) to said type."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1494177230, "creation_date": 1494177230, "answer_id": 43834384, "question_id": 43833588, "link": "https://stackoverflow.com/questions/43833588/implement-intoiterator-for-binary-tree/43834384#43834384", "title": "Implement IntoIterator for binary tree", "body": "<p>The particular error that you are getting is that <code>'a</code> should appear on the right of <code>for</code>. Otherwise, how could the compiler know what <code>a</code> is?</p>\n\n<p>When implementing <code>IntoIterator</code> you have to decide whether the iterator will <em>consume</em> the container, or whether it'll just produce references into it. At the moment, your setup is inconsistent, and the error message points it out.</p>\n\n<p>In the case of a binary tree, you also have to think about which order you want to produce the values in: traditional orders are depth first (yielding a sorted sequence) and breadth first (exposing the \"layers\" of the tree). I'll assume depth first as it's the most common one.</p>\n\n<hr>\n\n<p>Let's tackle the case of a consuming iterator first. It's simpler in the sense that we don't have to worry about lifetimes.</p>\n\n<pre><code>#![feature(box_patterns)]\n\nstruct Node&lt;T: PartialOrd&gt; {\n    value: T,\n    left: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n    right: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nstruct NodeIterator&lt;T: PartialOrd&gt; {\n    stack: Vec&lt;Node&lt;T&gt;&gt;,\n    next: Option&lt;T&gt;,\n}\n\nimpl&lt;T: PartialOrd&gt; IntoIterator for Node&lt;T&gt; {\n    type Item = T;\n    type IntoIter = NodeIterator&lt;T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        let mut stack = Vec::new();\n\n        let smallest = pop_smallest(self, &amp;mut stack);\n\n        NodeIterator { stack: stack, next: Some(smallest) }\n    }\n}\n\nimpl&lt;T: PartialOrd&gt; Iterator for NodeIterator&lt;T&gt; {\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n        if let Some(next) = self.next.take() {\n            return Some(next);\n        }\n\n        if let Some(Node { value, right, .. }) = self.stack.pop() {\n            if let Some(right) = right {\n                let box right = right;\n                self.stack.push(right);\n            }\n            return Some(value);\n        }\n\n        None\n    }\n}\n\nfn pop_smallest&lt;T: PartialOrd&gt;(node: Node&lt;T&gt;, stack: &amp;mut Vec&lt;Node&lt;T&gt;&gt;) -&gt; T {\n    let Node { value, left, right } = node;\n\n    if let Some(left) = left {\n        stack.push(Node { value: value, left: None, right: right });\n        let box left = left;\n        return pop_smallest(left, stack);\n    }\n\n    if let Some(right) = right {\n        let box right = right;\n        stack.push(right);\n    }\n\n    value\n}\n\nfn main() {\n    let root = Node {\n        value: 3,\n        left: Some(Box::new(Node { value: 2, left: None, right: None })),\n        right: Some(Box::new(Node { value: 4, left: None, right: None }))\n    };\n\n    for t in root {\n        println!(\"{}\", t);\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Now, we can \"easily\" adapt it to the non-consuming case by sprinkling in the appropriate references:</p>\n\n<pre><code>struct RefNodeIterator&lt;'a, T: PartialOrd + 'a&gt; {\n    stack: Vec&lt;&amp;'a Node&lt;T&gt;&gt;,\n    next: Option&lt;&amp;'a T&gt;,\n}\n\nimpl&lt;'a, T: PartialOrd + 'a&gt; IntoIterator for &amp;'a Node&lt;T&gt; {\n    type Item = &amp;'a T;\n    type IntoIter = RefNodeIterator&lt;'a, T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        let mut stack = Vec::new();\n\n        let smallest = pop_smallest_ref(self, &amp;mut stack);\n\n        RefNodeIterator { stack: stack, next: Some(smallest) }\n    }\n}\n\nimpl&lt;'a, T: PartialOrd + 'a&gt; Iterator for RefNodeIterator&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a T&gt; {\n        if let Some(next) = self.next.take() {\n            return Some(next);\n        }\n\n        if let Some(node) = self.stack.pop() {\n            if let Some(ref right) = node.right {\n                self.stack.push(right);\n            }\n            return Some(&amp;node.value);\n        }\n\n        None\n    }\n}\n\nfn pop_smallest_ref&lt;'a, T&gt;(node: &amp;'a Node&lt;T&gt;, stack: &amp;mut Vec&lt;&amp;'a Node&lt;T&gt;&gt;) -&gt; &amp;'a T\n    where\n        T: PartialOrd + 'a\n{\n    if let Some(ref left) = node.left {\n        stack.push(node);\n        return pop_smallest_ref(left, stack);\n    }\n\n    if let Some(ref right) = node.right {\n        stack.push(right);\n    }\n\n    &amp;node.value\n}\n</code></pre>\n\n<p>There's a lot to unpack in there; so take your time to digest it. Specifically:</p>\n\n<ul>\n<li>the use of <code>ref</code> in <code>Some(ref right) = node.right</code> is because I don't want to consume <code>node.right</code>, only to obtain a reference inside the <code>Option</code>; the compiler will complain that I cannot move out of a borrowed object without it (so I just follow the complaints),</li>\n<li>in <code>stack.push(right)</code>, <code>right: &amp;'a Box&lt;Node&lt;T&gt;&gt;</code> and yet <code>stack: Vec&lt;&amp;'a Node&lt;T&gt;&gt;</code>; this is the magic of <code>Deref</code>: <code>Box&lt;T&gt;</code> implements <code>Deref&lt;T&gt;</code> so the compiler automatically transforms the reference as appropriate.</li>\n</ul>\n\n<p><em>Note: I didn't write this code as-is; instead I just put the first few references where I expect them to be (such as the return type of <code>Iterator</code>) and then let the compiler guide me.</em></p>\n"}], "owner": {"reputation": 3, "user_id": 7195478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1d941c92afbfe5a89e51278f875c9a9?s=128&d=identicon&r=PG&f=1", "display_name": "Spencer Killen", "link": "https://stackoverflow.com/users/7195478/spencer-killen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 444, "favorite_count": 0, "accepted_answer_id": 43834384, "answer_count": 1, "score": 0, "last_activity_date": 1494177230, "creation_date": 1494172804, "question_id": 43833588, "link": "https://stackoverflow.com/questions/43833588/implement-intoiterator-for-binary-tree", "title": "Implement IntoIterator for binary tree", "body": "<p>I am trying to build a binary tree and write an iterator to traverse values in the tree.\nWhen implementing the IntoIterator trait for my tree nodes I ran into a problem with lifetimes</p>\n\n<pre><code>src\\main.rs:43:6: 43:8 error: the lifetime parameter `'a` is not constrained by the impl trait, self type, or predicates [E0207]\nsrc\\main.rs:43 impl&lt;'a, T: 'a&gt; IntoIterator for Node&lt;T&gt; {\n</code></pre>\n\n<p>I understand that I need to specify that NodeIterator will live as long as Node but I am unsure of how to express that</p>\n\n<pre><code>use std::cmp::PartialOrd;\nuse std::boxed::Box;\n\nstruct Node&lt;T: PartialOrd&gt; {\n    value: T,\n    left: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n    right: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nstruct NodeIterator&lt;'a, T: 'a + PartialOrd&gt; {\n    current: &amp;'a Node&lt;T&gt;,\n    parent: Option&lt;&amp;'a Node&lt;T&gt;&gt;,\n}\n\nimpl&lt;T: PartialOrd&gt; Node&lt;T&gt; {\n    pub fn insert(&amp;mut self, value: T) {\n        ...\n    }\n}\n\nimpl&lt;'a, T: 'a&gt; IntoIterator for Node&lt;T&gt; { // line 43\n     type Item = T;\n     type IntoIter = NodeIterator&lt;'a, T&gt;;\n\n     fn into_iter(&amp;self) -&gt; Self::IntoIter {\n         NodeIterator::&lt;'a&gt; {\n             current: Some(&amp;self),\n             parent: None\n         }\n     }\n }\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1494169117, "post_id": 43832868, "comment_id": 74702633, "body": "Use a macro for this."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494169112, "post_id": 43832970, "comment_id": 74702630, "body": "Isn&#39;t that OPs question though? Because <code>format</code> has the restriction, they&#39;d like some way of saying that <code>cond_format</code> can only takes literals. (I&#39;m pretty sure the answer &quot;no&quot; is the correct one though, it&#39;s mostly the rationale I&#39;m quibbling with)."}, {"owner": {"reputation": 15, "user_id": 7976547, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aa203611191553bd453126e8e6e60976?s=128&d=identicon&r=PG&f=1", "display_name": "jplrssn", "link": "https://stackoverflow.com/users/7976547/jplrssn"}, "edited": false, "score": 0, "creation_date": 1494169217, "post_id": 43832970, "comment_id": 74702657, "body": "But in my case I&#39;m not looking to use <code>fmt_str</code> as a variable; I&#39;m trying to do the exact opposite."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1494169956, "post_id": 43832970, "comment_id": 74702900, "body": "I understood the question as &quot;is there a way for a function to receive a string literal and use it as the format string in a <code>format!()</code> macro inside it?&quot; and the answer to that is no - this is not possible using a function."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 0, "last_activity_date": 1494169029, "creation_date": 1494169029, "answer_id": 43832970, "question_id": 43832868, "link": "https://stackoverflow.com/questions/43832868/is-it-possible-to-specify-that-a-function-argument-must-be-a-string-literal/43832970#43832970", "title": "Is it possible to specify that a function argument must be a string literal?", "body": "<p>According to <a href=\"https://doc.rust-lang.org/std/fmt/\" rel=\"nofollow noreferrer\">Rust docs</a>, this is not possible:</p>\n\n<blockquote>\n  <p>(...) you can see that the first argument is a format string. It\n  is required by the compiler for this to be a string literal; it cannot\n  be a variable passed in (in order to perform validity checking).</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1494171569, "creation_date": 1494171569, "answer_id": 43833376, "question_id": 43832868, "link": "https://stackoverflow.com/questions/43832868/is-it-possible-to-specify-that-a-function-argument-must-be-a-string-literal/43833376#43833376", "title": "Is it possible to specify that a function argument must be a string literal?", "body": "<p>No.  Macros are expanded before types, names, or values even exist.  There's no possible way for that to work.  As a result, there's no reason for the language to distinguish between literals and non-literals at runtime: even if there <em>was</em>, nothing would be able to use that information.</p>\n\n<p>You <em>have</em> to use a macro.  Below are two plausible ways of doing this.</p>\n\n<pre><code>macro_rules! cond_format {\n    ($fmt_str:expr) =&gt; {\n        |cond: bool, item| -&gt; String {\n            if cond {\n                format!($fmt_str, item)\n            } else {\n                format!(\"{}\", item)\n            }\n        }\n    };\n\n    ($cond:expr, $fmt_str:expr, $item:expr) =&gt; {\n        if $cond {\n            format!($fmt_str, $item)\n        } else {\n            format!(\"{}\", $item)\n        }\n    };\n}\n\nfn main() {\n    println!(\"{}\", cond_format!(\"{:x}\")(false, 42));\n    println!(\"{}\", cond_format!(true, \"{:x}\", 42));\n}\n</code></pre>\n"}], "owner": {"reputation": 15, "user_id": 7976547, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aa203611191553bd453126e8e6e60976?s=128&d=identicon&r=PG&f=1", "display_name": "jplrssn", "link": "https://stackoverflow.com/users/7976547/jplrssn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 670, "favorite_count": 0, "accepted_answer_id": 43833376, "answer_count": 2, "score": 0, "last_activity_date": 1494171569, "creation_date": 1494168378, "last_edit_date": 1494169036, "question_id": 43832868, "link": "https://stackoverflow.com/questions/43832868/is-it-possible-to-specify-that-a-function-argument-must-be-a-string-literal", "title": "Is it possible to specify that a function argument must be a string literal?", "body": "<p>This fragment refuses to compile because <code>format!()</code> won't touch non-literal strings.</p>\n\n<pre><code>fn cond_format&lt;T: std::fmt::Display&gt;(cond: bool, fmt_str: &amp;'static str, item: T) -&gt; String {\n    if cond {\n        format!(fmt_str, item)\n    } else {\n        format!(\"{}\", item)\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "scoping", "borrowing"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 5, "creation_date": 1494157132, "post_id": 43830938, "comment_id": 74699113, "body": "<a href=\"https://bluss.github.io/rust/fun/2015/10/11/stuff-the-identity-function-does/\" rel=\"nofollow noreferrer\">Related blog post: &quot;stuff the identity function does&quot;</a> (the linked list example is pretty similar to the binary tree code of yours). I hope Shepmaster answers your question ^_^"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1494162699, "post_id": 43830938, "comment_id": 74700622, "body": "@LukasKalbertodt or that Matthieu M and oli_obk - ker have already answered it ;-)"}], "owner": {"reputation": 849, "user_id": 5745120, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/7127d653b208611f48e4d73b7b7f8aec?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/5745120/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 33, "favorite_count": 0, "closed_date": 1494162602, "answer_count": 0, "score": 3, "last_activity_date": 1494163590, "creation_date": 1494156507, "last_edit_date": 1494163590, "question_id": 43830938, "link": "https://stackoverflow.com/questions/43830938/how-does-adding-braces-to-a-variable-prevent-it-from-being-borrowed-owned-by", "closed_reason": "Duplicate", "title": "How does adding braces to a variable prevent it from being borrowed (owned?) by a match?", "body": "<p>I'm trying to understand an <a href=\"https://codereview.stackexchange.com/questions/133209/binary-tree-implementation-in-rust/133776#133776\">implementation of a binary tree in Rust</a> and I can't wrap my head around some scoping magic in the <code>locate_mut</code> function:</p>\n\n<pre><code>match {anchor} {\n    &amp;mut Some(ref mut node) if key != node.value.key() =&gt; {\n        anchor = if key &lt; node.value.key() {\n            &amp;mut node.left\n        } else {\n            &amp;mut node.right\n        }\n    },\n    other @ &amp;mut Some(_) |\n    other @ &amp;mut None =&gt; return other\n}\n</code></pre>\n"}, {"tags": ["vector", "hash", "rust"], "answers": [{"tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": true, "score": 9, "last_activity_date": 1494145319, "creation_date": 1494145319, "answer_id": 43829344, "question_id": 43828984, "link": "https://stackoverflow.com/questions/43828984/why-does-hashing-the-same-vector-twice-get-different-hash-codes/43829344#43829344", "title": "Why does hashing the same vector twice get different hash codes?", "body": "<p>The hasher is not reset after <code>finish</code>. Create a new hasher state with <code>DefaultHasher::new()</code> for each hash value you want to compute.</p>\n"}], "owner": {"reputation": 187, "user_id": 6742624, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/5FTD2.jpg?s=128&g=1", "display_name": "YjyJeff", "link": "https://stackoverflow.com/users/6742624/yjyjeff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 465, "favorite_count": 0, "accepted_answer_id": 43829344, "answer_count": 1, "score": 2, "last_activity_date": 1494163336, "creation_date": 1494142613, "last_edit_date": 1494163336, "question_id": 43828984, "link": "https://stackoverflow.com/questions/43828984/why-does-hashing-the-same-vector-twice-get-different-hash-codes", "title": "Why does hashing the same vector twice get different hash codes?", "body": "<p>I want to get the hash code of this vector:</p>\n\n<pre><code>let vec = vec![1,2,3];\nlet tmp = vec![1,2,3];\nlet mut hash = DefaultHasher::new();\nvec.hash(&amp;mut hash);\nprintln!(\"{}\", hash.finish());\ntmp.hash(&amp;mut hash);\nprintln!(\"{}\", hash.finish());\n</code></pre>\n\n<p>However the output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>13585085576907263210\n8618793686565720431\n</code></pre>\n\n<p>What's going on? I have tried multiple times and always get the same result. I want the vector with the same elements to hash to the same hash code.</p>\n"}, {"tags": ["reference", "rust", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 67160, "user_id": 1078084, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/wApmM.jpg?s=128&g=1", "display_name": "Akavall", "link": "https://stackoverflow.com/users/1078084/akavall"}, "is_accepted": false, "score": 4, "last_activity_date": 1494136223, "creation_date": 1494136223, "answer_id": 43828255, "question_id": 43828013, "link": "https://stackoverflow.com/questions/43828013/why-is-being-used-in-closure-arguments/43828255#43828255", "title": "Why is &quot;&amp;&amp;&quot; being used in closure arguments?", "body": "<p>1) I thought the book explanation was good, maybe my example with <code>.cloned()</code> below will be useful. But since <code>.iter()</code> iterates over references, you have to specify reference additionally because <code>find</code> expects a reference.</p>\n\n<p>2) <code>.iter()</code> is iterating over references; therefore, you find a reference.</p>\n\n<p>You could use <code>.cloned()</code> to see what it would look like if you didn't have to do deal with references:</p>\n\n<pre><code>assert_eq!(a.iter().cloned().find(|&amp;x| x == 2), Some(2));\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "edited": false, "score": 1, "creation_date": 1494141007, "post_id": 43828348, "comment_id": 74694952, "body": "thanks! Additionally, in case if anyone doesn&#39;t understand what is <b><i>&quot;dereference into <code>&amp;[i32]</code>&quot;</i></b>, an array <code>a</code> can be automatically borrowed as a slice <code>&amp;a</code> according to <a href=\"http://rustbyexample.com/primitives/array.html\" rel=\"nofollow noreferrer\">this</a>,"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 22, "last_activity_date": 1494137124, "creation_date": 1494137124, "answer_id": 43828348, "question_id": 43828013, "link": "https://stackoverflow.com/questions/43828013/why-is-being-used-in-closure-arguments/43828348#43828348", "title": "Why is &quot;&amp;&amp;&quot; being used in closure arguments?", "body": "<p><code>a</code> is of type <code>[i32; 3]</code>; an array of three <code>i32</code>s.\n<code>[i32; 3]</code> does not implement an <code>iter</code> method, but it <em>does</em> dereference into <code>&amp;[i32]</code>.\n<a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.iter\" rel=\"noreferrer\"><code>&amp;[i32]</code> implements an <code>iter</code> method</a> which produces an iterator.\n<a href=\"https://doc.rust-lang.org/std/slice/struct.Iter.html\" rel=\"noreferrer\">This iterator</a> implements <code>Iterator&lt;Item=&amp;i32&gt;</code>.</p>\n\n<p>It uses <code>&amp;i32</code> rather than <code>i32</code> because the iterator has to work on arrays of <em>any</em> type, and not all types can be safely copied.  So rather than restrict itself to copyable types, it iterates over the elements by reference rather than by value.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\" rel=\"noreferrer\"><code>find</code> is a method</a> defined for all <code>Iterator</code>s.  It lets you look at each element and return the one that matches the predicate.  Problem: if the iterator produces non-copyable values, then passing the value into the predicate would make it impossible to return it from <code>find</code>.  The value cannot be re-generated, since iterators are not (in general) rewindable or restartable.  Thus, <code>find</code> has to pass the element to the predicate by-reference rather than by-value.</p>\n\n<p>So, if you have an iterator that implements <code>Iterator&lt;Item=T&gt;</code>, then <code>Iterator::find</code> requires a predicate that takes a <code>&amp;T</code> and returns a <code>bool</code>.  <code>[i32]::iter</code> produces an iterator that implements <code>Iterator&lt;Item=&amp;i32&gt;</code>.  Thus, <code>Iterator::find</code> called on an array iterator requires a predicate that takes a <code>&amp;&amp;i32</code>.  That is, it passes the predicate a pointer to a pointer to the element in question.</p>\n\n<p>So if you were to write <code>a.iter().find(|x| ..)</code>, the type of <code>x</code> would be <code>&amp;&amp;i32</code>.  This cannot be directly compared to the literal <code>i32</code> value <code>2</code>.  There are several ways of fixing this.  One is to explicitly dereference <code>x</code>: <code>a.iter().find(|x| **x == 2)</code>.  The other is to use pattern matching to destructure the double reference: <code>a.iter().find(|&amp;&amp;x| x == 2)</code>.  These two approaches are, in this case, doing <em>exactly</em> the same thing. [1]</p>\n\n<p>As for why <code>Some(&amp;2)</code> is used: because <code>a.iter()</code> is an iterator over <code>&amp;i32</code>, <em>not</em> an iterator of <code>i32</code>.  If you look at the documentation for <code>Iterator::find</code>, you'll see that for <code>Iterator&lt;Item=T&gt;</code>, it returns an <code>Option&lt;T&gt;</code>.  Hence, in this case, it returns an <code>Option&lt;&amp;i32&gt;</code>, so that's what you need to compare it against.</p>\n\n<hr>\n\n<p>[1]: The differences only matter when you're talking about non-<code>Copy</code> types.  For example, <code>|&amp;&amp;x| ..</code> wouldn't work on a <code>&amp;&amp;String</code>, because you'd have to be able to move the <code>String</code> out from behind the reference, and that's not allowed.  However, <code>|x| **x ..</code> <em>would</em> work, because that is just reaching inside the reference without moving anything.</p>\n"}], "owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1595, "favorite_count": 3, "accepted_answer_id": 43828348, "answer_count": 2, "score": 15, "last_activity_date": 1562767449, "creation_date": 1494133402, "last_edit_date": 1562767449, "question_id": 43828013, "link": "https://stackoverflow.com/questions/43828013/why-is-being-used-in-closure-arguments", "title": "Why is &quot;&amp;&amp;&quot; being used in closure arguments?", "body": "<p>I have two questions regarding <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\" rel=\"noreferrer\">this example</a>:</p>\n\n<pre><code>let a = [1, 2, 3];\n\nassert_eq!(a.iter().find(|&amp;&amp;x| x == 2), Some(&amp;2));\nassert_eq!(a.iter().find(|&amp;&amp;x| x == 5), None);\n</code></pre>\n\n<ol>\n<li><p>Why is <code>&amp;&amp;x</code> used in the closure arguments rather than just <code>x</code>? I understand that <code>&amp;</code> is passing a reference to an object, but what does using it twice mean?</p>\n\n<p>I don't understand what the documentation says:</p>\n\n<blockquote>\n  <p>Because <code>find()</code> takes a reference, and many iterators iterate over references, this leads to a possibly confusing situation where the argument is a double reference. You can see this effect in the examples below, with <code>&amp;&amp;x</code>.</p>\n</blockquote></li>\n<li><p>Why is <code>Some(&amp;2)</code> used rather than <code>Some(2)</code>?</p></li>\n</ol>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494133346, "post_id": 43827850, "comment_id": 74693504, "body": "I found two solutions, now I am going to read your response thanks for your time"}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494134353, "post_id": 43827850, "comment_id": 74693658, "body": "I see that in your answer there are some links, which I visit to find the solution I publish, I learned a lot but maybe it took me a long time to find it, bad luck not to have seen your answer before.  Out of curiosity from the <b>build.rs</b> you can create the libraries thing I did not know, simple example <code>gcc::Config::new().file(&quot;src&#47;hello.c&quot;).include(&quot;src&quot;).compil&zwnj;&#8203;e(&quot;libhello.a&quot;);</code> thanks again."}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494134856, "post_id": 43827850, "comment_id": 74693732, "body": "I was using <code>#[link(name = &quot;test&quot;, kind = &quot;static&quot;)]</code> But after reading your question i use<code>#[link(name = &quot;test&quot;)]</code> And I see that it works too, I thought it was mandatory for static put<code>kind = &quot;static&quot;</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 22, "last_activity_date": 1546739423, "last_edit_date": 1546739423, "creation_date": 1494131621, "answer_id": 43827850, "question_id": 43826572, "link": "https://stackoverflow.com/questions/43826572/where-should-i-place-a-static-library-so-i-can-link-it-with-a-rust-program/43827850#43827850", "title": "Where should I place a static library so I can link it with a Rust program?", "body": "<blockquote>\n  <p>Where should I place a static library</p>\n</blockquote>\n\n<p>Wherever you want. You have to <em>tell</em> the compiler where to find it.</p>\n\n<hr>\n\n<p>First, let's create a static library</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cat hello.c\nint square(int value) {\n  return value * value;\n}\n$ gcc -c -o hello.o hello.c\n$ ar rcs libhello.a hello.o\n</code></pre>\n\n<p>Next, we use a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"noreferrer\">build script</a> to set the value of <code>rustc-link-search</code> to point to the directory where I put the library:</p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-link-search=/Projects/stack-overflow/using-c-static/\");\n}\n</code></pre>\n\n<p>We can now use the functions from the library:</p>\n\n<pre><code>#[link(name = \"hello\")]\nextern \"C\" {\n    fn square(val: i32) -&gt; i32;\n}\n\nfn main() {\n    let r = unsafe { square(3) };\n    println!(\"3 squared is {}\", r);\n}\n</code></pre>\n\n<hr>\n\n<p>That's the basic functionality. You could also use the build script to specify which library to link, instead of having it in your code (<code>rustc-link-lib</code>). I prefer this because then the two configurations are right next to each other.</p>\n\n<p>You should also probably follow the <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#a-sys-packages\" rel=\"noreferrer\"><code>*-sys</code> naming convention</a> and create a crate dedicated to exposing the underlying API. Importantly, this crate should specify the <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#the-links-manifest-key\" rel=\"noreferrer\"><code>link</code> manifest key</a> to avoid duplicate symbols at linking time.</p>\n\n<p>If your build script needs more information, cargo passes many parameters via <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-reads\" rel=\"noreferrer\">environment variables</a>.</p>\n\n<p>If you are compiling C code as part of your crate, you should look into crates like <a href=\"https://crates.io/crates/cc\" rel=\"noreferrer\">cc</a> or <a href=\"https://crates.io/crates/cmake\" rel=\"noreferrer\">cmake</a>, which make the act of building a piece of software much easier.</p>\n"}, {"tags": [], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "is_accepted": false, "score": 4, "last_activity_date": 1494132992, "creation_date": 1494132992, "answer_id": 43827974, "question_id": 43826572, "link": "https://stackoverflow.com/questions/43826572/where-should-i-place-a-static-library-so-i-can-link-it-with-a-rust-program/43827974#43827974", "title": "Where should I place a static library so I can link it with a Rust program?", "body": "<p>I just found a solution (two) but I do not know if it's the best way:</p>\n\n<p><strong>1-</strong> way</p>\n\n<p>build.rs file</p>\n\n<pre><code>extern crate gcc;\n\nfn main() {\n\n    println!(\"cargo:rustc-link-search=native=/home/path/to/rust/proyect/folder/contain/file.a\");\n    println!(\"cargo:rustc-link-lib=static=test\");\n}\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>//..\nbuild = \"build.rs\"\n//..\n</code></pre>\n\n<hr>\n\n<p><strong>2-</strong> way</p>\n\n<p>Cargo.toml</p>\n\n<pre><code>//..\nrustc-link-search = [\"./src/lib\"]\nrustc-link-lib = [\"test\"]\nroot = \"/home/path/to/rust/proyect/\"\n//..\n</code></pre>\n\n<p><code>[\"./src/lib\"]</code> -> place to lib.a refence to root</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11459, "favorite_count": 8, "accepted_answer_id": 43827850, "answer_count": 2, "score": 19, "last_activity_date": 1546739423, "creation_date": 1494115865, "last_edit_date": 1494123486, "question_id": 43826572, "link": "https://stackoverflow.com/questions/43826572/where-should-i-place-a-static-library-so-i-can-link-it-with-a-rust-program", "title": "Where should I place a static library so I can link it with a Rust program?", "body": "<p>I do not know how to link a C library to Rust. Here's what I have done:</p>\n\n<p>My <strong>lib.rs</strong> file contains</p>\n\n<pre><code>#[link(name = \"test\")]\nextern {\n</code></pre>\n\n<p>The library is built and has the name <code>libtest.a</code>.</p>\n\n<p>I do not know where to put it. I have tried several places, but I still have errors of this type when doing <code>cargo run</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `cc` failed: exit code: 1\n//..\nnote: /usr/bin/ld: no se puede encontrar -ltest\nnote: /usr/bin/ld: no se puede encontrar -ltest\nnote: /usr/bin/ld:.......\n//..\n</code></pre>\n\n<p>Translation of the above <code>/usr/bin/ld: no se puede encontrar -ltest</code> -> <code>usr/bin/ld: cannot find -ltest</code></p>\n\n<p>I do not know where to put <strong>libtest.a</strong> so that <code>/usr/bin/ld</code> can find it. Cargo does not tell me where the library should be in the project.</p>\n\n<p>My <strong>Cargo.toml</strong> contains</p>\n\n<pre><code>[dependencies.test]\npath = \"./src/test\"\n\n[dependencies]\nbitflags = \"0.7\"\nlibc = \"0.2\"\n\n[build-dependencies]\nmake-cmd = \"0.1\"\n</code></pre>\n\n<p>After reading <a href=\"https://doc.rust-lang.org/book/ffi.html\" rel=\"noreferrer\">the FFI section of the documentation</a> again, I thought that maybe the error messages from before were because I was looking for a shared library, so I made the following changes:</p>\n\n<pre><code>#[link(name = \"test\", kind = \"static\")]\n</code></pre>\n\n<p>After these changes, I still do not know how to indicate where the library is, but the message now tells me this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: could not find native static library `test`, perhaps an -L flag is missing?\n</code></pre>\n"}, {"tags": ["emacs", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 174, "user_id": 4061870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e480b6009e7ba7c79fe397870c2dcda9?s=128&d=identicon&r=PG", "display_name": "novski", "link": "https://stackoverflow.com/users/4061870/novski"}, "edited": false, "score": 0, "creation_date": 1494142257, "post_id": 43828089, "comment_id": 74695223, "body": "Thanks. That almost worked. I had to add this to my .init.el file: <code>(setq shell-command-switch &quot;-ic&quot;)</code> to make bash load my .bashrc file. I found that here: <a href=\"http://stackoverflow.com/questions/4393628/emacs-shell-command-not-found#4393645\">link</a>"}], "tags": [], "owner": {"reputation": 3849, "user_id": 73449, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7c2045ffcfe95630d0013203a905ca06?s=128&d=identicon&r=PG", "display_name": "ashawley", "link": "https://stackoverflow.com/users/73449/ashawley"}, "is_accepted": true, "score": 1, "last_activity_date": 1494167088, "last_edit_date": 1494167088, "creation_date": 1494134295, "answer_id": 43828089, "question_id": 43825154, "link": "https://stackoverflow.com/questions/43825154/how-to-run-cargo-from-emacs/43828089#43828089", "title": "How to run cargo from Emacs", "body": "<p>From your <code>Cargo.toml</code> file (or the project root directory), run <code>M-x compile</code> and then enter <code>cargo run</code> and then hit <code>RET</code>.  From that same directory you can run <code>M-x recompile</code>.  </p>\n\n<p>You could bind the above to short key bindings, but you should probably investigate <a href=\"https://github.com/kwrooijen/cargo.el\" rel=\"nofollow noreferrer\">cargo.el</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 102, "user_id": 842673, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e0fc9769fc4ec9b23b85da1639d5f31?s=128&d=identicon&r=PG", "display_name": "robertkrahn", "link": "https://stackoverflow.com/users/842673/robertkrahn"}, "is_accepted": false, "score": 0, "last_activity_date": 1612885854, "creation_date": 1612885854, "answer_id": 66122404, "question_id": 43825154, "link": "https://stackoverflow.com/questions/43825154/how-to-run-cargo-from-emacs/66122404#66122404", "title": "How to run cargo from Emacs", "body": "<p><a href=\"https://github.com/brotzeit/rustic\" rel=\"nofollow noreferrer\">rustic</a> mode provides an interface to a number of cargo commands. Among other things you can build, lint, and run tests at point. In the guide <a href=\"https://robert.kra.hn/posts/2021-02-07_rust-with-emacs/#rustic\" rel=\"nofollow noreferrer\">Configuring Emacs for Rust development</a> I'm describing setup and usage in detail.</p>\n"}], "owner": {"reputation": 174, "user_id": 4061870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e480b6009e7ba7c79fe397870c2dcda9?s=128&d=identicon&r=PG", "display_name": "novski", "link": "https://stackoverflow.com/users/4061870/novski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 905, "favorite_count": 0, "accepted_answer_id": 43828089, "answer_count": 2, "score": 1, "last_activity_date": 1612885854, "creation_date": 1494102952, "last_edit_date": 1494167051, "question_id": 43825154, "link": "https://stackoverflow.com/questions/43825154/how-to-run-cargo-from-emacs", "title": "How to run cargo from Emacs", "body": "<p>I'm writing tests in Rust with Emacs. Is it possible to run the <code>cargo run</code> command of my test file in Emacs itself, rather than switching to the terminal for every build?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1494101205, "creation_date": 1494101205, "answer_id": 43824914, "question_id": 43824893, "link": "https://stackoverflow.com/questions/43824893/mod-rs-and-nested-modules-in-rust/43824914#43824914", "title": "mod.rs and nested modules in Rust", "body": "<p>When you write curly braces in a <code>mod</code> item, that tells the compiler that the module's contents are within these braces, not in an external file. Thus, the compiler doesn't even look at <code>engine/mod.rs</code>. When you write a semicolon instead, the compiler will look for an external file.</p>\n\n<p>What you need to do instead is put these lines in <code>engine/mod.rs</code>:</p>\n\n<pre><code>pub mod random;\npub mod dummy;\n</code></pre>\n\n<p>And in <code>lib.rs</code>, write:</p>\n\n<pre><code>pub mod engine;\n</code></pre>\n"}], "owner": {"reputation": 1205, "user_id": 1225573, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/4d9dd2dfe5616ad3fe2c1ea7d107983e?s=128&d=identicon&r=PG&f=1", "display_name": "GrayR", "link": "https://stackoverflow.com/users/1225573/grayr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1741, "favorite_count": 1, "accepted_answer_id": 43824914, "answer_count": 1, "score": 1, "last_activity_date": 1494106888, "creation_date": 1494100996, "last_edit_date": 1494106888, "question_id": 43824893, "link": "https://stackoverflow.com/questions/43824893/mod-rs-and-nested-modules-in-rust", "title": "mod.rs and nested modules in Rust", "body": "<p>I want to specify a generic trait <code>Engine</code> and provide two different implementations: <code>Random</code> and <code>Dummy</code>. I want to use following file structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src-\n  |-engine\n    |-mod.rs //contains Engine trait code\n    |-random.rs // contains first engine implementation\n    |-dummy.rs // contains second engine implementation\n</code></pre>\n\n<p>I have something like this in <strong>lib.rs</strong>:</p>\n\n<pre><code>pub mod engine {\n    // random moves engine\n    pub mod random;\n    pub mod dummy;\n}\n</code></pre>\n\n<p>When I try to add <code>use engine::Engine</code> anywhere in my other modules, it can't be found:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `engine::Engine`\n</code></pre>\n"}, {"tags": ["tree", "rust", "cyclic-reference", "cyclic-graph"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1494097670, "post_id": 43824077, "comment_id": 74686810, "body": "How do you plan to use this data-structure? What kind of datum will the nodes hold? How do you plan to enforce the Aliasing XOR Mutability tenet of Rust for it? If you could sketch what you hope to obtain, how you expect to avoid memory leaks, and how you expect to solve Aliasing XOR Mutability, then we could help you realize this in Rust. Otherwise? You&#39;ll get tons of different proposals (there are many different ways, each with their trade-offs), which may or may not be useful."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1494097775, "post_id": 43824077, "comment_id": 74686842, "body": "<i>but that sounds like it would defeat the purpose of Rust&#39;s 0-runtime-cost lifetime management</i> =&gt; Rust is 0-cost with it can and has a minimal cost otherwise; <code>Rc</code> and <code>Weak</code>, <code>RefCell</code> are perfectly valid tools... though they muddy the code and push the validation of the use of the data to run-time instead of compile-time (thus increasing the likelihood of bugs)."}, {"owner": {"reputation": 6021, "user_id": 3688648, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/migGL.jpg?s=128&g=1", "display_name": "Felk", "link": "https://stackoverflow.com/users/3688648/felk"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494099213, "post_id": 43824077, "comment_id": 74687282, "body": "My goal is to depict a BNF grammar. These problems only occur during &quot;knotting together&quot; of the nodes. My plan is to somehow knot these nodes together using immutable references only, referencing node enums being owned once each by a (private) vec with the same lifetime: Those 2 probably bundled up in a struct, so when the struct gets dropped, both the vector and the cyclic structure get dropped simultaneously without problems."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494152218, "post_id": 43824077, "comment_id": 74697810, "body": "Okay, sounds easy-ish; please edit this into your question :)"}], "answers": [{"comments": [{"owner": {"reputation": 6021, "user_id": 3688648, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/migGL.jpg?s=128&g=1", "display_name": "Felk", "link": "https://stackoverflow.com/users/3688648/felk"}, "edited": false, "score": 0, "creation_date": 1495369872, "post_id": 43830404, "comment_id": 75214456, "body": "I&#39;m coming back to this now trying out your solution, and I am having a hard time figuring out what you mean by &quot;use Cell for the mutable part&quot;. After I&#39;ve put my nodes into the arena, I don&#39;t know how Cell would help me swapping out the placeholder"}, {"owner": {"reputation": 6021, "user_id": 3688648, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/migGL.jpg?s=128&g=1", "display_name": "Felk", "link": "https://stackoverflow.com/users/3688648/felk"}, "edited": false, "score": 0, "creation_date": 1495370601, "post_id": 43830404, "comment_id": 75214666, "body": "I got it to work if I alter my struct to hold references to Cells of nodes <code>&amp;&#39;a Cell&lt;Node&lt;&#39;a&gt;&gt;</code> instead of references themselves <code>&amp;&#39;a Node&lt;&#39;a&gt;</code>. Is this what you meant? If yes, this is a bit unfortunate as I think the usage of <code>Cell</code> should be an implementation detail instead of part of the signature"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 6021, "user_id": 3688648, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/migGL.jpg?s=128&g=1", "display_name": "Felk", "link": "https://stackoverflow.com/users/3688648/felk"}, "edited": false, "score": 0, "creation_date": 1495371443, "post_id": 43830404, "comment_id": 75214983, "body": "@Felk: Nearly. I meant that if you want to update the content of <code>Link</code>, it should be in a cell: <code>Link(Cell&lt;&amp;&#39;a Node&lt;&#39;a&gt;&gt;)</code>. <code>Cell</code> requires that the type it contains be <code>Copy</code> and <code>&amp;T</code> is <code>Copy</code>. As for exposing <code>Cell</code> as part of the <code>API</code>, it&#39;s up to you. You can (1) just expose it, (2) encapsulate the <code>enum</code> as a private member of a struct or (3) have one enum with <code>Cell</code> for building the graph and then one without for exposure (you can transmute <code>Cell&lt;T&gt;</code> to <code>T</code> safely if nobody modifies <code>T</code> afterwards)."}, {"owner": {"reputation": 6021, "user_id": 3688648, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/migGL.jpg?s=128&g=1", "display_name": "Felk", "link": "https://stackoverflow.com/users/3688648/felk"}, "edited": false, "score": 0, "creation_date": 1495376715, "post_id": 43830404, "comment_id": 75216545, "body": "That worked for building up the structure, thanks. However, you say I can transmute all my nodes from <code>Cell&lt;T&gt;</code> to <code>T</code>? Can you give an example how?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 6021, "user_id": 3688648, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/migGL.jpg?s=128&g=1", "display_name": "Felk", "link": "https://stackoverflow.com/users/3688648/felk"}, "edited": false, "score": 0, "creation_date": 1495393630, "post_id": 43830404, "comment_id": 75221793, "body": "<code>std::mem::transmute</code> is the method to use. It&#39;s unsafe, but since <code>Cell</code> is a bare <code>T</code> underneath the covers it should work well enough."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1494162997, "last_edit_date": 1494162997, "creation_date": 1494152941, "answer_id": 43830404, "question_id": 43824077, "link": "https://stackoverflow.com/questions/43824077/is-there-a-way-to-build-a-structure-with-cyclic-links-without-runtime-overhead/43830404#43830404", "title": "Is there a way to build a structure with cyclic links without runtime overhead?", "body": "<blockquote>\n  <p>Is there a way to have such a structure with cyclic links without runtime overhead, for example with pure references like I tried? I'm fine with additional memory cost, like a backing Vec holding ownership to all nodes.</p>\n</blockquote>\n\n<p>Yes, there are many ways.</p>\n\n<p>It is however fundamental to realize that Rust requires enforcing the <strong>Aliasing XOR Mutability</strong> principle at all times. It is preferable to enforce it at compile-time, so as to have 0 run-time cost, however it is sometimes required to manage it at run-time and there are multiple structures for this:</p>\n\n<ul>\n<li><code>Cell</code>, <code>RefCell</code>, <code>AtomicXXX</code>, <code>Mutex</code>, <code>RWLock</code> (the ill-named) are about mutating aliased items safely,</li>\n<li><code>Rc</code>, <code>Weak</code>, <code>Arc</code>, are about having multiple owners.</li>\n</ul>\n\n<p>Balancing the potential run-time overhead compared to the obtained flexibility is a fine art; it takes some experience and experimentation.</p>\n\n<hr>\n\n<p>In your specific case (building a BNF grammar with nodes referencing each-other), we can indeed achieve 0 run-time overhead using <code>Cell</code> for mutability.</p>\n\n<p>The main difficulty however is obtaining a group of nodes with the same lifetime. You are on the right track with the idea of a <code>Vec&lt;Node&gt;</code>, but as you noticed as soon as you borrow one node you cannot mutate the <code>Vec</code> again: this is because growing the <code>Vec</code> could cause it to re-allocate its underlying storage which would render the already obtained reference dangling (pointing to freed memory).</p>\n\n<p>The generic solution would be to use unsafe code to manage the lifetime of the nodes yourself. You are, however, lucky: as you mentioned, your case is special because the number of nodes is bounded (by the grammar definition), and you drop them all at once. This calls for an <strong>arena</strong>.</p>\n\n<p>My advice is therefore twofold:</p>\n\n<ol>\n<li>Stash nodes in a <a href=\"https://crates.io/crates/typed-arena\" rel=\"nofollow noreferrer\"><code>typed-arena</code></a>,</li>\n<li>Use <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a> for the mutable part (<code>&amp;T</code> is <code>Copy</code>).</li>\n</ol>\n\n<p>You will not be able to store the arena in the same struct as the rest of the grammar without <code>unsafe</code> code; it's up to you whether to use <code>unsafe</code> or structure your program so that the arena outlives the computation.</p>\n"}], "owner": {"reputation": 6021, "user_id": 3688648, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/migGL.jpg?s=128&g=1", "display_name": "Felk", "link": "https://stackoverflow.com/users/3688648/felk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1494162997, "creation_date": 1494095885, "last_edit_date": 1494114647, "question_id": 43824077, "link": "https://stackoverflow.com/questions/43824077/is-there-a-way-to-build-a-structure-with-cyclic-links-without-runtime-overhead", "title": "Is there a way to build a structure with cyclic links without runtime overhead?", "body": "<p>I am trying to implement a cyclic linked data structure in Rust. My <code>Node</code>s are defined as:</p>\n\n<pre><code>#[derive(Debug)]\nenum Node&lt;'a&gt; {\n    Link(&amp;'a Node&lt;'a&gt;),\n    Leaf,\n}\n</code></pre>\n\n<p>I am trying to build a minimal structure like this (extra brackets for better lifetime visibility):</p>\n\n<pre><code>fn main() {\n    let placeholder = Node::Leaf;\n    {\n        let link1 = Node::Link(&amp;placeholder);\n        {\n            let link2 = Node::Link(&amp;link1);\n            println!(\"{:?}\", link2);\n        } // link2 gets dropped\n    } // link1 gets dropped\n}\n</code></pre>\n\n<p>This works, but now I don't know how to replace the placeholder with a reference to <code>link2</code> to \"close the cycle\". I tried this, but it doesn't work because I can't assign to <code>link1</code>, which is borrowed the line above, and because <code>link2</code> would go out of scope while it's still referenced by <code>link1</code>:</p>\n\n<pre><code>let placeholder = Node::Leaf;\n{\n    let mut link1 = Node::Link(&amp;placeholder);\n    {\n        let link2 = Node::Link(&amp;link1);\n        link1 = Node::Link(&amp;link2);\n        println!(\"{:?}\", link2);\n    } // link2 gets dropped\n} // link1 gets dropped\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `link2` does not live long enough\n  --&gt; src/main.rs:15:9\n   |\n13 |             link1 = Node::Link(&amp;link2);\n   |                                 ----- borrow occurs here\n14 |             println!(\"{:?}\", link2);\n15 |         } // link2 gets dropped\n   |         ^ `link2` dropped here while still borrowed\n16 |     } // link1 gets dropped\n   |     - borrowed value needs to live until here\n\nerror[E0506]: cannot assign to `link1` because it is borrowed\n  --&gt; src/main.rs:13:13\n   |\n12 |             let link2 = Node::Link(&amp;link1);\n   |                                     ----- borrow of `link1` occurs here\n13 |             link1 = Node::Link(&amp;link2);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `link1` occurs here\n</code></pre>\n\n<p>I could try to avoid these lifetime issues by using <code>Rc</code>s, but that sounds like it would defeat the purpose of Rust's 0-runtime-cost lifetime management.</p>\n\n<p>Another attempt of putting all nodes into a <code>Vec</code> and only taking direct references to that didn't work either:</p>\n\n<pre><code>use std::ops::IndexMut;\n\nlet mut store = Vec::new();\nstore.push(Node::Leaf);\nstore.push(Node::Link(&amp;store[0]));\nstore.push(Node::Link(&amp;store[1]));\n*store.index_mut(1) = Node::Link(&amp;store[2]);\n</code></pre>\n\n<p>Because I can't change any nodes without mutably borrowing them, but they have all been immutably borrowed already.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `store` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:12:28\n   |\n12 |     store.push(Node::Link(&amp;store[0]));\n   |     -----                  ^^^^^    - mutable borrow ends here\n   |     |                      |\n   |     |                      immutable borrow occurs here\n   |     mutable borrow occurs here\n\nerror[E0502]: cannot borrow `store` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:13:5\n   |\n12 |     store.push(Node::Link(&amp;store[0]));\n   |                            ----- immutable borrow occurs here\n13 |     store.push(Node::Link(&amp;store[1]));\n   |     ^^^^^ mutable borrow occurs here\n14 |     *store.index_mut(1) = Node::Link(&amp;store[2]);\n15 | }\n   | - immutable borrow ends here\n\nerror[E0502]: cannot borrow `store` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:13:28\n   |\n13 |     store.push(Node::Link(&amp;store[1]));\n   |     -----                  ^^^^^    - mutable borrow ends here\n   |     |                      |\n   |     |                      immutable borrow occurs here\n   |     mutable borrow occurs here\n\nerror[E0502]: cannot borrow `store` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:14:6\n   |\n12 |     store.push(Node::Link(&amp;store[0]));\n   |                            ----- immutable borrow occurs here\n13 |     store.push(Node::Link(&amp;store[1]));\n14 |     *store.index_mut(1) = Node::Link(&amp;store[2]);\n   |      ^^^^^ mutable borrow occurs here\n15 | }\n   | - immutable borrow ends here\n</code></pre>\n\n<p>Is there a way to have such a structure with cyclic links without runtime overhead, for example with pure references like I tried? I'm fine with additional memory cost, like a backing <code>Vec</code> holding ownership to all nodes.</p>\n"}, {"tags": ["loops", "rust", "control-flow"], "comments": [{"owner": {"reputation": 42370, "user_id": 3980929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/xyKrD.png?s=128&g=1", "display_name": "Rakete1111", "link": "https://stackoverflow.com/users/3980929/rakete1111"}, "edited": false, "score": 0, "creation_date": 1494090194, "post_id": 43823042, "comment_id": 74684540, "body": "I&#39;m not sure if this is really a dupe, but <a href=\"http://stackoverflow.com/questions/27893223/how-do-i-iterate-over-a-range-with-a-custom-step\" title=\"how do i iterate over a range with a custom step\">stackoverflow.com/questions/27893223/&hellip;</a> gives you the answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494090277, "post_id": 43823042, "comment_id": 74684566, "body": "And the related <a href=\"http://stackoverflow.com/q/31371478/155423\">What is a stable way to iterate on a range with custom step?</a>."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 2, "creation_date": 1494094606, "post_id": 43823042, "comment_id": 74685902, "body": "This example isn&#39;t using a custom step size, its stepping by an arbitrary function, making the examples above not so closely related. (<code>step_by</code> couldn&#39;t be used to replace <code>step_function</code> usage here)."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1494229707, "post_id": 43823042, "comment_id": 74720590, "body": "What kind of constraint you need that a closure cannot cover? i.e. do you have some concrete example?"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1494462180, "post_id": 43823042, "comment_id": 74842992, "body": "@kennytm, from using closures in the past - there are some expressions you can use in the body of a block which will give errors in a closure. Doubtless there are ways to workaround most cases - however this makes porting code a less straightforward process. Hence asking if C-style loops are possible. Of course there are pros/cons with using a macro (the <code>cfor</code> crate), so solutions need to be weighted up  - perhaps to get an initial port of C code, using <code>cfor</code> macro makes sense for eg, later the code can be made more <i>rustic</i> afterwards <i>(once tests are in place)</i>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494163235, "post_id": 43829828, "comment_id": 74700770, "body": "While I agree with the content of your answer, I don&#39;t believe this answers the question with the restrictions the OP has required: <i>Without creating a special iterator</i>. Additionally, since OP has underspecified the problem, <code>j</code> and <code>k</code> might be calculated <i>inside</i> the loop (maybe from an external source, even). All the solutions presented here require all the information on how much to iterate to be known before starting the loop."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494164061, "post_id": 43829828, "comment_id": 74701044, "body": "@Shepmaster \u2460 If <code>iterate().take_while()</code> or <code>repeat().scan()</code> count as &quot;creating a special iterator&quot;, then <code>Range::step_by</code> is also a special iterator. (BTW <a href=\"http://stackoverflow.com/help/how-to-answer\">not strictly following OP&#39;s restriction is acceptable</a>. And this should be more helpful for future readers.) \u2461 Recalculating <code>j</code> and <code>k</code> means making them a <code>Cell</code>. I&#39;ll wait for OP to clarify. \u2462 I don&#39;t see what you mean by &quot;information on how much to iterate&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494164626, "post_id": 43829828, "comment_id": 74701215, "body": "<i>this should be more helpful for future readers</i> \u2014 I <b>absolutely agree</b>. I&#39;m just pointing out the nuances in the OP. I honestly don&#39;t know if simply instantiating an iterator would meet the restrictions or not. <i>information on how much to iterate</i> was me trying to be abstract about &quot;all the things that go into the closure&quot;. In your examples, that would be <code>2*i + 3</code> but with the potential complication of external data and friends."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494164832, "post_id": 43829828, "comment_id": 74701286, "body": "@Shepmaster I see, thanks. If the <code>step_function</code> is simple enough (i.e. it doesn&#39;t depend on <code>j</code> and <code>k</code> that needs to be recalculated <i>inside</i> the loop), the current approach should be enough. Too bad <code>scopeguard::defer!</code> doesn&#39;t work here :("}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1494173602, "post_id": 43829828, "comment_id": 74704130, "body": "@Shepmaster: Specifying &quot;not using an iterator&quot; is an X/Y issue. Let the OP expose the problem, and the answers propose solutions. Restrictions of the kind &quot;not using semi-colons&quot;, &quot;not using braces&quot; or &quot;not creating a custom iterator&quot;? Why? We&#39;re not <a href=\"https://fr.wikipedia.org/wiki/Georges_Perec\" rel=\"nofollow noreferrer\">Perec</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1494192125, "post_id": 43829828, "comment_id": 74710276, "body": "@MatthieuM. my only point is that <i>the OP</i> specifically says &quot;without creating a special iterator&quot;, thus my comment is only a warning that the OP might dislike this answer which proposes creating a special iterator. I think it&#39;s a poor restriction as well, but posters have strange whims. In the general case, there are reasons to have restrictions in questions. I&#39;d be frustrated if answerers disregarded my restrictions and answered otherwise. If we were doing that, we could do away with the restriction of &quot;the loop iterates a different amount each time&quot; and just mark it as a duplicate ;-)"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1494203246, "post_id": 43829828, "comment_id": 74712648, "body": "Edited the question, by creating a special iterator I meant having to define a new iterator type for each for loop. Mainly because this is <i>not</i> zero overhead in terms of reading/writing code. Also closures impose some constraints wrt scope &amp; function use."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": false, "score": 4, "last_activity_date": 1494164520, "last_edit_date": 1494164520, "creation_date": 1494148705, "answer_id": 43829828, "question_id": 43823042, "link": "https://stackoverflow.com/questions/43823042/is-it-possible-to-step-by-a-different-amount-each-iteration-without-creating-a-s/43829828#43829828", "title": "Is it possible to step by a different amount each iteration without creating a special iterator?", "body": "<p>If you could import an external crate, you should use <a href=\"https://docs.rs/itertools/0.6.0/itertools/fn.iterate.html\" rel=\"nofollow noreferrer\"><code>itertools::iterate</code></a>:</p>\n\n<pre><code>extern crate itertools;\nuse itertools::iterate;\n\nfn main() {\n    for i in iterate(0, |i| 2*i + 3).take_while(|i| *i &lt; 100) {\n        println!(\"{}\", i);\n        // 0 3 9 21 45 93\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>And if you are <strong>really</strong> missing the C-style for loop, you could use the <a href=\"https://docs.rs/cfor/1.1.0/cfor/\" rel=\"nofollow noreferrer\"><code>cfor</code></a> crate:</p>\n\n<pre><code>#[macro_use] extern crate cfor;\n\nfn main() {\n    cfor!{ let mut i = 0; i &lt; 100; i = 2*i + 3; {\n        println!(\"{}\", i);\n        // 0 3 9 21 45 93\n    }}\n}\n</code></pre>\n\n<hr>\n\n<p>If you are restricting to using the standard library only, creating a special iterator would be the most idiomatic way.</p>\n\n<pre><code>fn main() {\n    for i in StepByFn::new(0, 100, |i| 2*i + 3) {\n        println!(\"{}\", i);\n        // 0 3 9 21 45 93\n    }\n}\n\nstruct StepByFn&lt;T, F&gt; {\n    begin: T,\n    end: T,\n    step: F,\n}\n\nimpl&lt;T, F: FnMut(&amp;T) -&gt; T&gt; StepByFn&lt;T, F&gt; {\n    pub fn new(begin: T, end: T, step: F) -&gt; StepByFn&lt;T, F&gt; {\n        StepByFn { begin, end, step }\n    }\n}\n\nimpl&lt;T: PartialOrd, F: FnMut(&amp;T) -&gt; T&gt; Iterator for StepByFn&lt;T, F&gt; {\n    type Item = T;\n    fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n        if self.begin &gt;= self.end {\n            return None;\n        }\n        let next = (self.step)(&amp;self.begin);\n        let prev = std::mem::replace(&amp;mut self.begin, next);\n        Some(prev)\n    }\n}\n</code></pre>\n\n<p>It is also possible to create an inline iterator with <code>repeat().scan()</code>, but it is very ugly and does not express the intention very well</p>\n\n<pre><code>use std::iter::repeat;\n\nfn main() {\n    for i in repeat(()).scan(0, |i, ()| { \n        let old = *i; \n        *i = 2*old + 3; \n        if old &lt; 100 { Some(old) } else { None } \n    }) {\n        println!(\"{}\", i);\n        // 0 3 9 21 45 93\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 592, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1578691844, "creation_date": 1494089628, "last_edit_date": 1578691844, "question_id": 43823042, "link": "https://stackoverflow.com/questions/43823042/is-it-possible-to-step-by-a-different-amount-each-iteration-without-creating-a-s", "title": "Is it possible to step by a different amount each iteration without creating a special iterator?", "body": "<p>In C, a for loop has an optional increment section which I sometimes miss in Rust:</p>\n\n<pre><code>for (uint i = 0; i &lt; max; i = step_function(i, j, k)) {\n    /* many lines of code! */\n}\n</code></pre>\n\n<p>This could be written in Rust as:</p>\n\n<pre><code>let mut i: u32 = 0;\nwhile (i &lt; max) {\n    // \n    // many lines of code! \n    //\n    i = step_function(i, j, k);\n}\n</code></pre>\n\n<p>... however this will introduce bugs if <code>continue</code> exists somewhere in the <em>\"many lines of code\"</em>. My personal preference is also to keep the increment at the top of the loop.</p>\n\n<p>Without creating a special iterator to handle this, is there a way to loop that matches C style more closely, accounting for both issues mentioned?</p>\n\n<p>By \"special iterator\", I mean not having to define an iterator type and methods outside the for loop. </p>\n\n<p>While it may seem like an artificial requirement, having to define an iterator for a single use - adds some overhead both in reading and writing the code.</p>\n\n<p>Although @kennytm's answer shows how a reusable <code>StepByFn</code> iterator could work, using closures adds some constraints to the code that wouldn't exist otherwise.</p>\n"}, {"tags": ["rust", "undefined-behavior"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1494086056, "creation_date": 1494086056, "answer_id": 43822444, "question_id": 43822297, "link": "https://stackoverflow.com/questions/43822297/is-left-shifting-a-negative-value-undefined-behavior-in-rust/43822444#43822444", "title": "Is left-shifting a negative value undefined behavior in Rust?", "body": "<p>The <a href=\"https://doc.rust-lang.org/reference/\" rel=\"nofollow noreferrer\">Rust Reference</a> has a <a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"nofollow noreferrer\">list of all undefined behavior</a>. Left shifting a signed number beyond the size of the type is not in the list.</p>\n"}], "owner": {"reputation": 27199, "user_id": 427158, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f706984800b6d136b9331a6ee20c676f?s=128&d=identicon&r=PG", "display_name": "maxschlepzig", "link": "https://stackoverflow.com/users/427158/maxschlepzig"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 0, "accepted_answer_id": 43822444, "answer_count": 1, "score": 5, "last_activity_date": 1525721111, "creation_date": 1494085163, "last_edit_date": 1525721111, "question_id": 43822297, "link": "https://stackoverflow.com/questions/43822297/is-left-shifting-a-negative-value-undefined-behavior-in-rust", "title": "Is left-shifting a negative value undefined behavior in Rust?", "body": "<p>Several operations on integers that yield undefined behavior in C are defined in Rust. A common theme is that they panic in debug mode and have a defined non-panic outcome in release mode. For example, signed integer overflow panics in debug mode, but wraps in release mode. There are also operator variants defined like <code>wrapping_add()</code>, <code>saturating_add()</code>, etc.</p>\n\n<p>But what about shifting a negative value? This is undefined behavior in C.</p>\n\n<p>The following test case succeeds in Rust 1.17.0:</p>\n\n<pre><code>#[test]\nfn negative_shift() {\n    let i = -128i8;\n    let j = i &lt;&lt; 1;\n    assert_eq!(j, 0);\n}\n</code></pre>\n\n<p>Although it succeeds it could still be undefined behavior...</p>\n"}, {"tags": ["string", "indexing", "rust", "character"], "answers": [{"tags": [], "owner": {"reputation": 1982, "user_id": 2872479, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ez7og.jpg?s=128&g=1", "display_name": "metame", "link": "https://stackoverflow.com/users/2872479/metame"}, "is_accepted": true, "score": 17, "last_activity_date": 1494075991, "creation_date": 1494075991, "answer_id": 43820821, "question_id": 43820696, "link": "https://stackoverflow.com/questions/43820696/how-can-i-find-the-index-of-a-character-in-a-string-in-rust/43820821#43820821", "title": "How can I find the index of a character in a string in Rust?", "body": "<p>You are looking for the <code>find</code> method for String.  To find the index of <code>'g'</code> in <code>\"Program\"</code> you can do </p>\n\n<pre><code>\"Program\".find('g')\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.find\" rel=\"noreferrer\">Docs on find</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 437, "user_id": 6273510, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-JZcT-H1qoMQ/AAAAAAAAAAI/AAAAAAAAALs/1_zwlxy0NGU/photo.jpg?sz=128", "display_name": "Enigma", "link": "https://stackoverflow.com/users/6273510/enigma"}, "is_accepted": false, "score": 28, "last_activity_date": 1508985780, "last_edit_date": 1508985780, "creation_date": 1508977236, "answer_id": 46943949, "question_id": 43820696, "link": "https://stackoverflow.com/questions/43820696/how-can-i-find-the-index-of-a-character-in-a-string-in-rust/46943949#46943949", "title": "How can I find the index of a character in a string in Rust?", "body": "<p>Although a little more convoluted than I would like, another solution is to use the <a href=\"https://doc.rust-lang.org/std/str/struct.Chars.html\" rel=\"noreferrer\"><code>Chars</code></a> iterator and its <code>position()</code> function:</p>\n\n<pre><code>\"Program\".chars().position(|c| c == 'g').unwrap()\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.find\" rel=\"noreferrer\"><code>find</code></a> used in the accepted solution returns the <em>byte offset</em> and not necessarily the index of the character. It works fine with basic ASCII strings, such as the one in the question, and while it will return a value when used with multi-byte Unicode strings, treating the resulting value as a character index will cause problems.</p>\n\n<p>This works:</p>\n\n<pre><code>let my_string = \"Program\";\nlet g_index = my_string.find(\"g\");   // 3\nlet g: String = my_string.chars().skip(g_index).take(1).collect();\nassert_eq!(\"g\", g);   // g is \"g\"\n</code></pre>\n\n<p>This does not work:</p>\n\n<pre><code>let my_string = \"\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u30ba\";\nlet g_index = my_string.find(\"\u30b0\");    // 6\nlet g: String = my_string.chars().skip(g_index).take(1).collect();\nassert_eq!(\"\u30b0\", g);    // g is \"\u30ba\"\n</code></pre>\n"}], "owner": {"reputation": 139, "user_id": 7768566, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e46362a25271acd70ca3d4210837bf65?s=128&d=identicon&r=PG&f=1", "display_name": "MrCoder", "link": "https://stackoverflow.com/users/7768566/mrcoder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13539, "favorite_count": 2, "accepted_answer_id": 43820821, "answer_count": 2, "score": 12, "last_activity_date": 1508985780, "creation_date": 1494075133, "last_edit_date": 1494076842, "question_id": 43820696, "link": "https://stackoverflow.com/questions/43820696/how-can-i-find-the-index-of-a-character-in-a-string-in-rust", "title": "How can I find the index of a character in a string in Rust?", "body": "<p>I have a string with the value \"Program\", and I want to find the index of character 'g' in that string.</p>\n"}, {"tags": ["rust", "travis-ci"], "answers": [{"comments": [{"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "edited": false, "score": 0, "creation_date": 1494074388, "post_id": 43818877, "comment_id": 74679434, "body": "I&#39;m so sorry for asking such a basic question."}, {"owner": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "reply_to_user": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "edited": false, "score": 0, "creation_date": 1494086341, "post_id": 43818877, "comment_id": 74683312, "body": "@AfshinMehrabani Why did you use 1.0 and 1.1? Was this copy and pasted from somewhere? Maybe that somewhere could do with some better defaults. 1.0 and 1.1 are quite ancient. Maybe it might be good to change that somewhere to recommend stable or something."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1494063198, "creation_date": 1494063198, "answer_id": 43818877, "question_id": 43818730, "link": "https://stackoverflow.com/questions/43818730/undefined-macro-assert-ne-on-travisci/43818877#43818877", "title": "undefined macro &#39;assert_ne!&#39; on TravisCI", "body": "<p>It's undefined because it doesn't exist in those versions.</p>\n\n<p>If you check the <a href=\"https://doc.rust-lang.org/core/macro.assert_ne.html\" rel=\"noreferrer\">documentation for <code>assert_ne!</code></a>, you will note that it was introduced in version 1.12.  You are testing against Rust 1.0 and 1.1.</p>\n"}], "owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 35, "favorite_count": 0, "accepted_answer_id": 43818877, "answer_count": 1, "score": 0, "last_activity_date": 1494076807, "creation_date": 1494062072, "last_edit_date": 1494076807, "question_id": 43818730, "link": "https://stackoverflow.com/questions/43818730/undefined-macro-assert-ne-on-travisci", "title": "undefined macro &#39;assert_ne!&#39; on TravisCI", "body": "<p>I'm able to test and build <a href=\"https://github.com/afshinm/juggernaut\" rel=\"nofollow noreferrer\">my project</a> on my local machine but when I want TravisCI to build the project, it says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: macro undefined: 'assert_ne!'\n</code></pre>\n\n<p>I have <a href=\"https://travis-ci.org/afshinm/juggernaut/jobs/229394671\" rel=\"nofollow noreferrer\">added two different versions of Rust but both returns the same error</a>.</p>\n\n<p>Do I need to import this macro before using it? If so, why does it work with no problems on my machine? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1494057005, "post_id": 43817812, "comment_id": 74674763, "body": "thanks a lot @kennytm it indeed solved it! Out of curiosity why do you say that <code>SmallVec&lt;[T;1]&gt;</code> would prevent the move (I am guessing you are referring to <code>let old_value = replace(&amp;mut self.value, NoneOneOrMany::None);</code>) ?"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1494057420, "post_id": 43817812, "comment_id": 74674866, "body": "@Boris When <code>self.value</code> was <code>One(t)</code>, there would be two moves of the <code>t</code>: first from <code>self.value</code> to <code>old_value</code>, second from <code>old_value</code> to the vector. With <code>SmallVec</code>, there would be only one move directly from the stack <code>[T; 1]</code> to the heap vec. Of course for <code>T == u32</code> this is really not a big deal, it is only a problem if <code>T == SomeHugeStruct</code>."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 4, "last_activity_date": 1494055232, "last_edit_date": 1494055232, "creation_date": 1494054923, "answer_id": 43817812, "question_id": 43817631, "link": "https://stackoverflow.com/questions/43817631/cant-compile-a-oneormany-enum-which-allows-to-push-values-into-it/43817812#43817812", "title": "Can&#39;t compile a OneOrMany enum which allows to push values into it", "body": "<p>You could move-out the old value by temporarily <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"nofollow noreferrer\"><code>replace</code></a>-ing the <code>value</code> with a <code>None</code>, and then fill it back later:</p>\n\n<pre><code>pub fn push(&amp;mut self, new_value: T) {\n    let old_value = replace(&amp;mut self.value, NoneOneOrMany::None);\n    self.value = match old_value {\n        NoneOneOrMany::None =&gt; {\n            NoneOneOrMany::One(new_value)\n        }\n        NoneOneOrMany::One(existing_value) =&gt; {\n            NoneOneOrMany::Many(vec![existing_value, new_value])\n        }\n        NoneOneOrMany::Many(mut vec) =&gt; {\n            vec.push(new_value);\n            NoneOneOrMany::Many(vec)\n        }\n    }\n}\n</code></pre>\n\n<p>You don't need to <code>.clone()</code>, though this will incur an extra move of T from <code>self.value</code> to <code>old_value</code></p>\n\n<p>Consider using the <a href=\"https://docs.rs/smallvec/0.3.3/smallvec/struct.SmallVec.html\" rel=\"nofollow noreferrer\"><code>smallvec</code></a> crate instead. The <code>FormValues&lt;T&gt;</code> type is equivalent to <code>SmallVec&lt;[T; 1]&gt;</code>. It is also written with carefully crafted <a href=\"https://docs.rs/smallvec/0.3.3/src/smallvec/lib.rs.html#298\" rel=\"nofollow noreferrer\">unsafe</a> <a href=\"https://docs.rs/smallvec/0.3.3/src/smallvec/lib.rs.html#340\" rel=\"nofollow noreferrer\">code</a> so that the unnecessary move is not needed.</p>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 43817812, "answer_count": 1, "score": 1, "last_activity_date": 1494084025, "creation_date": 1494053496, "last_edit_date": 1494084025, "question_id": 43817631, "link": "https://stackoverflow.com/questions/43817631/cant-compile-a-oneormany-enum-which-allows-to-push-values-into-it", "title": "Can&#39;t compile a OneOrMany enum which allows to push values into it", "body": "<p>I'm trying to create an enum that can hold zero, one or many values (somehow classical) and with which I would interact by a single <code>push(new_value:T)</code> method. It could have either <code>None</code> value (empty), <code>One</code> value or <code>Many</code> value (basically a vector/slice).</p>\n\n<p>I'm trying to create a wrapper for a flexible type that can be either a single value or a vector.</p>\n\n<p>Here is what I have written but that I can't compile</p>\n\n<pre><code>enum NoneOneOrMany&lt;T&gt; {\n    None,\n    One(T),\n    Many(Vec&lt;T&gt;),\n}\n\nstruct FormValues&lt;T&gt; {\n    value: NoneOneOrMany&lt;T&gt;,\n}\n\nimpl&lt;T&gt; FormValues&lt;T&gt; {\n    pub fn new() -&gt; FormValues&lt;T&gt; {\n        FormValues { value: NoneOneOrMany::None }\n    }\n\n    pub fn push(&amp;mut self, new_value: T) {\n        match self.value {\n            NoneOneOrMany::None =&gt; self.value = NoneOneOrMany::One(new_value),\n            NoneOneOrMany::One(existing_value) =&gt; {\n                let mut vec = Vec::&lt;T&gt;::new();\n                vec.push(existing_value);\n                vec.push(new_value);\n                self.value = NoneOneOrMany::Many(vec);\n            }\n            NoneOneOrMany::Many(ref mut vec) =&gt; {\n                vec.push(new_value);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:17:15\n   |\n17 |         match self.value {\n   |               ^^^^ cannot move out of borrowed content\n18 |             NoneOneOrMany::None =&gt; self.value = NoneOneOrMany::One(new_value),\n19 |             NoneOneOrMany::One(existing_value) =&gt; {\n   |                                -------------- hint: to prevent move, use `ref existing_value` or `ref mut existing_value`\n</code></pre>\n\n<p>My overall intent was to then be able to do something like this:</p>\n\n<pre><code>fn print_form_value&lt;T: Debug&gt;(x: FormValues&lt;T&gt;) {\n    match x.value {\n        NoneOneOrMany::None =&gt; println!(\"Empty\"),\n        NoneOneOrMany::One(val) =&gt; println!(\"Holds one value =&gt; {:?}\", val),\n        NoneOneOrMany::Many(vec) =&gt; println!(\"Holds several values =&gt; {:?}\", vec),\n    }\n}\n\nfn test_oneOrMany() {\n    let mut x = FormValues::&lt;u32&gt;::new();\n    x.push(1);\n    x.push(2);\n\n    let mut y = FormValues::&lt;u32&gt;::new();\n    y.push(3);\n\n    let mut z = FormValues::&lt;u32&gt;::new();\n\n    print_form_value(x);\n    print_form_value(y);\n    print_form_value(z);\n}\n</code></pre>\n\n<p>It's probably a silly classical borrowing question but I just started to use Rust. Is there a way I can <code>move</code> <code>existing_value</code> from it's current owning <code>Option</code> into a vector without having to clone it?</p>\n"}, {"tags": ["generics", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "edited": false, "score": 0, "creation_date": 1494049826, "post_id": 43817187, "comment_id": 74673235, "body": "I was hoping there was an answer but I&#39;m fine with a return enum"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1494049697, "creation_date": 1494049697, "answer_id": 43817187, "question_id": 43816946, "link": "https://stackoverflow.com/questions/43816946/generic-function-that-return-different-types-based-on-an-enum-input/43817187#43817187", "title": "Generic function that return different types based on an enum input", "body": "<p>You can't.</p>\n\n<p>Sorry, but there's just no way of doing this in Rust.  You'd need dependent types, which Rust doesn't have.  You could perhaps return an instance of an <code>enum</code> that just contains two variants (one for each type).  Or you could accept one callback for each \"path\" and let the caller decide how to resolve the problem.</p>\n\n<pre><code>fn read_register&lt;FnU8, FnU16, R&gt;(\n    &amp;self,\n    register: Register,\n    with_u8: FnU8,\n    with_u16: FnU16,\n) -&gt; R\nwhere\n    FnU8: FnOnce(u8) -&gt; R,\n    FnU16: FnOnce(u16) -&gt; R,\n{\n    match register {\n        Register::V0 =&gt; with_u8(self.v0),\n        Register::V1 =&gt; with_u8(self.v1),\n        Register::V2 =&gt; with_u16(self.v2),\n        Register::V3 =&gt; with_u16(self.v3),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1102, "favorite_count": 0, "accepted_answer_id": 43817187, "answer_count": 1, "score": 3, "last_activity_date": 1494049697, "creation_date": 1494047261, "last_edit_date": 1494048423, "question_id": 43816946, "link": "https://stackoverflow.com/questions/43816946/generic-function-that-return-different-types-based-on-an-enum-input", "title": "Generic function that return different types based on an enum input", "body": "<p>I have a struct which holds registers. I want my <code>read_register</code> function to return a <code>u8</code> for <code>Register::V0</code> and <code>Register::V1</code> but a <code>u16</code> for <code>Register::V2</code> and <code>Register::V3</code>. I'm not sure how to make the function generic for over the input type. I'm getting the error <code>match arms have incompatible types</code> which does make sense because the types are different.</p>\n\n<pre><code>struct Registers {\n    v0: u8,\n    v1: u8,\n    v2: u16,\n    v3: u16,\n}\n\nenum Register {\n    V0,\n    V1,\n    V2,\n    V3,\n}\n\nimpl Registers {\n    fn read_register&lt;T&gt;(&amp;self, register: Register) -&gt; T {\n        match register {\n            Register::V0 =&gt; self.v0,\n            Register::V1 =&gt; self.v1,\n            Register::V2 =&gt; self.v2,\n            Register::V3 =&gt; self.v3,\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["xml", "rust", "xml-rs"], "answers": [{"comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494078146, "post_id": 43821057, "comment_id": 74680552, "body": "Thank you very much for your time, if this is what I was looking for <code>XmlEvent::Characters</code>, I will accept your answer but for now I can only give upvote, for the time elapsed &lt;."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494078285, "post_id": 43821057, "comment_id": 74680590, "body": "@AngelAngel It&#39;s perfectly fine not to accept an answer immediately. Sometimes it&#39;s even preferred to give more time before accepting, in case much better answers show up. :)"}, {"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 0, "creation_date": 1494078612, "post_id": 43821057, "comment_id": 74680683, "body": "Thanks again for your advice to accept answers, and for leaving a link of your project so I can watch how you handle it."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 4, "last_activity_date": 1612285894, "last_edit_date": 1612285894, "creation_date": 1494077582, "answer_id": 43821057, "question_id": 43815724, "link": "https://stackoverflow.com/questions/43815724/how-to-capture-some-values-using-xml-rs-if-its-possible/43821057#43821057", "title": "How to capture some values using xml-rs (if it&#39;s possible)", "body": "<p>As <code>xml-rs</code> is a pull parser, each structural part of an XML element is captured by multiple events, in this case of type <a href=\"https://docs.rs/xml-rs/0.4.1/xml/reader/enum.XmlEvent.html\" rel=\"nofollow noreferrer\"><code>XmlEvent</code></a>. Namely, <code>XmlEvent::StartElement</code> is triggered after parsing an opening (or bodiless) XML tag, and provides the element's name, namespace and list of attributes.\nOn the other hand, <code>XmlEvent::Characters</code> captures text between XML tags. This is the event that is missing in your pattern matching.</p>\n<p>In your case, this means that you must keep track of the last entered element in order to assign that text to the entry. One possible solution is to keep a mutable record and use it at the end of an element, where it will be complete.</p>\n<pre><code>let mut record = MyStruct { /* ... */ };\n\nfor e in parser {\n    match e {\n        Ok(XmlEvent::StartElement { name, attributes, namespace }) =&gt; {\n           record.name = name; \n           // ...\n        }\n        Ok(XmlEvent::Characters(text)) =&gt; {\n            record.value = text; // or something else\n        }\n        Ok(XmlEvent::EndElement { .. }) =&gt; {\n           // record is finished, use it or save it here\n           // ...\n        }\n        // ...\n    }\n}\n</code></pre>\n<p>Ideally, you could build your own iterator type that abstracts <code>XMLEvent</code> away, and provides iteration over complete records. Here's an <a href=\"https://github.com/Enet4/dicom-rs/blob/b13c13facf5ddcedce92344f86c334109f958aa6/dictionary_builder/main.rs#L141\" rel=\"nofollow noreferrer\">example</a> from one of my projects.</p>\n"}], "owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1013, "favorite_count": 1, "accepted_answer_id": 43821057, "answer_count": 1, "score": 1, "last_activity_date": 1612285894, "creation_date": 1494033243, "last_edit_date": 1494084241, "question_id": 43815724, "link": "https://stackoverflow.com/questions/43815724/how-to-capture-some-values-using-xml-rs-if-its-possible", "title": "How to capture some values using xml-rs (if it&#39;s possible)", "body": "<p>I'm using <a href=\"https://crates.io/crates/xml-rs\" rel=\"nofollow noreferrer\">xml-rs 0.4</a> and I need to capture several fields and values:</p>\n\n<ul>\n<li>name</li>\n<li>\"visible\" </li>\n<li>True</li>\n</ul>\n\n<p>From this sample XML file:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;interface&gt;\n  &lt;requires lib=\"rsTest+\" version=\"1.00\"/&gt;\n  &lt;object class=\"rsTestWindow\" id=\"window1\"&gt;\n    &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n  &lt;/object&gt;\n&lt;/interface&gt;\n</code></pre>\n\n<p>After looking at the xml-rs code in Github, I was able to capture <code>name</code> and <code>\"visible\"</code>:</p>\n\n<pre><code>for att in attributes {\n    // test\n    let temp_name_local_name = att.name.local_name.clone();\n    let temp_value= att.value.clone();\n\n    println!(\"{}+{}+{}\", temp_name_local_name, temp_value);\n}\n</code></pre>\n\n<p>Stdout:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>name+visible\n</code></pre>\n\n<p>I could not figure out how to capture <code>True</code>.</p>\n\n<p>This is my complete code:</p>\n\n<pre><code>extern crate xml;\n\nuse std::fs::File;\nuse std::io::BufReader;\n\nuse xml::reader::{EventReader, XmlEvent};\nuse xml::name::{Name, OwnedName};\n\nfn indent(size: usize) -&gt; String {\n    const INDENT: &amp;'static str = \"    \";\n    (0..size)\n        .map(|_| INDENT)\n        .fold(String::with_capacity(size * INDENT.len()), |r, s| r + s)\n}\n\nfn main() {\n    let file = File::open(\"./src/sample.xml\").unwrap();\n    let file = BufReader::new(file);\n\n    let parser = EventReader::new(file);\n    let mut depth = 0;\n\n    for e in parser {\n        match e {\n            Ok(XmlEvent::StartElement {\n                   name,\n                   attributes,\n                   namespace,\n               }) =&gt; {\n\n                /* //test\n                    let n: xml::namespace::Namespace = namespace;\n\n                    if n.is_empty() {\n                        println!(\"empty\");\n                    }else{\n                        println!(\"no empty\");\n                    }\n                    */\n\n                let t: String = name.local_name;\n                println!(\"{}\", t);\n\n                if name.prefix.is_some() == true {\n                    println!(\"{}\", name.prefix.clone().unwrap().clone());\n                }\n                if name.namespace.is_some() == true {\n                    println!(\"{}\", name.namespace.unwrap().clone());\n                }\n\n                if attributes.is_empty() == true {\n                    //\"test\".to_string()\n                } else {\n\n                    for att in attributes {\n\n                        //let tet: xml::name::OwnedName = att.name;\n                        let temp_name_local_name = att.name.local_name.clone();\n                        let temp_value = att.value.clone();\n\n                        println!(\"{}+{}\", temp_name_local_name, temp_value);\n\n                        /* //test\n                            if att.name.namespace.is_some() == true {\n                                 println!(\"{}\", att.name.namespace.unwrap().clone());\n                            }\n                            if att.name.prefix.is_some() == true {\n                                 println!(\"{}\", att.name.prefix.unwrap().clone());\n                            }\n                            */\n                    }\n                }\n                depth += 1;\n            }\n            Ok(XmlEvent::ProcessingInstruction { name, data }) =&gt; {\n                /* //test\n                    if data.is_some() == true {\n                        println!(\"{}\", data.unwrap().clone());\n                    }\n                    println!(\"{}\", name );\n                    */\n            }\n            Ok(XmlEvent::EndElement { name }) =&gt; {\n                //println!(\"{}-{}\", indent(depth), name);\n            }\n            Err(e) =&gt; {\n                //println!(\"Error: {}\", e);\n                break;\n            }\n            _ =&gt; {}\n        }\n    }\n}\n</code></pre>\n\n<p>And my dependencies in Cargo.toml:</p>\n\n<pre><code>[dependencies]\nxml-rs = \"0.4\"\n</code></pre>\n"}, {"tags": ["floating-point", "rust", "undefined-behavior"], "comments": [{"owner": {"reputation": 213464, "user_id": 2357112, "user_type": "registered", "accept_rate": 26, "profile_image": "https://www.gravatar.com/avatar/3f80897d57525afe9eac4fb8c8318052?s=128&d=identicon&r=PG", "display_name": "user2357112 supports Monica", "link": "https://stackoverflow.com/users/2357112/user2357112-supports-monica"}, "edited": false, "score": 0, "creation_date": 1494012402, "post_id": 43812361, "comment_id": 74664183, "body": "Signalling NaNs, probably."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 8, "last_activity_date": 1531860318, "last_edit_date": 1531860318, "creation_date": 1494024737, "answer_id": 43814803, "question_id": 43812361, "link": "https://stackoverflow.com/questions/43812361/is-transmuting-bytes-to-a-float-safe-or-might-it-produce-undefined-behavior/43814803#43814803", "title": "Is transmuting bytes to a float safe or might it produce undefined behavior?", "body": "<p><a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"nofollow noreferrer\">The Rust reference</a> provides a good list of situations where undefined behavior occurs. Of those, the one that most closely relates to the question is the following:</p>\n\n<blockquote>\n  <p>Invalid values in primitive types, even in private fields/locals:</p>\n  \n  <ul>\n  <li>Dangling/null references or boxes</li>\n  <li>A value other than false (0) or true (1) in a bool</li>\n  <li>A discriminant in an enum not included in the type definition</li>\n  <li>A value in a char which is a surrogate or above char::MAX</li>\n  <li>Non-UTF-8 byte sequences in a str</li>\n  </ul>\n</blockquote>\n\n<p>And still, floating point types are not listed. This is because any bit sequence (32 bits for <code>f32</code>; 64 bits for <code>f64</code>) is a valid state for a floating point value, in accordance to the IEEE 754-2008 binary32 and binary64 floating-point types. They might not be <em>normal</em> (other classes are <em>zero</em>, <em>subnormal</em>, <em>infinite</em>, or <em>not a number</em>), but still valid nonetheless.</p>\n\n<p>In the end though, there should always be <a href=\"https://doc.rust-lang.org/nomicon/transmutes.html\" rel=\"nofollow noreferrer\">Another Way</a> around <code>transmute</code>. In particular, the <code>byteorder</code> crate provides a safe and intuitive way to read numbers from a stream of bytes.</p>\n\n<pre><code>use byteorder::{ByteOrder, LittleEndian}; // or NativeEndian\n\nlet bytes = [0x00u8, 0x00, 0x80, 0x7F];\nlet number = LittleEndian::read_f32(&amp;bytes);\nprintln!(\"{}\", number);\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=38d0722b8281d074ed32716167857419&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>Ok, there actually is a very peculiar edge case where transmuting bits to a float can result in a <em>signalling NaN</em>, which in some CPU architectures and configurations will trigger a low-level exception. See the discussion in <a href=\"https://github.com/rust-lang/rust/pull/39271\" rel=\"nofollow noreferrer\">rust#39271</a> for details. It is currently known that materializing signalling NaNs is not undefined behavior, and that if floating point exceptions are enabled, which are not by default, this is unlikely to be a problem.</p>\n\n<p>The already implemented decision from the Rust library team is that transmuting to a float is safe, even without any kind of masking. The reasoning is very well described in the documentation for <a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.from_bits\" rel=\"nofollow noreferrer\"><code>f32::from_bits</code></a>:</p>\n\n<blockquote>\n  <p>This is currently identical to <code>transmute::&lt;u32, f32&gt;(v)</code> on all platforms. It turns out this is incredibly portable, for two reasons:</p>\n  \n  <ul>\n  <li>Floats and Ints have the same endianness on all supported platforms.</li>\n  <li>IEEE-754 very precisely specifies the bit layout of floats.</li>\n  </ul>\n  \n  <p>However there is one caveat: prior to the 2008 version of IEEE-754, how to interpret the NaN signaling bit wasn't actually specified. Most platforms (notably x86 and ARM) picked the interpretation that was ultimately standardized in 2008, but some didn't (notably MIPS). As a result, all signaling NaNs on MIPS are quiet NaNs on x86, and vice-versa.</p>\n  \n  <p>Rather than trying to preserve signaling-ness cross-platform, this implementation favours preserving the exact bits. This means that any payloads encoded in NaNs will be preserved even if the result of this method is sent over the network from an x86 machine to a MIPS one.</p>\n  \n  <p>If the results of this method are only manipulated by the same architecture that produced them, then there is no portability concern.</p>\n  \n  <p>If the input isn't NaN, then there is no portability concern.</p>\n  \n  <p>If you don't care about signalingness (very likely), then there is no portability concern.</p>\n</blockquote>\n\n<p>Some parsing/encoding libraries may still be converting all kinds of NaN to an assuredly quiet NaN, as this matter was uncertain for a while in the history of Rust.</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1099, "favorite_count": 0, "accepted_answer_id": 43814803, "answer_count": 1, "score": 4, "last_activity_date": 1531860318, "creation_date": 1494012000, "last_edit_date": 1525721270, "question_id": 43812361, "link": "https://stackoverflow.com/questions/43812361/is-transmuting-bytes-to-a-float-safe-or-might-it-produce-undefined-behavior", "title": "Is transmuting bytes to a float safe or might it produce undefined behavior?", "body": "<p>Are there byte-sequences that, when transmuted into either <code>f32</code> or <code>f64</code>, produce undefined-behavior in Rust? I'm counting non-finite values, such as NaN, Infinity, etc. as valid floating point values.</p>\n\n<p>The comments to <a href=\"https://stackoverflow.com/a/43708483/432509\">this answer</a> hint that there may be some problem converting a float from raw bytes.</p>\n"}, {"tags": ["process", "rust", "signals", "pty"], "comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 1, "creation_date": 1493919326, "post_id": 43788943, "comment_id": 74619322, "body": "If you press Ctrl-C those key presses never make it to the application. They&#39;re handled by the terminal, which responds to it by sending SIGINT to the process. So you want to send SIGINT to the process."}, {"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 0, "creation_date": 1493919338, "post_id": 43788943, "comment_id": 74619331, "body": "<a href=\"https://stackoverflow.com/questions/6108953/how-does-ctrl-c-terminate-a-child-process\" title=\"how does ctrl c terminate a child process\">stackoverflow.com/questions/6108953/&hellip;</a>"}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1493926050, "post_id": 43788943, "comment_id": 74623089, "body": "@sepp2k thanks for the question. I was aware that the shell transforms ctrl-c to SIGINT, but somehow forgot to add this bit in the question. The question should be clearer now. I also added the <code>-i</code> option, which should run sh in interactive mode but it still doesn&#39;t work"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 1, "creation_date": 1493927104, "post_id": 43788943, "comment_id": 74623719, "body": "@hansaplast It&#39;s not the shell that handles Ctrl-C (how could it - once the application has been started, the shell isn&#39;t in control anymore), it&#39;s the terminal. So there&#39;s no point in you going through the shell instead of invoking <code>cat</code> directly and there&#39;s no way that sending Ctrl-C to the application would do anything. Instead you should send SIGINT to the process directly."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1493928432, "post_id": 43788943, "comment_id": 74624511, "body": "@sepp2k thanks for explaining. Indeed I confused terminal and shell. Then my suspicion is right that the <code>tty</code> is missing. In the end I want to build something with which I can test my rust binaries via &quot;documentation tests&quot; but instead of rust code I want shell interaction, including ctrl-c, and I explicitely want to test the interaction between the binary and the terminal. I&#39;m currently looking into <code>termion</code>, that looks like the easiest way currently"}, {"owner": {"reputation": 583, "user_id": 7102831, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52cd25404ff80b8271b3ed72a718c269?s=128&d=identicon&r=PG&f=1", "display_name": "nate", "link": "https://stackoverflow.com/users/7102831/nate"}, "edited": false, "score": 0, "creation_date": 1494094532, "post_id": 43788943, "comment_id": 74685877, "body": "if you wouldn&#39;t mind me asking for clarification, do you mean shell as <code>sh</code> and process is <code>cat</code>?  I know all of them are processes, but I&#39;m a bit confuse by their usage."}], "answers": [{"comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1496300155, "post_id": 43792119, "comment_id": 75606222, "body": "but first I want to use <code>cat</code> (or some other command) and not <code>ssh</code>, and second I want to control the process with rust. IMO I really need a tty fork, otherwise Ctrl-C and the like would never work, see my answer below"}], "tags": [], "owner": {"reputation": 36, "user_id": 7965184, "user_type": "registered", "profile_image": "https://graph.facebook.com/1493986557289172/picture?type=large", "display_name": "Tatu Ylonen", "link": "https://stackoverflow.com/users/7965184/tatu-ylonen"}, "is_accepted": false, "score": 0, "last_activity_date": 1493929202, "creation_date": 1493929202, "answer_id": 43792119, "question_id": 43788943, "link": "https://stackoverflow.com/questions/43788943/send-sigint-to-a-process-by-sending-ctrl-c-to-stdin/43792119#43792119", "title": "Send SIGINT to a process by sending ctrl-c to stdin", "body": "<p>Try adding -t option TWICE to force pseudo-tty allocation. I.e.</p>\n\n<pre><code>klar (16:14) ~&gt;echo foo | ssh user@host.ssh.com tty\nnot a tty\nklar (16:14) ~&gt;echo foo | ssh -t -t user@host.ssh.com tty\n/dev/pts/0\n</code></pre>\n\n<p>When you have a pseudo-tty, I think it should convert that to SIGINT as you wanted to do.</p>\n\n<p>In your simple example, you could also just close stdin after the write, in which case the server should exit.  For this particular case it would be more elegant and probably more reliable.</p>\n"}, {"comments": [{"owner": {"reputation": 1003, "user_id": 1103760, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OInfA.png?s=128&g=1", "display_name": "don bright", "link": "https://stackoverflow.com/users/1103760/don-bright"}, "edited": false, "score": 0, "creation_date": 1530409092, "post_id": 44299699, "comment_id": 89225208, "body": "use nix::fcntl::{O_RDWR,open};   |                  ^^^^^^ no <code>O_RDWR</code> in <code>fcntl</code>"}, {"owner": {"reputation": 5008, "user_id": 3594526, "user_type": "registered", "accept_rate": 30, "profile_image": "https://i.stack.imgur.com/VfPew.jpg?s=128&g=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/3594526/felix"}, "edited": false, "score": 0, "creation_date": 1571393788, "post_id": 44299699, "comment_id": 103235359, "body": "I&#39;ve updated the code to work with the current version of <code>nix</code> (0.15.0). Code is on github: <a href=\"https://gist.github.com/fkohlgrueber/fc2bc9c3753ccc4a03d80d7f6c9bbcf0\" rel=\"nofollow noreferrer\">gist.github.com/fkohlgrueber/fc2bc9c3753ccc4a03d80d7f6c9bbcf&zwnj;&#8203;0</a>"}], "tags": [], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "is_accepted": true, "score": 1, "last_activity_date": 1496326732, "last_edit_date": 1496326732, "creation_date": 1496297282, "answer_id": 44299699, "question_id": 43788943, "link": "https://stackoverflow.com/questions/43788943/send-sigint-to-a-process-by-sending-ctrl-c-to-stdin/44299699#44299699", "title": "Send SIGINT to a process by sending ctrl-c to stdin", "body": "<p>After a lot of research I figured out it's not too much work to do the pty fork myself. There's <a href=\"https://github.com/hibariya/pty-rs\" rel=\"nofollow noreferrer\">pty-rs</a>, but it has bugs and seems unmaintained.</p>\n\n<p>The following code needs <a href=\"https://github.com/nix-rust/nix/blob/master/src/pty.rs\" rel=\"nofollow noreferrer\"><code>pty</code> module of <code>nix</code></a> which is not yet on crates.io, so <code>Cargo.toml</code> needs this for now:</p>\n\n<pre><code>[dependencies]\nnix = {git = \"https://github.com/nix-rust/nix.git\"}\n</code></pre>\n\n<p>The following code runs cat in a tty and then writes/reads from it and sends Ctrl-C (<code>3</code>):</p>\n\n<pre><code>extern crate nix;\n\nuse std::path::Path;\nuse nix::pty::{posix_openpt, grantpt, unlockpt, ptsname};\nuse nix::fcntl::{O_RDWR, open};\nuse nix::sys::stat;\nuse nix::unistd::{fork, ForkResult, setsid, dup2};\nuse nix::libc::{STDIN_FILENO, STDOUT_FILENO, STDERR_FILENO};\nuse std::os::unix::io::{AsRawFd, FromRawFd};\nuse std::io::prelude::*;\nuse std::io::{BufReader, LineWriter};\n\n\nfn run() -&gt; std::io::Result&lt;()&gt; {\n    // Open a new PTY master\n    let master_fd = posix_openpt(O_RDWR)?;\n\n    // Allow a slave to be generated for it\n    grantpt(&amp;master_fd)?;\n    unlockpt(&amp;master_fd)?;\n\n    // Get the name of the slave\n    let slave_name = ptsname(&amp;master_fd)?;\n\n    match fork() {\n        Ok(ForkResult::Child) =&gt; {\n            setsid()?; // create new session with child as session leader\n            let slave_fd = open(Path::new(&amp;slave_name), O_RDWR, stat::Mode::empty())?;\n\n            // assign stdin, stdout, stderr to the tty, just like a terminal does\n            dup2(slave_fd, STDIN_FILENO)?;\n            dup2(slave_fd, STDOUT_FILENO)?;\n            dup2(slave_fd, STDERR_FILENO)?;\n            std::process::Command::new(\"cat\").status()?;\n        }\n        Ok(ForkResult::Parent { child: _ }) =&gt; {\n            let f = unsafe { std::fs::File::from_raw_fd(master_fd.as_raw_fd()) };\n            let mut reader = BufReader::new(&amp;f);\n            let mut writer = LineWriter::new(&amp;f);\n\n            writer.write_all(b\"hello world\\n\")?;\n            let mut s = String::new();\n            reader.read_line(&amp;mut s)?; // what we just wrote in\n            reader.read_line(&amp;mut s)?; // what cat wrote out\n            writer.write(&amp;[3])?; // send ^C\n            writer.flush()?;\n            let mut buf = [0; 2]; // needs bytewise read as ^C has no newline\n            reader.read(&amp;mut buf)?;\n            s += &amp;String::from_utf8_lossy(&amp;buf).to_string();\n            println!(\"{}\", s);\n            println!(\"cat exit code: {:?}\", wait::wait()?); // make sure cat really exited\n        }\n        Err(_) =&gt; println!(\"error\"),\n    }\n    Ok(())\n}\n\nfn main() {\n    run().expect(\"could not execute command\");\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>hello world\nhello world\n^C\ncat exit code: Signaled(2906, SIGINT, false)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5008, "user_id": 3594526, "user_type": "registered", "accept_rate": 30, "profile_image": "https://i.stack.imgur.com/VfPew.jpg?s=128&g=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/3594526/felix"}, "is_accepted": false, "score": 3, "last_activity_date": 1571395377, "creation_date": 1571395377, "answer_id": 58449223, "question_id": 43788943, "link": "https://stackoverflow.com/questions/43788943/send-sigint-to-a-process-by-sending-ctrl-c-to-stdin/58449223#58449223", "title": "Send SIGINT to a process by sending ctrl-c to stdin", "body": "<p>The simplest way is to directly send the SIGINT signal to the child process. This can be done easily using <a href=\"https://docs.rs/nix/0.15.0/nix/\" rel=\"nofollow noreferrer\"><code>nix</code></a>'s <code>signal::kill</code> function: </p>\n\n<pre><code>// add `nix = \"0.15.0\"` to your Cargo.toml\nuse std::process::{Command, Stdio};\nuse std::io::Write;\n\nfn main() {\n    // spawn child process\n    let mut child = Command::new(\"cat\")\n        .stdin(Stdio::piped())\n        .spawn().unwrap();\n\n    // send \"echo\\n\" to child's stdin\n    let mut stdin = child.stdin.take().unwrap();\n    writeln!(stdin, \"echo\");\n\n    // sleep a bit so that child can process the input\n    std::thread::sleep(std::time::Duration::from_millis(500));\n\n    // send SIGINT to the child\n    nix::sys::signal::kill(\n        nix::unistd::Pid::from_raw(child.id() as i32), \n        nix::sys::signal::Signal::SIGINT\n    ).expect(\"cannot send ctrl-c\");\n\n    // wait for child to terminate\n    child.wait().unwrap();\n}\n</code></pre>\n\n<p>You should be able to send all kinds of signals using this method. For more advanced \"interactivity\" (e.g. child programs like <code>vi</code> that query terminal size) you'd need to create a pseudoterminal like @hansaplast did in his solution.</p>\n"}], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2692, "favorite_count": 0, "accepted_answer_id": 44299699, "answer_count": 3, "score": 3, "last_activity_date": 1571395377, "creation_date": 1493917698, "last_edit_date": 1496300479, "question_id": 43788943, "link": "https://stackoverflow.com/questions/43788943/send-sigint-to-a-process-by-sending-ctrl-c-to-stdin", "title": "Send SIGINT to a process by sending ctrl-c to stdin", "body": "<p>I'm looking for a way to mimick a terminal for some automated testing: i.e. start a process and then interact with it via sending data to stdin and reading from stdout. E.g. sending some lines of input to stdin including <code>ctrl-c</code> and <code>ctrl-\\</code> which should result in sending signals to the process.</p>\n\n<p>Using <code>std::process::Commannd</code> I'm able to send input to e.g. <code>cat</code> and I'm also seeing its output on stdout, but sending <code>ctrl-c</code> (as <a href=\"http://academic.evergreen.edu/projects/biophysics/technotes/program/ascii_ctrl.htm\" rel=\"nofollow noreferrer\">I understand that is <code>3</code></a>) does not cause <code>SIGINT</code> sent to the shell. E.g. this program should terminate:</p>\n\n<pre><code>use std::process::{Command, Stdio};\nuse std::io::Write;\n\nfn main() {\n    let mut child = Command::new(\"sh\")\n        .arg(\"-c\").arg(\"-i\").arg(\"cat\")\n        .stdin(Stdio::piped())\n        .spawn().unwrap();\n    let mut stdin = child.stdin.take().unwrap();\n    stdin.write(&amp;[3]).expect(\"cannot send ctrl-c\");\n    child.wait();\n}\n</code></pre>\n\n<p>I suspect the issue is that sending <code>ctrl-c</code> needs the some tty and via <code>sh -i</code> it's only in \"interactive mode\".</p>\n\n<p>Do I need to go full fledged and use e.g. <a href=\"https://github.com/ticki/termion\" rel=\"nofollow noreferrer\"><code>termion</code></a> or <a href=\"https://github.com/jeaye/ncurses-rs\" rel=\"nofollow noreferrer\"><code>ncurses</code></a>?</p>\n\n<p><strong>Update</strong>: I confused shell and terminal in the original question. I cleared this up now. Also I mentioned <code>ssh</code> which should have been <code>sh</code>.</p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1493884135, "post_id": 43776706, "comment_id": 74594533, "body": "How would you do it without <code>Result</code> in the picture, i.e. if <code>get_milk_from_cow</code> and <code>pour_milk</code> returned <code>String</code>s?"}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1493895075, "post_id": 43776706, "comment_id": 74601844, "body": "@user4815162342 <code>pour_milk</code> is symbolic of any function that can fail."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1493895352, "post_id": 43776706, "comment_id": 74602022, "body": "My point is that the problem is not in those functions failing (the <code>?</code> operator is taking care of that), but in <code>push_str</code> returning <code>()</code>. Please show us how you would concatenate the strings when <code>Result</code> is not present, to better understand what you would like to achieve with <code>Result</code>."}, {"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1493900726, "post_id": 43776706, "comment_id": 74605873, "body": "@user4815162342 Thanks for your question, i think i have found (maybe inefficient) solution, pondering over your question.."}], "answers": [{"comments": [{"owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 0, "creation_date": 1493895343, "post_id": 43779341, "comment_id": 74602011, "body": "But in my code, first error is propagated as soon as it occurs. i.e. no more further calls are called for making tea. i.e. if <code>get_milk_from_cow</code> fails <code>pour_milk</code> will not be called. I think this is what <code>?</code> is for. I think this is not what will happen in your vec solution."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "edited": false, "score": 1, "creation_date": 1493896370, "post_id": 43779341, "comment_id": 74602716, "body": "@AshishNegi That is true. You should consider improving your question to avoid further confusion."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1493902727, "post_id": 43779341, "comment_id": 74607472, "body": "You&#39;re better-off using <code>[&amp;get_milk_from_cow(true)?, &amp;pour_milk(true)?].concat()</code>, since it&#39;s shorter and preallocates."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1493903450, "post_id": 43779341, "comment_id": 74608044, "body": "@Veedrac That seems to be provided from the unstable trait <code>SliceConcatExt</code>, which I would prefer not to use."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1493905843, "post_id": 43779341, "comment_id": 74609952, "body": "@E_net4 <a href=\"https://github.com/rust-lang/rust/issues/27747\" rel=\"nofollow noreferrer\">&quot;The methods themselves are stable, but the trait isn&#39;t.&quot;</a>, since August 2015."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 2, "last_activity_date": 1493903530, "last_edit_date": 1493903530, "creation_date": 1493891032, "answer_id": 43779341, "question_id": 43776706, "link": "https://stackoverflow.com/questions/43776706/composing-errors-in-rust-concating-results-on-ok/43779341#43779341", "title": "Composing errors in Rust : concating results on Ok", "body": "<p>First things first: there appears to be nothing wrong with your code above, but I'll be assuming that you are looking for something more idiomatic.</p>\n\n<p>Although requiring slightly more memory than your approach, the most elegant way to concatenate results of strings is this:</p>\n\n<pre><code>fn make_tea() -&gt; Result&lt;String, TeaError&gt; {\n    vec![get_milk_from_cow(true), pour_milk(true)].into_iter()\n        .collect()\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=5891d1dd6a5d3364bbb654c8cbdfdd05&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Explanation:</p>\n\n<ul>\n<li>The vector is consumed into an iterator of <code>Result&lt;String, TeaError&gt;</code> (owned, not references).</li>\n<li><code>collect</code> then relies on two implementations of <code>FromIterator</code>:\n\n<ul>\n<li><code>impl&lt;A, E, V&gt; FromIterator&lt;Result&lt;A, E&gt;&gt; for Result&lt;V, E&gt; \nwhere V: FromIterator&lt;A&gt;</code> produces a result containing either the result of building <code>A</code> from an iterator of <code>T</code> or the first error retrieved from the iterator. This is like turning an iterator of results into a result with a collected iterator.</li>\n<li><code>impl FromIterator&lt;String&gt; for String</code> concatenates all strings into an owned string</li>\n</ul></li>\n</ul>\n\n<p>So, as soon as you already have an iterator that turns your process into a sequence of independent operations, you can just <code>collect</code> them.</p>\n\n<p>Now, in order to prevent subsequent operations from being called after an error is found, then it's easier to stick to the <code>?</code> operator.</p>\n\n<pre><code>fn make_tea() -&gt; Result&lt;String, TeaError&gt; {\n    Ok(vec![get_milk_from_cow(true)?, pour_milk(true)?].into_iter()\n        .collect())\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=425fc4fea0742f821b7ec850c18abdbb&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>The vector had to be created because arrays do not provide iterators of owned elements (<code>&amp;T</code> instead of <code>T</code>). However, we can go around that with an extra mapping:</p>\n\n<pre><code>fn make_tea() -&gt; Result&lt;String, TeaError&gt; {\n    Ok([get_milk_from_cow(true)?, pour_milk(true)?].into_iter()\n        .map(|a| a.as_str())\n        .collect())\n}\n</code></pre>\n\n<p>This will map elements from <code>&amp;String</code> into <code>&amp;str</code>, which can be collected likewise.</p>\n"}, {"tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": true, "score": 2, "last_activity_date": 1493902593, "last_edit_date": 1493902593, "creation_date": 1493902279, "answer_id": 43783403, "question_id": 43776706, "link": "https://stackoverflow.com/questions/43776706/composing-errors-in-rust-concating-results-on-ok/43783403#43783403", "title": "Composing errors in Rust : concating results on Ok", "body": "<p>This code does redundant work on the starred lines:</p>\n\n<pre><code>fn make_tea() -&gt; Result&lt;String, TeaError&gt; {\n*   let mut process = String::new();\n    let step_cow = get_milk_from_cow(true)?;\n    let step_milk = pour_milk(true)?;\n*   process.push_str(step_cow.as_str());\n    process.push_str(step_milk.as_str());\n    Ok(process)\n}\n</code></pre>\n\n<p><code>process.push_str(step_cow.as_str())</code> just makes an unneeded copy of <code>step_cow</code>. Instead, try</p>\n\n<pre><code>fn make_tea() -&gt; Result&lt;String, TeaError&gt; {\n    let mut process = get_milk_from_cow(true)?;\n    process.push_str(&amp;pour_milk(true)?);\n    Ok(process)\n}\n</code></pre>\n\n<p>or, more conveniently,</p>\n\n<pre><code>fn make_tea() -&gt; Result&lt;String, TeaError&gt; {\n    Ok(get_milk_from_cow(true)? + &amp;pour_milk(true)?)\n}\n</code></pre>\n"}], "owner": {"reputation": 4733, "user_id": 728407, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/26b3f058ce75a05fd2ccc561f1cfa501?s=128&d=identicon&r=PG", "display_name": "Ashish Negi", "link": "https://stackoverflow.com/users/728407/ashish-negi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 358, "favorite_count": 0, "accepted_answer_id": 43783403, "answer_count": 2, "score": 0, "last_activity_date": 1493915840, "creation_date": 1493883482, "last_edit_date": 1493900613, "question_id": 43776706, "link": "https://stackoverflow.com/questions/43776706/composing-errors-in-rust-concating-results-on-ok", "title": "Composing errors in Rust : concating results on Ok", "body": "<p>I have following code. It works.</p>\n\n<p>But i am more interested in writing <code>make_tea</code> where i call two functions : <code>get_milk_from_cow</code> and <code>pour_milk</code>. They both return <code>Result&lt;String, TeaError&gt;</code>. </p>\n\n<p>How can i compose them so that i can keep concating <code>String</code>s if they succeed otherwise return error.</p>\n\n<pre><code>enum TeaError {\n    NoMilk,\n    NoCup,\n    NoCow,\n    NoGas,\n    NoSomething,\n}\n\nfn get_milk_from_cow(cow: bool) -&gt; Result&lt;String, TeaError&gt; {\n    if cow {\n        Ok(String::from(\"get milk from cow\"))\n    } else {\n        Err(TeaError::NoCow)\n    }\n}\n\nfn pour_milk(milk: bool) -&gt; Result&lt;String, TeaError&gt; {\n    if milk {\n        Ok(String::from(\"poured milk\"))\n    } else {\n        Err(TeaError::NoMilk)\n    }\n}\n\nfn make_tea() -&gt; Result&lt;String, TeaError&gt; {\n    let mut process = String::new();\n    let step_cow = get_milk_from_cow(true)?;\n    let step_milk = pour_milk(true)?;\n    process.push_str(step_cow.as_str());\n    process.push_str(step_milk.as_str());\n    Ok(process)\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn attemp_tea_one() {\n        match pour_milk(false) {\n            Err(v) =&gt; match v {\n                TeaError::NoMilk =&gt; assert!(true),\n                _ =&gt; assert!(false)\n            },\n            Ok(_) =&gt; assert!(false)\n        };\n    }\n\n    #[test]\n    fn attemp_tea_two() {\n        match make_tea() {\n            Err(_) =&gt; assert!(false),\n            Ok(_) =&gt; assert!(true)\n        };\n    }\n}\n</code></pre>\n\n<p>I tried :</p>\n\n<pre><code>process.push_str(get_milk_from_cow(true)?\n       .push_str(pour_milk(true)?.as_str()))\n</code></pre>\n\n<p>but it gives :</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/errors.rs:27:22\n   |\n27 |     process.push_str(get_milk_from_cow(true)?.push_str(pour_milk(true)?.as_str()));\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected &amp;str, found ()\n   |\n   = note: expected type `&amp;str`\n              found type `()`\n</code></pre>\n\n<p>as <code>push_str</code> does not return string.</p>\n\n<p><strong>Edit:</strong></p>\n\n<pre><code>fn append(s1: String, s2: String) -&gt; String {\n    s1 + s2.as_str()\n}\nfn make_tea() -&gt; Result&lt;String, TeaError&gt; {\n    let process = append(get_milk_from_cow(true)?,\n                         pour_milk(true)?);\n    Ok(process)\n}\n</code></pre>\n\n<p>so, i can do <code>append(append(funcA(), funcB()), funcC())</code> and so on..\nI am still learning about lifetimes and think about whether <code>append</code> can still be improved in memory allocation.</p>\n"}, {"tags": ["rust", "rust-result"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1493914540, "post_id": 43772092, "comment_id": 74616626, "body": "I think you can do <code>.map_err(Into::into)</code> and let rustc figure out which impl applies. But I prefer the solution with <code>?</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1113, "user_id": 969295, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/dea809ef5ac9770fb400f1eb65544443?s=128&d=identicon&r=PG", "display_name": "Sassa", "link": "https://stackoverflow.com/users/969295/sassa"}, "is_accepted": false, "score": 3, "last_activity_date": 1493860660, "creation_date": 1493860660, "answer_id": 43772338, "question_id": 43772092, "link": "https://stackoverflow.com/questions/43772092/using-and-then-with-different-result-error-types-without-map-err/43772338#43772338", "title": "Using and_then with different Result error types without map_err", "body": "<p>After some trial, here is the solution:</p>\n\n<pre><code>trait CustomAndThen&lt;T, E&gt; {\n    fn and_then2&lt;U, E2, F: FnOnce(T) -&gt; Result&lt;U, E2&gt;&gt;(self, op: F) -&gt; Result&lt;U, E&gt;\n        where E: std::convert::From&lt;E2&gt;;\n}\n\nimpl&lt;T, E&gt; CustomAndThen&lt;T, E&gt; for Result&lt;T, E&gt; {\n    fn and_then2&lt;U, E2, F: FnOnce(T) -&gt; Result&lt;U, E2&gt;&gt;(self, op: F) -&gt; Result&lt;U, E&gt;\n        where E: std::convert::From&lt;E2&gt;\n    {\n        match self {\n            Ok(t) =&gt; op(t).map_err(From::from),\n            Err(e) =&gt; Err(e),\n        }\n    }\n}\n\n...\n\nOk(builder)\n    .and_then2(status::ServiceStatusBuilder::spawn)\n    .and_then2(status::create_xml)\n</code></pre>\n\n<p>This will create a custom <code>and_then</code> function for <code>Result</code> type that will make the conversion inside it, clearing the code</p>\n"}, {"tags": [], "owner": {"reputation": 96, "user_id": 854453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a2f2e41ed98e01fe714691f5f5107c4?s=128&d=identicon&r=PG", "display_name": "Sergey Khoroshavin", "link": "https://stackoverflow.com/users/854453/sergey-khoroshavin"}, "is_accepted": false, "score": 1, "last_activity_date": 1530015927, "creation_date": 1530015927, "answer_id": 51042898, "question_id": 43772092, "link": "https://stackoverflow.com/questions/43772092/using-and-then-with-different-result-error-types-without-map-err/51042898#51042898", "title": "Using and_then with different Result error types without map_err", "body": "<p>If you're not really interested in exact error, but raise some final error in the end you can use something like:</p>\n\n<pre><code>builder.spawn().ok()\n    .and_then(|v| status.create_xml(v).ok())\n    .ok_or_else(|| SomeError('failed to create xml'))\n</code></pre>\n"}], "owner": {"reputation": 1113, "user_id": 969295, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/dea809ef5ac9770fb400f1eb65544443?s=128&d=identicon&r=PG", "display_name": "Sassa", "link": "https://stackoverflow.com/users/969295/sassa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1468, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1556752037, "creation_date": 1493858793, "last_edit_date": 1556752037, "question_id": 43772092, "link": "https://stackoverflow.com/questions/43772092/using-and-then-with-different-result-error-types-without-map-err", "title": "Using and_then with different Result error types without map_err", "body": "<p>I have some functions that will return a different error type when failing.</p>\n\n<p>First I have a builder, which contains this method:</p>\n\n<pre><code>#[derive(Debug)]\npub enum BuilderError {\n    ElementMissing(&amp;'static str),\n}\n\npub fn spawn(self) -&gt; Result&lt;ServiceStatus, BuilderError&gt;\n</code></pre>\n\n<p>So it will return a <code>BuildError</code> on failure.</p>\n\n<p>Now, I have another function that will return another error:</p>\n\n<pre><code>#[derive(Debug)]\npub enum XmlError {\n    XmlCreationFailed(writer::Error),\n    ConversionToUtf8(FromUtf8Error),\n}\n\npub fn create_xml(service_status: super::ServiceStatus) -&gt; Result&lt;String, XmlError&gt;\n</code></pre>\n\n<p>The idea is that I use the builder to create a <code>ServiceStatus</code> object and use it to create a XML string with <code>create_xml</code> function.</p>\n\n<p>To do that, I have this code:</p>\n\n<pre><code>#[derive(Debug)]\npub enum WebserviceError {\n    XmlError(XmlError),\n    BuilderError(BuilderError),\n}\n\nimpl std::error::Error for WebserviceError {\n    ...\n}\n\nimpl From&lt;XmlError&gt; for WebserviceError {\n    fn from(error: XmlError) -&gt; WebserviceError {\n        WebserviceError::XmlError(error)\n    }\n}\n\nimpl From&lt;BuilderError&gt; for WebserviceError {\n    fn from(error: BuilderError) -&gt; WebserviceError {\n        WebserviceError::BuilderError(error)\n    }\n}\n\nfn test() -&gt; Result&lt;String, status::WebserviceError&gt; {\n    ...\n    let service_status = builder.spawn()?;\n    let xml = status::create_xml(service_status)?;\n    Ok(xml)\n}\n</code></pre>\n\n<p>Now, I think I can do better using <code>and_then</code> instead of using ? operator:</p>\n\n<pre><code>fn test() -&gt; Result&lt;String, status::WebserviceError&gt; {\n    ...\n    builder\n        .spawn()\n        .map_err(status::WebserviceError::BuilderError)\n        .and_then(|hue| status::create_xml(hue).map_err(status::WebserviceError::XmlError))\n}\n</code></pre>\n\n<p>This solution works too, but now I need to explicitly call <code>map_err</code> to convert from a <code>BuilderError</code> or <code>XmlError</code> to a <code>WebserviceError</code>...</p>\n\n<p>So, my question is, can I do better? I think a solution like this would be ideal:</p>\n\n<pre><code>fn test() -&gt; Result&lt;String, status::WebserviceError&gt; {\n    ...\n    builder\n        .spawn()\n        .and_then(status::create_xml)\n}\n</code></pre>\n"}]