[{"tags": ["memory-management", "rust", "interpreter", "unsafe"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1531379504, "post_id": 51292110, "comment_id": 89575515, "body": "It looks to me like this question would benefit from <i>discussion</i>, which is not StackOverflow&#39;s forte. I would encourage you to ask the question on reddit (r/rust) or the Rust Users forum (URLO)."}], "owner": {"reputation": 280, "user_id": 4035669, "user_type": "registered", "profile_image": "https://graph.facebook.com/1583135483/picture?type=large", "display_name": "Markus Knecht", "link": "https://stackoverflow.com/users/4035669/markus-knecht"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 144, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1531344522, "creation_date": 1531333769, "last_edit_date": 1531344522, "question_id": 51292110, "link": "https://stackoverflow.com/questions/51292110/can-a-heap-for-an-interpreter-somehow-be-implemented-more-efficiently-than-with", "title": "Can a heap for an interpreter somehow be implemented more efficiently than with a vector?", "body": "<p>I am writing an interpreter in Rust for a domain specific language that should allow for a high performance implementation. The relevant properties for the heap are:</p>\n\n<ol>\n<li>Programs are short (but a lot of them are executed)</li>\n<li>I know, before execution starts, the maximum amount of memory needed</li>\n<li>The needed memory is small</li>\n<li>No de-allocation is needed until the program terminates</li>\n<li>All the data is immutable once created</li>\n<li>The language is statically type checked so no risk of accessing uninitialized memory</li>\n<li>The language is single threaded so no shared memory</li>\n</ol>\n\n<p>My elements in the heap have a fixed structure:</p>\n\n<pre><code>pub enum Data {\n    Adt(u16, Vec&lt;u64&gt;),\n    Prim(Vec&lt;u64&gt;),\n}\n</code></pre>\n\n<p>The <code>Vec&lt;u64&gt;</code> contains either pointers to other elements or primitive data.\nI first considered representing it directly with an enum.</p>\n\n<p>This requires a lot of allocations at runtime and needs an unnecessary indirection for the <code>Vec</code>. It also wastes space for the capacity &amp; size field (as the data is immutable and the size is statically known).</p>\n\n<p>I'm relatively new to Rust and have kept my self away from unsafe code, but I think it could help here. I first tried to express what I want the functionality to be:</p>\n\n<pre><code>#[derive(Copy, Clone)]\nstruct Data(u64);\nstruct DataStore(Vec&lt;u64&gt;);\n\nimpl DataStore {\n    fn alloc(max_size: u64) -&gt; Self {\n        DataStore(Vec::with_capacity(max_size as usize))\n    }\n\n    fn new_adt(&amp;mut self, tag: u16) -&gt; Data {\n        let start = self.0.len() as u64;\n        let header = tag as u64;\n        self.0.push(header);\n        Data(start)\n    }\n\n    fn new_primitive(&amp;mut self, data: &amp;[u64]) -&gt; Data {\n        let start = self.0.len() as u64;\n        for e in data {\n            self.0.push(*e)\n        }\n        Data(start)\n    }\n\n    fn init_adt_field(&amp;mut self, Data(ptr): Data) {\n        self.0.push(ptr);\n    }\n\n    fn get_field(&amp;self, Data(start): Data, index: u32) -&gt; Data {\n        Data(self.0[(start + 1 + (index as u64)) as usize])\n    }\n\n    fn get_tag(&amp;self, Data(start): Data) -&gt; u16 {\n        self.0[start as usize] as u16\n    }\n}\n</code></pre>\n\n<p>Can this be somehow be implemented more efficiently than with a <code>Vec</code>?. I looked at <code>TypedArena</code>, but was not sure if and how I could use it in this scenario. Will it be faster then the <code>Vec</code>? The <code>Vec</code> will never grow, as it is initialized with a capacity statically proven to be enough.</p>\n\n<p>Is it possible to allocate just a memory blob and then use unsafe pointers? What are my options here?</p>\n"}, {"tags": ["rust", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531332612, "post_id": 51290687, "comment_id": 89561283, "body": "<a href=\"https://play.rust-lang.org/?gist=3cd3e2619b70d5a8c6e9aad084a6d6ae&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">A shorter form of your code</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1531333610, "post_id": 51290687, "comment_id": 89561715, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/32913368/155423\">Removing items from BTreeMap found through iteration</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51290687/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17289, "user_id": 45849, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/4PHVX.jpg?s=128&g=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/45849/tony"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531420195, "post_id": 51290687, "comment_id": 89601249, "body": "It might be useful for someone who comes across this to know that <code>BTreeSet</code> and <code>BTreeMap</code> can use the same methodology. Also the method that worked for me which was implementing the <code>Borrow</code> trait is not explicitly noted as a non copying delete. Do you know if that&#39;s the case?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531423423, "post_id": 51290687, "comment_id": 89602869, "body": "Using <code>Borrow</code> would copy as much data as if you had passed <code>&amp;Node</code>, yes."}, {"owner": {"reputation": 17289, "user_id": 45849, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/4PHVX.jpg?s=128&g=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/45849/tony"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531447424, "post_id": 51290687, "comment_id": 89609676, "body": "Sorry what I mean is will the entire set be copied under the hood ...as in a new set created, or just the one node? If it behaves the same as if I could have a reference to node then this should be the cheapest way to do it."}], "owner": {"reputation": 17289, "user_id": 45849, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/4PHVX.jpg?s=128&g=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/45849/tony"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 121, "favorite_count": 0, "closed_date": 1531423355, "answer_count": 0, "score": 0, "last_activity_date": 1531331701, "creation_date": 1531327893, "last_edit_date": 1531331701, "question_id": 51290687, "link": "https://stackoverflow.com/questions/51290687/how-do-i-remove-a-value-from-a-btreeset-by-using-a-reference-to-the-value-to-rem", "closed_reason": "Duplicate", "title": "How do I remove a value from a BTreeSet by using a reference to the value to remove?", "body": "<p>I have a custom <code>Node</code> type and a <code>BTreeSet</code> of these nodes. I would like to remove a node from the <code>BTreeSet</code>, ideally without copying the data. I would like to search the set for the node, return a reference, and call <code>remove</code> on the set with the returned reference. I want to find a node by immutably lending a data structure and then after finding it, remove it by lending the data structure immutably:</p>\n\n<pre><code>use std::collections::BTreeSet;\n\n#[derive(Clone, Debug, Ord, PartialOrd, PartialEq, Eq)]\npub struct Node {\n    pub order: i32,\n}\n\npub fn find_node&lt;'a&gt;(set: &amp;'a BTreeSet&lt;Node&gt;, order: &amp;i32) -&gt; Option&lt;&amp;'a Node&gt; {\n    for el in set.iter() {\n        if *order == el.order {\n            return Some(el);\n        }\n    }\n    None\n}\n\nfn main() {\n    let mut set: BTreeSet&lt;Node&gt; = BTreeSet::new();\n    let n1 = Node { order: 1 };\n    let n2 = Node { order: 2 };\n    let n3 = Node { order: 3 };\n    set.insert(n1);\n    set.insert(n2);\n    set.insert(n3);\n\n    let to_remove: Option&lt;&amp;Node&gt; = match find_node(&amp;set, &amp;2) {\n        Some(to_remove) =&gt; Some(to_remove),\n        None =&gt; None,\n    };\n    match to_remove {\n        Some(to_remove) =&gt; {\n            set.remove(&amp;to_remove);\n        }\n        None =&gt; {}\n    }\n\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=b0bf42f4cf98b93266b3ba9d81ad0b53&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Rust Playground</a>)</p>\n\n<p>I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `set` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:32:13\n   |\n26 |     let to_remove: Option&lt;&amp;Node&gt; = match find_node(&amp;set, &amp;2) {\n   |                                                     --- immutable borrow occurs here\n...\n32 |             set.remove(&amp;to_remove);\n   |             ^^^ mutable borrow occurs here\n...\n38 | }\n   | - immutable borrow ends here\n</code></pre>\n\n<p>What's the best way to do this?</p>\n"}, {"tags": ["git", "rust", "git-submodules", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531327813, "post_id": 51290136, "comment_id": 89559007, "body": "Welcome to Stack Overflow! Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51290136/edit\">edit</a> your question to include it. Right now, it&#39;s unclear what exactly is the setup of files, repositories, what links where, what is a submodule, etc. Ideally, provide a listing of command line invocations that recreates your setup and the error."}, {"owner": {"reputation": 607, "user_id": 566986, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/086f2cfa4f8065ff32130661e1dfa498?s=128&d=identicon&r=PG", "display_name": "rvabdn", "link": "https://stackoverflow.com/users/566986/rvabdn"}, "edited": false, "score": 0, "creation_date": 1540313153, "post_id": 51290136, "comment_id": 92815847, "body": "Bruno,  Did you find a solution to this problem?  I am facing the same issue."}, {"owner": {"reputation": 59, "user_id": 10065913, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PweRmi-b99I/AAAAAAAAAAI/AAAAAAAABog/tNZkRBsRLXQ/photo.jpg?sz=128", "display_name": "Bruno Santidrian", "link": "https://stackoverflow.com/users/10065913/bruno-santidrian"}, "edited": false, "score": 0, "creation_date": 1540596644, "post_id": 51290136, "comment_id": 92938145, "body": "Nope sorry, I gave up."}, {"owner": {"reputation": 502, "user_id": 2365618, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2973047a3ab431dbe511e6f06b23c09?s=128&d=identicon&r=PG", "display_name": "Darneas", "link": "https://stackoverflow.com/users/2365618/darneas"}, "edited": false, "score": 1, "creation_date": 1582815032, "post_id": 51290136, "comment_id": 106913736, "body": "I wondered if this is still the case 1,5 years after? I&#39;m facing the same problem and can imagine other people using cargo and having relative submodules (e.g. when using GitLab)."}], "answers": [{"comments": [{"owner": {"reputation": 59, "user_id": 10065913, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PweRmi-b99I/AAAAAAAAAAI/AAAAAAAABog/tNZkRBsRLXQ/photo.jpg?sz=128", "display_name": "Bruno Santidrian", "link": "https://stackoverflow.com/users/10065913/bruno-santidrian"}, "edited": false, "score": 2, "creation_date": 1531334237, "post_id": 51291930, "comment_id": 89561993, "body": "Yes, if I use <code>git clone --recurse-submodules</code> works, cloning jbi2dec and the other repositories automatically. The problem is when Cargo clones the repo, it seems like it&#39;s not able to solve the relative paths."}], "tags": [], "owner": {"reputation": 9309, "user_id": 496405, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/08d224ce8793eda60a36f5e0ed9f124c?s=128&d=identicon&r=PG", "display_name": "g19fanatic", "link": "https://stackoverflow.com/users/496405/g19fanatic"}, "is_accepted": false, "score": 0, "last_activity_date": 1531332960, "creation_date": 1531332960, "answer_id": 51291930, "question_id": 51290136, "link": "https://stackoverflow.com/questions/51290136/how-to-use-relative-git-submodule-paths-in-cargo/51291930#51291930", "title": "How to use relative git submodule paths in Cargo?", "body": "<blockquote>\n  <p>The problem is that MuPDF stores its third party libraries as git submodules with relative paths</p>\n</blockquote>\n\n<p>So you would need to provide those repositories in the relative paths. Clone the <code>jbig2dec</code> and <code>mujs</code> repos in the relative location as listed under the <code>.gitmodules</code> file. Now when you do the <a href=\"https://git-scm.com/docs/git-clone#git-clone---recurse-submodulesltpathspec\" rel=\"nofollow noreferrer\"><code>--recurse-submodules</code></a> it should work okay. </p>\n"}], "owner": {"reputation": 59, "user_id": 10065913, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PweRmi-b99I/AAAAAAAAAAI/AAAAAAAABog/tNZkRBsRLXQ/photo.jpg?sz=128", "display_name": "Bruno Santidrian", "link": "https://stackoverflow.com/users/10065913/bruno-santidrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1531, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1531332960, "creation_date": 1531325866, "last_edit_date": 1531332308, "question_id": 51290136, "link": "https://stackoverflow.com/questions/51290136/how-to-use-relative-git-submodule-paths-in-cargo", "title": "How to use relative git submodule paths in Cargo?", "body": "<p>I've done a MuPDF binding for Rust and I want to import it as a crate from its git repository.</p>\n\n<p>My Cargo.toml file is something like this:</p>\n\n<pre><code>[package]\nname = \"package_name\"\nversion = \"0.1.0\"\nauthors = [\"me\"]\n\n[dependencies]\nmupdf-sys = {git = \"https://github.com/bruno-sm/mupdf-sys.git\"}\n</code></pre>\n\n<p>The problem is that MuPDF stores its third party libraries as git submodules with relative paths. Here is an extract of the .gitmodules file:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[submodule \"thirdparty/jbig2dec\"]\n    path = thirdparty/jbig2dec\n    url = ../jbig2dec.git\n[submodule \"thirdparty/mujs\"]\n    path = thirdparty/mujs\n    url = ../mujs.git\n</code></pre>\n\n<p>When I run <code>cargo build</code> I get the following error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Updating git repository `https://github.com/bruno-sm/mupdf-sys`\nerror: failed to load source for a dependency on `mupdf-sys`                     \n\nCaused by:\n  Unable to update https://github.com/bruno-sm/mupdf-sys\n\nCaused by:\n  failed to update submodule `mupdf`\n\nCaused by:\n  failed to update submodule `thirdparty/curl`\n\nCaused by:\n  invalid url `../thirdparty-curl.git`: relative URL without a base\n</code></pre>\n\n<p>This suggests that the base URL for the MuPDF repository is not specified, however it is in the file <code>.git/modules/mupdf/config</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[remote \"origin\"]\nurl = git://git.ghostscript.com/mupdf.git\nfetch = +refs/heads/*:refs/remotes/origin/*\n</code></pre>\n\n<p>There is no problem cloning the repository with <code>git clone --recursive https://github.com/bruno-sm/mupdf-sys</code>, so I don't know where the problem can be.</p>\n\n<p>To reproduce the error you have to create a new project with <code>cargo new project_name</code>, add</p>\n\n<pre><code>[dependencies]\nmupdf-sys = {git = \"https://github.com/bruno-sm/mupdf-sys.git\"}\n</code></pre>\n\n<p>to the Cargo.toml file and run <code>cargo build</code>.</p>\n\n<p>To see the contents of the MuPDF repository you can use <code>git clone --recursive git://git.ghostscript.com/mupdf.git</code></p>\n"}, {"tags": ["amazon-s3", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531319690, "post_id": 51287857, "comment_id": 89554110, "body": "This feels like it should be a feature request of the library."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 0, "last_activity_date": 1548342838, "creation_date": 1548342838, "answer_id": 54349818, "question_id": 51287857, "link": "https://stackoverflow.com/questions/51287857/is-it-possible-to-limit-bandwidth-for-transfers-to-amazon-s3-with-rusoto/54349818#54349818", "title": "Is it possible to limit bandwidth for transfers to Amazon S3 with Rusoto?", "body": "<p>I have opened a ticket to rusoto for this  issue.</p>\n\n<p><a href=\"https://github.com/rusoto/rusoto/issues/1083\" rel=\"nofollow noreferrer\">Reference</a></p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1548342838, "creation_date": 1531318628, "last_edit_date": 1531319675, "question_id": 51287857, "link": "https://stackoverflow.com/questions/51287857/is-it-possible-to-limit-bandwidth-for-transfers-to-amazon-s3-with-rusoto", "title": "Is it possible to limit bandwidth for transfers to Amazon S3 with Rusoto?", "body": "<p>I am trying to manage and limit the bandwidth for the transfers from Amazon S3. </p>\n\n<p>Are there any available options?</p>\n"}, {"tags": ["file", "amazon-s3", "rust", "file-transfer", "rusoto"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1531318067, "post_id": 51287360, "comment_id": 89552818, "body": "I don&#39;t see any <code>GetObjectOutput</code>"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1531318260, "post_id": 51287360, "comment_id": 89552980, "body": "@hellow result variable type is GetObjectOutput which I shown in debugger"}], "answers": [{"tags": [], "owner": {"reputation": 93509, "user_id": 4086, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e4a1b4bf6865eddd0edfe8cb90361c84?s=128&d=identicon&r=PG", "display_name": "Ferruccio", "link": "https://stackoverflow.com/users/4086/ferruccio"}, "is_accepted": true, "score": 2, "last_activity_date": 1531415365, "creation_date": 1531415365, "answer_id": 51311138, "question_id": 51287360, "link": "https://stackoverflow.com/questions/51287360/how-to-save-a-file-downloaded-from-s3-with-rusoto-to-my-hard-drive/51311138#51311138", "title": "How to save a file downloaded from S3 with Rusoto to my hard drive?", "body": "<p>You're almost there. Your code will put the object in <code>body</code>, which is a <code>Vec&lt;u8&gt;</code>.</p>\n\n<p>To write the contents of <code>body</code> to a file:</p>\n\n<pre><code>use std::io::Write;\nuse std::fs::File;\n\nlet mut file = File::create(\"/path/to/my-object\").expect(\"create failed\");\nfile.write_all(&amp;body).expect(\"failed to write body\");\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1590420852, "post_id": 62003659, "comment_id": 109666444, "body": "In this case should I pick your answer to note it is the correct one from now on?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1590420920, "post_id": 62003659, "comment_id": 109666477, "body": "@Websterix you should accept the answer that helped <b>you</b> the most, and upvote any answers that provide value."}, {"owner": {"reputation": 4028, "user_id": 631199, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/8d14e043d3c1f08e23d0a6fbbed1be3e?s=128&d=identicon&r=PG", "display_name": "Brian Bruggeman", "link": "https://stackoverflow.com/users/631199/brian-bruggeman"}, "edited": false, "score": 0, "creation_date": 1610241224, "post_id": 62003659, "comment_id": 116070769, "body": "Does anyone have an example which shows concurrent streams downloading (1:1) to files using the above?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4028, "user_id": 631199, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/8d14e043d3c1f08e23d0a6fbbed1be3e?s=128&d=identicon&r=PG", "display_name": "Brian Bruggeman", "link": "https://stackoverflow.com/users/631199/brian-bruggeman"}, "edited": false, "score": 0, "creation_date": 1610374283, "post_id": 62003659, "comment_id": 116104973, "body": "@BrianBruggeman see <a href=\"https://stackoverflow.com/q/51044467/155423\">How can I perform parallel asynchronous HTTP GET requests with reqwest?</a> for the general structure of such a thing."}, {"owner": {"reputation": 4028, "user_id": 631199, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/8d14e043d3c1f08e23d0a6fbbed1be3e?s=128&d=identicon&r=PG", "display_name": "Brian Bruggeman", "link": "https://stackoverflow.com/users/631199/brian-bruggeman"}, "edited": false, "score": 0, "creation_date": 1610379252, "post_id": 62003659, "comment_id": 116107383, "body": "@Shepmaster I think what you show here is good; does this imply that I can use multiple get object futures in place of urls?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4028, "user_id": 631199, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/8d14e043d3c1f08e23d0a6fbbed1be3e?s=128&d=identicon&r=PG", "display_name": "Brian Bruggeman", "link": "https://stackoverflow.com/users/631199/brian-bruggeman"}, "edited": false, "score": 0, "creation_date": 1610394997, "post_id": 62003659, "comment_id": 116114500, "body": "@BrianBruggeman I&#39;d expect something like that, yes."}, {"owner": {"reputation": 75, "user_id": 3144606, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b30d4243ad1cd87231fda9690d36cb7e?s=128&d=identicon&r=PG", "display_name": "Miguel Guilherme", "link": "https://stackoverflow.com/users/3144606/miguel-guilherme"}, "edited": false, "score": 0, "creation_date": 1614018682, "post_id": 62003659, "comment_id": 117250703, "body": "Couldn\u2019t manage to put the async version to work, do you have a working version on GitHub or something?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1590414829, "last_edit_date": 1590414829, "creation_date": 1590414095, "answer_id": 62003659, "question_id": 51287360, "link": "https://stackoverflow.com/questions/51287360/how-to-save-a-file-downloaded-from-s3-with-rusoto-to-my-hard-drive/62003659#62003659", "title": "How to save a file downloaded from S3 with Rusoto to my hard drive?", "body": "<p>Rusoto now uses the standard library futures and no longer offers the <code>sync</code> method, so the previous answer is no longer valid.</p>\n\n<h1>Reading to memory</h1>\n\n<pre><code>use futures::stream::TryStreamExt;\nuse rusoto_core::Region;\nuse rusoto_s3::{GetObjectRequest, S3Client, S3};\n\ntype Error = Box&lt;dyn std::error::Error&gt;;\ntype Result&lt;T, E = Error&gt; = std::result::Result&lt;T, E&gt;;\n\nconst BUCKET_NAME: &amp;str = \"my very own bucket name\";\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;()&gt; {\n    let client = S3Client::new(Region::UsEast2);\n\n    let mut object = client\n        .get_object(GetObjectRequest {\n            bucket: BUCKET_NAME.into(),\n            ..Default::default()\n        })\n        .await?;\n\n    let body = object.body.take().expect(\"The object has no body\");\n\n    let body = body.map_ok(|b| b.to_vec()).try_concat().await?;\n    println!(\"body length: {}\", body.len());\n\n    Ok(())\n}\n</code></pre>\n\n<p><code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code> need to be specified. I chose to set environment variables outside of the code.</p>\n\n<h1>Streaming to a file</h1>\n\n<pre><code>use rusoto_core::Region;\nuse rusoto_s3::{GetObjectRequest, S3Client, S3};\nuse tokio::{fs::File, io};\n\ntype Error = Box&lt;dyn std::error::Error&gt;;\ntype Result&lt;T, E = Error&gt; = std::result::Result&lt;T, E&gt;;\n\nconst BUCKET_NAME: &amp;str = \"my very own bucket name\";\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;()&gt; {\n    let client = S3Client::new(Region::UsEast2);\n\n    let mut object = client\n        .get_object(GetObjectRequest {\n            bucket: BUCKET_NAME.into(),\n            ..Default::default()\n        })\n        .await?;\n\n    let body = object.body.take().expect(\"The object has no body\");\n\n    let mut body = body.into_async_read();\n    let mut file = File::create(\"/tmp/a-place-to-write\").await?;\n    io::copy(&amp;mut body, &amp;mut file).await?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>While <code>ByteStream</code> has an alluring <a href=\"https://docs.rs/rusoto_core/0.43.0/rusoto_core/struct.ByteStream.html#method.into_blocking_read\" rel=\"noreferrer\"><code>into_blocking_read</code></a> method, I do not recommend using it. If you attempt to use it inside of an async context, you get a panic because it starts a nested Tokio executor. If you use it outside of an async context, it will <a href=\"https://github.com/rusoto/rusoto/issues/1726\" rel=\"noreferrer\">truncate the data</a> unless you take great care to have the async runtime around but not to be <em>within</em> it.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/53330556/155423\">Writing a chunk stream to a file asynchronously using hyper</a></li>\n<li><a href=\"https://stackoverflow.com/q/53245412/155423\">How do I write a futures::Stream to disk without storing it entirely in memory first?</a></li>\n</ul>\n\n<h1>Dependency versions</h1>\n\n<pre><code>[dependencies]\nrusoto_s3 = \"0.43.0\"\nrusoto_core = \"0.43.0\"\ntokio = { version = \"0.2.21\", features = [\"macros\"] }\nfutures = \"0.3.5\"\n</code></pre>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1786, "favorite_count": 1, "accepted_answer_id": 51311138, "answer_count": 2, "score": 2, "last_activity_date": 1590414829, "creation_date": 1531317347, "last_edit_date": 1531317448, "question_id": 51287360, "link": "https://stackoverflow.com/questions/51287360/how-to-save-a-file-downloaded-from-s3-with-rusoto-to-my-hard-drive", "title": "How to save a file downloaded from S3 with Rusoto to my hard drive?", "body": "<p>I am trying to download a file from a bucket with Rusoto and I am getting the file content:</p>\n\n<pre><code>fn get_object(client: &amp;TestClient, bucket: &amp;str, filename: &amp;str) {\n    let get_req = GetObjectRequest {\n        bucket: bucket.to_owned(),\n        key: filename.to_owned(),\n        ..Default::default()\n    };\n\n    let result = client.get_object(&amp;get_req).sync().expect(\"Couldn't GET object\");\n\n\n    let stream = result.body.unwrap();\n    let body = stream.concat2().wait().unwrap();\n\n    assert!(body.len() &gt; 0);\n}\n</code></pre>\n\n<p>How can I save this <code>GetObjectOutput(result)</code> object to a file? </p>\n"}, {"tags": ["ios", "xcode", "rust", "rustup"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1531316903, "post_id": 51286560, "comment_id": 89551852, "body": "Check if you have overridden the <code>SDKROOT</code> or <code>DEVELOPER_DIR</code> environment variables? What does <code>xcrun --show-sdk-path</code> say?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1531317117, "post_id": 51286560, "comment_id": 89552020, "body": "Thanks @kennytm. I added that info to the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531317366, "post_id": 51286560, "comment_id": 89552238, "body": "And how about <code>xcode-select -p</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531318525, "post_id": 51287676, "comment_id": 89553193, "body": "That <i>does</i> remove the references to Simulator from all the variables and <code>--version</code> info that I put in my question. But the error is still the same when I <code>cargo build</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531319408, "post_id": 51287676, "comment_id": 89553871, "body": "Restarting my machine with that change has fixed it. Not sure why changing the variable and opening a new terminal window wasn&#39;t sufficient."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531319563, "post_id": 51287676, "comment_id": 89553996, "body": "@PeterHall Perhaps you also needed <code>cargo clean</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531319614, "post_id": 51287676, "comment_id": 89554046, "body": "Ah, that&#39;s plausible."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 1, "last_activity_date": 1531318147, "creation_date": 1531318147, "answer_id": 51287676, "question_id": 51286560, "link": "https://stackoverflow.com/questions/51286560/how-can-i-test-ios-apps-in-xcode-without-it-breaking-my-rust-toolchain/51287676#51287676", "title": "How can I test iOS apps in XCode without it breaking my Rust toolchain?", "body": "<p>You have overridden <code>$SDKROOT</code> to use the iPhone Simulator SDK. One simple fix would be undefining it before invoking the C compiler, which should make it use the macOS SDK instead.</p>\n\n<pre><code>$ export SDKROOT=\n$ cargo build\n</code></pre>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 51287676, "answer_count": 1, "score": 0, "last_activity_date": 1531318147, "creation_date": 1531315276, "last_edit_date": 1531317704, "question_id": 51286560, "link": "https://stackoverflow.com/questions/51286560/how-can-i-test-ios-apps-in-xcode-without-it-breaking-my-rust-toolchain", "title": "How can I test iOS apps in XCode without it breaking my Rust toolchain?", "body": "<p>I recently tested an IPhone application, written in Swift, with XCode using the built-in iPhone Simulator.</p>\n\n<p>Since then I get compile errors when I try to build any Rust project, even after updating Rust with <code>rustup</code>. There are warnings too which mention the iOS Simulator. I'm not familiar with the C or XCode toolchains, so I'm not sure what is the best way to fix it or how to prevent this happening again in the future.</p>\n\n<p>Note: my Rust projects are not targeting iOS.</p>\n\n<p>Here's what happens with a new project:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo new test1\n$ cd test1\n$ cargo build\n   Compiling test1 v0.1.0 (file:///Users/peter/dev/test1)\nerror: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-m64\" \"-L\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/peter/dev/test1/target/debug/deps/test1-7fe1ce40b6cf488e.1y16o1qfye96o7m0.rcgu.o\" \"/Users/peter/dev/test1/target/debug/deps/test1-7fe1ce40b6cf488e.3k2zkvohnahk04y3.rcgu.o\" \"/Users/peter/dev/test1/target/debug/deps/test1-7fe1ce40b6cf488e.3rngp6bm2u2q5z0y.rcgu.o\" \"/Users/peter/dev/test1/target/debug/deps/test1-7fe1ce40b6cf488e.4oc10dk278mpk1vy.rcgu.o\" \"/Users/peter/dev/test1/target/debug/deps/test1-7fe1ce40b6cf488e.4xq48u46a1pwiqn7.rcgu.o\" \"/Users/peter/dev/test1/target/debug/deps/test1-7fe1ce40b6cf488e.oa3rad818d8sgn4.rcgu.o\" \"-o\" \"/Users/peter/dev/test1/target/debug/deps/test1-7fe1ce40b6cf488e\" \"/Users/peter/dev/test1/target/debug/deps/test1-7fe1ce40b6cf488e.crate.allocator.rcgu.o\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/peter/dev/test1/target/debug/deps\" \"-L\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-5a05d0933700ddb1.rlib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-64fd20ce4af6fbad.rlib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_system-2c5b1969da7ded68.rlib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-c80953af6722fea1.rlib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-2ed0d380199e717d.rlib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-8c87fbf7e0bce62b.rlib\" \"/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-9b97130153f6d410.rlib\" \"-l\" \"System\" \"-l\" \"resolv\" \"-l\" \"pthread\" \"-l\" \"c\" \"-l\" \"m\"\n  = note: ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(jemalloc.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(jemalloc.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(state.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(state.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(fileline.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(fileline.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(arena.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(arena.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(base.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(base.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(chunk.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(chunk.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(chunk_dss.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(chunk_dss.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(ctl.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(ctl.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(huge.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(huge.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(mutex.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(mutex.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(util.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(util.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(tsd.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(tsd.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(tcache.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(tcache.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(stats.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(stats.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(pages.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(pages.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(prof.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(prof.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(quarantine.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(quarantine.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(witness.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(witness.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(alloc.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(alloc.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(macho.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(macho.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(posix.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(posix.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(bitmap.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(bitmap.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(chunk_mmap.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(chunk_mmap.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(ckh.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(ckh.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(extent.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(extent.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(nstime.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(nstime.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(rtree.pic.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-3913d194bc6184af.rlib(rtree.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(dwarf.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(dwarf.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(read.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(read.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          ld: warning: URGENT: building for iOS simulator, but linking in object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(sort.o)) built for OSX. Note: This will be an error in the future.\n          ld: warning: object file (/Users/peter/.rustup/toolchains/1.27.1-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-73671a9242f94467.rlib(sort.o)) was built for newer OSX version (10.7) than being linked (8.0)\n          Undefined symbols for architecture x86_64:\n            \"_opendir$INODE64\", referenced from:\n                _macho_try_dsym in libstd-73671a9242f94467.rlib(macho.o)\n                _macho_add in libstd-73671a9242f94467.rlib(macho.o)\n            \"_readdir$INODE64\", referenced from:\n                _macho_try_dsym in libstd-73671a9242f94467.rlib(macho.o)\n                _macho_add in libstd-73671a9242f94467.rlib(macho.o)\n          ld: symbol(s) not found for architecture x86_64\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\n\n\nerror: aborting due to previous error\n\nerror: Could not compile `test1`.\n</code></pre>\n\n<p>CC:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cc --version\nApple LLVM version 9.1.0 (clang-902.0.39.2)\nTarget: x86_64-apple-darwin17.6.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\n</code></pre>\n\n<p>GCC:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ gcc --version\nConfigured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator11.4.sdk/usr/include/c++/4.2.1\nApple LLVM version 9.1.0 (clang-902.0.39.2)\nTarget: x86_64-apple-darwin17.6.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\n</code></pre>\n\n<p>Rust:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup show active-toolchain\n1.27.1-x86_64-apple-darwin\n</code></pre>\n\n<p>Other information:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ echo $SDKROOT\n/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator11.4.sdk\n\n$ echo $DEVELOPER_DIR\n/Applications/Xcode.app/Contents/Developer\n\n$ xcrun --show-sdk-path\n/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator11.4.sdk\n\n$ xcode-select -p\n/Applications/Xcode.app/Contents/Developer\n</code></pre>\n\n<p>I found this Rust issue, which <em>sounds</em> similar, but it's very old and also resolved:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/34617\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/34617</a></li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1531314039, "post_id": 51285999, "comment_id": 89549683, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51285999/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531314106, "post_id": 51285999, "comment_id": 89549731, "body": "TL;DR: you <b>cannot</b> do this, <code>Arg</code> will never allow it."}, {"owner": {"reputation": 485, "user_id": 6953143, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Y5s0V.jpg?s=128&g=1", "display_name": "matthieusb", "link": "https://stackoverflow.com/users/6953143/matthieusb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531314241, "post_id": 51285999, "comment_id": 89549835, "body": "&quot;in Rust it is impossible to return a reference pointing into local variables of the function&quot;. This answers my question pretty well indeed. Sorry for the duplicate."}, {"owner": {"reputation": 485, "user_id": 6953143, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Y5s0V.jpg?s=128&g=1", "display_name": "matthieusb", "link": "https://stackoverflow.com/users/6953143/matthieusb"}, "edited": false, "score": 0, "creation_date": 1531314474, "post_id": 51285999, "comment_id": 89550030, "body": "Just to clarify, I can&#39;t do what I intend here unless I use a (dirty) static lifetime or if I return the value of the owned type ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531315067, "post_id": 51285999, "comment_id": 89550492, "body": "That is correct. If you are calling this function a &quot;few&quot; times, then leaking memory may be acceptable. Otherwise you need to restructure your code so that you call <code>format!</code> before this function and pass in a reference to the result."}, {"owner": {"reputation": 485, "user_id": 6953143, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Y5s0V.jpg?s=128&g=1", "display_name": "matthieusb", "link": "https://stackoverflow.com/users/6953143/matthieusb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531315290, "post_id": 51285999, "comment_id": 89550651, "body": "Ok I understand now. I&#39;ll probably be using another parsing library from now on, but I get it. Thanks a lot for your help."}], "owner": {"reputation": 485, "user_id": 6953143, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Y5s0V.jpg?s=128&g=1", "display_name": "matthieusb", "link": "https://stackoverflow.com/users/6953143/matthieusb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 30, "favorite_count": 0, "closed_date": 1531314933, "answer_count": 0, "score": 0, "last_activity_date": 1531313950, "creation_date": 1531313649, "last_edit_date": 1531313950, "question_id": 51285999, "link": "https://stackoverflow.com/questions/51285999/borrowed-value-does-not-live-long-enough-with-strings-and-format", "closed_reason": "Duplicate", "title": "Borrowed value does not live long enough with Strings and format", "body": "<p>I am using clap.rs to parse command line arguments and I am struggling with lifetimes and borrowing with <code>String</code>s:</p>\n\n<pre><code>fn get_build_tool_kind_argument&lt;'a&gt;(short_arg: &amp;'a str, long_arg : &amp;'a str) -&gt; Arg&lt;'a, 'a&gt; {\n    let argument_name = format!(\"{}_pouet\", long_arg);\n\n    Arg::with_name(&amp;argument_name)\n        .short(short_arg)\n        .long(long_arg)\n        .takes_value(false)\n        .help(\"Configure elements for maven build tool\")\n}\n</code></pre>\n\n<p>To call the function, I do <code>get_build_tool_kind_argument(\"m\", \"maven\")</code>.</p>\n\n<p>Here is the compilation error I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `argument_name` does not live long enough\n  --&gt; src\\main.rs:29:21\n   |\n29 |     Arg::with_name(&amp;argument_name)\n   |                     ^^^^^^^^^^^^^ borrowed value does not live long enough\n...\n34 | }\n</code></pre>\n\n<p>I have seen a lot of questions and documentation but none seem to apply in my case. I still have limited comprehension about lifetimes.</p>\n\n<p>From what I see here, the borrowed formatted value I inject to my <code>Arg</code> name is freed at the end of the function, so it can't outlive it and be used when I call <code>get_build_tool_kind_argument</code>. I can't find a way to keep using the <code>format!</code> macro and solve my problem.</p>\n"}, {"tags": ["parsing", "types", "rust", "type-inference"], "answers": [{"comments": [{"owner": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "edited": false, "score": 0, "creation_date": 1531306032, "post_id": 51283492, "comment_id": 89544226, "body": "I was interpreting the compiler message as &quot;I have to annotate <code>filter_map</code>&quot;, didn&#39;t occur to me it was about <code>parse</code>. Thanks."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "edited": false, "score": 1, "creation_date": 1531306217, "post_id": 51283492, "comment_id": 89544338, "body": "I added a bit more explanation. You <i>could</i> have annotated <code>filter_map</code> too, but it would be less pleasant to look at."}, {"owner": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "edited": false, "score": 0, "creation_date": 1531306726, "post_id": 51283492, "comment_id": 89544681, "body": "I was trying something like .filter_map&lt;String,i32&gt; before, confused me heh"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "edited": false, "score": 0, "creation_date": 1531306816, "post_id": 51283492, "comment_id": 89544749, "body": "@DulguunOtgon The second argument is a function type. Hence, best to infer it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531316883, "post_id": 51283492, "comment_id": 89551832, "body": "Pretty sure the <code>.ok()</code> is redundant as <code>Result</code> implements <code>IntoIterator</code> just like <code>Option</code>. Oh, that&#39;s if you switch to <code>flat_map</code>, nevermind. (I still prefer <code>flat_map</code>)."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1531306983, "last_edit_date": 1531306983, "creation_date": 1531305908, "answer_id": 51283492, "question_id": 51283403, "link": "https://stackoverflow.com/questions/51283403/cannot-infer-type-for-b-for-filter-map-sum/51283492#51283492", "title": "Cannot infer type for `B` for filter_map().sum()", "body": "<p>The quick fix is to say which type you are parsing into:</p>\n\n<pre><code>let v: i32 = buff\n    .split_whitespace()\n    .filter_map(|w| w.parse::&lt;i32&gt;().ok())\n    .sum();\n</code></pre>\n\n<p>The reason is that <code>filter_map</code> has a type variable <code>B</code>, which would need to be inferred from the closure that you pass to it (the closure returns <code>Option&lt;B&gt;</code>). However, <code>parse()</code> also has a type variable for the type you are parsing into, which also can often be inferred. But here the type-checker would have to infer each of these types from each other, which obviously can't be done. To break the cycle, you have to tell it somewhere what the concrete type is.</p>\n\n<p>You also could have fixed it by annotating <code>filter_map</code>. It's not as nice because <code>filter_map</code> has two type parameters, but you can still let the second one be inferred by using an <code>_</code>:</p>\n\n<pre><code>let v: i32 = buff\n    .split_whitespace()\n    .filter_map::&lt;i32, _&gt;(|w| w.parse().ok())\n    .sum();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1531306013, "post_id": 51283498, "comment_id": 89544212, "body": "We do write that <code>v : i32</code>, so why can&#39;t the compiler infer this?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1531306072, "post_id": 51283498, "comment_id": 89544249, "body": "Because you give that as a hint for the sum function. If you just write <code>let v = ...</code> you have to specify the type for sum <code>.sum::&lt;i32&gt;()</code>."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1531306173, "post_id": 51283498, "comment_id": 89544324, "body": "But if the compiler knows the type for <code>.sum</code>, why can&#39;t it then infer the type for <code>.parse</code>? Can <code>rustc</code> only make inferences on that level?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1531315883, "post_id": 51283498, "comment_id": 89551070, "body": "Because they could be different <code>w.parse::&lt;u32&gt;()</code> and <code>.sum::&lt;u64&gt;()</code> for example"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1531326388, "post_id": 51283498, "comment_id": 89558247, "body": "@hellow: I don&#39;t think that is the reason. <code>w.parse::&lt;u32&gt;()</code> and <code>.sum::&lt;u64&gt;()</code> <a href=\"https://play.rust-lang.org/?gist=51e381197289b22dea66b1b4b35b01df&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">will not compile</a>. I think it is more related to the fact that <code>sum()</code> does not return the summed type (call it <code>Item</code>) but any value that implements <code>Sum&lt;Item&gt;</code>. And that the compiler fails, because any number of types could apply."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 4, "last_activity_date": 1531305931, "creation_date": 1531305931, "answer_id": 51283498, "question_id": 51283403, "link": "https://stackoverflow.com/questions/51283403/cannot-infer-type-for-b-for-filter-map-sum/51283498#51283498", "title": "Cannot infer type for `B` for filter_map().sum()", "body": "<p>Let's look up the signature of filter_map to see, what the complain is about:</p>\n\n<pre><code>fn filter_map&lt;B, F&gt;(self, f: F) -&gt; FilterMap&lt;Self, F&gt; where F: FnMut(Self::Item) -&gt; Option&lt;B&gt;, \n</code></pre>\n\n<p>Okay, so <code>Option&lt;B&gt;</code> is the result, which means he cannot infer what <code>w.parse().ok()</code> will be.</p>\n\n<p>Let's try to give him a hint</p>\n\n<pre><code>.filter_map(|w| w.parse::&lt;i32&gt;().ok())\n</code></pre>\n\n<p>Let's compile an see.... Hurray!</p>\n\n<p>So, lesson learned: Look up the signature and try to figure out, which part the compiler cannot infer and try to specify it.</p>\n"}], "owner": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1404, "favorite_count": 0, "accepted_answer_id": 51283492, "answer_count": 2, "score": 3, "last_activity_date": 1548268656, "creation_date": 1531305669, "last_edit_date": 1548268656, "question_id": 51283403, "link": "https://stackoverflow.com/questions/51283403/cannot-infer-type-for-b-for-filter-map-sum", "title": "Cannot infer type for `B` for filter_map().sum()", "body": "<p>The code below reads numbers, sums them, then prints the sum. I've tried few annotations, but it didn't work. I must be missing something. How could I make it work?</p>\n\n<pre><code>use std::io;\nuse std::io::Read;\n\nfn main() {\n    let mut buff = String::new();\n    io::stdin().read_to_string(&amp;mut buff).expect(\"read_to_string error\");\n\n    let v: i32 = buff\n        .split_whitespace()\n        .filter_map(|w| w.parse().ok())\n        .sum();\n\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>Error message from compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>type annotations needed\n --&gt; src\\main.rs:9:10\n  |\n9 |         .filter_map(|w| w.parse().ok())\n  |          ^^^^^^^^^^ cannot infer type for `B`\n</code></pre>\n"}, {"tags": ["rust", "serde", "serde-json"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 4, "creation_date": 1531290737, "post_id": 51276896, "comment_id": 89534784, "body": "@YjyJeff are you aware that JSON explicitly requires string keys (<a href=\"https://en.wikipedia.org/wiki/JSON#Data_types,_syntax_and_example\" rel=\"nofollow noreferrer\">wikipedia</a>)? (Serde probab!y knows how to turn an <code>u64</code> into a string but not your struct...)"}, {"owner": {"reputation": 163, "user_id": 5705424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c424e1f69b6a20f79c7dc93d34f414d?s=128&d=identicon&r=PG&f=1", "display_name": "YjyJeff", "link": "https://stackoverflow.com/users/5705424/yjyjeff"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1531291184, "post_id": 51276896, "comment_id": 89534983, "body": "@kazemakase  I realized it. Therefore, I derive the Serialize trait for the Foo struct."}, {"owner": {"reputation": 163, "user_id": 5705424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c424e1f69b6a20f79c7dc93d34f414d?s=128&d=identicon&r=PG&f=1", "display_name": "YjyJeff", "link": "https://stackoverflow.com/users/5705424/yjyjeff"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531291234, "post_id": 51276896, "comment_id": 89535006, "body": "@Boiethios Thanks! I fixed my example code."}, {"owner": {"reputation": 163, "user_id": 5705424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c424e1f69b6a20f79c7dc93d34f414d?s=128&d=identicon&r=PG&f=1", "display_name": "YjyJeff", "link": "https://stackoverflow.com/users/5705424/yjyjeff"}, "reply_to_user": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "edited": false, "score": 0, "creation_date": 1531293537, "post_id": 51276896, "comment_id": 89536231, "body": "@dtolnay Actually, the Foo are enum in my code. The enum contains u64 and string. I expect the HashMap to store u64 or string as keys and f64 as values. For example:  {&quot;key&quot;: 0.5, &quot;9&quot;: 0.6}"}], "answers": [{"comments": [{"owner": {"reputation": 2505, "user_id": 749521, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/302a64f5f51a7f8dc83c0881f4520eb5?s=128&d=identicon&r=PG", "display_name": "Steven Roose", "link": "https://stackoverflow.com/users/749521/steven-roose"}, "edited": false, "score": 6, "creation_date": 1559126624, "post_id": 51284093, "comment_id": 99321000, "body": "This doesn&#39;t really answer the question. He derived the serde implementations for his types, so that should be sufficient."}, {"owner": {"reputation": 126, "user_id": 4709888, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PslUe.png?s=128&g=1", "display_name": "dotPoozer", "link": "https://stackoverflow.com/users/4709888/dotpoozer"}, "reply_to_user": {"reputation": 2505, "user_id": 749521, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/302a64f5f51a7f8dc83c0881f4520eb5?s=128&d=identicon&r=PG", "display_name": "Steven Roose", "link": "https://stackoverflow.com/users/749521/steven-roose"}, "edited": false, "score": 0, "creation_date": 1600209444, "post_id": 51284093, "comment_id": 113014493, "body": "Limitation lies on JSON serializer side. It requires keys to be <code>String</code> (or to be more specific <code>Display</code>). On the other side, what behaviour would it incorporate? Keys looking like stringified structs aren&#39;t best looking and can be misleading in this scenario."}], "tags": [], "owner": {"reputation": 126, "user_id": 4709888, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PslUe.png?s=128&g=1", "display_name": "dotPoozer", "link": "https://stackoverflow.com/users/4709888/dotpoozer"}, "is_accepted": true, "score": 6, "last_activity_date": 1614376616, "last_edit_date": 1614376616, "creation_date": 1531307736, "answer_id": 51284093, "question_id": 51276896, "link": "https://stackoverflow.com/questions/51276896/how-do-i-use-serde-to-serialize-a-hashmap-with-structs-as-keys-to-json/51284093#51284093", "title": "How do I use Serde to serialize a HashMap with structs as keys to JSON?", "body": "<p>According to <a href=\"https://tools.ietf.org/html/rfc7159#section-4\" rel=\"nofollow noreferrer\">JSONs specification</a>, JSON keys must be strings. <code>serde_json</code> uses <code>fmt::Display</code> <a href=\"https://github.com/serde-rs/json/blob/9b64e0b17ca73e7fbecace37758ff19bc35dea05/src/value/ser.rs#L437\" rel=\"nofollow noreferrer\">in here</a>, for <strong>some</strong> non-string keys, to allow serialization of wider range of <code>HashMap</code>s. That's why <code>HashMap&lt;u64, f64&gt;</code> works as well as <code>HashMap&lt;String, f64&gt;</code> would. However, not all types are covered (<a href=\"https://github.com/serde-rs/json/blob/9b64e0b17ca73e7fbecace37758ff19bc35dea05/src/value/ser.rs#L591\" rel=\"nofollow noreferrer\">Foo's case here</a>).</p>\n<p>That's why we need to provide our own <code>Serialize</code> implementation:</p>\n<pre><code>impl Display for Foo {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; std::fmt::Result {\n        write!(f, &quot;{}&quot;, self.x)\n    }\n}\n\nimpl Serialize for Bar {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where\n        S: Serializer,\n    {\n        let mut map = serializer.serialize_map(Some(self.x.len()))?;\n        for (k, v) in &amp;self.x {\n            map.serialize_entry(&amp;k.to_string(), &amp;v)?;\n        }\n        map.end()\n    }\n}\n</code></pre>\n<p>(<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=31d8a3ee345317c110eafba76257a51d\" rel=\"nofollow noreferrer\">playground</a>)</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1606001313, "last_edit_date": 1606001313, "creation_date": 1606000850, "answer_id": 64949136, "question_id": 51276896, "link": "https://stackoverflow.com/questions/51276896/how-do-i-use-serde-to-serialize-a-hashmap-with-structs-as-keys-to-json/64949136#64949136", "title": "How do I use Serde to serialize a HashMap with structs as keys to JSON?", "body": "<p>You can use <code>serde_as</code> from the <a href=\"https://crates.io/crates/serde_with\" rel=\"noreferrer\"><code>serde_with</code> crate</a> to encode the <code>HashMap</code> as a sequence of key-value pairs:</p>\n<pre><code>use serde_with::serde_as; // 1.5.1\n\n#[serde_as]\n#[derive(Serialize, Deserialize, Debug)]\nstruct Bar {\n    #[serde_as(as = &quot;Vec&lt;(_, _)&gt;&quot;]\n    x: HashMap&lt;Foo, f64&gt;,\n}\n</code></pre>\n<p>Which will serialize to (and deserialize from) this:</p>\n<pre><code>{\n  &quot;x&quot;:[\n    [{&quot;x&quot;: 0}, 0.0],\n    [{&quot;x&quot;: 1}, 0.0],\n    [{&quot;x&quot;: 2}, 0.0]\n  ]\n}\n</code></pre>\n<p>There is likely some overhead from converting the <code>HashMap</code> to <code>Vec</code>, but this can be very convenient.</p>\n"}, {"comments": [{"owner": {"reputation": 8171, "user_id": 311655, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6bad9300ce17b6a89678ed9343647906?s=128&d=identicon&r=PG", "display_name": "DenisKolodin", "link": "https://stackoverflow.com/users/311655/deniskolodin"}, "edited": false, "score": 0, "creation_date": 1617530546, "post_id": 66600486, "comment_id": 118325799, "body": "And finally I&#39;ve released the solution as the crate, because needed it many times: <a href=\"https://crates.io/crates/vectorize\" rel=\"nofollow noreferrer\">crates.io/crates/vectorize</a>"}], "tags": [], "owner": {"reputation": 8171, "user_id": 311655, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6bad9300ce17b6a89678ed9343647906?s=128&d=identicon&r=PG", "display_name": "DenisKolodin", "link": "https://stackoverflow.com/users/311655/deniskolodin"}, "is_accepted": false, "score": 0, "last_activity_date": 1615554449, "creation_date": 1615554449, "answer_id": 66600486, "question_id": 51276896, "link": "https://stackoverflow.com/questions/51276896/how-do-i-use-serde-to-serialize-a-hashmap-with-structs-as-keys-to-json/66600486#66600486", "title": "How do I use Serde to serialize a HashMap with structs as keys to JSON?", "body": "<p>I've found the bulletproof solution \ud83d\ude03</p>\n<ul>\n<li>Extra dependencies not required</li>\n<li>Compatible with <code>HashMap</code>, <code>BTreeMap</code> and other iterable types</li>\n<li>Works with <code>flexbuffers</code></li>\n</ul>\n<p>The following code converts a field (map) to the intermediate <code>Vec</code> representation:</p>\n<pre><code>pub mod vectorize {\n    use serde::{Deserialize, Deserializer, Serialize, Serializer};\n    use std::iter::FromIterator;\n\n    pub fn serialize&lt;'a, T, K, V, S&gt;(target: T, ser: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where\n        S: Serializer,\n        T: IntoIterator&lt;Item = (&amp;'a K, &amp;'a V)&gt;,\n        K: Serialize + 'a,\n        V: Serialize + 'a,\n    {\n        let container: Vec&lt;_&gt; = target.into_iter().collect();\n        serde::Serialize::serialize(&amp;container, ser)\n    }\n\n    pub fn deserialize&lt;'de, T, K, V, D&gt;(des: D) -&gt; Result&lt;T, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n        T: FromIterator&lt;(K, V)&gt;,\n        K: Deserialize&lt;'de&gt;,\n        V: Deserialize&lt;'de&gt;,\n    {\n        let container: Vec&lt;_&gt; = serde::Deserialize::deserialize(des)?;\n        Ok(T::from_iter(container.into_iter()))\n    }\n}\n</code></pre>\n<p>To use it just add the module's name as an attribute:</p>\n<pre><code>#[derive(Debug, Serialize, Deserialize)]\nstruct MyComplexType {\n    #[serde(with = &quot;vectorize&quot;)]\n    map: HashMap&lt;MyKey, String&gt;,\n}\n</code></pre>\n<p>The remained part if you want to check it locally:</p>\n<pre><code>use anyhow::Error;\nuse serde::{Deserialize, Serialize};\nuse std::collections::HashMap;\n\n#[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq, PartialOrd, Ord, Hash)]\nstruct MyKey {\n    one: String,\n    two: u16,\n    more: Vec&lt;u8&gt;,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct MyComplexType {\n    #[serde(with = &quot;vectorize&quot;)]\n    map: HashMap&lt;MyKey, String&gt;,\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let key = MyKey {\n        one: &quot;1&quot;.into(),\n        two: 2,\n        more: vec![1, 2, 3],\n    };\n    let mut map = HashMap::new();\n    map.insert(key.clone(), &quot;value&quot;.into());\n    let instance = MyComplexType { map };\n    let serialized = serde_json::to_string(&amp;instance)?;\n    println!(&quot;JSON: {}&quot;, serialized);\n    let deserialized: MyComplexType = serde_json::from_str(&amp;serialized)?;\n    let expected_value = &quot;value&quot;.to_string();\n    assert_eq!(deserialized.map.get(&amp;key), Some(&amp;expected_value));\n    Ok(())\n}\n</code></pre>\n<p>And on the Rust playground: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bf1773b6e501a0ea255ccdf8ce37e74d\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bf1773b6e501a0ea255ccdf8ce37e74d</a></p>\n"}], "owner": {"reputation": 163, "user_id": 5705424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c424e1f69b6a20f79c7dc93d34f414d?s=128&d=identicon&r=PG&f=1", "display_name": "YjyJeff", "link": "https://stackoverflow.com/users/5705424/yjyjeff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10112, "favorite_count": 3, "accepted_answer_id": 51284093, "answer_count": 3, "score": 15, "last_activity_date": 1615554449, "creation_date": 1531280416, "last_edit_date": 1606001414, "question_id": 51276896, "link": "https://stackoverflow.com/questions/51276896/how-do-i-use-serde-to-serialize-a-hashmap-with-structs-as-keys-to-json", "title": "How do I use Serde to serialize a HashMap with structs as keys to JSON?", "body": "<p>I want to serialize a <code>HashMap</code> with structs as keys:</p>\n<pre><code>use serde::{Deserialize, Serialize}; // 1.0.68\nuse std::collections::HashMap;\n\nfn main() {\n    #[derive(Serialize, Deserialize, Debug, PartialEq, Eq, Hash)]\n    struct Foo {\n        x: u64,\n    }\n\n    #[derive(Serialize, Deserialize, Debug)]\n    struct Bar {\n        x: HashMap&lt;Foo, f64&gt;,\n    }\n\n    let mut p = Bar { x: HashMap::new() };\n    p.x.insert(Foo { x: 0 }, 0.0);\n    let serialized = serde_json::to_string(&amp;p).unwrap();\n}\n</code></pre>\n<p>This code compiles, but when I run it I get an error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>Error(&quot;key must be a string&quot;, line: 0, column: 0)'\n</code></pre>\n<p>I changed the code:</p>\n<pre><code>#[derive(Serialize, Deserialize, Debug)]\nstruct Bar {\n    x: HashMap&lt;u64, f64&gt;,\n}\n\nlet mut p = Bar { x: HashMap::new() };\np.x.insert(0, 0.0);\nlet serialized = serde_json::to_string(&amp;p).unwrap();\n</code></pre>\n<p>The key in the <code>HashMap</code> is now a <code>u64</code> instead of a string. Why does the first code give an error?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1531265405, "post_id": 51275153, "comment_id": 89528488, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/50090578/155423\">How to write a trait bound for a reference to an associated type on the trait itself?</a> and/or <a href=\"https://stackoverflow.com/q/50660911/155423\">Why are supertrait bounds other than the first not recognized on an associated type?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51275153/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1531265432, "post_id": 51275153, "comment_id": 89528493, "body": "TL;DR: it&#39;s a compiler shortcoming, you have to replicate the bounds for now."}, {"owner": {"reputation": 1462, "user_id": 1226945, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/679b2cf8c6c10d0e180bf78c7e9de3f4?s=128&d=identicon&r=PG", "display_name": "coltfred", "link": "https://stackoverflow.com/users/1226945/coltfred"}, "edited": false, "score": 0, "creation_date": 1531319531, "post_id": 51275153, "comment_id": 89553973, "body": "I didn&#39;t think of searching for super trait. Thanks for the answers. I guess I&#39;ll limp along until the bug is fixed."}], "owner": {"reputation": 1462, "user_id": 1226945, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/679b2cf8c6c10d0e180bf78c7e9de3f4?s=128&d=identicon&r=PG", "display_name": "coltfred", "link": "https://stackoverflow.com/users/1226945/coltfred"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "closed_date": 1531319540, "answer_count": 0, "score": 1, "last_activity_date": 1531265258, "creation_date": 1531264789, "last_edit_date": 1531265258, "question_id": 51275153, "link": "https://stackoverflow.com/questions/51275153/creating-a-trait-which-is-the-composition-of-other-traits-over-borrowed-values", "closed_reason": "Duplicate", "title": "Creating a trait which is the composition of other traits over borrowed values", "body": "<p>I'm trying to create a trait which is the amalgamation of other traits, but with their inputs over the borrowed versions of those values instead of taking ownership of them. For this example I reduced it to one.</p>\n\n<p>For instance:</p>\n\n<pre><code>use std::ops::Add;\n\ntrait Foo\nwhere\n    for&lt;'a&gt; &amp;'a Self: Add&lt;Output = Self&gt;,\n{\n}\n</code></pre>\n\n<p>It seems like this should create a trait <code>Foo</code> where it needs <code>Add</code> to be defined. However, this doesn't seem to work when I attempt to use it.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Two&lt;T&gt; {\n    x: T,\n    y: T,\n}\n\nimpl&lt;T&gt; Two&lt;T&gt; where T: Foo {}\n</code></pre>\n\n<p>This doesn't compile with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: cannot add `&amp;'a T` to `&amp;'a T`\n  --&gt; src/main.rs:15:1\n   |\n15 | impl&lt;T&gt; Two&lt;T&gt; where T: Foo {}\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `&amp;'a T + &amp;'a T`\n   |\n   = help: the trait `for&lt;'a&gt; std::ops::Add` is not implemented for `&amp;'a T`\n   = help: consider adding a `where for&lt;'a&gt; &amp;'a T: std::ops::Add` bound\nnote: required by `Foo`\n  --&gt; src/main.rs:3:3\n   |\n3  | /   trait Foo\n4  | | where\n5  | |     for&lt;'a&gt; &amp;'a Self: Add&lt;Output = Self&gt;,\n6  | | {\n7  | | }\n   | |_^\n</code></pre>\n\n<p>Why do I need that clause if <code>T</code> requires <code>Foo</code> which itself has that requirement? Is there some other way to create an amalgamation trait to get better efficiency?</p>\n"}, {"tags": ["file", "rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 4, "creation_date": 1531257712, "post_id": 51274039, "comment_id": 89526330, "body": "Use <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.exists\" rel=\"nofollow noreferrer\">Path::exists</a>?"}, {"owner": {"reputation": 387, "user_id": 6186709, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/G5lWJ.png?s=128&g=1", "display_name": "I60R", "link": "https://stackoverflow.com/users/6186709/i60r"}, "reply_to_user": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1531258214, "post_id": 51274039, "comment_id": 89526512, "body": "It may be called continuously for a while. Is that optimal?"}, {"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1531258400, "post_id": 51274039, "comment_id": 89526574, "body": "I&#39;m fairly certain it uses <code>stat</code> on Unix like systems so it is as expensive as a system call."}, {"owner": {"reputation": 387, "user_id": 6186709, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/G5lWJ.png?s=128&g=1", "display_name": "I60R", "link": "https://stackoverflow.com/users/6186709/i60r"}, "reply_to_user": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1531259157, "post_id": 51274039, "comment_id": 89526853, "body": "Does that system call involves file system polling? I want to avoid that"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 7, "creation_date": 1531260882, "post_id": 51274039, "comment_id": 89527421, "body": "Are you looking for a filesystem watcher like <a href=\"https://github.com/passcod/notify\" rel=\"nofollow noreferrer\">github.com/passcod/notify</a> ?"}, {"owner": {"reputation": 387, "user_id": 6186709, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/G5lWJ.png?s=128&g=1", "display_name": "I60R", "link": "https://stackoverflow.com/users/6186709/i60r"}, "edited": false, "score": 0, "creation_date": 1531270691, "post_id": 51274039, "comment_id": 89529444, "body": "Looks like it can&#39;t emit &quot;created&quot; event immediately when file already exists or something like that. So, first I must check if file exists using <code>Path::exists</code>, then I must register this watcher, and additionally I must handle case when file might be created between two previous operations (most likely using timeout and second check). I think that&#39;s not idiomatic way"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 5, "creation_date": 1531298755, "post_id": 51274039, "comment_id": 89539339, "body": "@I60R: Can&#39;t you register the watcher prior to checking if the path exists, and cancel the watcher if it does exist?"}, {"owner": {"reputation": 387, "user_id": 6186709, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/G5lWJ.png?s=128&g=1", "display_name": "I60R", "link": "https://stackoverflow.com/users/6186709/i60r"}, "edited": false, "score": 0, "creation_date": 1531340681, "post_id": 51274039, "comment_id": 89564859, "body": "Yes, that works for me"}], "answers": [{"tags": [], "owner": {"reputation": 387, "user_id": 6186709, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/G5lWJ.png?s=128&g=1", "display_name": "I60R", "link": "https://stackoverflow.com/users/6186709/i60r"}, "is_accepted": false, "score": 3, "last_activity_date": 1531340399, "creation_date": 1531340399, "answer_id": 51293627, "question_id": 51274039, "link": "https://stackoverflow.com/questions/51274039/how-to-wait-until-a-file-is-created-in-rust/51293627#51293627", "title": "How to wait until a file is created in Rust?", "body": "<p>Taking into account suggestions from comments I've written the following code:  </p>\n\n<pre><code>fn wait_until_file_created(file_path: &amp;PathBuf) -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let (tx, rx) = mpsc::channel();\n    let mut watcher = notify::raw_watcher(tx)?;\n    // Watcher can't be registered for file that don't exists.\n    // I use its parent directory instead, because I'm sure that it always exists\n    let file_dir = file_path.parent().unwrap();\n    watcher.watch(&amp;file_dir, RecursiveMode::NonRecursive)?;\n    if !file_path.exists() {\n        loop {\n            match rx.recv_timeout(Duration::from_secs(2))? {\n                RawEvent { path: Some(p), op: Ok(op::CREATE), .. } =&gt; \n                    if p == file_path {\n                        break\n                    },\n                _ =&gt; continue,\n            }\n        }\n    }\n    watcher.unwatch(file_dir)?;\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 387, "user_id": 6186709, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/G5lWJ.png?s=128&g=1", "display_name": "I60R", "link": "https://stackoverflow.com/users/6186709/i60r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 457, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1531340399, "creation_date": 1531257556, "last_edit_date": 1531257857, "question_id": 51274039, "link": "https://stackoverflow.com/questions/51274039/how-to-wait-until-a-file-is-created-in-rust", "title": "How to wait until a file is created in Rust?", "body": "<p>The file may or may not be created before my program starts, so I need to ensure that this file exists before proceeding. What is the most idiomatic way to do that? </p>\n"}, {"tags": ["sorting", "iterator", "rust", "slice"], "comments": [{"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 1, "creation_date": 1531250279, "post_id": 51272571, "comment_id": 89523220, "body": "Test that every subsequent element consistently more or less than the previous?"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 3, "creation_date": 1531252531, "post_id": 51272571, "comment_id": 89524185, "body": "For record, there is currently an RFC for adding <code>is_sorted</code> to the standard library <a href=\"https://github.com/rust-lang/rfcs/pull/2351\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/2351</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1531252011, "post_id": 51272639, "comment_id": 89523983, "body": "@PeterHall I dunno; usually either you keep a collection sorted by construction (e.g. always adding new values in the &quot;right&quot; place) or by some type invariant (e.g. <code>BTreeSet</code>). Have <i>you</i> ever wanted to check if something is sorted? :-D Besides, then you have to deal with <i>which</i> &quot;sorted&quot; do you mean, and then sorted by a key, etc."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 6, "creation_date": 1531256178, "post_id": 51272639, "comment_id": 89525703, "body": "@Shepmaster &quot;<i>Have you ever wanted to check if something is sorted?</i>&quot; -- Quite often, actually: <b>unit tests and pre/post-condition checks</b>. <a href=\"https://github.com/LukasKalbertodt/rfcs/blob/rfc-add-is-sorted/text/0000-is-sorted.md#motivation\" rel=\"nofollow noreferrer\">I&#39;ve written a few more words about this here</a> ;-)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1531290757, "post_id": 51272639, "comment_id": 89534791, "body": "I find it quite noticeable, that this requires a (total) order, rather than a  partial order. Never thought about this."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1586809853, "last_edit_date": 1586809853, "creation_date": 1531250390, "answer_id": 51272639, "question_id": 51272571, "link": "https://stackoverflow.com/questions/51272571/how-do-i-check-if-a-slice-is-sorted/51272639#51272639", "title": "How do I check if a slice is sorted?", "body": "<p>I'd grab pairs of elements and assert they are all in ascending (or descending, depending on what you mean by \"sorted\") order:</p>\n\n<pre><code>fn is_sorted&lt;T&gt;(data: &amp;[T]) -&gt; bool\nwhere\n    T: Ord,\n{\n    data.windows(2).all(|w| w[0] &lt;= w[1])\n}\n\nfn main() {\n    assert!(is_sorted::&lt;u8&gt;(&amp;[]));\n    assert!(is_sorted(&amp;[1]));\n    assert!(is_sorted(&amp;[1, 2, 3]));\n    assert!(is_sorted(&amp;[1, 1, 1]));\n    assert!(!is_sorted(&amp;[1, 3, 2]));\n    assert!(!is_sorted(&amp;[3, 2, 1]));\n}\n</code></pre>\n\n<p>Ditto for generic iterators:</p>\n\n<pre><code>extern crate itertools; // 0.7.8\n\nuse itertools::Itertools;\n\nfn is_sorted&lt;I&gt;(data: I) -&gt; bool\nwhere\n    I: IntoIterator,\n    I::Item: Ord + Clone,\n{\n    data.into_iter().tuple_windows().all(|(a, b)| a &lt;= b)\n}\n\nfn main() {\n    assert!(is_sorted(&amp;[] as &amp;[u8]));\n    assert!(is_sorted(&amp;[1]));\n    assert!(is_sorted(&amp;[1, 2, 3]));\n    assert!(is_sorted(&amp;[1, 1, 1]));\n    assert!(!is_sorted(&amp;[1, 3, 2]));\n    assert!(!is_sorted(&amp;[3, 2, 1]));\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42134874/155423\">Are there equivalents to slice::chunks/windows for iterators to loop over pairs, triplets etc?</a></li>\n</ul>\n\n<p>In nightly Rust, there are unstable methods to accomplish this:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.is_sorted\" rel=\"nofollow noreferrer\"><code>slice::is_sorted</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.is_sorted_by\" rel=\"nofollow noreferrer\"><code>slice::is_sorted_by</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.is_sorted_by_key\" rel=\"nofollow noreferrer\"><code>slice::is_sorted_by_key</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.is_sorted\" rel=\"nofollow noreferrer\"><code>Iterator::is_sorted</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.is_sorted_by\" rel=\"nofollow noreferrer\"><code>Iterator::is_sorted_by</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.is_sorted_by_key\" rel=\"nofollow noreferrer\"><code>Iterator::is_sorted_by_key</code></a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "is_accepted": false, "score": 5, "last_activity_date": 1531262712, "creation_date": 1531262712, "answer_id": 51274912, "question_id": 51272571, "link": "https://stackoverflow.com/questions/51272571/how-do-i-check-if-a-slice-is-sorted/51274912#51274912", "title": "How do I check if a slice is sorted?", "body": "<p>It is not necessary to have <code>Clone</code> for an iterator <code>is_sorted</code> implementation. Here is a no-dependency Rust implementation of <code>is_sorted</code>:</p>\n\n<pre><code>fn is_sorted&lt;I&gt;(data: I) -&gt; bool\nwhere\n    I: IntoIterator,\n    I::Item: Ord,\n{\n    let mut it = data.into_iter();\n    match it.next() {\n        None =&gt; true,\n        Some(first) =&gt; it.scan(first, |state, next| {\n            let cmp = *state &lt;= next;\n            *state = next;\n            Some(cmp)\n        }).all(|b| b),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1257, "favorite_count": 0, "accepted_answer_id": 51272639, "answer_count": 2, "score": 10, "last_activity_date": 1586809853, "creation_date": 1531250096, "last_edit_date": 1531250151, "question_id": 51272571, "link": "https://stackoverflow.com/questions/51272571/how-do-i-check-if-a-slice-is-sorted", "title": "How do I check if a slice is sorted?", "body": "<p>How do I check if a slice is sorted?</p>\n\n<p>Assuming a function that accepts a slice of <code>i32</code>, is there an idiomatic Rust way of checking if the slice is sorted?</p>\n\n<pre><code>fn is_sorted(data: &amp;[i32]) -&gt; bool {\n    // ...\n}\n</code></pre>\n\n<p>Would it be possible to generalize the above method so that it would accept an iterator?</p>\n\n<pre><code>fn is_sorted&lt;I&gt;(iter: I)\nwhere \n    I: Iterator, \n    I::Item: Ord,\n{\n    // ...\n}\n</code></pre>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531246775, "post_id": 51271673, "comment_id": 89521712, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/32551177/155423\">\u201cExpected type parameter\u201d error in the constructor of a generic struct</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51271673/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531246790, "post_id": 51271673, "comment_id": 89521718, "body": "TL;DR: <code>fn wrapper() -&gt; Container&lt;fn() -&gt; u32&gt; { wrapped(return_10) }</code> or <code>fn wrapper() -&gt; Container&lt;impl Fn() -&gt; u32&gt; { wrapped(return_10) }</code>"}, {"owner": {"reputation": 820, "user_id": 1735458, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/45ad4e19f178f150d44ef1e74189daa7?s=128&d=identicon&r=PG", "display_name": "Yd Ahhrk", "link": "https://stackoverflow.com/users/1735458/yd-ahhrk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531251346, "post_id": 51271673, "comment_id": 89523731, "body": "@Shepmaster Well, there&#39;s the issue that the <code>&lt;impl Fn() -&gt; T&gt;</code> syntax does not seem to exist in the <a href=\"https://doc.rust-lang.org/book/second-edition/ch00-00-introduction.html\" rel=\"nofollow noreferrer\">manual</a> and I might have never have been able to find it if it weren&#39;t for the answers below..."}, {"owner": {"reputation": 820, "user_id": 1735458, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/45ad4e19f178f150d44ef1e74189daa7?s=128&d=identicon&r=PG", "display_name": "Yd Ahhrk", "link": "https://stackoverflow.com/users/1735458/yd-ahhrk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531251430, "post_id": 51271673, "comment_id": 89523773, "body": "@Shepmaster I did see that post and it did not help me; even now."}], "answers": [{"comments": [{"owner": {"reputation": 820, "user_id": 1735458, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/45ad4e19f178f150d44ef1e74189daa7?s=128&d=identicon&r=PG", "display_name": "Yd Ahhrk", "link": "https://stackoverflow.com/users/1735458/yd-ahhrk"}, "edited": false, "score": 0, "creation_date": 1531252032, "post_id": 51271815, "comment_id": 89523993, "body": "Interesting. But how did you know that you could get this suggestion by assigning the result of <code>wrapped()</code>? The original error was pointing to the argument... which does appear in the same line... but is also kind of... &quot;unrelated&quot;?"}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "reply_to_user": {"reputation": 820, "user_id": 1735458, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/45ad4e19f178f150d44ef1e74189daa7?s=128&d=identicon&r=PG", "display_name": "Yd Ahhrk", "link": "https://stackoverflow.com/users/1735458/yd-ahhrk"}, "edited": false, "score": 1, "creation_date": 1531254229, "post_id": 51271815, "comment_id": 89524876, "body": "Ah, well, I knew there was an issue with the return type of <code>wrapper</code> which must be the same as the return type of <code>wrapped(return_10)</code>"}], "tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 1, "last_activity_date": 1531246859, "last_edit_date": 1531246859, "creation_date": 1531246779, "answer_id": 51271815, "question_id": 51271673, "link": "https://stackoverflow.com/questions/51271673/how-can-i-specialize-a-functions-return-value/51271815#51271815", "title": "How can I specialize a function&#39;s return value?", "body": "<p>I am not sure if this is what you're looking for but this code compiles.</p>\n\n<pre><code>struct Container&lt;F&gt; {\n    f: F,\n}\n\nfn wrapped&lt;F, T&gt;(f: F) -&gt; Container&lt;F&gt;\nwhere\n    F: FnMut() -&gt; T,\n{\n    Container { f }\n}\n\nfn return_10() -&gt; u32 {\n    10\n}\n\nfn wrapper() -&gt; Container&lt;fn() -&gt; u32&gt; {\n    wrapped(return_10)\n}\n\nfn main() {\n    wrapper();\n}\n</code></pre>\n\n<p>I figured this out by using the code below to force the compiler to spit out a message telling me the type it was expecting.</p>\n\n<pre><code>struct Container&lt;F&gt; {\n    f: F,\n}\n\nfn wrapped&lt;F, T&gt;(f: F) -&gt; Container&lt;F&gt;\nwhere\n    F: FnMut() -&gt; T,\n{\n    Container { f }\n}\n\nfn return_10() -&gt; u32 {\n    10\n}\n\nfn main() {\n    let x: () = wrapped(return_10);\n}\n</code></pre>\n\n<p>When you compile the code above the compiler complains </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:17:17\n   |\n17 |     let x: () = wrapped(return_10);\n   |                 ^^^^^^^^^^^^^^^^^^ expected (), found struct `Container`\n   |\n   = note: expected type `()`\n              found type `Container&lt;fn() -&gt; u32 {return_10}&gt;`\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1531250712, "last_edit_date": 1531250712, "creation_date": 1531250044, "answer_id": 51272555, "question_id": 51271673, "link": "https://stackoverflow.com/questions/51271673/how-can-i-specialize-a-functions-return-value/51272555#51272555", "title": "How can I specialize a function&#39;s return value?", "body": "<p>When you write a function signature like this:</p>\n\n<pre><code>fn wrapper&lt;F&gt;() -&gt; Container&lt;F&gt; \nwhere\n    F: FnMut() -&gt; u32;\n</code></pre>\n\n<p>It means: </p>\n\n<blockquote>\n  <p><em>For <strong>any</strong> type <code>F</code> that <strong>you</strong> choose, which implements <code>FnMut() -&gt; u32</code>, I can give you a <code>Container&lt;F&gt;</code>.</em></p>\n</blockquote>\n\n<p>If that was the case then you would be able to define some arbitrary struct, and have it implement <code>FnMut() -&gt; u32</code>, and the <code>wrapper</code> function would have to somehow be able to conjure up an instance of it. That would be impossible - unless the <code>FnMut</code> trait also had a method to create new instances.</p>\n\n<p>But luckily your code is doing something different. Rather than working for <em>all</em> possible types <code>F</code>, you just need it to work for one - the one that you know you'll return.</p>\n\n<p>The way to describe that is with an <code>impl Trait</code>:</p>\n\n<pre><code>fn wrapper() -&gt; Container&lt;impl Fn() -&gt; u32&gt; {\n    wrapped(return_10)\n}\n</code></pre>\n\n<p>It means:</p>\n\n<blockquote>\n  <p><em>I'm going to return a <code>Container&lt;F&gt;</code>. <code>F</code> will implement <code>Fn() -&gt; u32</code> but <strong>I'm</strong> going to choose exactly what that concrete type is.</em></p>\n</blockquote>\n"}], "owner": {"reputation": 820, "user_id": 1735458, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/45ad4e19f178f150d44ef1e74189daa7?s=128&d=identicon&r=PG", "display_name": "Yd Ahhrk", "link": "https://stackoverflow.com/users/1735458/yd-ahhrk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "closed_date": 1531250715, "accepted_answer_id": 51272555, "answer_count": 2, "score": 0, "last_activity_date": 1548162259, "creation_date": 1531246151, "last_edit_date": 1548162259, "question_id": 51271673, "link": "https://stackoverflow.com/questions/51271673/how-can-i-specialize-a-functions-return-value", "closed_reason": "Duplicate", "title": "How can I specialize a function&#39;s return value?", "body": "<p>The following block is library code; I can't edit it:</p>\n\n<pre><code>struct Container&lt;F&gt; {\n    f: F,\n}\n\nfn wrapped&lt;F, T&gt;(f: F) -&gt; Container&lt;F&gt;\nwhere\n    F: FnMut() -&gt; T,\n{\n    Container { f }\n}\n</code></pre>\n\n<p>I want a wrapper function that specializes <code>T</code>:</p>\n\n<pre><code>fn return_10() -&gt; u32 {\n    10\n}\n\nfn wrapper&lt;F&gt;() -&gt; Container&lt;F&gt;\nwhere\n    F: FnMut() -&gt; u32,\n{\n    wrapped(return_10)\n}\n\nfn main() {\n    wrapper();\n}\n</code></pre>\n\n<p>(For the sake of simplicity, I used <code>u32</code> in the code above, but in reality I want to use a trait. I'm hoping that this doesn't matter.)</p>\n\n<p>It doesn't work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:20:13\n   |\n20 |     wrapped(return_10)\n   |             ^^^^^^^^^ expected type parameter, found fn item\n   |\n   = note: expected type `F`\n              found type `fn() -&gt; u32 {return_10}`\n</code></pre>\n\n<p>Why can't Rust infer that <code>T = u32</code>? Am I supposed to not do this?</p>\n"}, {"tags": ["rust", "type-conversion"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1531244451, "post_id": 51270923, "comment_id": 89520665, "body": "The standard provide <code>TryFrom</code> when data could not be ok to convert, i64 =&gt; i8 for exemple. For me your problem is different, your main data is not lost. Standard also have some implementation of From who &quot;lost&quot; some information. <code>impl From&lt;File&gt; for Stdio</code> for exemple, So I think, it&#39;s ok if it makes sense."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1531244957, "post_id": 51270923, "comment_id": 89520901, "body": "Given that the two types share a trait, it sounds like you don&#39;t really need to convert between them. You can just rely on the trait as a generic bound and worry about the concrete type at construction or certain entry points. If you&#39;re worried that implementing <code>From</code> here might a foot gun, then perhaps don&#39;t do it until you actually need it."}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "edited": false, "score": 0, "creation_date": 1531254923, "post_id": 51270923, "comment_id": 89525174, "body": "<a href=\"https://chat.stackoverflow.com/rooms/62927/conversation/is-it-acceptable-for-a-from-trait-implementation-to-be-lossy\">This was discussed in chat</a>."}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "edited": false, "score": 0, "creation_date": 1533135844, "post_id": 51270923, "comment_id": 90237591, "body": "<a href=\"https://github.com/rust-lang/rfcs/pull/2484\" rel=\"nofollow noreferrer\">RFC: <code>FromLossy</code> and <code>TryFromLossy</code> traits</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "edited": false, "score": 0, "creation_date": 1533496335, "post_id": 51697455, "comment_id": 90356303, "body": "Did I miss any important examples? Comments or edits welcome."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533573224, "post_id": 51697455, "comment_id": 90385447, "body": "<code>From&lt;String&gt;</code> for <code>Box&lt;str&gt;</code> loses the (possibly extra) capacity."}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533580488, "post_id": 51697455, "comment_id": 90388793, "body": "@trentcl Fair edit --- it did look quite weird. Thanks for the example, that&#39;s a funny case to think about; I&#39;ll add it."}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533581523, "post_id": 51697455, "comment_id": 90389255, "body": "Poking at it, I&#39;m not 100% sure whether the capacity is actually lost. I need to test and see whether it&#39;s actually preserved on a round-trip."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1533582380, "post_id": 51697455, "comment_id": 90389683, "body": "I went digging. The capacity is lost in <code>Vec::into_boxed_slice</code>, <a href=\"https://doc.rust-lang.org/beta/src/alloc/vec.rs.html#640-647\" rel=\"nofollow noreferrer\">where it calls <code>shrink_to_fit</code></a>. This is necessary so that the <code>Box</code> can be safely dropped, but it means when you reconstitute the <code>String</code> its capacity and length will always be the same."}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1533587011, "post_id": 51697455, "comment_id": 90391575, "body": "@trentcl Thanks for looking into that. I guess <a href=\"https://play.rust-lang.org/?gist=f8f770943c33dc6bbe0e821385a2e7a6&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this applies for the capacity of any <code>From&lt;Vec&lt;T&gt;&gt; for Box&lt;[T]&gt;</code></a>."}], "tags": [], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "is_accepted": true, "score": 2, "last_activity_date": 1533690732, "last_edit_date": 1533690732, "creation_date": 1533496205, "answer_id": 51697455, "question_id": 51270923, "link": "https://stackoverflow.com/questions/51270923/can-from-trait-implementations-be-lossy/51697455#51697455", "title": "Can From trait implementations be lossy?", "body": "<p><code>From</code> implementations are usually lossless, but there is currently no strict requirement that they be.</p>\n\n<p>The ongoing discussion at <a href=\"https://github.com/rust-lang/rfcs/pull/2484\" rel=\"nofollow noreferrer\">rust-lang/rfcs#2484</a> is related. Some possibilities include adding a <code>FromLossy</code> trait and more exactly prescribing the behaviour of <code>From</code>. We'll have to see where that goes.</p>\n\n<p>For consideration, here are some <code>Target::from(Source)</code> implementations in the standard library:</p>\n\n<h1>Lossless conversions</h1>\n\n<p><em>Each <code>Source</code> value is converted into a distinct <code>Target</code> value.</em></p>\n\n<ul>\n<li><p><a href=\"https://doc.rust-lang.org/std/primitive.u16.html#impl-From&lt;u8%3E\" rel=\"nofollow noreferrer\"><code>u16::from(u8)</code></a>, <a href=\"https://doc.rust-lang.org/std/primitive.i16.html#impl-From%3Cu8%3E\" rel=\"nofollow noreferrer\"><code>i16::from(u8)</code></a> and other conversions to strictly-larger integer types.</p></li>\n<li><p><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-From%3CString%3E\" rel=\"nofollow noreferrer\"><code>Vec&lt;u8&gt;::from(String)</code></a></p></li>\n<li><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-From&lt;BinaryHeap&lt;T%3E%3E\" rel=\"nofollow noreferrer\"><code>Vec&lt;T&gt;::from(BinaryHeap&lt;T&gt;)</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/ffi/struct.OsString.html#impl-From&lt;String%3E\" rel=\"nofollow noreferrer\"><code>OsString::from(String)</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.char.html#impl-From&lt;u8%3E\" rel=\"nofollow noreferrer\"><code>char::from(u8)</code></a></li>\n</ul>\n\n<h1>Lossy conversions</h1>\n\n<p><em>Multiple <code>Source</code> values may be convert into the same <code>Target</code> value.</em></p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/collections/struct.BinaryHeap.html#impl-From&lt;Vec&lt;T%3E%3E\" rel=\"nofollow noreferrer\"><code>BinaryHeap&lt;T&gt;::from(Vec&lt;T&gt;)</code></a> loses the order of elements.</li>\n<li><p><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-From&lt;Vec&lt;T&gt;&gt;-2\" rel=\"nofollow noreferrer\"><code>Box&lt;[T]&gt;::from(Vec&lt;T&gt;)</code></a> and <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#impl-From&lt;String%3E\" rel=\"nofollow noreferrer\"><code>Box&lt;str&gt;::from(String)</code></a> lose any excess capacity.</p></li>\n<li><p><a href=\"https://doc.rust-lang.org/std/collections/struct.Vec.html#impl-From&lt;VecDeque&lt;T%3E%3E\" rel=\"nofollow noreferrer\"><code>Vec&lt;T&gt;::from(VecDeque&lt;T&gt;)</code></a> loses the internal split of elements exposed by <a href=\"https://doc.rust-lang.org/std/collections/vec_deque/struct.VecDeque.html#method.as_slices\" rel=\"nofollow noreferrer\"><code>.as_slices()</code></a>.</p></li>\n</ul>\n"}], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 314, "favorite_count": 0, "accepted_answer_id": 51697455, "answer_count": 1, "score": 9, "last_activity_date": 1533690732, "creation_date": 1531242952, "last_edit_date": 1533496594, "question_id": 51270923, "link": "https://stackoverflow.com/questions/51270923/can-from-trait-implementations-be-lossy", "title": "Can From trait implementations be lossy?", "body": "<h2>Context</h2>\n\n<p>I have a pair of related structs in my program, <code>Rom</code> and <code>ProfiledRom</code>. They both store a list of <code>u8</code> values and implement a common trait, <code>GetRom</code>, to provide access to those values.</p>\n\n<pre><code>trait GetRom {\n    fn get(&amp;self, index: usize) -&gt; u8;\n}\n</code></pre>\n\n<p>The difference is that <code>Rom</code> just wraps a simple <code>Vec&lt;u8&gt;</code>, but <code>ProfiledRom</code> wraps each byte in a <code>ProfiledByte</code> type that counts the number of times it is returned by <code>get</code>.</p>\n\n<pre><code>struct Rom(Vec&lt;u8&gt;);\n\nstruct ProfiledRom(Vec&lt;ProfiledByte&gt;);\nstruct ProfiledByte {\n    value: u8;\n    get_count: u32;\n};\n</code></pre>\n\n<p>Much of my program operates on <code>trait GetRom</code> values, so I can substitute in <code>Rom</code> or <code>ProfiledRom</code> type/value depending on whether I want profiling to occur.</p>\n\n<h2>Question</h2>\n\n<p>I have implemented <code>From&lt;Rom&gt; for ProfiledRom</code>, because converting a <code>Rom</code> to a <code>ProfiledRom</code> just involves wrapping each byte in a new <code>ProfiledByte</code>: a simple and lossless operation.</p>\n\n<p>However, I'm not sure whether it's appropriate to implement <code>From&lt;ProfiledRom&gt; for Rom</code>, because <code>ProfiledRom</code> contains information (the get counts) that can't be represented in a <code>Rom</code>. If you did a round-trip conversion, these values would be lost/reset.</p>\n\n<p>Is it appropriate to implement the <code>From</code> trait when only parts of the source object will be used?</p>\n\n<h2>Related</h2>\n\n<p>I have seen that the standard library doesn't implement integer conversions like <code>From&lt;i64&gt; for i32</code> because these could result in bytes being truncated/lost. However, that seems like a somewhat distinct case from what we have here.</p>\n\n<p>With the potentially-truncating integer conversion, you would need to inspect the original <code>i64</code> to know whether it would be converted appropriately. If you didn't, the behaviour or your code could change unexpectedly when you get an out-of-bounds value. However, in our case above, it's always statically clear what data is being preserved and what data is being lost. The conversion's behaviour won't suddenly change. It should be safer, but is it an appropriate use of the <code>From</code> trait?</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 16753, "user_id": 395287, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/OiGAR.jpg?s=128&g=1", "display_name": "Tim McNamara", "link": "https://stackoverflow.com/users/395287/tim-mcnamara"}, "edited": false, "score": 0, "creation_date": 1531223173, "post_id": 51264038, "comment_id": 89506558, "body": "Ah of course. I will mark this answer as correct when I have implemented it in my own code, but that certainly makes lots of sense!"}, {"owner": {"reputation": 16753, "user_id": 395287, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/OiGAR.jpg?s=128&g=1", "display_name": "Tim McNamara", "link": "https://stackoverflow.com/users/395287/tim-mcnamara"}, "edited": false, "score": 0, "creation_date": 1531251887, "post_id": 51264038, "comment_id": 89523937, "body": "Making that change appears to result in the same error: <a href=\"https://play.rust-lang.org/?gist=5b15369c7f9afc07460120fa0fbfc848&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 16753, "user_id": 395287, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/OiGAR.jpg?s=128&g=1", "display_name": "Tim McNamara", "link": "https://stackoverflow.com/users/395287/tim-mcnamara"}, "edited": false, "score": 0, "creation_date": 1531252599, "post_id": 51264038, "comment_id": 89524213, "body": "@TimMcNamara Oops! That was a little typo. It should have been <code>AsRef&lt;[u8]&gt;</code>."}, {"owner": {"reputation": 16753, "user_id": 395287, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/OiGAR.jpg?s=128&g=1", "display_name": "Tim McNamara", "link": "https://stackoverflow.com/users/395287/tim-mcnamara"}, "edited": false, "score": 0, "creation_date": 1531299576, "post_id": 51264038, "comment_id": 89539917, "body": "Thanks for being so responsive Peter. You were also very correct about there being other errors. It looks like using Cursor was the wrong approach entirely."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 16753, "user_id": 395287, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/OiGAR.jpg?s=128&g=1", "display_name": "Tim McNamara", "link": "https://stackoverflow.com/users/395287/tim-mcnamara"}, "edited": false, "score": 1, "creation_date": 1531299986, "post_id": 51264038, "comment_id": 89540177, "body": "@TimMcNamara Perhaps the wrong approach. One problem is that <code>bytes()</code> will consume the cursor."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 7, "last_activity_date": 1531254320, "last_edit_date": 1531254320, "creation_date": 1531222117, "answer_id": 51264038, "question_id": 51263244, "link": "https://stackoverflow.com/questions/51263244/unable-to-add-trait-bounds-to-member-of-a-struct/51264038#51264038", "title": "Unable to add trait bounds to member of a struct", "body": "<p>Check the notes after the error messages:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>= note: the method `bytes` exists but the following trait bounds were not satisfied:\n        `std::io::Cursor&lt;&amp;mut R&gt; : std::io::Read`\n        `&amp;mut std::io::Cursor&lt;&amp;'parse mut R&gt; : std::io::Read`\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/io/struct.Cursor.html#impl-Read\" rel=\"nofollow noreferrer\"><code>Read</code> implementation for <code>Cursor&lt;T&gt;</code></a> is only defined when <code>T: AsRef&lt;[u8]&gt;</code>. If you add that constraint then the <code>Read</code> implementation will be available:</p>\n\n<pre><code>impl&lt;'parse, R: AsRef&lt;[u8]&gt; + BufRead + 'parse&gt; Parse &lt;'parse, R&gt; {\n</code></pre>\n\n<p>You will still have a few other errors in that code. But this should answer your surface question.</p>\n"}], "owner": {"reputation": 16753, "user_id": 395287, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/OiGAR.jpg?s=128&g=1", "display_name": "Tim McNamara", "link": "https://stackoverflow.com/users/395287/tim-mcnamara"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 347, "favorite_count": 0, "accepted_answer_id": 51264038, "answer_count": 1, "score": 3, "last_activity_date": 1545152953, "creation_date": 1531219565, "last_edit_date": 1545152953, "question_id": 51263244, "link": "https://stackoverflow.com/questions/51263244/unable-to-add-trait-bounds-to-member-of-a-struct", "title": "Unable to add trait bounds to member of a struct", "body": "<p>I'm attempting to add use <code>std::io::Cursor</code> with a generic type <code>R</code>, but retain the <code>Read</code> type bounds so that <code>Read</code> trait is accessible, and subsequently can support <code>bytes()</code> method.</p>\n\n<p>Here is my struct definition so far:</p>\n\n<pre><code>struct Parse&lt;'parse, R: Read + BufRead + 'parse&gt; {\n    tokens: Vec&lt;Token&gt;,\n    source: Cursor&lt;&amp;'parse mut R&gt;,\n}\n</code></pre>\n\n<p>Assuming I have a variable <code>parser</code> that's an instance of <code>Parse</code>, I want to be able to call <code>parser.source.bytes()</code>. <code>bytes()</code> is a method provided by <code>Read</code>. Despite the annotation around <code>R</code>, the compiler is telling me that <code>R</code> isn't satisfying the <code>std::io::Read</code> trait bounds.</p>\n\n<p>Here is that snippet of code in context along with a <a href=\"https://play.rust-lang.org/?gist=d32e07bd8855583b62069bd4643f22ba&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">direct link to the playground</a>: </p>\n\n<pre><code>// using Cursor because it tracks position internally\nuse std::io::{Cursor, Read, BufRead};\n\nstruct Token {\n    start: usize,\n    end: usize,\n}\n\nstruct Parse&lt;'parse, R: Read + BufRead + 'parse&gt; {\n    tokens: Vec&lt;Token&gt;,\n    source: Cursor&lt;&amp;'parse mut R&gt;,\n}\n\nimpl&lt;'parse, R: Read + BufRead + 'parse&gt; Parse &lt;'parse, R&gt; {\n    fn new(source: &amp;'parse mut R) -&gt; Self {\n        Parse {\n            tokens: vec!(),\n            source: Cursor::new(source),\n        }\n    }\n\n    fn parse_primitive(&amp;mut self) -&gt; std::io::Result&lt;Token&gt; {\n        let start = self.source.position();\n        let bytes = self.source.bytes();                     // &lt;- error raised here\n\n        // dummy work\n        for _ in 0..3 {\n            let byte = bytes.next().unwrap().unwrap()\n        }\n        let end = self.source.position();\n        Ok(Token { start: start as usize, end: end as usize})\n    }\n}\n\nfn main() {\n    //...\n}\n</code></pre>\n\n<p>Generates the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `bytes` found for type `std::io::Cursor&lt;&amp;'parse mut R&gt;` in the current scope\n  --&gt; src/main.rs:24:33\n   |\n24 |         let bytes = self.source.bytes();\n   |                                 ^^^^^\n   |\n   = note: the method `bytes` exists but the following trait bounds were not satisfied:\n           `std::io::Cursor&lt;&amp;mut R&gt; : std::io::Read`\n           `&amp;mut std::io::Cursor&lt;&amp;'parse mut R&gt; : std::io::Read`\n</code></pre>\n\n<p>Help appreciated!</p>\n"}, {"tags": ["string", "utf-8", "rust", "iterator", "slice"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 11, "last_activity_date": 1531202642, "creation_date": 1531202642, "answer_id": 51258176, "question_id": 51257304, "link": "https://stackoverflow.com/questions/51257304/creating-a-sliding-window-iterator-of-slices-of-chars-from-a-string/51258176#51258176", "title": "Creating a sliding window iterator of slices of chars from a String", "body": "<p>This solution will work for your purpose. (<a href=\"https://play.rust-lang.org/?gist=9dfb246183e4d204323cf8cfc8322fa8&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">playground</a>)</p>\n\n<pre><code>fn main() {\n    let tst = String::from(\"abcdefg\");\n    let inter = tst.chars().collect::&lt;Vec&lt;char&gt;&gt;();\n    let mut windows = inter.windows(3);\n\n    // prints ['a', 'b', 'c']\n    println!(\"{:?}\", windows.next().unwrap());\n    // prints ['b', 'c', 'd']\n    println!(\"{:?}\", windows.next().unwrap());\n    // etc...\n    println!(\"{:?}\", windows.next().unwrap());\n}\n</code></pre>\n\n<p>String can iterate over its chars, but it's not a slice, so you have to collect it into a vec, which then coerces into a slice.</p>\n"}, {"comments": [{"owner": {"reputation": 575, "user_id": 3705768, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/719da5c17793ecc39c2b68d2fb8299e1?s=128&d=identicon&r=PG&f=1", "display_name": "bmartin", "link": "https://stackoverflow.com/users/3705768/bmartin"}, "edited": false, "score": 1, "creation_date": 1531257120, "post_id": 51261570, "comment_id": 89526085, "body": "This was an awesome explanation of what is going on under the hood - thanks for shedding light on it!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 9, "last_activity_date": 1531254155, "last_edit_date": 1531254155, "creation_date": 1531214475, "answer_id": 51261570, "question_id": 51257304, "link": "https://stackoverflow.com/questions/51257304/creating-a-sliding-window-iterator-of-slices-of-chars-from-a-string/51261570#51261570", "title": "Creating a sliding window iterator of slices of chars from a String", "body": "<p>The problem that you are facing is that <code>String</code> is really represented as something like a <code>Vec&lt;u8&gt;</code> under the hood, with some APIs to let you access <code>char</code>s. In UTF-8 the representation of a code point can be anything from 1 to 4 bytes, and they are all compacted together for space-efficiency.</p>\n\n<p>The only slice you could get directly of an entire <code>String</code>, without copying everything, would be a <code>&amp;[u8]</code>, but you wouldn't know if the bytes corresponded to whole or just parts of code points.</p>\n\n<p>The <code>char</code> type corresponds exactly to a code point, and therefore has a size of 4 bytes, so that it can accommodate any possible value. So, if you build a slice of <code>char</code> by copying from a <code>String</code>, the result could be up to 4 times larger.</p>\n\n<p>To avoid making a potentially large, temporary memory allocation, you should consider a more lazy approach \u2013 iterate through the <code>String</code>, making slices at exactly the <code>char</code> boundaries. Something like this:</p>\n\n<pre><code>fn char_windows&lt;'a&gt;(src: &amp;'a str, win_size: usize) -&gt; impl Iterator&lt;Item = &amp;'a str&gt; {\n    src.char_indices()\n        .flat_map(move |(from, _)| {\n            src[from ..].char_indices()\n                .skip(win_size - 1)\n                .next()\n                .map(|(to, c)| {\n                    &amp;src[from .. from + to + c.len_utf8()]\n                })\n    })\n}\n</code></pre>\n\n<p>This will give you an iterator where the items are <code>&amp;str</code>, each with 3 <code>char</code>s:</p>\n\n<pre><code>let mut windows = char_windows(&amp;tst, 3);\n\nfor win in windows {\n    println!(\"{:?}\", win);\n}\n</code></pre>\n\n<p>The nice thing about this approach is that it hasn't done any copying at all - each <code>&amp;str</code> produced by the iterator is still a slice into the original source <code>String</code>.</p>\n\n<hr>\n\n<p>All of that complexity is because Rust uses UTF-8 encoding for strings by default. If you <em>absolutely know</em> that your input string doesn't contain any multi-byte characters, you can treat it as ASCII bytes, and taking slices becomes easy:</p>\n\n<pre><code>let tst = String::from(\"abcdefg\");\nlet inter = tst.as_bytes();\nlet mut windows = inter.windows(3);\n</code></pre>\n\n<p>However, you now have slices of bytes, and you'll need to turn them back into strings to do anything with them:</p>\n\n<pre><code>for win in windows {\n    println!(\"{:?}\", String::from_utf8_lossy(win));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1531234657, "creation_date": 1531234657, "answer_id": 51268450, "question_id": 51257304, "link": "https://stackoverflow.com/questions/51257304/creating-a-sliding-window-iterator-of-slices-of-chars-from-a-string/51268450#51268450", "title": "Creating a sliding window iterator of slices of chars from a String", "body": "<p>You can use <a href=\"https://crates.io/crates/itertools\" rel=\"noreferrer\">itertools</a> to walk over windows of any iterator, up to a width of 4:</p>\n\n<pre><code>extern crate itertools; // 0.7.8\n\nuse itertools::Itertools;\n\nfn main() {\n    let input = \"\u65e5\u672c\u8a9e\";\n\n    for (a, b) in input.chars().tuple_windows() {\n        println!(\"{}, {}\", a, b);\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42134874/155423\">Are there equivalents to slice::chunks/windows for iterators to loop over pairs, triplets etc?</a></li>\n</ul>\n"}], "owner": {"reputation": 575, "user_id": 3705768, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/719da5c17793ecc39c2b68d2fb8299e1?s=128&d=identicon&r=PG&f=1", "display_name": "bmartin", "link": "https://stackoverflow.com/users/3705768/bmartin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2454, "favorite_count": 0, "accepted_answer_id": 51258176, "answer_count": 3, "score": 8, "last_activity_date": 1546955469, "creation_date": 1531197122, "last_edit_date": 1546955469, "question_id": 51257304, "link": "https://stackoverflow.com/questions/51257304/creating-a-sliding-window-iterator-of-slices-of-chars-from-a-string", "title": "Creating a sliding window iterator of slices of chars from a String", "body": "<p>I am looking for the best way to go from <code>String</code> to <code>Windows&lt;T&gt;</code> using the <code>windows</code> function provided for <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.windows\" rel=\"noreferrer\">slices.</a></p>\n\n<p>I understand how to use windows this way:</p>\n\n<pre><code>fn main() {\n    let tst = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n    let mut windows = tst.windows(3);\n\n    // prints ['a', 'b', 'c']\n    println!(\"{:?}\", windows.next().unwrap());\n    // prints ['b', 'c', 'd']\n    println!(\"{:?}\", windows.next().unwrap());\n    // etc...\n}\n</code></pre>\n\n<p>But I am a bit lost when working this problem:</p>\n\n<pre><code>fn main() {\n    let tst = String::from(\"abcdefg\");\n    let inter = ? //somehow create slice of character from tst\n    let mut windows = inter.windows(3);\n\n    // prints ['a', 'b', 'c']\n    println!(\"{:?}\", windows.next().unwrap());\n    // prints ['b', 'c', 'd']\n    println!(\"{:?}\", windows.next().unwrap());\n    // etc...\n}\n</code></pre>\n\n<p>Essentially, I am looking for how to convert a string into a char slice that I can use the window method with.</p>\n"}, {"tags": ["rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1531227014, "post_id": 51265699, "comment_id": 89509276, "body": "An aside - I&#39;m not on a machine with a Rust compiler right now, so if the code examples are wrong, let me know and I&#39;ll fix them later :p"}, {"owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "edited": false, "score": 0, "creation_date": 1531249956, "post_id": 51265699, "comment_id": 89523084, "body": "This is great, thank you. This is a really good explanation and I feel like I&#39;ve progressed from throwing stuff at the wall to it sticks to actually having a handle on the behavior now."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "edited": false, "score": 0, "creation_date": 1531264193, "post_id": 51265699, "comment_id": 89528235, "body": "@spease: No problem, I think writing this answer was the first time it fully clicked for me too :D"}, {"owner": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "edited": false, "score": 0, "creation_date": 1542686185, "post_id": 51265699, "comment_id": 93647660, "body": "I get this error <code>expected &amp;str, found struct nom::types::CompleteStr</code> any ideas why?"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "edited": false, "score": 0, "creation_date": 1542707716, "post_id": 51265699, "comment_id": 93656171, "body": "@Pumphouse a) Do your parsers have the correct signature? b) Are you wrapping your input strings in <code>CompleteStr</code> before trying to pass them in?"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "edited": false, "score": 0, "creation_date": 1542707889, "post_id": 51265699, "comment_id": 93656270, "body": "@Pumphouse Never mind, saw your separate question got an answer :)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542720321, "post_id": 51265699, "comment_id": 93663310, "body": "Just to be sure... Is <code>recognize</code> taking the digits from the <code>CompleteStr</code> and returning a <code>&amp;str</code> directly? The example in the other question needed to retrieve the inner value from <code>CompleteStr</code> explicitly."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1542731324, "post_id": 51265699, "comment_id": 93669991, "body": "You might be right (I didn&#39;t have nom installed when I wrote this answer) - will try to verify later."}, {"owner": {"reputation": 1409, "user_id": 7518695, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dT38T.jpg?s=128&g=1", "display_name": "GrayCat", "link": "https://stackoverflow.com/users/7518695/graycat"}, "edited": false, "score": 0, "creation_date": 1588012774, "post_id": 51265699, "comment_id": 108731035, "body": "I think those types are gone from nom 5.1.1 documentation, answer might required update"}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 6, "last_activity_date": 1531233124, "last_edit_date": 1531233124, "creation_date": 1531226969, "answer_id": 51265699, "question_id": 51257031, "link": "https://stackoverflow.com/questions/51257031/parsing-an-integer-with-nom-always-results-in-incomplete/51265699#51265699", "title": "Parsing an integer with nom always results in Incomplete", "body": "<p>Nom 4 made the handling of partial data much stricter than in previous versions, to better support streaming parsers and custom input types.</p>\n\n<p>Effectively, if the parser runs out of input and it can't tell that it's <em>meant</em> to have run out of input, it'll always return <code>Err::Incomplete</code>. This may also contain information on exactly how much more input the parser was expecting (in your case, at least 1 more byte).</p>\n\n<p>It determines whether there's potentially any more input using the <a href=\"https://docs.rs/nom/4.0.0/nom/trait.AtEof.html\" rel=\"noreferrer\"><code>AtEof</code></a> trait. This always returns <code>false</code> for <code>&amp;str</code> and <code>&amp;[u8]</code>, as they don't provide any information about whether they're complete or not!</p>\n\n<p>The trick is to change the input type of your parsers to make it explicit that the input will always be complete - Nom provides the <a href=\"https://docs.rs/nom/4.0.0/nom/types/struct.CompleteStr.html\" rel=\"noreferrer\"><code>CompleteStr</code></a> and <a href=\"https://docs.rs/nom/4.0.0/nom/types/struct.CompleteByteSlice.html\" rel=\"noreferrer\"><code>CompleteByteSlice</code></a> wrappers for this purpose, or you can implement your own input type.</p>\n\n<p>So in order for your parser to work as expected, it'd need to look something like this:</p>\n\n<pre><code>named!(my_u64(CompleteStr) -&gt; u64,\n    map_res!(recognize!(nom::digit), u64::from_str)\n);\n</code></pre>\n\n<p>And your test would look something like this:</p>\n\n<pre><code>#[cfg(test)]\nmod test {\n    #[test]\n    fn my_u64() {\n        assert_eq!(Ok((CompleteStr(\"\"), 0)), super::my_u64(CompleteStr(\"0\")));\n    }\n}\n</code></pre>\n\n<p>See <a href=\"http://unhandledexpression.com/general/2018/05/14/nom-4-0-faster-safer-simpler-parsers.html\" rel=\"noreferrer\">the announcement post for Nom 4</a> for more details.</p>\n"}, {"tags": [], "owner": {"reputation": 1409, "user_id": 7518695, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dT38T.jpg?s=128&g=1", "display_name": "GrayCat", "link": "https://stackoverflow.com/users/7518695/graycat"}, "is_accepted": false, "score": 6, "last_activity_date": 1588021668, "creation_date": 1588021668, "answer_id": 61468490, "question_id": 51257031, "link": "https://stackoverflow.com/questions/51257031/parsing-an-integer-with-nom-always-results-in-incomplete/61468490#61468490", "title": "Parsing an integer with nom always results in Incomplete", "body": "<p>As of <code>nom 5.1.1</code> approach towards combining parsers changed from macro-based to function based, what is discussed broader in <a href=\"http://unhandledexpression.com/general/2019/06/17/nom-5-is-here.html\" rel=\"noreferrer\">nom's author blog</a>. </p>\n\n<p>Along with this change another followed - <em>streaming</em> and <em>complete</em> parsers are now residing in different modules and you need to explicitly choose which type of parsing you need. Most usually there is a clear distinction with module name.</p>\n\n<p>Old macros are preserved, but they work strictly in streaming mode. Types like <code>CompleteStr</code> or <code>CompleteByteSlice</code> are gone.</p>\n\n<p>To write code you asked for <em>the new way</em> you could do it for example like this (<strong>notice explicit <code>character::complete</code> in imports</strong>)</p>\n\n<p><em>Since it took me some time to grasp it - parsers e.g <code>map_res</code> return a <code>impl Fn(I) -&gt; IResult&lt;I, O2, E&gt;</code> which is why there is additional pair of parenthesis - to call that closure.</em></p>\n\n<pre><code>use std::str;\nuse nom::{\n    IResult,\n    character::complete::{\n        digit1\n    },\n    combinator::{\n        recognize,\n        map_res\n    }\n};\n\nfn my_u64(input : &amp;str) -&gt; IResult&lt;&amp;str, u64&gt; {\n    map_res(recognize(digit1), str::parse)(input)\n}\n\n#[cfg(test)]\nmod test {\n    use super::*;\n    #[test]\n    fn test_my_u64() {\n        let input = \"42\";\n        let num = my_u64(input);\n        assert_eq!(Ok((\"\", 42u64)), num);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1811, "favorite_count": 1, "accepted_answer_id": 51265699, "answer_count": 2, "score": 4, "last_activity_date": 1588021668, "creation_date": 1531194884, "last_edit_date": 1543861510, "question_id": 51257031, "link": "https://stackoverflow.com/questions/51257031/parsing-an-integer-with-nom-always-results-in-incomplete", "title": "Parsing an integer with nom always results in Incomplete", "body": "<p>Everything I try gives me <code>Incomplete(Size(1))</code>. My best guess right now is:</p>\n\n<pre><code>named!(my_u64(&amp;str) -&gt; u64,\n    map_res!(recognize!(nom::digit), u64::from_str)\n);\n</code></pre>\n\n<p>Test:</p>\n\n<pre><code>#[cfg(test)]\nmod test {\n    #[test]\n    fn my_u64() {\n        assert_eq!(Ok((\"\", 0)), super::my_u64(\"0\"));\n    }\n}\n</code></pre>\n\n<p>Sometimes in my variations (e.g. adding <code>complete!</code>) I've been able to get it to parse if I add a character onto the end.</p>\n\n<p>I'd like to get a working parse for this (ultimately my hope is that this will allow me to create a parser for a <code>u64</code> wrapper type) but bigger picture I'd like to get a grasp of how to build a parser properly myself.</p>\n"}, {"tags": ["parallel-processing", "rust", "simd", "rayon"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531168420, "post_id": 51253203, "comment_id": 89486141, "body": "One thing to be careful of are hyperthreaded cores. My understanding is that these virtual cores don&#39;t have their own SIMD units and thus you&#39;d be competing with yourself, causing a large amount of cache thrashing."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1531174141, "post_id": 51253203, "comment_id": 89488282, "body": "@Shepmaster: yup, code that can really saturate the SIMD execution units of a whole core with just one thread doesn&#39;t need hyperthreading, but that&#39;s rare.  Like maybe a well-tuned matmul.  Even video codecs like x264 and x265 (which heavily use vector ALUs) get a minor speedup from using both logical cores of each physical core, like maybe 15% for <code>x264 -preset slower</code> on Skylake i7-6700k on a 1080p video.  HT can be a good way to expose more instruction-level parallelism if your code bottlenecks on latency instead of throughput (e.g. a reduction without enough accumulators)."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1531174404, "post_id": 51253203, "comment_id": 89488373, "body": "@Shepmaster: TL:DR: SMT (generic form of Hyperthreading) is a way to expose more instruction-level parallelism to each physical core.  Loops with independent iterations don&#39;t tend to benefit as much, but hiding cache-miss latency can still help unless the extra cache pressure from 2 threads competing for the same cache causes too many more misses.  (Some microarchitectural resources are statically partitioned, e.g. the ROB and store buffer in Intel CPUs, but it&#39;s less likely that performance drops off a cliff from shrinking them.)"}, {"owner": {"reputation": 4023, "user_id": 271495, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/C1SFu.jpg?s=128&g=1", "display_name": "Stan Prokop", "link": "https://stackoverflow.com/users/271495/stan-prokop"}, "edited": false, "score": 0, "creation_date": 1531214552, "post_id": 51253203, "comment_id": 89501075, "body": "Hm, I didn&#39;t realize there is a catch, that&#39;s really good to know. Thank you for the comments."}], "answers": [{"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 3, "last_activity_date": 1546262908, "creation_date": 1546262908, "answer_id": 53988048, "question_id": 51253203, "link": "https://stackoverflow.com/questions/51253203/is-it-possible-to-combine-rayon-and-faster/53988048#53988048", "title": "Is it possible to combine Rayon and Faster?", "body": "\n\n<p>You can just use Rayon\u2019s <a href=\"https://docs.rs/rayon/1.0.3/rayon/slice/trait.ParallelSlice.html#method.par_chunks\" rel=\"nofollow noreferrer\"><code>par_chunks</code></a> and process each chunk with Faster.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let lots_of_3s = (&amp;[-123.456f32; 1000000][..])\n    .par_chunks(128)\n    .flat_map(|chunk| {\n        chunk\n            .simd_iter(f32s(0.0))\n            .simd_map(|v| {\n                f32s(9.0) * v.abs().sqrt().rsqrt().ceil().sqrt() - f32s(4.0) - f32s(2.0)\n            })\n            .scalar_collect()\n    })\n    .collect::&lt;Vec&lt;f32&gt;&gt;();\n</code></pre>\n"}], "owner": {"reputation": 4023, "user_id": 271495, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/C1SFu.jpg?s=128&g=1", "display_name": "Stan Prokop", "link": "https://stackoverflow.com/users/271495/stan-prokop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 697, "favorite_count": 1, "accepted_answer_id": 53988048, "answer_count": 1, "score": 5, "last_activity_date": 1546262908, "creation_date": 1531166516, "last_edit_date": 1531166863, "question_id": 51253203, "link": "https://stackoverflow.com/questions/51253203/is-it-possible-to-combine-rayon-and-faster", "title": "Is it possible to combine Rayon and Faster?", "body": "<p><a href=\"https://github.com/rayon-rs/rayon\" rel=\"noreferrer\">Rayon</a> looks great for algorithm parallelization of collections, and <a href=\"https://github.com/AdamNiederer/faster\" rel=\"noreferrer\">Faster</a> is great for vectorization (SIMD) on the x86 platform for collections like <code>Vec&lt;f32&gt;</code>. I've tried to combine them and the iterators don't seem to like each other. Is there a way to make use of these two libraries for algorithms which would benefit from both vectorization and parallelization? Like this one from the Faster example:</p>\n\n<pre><code>let lots_of_3s = (&amp;[-123.456f32; 128][..]).iter()\n    .map(|v| {\n        9.0 * v.abs().sqrt().sqrt().recip().ceil().sqrt() - 4.0 - 2.0\n    })\n    .collect::&lt;Vec&lt;f32&gt;&gt;();\n</code></pre>\n"}, {"tags": ["collections", "rust", "polymorphism", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531162618, "post_id": 51252084, "comment_id": 89483529, "body": "What does Clojure have to do with your question?"}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531169083, "post_id": 51252084, "comment_id": 89486443, "body": "It is just an example of a heterogeneous collection in another language."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531169316, "post_id": 51252084, "comment_id": 89486526, "body": "What are the downsides of using such a collection in Clojure? Pretty sure you&#39;ll find the same downsides in any language."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 2, "creation_date": 1531170055, "post_id": 51252084, "comment_id": 89486856, "body": "&quot;(if there isn&#39;t a fixed number of known type alternatives)&quot; If you don&#39;t know the possible types of your data, then you can&#39;t downcast to them. Which means you can&#39;t do anything with them."}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1531205529, "post_id": 51255263, "comment_id": 89496064, "body": "Additionally, if you want a group of <code>N</code> elements of heterogeneous types where the size of the group is known in advance and where each element has a fixed type (e.g. the first one will always be a <code>u32</code>, the second one will always be an <code>f32</code> and so on), then what you want is a tuple: <code>let v: (u32, f32, &amp;str) = (a, b, c);</code>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 7, "last_activity_date": 1531239355, "last_edit_date": 1531239355, "creation_date": 1531178605, "answer_id": 51255263, "question_id": 51252084, "link": "https://stackoverflow.com/questions/51252084/what-are-the-problems-of-using-any-trait-objects-in-heterogeneous-rust-collectio/51255263#51255263", "title": "What are the problems of using Any trait objects in heterogeneous Rust collections?", "body": "<blockquote>\n  <p>What are its disadvantages?</p>\n</blockquote>\n\n<p>The main disadvantage is that, when you access a value from a collection of <code>&amp;Any</code>, the only thing you can do with it is downcast it to a specific, known type. If there is a type you don't know about, then the values of that type are completely opaque: you can literally do <em>nothing</em> with them except count how many there are. If you know the concrete type then you can downcast to it, but you would need to try each possible type that it could be.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>let a = 1u32;\nlet b = 2.0f32;\nlet c = \"hello\";\n\nlet v: Vec&lt;&amp;dyn Any&gt; = vec![&amp;a, &amp;b, &amp;c];\n\nmatch v[0].downcast_ref::&lt;u32&gt;() {\n    Some(x) =&gt; println!(\"u32: {:?}\", x),\n    None =&gt; println!(\"Not a u32!\"),\n}\n</code></pre>\n\n<p>Notice that I had to explicitly downcast to a <code>u32</code>. Using this approach would involve a logical branch for every possible concrete type, and no compiler warnings if I had forgotten a case.</p>\n\n<p>Trait objects are more versatile because you don't need to know the concrete types in order to use the values - as long as you stick to only using methods of the trait.</p>\n\n<p>For example:</p>\n\n<pre><code>let v: Vec&lt;&amp;dyn Debug&gt; = vec![&amp;a, &amp;b, &amp;c];\n\nprintln!(\"u32: {:?}\", v[0]); // 1\nprintln!(\"u32: {:?}\", v[1]); // 2.0\nprintln!(\"u32: {:?}\", v[2]); // \"hello\"\n</code></pre>\n\n<p>I was able to use all of the values without knowing their concrete types, because I only used the fact that they implement <code>Debug</code>.</p>\n\n<p>Both of those approaches have a downside over using a concrete type in a homogeneous collection: everything is hidden behind pointers. Accessing the data is always indirect, and that data could end up being spread around in memory, making it much less efficient to access and harder for the compiler to optimize.</p>\n\n<p>Making the collection homogeneous with an enum looks like this:</p>\n\n<pre><code>enum Item&lt;'a&gt; {\n    U32(u32),\n    F32(f32),\n    Str(&amp;'a str),\n}\n\nlet v: Vec&lt;Item&gt; = vec![Item::U32(a), Item::F32(b), Item::Str(c)];\nmatch v[0] {\n    Item::U32(x) =&gt; println!(\"u32: {:?}\", x),\n    Item::F32(x) =&gt; println!(\"u32: {:?}\", x),\n    Item::Str(x) =&gt; println!(\"u32: {:?}\", x),\n}\n</code></pre>\n\n<p>Here, I still have to know all of the types, but at least there would be a compiler warning if I missed one. Also notice that the enum can own its values, so (apart from the <code>&amp;str</code> in this case) the data can be tightly packed in memory, making it faster to access.</p>\n\n<p>In summary, <code>Any</code> is rarely the right answer for a heterogeneous collection, but both trait objects and enums have their own trade-offs.</p>\n"}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 0, "accepted_answer_id": 51255263, "answer_count": 1, "score": 0, "last_activity_date": 1545153185, "creation_date": 1531161592, "last_edit_date": 1545153185, "question_id": 51252084, "link": "https://stackoverflow.com/questions/51252084/what-are-the-problems-of-using-any-trait-objects-in-heterogeneous-rust-collectio", "title": "What are the problems of using Any trait objects in heterogeneous Rust collections?", "body": "<p>In dynamic languages, like Clojure, it is easy to express collections with different types:</p>\n\n<pre class=\"lang-clj prettyprint-override\"><code>{:key1 \"foo\", :key2 [34 \"bar\" 4.5], \"key3\" {:key4 \"foobar\"}}\n</code></pre>\n\n<p>In Rust, the preferred way to implement such collections is <a href=\"https://stackoverflow.com/questions/27957103/how-do-i-create-a-heterogeneous-collection-of-objects\">using trait objects or enums</a>. The use of the <code>Any</code> trait object seems to be the most flexible approach (if there isn't a fixed number of known type alternatives) as it allows downcasting to the actual object types:  </p>\n\n<pre><code>let mut vector: Vec&lt;Box&lt;Any&gt;&gt; = Vec::new();\nvector.push(Box::new(\"I\u2019m\"));\nvector.push(Box::new(4 as u32));\nconsole!(log, vector[0].downcast_ref::&lt;&amp;str&gt;());\nconsole!(log, vector[1].downcast_ref::&lt;u32&gt;());\n</code></pre>\n\n<p>This approach seems to be discouraged. What are its disadvantages? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 197, "user_id": 4122595, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-23W7NfFlVh4/AAAAAAAAAAI/AAAAAAAAdL0/8UFTxEUKwFg/photo.jpg?sz=128", "display_name": "Thomas Maurin", "link": "https://stackoverflow.com/users/4122595/thomas-maurin"}, "edited": false, "score": 0, "creation_date": 1531174915, "post_id": 51250236, "comment_id": 89488530, "body": "I completely missed that <code>read_line</code> returns the number of bytes read. Thanks a lot for the answer and code example!"}], "tags": [], "owner": {"reputation": 1243, "user_id": 1682673, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/3c93dd597cdf4fa73876e42f96f17b2b?s=128&d=identicon&r=PG", "display_name": "rnbguy", "link": "https://stackoverflow.com/users/1682673/rnbguy"}, "is_accepted": true, "score": 1, "last_activity_date": 1531184604, "last_edit_date": 1531184604, "creation_date": 1531154102, "answer_id": 51250236, "question_id": 51249257, "link": "https://stackoverflow.com/questions/51249257/cannot-find-the-position-of-a-string-within-a-file-because-the-bufreader-is-used/51250236#51250236", "title": "Cannot find the position of a string within a file because the BufReader is used after it&#39;s moved", "body": "<p>I think you should use <code>.read_line()</code> here. This is more efficient than calling <code>.lines()</code></p>\n\n<pre><code>use std::{\n    fs::File,\n    io::{BufRead, BufReader},\n};\n\nfn find(log_file: &amp;str, key: &amp;str) -&gt; Option&lt;u64&gt; {\n    let log = File::open(log_file).unwrap();\n    let mut reader = BufReader::new(log);\n    let mut line = String::new();\n    let mut pos = 0;\n    while let Ok(num) = reader.read_line(&amp;mut line) {\n        if num == 0 {\n            break;\n        }\n        if line.starts_with(&amp;format!(\"{},\", key)) {\n            return Some(pos);\n        }\n        pos += num as u64;\n        line.clear();\n    }\n    None\n}\n</code></pre>\n"}], "owner": {"reputation": 197, "user_id": 4122595, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-23W7NfFlVh4/AAAAAAAAAAI/AAAAAAAAdL0/8UFTxEUKwFg/photo.jpg?sz=128", "display_name": "Thomas Maurin", "link": "https://stackoverflow.com/users/4122595/thomas-maurin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 222, "favorite_count": 0, "accepted_answer_id": 51250236, "answer_count": 1, "score": 0, "last_activity_date": 1531184604, "creation_date": 1531150680, "last_edit_date": 1531184520, "question_id": 51249257, "link": "https://stackoverflow.com/questions/51249257/cannot-find-the-position-of-a-string-within-a-file-because-the-bufreader-is-used", "title": "Cannot find the position of a string within a file because the BufReader is used after it&#39;s moved", "body": "<p>I'm trying to create a function that returns the position of a string within a file. This is my code:</p>\n\n<pre><code>use std::{\n    fs::File,\n    io::{BufRead, BufReader, Seek, SeekFrom},\n};\n\nfn find(log_file: &amp;str, key: &amp;str) -&gt; Option&lt;u64&gt; {\n    let log = File::open(log_file).unwrap();\n    let mut reader = BufReader::new(log);\n    for line in reader.lines() {\n        let line = line.unwrap();\n        if line.starts_with(&amp;format!(\"{},\", key)) {\n            let bytes = line.as_bytes();\n            let current_offset = reader.seek(SeekFrom::Current(0)).unwrap();\n            return Some(current_offset - bytes.len() as u64);\n        }\n    }\n    None\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c6ea1f1980e6b0a6a4dabaeaad0c8988&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>When I attempt to compile I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `reader`\n  --&gt; src/main.rs:13:34\n   |\n9  |     for line in reader.lines() {\n   |                 ------ value moved here\n...\n13 |             let current_offset = reader.seek(SeekFrom::Current(0)).unwrap();\n   |                                  ^^^^^^ value used here after move\n   |\n   = note: move occurs because `reader` has type `std::io::BufReader&lt;std::fs::File&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>Is there any way I can make this work?</p>\n\n<p>This question is not a duplicate of <a href=\"https://stackoverflow.com/q/39935158/155423\">Cannot use moved BufReader after for loop with bufreader.lines()</a> because using <code>by_ref</code> doesn't work either because then the compiler tells me that reader is borrowed twice mutably.</p>\n"}, {"tags": ["generics", "rust", "traits", "boxing"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1531146002, "post_id": 51247690, "comment_id": 89474248, "body": "To be clear, you want <code>populate</code> to take a <code>Vec&lt;Trait&gt;</code> for any trait which <code>Boat</code> implements?"}, {"owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1531146215, "post_id": 51247690, "comment_id": 89474404, "body": "It would be <code>Vec&lt;Box&lt;Trait&gt;&gt;</code>, but essentially yes. I guess I would ideally expect it to also be able to take a <code>Vec&lt;Box&lt;Boat&gt;&gt;</code> as well."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1531149406, "post_id": 51247690, "comment_id": 89476587, "body": "There&#39;s no way to take an arbitrary <code>T</code>, and ask if it&#39;s a trait implemented by <code>Boat</code>, so I don&#39;t think that as-is it is possible to write the <code>populate</code> function."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531153075, "post_id": 51247690, "comment_id": 89478759, "body": "Thank you for what appears to be a unique question and including a succinct <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>! Please continue to ask high-quality questions like this!"}], "answers": [{"comments": [{"owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "edited": false, "score": 0, "creation_date": 1531158663, "post_id": 51250287, "comment_id": 89481614, "body": "Thank you so much for this. It&#39;s what I&#39;d been looking for. Having poked around into the meaning of your proposed solution, I think I&#39;ve come up with an alternative where clause that better expresses the bounds of the function: <code>where Boat: Unsize&lt;T&gt;</code>. This seems to work - any reason you can think of why it <i>shouldn&#39;t</i> be used?"}, {"owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "edited": false, "score": 0, "creation_date": 1531158897, "post_id": 51250287, "comment_id": 89481742, "body": "... I guess your version of the clause more directly expresses the bounds required for the implementation to work..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "edited": false, "score": 0, "creation_date": 1531160872, "post_id": 51250287, "comment_id": 89482658, "body": "@user31601 no, I don&#39;t have a good sense of which one is more appropriate. It&#39;s probably something like <a href=\"https://stackoverflow.com/q/29812530/155423\"><code>From</code> and <code>Into</code> though</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1600084342, "last_edit_date": 1600084342, "creation_date": 1531154315, "answer_id": 51250287, "question_id": 51247690, "link": "https://stackoverflow.com/questions/51247690/how-can-i-define-a-function-with-a-parameter-that-can-be-multiple-kinds-of-trait/51250287#51250287", "title": "How can I define a function with a parameter that can be multiple kinds of trait objects?", "body": "<h3>Stable Rust</h3>\n<p>You can create and implement a trait for every unique trait object you are interested in:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait Shipyard {\n    fn construct(boat: Boat) -&gt; Box&lt;Self&gt;;\n}\n\nimpl Shipyard for Boat {\n    fn construct(boat: Boat) -&gt; Box&lt;Self&gt; {\n        Box::new(boat)\n    }\n}\n\nimpl Shipyard for dyn Vehicle {\n    fn construct(boat: Boat) -&gt; Box&lt;dyn Vehicle&gt; {\n        Box::new(boat) as Box&lt;dyn Vehicle&gt;\n    }\n}\n\nimpl Shipyard for dyn Floating {\n    fn construct(boat: Boat) -&gt; Box&lt;dyn Floating&gt; {\n        Box::new(boat) as Box&lt;dyn Floating&gt;\n    }\n}\n\nfn populate&lt;T: ?Sized&gt;(receiver: &amp;mut Vec&lt;Box&lt;T&gt;&gt;)\nwhere\n    T: Shipyard,\n{\n    receiver.push(T::construct(Boat));\n}\n</code></pre>\n<p>A macro can remove the duplication.</p>\n<h3>Nightly Rust</h3>\n<p>You can use the unstable <a href=\"https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\" rel=\"nofollow noreferrer\"><code>CoerceUnsized</code></a> trait:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(coerce_unsized)]\n\nuse std::ops::CoerceUnsized;\n\nfn populate&lt;T: ?Sized&gt;(receiver: &amp;mut Vec&lt;Box&lt;T&gt;&gt;)\nwhere\n    Box&lt;Boat&gt;: CoerceUnsized&lt;Box&lt;T&gt;&gt;,\n{\n    receiver.push(Box::new(Boat) as Box&lt;T&gt;);\n}\n</code></pre>\n<p>Equivalently:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(unsize)]\n\nuse std::marker::Unsize;\n\nfn populate&lt;T: ?Sized&gt;(receiver: &amp;mut Vec&lt;Box&lt;T&gt;&gt;)\nwhere\n    Boat: Unsize&lt;T&gt;,\n{\n    receiver.push(Box::new(Boat) as Box&lt;T&gt;);\n}\n</code></pre>\n<p>You can track their stabilization in <a href=\"https://github.com/rust-lang/rust/issues/27732\" rel=\"nofollow noreferrer\">issue 27732</a>.</p>\n<p>This code is <em>only</em> able to create a trait object, and cannot return the struct directly:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let mut b: Vec&lt;Box&lt;Boat&gt;&gt; = vec![];\npopulate(&amp;mut b);\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Boat: std::marker::Unsize&lt;Boat&gt;` is not satisfied\n  --&gt; src/main.rs:17:5\n   |\n17 |     populate(&amp;mut b);\n   |     ^^^^^^^^ the trait `std::marker::Unsize&lt;Boat&gt;` is not implemented for `Boat`\n   |\n   = note: required because of the requirements on the impl of `std::ops::CoerceUnsized&lt;std::boxed::Box&lt;Boat&gt;&gt;` for `std::boxed::Box&lt;Boat&gt;`\nnote: required by `populate`\n  --&gt; src/main.rs:25:5\n   |\n25 | /     fn populate&lt;T: ?Sized&gt;(receiver: &amp;mut Vec&lt;Box&lt;T&gt;&gt;)\n26 | |     where\n27 | |         Box&lt;Boat&gt;: CoerceUnsized&lt;Box&lt;T&gt;&gt;,\n28 | |     {\n29 | |         receiver.push(Box::new(Boat) as Box&lt;T&gt;);\n30 | |     }\n   | |_____^\n</code></pre>\n<p>To work around this, you can create a trait like we did for stable Rust, but this one can have a blanket implementation for all trait objects:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(unsize)]\n\nuse std::marker::Unsize;\n\ntrait Shipyard {\n    fn construct(boat: Boat) -&gt; Box&lt;Self&gt;;\n}\n\nimpl Shipyard for Boat {\n    fn construct(boat: Boat) -&gt; Box&lt;Self&gt; {\n        Box::new(boat)\n    }\n}\n\nimpl&lt;U: ?Sized&gt; Shipyard for U\nwhere\n    Boat: Unsize&lt;U&gt;,\n{\n    fn construct(boat: Boat) -&gt; Box&lt;Self&gt; {\n        Box::new(boat) as Box&lt;U&gt;\n    }\n}\n\nfn populate&lt;T: ?Sized&gt;(receiver: &amp;mut Vec&lt;Box&lt;T&gt;&gt;)\nwhere\n    T: Shipyard,\n{\n    receiver.push(T::construct(Boat));\n}\n</code></pre>\n<p>Thanks to <a href=\"https://discordapp.com/channels/442252698964721669/443151225160990732/465916909917831188\" rel=\"nofollow noreferrer\">aturon for pointing me to these traits</a> and <a href=\"https://discordapp.com/channels/442252698964721669/443151225160990732/470349089293467649\" rel=\"nofollow noreferrer\">to eddyb for reminding me that traits exist</a>!</p>\n"}], "owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4086, "favorite_count": 1, "accepted_answer_id": 51250287, "answer_count": 1, "score": 11, "last_activity_date": 1600084342, "creation_date": 1531145680, "last_edit_date": 1600084176, "question_id": 51247690, "link": "https://stackoverflow.com/questions/51247690/how-can-i-define-a-function-with-a-parameter-that-can-be-multiple-kinds-of-trait", "title": "How can I define a function with a parameter that can be multiple kinds of trait objects?", "body": "<p>I'm trying to define a function that will take a reference as a parameter, and call a <em>generic</em> method on the referenced object, passing in a concrete value. I need a way of requiring that the generic type of the parameter passed to my function is a trait of the concrete type that the function will use it with. I can't seem to work out how to do this.</p>\n<p>A minimal example of the sort of thing I'm trying to achieve:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait Vehicle {}\ntrait Floating {}\n\nstruct Boat;\nimpl Vehicle for Boat {}\nimpl Floating for Boat {}\n\nfn main() {\n    let mut a: Vec&lt;Box&lt;dyn Vehicle&gt;&gt; = vec![];\n    populate(&amp;mut a); // Does not compile\n\n    let mut b: Vec&lt;Box&lt;dyn Floating&gt;&gt; = vec![];\n    populate(&amp;mut b); // Also does not compile\n}\n\nfn populate(receiver: &amp;mut Vec&lt;Box&lt;Boat&gt;&gt;) { // What should I put here?\n    receiver.push(Box::new(Boat{}));\n}\n</code></pre>\n<p>Trying to compile this gives the following errors:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:10:14\n   |\n10 |     populate(&amp;mut a); // Does not compile\n   |              ^^^^^^ expected struct `Boat`, found trait object `dyn Vehicle`\n   |\n   = note: expected mutable reference `&amp;mut std::vec::Vec&lt;std::boxed::Box&lt;Boat&gt;&gt;`\n              found mutable reference `&amp;mut std::vec::Vec&lt;std::boxed::Box&lt;dyn Vehicle&gt;&gt;`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:13:14\n   |\n13 |     populate(&amp;mut b); // Also does not compile\n   |              ^^^^^^ expected struct `Boat`, found trait object `dyn Floating`\n   |\n   = note: expected mutable reference `&amp;mut std::vec::Vec&lt;std::boxed::Box&lt;Boat&gt;&gt;`\n              found mutable reference `&amp;mut std::vec::Vec&lt;std::boxed::Box&lt;dyn Floating&gt;&gt;`\n</code></pre>\n<p>I didn't expect this to compile, but I don't know how to change the signature of <code>populate</code> so that it will. I come from Java land, where I would achieve this using this using a bounded wildcard (e.g. <code>void populate(List&lt;? super Boat&gt; receiver)</code>), but I can't find anything to suggest that Rust offers equivalent semantics.</p>\n<p>How might I go about fixing my definition of <code>populate</code> here?</p>\n<p>I'm new to Rust, so bear with me if I'm completely barking up the wrong tree. I've searched around, and can't seem to find an example of how this pattern should be implemented.</p>\n"}, {"tags": ["rust", "borrow-checker", "hyper"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531141388, "post_id": 51246069, "comment_id": 89471057, "body": "Asking for advice on how to structure your application doesn&#39;t seem on topic for Stack Overflow."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531168302, "post_id": 51246069, "comment_id": 89486092, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/38042592/155423\">How do I share a HashMap between Hyper handlers?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51246069/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531174681, "post_id": 51246069, "comment_id": 89488461, "body": "@Shepmaster that looks like it answers the question (effectively)."}], "owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 504, "favorite_count": 0, "closed_date": 1581554900, "answer_count": 0, "score": 2, "last_activity_date": 1531141158, "creation_date": 1531140736, "last_edit_date": 1531141158, "question_id": 51246069, "link": "https://stackoverflow.com/questions/51246069/how-do-i-structure-a-hyper-http-app-to-handle-shared-state", "closed_reason": "Duplicate", "title": "How do I structure a hyper HTTP app to handle shared state?", "body": "<p>I'm trying to build a simple API server in Rust in order to learn the language better. This should accept some datum on <code>PUT /data</code> and store that datum (currently in memory to simplify the problem).</p>\n\n<p>I wrote a <code>MemDb</code> <code>struct</code> to handle inserting and retrieving data (which works):</p>\n\n<pre><code>trait HasRecords {\n    fn insert(&amp;mut self, record: &amp;Datum) -&gt; ();\n    fn exists(&amp;self, record: &amp;Datum) -&gt; bool;\n    fn find(&amp;self, opts: &amp;SearchOpts) -&gt; Vec&lt;Datum&gt;;\n    fn records(&amp;self) -&gt; Vec&lt;Datum&gt;;\n}\n\npub struct MemDb {\n    store: Vec&lt;Datum&gt;, // also has a ::new() method on the struct\n}\n</code></pre>\n\n<p>In order to keep this storage globally, I was going to create an <code>App</code> struct, which would hold the storage, and pass a <code>route_handler</code> function to the <code>hyper</code> server:</p>\n\n<h3><code>src/app.rs</code></h3>\n\n<pre><code>extern crate hyper;\n\nuse db::MemDb;\n\nuse futures::future;\nuse hyper::rt::Future;\nuse hyper::{Body, Method, Request, Response, StatusCode};\ntype BoxFut = Box&lt;Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; + Send&gt;;\n\npub struct App {\n    storage: MemDb,\n}\n\nimpl App {\n    pub fn new() -&gt; App {\n        return App {\n            storage: MemDb::new(),\n        };\n    }\n}\n\npub trait Router {\n    fn route_handler(&amp;self) -&gt; Box&lt;Fn(Request&lt;Body&gt;) -&gt; BoxFut&gt;;\n}\n\nimpl Router for App {\n    fn route_handler(&amp;self) -&gt; Box&lt;Fn(Request&lt;Body&gt;) -&gt; BoxFut&gt; {\n        return Box::new(|req: Request&lt;Body&gt;| {\n            let mut response = Response::new(Body::empty());\n\n            match (req.method(), req.uri().path()) {\n                (&amp;Method::GET, \"/\") =&gt; {\n                    *response.body_mut() = Body::from(\"status: ok\");\n                }\n                _ =&gt; {\n                    *response.status_mut() = StatusCode::NOT_FOUND;\n                }\n            }\n\n            return Box::new(future::ok(response));\n        });\n    }\n}\n</code></pre>\n\n<p>I was then using <code>App</code> in my <code>main</code> function to handle the routing:</p>\n\n<h3><code>src/main.rs</code> [extract]</h3>\n\n<pre><code>fn main() {\n    println!(\"Starting server...\");\n    let addr = ([127, 0, 0, 1], 8080).into();\n    let app = App::new();\n    let service = || service_fn(app.route_handler().as_ref());\n\n    let server = Server::bind(&amp;addr)\n        .serve(service)\n        .map_err(|e| eprintln!(\"server error: {}\", e));\n\n    hyper::rt::run(server);\n\n    println!(\"Server listening on port 8080\");\n}\n</code></pre>\n\n<p>I'm now getting an error that says that the unboxed closure passed to <code>service_fn</code> cannot be safely shared between threads.</p>\n\n<p>Before I directly pursue this error, is there a better way of approaching this problem? I come from more of a dynamically typed, single-threaded background (NodeJS, Python) and am struggling with the borrow checker.</p>\n"}, {"tags": ["syntax", "rust", "pattern-matching"], "answers": [{"comments": [{"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1531115960, "post_id": 51237520, "comment_id": 89456756, "body": "I&#39;m still not sure why it is natural fall-out from the binding / destructuring rules. Are there other  <code>let pattern = fn()</code> type constructs, other than the pure <code>_</code>? (I&#39;m not yet familiar with all rusts idioms - so this is an honest question.)"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 3, "creation_date": 1531118385, "post_id": 51237520, "comment_id": 89457736, "body": "@MichaelAnderson yes, all <code>let</code> statements take patterns as the LHS. See <a href=\"https://doc.rust-lang.org/reference/statements.html#let-statements\" rel=\"nofollow noreferrer\">the reference</a>. This allows tuple destructuring to work for example: <code>let (a, b) = (1, 2);</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1531140292, "last_edit_date": 1531140292, "creation_date": 1531102808, "answer_id": 51237520, "question_id": 51237017, "link": "https://stackoverflow.com/questions/51237017/why-does-destroy-at-the-end-of-statement/51237520#51237520", "title": "Why does _ destroy at the end of statement?", "body": "<blockquote>\n  <p>Is it simply natural fall-out from Rust's binding / destructuring rules?</p>\n</blockquote>\n\n<p>Yes. You use <code>_</code> to indicate that you don't care about a value in a pattern and that it should not be bound in the first place. If a value is never bound to a variable, there's nothing to hold on to the value, so it must be dropped.</p>\n\n<p><a href=\"https://doc.rust-lang.org/book/second-edition/ch18-01-all-the-places-for-patterns.html\" rel=\"nofollow noreferrer\">All the Places Patterns Can Be Used</a>:</p>\n\n<ul>\n<li><code>match</code> Arms</li>\n<li>Conditional <code>if let</code> Expressions</li>\n<li><code>while let</code> Conditional Loops</li>\n<li><code>for</code> Loops</li>\n<li><code>let</code> Statements</li>\n<li>Function Parameters</li>\n</ul>\n\n<blockquote>\n  <p>Is there even a mention of it in the official documentation?</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/book/second-edition/ch18-03-pattern-syntax.html#ignoring-an-entire-value-with-_\" rel=\"nofollow noreferrer\">Ignoring an Entire Value with <code>_</code></a></p>\n\n<p>Of note is that <code>_</code> isn't <a href=\"https://doc.rust-lang.org/reference/identifiers.html\" rel=\"nofollow noreferrer\">a valid identifier</a>, thus you can't use it as a name:</p>\n\n<pre><code>fn main() {\n    let _ = 42;\n    println!(\"{}\", _);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected expression, found reserved identifier `_`\n --&gt; src/main.rs:3:20\n  |\n3 |     println!(\"{}\", _);\n  |                    ^ expected expression\n</code></pre>\n\n<blockquote>\n  <p>achieved using explicit scoping</p>\n</blockquote>\n\n<p>I suppose you could have gone this route and made expressions doing this just \"hang around\" until the scope was over, but I don't see any value to it:</p>\n\n<pre><code>let _ = vec![5];    \nvec![5]; // Equivalent\n// Gotta wait for the scope to end to clean these up, or call `drop` explicitly\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1531134896, "last_edit_date": 1531134896, "creation_date": 1531130005, "answer_id": 51242677, "question_id": 51237017, "link": "https://stackoverflow.com/questions/51237017/why-does-destroy-at-the-end-of-statement/51242677#51242677", "title": "Why does _ destroy at the end of statement?", "body": "<p>The only reason that you'd use <code>let _ = foo()</code> is when the function requires that you use its result, and you know that you don't need it. Otherwise, this:</p>\n\n<pre><code>let _ = foo();\n</code></pre>\n\n<p>is exactly the same as this:</p>\n\n<pre><code>foo();\n</code></pre>\n\n<p>For example, suppose <code>foo</code> has a signature like this:</p>\n\n<pre><code>fn foo() -&gt; Result&lt;String, ()&gt;;\n</code></pre>\n\n<p>You will get a warning if you don't use the result, because <a href=\"https://doc.rust-lang.org/src/core/result.rs.html#254\" rel=\"noreferrer\"><code>Result</code></a> has the <a href=\"https://doc.rust-lang.org/reference/attributes.html#must_use-attribute\" rel=\"noreferrer\"><code>#[must_use]</code> attribute</a>. Destructuring and ignoring the result immediately is a concise way of avoiding this warning in cases where you know it's ok, without introducing a new variable that lasts for the full scope.</p>\n\n<p>If you didn't pattern match against the result then the value would be dropped as soon as the <code>foo</code> function returns. It seems reasonable that Rust would behave the same regardless of whether you explicitly said you don't want it or just didn't use it.</p>\n"}], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 356, "favorite_count": 1, "answer_count": 2, "score": 8, "last_activity_date": 1545613263, "creation_date": 1531096740, "last_edit_date": 1545613263, "question_id": 51237017, "link": "https://stackoverflow.com/questions/51237017/why-does-destroy-at-the-end-of-statement", "title": "Why does _ destroy at the end of statement?", "body": "<p>I've seen a few other questions and <a href=\"https://stackoverflow.com/a/25877389/221955\">answers</a> stating that <code>let _ = foo()</code> destroys the result at the end of the statement rather than at scope exit, which is what <code>let _a = foo()</code> does.</p>\n\n<p>I am unable to find any official description of this, nor any rationale for this syntax. </p>\n\n<p>I'm interested in a few inter-twined things:</p>\n\n<ul>\n<li>Is there even a mention of it in the official documentation?</li>\n<li>What is the history behind this choice? Is it simply natural fall-out from Rust's binding / destructuring rules? Is it something inherited from another language? Or does it have some other origin? </li>\n<li>Is there some use-case this syntax addresses that could not have been achieved using explicit scoping?</li>\n</ul>\n"}, {"tags": ["rust", "traits", "orphan"], "comments": [{"owner": {"reputation": 3683, "user_id": 4371758, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a60b9f124beca310b9bba6762c7aabbd?s=128&d=identicon&r=PG&f=1", "display_name": "Bubletan", "link": "https://stackoverflow.com/users/4371758/bubletan"}, "edited": false, "score": 0, "creation_date": 1531091012, "post_id": 51236531, "comment_id": 89452198, "body": "I think the rule is just simplified for the book. The compiler can allow more cases, like this one, if it&#39;s able to make sure that there can&#39;t be any conflicting implementations."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1571273638, "last_edit_date": 1571273638, "creation_date": 1531101732, "answer_id": 51237435, "question_id": 51236531, "link": "https://stackoverflow.com/questions/51236531/why-is-implementing-an-external-trait-using-my-type-as-a-parameter-for-an-extern/51237435#51237435", "title": "Why is implementing an external trait using my type as a parameter for an external type legal?", "body": "<p>The entire purpose of these rules (called the <em>orphan rules</em> or <em>coherence rules</em>) is to avoid having any conflicting implementations for a given trait/type combination. Since Rust 1.0, it is believed that it would not be in line with a language striving for solid stability to be \"willy-nilly\" about who is allowed to implement a trait for a type.</p>\n\n<p>A very common example of this particular type of implementation is <code>From</code>:</p>\n\n<pre><code>impl From&lt;MyType&gt; for i32 {\n    // ...\n}\n</code></pre>\n\n<p>By parameterizing the trait with a local type, there's still no ambiguity about who is implementing the trait. One way of thinking about it would be treating <code>Distribution</code> as not a trait but a <em>trait constructor</em> <sup>1</sup>. Each instance of <code>Distribution</code> creates a new trait, one that's custom-made for the case.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/2451\" rel=\"nofollow noreferrer\">RFC 2451, \"Re-Rebalancing Coherence\"</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md\" rel=\"nofollow noreferrer\">RFC 1023, \"Rebalancing Coherence\"</a></li>\n<li><a href=\"https://stackoverflow.com/q/25413201/155423\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a></li>\n</ul>\n\n<p><sup>1</sup> \u2014 This isn't true, but it's a reasonable analogy.</p>\n"}], "owner": {"reputation": 547, "user_id": 832176, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/8d7cd2cd4d6d4ef64df3b266136ab853?s=128&d=identicon&r=PG", "display_name": "M Farkas-Dyck", "link": "https://stackoverflow.com/users/832176/m-farkas-dyck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 51237435, "answer_count": 1, "score": 3, "last_activity_date": 1571273638, "creation_date": 1531090006, "last_edit_date": 1531229340, "question_id": 51236531, "link": "https://stackoverflow.com/questions/51236531/why-is-implementing-an-external-trait-using-my-type-as-a-parameter-for-an-extern", "title": "Why is implementing an external trait using my type as a parameter for an external type legal?", "body": "<p>I am modifying some code to depend on rand version 0.5. At first, I was worried how I would enable generating random values of my own types with <code>Standard</code>, but I found out this is legal:</p>\n\n<pre><code>impl ::rand::distributions::Distribution&lt;MyType&gt; for ::rand::distributions::Standard {\n    // ...\n}\n</code></pre>\n\n<p>Why is it legal? I thought implementing an external trait for an external type is <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-02-traits.html#implementing-a-trait-on-a-type\" rel=\"nofollow noreferrer\">illegal</a>.</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 65, "user_id": 6871844, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2689188cc4fcf5f4e5142bd15213d82?s=128&d=identicon&r=PG&f=1", "display_name": "Avi", "link": "https://stackoverflow.com/users/6871844/avi"}, "edited": false, "score": 1, "creation_date": 1531160487, "post_id": 51237640, "comment_id": 89482451, "body": "Thanks @Shepmaster for reformatting the question and for the quick answer !"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1531104211, "creation_date": 1531104211, "answer_id": 51237640, "question_id": 51235721, "link": "https://stackoverflow.com/questions/51235721/how-can-a-function-conditionally-fall-back-to-a-trait-if-another-trait-is-implem/51237640#51237640", "title": "How can a function conditionally fall back to a trait if another trait is implemented or not?", "body": "<p>You are looking for the <strong>unstable</strong> feature <em>specialization</em>:</p>\n\n<pre><code>#![feature(specialization)]\n\n#[derive(Debug)]\nstruct Example(u8);\n\nimpl Iterator for Example {\n    type Item = u8;\n    fn next(&amp;mut self) -&gt; Option&lt;u8&gt; {\n        let v = self.0;\n        if v &gt; 10 {\n            None\n        } else {\n            self.0 += 1;\n            Some(v)\n        }\n    }\n}\n\ntrait FastIterator: Iterator {\n    fn skip_next(&amp;mut self);\n}\n\nimpl&lt;I: Iterator&gt; FastIterator for I {\n    default fn skip_next(&amp;mut self) {\n        println!(\"step\");\n        self.next();\n    }\n}\n\nimpl FastIterator for Example {\n    fn skip_next(&amp;mut self) {\n        println!(\"skip\");\n        self.0 += 1;\n    }\n}\n\nfn main() {\n    let mut ex = Example(0);\n    ex.skip_next();\n\n    let mut r = 0..10;\n    r.skip_next();\n}\n</code></pre>\n"}], "owner": {"reputation": 65, "user_id": 6871844, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2689188cc4fcf5f4e5142bd15213d82?s=128&d=identicon&r=PG&f=1", "display_name": "Avi", "link": "https://stackoverflow.com/users/6871844/avi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 51237640, "answer_count": 1, "score": 0, "last_activity_date": 1531104211, "creation_date": 1531081432, "last_edit_date": 1531103161, "question_id": 51235721, "link": "https://stackoverflow.com/questions/51235721/how-can-a-function-conditionally-fall-back-to-a-trait-if-another-trait-is-implem", "title": "How can a function conditionally fall back to a trait if another trait is implemented or not?", "body": "<p>I am building up <a href=\"https://github.com/k3yavi/rust-boomphf\" rel=\"nofollow noreferrer\">a library for generating the minimum perfect hash from a set of keys</a>. The idea is to index the keys online without storing the full dataset in memory. Based on a user requirement, it is possible that <code>skip_next()</code> is not available and I want to fall back to using <code>next()</code>. Although it might be slower based on the speed of the iterator, it simplifies things for a general user.</p>\n\n<p>My idea is to <em>selectively</em> iterate over all the elements generated by an iterator. This code works fine, but it requires a user to implement the trait <code>FastIteration</code>:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Pixel {\n    r: Vec&lt;i8&gt;,\n    g: Vec&lt;i8&gt;,\n    b: Vec&lt;i8&gt;,\n}\n\n#[derive(Debug)]\nstruct Node {\n    r: i8,\n    g: i8,\n    b: i8,\n}\n\nstruct PixelIterator&lt;'a&gt; {\n    pixel: &amp;'a Pixel,\n    index: usize,\n}\n\nimpl&lt;'a&gt; IntoIterator for &amp;'a Pixel {\n    type Item = Node;\n    type IntoIter = PixelIterator&lt;'a&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        println!(\"Into &amp;\");\n        PixelIterator {\n            pixel: self,\n            index: 0,\n        }\n    }\n}\n\nimpl&lt;'a&gt; Iterator for PixelIterator&lt;'a&gt; {\n    type Item = Node;\n    fn next(&amp;mut self) -&gt; Option&lt;Node&gt; {\n        println!(\"next &amp;\");\n        let result = match self.index {\n            0 | 1 | 2 | 3 =&gt; Node {\n                r: self.pixel.r[self.index],\n                g: self.pixel.g[self.index],\n                b: self.pixel.b[self.index],\n            },\n            _ =&gt; return None,\n        };\n        self.index += 1;\n        Some(result)\n    }\n}\n\ntrait FastIteration {\n    fn skip_next(&amp;mut self);\n}\n\nimpl&lt;'a&gt; FastIteration for PixelIterator&lt;'a&gt; {\n    fn skip_next(&amp;mut self) {\n        self.index += 1;\n    }\n}\n\nfn main() {\n    let p1 = Pixel {\n        r: vec![11, 21, 31, 41],\n        g: vec![12, 22, 32, 42],\n        b: vec![13, 23, 33, 43],\n    };\n\n    let mut index = 0;\n    let mut it = p1.into_iter();\n    loop {\n        if index == p1.r.len() {\n            break;\n        }\n\n        if index == 1 {\n            it.skip_next()\n        } else {\n            let val = it.next();\n            println!(\"{:?}\", val);\n        }\n        index += 1;\n    }\n}\n</code></pre>\n\n<p>How can one make the above program fall back to using the normal <code>next()</code> instead of <code>skip_next()</code> based on if the trait <code>FastIteration</code> is implemented or not? </p>\n\n<pre><code>fn fast_iterate&lt;I&gt;(objects: I)\n    where I: IntoIter + FastIteration { // should use skip_next() };\n\nfn slow_iterate&lt;I&gt;(objects: I)\n    where I: IntoIter { // should NOT use skip_next(), use next() };\n</code></pre>\n\n<p>As above, one can always write two separate <code>impl</code> but is it possible to do this in one?</p>\n\n<p>This question builds on:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/48037963/conditionally-implement-a-rust-trait-only-if-a-type-constraint-is-satisfied\">Conditionally implement a Rust trait only if a type constraint is satisfied</a> </li>\n<li><a href=\"https://stackoverflow.com/questions/51096527/implement-rayon-as-parallel-slice-using-iterators\">Implement rayon `as_parallel_slice` using iterators</a>.</li>\n</ul>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1531056179, "post_id": 51232284, "comment_id": 89443923, "body": "Please see <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1531056662, "post_id": 51232284, "comment_id": 89444083, "body": "<i>so excuse any careless errors</i> \u2014 even better, you can take the time to produce a working <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and avoid having any careless errors in the first place."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 0, "last_activity_date": 1531063592, "creation_date": 1531063592, "answer_id": 51233468, "question_id": 51232284, "link": "https://stackoverflow.com/questions/51232284/how-do-i-insert-into-or-update-an-rbtree-from-rbtree-rs/51233468#51233468", "title": "How do I insert into or update an RBTree from rbtree-rs?", "body": "<p>In such cases the workaround is to move the mutating code outside of <code>get_mut()</code>'s scope.</p>\n\n<pre><code>let needs_insert = match obj.tree.get_mut(k) {\n    None =&gt; true,\n    Some(vec) =&gt; {\n        vec.push(v); \n        false\n    }\n};\n\nif needs_insert {\n    book.tree.insert(k, vec![v]);\n}\n</code></pre>\n"}], "owner": {"reputation": 17289, "user_id": 45849, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/4PHVX.jpg?s=128&g=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/45849/tony"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 51233468, "answer_count": 1, "score": 0, "last_activity_date": 1531063592, "creation_date": 1531055167, "last_edit_date": 1531056627, "question_id": 51232284, "link": "https://stackoverflow.com/questions/51232284/how-do-i-insert-into-or-update-an-rbtree-from-rbtree-rs", "title": "How do I insert into or update an RBTree from rbtree-rs?", "body": "<p>I'm having trouble understanding how to idiomatically find and append to or create a new vector if the value is part of a data structure, in this case a Red Black tree.</p>\n\n<p>I'm using <a href=\"https://github.com/tickbh/rbtree-rs\" rel=\"nofollow noreferrer\">this Red Black Tree implementation</a> and the plan is to grab a mutable reference to the value which I will append to if it exists (not <code>None</code>) and create a new vector and move it to the <code>RBTree</code> if there is no value for the key. My code looks like this, slightly altered for brevity so excuse any careless errors:</p>\n\n<pre><code>struct Obj {\n    tree: RBTree&lt;i32, Vec&lt;String&gt;&gt;,\n}\n\nlet mut obj = Obj {\n    tree: RBTree::new(),\n};\n\nlet k = 5;\nlet v = \"whatever\";\n\nmatch obj.tree.get_mut(k) {\n    None =&gt; {\n        let mut vec: Vec&lt;Node&gt; = Vec::new();\n        vec.push(v);\n        book.tree.insert(k, vec);\n    }\n    Some(vec) =&gt; vec.push(v),\n}\n</code></pre>\n\n<p>The problem is that I'm getting a mutable reference to the tree when I check for existence because if it does exist, I want to mutate it by appending to the vector. However, if it does not exist, I want to insert a new node which tries to do a mutable borrow so I get a \"second mutable borrow occurs here\" on this line <code>book.tree.insert(k, vec);</code>.</p>\n\n<p>I would love some insight into how to perform this find or create so that it compiles and is thread safe. I guess it's also possible the library I'm using has problems. Not yet qualified to comment on that.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531057142, "post_id": 51229975, "comment_id": 89444196, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>UserType</code> instead, please."}], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 0, "last_activity_date": 1531057242, "last_edit_date": 1531057242, "creation_date": 1531050062, "answer_id": 51231628, "question_id": 51229975, "link": "https://stackoverflow.com/questions/51229975/what-is-the-origin-of-the-error-cannot-move-out-of-borrowed-content/51231628#51231628", "title": "What is the origin of the error &quot;cannot move out of borrowed content&quot;?", "body": "<p>Look carefully at this code:</p>\n\n<pre><code>for iter in &amp;self.user_type_list {\n    match iter {\n        Some(ref x) =&gt; {\n            let temp = x.into_inner();\n            let temp2 = temp.to_string();\n            result += &amp;temp2[..];\n        }\n        None =&gt; panic!(\"to_string\"),\n    }\n    result += \"\\n\";\n}\n</code></pre>\n\n<p>Here, you are iterating <code>&amp;self.user_type_list</code> so the type of <code>iter</code> is actually a reference to the contained value: <code>&amp;Option&lt;Rc&lt;RefCell&lt;user_type&gt;&gt;&gt;</code>. That is nice, because you do not want to take ownership of the container or its values.</p>\n\n<p>Then you match <code>iter</code> to <code>Some(ref x)</code>. Older compiler versions would fail because you are matching a reference to a non-reference, but new compilers will do as if you are matching a <code>Option&lt;&amp;T&gt;</code> instead of a <code>&amp;Option&lt;T&gt;</code>, if needed. That is handy, and means that you can write just <code>Some(x) =&gt;</code> and <code>x</code> will be of type <code>&amp;Rc&lt;RefCell&lt;user_type&gt;&gt;</code> instead of <code>&amp;&amp;Rc&lt;..&gt;</code> (not that it really matters, automatic dereferencing will make those equivalent).</p>\n\n<p>Now you are calling <code>x.into_inner()</code> with a <code>&amp;Rc&lt;RefCell&lt;..&gt;&gt;</code> and that will never work. It looks like you want to get the <code>RefCell</code> into <code>temp</code> that is not needed, <code>Rc</code> implements <code>Deref</code> so you get that for free. Instead the compiler thinks you are calling <code>RefCell::into_inner(self) -&gt; T</code>, but this function consumes the <code>self</code> to get to the contained value. And you do not own it, you just borrowed it. That is what the error message means: you are trying to consume (move out) and object you do not own (borrowd).</p>\n\n<p>What you really want is just to borrow the <code>user_type</code> enough to call <code>to_string()</code>:</p>\n\n<pre><code>Some(x) =&gt; { \n    let temp = x.borrow().to_string();\n    result += &amp;temp;\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 9211673, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VIcdf.png?s=128&g=1", "display_name": "vztpv", "link": "https://stackoverflow.com/users/9211673/vztpv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 542, "favorite_count": 0, "accepted_answer_id": 51231628, "answer_count": 1, "score": 0, "last_activity_date": 1531057242, "creation_date": 1531037014, "last_edit_date": 1531057114, "question_id": 51229975, "link": "https://stackoverflow.com/questions/51229975/what-is-the-origin-of-the-error-cannot-move-out-of-borrowed-content", "title": "What is the origin of the error &quot;cannot move out of borrowed content&quot;?", "body": "<p>I've never understood why I have received the Rust error \"cannot move out of borrowed content\".</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::VecDeque;\nuse std::rc::Rc;\nuse std::vec::Vec;\n\npub struct user_type {\n    pub name: String,\n    pub ilist: Vec&lt;i32&gt;,\n    pub user_type_list: VecDeque&lt;Option&lt;Rc&lt;RefCell&lt;user_type&gt;&gt;&gt;&gt;,\n    pub parent: Option&lt;Rc&lt;RefCell&lt;user_type&gt;&gt;&gt;,\n}\n\nimpl user_type {\n    pub fn new(name: String) -&gt; Self {\n        user_type {\n            name: name.clone(),\n            ilist: Vec::new(),\n            user_type_list: VecDeque::new(),\n            parent: Option::None,\n        }\n    }\n\n    pub fn to_string(&amp;self) -&gt; String {\n        let mut result: String = String::new();\n\n        result += \"name is \";\n        result += &amp;self.name;\n\n        let n = self.user_type_list.len();\n\n        for iter in &amp;self.user_type_list {\n            match iter {\n                Some(ref x) =&gt; {\n                    let temp = x.into_inner();\n                    let temp2 = temp.to_string();\n                    result += &amp;temp2[..];\n                }\n                None =&gt; panic!(\"to_string\"),\n            }\n            result += \"\\n\";\n        }\n\n        result\n    }\n}\n</code></pre>\n\n<p>The full error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:34:32\n   |\n34 |                     let temp = x.into_inner();\n   |                                ^ cannot move out of borrowed content\n</code></pre>\n\n<p>What is the origin of this kind of error? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 310, "user_id": 225550, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb8d029db59da98a0c5e0053b1edc459?s=128&d=identicon&r=PG", "display_name": "KristianR", "link": "https://stackoverflow.com/users/225550/kristianr"}, "reply_to_user": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1530997978, "post_id": 51226906, "comment_id": 89433978, "body": "Thanks for the reference. I still don&#39;t understand why the exposure and redeclaration in mod.rs is not enough. Could someone please explain?"}, {"owner": {"reputation": 310, "user_id": 225550, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb8d029db59da98a0c5e0053b1edc459?s=128&d=identicon&r=PG", "display_name": "KristianR", "link": "https://stackoverflow.com/users/225550/kristianr"}, "edited": false, "score": 0, "creation_date": 1530998359, "post_id": 51226906, "comment_id": 89434032, "body": "I turned out that I could use   mod figures;                                                                                                 use figures::Shape;                                                                                       fn main() {                                                                   let c = figures::Circle::new();                                                                                      c.draw()                                                                                                         }"}], "owner": {"reputation": 310, "user_id": 225550, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb8d029db59da98a0c5e0053b1edc459?s=128&d=identicon&r=PG", "display_name": "KristianR", "link": "https://stackoverflow.com/users/225550/kristianr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 441, "favorite_count": 0, "closed_date": 1530998294, "answer_count": 0, "score": 0, "last_activity_date": 1530997192, "creation_date": 1530997192, "question_id": 51226906, "link": "https://stackoverflow.com/questions/51226906/why-is-trait-not-in-scope", "closed_reason": "Duplicate", "title": "Why is trait not in scope?", "body": "<p>I'm learning Rust and I have made a trait \"Shape\" and a subclass \"Circle\" defined within a module \"figures\". My question is, do I really have to supply a use declaration of Shape inside main with a full path to Shape.rs? If I remove it I get a compilation error </p>\n\n<pre><code>error[E0599]: no method named `draw` found for type `figures::circle::Circle` in the current scope                 \n --&gt; src/main.rs:8:7\n  |\n8 |     c.draw()\n  |       ^^^^\n  | \n ::: src/figures/circle.rs:3:1\n  |\n3 | pub struct Circle {}\n  | ----------------- method `draw` not found for this\n  |\n  = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope, perhaps add a `use` for it:\n  |\n1 | use figures::shape::Shape;\n  |\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>File structure</p>\n\n<pre><code>src/\n\u251c\u2500\u2500 figures\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 circle.rs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mod.rs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 shape.rs\n\u2514\u2500\u2500 main.rs\n</code></pre>\n\n<p>--- main.rc ---</p>\n\n<pre><code>mod figures;                                                                                                       \n\n// Why is this needed when Shape is exported and redeclared in mod.rs?                                                                                             \nuse figures::shape::Shape;                                                                                         \n\nfn main() {                                                                                                        \n    let c = figures::Circle::new();                                                                                \n    c.draw()                                                                                                       \n}   \n</code></pre>\n\n<p>--- figures/circle.rs ---</p>\n\n<pre><code>use figures::shape::Shape;                                                                                         \n\npub struct Circle {}                                                                                               \n\nimpl Circle {                                                                                                      \n    pub fn new() -&gt; Circle {                                                                                       \n        println!(\"Circle new\");                                                                                    \n\n        Circle {}                                                                                                  \n    }                                                                                                              \n}                                                                                                                  \n\nimpl Shape for Circle {                                                                                            \n    fn draw(&amp;self) {                                                                                               \n        println!(\"Circle draw\")                                                                                    \n    }                                                                                                              \n}                                                                                                                  \n\nimpl Drop for Circle {                                                                                             \n    fn drop(&amp;mut self) {                                                                                           \n        println!(\"Circle drop\");                                                                                   \n    }                                                                                                              \n}   \n</code></pre>\n\n<p>--- mod.rs ---</p>\n\n<pre><code>// Expose modules to caller                                                                                        \npub mod circle;                                                                                                    \npub mod shape;                                                                                                     \n\n// Redeclare circle::Circle -&gt; Circle and shape::Shape -&gt; Shape                                                    \npub use self::circle::Circle;                                                                                      \npub use self::shape::Shape;\n</code></pre>\n\n<p>--- circle.rs ---</p>\n\n<pre><code>pub trait Shape {                                                                                                  \n    fn draw(&amp;self);                                                                                                \n} \n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530992179, "post_id": 51226135, "comment_id": 89432909, "body": "<i>I know it will live for the entire length of the program</i> \u2014 It actually <b>won&#39;t</b>, which is why you get that error. The Rust <code>main</code> function exits <i>before</i> the OS <code>main</code> function does. Threads can and do continue running after the Rust <code>main</code> exits. This doesn&#39;t even cover the detail of destruction order of multiple variables in the same scope."}, {"owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530993298, "post_id": 51226135, "comment_id": 89433133, "body": "@Shepmaster That question does seem to include all of the salient points of this one. I&#39;m fine with this being marked as a duplicate."}], "owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 172, "favorite_count": 0, "closed_date": 1530993320, "answer_count": 0, "score": 0, "last_activity_date": 1530993364, "creation_date": 1530989928, "last_edit_date": 1530993247, "question_id": 51226135, "link": "https://stackoverflow.com/questions/51226135/specifying-static-lifetime-of-value-in-main-so-callback-can-borrow", "closed_reason": "Duplicate", "title": "Specifying static lifetime of value in `main` so callback can borrow", "body": "<p>I have a variable that I am using to keep track of state which is updated by a handler closure. Something like the following:</p>\n\n<pre><code>fn main() {\n    let val = 1;\n    add_handler(|| val += 1);\n    println!(\"{}\", val);\n}\n</code></pre>\n\n<p>The <code>add_handler</code> function is declared in another library and has the type</p>\n\n<pre><code>fn add_handler&lt;F&gt;(listener: F) where F: FnMut() + 'static\n</code></pre>\n\n<p>When I try to compile this, I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `val`, which is owned by the current function\n --&gt; src/main.rs:3:16\n  |\n3 |     add_handler(|| val += 1);\n  |                    ^^ --- `val` is borrowed here\n  |                    |\n  |                    may outlive borrowed value `val`\nhelp: to force the closure to take ownership of `val` (and any other referenced variables), use the `move` keyword\n  |\n3 |     add_handler(move || val += 1);\n  |                 ^^^^^^^\n</code></pre>\n\n<p>Because <code>val</code> is declared in <code>main</code> I know it will live for the entire length of the program, but the compiler apparently doesn't know this, and I can't move <code>val</code> into the closure because I need to use it later.</p>\n\n<p>This is similar to <a href=\"https://stackoverflow.com/questions/35651279/error-closure-may-outlive-the-current-function-but-it-will-not-outlive-it\">&quot;error: closure may outlive the current function&quot; but it will not outlive it</a> but I can't get rid of the <code>'static</code> lifetime in the definition of <code>add_handler</code> because I don't control the definition. </p>\n\n<p>This is not a duplicate of <a href=\"https://stackoverflow.com/q/45745415/155423\">Closure may outlive the current function</a> because I can't move <code>val</code> into the closure.</p>\n\n<p>I could make <code>val</code> a global atomic as per <a href=\"https://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\">How do I create a global, mutable singleton?</a>, but it seems like there should a cleaner more idiomatic way to tell the compiler that <code>val</code> will live long enough. </p>\n\n<p>How do I do this?</p>\n"}, {"tags": ["rust", "future", "lifetime", "rust-actix"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530983632, "post_id": 51225281, "comment_id": 89430954, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51225281/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "edited": false, "score": 0, "creation_date": 1531015737, "post_id": 51225281, "comment_id": 89439516, "body": "HttpReqauest implements Clone trait"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1530984176, "creation_date": 1530984176, "answer_id": 51225409, "question_id": 51225281, "link": "https://stackoverflow.com/questions/51225281/how-do-i-access-httprequest-data-inside-a-future-in-actix-web/51225409#51225409", "title": "How do I access HttpRequest data inside a Future in Actix-web?", "body": "<p>The simplest solution is to not access it inside the future at all:</p>\n\n<pre><code>extern crate actix_web; // 0.6.14\nextern crate bytes;     // 0.4.8\nextern crate futures;   // 0.1.21\n\nuse actix_web::{AsyncResponder, FutureResponse, HttpMessage, HttpRequest, HttpResponse};\nuse bytes::Bytes;\nuse futures::future::Future;\n\nfn handler(req: HttpRequest) -&gt; FutureResponse&lt;HttpResponse&gt; {\n    let url = format!(\n        \"{scheme}://{host}\",\n        scheme = req.connection_info().scheme(),\n        host = req.connection_info().host(),\n    );\n\n    req.body()\n        .from_err()\n        .and_then(move |bytes: Bytes| {\n            println!(\"Body: {:?}\", bytes);\n            Ok(HttpResponse::Ok().body(url).into())\n        })\n        .responder()\n}\n</code></pre>\n\n<p>In case this is more than a quick hack for demonstration purposes, constructing URLs by concatenating strings is a terrible idea as it doesn't properly escape the values. You should be using a type that does that for you.</p>\n"}], "owner": {"reputation": 12554, "user_id": 146587, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dca0ebacce0844b9d65f5322420c72a2?s=128&d=identicon&r=PG", "display_name": "Mala", "link": "https://stackoverflow.com/users/146587/mala"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1664, "favorite_count": 0, "accepted_answer_id": 51225409, "answer_count": 1, "score": 1, "last_activity_date": 1531015737, "creation_date": 1530983247, "last_edit_date": 1530983566, "question_id": 51225281, "link": "https://stackoverflow.com/questions/51225281/how-do-i-access-httprequest-data-inside-a-future-in-actix-web", "title": "How do I access HttpRequest data inside a Future in Actix-web?", "body": "<p>I'd like to have an Actix Web handler which responds to a POST request by printing the POST body to the console and constructing an HTTP response that contains the current URL from the request object.</p>\n\n<p>When reading the request's POST body, futures seem to need to be involved. The closest I've gotten so far is:</p>\n\n<pre><code>fn handler(req: HttpRequest) -&gt; FutureResponse&lt;HttpResponse&gt; {\n    req.body()\n        .from_err()\n        .and_then(|bytes: Bytes| {\n            println!(\"Body: {:?}\", bytes);\n            let url = format!(\"{scheme}://{host}\",\n                scheme = req.connection_info().scheme(),\n                host = req.connection_info().host());\n            Ok(HttpResponse::Ok().body(url).into())\n        }).responder()\n}\n</code></pre>\n\n<p>This won't compile because the future outlives the handler, so my attempts to read <code>req.connection_info()</code> are illegal. The compiler error suggests I use the <code>move</code> keyword into the closure definition, i.e. <code>.and_then(move |bytes: Bytes| {</code>. This also won't compile because <code>req</code> gets moved on the <code>req.body()</code> call and is then captured after the move in the references constructing <code>url</code>.</p>\n\n<p>What is a reasonable way of constructing a scope in which I have access to data attached to the request object (e.g. the <code>connection_info</code>) at the same time as access to the POST body?</p>\n"}, {"tags": ["rust", "llvm", "rust-cargo"], "comments": [{"owner": {"reputation": 28979, "user_id": 266720, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/7c9333e1816aefc7fc97f64b09afe05c?s=128&d=identicon&r=PG", "display_name": "Vi.", "link": "https://stackoverflow.com/users/266720/vi"}, "edited": false, "score": 0, "creation_date": 1530971028, "post_id": 51223564, "comment_id": 89427889, "body": "Does linking manually work if you start that command line manually removing the offending <code>-nostartfiles</code> option?"}], "answers": [{"tags": [], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "is_accepted": false, "score": 0, "last_activity_date": 1531340458, "creation_date": 1531340458, "answer_id": 51293639, "question_id": 51223564, "link": "https://stackoverflow.com/questions/51223564/linking-rust-binary-using-ld-lld/51293639#51293639", "title": "Linking Rust binary using LD.LLD", "body": "<p>So I found the issue - it was in the linker script. I defined memory region for FLASH to start at <code>0x08000000</code> and then in the .text I tried to locate the vector table to the beginning of FLASH so I added statement <code>. = 0</code>. The LLD crashes due to this statement, GCC doesn't.  </p>\n"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1670, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1531340458, "creation_date": 1530969146, "last_edit_date": 1530972477, "question_id": 51223564, "link": "https://stackoverflow.com/questions/51223564/linking-rust-binary-using-ld-lld", "title": "Linking Rust binary using LD.LLD", "body": "<p>I have Rust project that uses cargo-xbuild to cross-compile the core, alloc and compiler_builtins for ARM Cortex-M7 core using target specification (see below).</p>\n\n<p>Up until now I used arm-none-eabi-gcc linker. This works out well.</p>\n\n<p>As the ld.lld linker is mature enough I want to switch to it. Therefore I change the target specification. However, I get strange errors saying the linker-flavor is <code>gnu</code> and it also passes <code>-nostartfiles</code> which is not recognized as a parameter.</p>\n\n<p>[thumbv7em-none-eabi-gcc.json]</p>\n\n<pre><code>  \"abi-blacklist\": [\n    \"stdcall\",\n    \"fastcall\",\n    \"vectorcall\",\n    \"thiscall\",\n    \"win64\",\n    \"sysv64\"\n  ],\n  \"arch\": \"arm\",\n  \"data-layout\": \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\",\n  \"emit-debug-gdb-scripts\": false,\n  \"env\": \"\",\n  \"executables\": true,\n  \"is-builtin\": true,\n  \"linker\": \"arm-none-eabi-gcc\",\n  \"linker-flavor\": \"gcc\",\n  \"llvm-target\": \"thumbv7em-none-eabi\",\n    \"pre-link-args\": {\n        \"gcc\" : [\n        \"-mcpu=cortex-m4\", \"-mthumb\",\n        \"-nostartfiles\", \"-nostdlib\",\n            \"-Tlayout.ld\", \"-ffreestanding\"\n            ]\n    },\n  \"max-atomic-width\": 32,\n  \"os\": \"none\",\n  \"panic-strategy\": \"abort\",\n  \"relocation-model\": \"static\",\n  \"target-c-int-width\": \"32\",\n  \"target-endian\": \"little\",\n  \"target-pointer-width\": \"32\",\n  \"vendor\": \"\"\n}\n</code></pre>\n\n<p>[thumbv7em-none-eabi-lld.json]</p>\n\n<pre><code>{\n\"abi-blacklist\": [\n        \"stdcall\",\n        \"fastcall\",\n        \"vectorcall\",\n        \"win64\",\n        \"sysv64\"\n    ],\n    \"arch\": \"arm\",\n    \"cpu\" : \"cortex-m4\",\n    \"data-layout\": \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\",\n    \"env\": \"\",\n    \"executables\": true,\n    \"linker-flavor\": \"ld.lld\",\n    \"llvm-target\": \"thumbv7em-none-eabi\",\n    \"max-atomic-width\": 32,\n    \"os\": \"none\",\n    \"panic-strategy\": \"abort\",\n    \"link-args\": {\n        \"ld.lld\" : [\n        \"-Tlayout.ld\"]\n    },\n    \"relocation-model\": \"static\",\n    \"target-endian\": \"little\",\n    \"target-pointer-width\": \"32\",\n    \"target-c-int-width\": \"32\",\n    \"vendor\": \"\"\n    }\n</code></pre>\n\n<p>[errors]</p>\n\n<pre><code>   Compiling stm32f3 v0.1.0 (file:///home/cylon2p0/stm32f3)                                                                                                                                                                                        \n     Running `rustc --crate-name stm32f3 src/main.rs --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=ecb4f772152518d9 -C extra-filename=-ecb4f772152518d9 --out-dir /home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps --target /home/cylon2p0/stm32f3/thumbv7em-none-eabi.json -C incremental=/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/incremental -L dependency=/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps -L dependency=/home/cylon2p0/stm32f3/target/debug/deps -C link-arg=-Tlayout.ld -C link-arg=-nostartfiles --sysroot /home/cylon2p0/stm32f3/target/sysroot`\nerror: linking with `lld` failed: exit code: 1======&gt;                    ] 2/3: stm32f3\n  |\n  = note: \"lld\" \"-flavor\" \"gnu\" \"-L\" \"/home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib\" \"/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps/stm32f3-ecb4f772152518d9.1f6vm61vpmp6og7k.rcgu.o\" \"-o\" \"/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps/stm32f3-ecb4f772152518d9\" \"--gc-sections\" \"-L\" \"/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps\" \"-L\" \"/home/cylon2p0/stm32f3/target/debug/deps\" \"-L\" \"/home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib\" \"-Bstatic\" \"/home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib/libcore-08f9d20805b02a18.rlib\" \"/home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib/libcompiler_builtins-898d35b0b97ca347.rlib\" \"-Tlayout.ld\" \"-nostartfiles\" \"-Bdynamic\"\n  = note: lld: error: unknown argument: -nostartfiles\n\n\nerror: aborting due to previous error\n\nerror: Could not compile `stm32f3`.                                                                                                                                                                                                                \n\nCaused by:\n  process didn't exit successfully: `rustc --crate-name stm32f3 src/main.rs --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=ecb4f772152518d9 -C extra-filename=-ecb4f772152518d9 --out-dir /home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps --target /home/cylon2p0/stm32f3/thumbv7em-none-eabi.json -C incremental=/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/incremental -L dependency=/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps -L dependency=/home/cylon2p0/stm32f3/target/debug/deps -C link-arg=-Tlayout.ld -C link-arg=-nostartfiles --sysroot /home/cylon2p0/stm32f3/target/sysroot` (exit code: 101)\n</code></pre>\n\n<p><strong>EDIT:</strong>\nRemoving <code>-nostartfiles</code> causes Segmentation fault.</p>\n\n<pre><code>\"lld\" \"-flavor\" \"ld.lld\" \"-L\" \"/home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib\" \"/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps/stm32f3-ecb4f772152518d9.1f6vm61vpmp6og7k.rcgu.o\" \"-o\" \"/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps/stm32f3-ecb4f772152518d9\" \"--gc-sections\" \"-L\" \"/home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps\" \"-L\" \"/home/cylon2p0/stm32f3/target/debug/deps\" \"-L\" \"/home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib\" \"-Bstatic\" \"/home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib/libcore-08f9d20805b02a18.rlib\" \"/home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib/libcompiler_builtins-898d35b0b97ca347.rlib\" \"-Tlayout.ld\" \"-Bdynamic\"\nLLVMSymbolizer: error reading file: No such file or directory\n#0 0x00007f61706919cb llvm::sys::PrintStackTrace(llvm::raw_ostream&amp;) (/usr/bin/../lib/libLLVM-6.0.so+0x8759cb)\n#1 0x00007f617068f886 llvm::sys::RunSignalHandlers() (/usr/bin/../lib/libLLVM-6.0.so+0x873886)\n#2 0x00007f617068f9d3 (/usr/bin/../lib/libLLVM-6.0.so+0x8739d3)\n#3 0x00007f616ea2e8f0 __restore_rt (/usr/bin/../lib/libc.so.6+0x368f0)\n#4 0x00007f616f6c280e lld::elf::ARMExidxSentinelSection::empty() const (/usr/bin/../lib/liblldELF.so.6+0x14e80e)\n#5 0x00007f616f707bd6 (/usr/bin/../lib/liblldELF.so.6+0x193bd6)\n#6 0x00007f616f725be5 (/usr/bin/../lib/liblldELF.so.6+0x1b1be5)\n#7 0x00007f616f7286f0 void lld::elf::writeResult&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, false&gt; &gt;() (/usr/bin/../lib/liblldELF.so.6+0x1b46f0)\n#8 0x00007f616f613180 void lld::elf::LinkerDriver::link&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, false&gt; &gt;(llvm::opt::InputArgList&amp;) (/usr/bin/../lib/liblldELF.so.6+0x9f180)\n#9 0x00007f616f5d2155 lld::elf::LinkerDriver::main(llvm::ArrayRef&lt;char const*&gt;, bool) (/usr/bin/../lib/liblldELF.so.6+0x5e155)\n#10 0x00007f616f616598 lld::elf::link(llvm::ArrayRef&lt;char const*&gt;, bool, llvm::raw_ostream&amp;) (/usr/bin/../lib/liblldELF.so.6+0xa2598)\n#11 0x000055c3a5b673a6 (lld+0x13a6)\n#12 0x00007f616ea1b06b __libc_start_main (/usr/bin/../lib/libc.so.6+0x2306b)\n#13 0x000055c3a5b67c0a (lld+0x1c0a)\nStack dump:\n0.      Program arguments: lld -flavor ld.lld -L /home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib /home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps/stm32f3-ecb4f772152518d9.1f6vm61vpmp6og7k.rcgu.o -o /home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps/stm32f3-ecb4f772152518d9 --gc-sections -L /home/cylon2p0/stm32f3/target/thumbv7em-none-eabi/debug/deps -L /home/cylon2p0/stm32f3/target/debug/deps -L /home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib -Bstatic /home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib/libcore-08f9d20805b02a18.rlib /home/cylon2p0/stm32f3/target/sysroot/lib/rustlib/thumbv7em-none-eabi/lib/libcompiler_builtins-898d35b0b97ca347.rlib -Tlayout.ld -Bdynamic \nSegmentation fault (core dumped)\n</code></pre>\n"}, {"tags": ["filter", "iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1530966519, "post_id": 51223216, "comment_id": 89426792, "body": "Those two alternatives unfortunately do not work as well: <code>expected associated type, found integral variable</code> (<a href=\"https://play.rust-lang.org/?gist=74042c8d0d2da9c8e248439b22a9656b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>)"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1530969491, "post_id": 51223216, "comment_id": 89427488, "body": "@Nick Oops, my bad! I mentioned the second problem now."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 3, "last_activity_date": 1530969469, "last_edit_date": 1530969469, "creation_date": 1530966347, "answer_id": 51223216, "question_id": 51223080, "link": "https://stackoverflow.com/questions/51223080/why-doesnt-the-comparison-operation-in-my-iterator-filter-over-generic-types-wo/51223216#51223216", "title": "Why doesn&#39;t the comparison operation in my iterator filter over generic types work?", "body": "<p>You were really close to solving the first problem! You tried:</p>\n\n<ul>\n<li><code>filter(|x| x &gt; 0)</code></li>\n<li><code>filter(|x| **x &gt; 0)</code></li>\n<li><code>filter(|&amp;x| *x &gt; 0)</code></li>\n</ul>\n\n<p><strong>The solution is: <code>filter(|x| *x &gt; 0)</code> <em>or</em> <code>filter(|&amp;x| x &gt; 0)</code>.</strong></p>\n\n<p>To see why, let's take a close look at the error message again:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>9 |         .filter(|x| x &gt; 0);\n  |                         ^ expected reference, found integral variable\n  |\n  = note: expected type `&amp;&lt;I as std::iter::Iterator&gt;::Item`\n             found type `{integer}`\n</code></pre>\n\n<p>It says that it expected the type <code>&amp;&lt;I as std::iter::Iterator&gt;::Item</code> and got the type <code>{integer}</code>. This means that the difference is <em>one</em> reference. You cannot compare <code>&amp;i32</code> to <code>i32</code>. So you can remove the one <code>&amp;</code> by using either <code>*</code> (the dereference operator) or the <code>|&amp;x|</code> pattern (which dereferences the value too). But if you combine both, this has the same effect as <code>**</code>: it tries to dereferences twice. Which is not possible because the type only contains one reference.</p>\n\n<hr>\n\n<p>However, it still doesn't compile due to a more complicated issue. You can read more about it here:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/37296351/trait-for-numeric-functionality-in-rust\">Trait for numeric functionality in Rust</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 0, "creation_date": 1530970639, "post_id": 51223565, "comment_id": 89427779, "body": "You wouldn&#39;t need the whole <code>Num</code> there, though, wouldn&#39;t <code>Zero</code> and <code>PartialOrd</code> be sufficient?"}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1531249451, "post_id": 51223565, "comment_id": 89522895, "body": "I am not quite convinced, when I call the function with a vector of <code>i32</code> the types are the same."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1531249994, "post_id": 51223565, "comment_id": 89523098, "body": "@Nick yes, but the function is not defined <i>only</i> for <code>i32</code> - it is generic and must typecheck for any other type that can be applied to it. Not all types implementing <code>Ord</code> (e.g. <code>char</code>) can be compared with a <code>0</code>."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 3, "last_activity_date": 1530970991, "last_edit_date": 1530970991, "creation_date": 1530969149, "answer_id": 51223565, "question_id": 51223080, "link": "https://stackoverflow.com/questions/51223080/why-doesnt-the-comparison-operation-in-my-iterator-filter-over-generic-types-wo/51223565#51223565", "title": "Why doesn&#39;t the comparison operation in my iterator filter over generic types work?", "body": "<p>The biggest issue (the other problem was covered by Lukas) is that you are comparing the iterator's generic items with an integer while comparisons provided by <code>PartialOrd</code>/<code>Ord</code> only work between the same types:</p>\n\n<pre><code>pub trait Ord: Eq + PartialOrd&lt;Self&gt; {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering;\n    ...\n}\n</code></pre>\n\n<p>In order for a type <code>T</code> to be comparable with a number (in this case <code>0</code>), <code>T</code> must be a number and <code>0</code> needs to be of type <code>T</code> too. The <code>num</code> crate containing useful numeric traits can help here with its <a href=\"https://docs.rs/num/0.2.0/num/trait.Zero.html\" rel=\"nofollow noreferrer\"><code>Zero</code></a> trait that provides a generic <code>0</code>:</p>\n\n<pre><code>extern crate num;\n\nuse num::Zero;\n\nfn inspection&lt;'a, I, T: 'a&gt;(iter: I)\nwhere\n    I: Iterator&lt;Item = &amp;'a T&gt;,\n    T: Zero + PartialOrd // T is an ordered number\n{\n    let inspection = iter.filter(|&amp;x| *x &gt; T::zero()); // T::zero() is 0 of the same type as T\n}\n\nfn main() {\n    let data = vec![1, 2, 3];\n    inspection(data.iter());\n}\n</code></pre>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 342, "favorite_count": 0, "accepted_answer_id": 51223565, "answer_count": 2, "score": 5, "last_activity_date": 1530972842, "creation_date": 1530965412, "last_edit_date": 1530972842, "question_id": 51223080, "link": "https://stackoverflow.com/questions/51223080/why-doesnt-the-comparison-operation-in-my-iterator-filter-over-generic-types-wo", "title": "Why doesn&#39;t the comparison operation in my iterator filter over generic types work?", "body": "<p>I am trying to understand why the following code does not compile (<a href=\"https://play.rust-lang.org/?gist=3e93c5b7784f83bd3c79e295f52e3948&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>fn inspection&lt;I&gt;(iter: I)\nwhere \n    I: Iterator, \n    I::Item: Ord,\n{\n    let inspection = iter\n        .filter(|x| x &gt; 0);\n}\n\nfn main() {\n    let data = vec![1, 2, 3];\n    inspection(data.iter()); // or inspection(data.into_iter());\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:9:25\n  |\n9 |         .filter(|x| x &gt; 0);\n  |                         ^ expected reference, found integral variable\n  |\n  = note: expected type `&amp;&lt;I as std::iter::Iterator&gt;::Item`\n             found type `{integer}`\n</code></pre>\n\n<p>I tried to follow the various alternatives (by de-referencing the element) as explained <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter\" rel=\"nofollow noreferrer\">here</a> without success.</p>\n\n<p>First attempt: </p>\n\n<pre><code>.filter(|x| **x &gt; 0); \n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0614]: type `&lt;I as std::iter::Iterator&gt;::Item` cannot be dereferenced\n  --&gt; src/main.rs:13:21\n   |\n13 |         .filter(|x| **x &gt; 0);\n   |  \n</code></pre>\n\n<p>Second attempt:</p>\n\n<pre><code>.filter(|&amp;x| *x &gt; 0);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0614]: type `&lt;I as std::iter::Iterator&gt;::Item` cannot be dereferenced\n  --&gt; src/main.rs:13:22\n   |\n13 |         .filter(|&amp;x| *x &gt; 0);\n   |    \n</code></pre>\n\n<p>Why is the program not compiling?</p>\n"}, {"tags": ["rust", "trait-objects"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530971991, "post_id": 51222971, "comment_id": 89428110, "body": "<i>The latest stable version of Rust (1.27) allows</i> \u2014 This has been allowed <b>since Rust 1.0</b>. The only thing that&#39;s new is the literal <code>dyn</code> keyword. Your code behaves the same without it (<code>impl T2 for T1 { &#47;* ... *&#47; }</code>)."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530972398, "post_id": 51223822, "comment_id": 89428197, "body": "<a href=\"https://stackoverflow.com/q/34438755/155423\">Why would I implement methods on a trait instead of as part of the trait?</a>; <a href=\"https://stackoverflow.com/q/28799372/155423\">When should I not implement a trait for references to implementors of that trait?</a>."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1531054432, "post_id": 51223822, "comment_id": 89443452, "body": "There is of cause a use: as an &quot;extended&quot; trait of <code>T1</code> so we can call methods from <code>T2</code> rather than <code>T1</code>, like the way I wrote <code>t12.f2()</code>. But if this is the only reason we should use <code>impl&lt;T&gt; T2 for T where T: T1</code> instead..."}], "tags": [], "owner": {"reputation": 28979, "user_id": 266720, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/7c9333e1816aefc7fc97f64b09afe05c?s=128&d=identicon&r=PG", "display_name": "Vi.", "link": "https://stackoverflow.com/users/266720/vi"}, "is_accepted": false, "score": 3, "last_activity_date": 1530972162, "last_edit_date": 1530972162, "creation_date": 1530971220, "answer_id": 51223822, "question_id": 51222971, "link": "https://stackoverflow.com/questions/51222971/how-do-i-create-a-trait-object-from-another-trait-object/51223822#51223822", "title": "How do I create a trait object from another trait object?", "body": "<p>You are implementing <code>T2</code> for a trait object itself (<code>dyn T1</code>), but trying to use it for a <em>reference</em> to a trait object (<code>&amp;dyn T1</code>).</p>\n\n<p>Try <code>impl&lt;'a&gt; T2 for &amp;'a dyn T1 { ... }</code> instead. This means \"For any lifetime <code>'a</code>, implement <code>T2</code> for a reference that is valid for <code>'a</code> and refers to a <code>T1</code>-trait object\".<br>\nI don't know any good use of <code>impl ... for dyn ...</code> itself.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9797c6d08f2f3eaa0c870a22fd82499e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Adjusted code from the question in the playground</a></p>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 283, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1530972162, "creation_date": 1530964507, "last_edit_date": 1530971904, "question_id": 51222971, "link": "https://stackoverflow.com/questions/51222971/how-do-i-create-a-trait-object-from-another-trait-object", "title": "How do I create a trait object from another trait object?", "body": "<p>The latest stable version of Rust (1.27) allows implementing a trait for trait objects (<code>dyn Trait</code>), so I tried the <a href=\"https://play.rust-lang.org/?gist=b17adb1d0d6f844498661b21eb0b7358&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">following</a>:</p>\n\n<pre><code>trait T1 {\n    fn f1(&amp;self);\n}\ntrait T2 {\n    fn f2(&amp;self);\n}\nimpl T2 for dyn T1 {\n    fn f2(&amp;self) {\n        self.f1()\n    }\n}\nstruct S();\nimpl T1 for S {\n    fn f1(&amp;self) {}\n}\n\nfn main() {\n    let t1 = S();\n    let t12: &amp;T1 = &amp;t1;\n    t12.f2();\n    let t2: &amp;T2 = &amp;t12;\n    t2.f2();\n}\n</code></pre>\n\n<p>The above code results in an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;T1: T2` is not satisfied\n  --&gt; src/main.rs:21:19\n   |\n21 |     let t2: &amp;T2 = &amp;t12;\n   |                   -^^^\n   |                   |\n   |                   the trait `T2` is not implemented for `&amp;T1`\n   |                   help: consider removing 1 leading `&amp;`-references\n   |\n   = help: the following implementations were found:\n             &lt;T1 + 'static as T2&gt;\n   = note: required for the cast to the object type `T2`\n</code></pre>\n\n<p>This is confusing as <code>&amp;T1</code> is an instance of <code>dyn T1</code> and so has a <code>T2</code> implementation. We can even witness this by the fact that we can call <code>f2</code> on <code>t12</code> directly, as removing the last two lines in <code>main</code> makes it compile.</p>\n\n<p>Is it possible to create a trait object from a trait object that marked as a different trait?</p>\n"}, {"tags": ["static", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "edited": false, "score": 0, "creation_date": 1530974886, "post_id": 51224196, "comment_id": 89428780, "body": "Okay, I&#39;ll get it I think. Tell me if I am wrong but to recapture: because I use unsafe block to return a reference the rust compiler will not check if there are other mutable when returning one a new one."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "edited": false, "score": 0, "creation_date": 1530975344, "post_id": 51224196, "comment_id": 89428907, "body": "@TimonPost because you use <code>unsafe</code> which essentially means &quot;I know what I&#39;m doing, trust me&quot;, the compiler trusts that you know what you are doing. Those checks are then disabled for the duration of the block."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1533015346, "last_edit_date": 1533015346, "creation_date": 1530974315, "answer_id": 51224196, "question_id": 51222712, "link": "https://stackoverflow.com/questions/51222712/why-is-it-possible-to-have-multiple-mutable-references-with-static-lifetime-in-s/51224196#51224196", "title": "Why is it possible to have multiple mutable references with static lifetime in same scope", "body": "<p>There is only <em>one</em> reason for this: <strong>you have lied to the compiler</strong>. You are misusing <code>unsafe</code> code and have violated Rust's core tenet about mutable aliasing. You state that you are aware of the borrowing rules, but then you <em>go out of your way to break them</em>!</p>\n\n<p><code>unsafe</code> code gives you <a href=\"https://doc.rust-lang.org/reference/unsafety.html\" rel=\"nofollow noreferrer\">a small set of extra abilities</a>, but in exchange <strong>you are now responsible</strong> for avoiding every possible kind of <a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"nofollow noreferrer\">undefined behavior</a>. Multiple mutable aliases are undefined behavior.</p>\n\n<p>The fact that there's a <code>static</code> involved is completely orthogonal to the problem. You can create multiple mutable references to anything (or nothing) with whatever lifetime you care about:</p>\n\n<pre><code>fn foo() -&gt; (&amp;'static i32, &amp;'static i32, &amp;'static i32) {\n    let somewhere = 0x42 as *mut i32;\n    unsafe { (&amp;*somewhere, &amp;*somewhere, &amp;*somewhere) }\n}\n</code></pre>\n\n<hr>\n\n<p>In your original code, you state that calling <code>get_b</code> is safe for anyone to do any number of times. This is not true. The entire function should be marked unsafe, along with copious documentation about what is and is not allowed to prevent triggering unsafety. Any <code>unsafe</code> block should then have corresponding comments explaining why <em>that</em> specific usage doesn't break the rules needed. All of this makes creating and using <code>unsafe</code> code more tedious than safe code, but compared to C where <em>every</em> line of code is conceptually <code>unsafe</code>, it's still a lot better.</p>\n\n<p>You should only use <code>unsafe</code> code when you know better than the compiler. For most people in most cases, there is very little reason to create <code>unsafe</code> code. </p>\n\n<p>A concrete reminder from <a href=\"https://twitter.com/ManishEarth/status/901269205718155264/photo/1\" rel=\"nofollow noreferrer\">the Firefox developers</a>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/AJNGO.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/AJNGO.jpg\" alt=\"zoomed in &quot;this tall to use unsafe&quot; sign\"></a>\n<a href=\"https://i.stack.imgur.com/w9XMh.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/w9XMh.jpg\" alt=\"zoomed out, showing sign is 8+ ft tall\"></a></p>\n"}], "owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 723, "favorite_count": 1, "accepted_answer_id": 51224196, "answer_count": 1, "score": 2, "last_activity_date": 1533015346, "creation_date": 1530962694, "last_edit_date": 1530973845, "question_id": 51222712, "link": "https://stackoverflow.com/questions/51222712/why-is-it-possible-to-have-multiple-mutable-references-with-static-lifetime-in-s", "title": "Why is it possible to have multiple mutable references with static lifetime in same scope", "body": "<p>Why can I have multiple mutable references to a static type in the same scope?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1b6f7813c35facba71783ca15ae1b4e6\" rel=\"nofollow noreferrer\">My code</a>: </p>\n\n<pre><code>static mut CURSOR: Option&lt;B&gt; = None;\n\nstruct B {\n    pub field: u16,\n}\n\nimpl B {\n    pub fn new(value: u16) -&gt; B {\n        B { field: value }\n    }\n}\n\nstruct A;\n\nimpl A {\n    pub fn get_b(&amp;mut self) -&gt; &amp;'static mut B {\n        unsafe {\n            match CURSOR {\n                Some(ref mut cursor) =&gt; cursor,\n                None =&gt; {\n                    CURSOR= Some(B::new(10));\n                    self.get_b()\n                }\n            }\n        }\n    }\n}\n\nfn main() {\n    // first creation of A, get a mutable reference to b and change its field.\n    let mut a = A {};\n    let mut b = a.get_b();\n    b.field = 15;\n    println!(\"{}\", b.field);\n\n    // second creation of A, a the mutable reference to b and change its field.\n    let mut a_1 = A {};\n    let mut b_1 = a_1.get_b();\n    b_1.field = 16;\n    println!(\"{}\", b_1.field);\n\n    // Third creation of A, get a mutable reference to b and change its field.\n    let mut a_2 = A {};\n    let b_2 = a_2.get_b();\n    b_2.field = 17;\n    println!(\"{}\", b_1.field);\n\n    // now I can change them all\n    b.field = 1;\n    b_1.field = 2;\n    b_2.field = 3;\n}\n</code></pre>\n\n<p>I am aware of the <a href=\"https://doc.rust-lang.org/1.8.0/book/references-and-borrowing.html\" rel=\"nofollow noreferrer\">borrowing</a> rules</p>\n\n<ul>\n<li>one or more references (<code>&amp;T</code>) to a resource,</li>\n<li>exactly one mutable reference (<code>&amp;mut T</code>).</li>\n</ul>\n\n<p>In the above code, I have a struct <code>A</code> with the <code>get_b()</code> method for returning a mutable reference to <code>B</code>. With this reference, I can mutate the fields of struct <code>B</code>. </p>\n\n<p>The strange thing is that more than one mutable reference can be created in the same scope (<code>b, b_1, b_2</code>) and I can use all of them to modify <code>B</code>. </p>\n\n<p>Why can I have multiple mutable references with the <code>'static</code> lifetime shown in <code>main()</code>?</p>\n\n<p>My attempt at explaining this is behavior is that because I am returning a mutable reference with a <code>'static</code> lifetime. Every time I call <code>get_b()</code> it is returning the same mutable reference. And at the end, it is just one identical reference. Is this thought right? Why am I able to use all of the mutable references got from <code>get_b()</code> individually?</p>\n"}, {"tags": ["rust", "embedded", "cortex-m", "stm32f4", "openocd"], "comments": [{"owner": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 1, "creation_date": 1530939237, "post_id": 51218358, "comment_id": 89420955, "body": "Show the disassembly of the code at the breakpoint.  It is possible that the code contains a direct beakpoint instruction in a conditional of the form <code>if debugger attached then break</code>  Also <a href=\"https://michaelwoerister.github.io/2013/09/27/what-you-call-the-present.html\" rel=\"nofollow noreferrer\">this</a> may be relevant - specifically the part about changing the start-on-startup symbol from <code>main</code> to <code>helloworld::main</code>"}, {"owner": {"reputation": 3647, "user_id": 371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e1caa49eebfe37ffe3ef64e19364b0b3?s=128&d=identicon&r=PG", "display_name": "Silly Freak", "link": "https://stackoverflow.com/users/371191/silly-freak"}, "reply_to_user": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 0, "creation_date": 1531127713, "post_id": 51218358, "comment_id": 89462578, "body": "The <code>cortex-m-quickstart</code> uses <code>#![no_main]</code> and <code>entry!(func);</code> to define the entry function into the binary, so I don&#39;t think the problem is with a symbol name. But I&#39;m sure you&#39;re right that I&#39;ll see a breakpoint in the disassembly; probably from semihosting as Turbo J wrote. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 3647, "user_id": 371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e1caa49eebfe37ffe3ef64e19364b0b3?s=128&d=identicon&r=PG", "display_name": "Silly Freak", "link": "https://stackoverflow.com/users/371191/silly-freak"}, "edited": false, "score": 0, "creation_date": 1531058257, "post_id": 51232167, "comment_id": 89444463, "body": "That must have been it. After removing semihosting, the message disappears! Lucky this detail appeared in the question..."}], "tags": [], "owner": {"reputation": 7207, "user_id": 410847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a354e99dd64adf823aa72c4ee22a1fc?s=128&d=identicon&r=PG", "display_name": "Turbo J", "link": "https://stackoverflow.com/users/410847/turbo-j"}, "is_accepted": true, "score": 2, "last_activity_date": 1531054169, "creation_date": 1531054169, "answer_id": 51232167, "question_id": 51218358, "link": "https://stackoverflow.com/questions/51218358/one-binary-halts-at-breakpoint-the-other-doesnt-no-breakpoint-is-defined/51232167#51232167", "title": "One binary halts at breakpoint, the other doesn&#39;t - no breakpoint is defined", "body": "<blockquote>\n  <p>I get the Hello, World! printout through semihosting</p>\n</blockquote>\n\n<p>Check the semihosting documentation. Last time I checked, semihosting works using breakpoints on several ARM targets. </p>\n\n<p>Your C program probably does not use semihosting at all, so no breakpoints are used.</p>\n"}], "owner": {"reputation": 3647, "user_id": 371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e1caa49eebfe37ffe3ef64e19364b0b3?s=128&d=identicon&r=PG", "display_name": "Silly Freak", "link": "https://stackoverflow.com/users/371191/silly-freak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 51232167, "answer_count": 1, "score": 0, "last_activity_date": 1531054169, "creation_date": 1530916250, "last_edit_date": 1530918226, "question_id": 51218358, "link": "https://stackoverflow.com/questions/51218358/one-binary-halts-at-breakpoint-the-other-doesnt-no-breakpoint-is-defined", "title": "One binary halts at breakpoint, the other doesn&#39;t - no breakpoint is defined", "body": "<p>I'm trying to run a Rust Hello World on my STM32F401xB. I have a working C program for comparison (different functionality, but it verifies the flashing toolchain) and use the same openocd commands to flash both programs onto the controller.</p>\n\n<p>When I flash the C program, I get:</p>\n\n<pre><code>...\n** Verified OK **\nadapter speed: 2002 kHz\n</code></pre>\n\n<p>When I flash the Rust program, I get the following:</p>\n\n<pre><code>...\n** Verified OK **\nadapter speed: 2002 kHz\ntarget halted due to breakpoint, current mode: Thread\nxPSR: 0x21000000 pc: 0x08002f42 msp: 0x2000ffa0\n</code></pre>\n\n<p>note the two extra lines. When I connect using <code>gdb</code> and <code>continue</code>, I get the <code>Hello, World!</code> printout through semihosting, so the program does in principle execute fine - it just pauses before main even though I have not set a breakpoint. My procedure for both binaries is the same. What could be going on? Why are the two binaries behaving differently?</p>\n\n<hr>\n\n<ul>\n<li>I used <code>svd2rust</code> to create a <code>stm32f40x</code> crate from the official <code>stm32f401.svd</code></li>\n<li>I used the <code>cortex-m-quickstart</code> and basically the <code>hello.rs</code> example - configuring <code>memory.x</code> and adding the dependency to <code>stm32f40x</code> of course</li>\n<li>there are no special configurations (that I would have identified) in my project, and the same behavior happens for debug and release builds.</li>\n</ul>\n"}, {"tags": ["time", "rust", "duration"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1530938862, "post_id": 51217774, "comment_id": 89420894, "body": "<a href=\"https://doc.rust-lang.org/1.3.0/std/time/struct.Duration.html#method.subsec_nanos\" rel=\"nofollow noreferrer\"><code>Duration::subec_nanos</code></a> has been stable since 1.3.0."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530971346, "post_id": 51220333, "comment_id": 89427952, "body": "While this (maybe) answers the question, showing an example that demonstrates how to get subsecond duration would be more useful."}], "tags": [], "owner": {"reputation": 42, "user_id": 4479201, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bc8d93c06a47f2314e207225a71c9d?s=128&d=identicon&r=PG&f=1", "display_name": "wolandr", "link": "https://stackoverflow.com/users/4479201/wolandr"}, "is_accepted": false, "score": 0, "last_activity_date": 1530971310, "last_edit_date": 1530971310, "creation_date": 1530942585, "answer_id": 51220333, "question_id": 51217774, "link": "https://stackoverflow.com/questions/51217774/how-to-time-the-duration-of-an-operation-with-subsecond-accuracy/51220333#51220333", "title": "How to time the duration of an operation with subsecond accuracy?", "body": "<p>While you are stuck on an old Rust version, you could try the popular <a href=\"https://crates.io/crates/time\" rel=\"nofollow noreferrer\">time</a> library for date-time calculation. </p>\n"}, {"tags": [], "owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "is_accepted": false, "score": 0, "last_activity_date": 1530971520, "last_edit_date": 1530971520, "creation_date": 1530950286, "answer_id": 51221156, "question_id": 51217774, "link": "https://stackoverflow.com/questions/51217774/how-to-time-the-duration-of-an-operation-with-subsecond-accuracy/51221156#51221156", "title": "How to time the duration of an operation with subsecond accuracy?", "body": "<p>There appears to be a problem with upgrading and installing the current version on Raspberry Pi see:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/1403\" rel=\"nofollow noreferrer\">rustup issue #1403</a> </li>\n<li><a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/1410\" rel=\"nofollow noreferrer\">rustup issue #1410</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/49462\" rel=\"nofollow noreferrer\">Rust issue #49462</a></li>\n</ul>\n\n<p>After I looked at the full error messages, I noticed that there are two errors:</p>\n\n<ol>\n<li><p>initially was due to using <code>from_nanos()</code> to set the start time for each frame.</p></li>\n<li><p>When I switched to using micros or millis I got a different error due to <code>subsec_micros()</code> or <code>subsec_millis()</code></p></li>\n</ol>\n\n<p>As <a href=\"https://stackoverflow.com/questions/51217774/how-to-find-sub-second-duration-in-rust#comment89420894_51217774\">@DK says</a>, <code>subsec_nanos()</code> is stable in 1.25.0 and the eventual solution was to use that along with <code>Duration::new()</code></p>\n\n<pre><code>let mut del = self.start.elapsed().subsec_nanos();\nif del &lt; self.target_frame_tm {\n    let delay = Duration::new(0, (self.target_frame_tm - del) as u32);\n    sleep(delay);\n    del = self.target_frame_tm;\n}\n</code></pre>\n"}], "owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 238, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1530971520, "creation_date": 1530912158, "last_edit_date": 1530971291, "question_id": 51217774, "link": "https://stackoverflow.com/questions/51217774/how-to-time-the-duration-of-an-operation-with-subsecond-accuracy", "title": "How to time the duration of an operation with subsecond accuracy?", "body": "<p>I want to find the elapsed time of an OpenGL frame. I was using</p>\n\n<pre><code>self.start.elapsed().subsec_nanos(); // self.start is a std::time::Instant\n</code></pre>\n\n<p>and it worked fine on my laptop. When I put the code on a Raspberry Pi it wouldn't compile because <code>subsec_nanos()</code> and <code>from_nanos()</code> are unstable. I tried micros and millis but they seem to be unstable too. I've been googling this for an hour now and can't find any other way of getting elapsed time less than a second. Have I missed something obvious?</p>\n\n<p>On my laptop I am running cargo 1.27.0 and rustc 1.27.0. On the RPi they are\ncargo 0.26.0 and rustc 1.25.0. I tried <code>rustup update</code> but got <code>stable-armf7...update failed</code></p>\n\n<p>I get <code>error[E0658] use of unstable library feature 'duration_extras'... (see #46507)</code>\nor <code>'duration_from_micros'... (see #44400)</code></p>\n\n<p>I don't want to use nightly or inflict complicated installation requirements on anyone trying the code. I want them to be able to use the standard vanilla rustup install process.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530903738, "post_id": 51216284, "comment_id": 89413760, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51216284/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 385, "user_id": 5577384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7265224a43bec8e07c971f2b11273e9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam R", "link": "https://stackoverflow.com/users/5577384/adam-r"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530909976, "post_id": 51216284, "comment_id": 89416018, "body": "Thank you - using lazy-static with a Mutex seems to be working.  I&#39;m good with marking this already answered."}], "owner": {"reputation": 385, "user_id": 5577384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7265224a43bec8e07c971f2b11273e9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam R", "link": "https://stackoverflow.com/users/5577384/adam-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1470, "favorite_count": 0, "closed_date": 1530910211, "answer_count": 0, "score": 4, "last_activity_date": 1530913782, "creation_date": 1530903529, "last_edit_date": 1530903697, "question_id": 51216284, "link": "https://stackoverflow.com/questions/51216284/how-to-store-global-state-in-rust-when-using-wasm-bindgen", "closed_reason": "Duplicate", "title": "How to store global state in Rust when using wasm-bindgen?", "body": "<p>I'm attempting to write a data store in Rust that receives objects from JavaScript across the wasm-bindgen boundary and stores them for later retrieval.  This is a simplified version of what I was hoping would work:</p>\n\n<pre><code>static mut MAP: HashMap&lt;i32, String&gt; = HashMap::new();\n\n#[wasm_bindgen]\npub fn add_value(index: i32, value: String) {\n    unsafe {\n        MAP.insert(index, value);\n    }\n}\n\n#[wasm_bindgen]\npub fn get_value(index: i32) -&gt; String {\n    unsafe {\n        (*MAP.get(&amp;index).unwrap()).clone()\n    }\n}\n</code></pre>\n\n<p>However I get this error from the Rust compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n</code></pre>\n\n<p>How can I store state so that subsequent calls across the wasm-bindgen boundary can retrieve previously stored values?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 5135901, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NobVX.jpg?s=128&g=1", "display_name": "Mohrcore", "link": "https://stackoverflow.com/users/5135901/mohrcore"}, "edited": false, "score": 0, "creation_date": 1531069319, "post_id": 51225297, "comment_id": 89447468, "body": "Unfortunately this is not a solution to my problem.  Because <code>C</code> hold a reference with a lifetime <code>&#39;c</code> it can&#39;t be passed like that, unless I can guarantee that <code>&#39;c</code> outlives <code>&#39;scope</code>, by specifying lifetime constraints (<code>&#39;c: &#39;scope</code>). These would allow only <code>C</code> objects with <code>&#39;c</code> lifetime, that outlives <code>&#39;scope</code> to implement <code>INeedSForSomething</code> trait. Without those constraints, any reference held by <code>C</code> is expected byt he compiler to be <code>&#39;static</code>."}, {"owner": {"reputation": 23, "user_id": 5135901, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NobVX.jpg?s=128&g=1", "display_name": "Mohrcore", "link": "https://stackoverflow.com/users/5135901/mohrcore"}, "edited": false, "score": 0, "creation_date": 1531069367, "post_id": 51225297, "comment_id": 89447478, "body": "The problem is that I can&#39;t seem to find any way to tell the compiler that the <code>&#39;scope</code> lifetime declared as part of <code>B::do_scoped_stuff_in_a</code> is actually the anonymous lifetime of <code>&amp;Scope</code> passed to the closure."}], "tags": [], "owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "is_accepted": false, "score": 0, "last_activity_date": 1530983474, "last_edit_date": 1530983474, "creation_date": 1530983363, "answer_id": 51225297, "question_id": 51215773, "link": "https://stackoverflow.com/questions/51215773/how-to-pass-closure-argument-to-a-method-of-a-trait-with-a-lifetime-parameter/51225297#51225297", "title": "How to pass closure argument to a method of a trait with a lifetime parameter?", "body": "<p>Perhaps you do not need a lifetime; maybe this code is ok for you?</p>\n\n<pre><code>impl B {\n    fn do_scoped_stuff_in_a&lt;'a: 'scope, 'b: 'scope, 'scope&gt;(\n        &amp;'a self,\n        arg: &amp;'b Box&lt;INeedSForSomething&gt;,\n    ) {\n        self.a.scope(|s: &amp;Scope| {\n            arg.need_s(s);\n        });\n    }\n}\n\ntrait INeedSForSomething {\n    fn need_s(&amp;self, scope: &amp;Scope);\n}\n\nstruct C&lt;'c&gt; {\n    i_have_a_reference_with_some_lifetime: &amp;'c String,\n}\n\nimpl&lt;'c&gt; INeedSForSomething for C&lt;'c&gt; {\n    fn need_s(&amp;self, s: &amp;Scope) {\n        //...\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 23, "user_id": 5135901, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NobVX.jpg?s=128&g=1", "display_name": "Mohrcore", "link": "https://stackoverflow.com/users/5135901/mohrcore"}, "is_accepted": true, "score": 1, "last_activity_date": 1532045928, "last_edit_date": 1532045928, "creation_date": 1531078052, "answer_id": 51235332, "question_id": 51215773, "link": "https://stackoverflow.com/questions/51215773/how-to-pass-closure-argument-to-a-method-of-a-trait-with-a-lifetime-parameter/51235332#51235332", "title": "How to pass closure argument to a method of a trait with a lifetime parameter?", "body": "<p>I think what I was trying to achieve is just not possible in safe Rust.</p>\n\n<p>Any argument passed to a closure is valid as long as it outlives it or is moved into it. The type signatures used for passing closures (<code>FnOnce</code>, <code>FnMut</code> and such...) omit any generic parameters (including lifetimes) of objects referenced by the closure. Given these two facts it's impossible for a compiler to compare lifetime of the argument (<code>&amp;Scope</code>) passed into the closure  with a lifetime parameter of object (<code>C&lt;'c&gt;</code>) referenced by the closure.</p>\n\n<p>Here's an example of what I mean: let's modify <code>A::scope</code> to take a reference to an already created <code>Scope</code> object instead of creating one inside of th function's body:</p>\n\n<pre><code>impl A {\n    fn scope&lt;F&gt;(&amp;self, s: &amp;Scope, f: F)\n    where\n        F: FnOnce(&amp;Scope),\n    {\n        f(s);\n    }\n}\n</code></pre>\n\n<p>We can't guarantee that the lifetime of <code>s</code> will be outlived by some lifetime parameter of whatever object is captured by the <code>f</code> closure, because this lifetime parameter cannot be retreived from <code>FnOnce(&amp;Scope)</code> signature of <code>f</code>.</p>\n\n<p>I can tell that in this particular case calling the closure should be safe - <code>s</code> will always be outlived by any lifetime parameters of objects captured by the closure, because it's created and destroyed in the same call where the closure is executed giving it a narrower scope than any lifetime parameter an object referenced by <code>arg</code> can possibly have.</p>\n\n<p>So I've got rid of all thse <code>scope</code> lifetimes as they are useless in this case and I tried using <code>unsafe</code> to transmute <code>arg</code> to be <code>'static</code> just before referencing it inside the closure. The solution has worked for me pretty well.</p>\n\n<pre><code>struct A {\n    //...\n}\n\nstruct Scope {\n    //...\n}\n\nimpl A {\n    fn scope&lt;F&gt;(&amp;self, f: F)\n    where\n        F: FnOnce(&amp; Scope),\n    {\n        let scope = Scope {};\n        f(&amp;scope);\n    }\n}\n\nstruct B {\n    a: A,\n}\n\nimpl B {\n    fn do_scoped_stuff_in_a&lt;'a&gt;(\n        &amp;self,\n        arg: &amp;'a INeedSForSomething,\n    ) {\n        unsafe {\n            let static_arg = std::mem::transmute::&lt;&amp;'a INeedSForSomething, &amp;'static INeedSForSomething&gt;(arg);\n            self.a.scope(|s| {\n                static_arg.need_s(s);\n            });\n        }\n    }\n}\n\ntrait INeedSForSomething {\n    fn need_s(&amp;self, scope: &amp;Scope);\n}\n\nstruct C&lt;'c&gt; {\n    i_have_a_reference_with_some_lifetime: &amp;'c String,\n}\n\nimpl&lt;'c&gt; INeedSForSomething for C&lt;'c&gt; {\n    fn need_s(&amp;self, s: &amp;Scope) {\n        //...\n    }\n}\n\nfn main() {\n    let s = String::new();\n    let c = C {\n        i_have_a_reference_with_some_lifetime: &amp;s\n    };\n\n    let b = B { a: A {} };\n    b.do_scoped_stuff_in_a(&amp;c);\n}\n</code></pre>\n\n<p>I've already implemented the solution in my program to solve the actual problem related to <a href=\"https://crates.io/crates/rlua\" rel=\"nofollow noreferrer\">rlua</a> crate and it seems to work fine too.</p>\n"}], "owner": {"reputation": 23, "user_id": 5135901, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NobVX.jpg?s=128&g=1", "display_name": "Mohrcore", "link": "https://stackoverflow.com/users/5135901/mohrcore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 803, "favorite_count": 0, "accepted_answer_id": 51235332, "answer_count": 2, "score": 0, "last_activity_date": 1532047444, "creation_date": 1530900642, "last_edit_date": 1532047444, "question_id": 51215773, "link": "https://stackoverflow.com/questions/51215773/how-to-pass-closure-argument-to-a-method-of-a-trait-with-a-lifetime-parameter", "title": "How to pass closure argument to a method of a trait with a lifetime parameter?", "body": "<p>I am trying to use <a href=\"https://crates.io/crates/rlua\" rel=\"nofollow noreferrer\">rlua</a> to add Lua scripting to my application but I've run into a problem with closures and lifetimes.</p>\n\n<p>I have a method <code>scope</code> that accepts a closure as its argument. The closure takes one argument <code>s</code>. I can capture other objects in the closure and I can even pass <code>s</code> to their methods, provided that I've set up the lifetimes properly.</p>\n\n<p>I want to abstract these objects by using a trait <code>INeedSForSomething</code> that provides a method <code>need_s</code> that would accept <code>s</code>. This is where the problems start to rise. </p>\n\n<p><code>scope</code> is called inside of another method <code>do_scoped_stuff_in_a</code>. Ideally, I would like to pass a <code>Box&lt;INeedSForSomething&gt;</code> into this method and call <code>need_s</code> with <code>s</code> as its argument. The problem is that the <code>INeedSForSomething</code> trait has to specify <code>s</code>'s lifetime in order to specify its relation to another lifetime of a reference contained inside the implementor. It's impossible to make this lifetime a generic parameter of <code>need_s</code> method; if it was possible the rest of the code would compile fine. </p>\n\n<p>Unfortunately, I can't figure out how am I supposed to provide <code>INeedSForSomething</code> with a lifetime that is related to closure argument <code>s</code> which is unknown outside of the <code>do_scoped_stuff_in_a</code> method. </p>\n\n<p>I thought I made sure that by writing lifetimes like that: <code>&lt;'a: 'scope, 'b: 'scope, 'scope&gt;</code> the <code>'scope</code> lifetime would be suitable fo the closure argument, but it looks like I'm missing something here...</p>\n\n<p>Here's the full code I wrote:</p>\n\n<pre><code>struct A {\n    //...\n}\n\nstruct Scope {\n    //...\n}\n\nimpl A {\n    fn scope&lt;F&gt;(&amp;self, f: F)\n    where\n        F: FnOnce(&amp;Scope),\n    {\n        let scope = Scope {};\n        f(&amp;scope);\n    }\n}\n\nstruct B {\n    a: A,\n}\n\nimpl B {\n    fn do_scoped_stuff_in_a&lt;'a: 'scope, 'b: 'scope, 'scope&gt;(\n        &amp;'a self,\n        arg: &amp;'b Box&lt;INeedSForSomething&lt;'scope&gt;&gt;,\n    ) {\n        self.a.scope(|s| {\n            arg.need_s(s);\n        });\n    }\n}\n\ntrait INeedSForSomething&lt;'scope&gt; {\n    fn need_s(&amp;self, scope: &amp;'scope Scope);\n}\n\nstruct C&lt;'c&gt; {\n    i_have_a_reference_with_some_lifetime: &amp;'c String,\n}\n\nimpl&lt;'c: 'scope, 'scope&gt; INeedSForSomething&lt;'scope&gt; for C&lt;'c&gt; {\n    fn need_s(&amp;self, s: &amp;'scope Scope) {\n        //...\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src\\main.rs:29:24\n   |\n29 |             arg.need_s(s);\n   |                        ^\n   |\nnote: ...the reference is valid for the lifetime 'scope as defined on the method body at 24:5...\n  --&gt; src\\main.rs:24:5\n   |\n24 | /     fn do_scoped_stuff_in_a&lt;'a: 'scope, 'b: 'scope, 'scope&gt;(\n25 | |         &amp;'a self,\n26 | |         arg: &amp;'b Box&lt;INeedSForSomething&lt;'scope&gt;&gt;,\n27 | |     ) {\n...  |\n30 | |         });\n31 | |     }\n   | |_____^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #2 defined on the body at 28:22\n  --&gt; src\\main.rs:28:22\n   |\n28 |           self.a.scope(|s| {\n   |  ______________________^\n29 | |             arg.need_s(s);\n30 | |         });\n   | |_________^\n</code></pre>\n\n<p>To give insight for those who are familiar with rlua...</p>\n\n<p>I'm trying to create a system where I would have a trait that would allow me to register the implementor as a global table of callbacks to the methods of the implementor inside of a closure passed to <code>rlua::scope</code>. I'm doing this instead of creating <code>UserData</code> with methods, because I want to avoid the restriction that says <code>UserData</code> must be <code>'static</code>. The method declared by the trait needs to take a reference to a <code>rlua::Lua</code> object as well as <code>rlua::Scope</code> passed to the closure. Unfortunately, if the implementor requires another lifetime (because it contains references to other objects for example) I need to make sure that the lifetime for <code>rlua::Scope</code> is within the bounds of these lifetimes. This leads me to a situation where I have to declare <code>rlua::Scope</code>'s lifetime as a part of trait declaration.</p>\n\n<p>Maybe this isn't a good approach to begin with, so let me know if you have any better ideas on how to create Lua objects that would allow me to mutate state of Rust's objects that are not <code>'static</code>.</p>\n"}, {"tags": ["javascript", "garbage-collection", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1530892251, "post_id": 51213546, "comment_id": 89408722, "body": "Graphs don&#39;t need garbage collection, FWIW, depending on your meaning of &quot;garbage collection&quot;. Rust does not have a garbage collector, yet still has graphs."}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530897662, "post_id": 51213546, "comment_id": 89411319, "body": "Graphs are only an example of a data structure that can benefit from using a gc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530897775, "post_id": 51213546, "comment_id": 89411360, "body": "There&#39;s a difference between &quot;structures that <b>need</b> garbage collection&quot; and &quot;structure that can <b>benefit</b> from&quot;. You stated <i>need</i> and I&#39;m pointing out that&#39;s not correct."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1530899809, "post_id": 51213546, "comment_id": 89412277, "body": "I guess you would need to write the code for the graph in JS, as you cannot instantiate the JS objects from Rust (or can you?)"}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "edited": false, "score": 0, "creation_date": 1530907978, "post_id": 51213546, "comment_id": 89415279, "body": "It&#39;s possible to use the <code>js!</code> macro and initialize the JS objects from Rust."}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "edited": false, "score": 0, "creation_date": 1530908343, "post_id": 51213546, "comment_id": 89415418, "body": "I have two concerns: how the the gc in JS deals with objects that it passes to Rust and possible delays when accessing JS objects in Rust."}], "answers": [{"comments": [{"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "edited": false, "score": 0, "creation_date": 1531311226, "post_id": 51233864, "comment_id": 89547627, "body": "What about the JS reclaiming memory of an object it passed to Rust. Can this happen?"}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 2, "last_activity_date": 1531066377, "creation_date": 1531066377, "answer_id": 51233864, "question_id": 51213546, "link": "https://stackoverflow.com/questions/51213546/can-i-use-javascript-objects-passed-to-rust-to-implement-structures-that-need-ga/51233864#51233864", "title": "Can I use JavaScript objects passed to Rust to implement structures that need garbage collection?", "body": "<p>It depends on cost of JS&lt;>Wasm interaction, and the way you're going to use the data. </p>\n\n<p>To get definitive answer you'd have to try a specific algorithm and benchmark it, but in general I don't expect it to be beneficial.</p>\n\n<p>For complex object graphs in Rust you'd use <code>Rc&lt;RefCell&lt;\u2026&gt;&gt;</code>. It has a relatively low overhead, so you'd need to have very GC-friendly usage pattern to beat it, especially given overhead of JS objects.</p>\n"}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1531066377, "creation_date": 1530890808, "last_edit_date": 1530897908, "question_id": 51213546, "link": "https://stackoverflow.com/questions/51213546/can-i-use-javascript-objects-passed-to-rust-to-implement-structures-that-need-ga", "title": "Can I use JavaScript objects passed to Rust to implement structures that need garbage collection?", "body": "<p>When using Rust in a browser, I can get JavaScript objects and use them inside Rust (using, for instance, the <code>js!</code> macro from the <a href=\"https://github.com/koute/stdweb\" rel=\"nofollow noreferrer\">stdweb library</a>).</p>\n\n<p>Given that these objects came from JavaScript, can I use them in Rust to implement structures that benefit from garbage collection (for instance, to implement graphs)?</p>\n"}, {"tags": ["javascript", "garbage-collection", "rust"], "comments": [{"owner": {"reputation": 105043, "user_id": 5260024, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XxSHe.jpg?s=128&g=1", "display_name": "Jonas Wilms", "link": "https://stackoverflow.com/users/5260024/jonas-wilms"}, "edited": false, "score": 1, "creation_date": 1530890787, "post_id": 51213499, "comment_id": 89407945, "body": "Javascript objects are very very dynamic things. There will probably be a performance impact compared to Rust structures."}], "answers": [{"comments": [{"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "edited": false, "score": 0, "creation_date": 1531310903, "post_id": 51233770, "comment_id": 89547388, "body": "Do you have any numbers? For instance, accessing a JS object is around 2x slower."}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 0, "last_activity_date": 1531065634, "creation_date": 1531065634, "answer_id": 51233770, "question_id": 51213499, "link": "https://stackoverflow.com/questions/51213499/is-there-a-performance-hit-when-using-javascript-objects-passed-to-rust/51233770#51233770", "title": "Is there a performance hit when using JavaScript objects passed to Rust?", "body": "<p>In Wasm access of Rust <code>struct</code> fields is definitely much faster than access of fields of a JS object.</p>\n\n<p>There is a cost of converting a JS object to a Rust <code>struct</code>, so if you need to access only one or two fields from a JS object once, then it might be more efficient to do just that rather than to convert the entire object to a Rust <code>struct</code> first.</p>\n"}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 92, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1531065634, "creation_date": 1530890608, "question_id": 51213499, "link": "https://stackoverflow.com/questions/51213499/is-there-a-performance-hit-when-using-javascript-objects-passed-to-rust", "title": "Is there a performance hit when using JavaScript objects passed to Rust?", "body": "<p>When using Rust in a browser, I can get JavaScript objects and use them inside Rust (using, for instance, the <code>js!</code> macro from the <a href=\"https://github.com/koute/stdweb\" rel=\"nofollow noreferrer\">stdweb library</a>).</p>\n\n<p>Do I get a performance hit when using these objects? Should I always copy them to Rust structures?</p>\n"}, {"tags": ["javascript", "garbage-collection", "rust"], "comments": [{"owner": {"reputation": 105043, "user_id": 5260024, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XxSHe.jpg?s=128&g=1", "display_name": "Jonas Wilms", "link": "https://stackoverflow.com/users/5260024/jonas-wilms"}, "edited": false, "score": 0, "creation_date": 1530890863, "post_id": 51213442, "comment_id": 89407981, "body": "Isn&#39;t the rust code transpiled to js? If so, there is no difference between js / rust code."}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 105043, "user_id": 5260024, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XxSHe.jpg?s=128&g=1", "display_name": "Jonas Wilms", "link": "https://stackoverflow.com/users/5260024/jonas-wilms"}, "edited": false, "score": 0, "creation_date": 1530891030, "post_id": 51213442, "comment_id": 89408066, "body": "No, rust is compiled to <a href=\"https://webassembly.org/\" rel=\"nofollow noreferrer\">web assembly</a>."}, {"owner": {"reputation": 105043, "user_id": 5260024, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XxSHe.jpg?s=128&g=1", "display_name": "Jonas Wilms", "link": "https://stackoverflow.com/users/5260024/jonas-wilms"}, "edited": false, "score": 0, "creation_date": 1530891408, "post_id": 51213442, "comment_id": 89408251, "body": "There is no gc in webassembly as there is no heap."}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 105043, "user_id": 5260024, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XxSHe.jpg?s=128&g=1", "display_name": "Jonas Wilms", "link": "https://stackoverflow.com/users/5260024/jonas-wilms"}, "edited": false, "score": 0, "creation_date": 1530892003, "post_id": 51213442, "comment_id": 89408594, "body": "Webassembly has no gc but it has heap. It was JavaScript that allocated the memory for these objects and it may or may not eventually garbage collect them."}, {"owner": {"reputation": 105043, "user_id": 5260024, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XxSHe.jpg?s=128&g=1", "display_name": "Jonas Wilms", "link": "https://stackoverflow.com/users/5260024/jonas-wilms"}, "edited": false, "score": 0, "creation_date": 1530892256, "post_id": 51213442, "comment_id": 89408728, "body": "<i>It was javascript that allocated them</i> you cannot access js objects from. Web assembly?!"}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 105043, "user_id": 5260024, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XxSHe.jpg?s=128&g=1", "display_name": "Jonas Wilms", "link": "https://stackoverflow.com/users/5260024/jonas-wilms"}, "edited": false, "score": 0, "creation_date": 1530897440, "post_id": 51213442, "comment_id": 89411221, "body": "You can access them from web assembly, what I want to know is how they behave in relation to ownership: Do they get reclaimed by JavaScript? When does this happens?"}, {"owner": {"reputation": 34263, "user_id": 454780, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/d8238ae773f9d75e510abe305209189f?s=128&d=identicon&r=PG", "display_name": "trusktr", "link": "https://stackoverflow.com/users/454780/trusktr"}, "edited": false, "score": 0, "creation_date": 1542757854, "post_id": 51213442, "comment_id": 93681833, "body": "My hypothesis is no, they won&#39;t be collected, otherwise the JS engine could break the WebAssembly module. I am hypothesizing that WebAssembly engine designers won&#39;t let the garbage collector arbitrarily break code that is running in WASM, and will consider it to be that the WASM module contains a reference to the JS object therefore the object can&#39;t be collected. I could be wrong, but that&#39;s the first thing I would&#39;ve thought about if I were on the WebAssembly team of one of the browsers."}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 95, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1530890351, "creation_date": 1530890351, "question_id": 51213442, "link": "https://stackoverflow.com/questions/51213442/can-the-javascript-engine-garbage-collect-objects-passed-to-rust", "title": "Can the JavaScript engine garbage collect objects passed to Rust?", "body": "<p>When using Rust in a browser, I can get JavaScript objects and use them inside Rust (using, for instance, the <code>js!</code> macro from the <a href=\"https://github.com/koute/stdweb\" rel=\"nofollow noreferrer\">stdweb library</a>).</p>\n\n<p>Can the JavaScript engine garbage collect these objects while I am using them (creating invalid pointers)?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1530885702, "post_id": 51209220, "comment_id": 89405130, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51209220/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 0, "creation_date": 1530879853, "post_id": 51210290, "comment_id": 89401419, "body": "I don&#39;t get it, the compiler is complaining about <code>self</code>, not <code>device</code>."}, {"owner": {"reputation": 497, "user_id": 9499193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a205ab60584733c5a84aa4c6e780d106?s=128&d=identicon&r=PG&f=1", "display_name": "JayJamesJay", "link": "https://stackoverflow.com/users/9499193/jayjamesjay"}, "reply_to_user": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 0, "creation_date": 1530880125, "post_id": 51210290, "comment_id": 89401565, "body": "Because the problem is not <code>device</code> itself but the fact that you have mutably borrowed <code>self</code> twice in the same scope."}, {"owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 0, "creation_date": 1530880345, "post_id": 51210290, "comment_id": 89401704, "body": "How do we write this in Rust then? I want to keep trying open_device as long as I don&#39;t have a HidDevice back :-/"}, {"owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 3, "creation_date": 1530882018, "post_id": 51210290, "comment_id": 89402731, "body": "Got it, HidDevice has a lifetime and no clone (which makes sense to manage the usb connection), I can&#39;t keep it if there&#39;s a chance to lose it. I&#39;ll call open_device only when sending/receiving data and let the device Drop."}], "tags": [], "owner": {"reputation": 497, "user_id": 9499193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a205ab60584733c5a84aa4c6e780d106?s=128&d=identicon&r=PG&f=1", "display_name": "JayJamesJay", "link": "https://stackoverflow.com/users/9499193/jayjamesjay"}, "is_accepted": true, "score": 0, "last_activity_date": 1530879369, "creation_date": 1530879369, "answer_id": 51210290, "question_id": 51209220, "link": "https://stackoverflow.com/questions/51209220/cannot-borrow-self-as-mutable-more-than-once-at-a-time/51210290#51210290", "title": "cannot borrow `*self` as mutable more than once at a time", "body": "<p>Variables are valid until the end of the scope in which they were declared. You created a variable <code>device</code> and assigned borrowed value to it in the scope of the entire function. In other words the borrow ends at the end of the function (as you can see in compiler error message).</p>\n"}], "owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1260, "favorite_count": 1, "accepted_answer_id": 51210290, "answer_count": 1, "score": 1, "last_activity_date": 1530879369, "creation_date": 1530875769, "last_edit_date": 1530875904, "question_id": 51209220, "link": "https://stackoverflow.com/questions/51209220/cannot-borrow-self-as-mutable-more-than-once-at-a-time", "title": "cannot borrow `*self` as mutable more than once at a time", "body": "<p>I don't understand this borrow checker error:</p>\n\n<pre><code>pub fn wait_for_device(&amp;mut self) -&gt; RoxResult&lt;hidapi::HidDevice&gt; {\n    let mut device = self.open_device();\n    let start = time::Instant::now();\n    while device.is_err() {\n        device = self.open_device();\n        if start.elapsed().as_secs() &gt; 30 {\n            return Err(\"Can't reconnect to device\".to_owned());\n        }\n    }\n    Ok(device.expect(\"Out of while so we should have a device\"))\n}\n\npub fn open_device(&amp;mut self) -&gt; RoxResult&lt;hidapi::HidDevice&gt; {\n    let device_info = &amp;self.list[0]; \n    if let Ok(device) = self.api.open(device_info.vendor_id, device_info.product_id) {\n        self.current_device = Some(device_info.clone());\n        Ok(device)\n    } else {\n        Err(format!(\n            \"Error opening device vip: {:x} pid: {:x}\",\n            device_info.vendor_id, device_info.product_id\n        ))\n    }\n}\n</code></pre>\n\n<hr>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src\\usb.rs:64:22\n   |\n61 |         let mut device = self.open_device();\n   |                          ---- first mutable borrow occurs here\n...\n64 |             device = self.open_device();\n   |                      ^^^^ second mutable borrow occurs here\n...\n70 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>I thought my first borrowing will end at the end of <code>open_device</code> but it seems I'm wrong. Why?</p>\n"}, {"tags": ["asynchronous", "rust", "traits", "rust-tokio"], "comments": [{"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1530887874, "post_id": 51208951, "comment_id": 89406331, "body": "I guess my desire cannot be quenched. I&#39;ve got to think more from the compiler POV :D It needs to know the size of the return type and that&#39;s just not possible with different trait implementations of fn() -&gt; impl Trait. It&#39;s just really hard to give up the habits from C# where this is the thing to do. So do I need to return a Box here?"}], "answers": [{"comments": [{"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1530896794, "post_id": 51212797, "comment_id": 89410912, "body": "Thanks @Shepmaster. It does have much to do with tokio, because <code>tokio::spawn()</code> requires <code>Send</code>, which <code>Box&lt;&gt;</code> isn&#39;t. So I can&#39;t even use that. I may have found a proper Rust+tokio solution though. Check the next answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1530896998, "post_id": 51212797, "comment_id": 89411013, "body": "@Rbjz then do <code>Box&lt;Future... + Send&gt;</code>. Again, still standard Rust."}, {"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1530898363, "post_id": 51212797, "comment_id": 89411619, "body": "That is one piece I was missing. I was trying it behind <code>Box&lt;&gt;</code>, not inside. I might actually need it anyway. I don&#39;t quite like the discouragement from playing with rust. I learn best by doing and this is my learning process. It is a major mind shift from C# so I hit the same walls repeatedly. This reminds me of driving the first time in Ireland where the steering wheel is on the other side. It doesn&#39;t really matter how many times you explain it to yourself, the brain keeps looking for the gear stick on the wrong side."}, {"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1530898367, "post_id": 51212797, "comment_id": 89411621, "body": "Practice, practice, practice! And now I&#39;m fluent driving on either side of the road, even driving a right hand van on right hand roads... I&#39;ll get there. Thanks for your support."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1530899441, "post_id": 51212797, "comment_id": 89412109, "body": "@Rbjz I&#39;m not trying to discourage you from playing with Rust, I&#39;m telling you that futures and Tokio are <b>intensely complicated</b> and not really a great place to start at the moment. To use a different analogy, it&#39;s like waking up and deciding to start climbing by tackling Mount Everest \u2014 there are a host of techniques that you can learn in other locations well before approaching something of that complexity."}, {"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1530904139, "post_id": 51212797, "comment_id": 89413949, "body": "I find it useful to set myself challenging tasks. There is an SMTP server implementation on top of tokio as a result. It is not prohibitively complicated. Have you tried Azure APIs? That&#39;s one prohibitive hell! + I&#39;m not risking anyone&#39;s life here."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1530897623, "last_edit_date": 1530897623, "creation_date": 1530888008, "answer_id": 51212797, "question_id": 51208951, "link": "https://stackoverflow.com/questions/51208951/how-to-introduce-trait-indirection-with-futures/51212797#51212797", "title": "How to introduce trait indirection with futures?", "body": "<p>There's nothing special about futures or Tokio here, this is just Rust. I'd highly encourage you to learn how to use basic Rust functionality before diving into the complicated world of asynchronous programming. Start with <a href=\"https://doc.rust-lang.org/book/second-edition/index.html\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, specicially the section on <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\"><em>trait objects</em></a>:</p>\n\n<pre><code>trait Svc {\n    fn handle(&amp;self, subject: Subject) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt; + Send&gt;;\n}\n\nimpl Svc for MySvc {\n    fn handle(&amp;self, subject: Subject) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt; + Send&gt; {\n        Box::new(future::ok(println!(\n            \"#1. Hi {}! My name is {}.\",\n            subject.name, self.name\n        )))\n    }\n}\n\n#[test]\nfn svc_works() {\n    let svc = MySvc {\n        name: \"Zorg\".into(),\n    };\n    let subj = Subject {\n        name: \"Gandalf\".into(),\n    };\n    tokio::run(svc.handle(subj))\n}\n</code></pre>\n\n<p>This is explicitly called out as the number one suggestion of <a href=\"https://tokio.rs/docs/going-deeper/returning/\" rel=\"nofollow noreferrer\">the Tokio documentation on how to return a <code>Future</code></a>.</p>\n\n<blockquote>\n  <p>if trait method implementation could return impl Trait!</p>\n</blockquote>\n\n<p>As far as I'm aware, this is impossible. Every function that returns an <code>impl Trait</code> returns a concrete type of a potentially different size. A specific caller would not know how much stack space to allocate for an arbitrary trait implementation.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a></li>\n<li><a href=\"https://stackoverflow.com/q/25649423/155423\">Sending trait objects between threads in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/48255263/155423\">Sharing a struct with trait objects as properties across threads</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "is_accepted": true, "score": 0, "last_activity_date": 1530899096, "last_edit_date": 1530899096, "creation_date": 1530897122, "answer_id": 51215029, "question_id": 51208951, "link": "https://stackoverflow.com/questions/51208951/how-to-introduce-trait-indirection-with-futures/51215029#51215029", "title": "How to introduce trait indirection with futures?", "body": "<p>Returning impl Trait from trait implementations is a no go as I had to learn (again?) that we need a concrete size. <code>Box</code>ing things up might work but I keep pondering. So I turned the thing around a bit and made the <code>Service</code> return a <code>Sink</code> instead, that will receive the item. Then I forward the stream into the sink. It seems this can be wrapped around with <code>tokio::spawn()</code>:</p>\n\n<pre><code>use futures::StartSend;\nuse tokio;\nuse tokio::io;\nuse tokio::prelude::*;\n\nstruct Subject {\n    name: String,\n}\n\ntrait Svc {\n    type Receiver;\n    type Error;\n    fn start(&amp;self) -&gt; Self::Receiver;\n}\n\nstruct MySvc {\n    name: String,\n}\n\nimpl Svc for MySvc {\n    type Receiver = MyReceiver;\n    type Error = io::Error;\n    fn start(&amp;self) -&gt; Self::Receiver {\n        MyReceiver::new(&amp;self.name)\n    }\n}\n\nstruct MyReceiver {\n    name: String,\n    pending: Box&lt;Future&lt;Item = (), Error = ()&gt; + Send&gt;,\n}\n\nimpl MyReceiver {\n    fn say_hi(&amp;self, subject: Subject) {\n        println!(\"Hi {}! It's {}.\", subject.name, self.name)\n    }\n    fn new(name: impl ToString) -&gt; Self {\n        Self {\n            name: name.to_string(),\n            pending: Box::new(future::ok(())),\n        }\n    }\n}\n\nimpl Future for MyReceiver {\n    type Item = Self;\n    type Error = Self;\n    fn poll(&amp;mut self) -&gt; Poll&lt;Self::Item, Self::Error&gt; {\n        Ok(Async::Ready(MyReceiver::new(&amp;self.name)))\n    }\n}\n\nimpl Sink for MyReceiver {\n    type SinkItem = Subject;\n    type SinkError = ();\n    fn start_send(&amp;mut self, item: Self::SinkItem) -&gt; StartSend&lt;Self::SinkItem, Self::SinkError&gt; {\n        self.say_hi(item);\n        Ok(AsyncSink::Ready)\n    }\n    fn poll_complete(&amp;mut self) -&gt; Poll&lt;(), Self::SinkError&gt; {\n        Ok(Async::Ready(()))\n    }\n}\n\n#[test]\nfn try() {\n    let svc = MySvc { name: \"jOy\".into() };\n\n    let task = future::ok(svc)\n        .and_then(|s| {\n            s.start().and_then(|r| {\n                let subject = Subject {\n                    name: \"Miou\".into(),\n                };\n                let task = stream::once(Ok::&lt;Subject, ()&gt;(subject))\n                    .forward(r)\n                    .map_err(|_| ())\n                    .and_then(|_| Ok(()));\n                tokio::spawn(task);\n                Ok(())\n            })\n        })\n        .and_then(|_| Ok(()))\n        .map_err(|_| ());\n\n    tokio::run(task);\n}\n</code></pre>\n"}], "owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 0, "accepted_answer_id": 51215029, "answer_count": 2, "score": 0, "last_activity_date": 1530899096, "creation_date": 1530874899, "last_edit_date": 1530875715, "question_id": 51208951, "link": "https://stackoverflow.com/questions/51208951/how-to-introduce-trait-indirection-with-futures", "title": "How to introduce trait indirection with futures?", "body": "<p>I have a tokio tcp server which should hand individual incoming connections to a service. How do I correctly handle indirection so that the server can work with different service implementations? I have resorted to calling <code>tokio::spawn()</code> inside the service because I couldn't find a way to return a future with indirection.</p>\n\n<p>Here's a minimal example of what I'm doing:</p>\n\n<pre><code>extern crate tokio;\n\nuse tokio::prelude::future::FutureResult;\nuse tokio::prelude::*;\n\nstruct Subject {\n    name: String,\n}    \nstruct MySvc {\n    name: String,\n}    \ntrait Svc6 {\n    fn handle6(&amp;self, subject: Subject);\n}\nimpl Svc6 for MySvc {\n    fn handle6(&amp;self, subject: Subject) {\n        let task = future::ok((self.name.to_string(), subject))\n            .and_then(|(n, s)| Ok(println!(\"#6. Hi {}! My name is {}.\", s.name, n)));\n        tokio::spawn(task);\n    }\n}   \n\n#[test]\nfn svc6_works() {\n    let svc = MySvc {\n        name: \"Zorg\".into(),\n    };\n    let subj = Subject {\n        name: \"Gandalf\".into(),\n    };\n    tokio::run(future::ok(svc).and_then(|s| Ok(s.handle6(subj))));\n}\n</code></pre>\n\n<p>While this works with indirection, I'm concerned if I'm using <code>tokio</code> correctly. Each <code>Svc6</code> impl has to call <code>tokio::spawn()</code> rather than just returning a task. I'd also prefer if the server handles spawning as it may need to deal with prioritization and queueing. It is also hard to test a method that doesn't return anything.</p>\n\n<p>Here is a playground link of <a href=\"https://play.rust-lang.org/?gist=7ee54844f41d27c9ccd8a5a539e65f17&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">the other things I've been trying</a>.\nTo see the full context, go to <a href=\"https://gitlab.com/BrightOpen/BackYard/Samotop/blob/master/src/server/mod.rs\" rel=\"nofollow noreferrer\">Samotop source</a> and the accept fn.</p>\n\n<p>It would be great if trait method implementation could return impl Trait!</p>\n\n<pre><code>trait Svc1 {\n    fn handle1(&amp;self, subject: Subject) -&gt; Future&lt;Item = (), Error = ()&gt;;\n}\nimpl Svc1 for MySvc {\n    // error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n    fn handle1(&amp;self, subject: Subject) -&gt; impl Future&lt;Item = (), Error = ()&gt; {\n        future::ok(println!(\n            \"#1. Hi {}! My name is {}.\",\n            subject.name, self.name\n        ))\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "operators", "exponentiation"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1530875795, "post_id": 51208704, "comment_id": 89399064, "body": "is this optimized by <code>2 &lt;&lt; 9</code> ?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1530875926, "post_id": 51208704, "comment_id": 89399133, "body": "@Stargateur In such cases the compiler optimizes the whole operation away, but it doesn&#39;t seem like it when the base is not known: <a href=\"https://godbolt.org/g/VJKgn1\" rel=\"nofollow noreferrer\">godbolt</a>."}], "tags": [], "owner": {"reputation": 24109, "user_id": 775954, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9f5a87db35489d2958945f35b457f1ee?s=128&d=identicon&r=PG", "display_name": "Matthias Braun", "link": "https://stackoverflow.com/users/775954/matthias-braun"}, "is_accepted": true, "score": 56, "last_activity_date": 1614524714, "last_edit_date": 1614524714, "creation_date": 1530874001, "answer_id": 51208704, "question_id": 51208703, "link": "https://stackoverflow.com/questions/51208703/how-to-raise-a-number-to-a-power/51208704#51208704", "title": "How to raise a number to a power?", "body": "<p>Rust provides exponentiation via methods <a href=\"//docs.rs/num/latest/num/fn.pow.html\" rel=\"noreferrer\"><code>pow</code></a> and <a href=\"//docs.rs/num/latest/num/fn.checked_pow.html\" rel=\"noreferrer\"><code>checked_pow</code></a> which\nguards against overflows. Thus, to raise 2 to the power of 10, do:</p>\n<pre><code>let base: i32 = 2; // an explicit type is required\nassert_eq!(base.pow(10), 1024);\n</code></pre>\n<p>The caret operator <code>^</code> is not used for exponentiation, it's the <a href=\"//doc.rust-lang.org/std/ops/trait.BitXor.html\" rel=\"noreferrer\">bitwise XOR\noperator</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 39, "user_id": 15135483, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2e6ff0de13a7e278065403f46d11afe?s=128&d=identicon&r=PG&f=1", "display_name": "Rohan", "link": "https://stackoverflow.com/users/15135483/rohan"}, "is_accepted": false, "score": 3, "last_activity_date": 1612334885, "creation_date": 1612334885, "answer_id": 66022535, "question_id": 51208703, "link": "https://stackoverflow.com/questions/51208703/how-to-raise-a-number-to-a-power/66022535#66022535", "title": "How to raise a number to a power?", "body": "<p>Here is the simplest method which you can use:-</p>\n<pre><code>let a = 2; // Can also explicitly define type i.e. i32\nlet a = i32::pow(a, 10);\n</code></pre>\n<p>It will output &quot;2 raise to the power 10&quot; i.e.</p>\n<blockquote>\n<p>1024</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 80945, "user_id": 1002260, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5ec9c21c8d54825b04def7a41998d18d?s=128&d=identicon&r=PG", "display_name": "Steven Penny", "link": "https://stackoverflow.com/users/1002260/steven-penny"}, "is_accepted": false, "score": 1, "last_activity_date": 1614551198, "creation_date": 1614551198, "answer_id": 66414481, "question_id": 51208703, "link": "https://stackoverflow.com/questions/51208703/how-to-raise-a-number-to-a-power/66414481#66414481", "title": "How to raise a number to a power?", "body": "<p>For integers:</p>\n<pre><code>fn main() {\n   let n = u32::pow(2, 10);\n   println!(&quot;{}&quot;, n == 1024);\n}\n</code></pre>\n<p>For floats:</p>\n<pre><code>fn main() {\n   // example 1\n   let f = f32::powf(2.0, 10.0);\n   // example 2\n   let g = f32::powi(2.0, 10);\n   // print\n   println!(&quot;{}&quot;, f == 1024.0 &amp;&amp; g == 1024.0);\n}\n</code></pre>\n<p>or, since your base is 2, you can also use shift:</p>\n<pre><code>fn main() {\n   let n = 2 &lt;&lt; 9;\n   println!(&quot;{}&quot;, n == 1024);\n}\n</code></pre>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.powf\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/primitive.f32.html#method.powf</a></li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.powi\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/primitive.f32.html#method.powi</a></li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.u32.html#method.pow\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/primitive.u32.html#method.pow</a></li>\n</ul>\n"}], "owner": {"reputation": 24109, "user_id": 775954, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9f5a87db35489d2958945f35b457f1ee?s=128&d=identicon&r=PG", "display_name": "Matthias Braun", "link": "https://stackoverflow.com/users/775954/matthias-braun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 18598, "favorite_count": 3, "accepted_answer_id": 51208704, "answer_count": 3, "score": 44, "last_activity_date": 1614551198, "creation_date": 1530874001, "last_edit_date": 1614524581, "question_id": 51208703, "link": "https://stackoverflow.com/questions/51208703/how-to-raise-a-number-to-a-power", "title": "How to raise a number to a power?", "body": "<p>I was trying to raise an integer to a power using the caret operator (<code>^</code>), but I am getting surprising results, e.g.:</p>\n<pre><code>assert_eq!(2^10, 8);\n</code></pre>\n<p>How can I perform exponentiation in Rust?</p>\n"}, {"tags": ["iterator", "rust", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 3, "last_activity_date": 1530885811, "last_edit_date": 1530885811, "creation_date": 1530863534, "answer_id": 51205507, "question_id": 51203522, "link": "https://stackoverflow.com/questions/51203522/trying-to-iterate-through-a-mesh-structure-results-in-borrowed-value-does-not-l/51205507#51205507", "title": "Trying to iterate through a mesh structure results in &quot;borrowed value does not live long enough&quot;", "body": "<p>You are using <code>Rc</code>, so take advantage of it. Generally speaking, taking a reference to a <code>Rc</code> is asking for problems.</p>\n\n<p>First try: clone <code>Rc</code> when needed:</p>\n\n<pre><code>let mut original_screen = self.primary_screen.clone();\n\nwhile let Some(next) = original_screen.borrow().neighbours.get(&amp;direction) {\n    original_screen = next.clone();\n}\n</code></pre>\n\n<p>It fails with the message:</p>\n\n<blockquote>\n  <p>cannot assign to <code>original_screen</code> because it is borrowed</p>\n</blockquote>\n\n<p>True enough: having a borrow in the <code>while</code> condition will not let you update it, but it can be rewritten easily:</p>\n\n<pre><code>loop {\n    if let Some(next) = original_screen.borrow().neighbours.get(&amp;direction) {\n         original_screen = next.clone()\n    } else {\n        break;\n    }\n}\n</code></pre>\n\n<p>That code is equivalent, and indeed it fails with the same error message! But now we are closer to a solution:</p>\n\n<pre><code>loop {\n    let next = if let Some(next) = original_screen.borrow().neighbours.get(&amp;direction) {\n         next.clone()\n    } else {\n        break;\n    };\n    original_screen = next;\n}\n</code></pre>\n\n<p>Now it compiles because the assignment is done after the borrow is released.</p>\n"}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 51205507, "answer_count": 1, "score": -1, "last_activity_date": 1530886067, "creation_date": 1530854748, "last_edit_date": 1530886067, "question_id": 51203522, "link": "https://stackoverflow.com/questions/51203522/trying-to-iterate-through-a-mesh-structure-results-in-borrowed-value-does-not-l", "title": "Trying to iterate through a mesh structure results in &quot;borrowed value does not live long enough&quot;", "body": "<p>I am trying to create a data structure that can store monitor location data.</p>\n\n<p>The approach I'm taking is that each screen has references to 4 neighbors stored in a <code>HashMap&lt;Direction, Rc&lt;RefCell&lt;Screen&gt;&gt;&gt;</code>.</p>\n\n<p>What I'm struggling with is how to \"move\"/iterate in a direction until I reach the edge of the mesh:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::HashMap;\nuse std::rc::Rc;\n\n#[derive(Debug, Copy, Clone, Default)]\npub struct ScreenCoord {\n    left: i32,\n    right: i32,\n    bottom: i32,\n    top: i32,\n}\n\nimpl ScreenCoord {\n    fn new_primary_from_dimensions(width: i32, height: i32) -&gt; ScreenCoord {\n        ScreenCoord {\n            left: 0,\n            right: width,\n            top: 0,\n            bottom: height,\n        }\n    }\n}\n\npub struct ScreenNetwork {\n    primary_screen: Rc&lt;RefCell&lt;Screen&gt;&gt;,\n}\n\nimpl ScreenNetwork {\n    pub fn new(width: i32, height: i32) -&gt; ScreenNetwork {\n        ScreenNetwork {\n            primary_screen: Rc::new(RefCell::new(Screen::new(\n                ScreenCoord::new_primary_from_dimensions(width, height),\n            ))),\n        }\n    }\n\n    pub fn add_screen(&amp;mut self, new_width: i32, new_height: i32, direction: Direction) {\n        let mut new_scrn = Screen::new(ScreenCoord::new_primary_from_dimensions(\n            new_width, new_height,\n        ));\n        let mut original_screen = &amp;self.primary_screen;\n\n        while let Some(next) = original_screen.borrow().neighbours.get(&amp;direction) {\n            original_screen = next;\n        }\n\n        // Do stuff with original_screen\n\n        // new_scrn.neighbours.insert(Direction::from_u8((direction.clone() as u8) ^ 0b11).unwrap(), original_screen.clone());\n        // original_screen.borrow_mut().neighbours.insert(direction, Rc::new(RefCell::new(new_scrn)));\n    }\n}\n\n/// Screen with information about adjacent screens\n#[derive(Default, Debug)]\npub struct Screen {\n    neighbours: HashMap&lt;Direction, Rc&lt;RefCell&lt;Screen&gt;&gt;&gt;,\n    coordinates: ScreenCoord,\n}\n\nimpl Screen {\n    pub fn new(coord: ScreenCoord) -&gt; Screen {\n        Screen {\n            coordinates: coord,\n            neighbours: HashMap::new(),\n        }\n    }\n}\n\n#[derive(Debug, PartialEq, Hash, Eq, Clone)]\npub enum Direction {\n    Left = 0,\n    Top,\n    Bottom,\n    Right,\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a7269f3bfa975cd17c3353a3e17dbb9e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:43:32\n   |\n43 |         while let Some(next) = original_screen.borrow().neighbours.get(&amp;direction) {\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^                          - temporary value dropped here while still borrowed\n   |                                |\n   |                                temporary value does not live long enough\n...\n51 |     }\n   |     - temporary value needs to live until here\n</code></pre>\n\n<p>I understand why the error is happening, but I have no clue as to how I can fix it. I tried to clone <code>original_screen</code> and <code>next</code>, but then the compiler complains that I am trying to set <code>original_screen</code> while still borrowing it.</p>\n"}, {"tags": ["rust", "core-audio"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 5849787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/437509a65e51302da12769c96bdb9444?s=128&d=identicon&r=PG&f=1", "display_name": "Zach Wolfe", "link": "https://stackoverflow.com/users/5849787/zach-wolfe"}, "edited": false, "score": 0, "creation_date": 1530926654, "post_id": 51218324, "comment_id": 89419528, "body": "Good call, that never occurred to me. That didn&#39;t seem to solve my problem though, unfortunately. I tried adding the equivalent of the following ObjC code in Rust via the <code>objc</code> crate: <code>[[NSRunLoop mainRunLoop] run];</code> and I get the same result (no output). Is that what you had in mind? I also tried <code>CFRunLoopRun</code>, and that didn&#39;t work either."}, {"owner": {"reputation": 33, "user_id": 5849787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/437509a65e51302da12769c96bdb9444?s=128&d=identicon&r=PG&f=1", "display_name": "Zach Wolfe", "link": "https://stackoverflow.com/users/5849787/zach-wolfe"}, "edited": false, "score": 0, "creation_date": 1530928708, "post_id": 51218324, "comment_id": 89419745, "body": "I&#39;ve updated the original question to include my code for your suggestion."}, {"owner": {"reputation": 30089, "user_id": 22147, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/x74x2.png?s=128&g=1", "display_name": "Rhythmic Fistman", "link": "https://stackoverflow.com/users/22147/rhythmic-fistman"}, "reply_to_user": {"reputation": 33, "user_id": 5849787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/437509a65e51302da12769c96bdb9444?s=128&d=identicon&r=PG&f=1", "display_name": "Zach Wolfe", "link": "https://stackoverflow.com/users/5849787/zach-wolfe"}, "edited": false, "score": 0, "creation_date": 1530998809, "post_id": 51218324, "comment_id": 89434118, "body": "Updated the answer, infinite loops seem fine after all."}], "tags": [], "owner": {"reputation": 30089, "user_id": 22147, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/x74x2.png?s=128&g=1", "display_name": "Rhythmic Fistman", "link": "https://stackoverflow.com/users/22147/rhythmic-fistman"}, "is_accepted": true, "score": 2, "last_activity_date": 1531021773, "last_edit_date": 1531021773, "creation_date": 1530915892, "answer_id": 51218324, "question_id": 51202644, "link": "https://stackoverflow.com/questions/51202644/core-audio-haloutput-audio-unit-fails-to-call-input-callback/51218324#51218324", "title": "Core Audio HALOutput audio unit fails to call input callback", "body": "<p>On the Mac, you need to tell the <code>AudioUnit</code> which audio device to use. In my case I had to disable speaker output on the unit - probably because the default input device on my Mac does input only.  </p>\n\n<p>In C (I imagine the Rust version will need a few <code>as *const _ as *const _</code>s and <code>as u32</code>s): </p>\n\n<pre class=\"lang-c prettyprint-override\"><code>// disable output (needed, otherwise I can't set device)\nflag = 0;\nerr = AudioUnitSetProperty(au, kAudioOutputUnitProperty_EnableIO, kAudioUnitScope_Output, 0, &amp;flag, sizeof(flag));\nassert(noErr == err);\n\n// get default input device\nAudioObjectPropertyAddress propAddr = {\n    .mSelector = kAudioHardwarePropertyDefaultInputDevice,\n    .mScope = kAudioObjectPropertyScopeGlobal,\n    .mElement = kAudioObjectPropertyElementMaster\n};\n\nAudioDeviceID deviceID;\nUInt32 propertySize = sizeof(deviceID);\nerr = AudioObjectGetPropertyData(kAudioObjectSystemObject, &amp;propAddr, 0, NULL, &amp;propertySize, &amp;deviceID);\nassert(noErr == err);\n\n// set audio unit current device\nerr = AudioUnitSetProperty(au, kAudioOutputUnitProperty_CurrentDevice, kAudioUnitScope_Global, 0, &amp;deviceID, sizeof(deviceID));\nassert(noErr == err);\n</code></pre>\n\n<p>In its entirety:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>static OSStatus\nAUInputCallback(\n    void*                       inRefCon,\n    AudioUnitRenderActionFlags* ioActionFlags,\n    const AudioTimeStamp*       inTimeStamp,\n    UInt32                      inBusNumber,\n    UInt32                      inNumberFrames,\n    AudioBufferList*            ioData)\n{\n    printf(\"poot\\n\");\n    return noErr;\n}\n\nint\nmain(int argc, char **argv) {\n    AudioComponentDescription desc = {\n        .componentType = kAudioUnitType_Output,\n        .componentSubType = kAudioUnitSubType_HALOutput,\n        .componentManufacturer = kAudioUnitManufacturer_Apple,\n        .componentFlags = 0,\n        .componentFlagsMask = 0\n    };\n\n    AudioComponent comp = AudioComponentFindNext(NULL, &amp;desc);\n    assert(comp);\n\n    AudioUnit au;\n    OSStatus err = AudioComponentInstanceNew(comp, &amp;au);\n    assert(noErr == err);\n\n    // enable input\n    UInt32      flag = 1;\n    err = AudioUnitSetProperty(au, kAudioOutputUnitProperty_EnableIO, kAudioUnitScope_Input, 1, &amp;flag, sizeof(flag));\n    assert(noErr == err);\n\n    // disable output (needed, otherwise I can't set device)\n    flag = 0;\n    err = AudioUnitSetProperty(au, kAudioOutputUnitProperty_EnableIO, kAudioUnitScope_Output, 0, &amp;flag, sizeof(flag));\n    assert(noErr == err);\n\n    AURenderCallbackStruct cb;\n    cb.inputProc = AUInputCallback;\n    cb.inputProcRefCon = NULL;\n    err = AudioUnitSetProperty(au, kAudioOutputUnitProperty_SetInputCallback, kAudioUnitScope_Global, 1, &amp;cb, sizeof(cb));\n    assert(noErr == err);\n\n    // set audio unit device to default input device\n    AudioObjectPropertyAddress propAddr = {\n        .mSelector = kAudioHardwarePropertyDefaultInputDevice,\n        .mScope = kAudioObjectPropertyScopeGlobal,\n        .mElement = kAudioObjectPropertyElementMaster\n    };\n\n    AudioDeviceID deviceID;\n    UInt32 propertySize = sizeof(deviceID);\n    err = AudioObjectGetPropertyData(kAudioObjectSystemObject, &amp;propAddr, 0, NULL, &amp;propertySize, &amp;deviceID);\n    assert(noErr == err);\n\n    err = AudioUnitSetProperty(au, kAudioOutputUnitProperty_CurrentDevice, kAudioUnitScope_Global, 0, &amp;deviceID, sizeof(deviceID));\n    assert(noErr == err);\n\n    err = AudioUnitInitialize(au);\n    assert(noErr == err);\n\n    err = AudioOutputUnitStart(au);\n    assert(noErr == err);\n\n    while (1) {}\n\n    return 0;\n}\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 5849787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/437509a65e51302da12769c96bdb9444?s=128&d=identicon&r=PG&f=1", "display_name": "Zach Wolfe", "link": "https://stackoverflow.com/users/5849787/zach-wolfe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 1, "accepted_answer_id": 51218324, "answer_count": 1, "score": 2, "last_activity_date": 1531021773, "creation_date": 1530847943, "last_edit_date": 1530928457, "question_id": 51202644, "link": "https://stackoverflow.com/questions/51202644/core-audio-haloutput-audio-unit-fails-to-call-input-callback", "title": "Core Audio HALOutput audio unit fails to call input callback", "body": "<p>I'm trying to record audio using Core Audio on the Mac, but my input callback isn't getting called. I'm sure I'm missing something obvious, but I've been searching and trying stuff all day. My code is written in Rust, but hopefully it won't be too hard to follow for C/C++ folks. Here it is:</p>\n\n<pre><code>extern crate coreaudio_sys;\n#[macro_use]\nextern crate objc;\n\nuse std::mem::size_of_val;\nuse std::os::raw::c_void;\nuse std::ptr;\n\nuse coreaudio_sys::*;\nuse objc::runtime::{Object, Class};\n\n#[link(name = \"Foundation\", kind = \"framework\")] \nextern {}\n\nfn main() {\n    unsafe {\n        // First, create an audio unit.\n        let desc = AudioComponentDescription {\n            componentType: kAudioUnitType_Output,\n            componentSubType: kAudioUnitSubType_HALOutput,\n            componentManufacturer: kAudioUnitManufacturer_Apple,\n            ..AudioComponentDescription::default()\n        };\n\n        let mut au_hal: AudioComponentInstance = ptr::null_mut();\n        let comp = AudioComponentFindNext(ptr::null_mut(), &amp;desc);\n        assert_ne!(comp, ptr::null_mut());\n\n        let mut code: OSStatus;\n\n        code = AudioComponentInstanceNew(comp, &amp;mut au_hal);\n        assert_eq!(code, 0);\n\n        // Next, enable IO for input.\n        let enable_io: UInt32 = 1;\n        code = AudioUnitSetProperty(\n            au_hal,\n            kAudioOutputUnitProperty_EnableIO,\n            kAudioUnitScope_Input,\n            1,\n            &amp;enable_io as *const _ as *const _,\n            size_of_val(&amp;enable_io) as u32,\n        );\n        assert_eq!(code, 0);\n\n        // Set the input callback.\n        let input = AURenderCallbackStruct {\n            inputProc: Some(input_proc),\n            inputProcRefCon: ptr::null_mut(),\n        };\n        code = AudioUnitSetProperty(\n            au_hal,\n            kAudioOutputUnitProperty_SetInputCallback,\n            kAudioUnitScope_Global,\n            1,\n            &amp;input as *const _ as *const _,\n            size_of_val(&amp;input) as u32,\n        );\n        assert_eq!(code, 0);\n\n        // Finally, initialize and start the unit.\n        code = AudioUnitInitialize(au_hal);\n        assert_eq!(code, 0);\n\n        code = AudioOutputUnitStart(au_hal);\n        assert_eq!(code, 0);\n\n        // Edit: As per Rhythmic Fistman's answer, use an\n        // NSRunLoop instead of a \"loop {}\".\n        // This code translates to [[NSRunLoop mainRunLoop] run]; in ObjC.\n        //\n        // This did not solve my problem.\n        let NSRunLoop = Class::get(\"NSRunLoop\").unwrap();\n        let run_loop: *mut Object = msg_send![NSRunLoop, mainRunLoop];\n        msg_send![run_loop, run];\n    }\n}\n</code></pre>\n\n<p>For debugging purposes, my <code>input_proc</code> callback just returns 0 after printing \"hi input\":</p>\n\n<pre><code>unsafe extern \"C\" fn input_proc(\n    in_ref_con: *mut c_void,\n    io_action_flags: *mut AudioUnitRenderActionFlags,\n    in_time_stamp: *const AudioTimeStamp,\n    in_bus_number: UInt32,\n    in_number_frames: UInt32,\n    io_data: *mut AudioBufferList,\n) -&gt; OSStatus {\n    println!(\"hi input\");\n    0\n}\n</code></pre>\n\n<p>Therefore, I would expect to see \"hi input\" get printed repeatedly to the console. In reality, nothing gets printed at all.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "edited": false, "score": 0, "creation_date": 1530828578, "post_id": 51200475, "comment_id": 89382670, "body": "1) I know that I have not mentioned this in the original question, but thread safety is also a requirement. As far as I know, Boxes are not thread safe :( 2) Wrapping fields into a struct sounds like an interesting design solution, will try that for sure!"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1530858852, "post_id": 51200475, "comment_id": 89389569, "body": "Since you also store a <code>len</code>, I suspect that you should actually use a <code>Vec</code> instead of your boxed array + <code>len</code>\u2026"}, {"owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1530881138, "post_id": 51200475, "comment_id": 89402178, "body": "@Jmb Vec has a small overhead in a form of the capacity variable + I don&#39;t need power of Vec APIs at the moment :) But thanks for the suggestion, I was considering doing the same."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1530828193, "creation_date": 1530828193, "answer_id": 51200475, "question_id": 51200405, "link": "https://stackoverflow.com/questions/51200405/solutions-to-performance-issues-caused-by-large-variant-size-of-enum/51200475#51200475", "title": "Solutions to performance issues caused by large variant size of enum", "body": "<p>You don't need trait objects here because you don't need the unbounded polymorphism they provide. </p>\n\n<p><a href=\"https://rust-lang-nursery.github.io/rust-clippy/\" rel=\"nofollow noreferrer\">Clippy</a> tells you what to do:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: large size difference between variants\n  --&gt; src/main.rs:13:5\n   |\n13 | /     RelaxedBranch {\n14 | |         children: [Option&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;; BRANCH_FACTOR],\n15 | |         sizes: [Option&lt;usize&gt;; BRANCH_FACTOR],\n16 | |         len: usize,\n17 | |     },\n   | |_____^\n   |\n   = note: #[warn(large_enum_variant)] on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n  --&gt; src/main.rs:13:5\n   |\n13 | /     RelaxedBranch {\n14 | |         children: [Option&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;; BRANCH_FACTOR],\n15 | |         sizes: [Option&lt;usize&gt;; BRANCH_FACTOR],\n16 | |         len: usize,\n17 | |     },\n   | |_____^\n   = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#large_enum_variant\n</code></pre>\n\n<p>Switching to </p>\n\n<pre><code>RelaxedBranch {\n    children: Box&lt;[Option&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;; BRANCH_FACTOR]&gt;,\n    sizes: Box&lt;[Option&lt;usize&gt;; BRANCH_FACTOR]&gt;,\n    len: usize,\n},\n</code></pre>\n\n<p>Reduces the size of <code>Node&lt;()&gt;</code> from 784 to 272. You could go further by combining all the fields into a new struct and boxing that.</p>\n"}], "owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 847, "favorite_count": 0, "accepted_answer_id": 51200475, "answer_count": 1, "score": 1, "last_activity_date": 1530828193, "creation_date": 1530827745, "last_edit_date": 1530827952, "question_id": 51200405, "link": "https://stackoverflow.com/questions/51200405/solutions-to-performance-issues-caused-by-large-variant-size-of-enum", "title": "Solutions to performance issues caused by large variant size of enum", "body": "<p>I am trying to build a tree-like data structure using the <code>Node</code> representation:</p>\n\n<pre><code>use std::cmp::Ordering;\nuse std::fmt::Debug;\nuse std::sync::Arc;\n\nconst BRANCH_FACTOR: usize = 32;\n\n#[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]\nenum Node&lt;T&gt; {\n    Branch {\n        children: [Option&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;; BRANCH_FACTOR],\n        len: usize,\n    },\n    RelaxedBranch {\n        children: [Option&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;; BRANCH_FACTOR],\n        sizes: [Option&lt;usize&gt;; BRANCH_FACTOR],\n        len: usize,\n    },\n    Leaf {\n        elements: [Option&lt;T&gt;; BRANCH_FACTOR],\n        len: usize,\n    },\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=57182eb56c41280836b3193d8838d25f&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The <code>RelaxedBranch</code> variant of the enum will be used rarely, sometimes not at all. Since the size of enums in Rust is defined by the size of the largest variant, <code>RelaxedBranch</code> increases overall the memory footprint of <code>Node</code> drastically. The large size of this enum causes a 20% performance hit, which is not acceptable in my case.  </p>\n\n<p>As an alternative to enums, I have decided to try trait objects:</p>\n\n<pre><code>use std::cmp::Ordering;\nuse std::fmt::Debug;\nuse std::sync::Arc;\n\nconst BRANCH_FACTOR: usize = 32;\n\ntrait Node&lt;T&gt;: Debug + Clone + PartialEq + Eq + PartialOrd + Ord {}\n\n#[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]\nstruct Branch&lt;T&gt; {\n    children: [Option&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;; BRANCH_FACTOR],\n    len: usize,\n}\n\n#[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]\nstruct RelaxedBranch&lt;T&gt; {\n    children: [Option&lt;Arc&lt;Node&lt;T&gt;&gt;&gt;; BRANCH_FACTOR],\n    len: usize,\n}\n\n#[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]\nstruct Leaf&lt;T&gt; {\n    elements: [Option&lt;T&gt;; BRANCH_FACTOR],\n    len: usize,\n}\n\nimpl&lt;T&gt; Node&lt;T&gt; for Branch&lt;T&gt; {}\nimpl&lt;T&gt; Node&lt;T&gt; for RelaxedBranch&lt;T&gt; {}\nimpl&lt;T&gt; Node&lt;T&gt; for Leaf&lt;T&gt; {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e0442f24603451853df08343355ca3c0&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I have quickly discovered something called trait object safety :) This doesn't allow traits used for trait objects to return objects of the <code>Self</code> type, which is my case due to inheritance from <code>Clone</code>.  </p>\n\n<p>How can I represent a tree node without having the overhead of enums? </p>\n"}, {"tags": ["rust", "rust-tokio"], "owner": {"reputation": 195, "user_id": 1411900, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9c247a2820a8fbb9db5b21e87a7f4e78?s=128&d=identicon&r=PG", "display_name": "user1411900", "link": "https://stackoverflow.com/users/1411900/user1411900"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1530827032, "creation_date": 1530825635, "last_edit_date": 1530827032, "question_id": 51200073, "link": "https://stackoverflow.com/questions/51200073/dispatching-requests-to-non-thread-safe-singleton-object-in-tokio", "title": "Dispatching requests to non thread-safe singleton object in Tokio", "body": "<p>I want to create a wrapper around an object from a third party library and then dispatch requests originating from TCP sockets to it via Tokio. Is there an idiomatic way to handle this in Tokio?</p>\n\n<hr>\n\n<p>Conceptually, the interface looks like this:</p>\n\n<pre><code>impl MyObject {\n    fn handle_requestA(&amp;self, r: RequestA) -&gt; ResponseA,\n    fn handle_requestB(&amp;self, r: RequestB) -&gt; ResponseB,\n    // ...\n}\n</code></pre>\n\n<p>A couple of things to note:</p>\n\n<ol>\n<li>the object is not thread-safe, so requests need to be serialized</li>\n<li>request handlers may take a long time, so running them on the same thread as the rest of Tokio's event loop is probably not a good idea</li>\n</ol>\n\n<p>I could just spin up a regular OS thread and feed it through a queue, but in that case I'd need to multiplex requests of different types onto it (and then demultiplex responses back to sockets). Is there some existing plumbing I could re-use?</p>\n\n<p>A stretch-goal is to have a pool of <code>MyObject</code>s and load-balance requests between them.</p>\n"}, {"tags": ["collections", "rust"], "comments": [{"owner": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "edited": false, "score": 3, "creation_date": 1530825428, "post_id": 51199988, "comment_id": 89381685, "body": "Note that Rust likes types very much!"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1530825430, "post_id": 51199988, "comment_id": 89381686, "body": "<code>Any</code> is not experimental\u2026"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1530825922, "post_id": 51199988, "comment_id": 89381845, "body": "Only the <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html#tymethod.get_type_id\" rel=\"nofollow noreferrer\"><code>get_type_id</code></a> method is experimental. But the trait is generally to be avoided any ways. Just use an <code>enum</code>."}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "edited": false, "score": 0, "creation_date": 1530848157, "post_id": 51199988, "comment_id": 89386535, "body": "Are these 2 implementations (traits and enums) the idiomatic choices in Rust? Do you have links to examples of Any used with collections in Rust?"}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "closed_date": 1530825994, "answer_count": 0, "score": 1, "last_activity_date": 1530826046, "creation_date": 1530825181, "last_edit_date": 1530826046, "question_id": 51199988, "link": "https://stackoverflow.com/questions/51199988/what-is-the-idiomatic-way-in-rust-to-represent-collections-of-items-of-different", "closed_reason": "Duplicate", "title": "What is the idiomatic way in Rust to represent collections of items of different types?", "body": "<p>In dynamic languages, like Clojure, it is easy to express collections with different types:</p>\n\n<pre class=\"lang-clj prettyprint-override\"><code>{:key1 \"foo\", :key2 [34 \"bar\" 4.5], \"key3\" {:key4 \"foobar\"}}\n</code></pre>\n\n<p>In Rust, I have seen the use of enums:</p>\n\n<pre><code>pub enum Value {\n    Null,\n    Bool(bool),\n    Number(f64),\n    String(String),\n    ...\n}\n</code></pre>\n\n<p>But different programmers will choose different enums to represent the same encapsulated type. There is also the <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"nofollow noreferrer\"><code>Any</code> trait</a> but it is experimental.</p>\n\n<p>What is the idiomatic way in Rust to represent collections of items of different types? Some examples and/or links to implementations would be very nice. </p>\n"}, {"tags": ["rust", "ffi", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530826607, "post_id": 51199272, "comment_id": 89382082, "body": "&quot;so that all of the code [...] easily tested&quot;; links to existing resources showing that you&#39;ve done research; well-formatted; reasons for rejection of solutions you&#39;ve found, etc. <b>Please continue to ask such high-quality questions</b>!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1530828527, "last_edit_date": 1530828527, "creation_date": 1530826951, "answer_id": 51200267, "question_id": 51199272, "link": "https://stackoverflow.com/questions/51199272/dealing-with-problematic-parent-child-relationships-enforced-by-c-ffi/51200267#51200267", "title": "Dealing with problematic parent-child relationships enforced by C FFI", "body": "<p>This sounds like an ideal case for reference counting. Use <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> or <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a>, depending on your multithreading needs:</p>\n\n<pre><code>use std::rc::Rc;\n\nstruct B {\n    b_ptr: *mut c_B,\n    a: Rc&lt;A&gt;,\n}\n\nimpl B {\n    fn new(a: Rc&lt;A&gt;) -&gt; B {\n        B {\n            b_ptr: create_b(a.a_ptr),\n            a,\n        }\n    }\n}\n\nimpl Drop for B {\n    fn drop(&amp;mut self) {\n        destroy_b(self.a.a_ptr, self.b_ptr);\n    }\n}\n\nfn main() {\n    let a = Rc::new(A::new());\n    let x = B::new(a.clone());\n    let y = B::new(a);\n}\n</code></pre>\n\n<ul>\n<li>Does not change the C interface.</li>\n<li><code>A</code> cannot be dropped while there are still <code>B</code>s referencing it.</li>\n<li>Can create multiple <code>B</code>s for each <code>A</code>.</li>\n<li><code>A</code>'s memory usage will not increase forever.</li>\n<li>Creates a single heap allocation to store <code>A</code> and its reference count.</li>\n<li><code>Rc</code> is in the standard library, no new crate to learn.</li>\n</ul>\n\n<hr>\n\n<p>In the future, you'll be able to use <em>arbitrary self types</em> to write this in a nicer manner:</p>\n\n<pre><code>#![feature(arbitrary_self_types)]\n\nuse std::rc::Rc;\n\nstruct A {\n    a_ptr: *mut c_A,\n}\n\nimpl A {\n    fn new() -&gt; A {\n        A { a_ptr: create_a() }\n    }\n\n    fn make_b(self: &amp;Rc&lt;Self&gt;) -&gt; B {\n        B {\n            b_ptr: create_b(self.a_ptr),\n            a: self.clone(),\n        }\n    }\n}\n\nimpl Drop for A {\n    fn drop(&amp;mut self) {\n        destroy_a(self.a_ptr);\n    }\n}\n\nstruct B {\n    b_ptr: *mut c_B,\n    a: Rc&lt;A&gt;,\n}\n\nimpl Drop for B {\n    fn drop(&amp;mut self) {\n        destroy_b(self.a.a_ptr, self.b_ptr);\n    }\n}\n\nfn main() {\n    let a = Rc::new(A::new());\n    let x = a.make_b();\n    let y = a.make_b();\n}\n</code></pre>\n"}], "owner": {"reputation": 754, "user_id": 2364686, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/69c53d70693ec83d97351943187285ee?s=128&d=identicon&r=PG", "display_name": "ItsTimmy", "link": "https://stackoverflow.com/users/2364686/itstimmy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 51200267, "answer_count": 1, "score": 8, "last_activity_date": 1530828527, "creation_date": 1530822003, "last_edit_date": 1530828496, "question_id": 51199272, "link": "https://stackoverflow.com/questions/51199272/dealing-with-problematic-parent-child-relationships-enforced-by-c-ffi", "title": "Dealing with problematic parent-child relationships enforced by C FFI", "body": "<p>I have a C library with an interface similar to this: (I have represented the C API within Rust, so that all of the code in this question can be concatenated in a single <code>.rs</code> file and easily tested)</p>\n\n<pre><code>// Opaque handles to C structs\nstruct c_A {}\nstruct c_B {}\n\n// These 2 `create` functions allocate some heap memory and other \n// resources, so I have represented this using Boxes.\nextern \"C\" fn create_a() -&gt; *mut c_A {\n    let a = Box::new(c_A {});\n    Box::into_raw(a)\n}\n\n// This C FFI function frees some memory and other resources, \n// so I have emulated that here.\nextern \"C\" fn destroy_a(a: *mut c_A) {\n    let _a: Box&lt;c_A&gt; = unsafe { Box::from_raw(a) };\n}\n\nextern \"C\" fn create_b(_a: *mut c_A) -&gt; *mut c_B {\n    let b = Box::new(c_B {});\n    Box::into_raw(b)\n}\n\n// Note: While unused here, the argument `_a` is actually used in \n// the C library, so I cannot remove it. (Also, I don't control \n// the C interface)\nextern \"C\" fn destroy_b(_a: *mut c_A, b: *mut c_B) {\n    let _b = unsafe { Box::from_raw(b) };\n}\n</code></pre>\n\n<p>I have created the following Rusty abstraction over the C functions:</p>\n\n<pre><code>struct A {\n    a_ptr: *mut c_A,\n}\n\nimpl A {\n    fn new() -&gt; A {\n        A { a_ptr: create_a() }\n    }\n}\n\nimpl Drop for A {\n    fn drop(&amp;mut self) {\n        destroy_a(self.a_ptr);\n    }\n}\n\nstruct B&lt;'a&gt; {\n    b_ptr: *mut c_B,\n    a: &amp;'a A,\n}\n\nimpl&lt;'a&gt; B&lt;'a&gt; {\n    fn new(a: &amp;'a A) -&gt; B {\n        B {\n            b_ptr: create_b(a.a_ptr),\n            a,\n        }\n    }\n}\n\nimpl&lt;'a&gt; Drop for B&lt;'a&gt; {\n    fn drop(&amp;mut self) {\n        destroy_b(self.a.a_ptr, self.b_ptr);\n    }\n}\n</code></pre>\n\n<p>The <code>B</code> struct contains a reference to <code>A</code> for the sole reason that the <code>a_ptr</code> is necessary when calling the <code>destroy_b</code> function for memory cleanup. This reference is not needed by me for any of my Rust code.</p>\n\n<p>I would now like to create the following struct which references both A and B:</p>\n\n<pre><code>struct C&lt;'b&gt; {\n    a: A,\n    b: B&lt;'b&gt;,\n}\n\nimpl&lt;'b&gt; C&lt;'b&gt; {\n    fn new() -&gt; C&lt;'b&gt; {\n        let a = A::new();\n        let b = B::new(&amp;a);\n        C { a, b }\n    }\n}\n\n// Main function just so it compiles\nfn main() {\n    let c = C::new();\n}\n</code></pre>\n\n<p>However, this will not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `a` does not live long enough\n  --&gt; src/main.rs:76:25\n   |\n76 |         let b = B::new(&amp;a);\n   |                         ^ borrowed value does not live long enough\n77 |         C { a, b }\n78 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'b as defined on the impl at 73:1...\n  --&gt; src/main.rs:73:1\n   |\n73 | impl&lt;'b&gt; C&lt;'b&gt; {\n   | ^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I understand why this fails: When returning the <code>C</code> struct from <code>C::new()</code>, it moves the <code>C</code>. This means that the <code>A</code> contained within is moved, which renders all references to it invalid. Therefore, there's no way I could create that <code>C</code> struct. (<a href=\"https://stackoverflow.com/a/32300133/2364686\">Explained in much more detail here</a>)</p>\n\n<p>How can I refactor this code in such a way that I can store a <code>B</code> in a struct along with its \"parent\" <code>A</code>? There's a few options I've thought of, that won't work:</p>\n\n<ul>\n<li>Change the C interface: I don't control the C interface, so I can't change it.</li>\n<li>Have <code>B</code> store a <code>*mut c_A</code> instead of <code>&amp;A</code>: If <code>A</code> is dropped, then that raw pointer becomes invalid, and will result in undefined behavior when <code>B</code> is dropped.</li>\n<li>Have <code>B</code> store an owned <code>A</code> rather than a reference <code>&amp;A</code>: For my use case, I need to be able to create multiple <code>B</code>s for each <code>A</code>. If <code>B</code> owns <code>A</code>, then each <code>A</code> can only be used to create one <code>B</code>.</li>\n<li>Have <code>A</code> own all instances of <code>B</code>, and only return references to <code>B</code> when creating a new <code>B</code>: This has the problem that <code>B</code>s will accumulate over time until the <code>A</code> is dropped, using up more memory than necessary. However, if this is indeed the best way to go about it, I can deal with the slight inconvenience.</li>\n<li>Use the <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\"><code>rental</code></a> crate: I would rather take the slight memory usage hit than add the complexity of a new macro to my code. (That is, the complexity of anyone reading my code needing to learn how this macro works)</li>\n</ul>\n\n<p>I suspect that the best solution somehow involves storing at least <code>A</code> on the heap so it doesn't need to move around, but I can't figure out how to make this work. Also, I wonder if there is something clever that I can do using raw pointers.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 0, "creation_date": 1530801043, "post_id": 51193809, "comment_id": 89369198, "body": "Thank you, I was trying to create a result that accept String and &amp;str but maybe my understanding of the differences between those two is not deep enough (yet) :)"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 0, "creation_date": 1530801186, "post_id": 51193809, "comment_id": 89369291, "body": "@Geob-o-matic <code>type MyResult&lt;&#39;a, T&gt; = Result&lt;T,</code><a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow&lt;&#39;a, str&gt;</code></a><code>&gt;;</code>"}, {"owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530801288, "post_id": 51193809, "comment_id": 89369368, "body": "Thanks @Tim, time to dig into <code>Cow</code> then ^^"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "edited": false, "score": 0, "creation_date": 1530801340, "post_id": 51193809, "comment_id": 89369400, "body": "@Geob-o-matic <code>Cow&lt;str&gt;</code> is what you are after if the error can be either a <code>String</code> or a <code>&amp;str</code>. Depends on your specific use case, but in general it&#39;s very useful."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 2, "last_activity_date": 1530801023, "last_edit_date": 1530801023, "creation_date": 1530800793, "answer_id": 51193809, "question_id": 51193702, "link": "https://stackoverflow.com/questions/51193702/is-there-a-way-to-declare-a-result-that-accepts-a-type-implementing-fromstr-as-t/51193809#51193809", "title": "Is there a way to declare a Result that accepts a type implementing FromStr as the error?", "body": "<p>You might <em>try</em> to express it as:</p>\n\n<pre><code>type MyResult&lt;T, U: FromStr&gt; = Result&lt;T, U&gt;;\n</code></pre>\n\n<p>But the compiler would complain that:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: bounds on generic parameters are not enforced in type aliases\n --&gt; src/main.rs:4:21\n  |\n4 | type MyResult&lt;T, U: FromStr&gt; = Result&lt;T, U&gt;; \n  |                     ^^^^^^^\n  |\n  = note: #[warn(type_alias_bounds)] on by default\n  = help: the bound will not be checked when the type alias is used, and should be removed\n</code></pre>\n\n<p>Which means that you shouldn't do it this way. Note, however, that <code>FromStr</code> already contains a <code>Result</code>:</p>\n\n<pre><code>pub trait FromStr {\n    type Err;\n    fn from_str(s: &amp;str) -&gt; Result&lt;Self, Self::Err&gt;;\n}\n</code></pre>\n\n<p>Maybe you should consider using it directly instead?</p>\n"}], "owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1530801987, "creation_date": 1530800477, "last_edit_date": 1530801987, "question_id": 51193702, "link": "https://stackoverflow.com/questions/51193702/is-there-a-way-to-declare-a-result-that-accepts-a-type-implementing-fromstr-as-t", "title": "Is there a way to declare a Result that accepts a type implementing FromStr as the error?", "body": "<p>I'd like to write this kind of <code>Result</code>:</p>\n\n<pre><code>use std::result::Result;\nuse std::str::FromStr;\n\ntype MyResult&lt;T&gt; = Result&lt;T, FromStr&gt;; \n</code></pre>\n\n<p>This is not valid. Is there a way to express this?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 227, "user_id": 6754676, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-JPd3ge2OsCs/AAAAAAAAAAI/AAAAAAAAABI/xAvJc8Cf-j0/photo.jpg?sz=128", "display_name": "Theodor Johnson", "link": "https://stackoverflow.com/users/6754676/theodor-johnson"}, "edited": false, "score": 1, "creation_date": 1530802386, "post_id": 51193705, "comment_id": 89370227, "body": "Very nice! It works! Good explanation as well. And thanks for editing the original question as well!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1530813153, "last_edit_date": 1530813153, "creation_date": 1530800480, "answer_id": 51193705, "question_id": 51193163, "link": "https://stackoverflow.com/questions/51193163/how-can-i-accept-an-arbitrary-container-that-is-sliceable-by/51193705#51193705", "title": "How can I accept an arbitrary container that is sliceable by `..`?", "body": "<p>You say that you are going to index your slice with a <code>usize</code>:</p>\n\n<blockquote>\n<pre><code>U: std::ops::Index&lt;usize&gt;,\n</code></pre>\n</blockquote>\n\n<p>Then you index the slice by something that is <strong>not a <code>usize</code></strong>:</p>\n\n<blockquote>\n<pre><code>f(&amp;s[..]);\n</code></pre>\n</blockquote>\n\n<p>This is a <a href=\"https://doc.rust-lang.org/std/ops/struct.RangeFull.html\" rel=\"nofollow noreferrer\"><code>RangeFull</code></a>. Rightly, the compiler doesn't allow you to lie to it about types.</p>\n\n<p>Instead, if you use the correct types, as shown in the error message, it works:</p>\n\n<pre><code>U: std::ops::Index&lt;std::ops::RangeFull&gt;,\n</code></pre>\n\n<p>Then the error is about the output type of the indexing. See <a href=\"https://stackoverflow.com/q/29184358/155423\">Requiring implementation of Mul in generic function</a> for a full description.</p>\n\n<pre><code>U: std::ops::Index&lt;std::ops::RangeFull, Output = [f64]&gt;,\n</code></pre>\n\n<hr>\n\n<p>That being said...</p>\n\n<ol>\n<li>There's no reason to introduce the generic type <code>U</code>. Instead, add trait bounds on the associated type of <code>D</code>.</li>\n<li>It's unlikely that you wish to force dynamic dispatch of your closure. Instead, take it as a generic type:</li>\n</ol>\n\n\n\n<pre><code>use std::ops::{Index, RangeFull};\n\npub fn foo&lt;D, F&gt;(dist: &amp;D, f: F)\nwhere\n    D: Distribution,\n    D::T: Index&lt;RangeFull, Output = [f64]&gt;,\n    F: Fn(&amp;[f64]),\n{\n    let s = dist.sample();\n    f(&amp;s[..]);\n}\n</code></pre>\n\n<p>Or equivalently:</p>\n\n<pre><code>pub fn foo&lt;D&gt;(dist: &amp;D, f: impl Fn(&amp;[f64]))\nwhere\n    D: Distribution,\n    D::T: std::ops::Index&lt;std::ops::RangeFull, Output = [f64]&gt;,\n</code></pre>\n\n<p>However, using <code>RangeFull</code> for this level of generic doesn't feel right to me. I'd use <a href=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html\" rel=\"nofollow noreferrer\"><code>AsRef</code></a> instead:</p>\n\n<pre><code>pub fn foo&lt;D&gt;(dist: &amp;D, f: impl Fn(&amp;[f64]))\nwhere\n    D: Distribution,\n    D::T: AsRef&lt;[f64]&gt;,\n{\n    let s = dist.sample();\n    f(s.as_ref());\n}\n</code></pre>\n"}], "owner": {"reputation": 227, "user_id": 6754676, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-JPd3ge2OsCs/AAAAAAAAAAI/AAAAAAAAABI/xAvJc8Cf-j0/photo.jpg?sz=128", "display_name": "Theodor Johnson", "link": "https://stackoverflow.com/users/6754676/theodor-johnson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 0, "accepted_answer_id": 51193705, "answer_count": 1, "score": 2, "last_activity_date": 1530813153, "creation_date": 1530798898, "last_edit_date": 1530800511, "question_id": 51193163, "link": "https://stackoverflow.com/questions/51193163/how-can-i-accept-an-arbitrary-container-that-is-sliceable-by", "title": "How can I accept an arbitrary container that is sliceable by `..`?", "body": "<p>I have the following simple setup:</p>\n\n<pre><code>pub trait Distribution {\n    type T;\n    fn sample(&amp;self) -&gt; Self::T;\n}\n\npub fn foo&lt;D, U&gt;(dist: &amp;D, f: &amp;Fn(&amp;[f64]))\nwhere\n    D: Distribution&lt;T = U&gt;,\n    U: std::ops::Index&lt;usize&gt;,\n{\n    let s = dist.sample();\n    f(&amp;s[..]);\n}\n</code></pre>\n\n<p><code>foo</code> accepts a generic container that implements <code>Distribution</code> and a function, but if I use it in an example like <a href=\"https://play.rust-lang.org/?gist=d3034d9fe5c2a24fb90713f8a8c2043d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this</a>:</p>\n\n<pre><code>struct Normal {}\n\nimpl Distribution for Normal {\n    type T = Vec&lt;f64&gt;;\n    fn sample(&amp;self) -&gt; Self::T {\n        vec![0.0]\n    }\n}\n\nfn main() {\n    let x = Normal {};\n    let f = |_x: &amp;[f64]| {};\n    foo(&amp;x, &amp;f);\n}\n</code></pre>\n\n<p>It does not work, because <code>f(&amp;s[..]);</code> is not of type slice:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:12:10\n   |\n12 |     f(&amp;s[..]);\n   |          ^^ expected usize, found struct `std::ops::RangeFull`\n   |\n   = note: expected type `usize`\n              found type `std::ops::RangeFull`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:12:7\n   |\n12 |     f(&amp;s[..]);\n   |       ^^^^^^ expected slice, found associated type\n   |\n   = note: expected type `&amp;[f64]`\n              found type `&amp;&lt;U as std::ops::Index&lt;usize&gt;&gt;::Output`\n</code></pre>\n"}, {"tags": ["go", "rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1530791057, "post_id": 51190458, "comment_id": 89362577, "body": "Why reinvent the wheel? <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.reverse\" rel=\"nofollow noreferrer\"><code>Vec::reverse</code></a>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1530791060, "post_id": 51190458, "comment_id": 89362581, "body": "The first issue I can think of is that by default <code>rustc</code> compiles in Debug mode as far as I know. Repeat the experiment with the <code>-O</code> flag (for optimizations)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530791315, "post_id": 51190458, "comment_id": 89362719, "body": "@ljedrz: Basic algorithm is similar (see <a href=\"https://doc.rust-lang.org/1.7.0/src/core/slice.rs.html#432\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.7.0/src/core/slice.rs.html#432</a>), it simply uses <code>unsafe</code> to avoid bounds checking."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530791393, "post_id": 51190458, "comment_id": 89362758, "body": "@MatthieuM. in any case you were right - it runs pretty fast with optimizations on."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530791462, "post_id": 51190458, "comment_id": 89362810, "body": "@ljedrz: How fast? If the optimizer was clever enough, this should be a no-op. Go taking 6s for a no-op is slow as hell."}, {"owner": {"reputation": 747, "user_id": 5539547, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/z3y7F.jpg?s=128&g=1", "display_name": "Tahseen", "link": "https://stackoverflow.com/users/5539547/tahseen"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530791464, "post_id": 51190458, "comment_id": 89362811, "body": "@ljedrz wanted to test on fundamental approach rather than using built-in functions"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530791535, "post_id": 51190458, "comment_id": 89362852, "body": "@Tahseen: This is not a built-in, I linked to the code so you can see its implementation. The only difference with your approach is the use of <code>unsafe</code> and <code>get_unchecked_mut</code> to avoid bounds-checking should the optimizer not be smart enough to realize it&#39;s unnecessary."}, {"owner": {"reputation": 747, "user_id": 5539547, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/z3y7F.jpg?s=128&g=1", "display_name": "Tahseen", "link": "https://stackoverflow.com/users/5539547/tahseen"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530791591, "post_id": 51190458, "comment_id": 89362888, "body": "@MatthieuM. You were right about -O flag. If you reply, I will mark it as an Answer :-) Also I wanted to say, some how Java is able to manage sub 6 seconds for same thing"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530791608, "post_id": 51190458, "comment_id": 89362909, "body": "@MatthieuM. fast, but not noop-fast, perhaps due to bounds checking."}, {"owner": {"reputation": 747, "user_id": 5539547, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/z3y7F.jpg?s=128&g=1", "display_name": "Tahseen", "link": "https://stackoverflow.com/users/5539547/tahseen"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530791735, "post_id": 51190458, "comment_id": 89362988, "body": "@MatthieuM. I mean Java is fastest even when it has GC. Faster than Go and Rust"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530793245, "post_id": 51190458, "comment_id": 89363943, "body": "@Tahseen: I think <code>rustc</code> could be improved to teach <code>LLVM</code> which alloc/dealloc functions it uses, and then LLVM would be able to optimize this to <code>fn main() {}</code> which would be faster than Java. It should also somehow indicate to LLVM that the content is all 0, as this would allow optimizing out the <code>reverse</code> itself."}], "answers": [{"comments": [{"owner": {"reputation": 747, "user_id": 5539547, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/z3y7F.jpg?s=128&g=1", "display_name": "Tahseen", "link": "https://stackoverflow.com/users/5539547/tahseen"}, "edited": false, "score": 0, "creation_date": 1530793102, "post_id": 51190927, "comment_id": 89363861, "body": "I tested Vec::reverse as mentioned by @ljerdz and am getting 2x improvement in performance. But again as I said, intent was to test performance using fundamentals. And your -O suggestion was the right one"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 747, "user_id": 5539547, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/z3y7F.jpg?s=128&g=1", "display_name": "Tahseen", "link": "https://stackoverflow.com/users/5539547/tahseen"}, "edited": false, "score": 0, "creation_date": 1530793519, "post_id": 51190927, "comment_id": 89364110, "body": "@Tahseen Vec is not a fundamentals brick of rust. It have overhead when use it as you do."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1530803055, "last_edit_date": 1530803055, "creation_date": 1530792448, "answer_id": 51190927, "question_id": 51190458, "link": "https://stackoverflow.com/questions/51190458/why-is-my-rust-program-that-performs-array-reversal-slower-than-the-equivalent-g/51190927#51190927", "title": "Why is my Rust program that performs array reversal slower than the equivalent Go program?", "body": "<p>By default, <code>rustc</code> (and <code>cargo</code>) compile in Debug mode. It was judged the most useful default as one compiles most often during development.</p>\n\n<p>Debug mode, especially in your code, includes a <em>lot</em> of checks: each access to <code>mylist[..]</code> is guarded by a bounds check, among other things.</p>\n\n<p>Instead, for benchmarking purposes, you want to compile with optimizations. If using <code>rustc</code> directly, this is as simple as passing the <code>-O</code> flag.</p>\n\n<hr>\n\n<p>As noted by @ljerdz, there is a <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.reverse\" rel=\"nofollow noreferrer\"><code>[T]::reverse</code></a> method, it is even more efficient than your implementation as it internally uses <code>unsafe</code> to elide bounds-checking.</p>\n\n<p>A quick check on the playground, however, does not reveal any outlandish difference between your <code>reverse</code> and <code>Vec::reverse</code> in your case; the optimizer was already smart enough to elide the bounds checks.</p>\n\n<p>Unfortunately it is not smart enough to elide the loop, likely because it does not realize that <code>__rust_alloc_zeroed</code> and <code>__rust_dealloc</code> are memory allocation/deallocation routines and have no observable side-effect.</p>\n"}], "owner": {"reputation": 747, "user_id": 5539547, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/z3y7F.jpg?s=128&g=1", "display_name": "Tahseen", "link": "https://stackoverflow.com/users/5539547/tahseen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 1, "closed_date": 1530793738, "accepted_answer_id": 51190927, "answer_count": 1, "score": 0, "last_activity_date": 1530803055, "creation_date": 1530790882, "last_edit_date": 1530793718, "question_id": 51190458, "link": "https://stackoverflow.com/questions/51190458/why-is-my-rust-program-that-performs-array-reversal-slower-than-the-equivalent-g", "closed_reason": "Duplicate", "title": "Why is my Rust program that performs array reversal slower than the equivalent Go program?", "body": "<p>I am initialising an array and then reversing it a number of times to see the performance.</p>\n\n<p>I want to understand if I have written code which cannot be compared or is Rust really so bad that it is taking so much time?</p>\n\n<p>Here is the build and timing process of Rust:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc main.rs\ntime ./main\n</code></pre>\n\n<p>This runs and goes on and on. Which is surprising</p>\n\n<h3>Rust</h3>\n\n<pre><code>fn reverse(mylist: &amp;mut Vec&lt;u16&gt;) {\n    let length = mylist.len();\n\n    let mid_length = length / 2;\n\n    for number in 0..mid_length {\n        let mut a = mylist[number];\n        let mut b = mylist[length - number - 1];\n\n        mylist[number] = b;\n\n        mylist[length - number - 1] = a;\n    }\n}\n\nfn main() {\n    let array_size = 100000;\n\n    let iterations = 100000;\n\n    let mut v = vec![0u16; array_size];\n\n    for _ in 0..iterations {\n        reverse(&amp;mut v);\n    }\n}\n</code></pre>\n\n<h3>Go</h3>\n\n<p>The Go code does exactly what Rust code is doing above. The important thing to note is that Go has Garbage Collection where as Rust does not. Surprisingly, Go does the job in less than 6 seconds:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>go build main.go\ntime ./main 100000 100000\n\nreal    0m5.932s\nuser    0m5.928s\nsys 0m0.004s\n</code></pre>\n\n<h3>Go</h3>\n\n<pre class=\"lang-golang prettyprint-override\"><code>package main\n\nimport (\n    \"os\"\n    \"strconv\"\n)\n\nfunc reverse(mylist []int) []int {\n\n    length := len(mylist)\n    half := int(length / 2)\n\n    for i := 0; i &lt; half; i++ {\n\n        mylist[i], mylist[length-i-1] = mylist[length-i-1], mylist[i]\n\n    }   \n\n    return mylist\n\n}\n\nfunc main() {\n\n    array_size, _ := strconv.Atoi(os.Args[1])\n    iterations, _ := strconv.Atoi(os.Args[2])\n\n    mylist := make([]int, array_size)\n\n    for i := 0; i &lt; iterations; i++ {\n        reverse(mylist)\n\n    }\n\n}\n</code></pre>\n"}, {"tags": ["enums", "rust"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 8, "last_activity_date": 1530787224, "last_edit_date": 1530787224, "creation_date": 1530785890, "answer_id": 51188817, "question_id": 51188460, "link": "https://stackoverflow.com/questions/51188460/how-can-i-structure-destructure-an-enum-of-enums/51188817#51188817", "title": "How can I structure/destructure an enum of enums?", "body": "<p>You forgot that enum variants are not types - you need to introduce wrappers in order for an enum to be able to contain other enums:</p>\n\n<pre><code>enum Event {\n    WebEvent(WebEvent),\n    KeyEvent(KeyEvent)\n}\n</code></pre>\n\n<p>The rest is pretty straightforward:</p>\n\n<pre><code>enum WebEvent {\n    PageLoad,\n    PageUnload,\n    KeyPress(char),\n    Paste(String),\n    Click { x: i64, y: i64 },\n}\n\nenum KeyEvent {\n    UpPressed,\n    DownPressed,\n}\n\nenum Event {\n    WebEvent(WebEvent),\n    KeyEvent(KeyEvent)\n}\n\nfn inspect(event: Event) {\n    if let Event::WebEvent(webevt) = event {\n        match webevt {\n            WebEvent::PageLoad =&gt; println!(\"page loaded\"),\n            WebEvent::PageUnload =&gt; println!(\"page unloaded\"),\n            WebEvent::KeyPress(c) =&gt; println!(\"pressed '{}'.\", c),\n            WebEvent::Paste(s) =&gt; println!(\"pasted \\\"{}\\\".\", s),\n            WebEvent::Click { x, y } =&gt; println!(\"clicked at x={}, y={}.\", x, y)\n        }\n    } else {\n        println!(\"got a key event\")\n    }\n}\n\nfn main() {\n    let pressed = Event::WebEvent(WebEvent::KeyPress('x')); // note the extra wrap here\n    inspect(pressed);\n}\n</code></pre>\n"}], "owner": {"reputation": 363, "user_id": 1018826, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/cabce843c56109c549bbc2f30de7e9d7?s=128&d=identicon&r=PG", "display_name": "draklor40", "link": "https://stackoverflow.com/users/1018826/draklor40"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1498, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1530793421, "creation_date": 1530784920, "last_edit_date": 1530793421, "question_id": 51188460, "link": "https://stackoverflow.com/questions/51188460/how-can-i-structure-destructure-an-enum-of-enums", "title": "How can I structure/destructure an enum of enums?", "body": "<p>I am running into issues when matching on an enum of enums. The structure is similar to this:</p>\n\n<pre><code>enum WebEvent {\n    PageLoad,\n    PageUnload,\n    KeyPress(char),\n    Paste(String),\n    Click { x: i64, y: i64 },\n}\nenum KeyEvent {\n    UpPressed,\n    DownPressed,\n}\n\nenum Event {\n    WebEvent,\n    KeyEvent,\n}\n\nfn inspect(event: Event) {\n    match event {\n        Event::WebEvent::PageLoad =&gt; println!(\"page loaded\"),\n        Event::WebEvent::PageUnload =&gt; println!(\"page unloaded\"),\n        Event::WebEvent::KeyPress(c) =&gt; println!(\"pressed '{}'.\", c),\n        Event::WebEvent::Paste(s) =&gt; println!(\"pasted \\\"{}\\\".\", s),\n        Event::WebEvent::Click { x, y } =&gt; {\n            println!(\"clicked at x={}, y={}.\", x, y);\n        }\n        Event::KeyEvent =&gt; {\n            println!(\"got a key event\");\n        }\n    }\n}\n\nfn main() {\n    let pressed = WebEvent::KeyPress('x');\n    inspect(pressed);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=da38dd247e6a41cba400fa60ed0e50ad&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This is the error I get from the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0433]: failed to resolve. Not a module `WebEvent`\n  --&gt; src/main.rs:20:16\n   |\n20 |         Event::WebEvent::PageLoad =&gt; println!(\"page loaded\"),\n   |                ^^^^^^^^ Not a module `WebEvent`\n\nerror[E0433]: failed to resolve. Not a module `WebEvent`\n  --&gt; src/main.rs:21:16\n   |\n21 |         Event::WebEvent::PageUnload =&gt; println!(\"page unloaded\"),\n   |                ^^^^^^^^ Not a module `WebEvent`\n\nerror[E0433]: failed to resolve. Not a module `WebEvent`\n  --&gt; src/main.rs:22:16\n   |\n22 |         Event::WebEvent::KeyPress(c) =&gt; println!(\"pressed '{}'.\", c),\n   |                ^^^^^^^^ Not a module `WebEvent`\n\nerror[E0433]: failed to resolve. Not a module `WebEvent`\n  --&gt; src/main.rs:23:16\n   |\n23 |         Event::WebEvent::Paste(s) =&gt; println!(\"pasted \\\"{}\\\".\", s),\n   |                ^^^^^^^^ Not a module `WebEvent`\n\nerror[E0433]: failed to resolve. Not a module `WebEvent`\n  --&gt; src/main.rs:24:16\n   |\n24 |         Event::WebEvent::Click { x, y } =&gt; {\n   |                ^^^^^^^^ Not a module `WebEvent`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:35:13\n   |\n35 |     inspect(pressed);\n   |             ^^^^^^^ expected enum `Event`, found enum `WebEvent`\n   |\n   = note: expected type `Event`\n              found type `WebEvent`\n</code></pre>\n\n<p>What is the right way to structure/destructure an enum of enums? Is there any way I can do this? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1530769830, "post_id": 51183343, "comment_id": 89350056, "body": "Are you looking for a way to do this generically for lots of fields, or just a single field? And do you actually want a string, or is this just an example? You could for instance make specific wrapper types, like <a href=\"https://play.rust-lang.org/?gist=c5d6f121227890dbdc6f7ea1d97883b3&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> but you can&#39;t return a simple reference."}, {"owner": {"reputation": 347, "user_id": 5207376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/929972057068521/picture?type=large", "display_name": "Xu Chen", "link": "https://stackoverflow.com/users/5207376/xu-chen"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1530773926, "post_id": 51183343, "comment_id": 89351972, "body": "@loganfsmyth Thanks for your snippet! Seems to be a much better way of passing reference around. Of course, I would not be able to elaborate on the whole context here, but to answer your question: 1) I do have some other fields that are protected by the struct. 2) And the String is just an example, it is arbitrary."}, {"owner": {"reputation": 347, "user_id": 5207376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/929972057068521/picture?type=large", "display_name": "Xu Chen", "link": "https://stackoverflow.com/users/5207376/xu-chen"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1530774414, "post_id": 51183343, "comment_id": 89352266, "body": "@loganfsmyth I might not want to delegate the locking to the top level, like in your <code>read</code> function, so if I get the lock somewhere down the function call tree, I would want to pass the &quot;reference&quot; up, and releases the lock (the program has explicit synchronization that guarantees data race free)."}], "answers": [{"comments": [{"owner": {"reputation": 347, "user_id": 5207376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/929972057068521/picture?type=large", "display_name": "Xu Chen", "link": "https://stackoverflow.com/users/5207376/xu-chen"}, "edited": false, "score": 0, "creation_date": 1530966645, "post_id": 51190266, "comment_id": 89426822, "body": "thanks for pointing out the Lifetime issue. In order to implement the Drop trait properly for RwLockReadGuardInner, I assume I would also need to 1) call the <code>destroy</code> on the _lock.inner, 2) deallocate the poison explicitly?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 347, "user_id": 5207376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/929972057068521/picture?type=large", "display_name": "Xu Chen", "link": "https://stackoverflow.com/users/5207376/xu-chen"}, "edited": false, "score": 0, "creation_date": 1530969653, "post_id": 51190266, "comment_id": 89427531, "body": "@XuChen: You would essentially need to replicate all the work done in <code>RwLockReadGuard</code>&#39;s <code>Drop</code> implementation; I&#39;ve checked exactly what that meant, but what you propose seems sensible."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1532438184, "last_edit_date": 1532438184, "creation_date": 1530790243, "answer_id": 51190266, "question_id": 51183343, "link": "https://stackoverflow.com/questions/51183343/how-to-use-a-reference-to-the-underlying-data-protected-by-a-arcrwlockt/51190266#51190266", "title": "How to use a reference to the underlying data protected by a Arc&lt;RwLock&lt;T&gt;&gt;?", "body": "<p>There are 2 issues here:</p>\n\n<ol>\n<li>Lifetime</li>\n<li>Inner Reference</li>\n</ol>\n\n<p>Let's tackle them in order.</p>\n\n<h3>Lifetime</h3>\n\n<p>First of all, there is a lifetime issue inherited from <code>let obj = Arc::clone(obj);</code>.</p>\n\n<p>You are anchoring all lifetime references to a variable, instead of simply directly reading from the parameter.</p>\n\n<p>You can <a href=\"https://stackoverflow.com/q/32682876/155423\">NEVER return a reference to a local variable</a>; so let's not. Simply removing this line yields:</p>\n\n<pre><code>fn get_data_ref(obj: &amp;Arc&lt;RwLock&lt;MyStruct&gt;&gt;) -&gt; &amp;String {\n    let data = obj.read().unwrap();\n    data.get_data()\n}\n</code></pre>\n\n<p>Which is already better.</p>\n\n<h3>Inner Reference</h3>\n\n<p>The second issue is the inner reference. <code>RwLock.read()</code> returns a <em>guard</em>, which will unlock in its destructor. In return, the guard only returns references which live as long as it lives, thus ensuring that no access occurs after the guard is destroyed (and the lock unlocked).</p>\n\n<p>There is, unfortunately, no way to go from <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLockReadGuard.html\" rel=\"nofollow noreferrer\"><code>RwLockReadGuard&lt;'a, MyStruct&gt;</code></a> to some kind of <code>RwLockReadGuardInner&lt;'a, String&gt;</code> which would magically grant you access to a field of <code>MyStruct</code>.</p>\n\n<p>It's possible in theory, but no support has been implemented for it.</p>\n\n<hr>\n\n<p>If you wanted to make it work...</p>\n\n<p>The idea of <code>RwLockReadGuardInner&lt;'a, String&gt;</code> is essentially:</p>\n\n<pre><code>struct RwLockReadGuardInner&lt;'a, T&gt; {\n    lock: *const sys::RWLock,\n    poison: *const poison::Flag,\n    data: &amp;'a T,\n}\n\nimpl&lt;'a, T&gt; Drop for RwLockReadGuardInner&lt;'a, T&gt; {\n    //  magic happens\n}\n</code></pre>\n\n<p>Then, you'd implement a <code>map</code> operation on <code>RwLockReadGuard</code>:</p>\n\n<pre><code>impl&lt;'a, T&gt; RwLockReadGuard&lt;'a, T&gt; {\n    fn map&lt;F, U&gt;(self, f: F) -&gt; RwLockReadGuardInner&lt;'a, U&gt;\n    where\n        F: FnOnce(&amp;T) -&gt; &amp;U,\n    {\n        let result = RwLockReadGuardInner {\n            lock: &amp;self.__lock.inner as *const _,\n            poison: &amp;self.__lock.poison as *const _,\n            data: f(unsafe { &amp;*self.__lock.data.get() }),\n        };\n\n        std::mem::forget(self);\n\n        result\n    }\n}\n</code></pre>\n\n<p>I find it interesting to note that slightly changing the definition of <code>RwLock</code> (packing <code>inner</code> and <code>poison</code> in a single struct) would allow changing <code>RwLockReadGuard</code> to both reference the main field and any inner field (at the cost of doubling its size).</p>\n\n<p>If you want to, you could make a RFC to support this case. <code>RwLockReadGuard</code> is not the only one for which this may be useful either, most guards for interior mutability would benefit from such a <code>map</code> operation.</p>\n"}], "owner": {"reputation": 347, "user_id": 5207376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/929972057068521/picture?type=large", "display_name": "Xu Chen", "link": "https://stackoverflow.com/users/5207376/xu-chen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 894, "favorite_count": 0, "closed_date": 1532438040, "accepted_answer_id": 51190266, "answer_count": 1, "score": 1, "last_activity_date": 1532438184, "creation_date": 1530764398, "last_edit_date": 1532437862, "question_id": 51183343, "link": "https://stackoverflow.com/questions/51183343/how-to-use-a-reference-to-the-underlying-data-protected-by-a-arcrwlockt", "closed_reason": "Duplicate", "title": "How to use a reference to the underlying data protected by a Arc&lt;RwLock&lt;T&gt;&gt;?", "body": "<p>Any reference obtained through the interior mutability pattern, be it <code>Rc&lt;RefCell&lt;T&gt;&gt;</code> or <code>Arc&lt;RwLock&lt;T&gt;&gt;</code>, will have to be dropped as the enclosing function returns. When you want to use this reference to return a reference to some data that this <code>RefCell</code> or <code>RwLock</code> protects, it is not allowed. </p>\n\n<p>I think it is right to NOT ALLOW it: because I am using interior mutability, any reference associated with the \"interior\" should be delegated to the runtime checker, and thus a pure reference as <code>&amp;T</code> should not be exposed to the outside. </p>\n\n<p>However, I could not figure out a good alternative that serves the same purpose, other than wrap the underlying data with <code>Rc&lt;RefCell&lt;T&gt;&gt;</code> as well. </p>\n\n<p>Code that demonstrates the issue: </p>\n\n<pre><code>use std::string::String;\nuse std::sync::{Arc, RwLock};\n\nstruct MyStruct {\n    data: MyData,\n}\n\nstruct MyData {\n    val: String,\n}\n\nfn main() {\n    let my_struct = MyStruct {\n        data: MyData {\n            val: String::from(\"hi\"),\n        },\n    };\n    let obj = Arc::new(RwLock::new(my_struct));\n\n    let data = get_data_ref(&amp;obj);\n    println!(\"{}\", data);\n}\n\nfn get_data_ref(obj: &amp;Arc&lt;RwLock&lt;MyStruct&gt;&gt;) -&gt; &amp;String {\n    let obj = Arc::clone(obj);\n\n    let data = obj.read().unwrap(); //data is created\n    data.get_data()\n} //data dropped here, thus lives not long enough.\n\nimpl MyStruct {\n    fn get_data(&amp;self) -&gt; &amp;String {\n        self.data.get_val()\n    }\n}\n\nimpl MyData {\n    fn get_val(&amp;self) -&gt; &amp;String {\n        &amp;self.val\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=315c85adae82ae12929e8873d32f91c9&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n"}, {"tags": ["haskell", "functional-programming", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530796022, "post_id": 51182640, "comment_id": 89365804, "body": "What makes you think it wouldn&#39;t be possible? After all, Rust is Turing Complete..."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1530798590, "post_id": 51182640, "comment_id": 89367511, "body": "@MatthieuM. this is <i>not</i> possible on a Turing machine, because this has no notion of \u201cnative functions\u201d. You could only emulate it, but that would require something like the De Bruijn indices mentioned in the question."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1530798592, "post_id": 51182640, "comment_id": 89367512, "body": "@MatthieuM. Turing completeness means that it can reproduce any input-output behavior a Turing machine can have. It does not mean that the language can directly express high-level concepts. E.g. C has no native closures (even though it can be used to write a Rust interpreter, which has closures). Rust has no dependent types (even though it can interpret Agda which has them)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1530799622, "post_id": 51182640, "comment_id": 89368242, "body": "@chi: Sure, but you can emulate closures in C by bundling arguments in a struct and passing a function pointer. I could literally translate the Rust snippet below to C: it would be lower-level, but a 1-to-1 match of semantics. So I question at which point one concludes it&#39;s &quot;not supported&quot;."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 6, "creation_date": 1530800103, "post_id": 51182640, "comment_id": 89368565, "body": "@MatthieuM. of course it is possible to implement. The question was whether it was possible to use <i>native Rust closures</i> for substitution. Rust could be Turing-complete yet provide no means for using its closures on your own DSL interpreter, so you would need to implement fast closures yourself (could be a millions-dollars budget project) if you wanted to have fast substitutions."}], "answers": [{"comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 4, "creation_date": 1530788242, "post_id": 51186603, "comment_id": 89360631, "body": "You can satisfy <code>Clone</code> by using reference counting: <a href=\"http://play.rust-lang.org/?gist=7419c2dcf3d599dd4d39af6a6e83c996&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> --- I suspect this code could be cleaned up quite a bit with the help of a few convenient constructors instead of using value constructors directly everywhere."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1530799174, "post_id": 51186603, "comment_id": 89367933, "body": "Impressive! I was not hoping for such a complete answer, but I hope it becomes a reference for anyone trying to HOAS in Rust. It indeed uses many features I wasn&#39;t aware of. Just a clarification: how would you replicate <code>Lam$ \\a -&gt; Lam$ \\b -&gt; Lam$ \\c -&gt; c</code>? I&#39;ve tried <code>Term::lam(|a| Term::lam(move |b| Term::lam(move |c| c)))</code> but I get an error related to the <code>move</code>."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1530799371, "post_id": 51186603, "comment_id": 89368082, "body": "@MaiaVictor are you sure? I just tried your exact piece of code with the above implementation and got <code>\u03bbx0. \u03bbx1. \u03bbx2. x2</code>: <a href=\"https://play.rust-lang.org/?gist=27118af92bf4e7b353a97ad941662669&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground link</a>."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1530799888, "post_id": 51186603, "comment_id": 89368427, "body": "Oh, my bad. That one works. The term I&#39;m having trouble with is <code>Term::lam(|b| Term::lam(move |t| Term::lam(move |f| Term::app(Term::app(b.clone(), t.clone()), f.clone()))))</code> (i.e., <code>\u03bbb. \u03bbt. \u03bbf. b t f</code>). Nether less you already put a lot of effort on this question, I&#39;m reading on <code>.clone()</code> and <code>move</code> so I&#39;ll probably figure it out and comment here."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 1, "creation_date": 1530822147, "post_id": 51186603, "comment_id": 89380305, "body": "@MaiaVictor as it proved to be quite a challenge (even though the solution looks a bit silly) I expanded the answer with that term and added a playground link for easier access. Enjoy!"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 1, "creation_date": 1530829671, "post_id": 51186603, "comment_id": 89382942, "body": "@ljedrz oh. The solution actually makes a lot of sense. Yes, it was trickier than I expected, so I gave up a few minutes after my comment (should&#39;ve clarified). Thanks for the answer and research. This was very informative and I really hope it will be useful to more people."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 26, "last_activity_date": 1530822008, "last_edit_date": 1530822008, "creation_date": 1530779257, "answer_id": 51186603, "question_id": 51182640, "link": "https://stackoverflow.com/questions/51182640/is-it-possible-to-represent-higher-order-abstract-syntax-in-rust/51186603#51186603", "title": "Is it possible to represent Higher-Order Abstract Syntax in Rust?", "body": "<p>As a fan of lambda calculus I decided to attempt this and it is indeed possible, though a bit less sightly than in Haskell (<a href=\"http://play.rust-lang.org/?gist=f2f56e834bf4fd0ab8586a86dab55e7e&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">playground link</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::rc::Rc;\nuse Term::*;\n\n#[derive(Clone)]\nenum Term {\n    Hol(Box&lt;Term&gt;),\n    Var(usize),\n    Lam(Rc&lt;dyn Fn(Term) -&gt; Term&gt;),\n    App(Box&lt;Term&gt;, Box&lt;Term&gt;),\n}\n\nimpl Term {\n    fn app(t1: Term, t2: Term) -&gt; Self {\n        App(Box::new(t1), Box::new(t2))\n    }\n\n    fn lam&lt;F: Fn(Term) -&gt; Term + 'static&gt;(f: F) -&gt; Self {\n        Lam(Rc::new(f))\n    }\n\n    fn hol(t: Term) -&gt; Self {\n        Hol(Box::new(t))\n    }\n}\n\nfn pretty(term: Term) -&gt; String {\n    fn go(lvl: usize, term: Term) -&gt; String {\n        match term {\n            Hol(hol) =&gt; go(lvl, *hol),\n            Var(idx) =&gt; format!(\"x{}\", idx),\n            Lam(bod) =&gt; format!(\"\u03bbx{}. {}\", lvl, go(lvl + 1, bod(Term::hol(Var(lvl))))),\n            App(fun, arg) =&gt; format!(\"({} {})\", go(lvl, *fun), go(lvl, *arg)),\n        }\n    }\n\n    go(0, term)\n}\n\nfn reduce(term: Term) -&gt; Term {\n    match term {\n        Hol(hol) =&gt; *hol,\n        Var(idx) =&gt; Var(idx),\n        Lam(bod) =&gt; Term::lam(move |v| reduce(bod(v))),\n        App(fun, arg) =&gt; match reduce(*fun) {\n            Hol(fhol) =&gt; Term::app(Hol(fhol), reduce(*arg)),\n            Var(fidx) =&gt; Term::app(Var(fidx), reduce(*arg)),\n            Lam(fbod) =&gt; fbod(reduce(*arg)),\n            App(ffun, farg) =&gt; Term::app(Term::app(*ffun, *farg), reduce(*arg)),\n        },\n    }\n}\n\nfn main() {\n    // (\u03bbx. x x) (\u03bbs. \u03bbz. s (s (s z)))\n    let term1 = Term::app(\n        Term::lam(|x| Term::app(x.clone(), x.clone())), \n        Term::lam(|s| Term::lam(move |z| \n            Term::app(\n                s.clone(),\n                Term::app(\n                    s.clone(),\n                    Term::app(\n                        s.clone(),\n                        z.clone()\n    ))))));\n\n    // \u03bbb. \u03bbt. \u03bbf. b t f\n    let term2 = Term::lam(|b| Term::lam(move |t| \n        Term::lam({\n            let b = b.clone(); // necessary to satisfy the borrow checker\n            move |f| Term::app(Term::app(b.clone(), t.clone()), f)\n        })\n    ));\n\n    println!(\"{}\", pretty(reduce(term1))); // \u03bbx0. \u03bbx1. (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 x1)))))))))))))))))))))))))))\n    println!(\"{}\", pretty(reduce(term2))); // \u03bbx0. \u03bbx1. \u03bbx2. ((x0 x1) x2)\n}\n</code></pre>\n\n<p>Thanks to BurntSushi5 for the suggestion to use <code>Rc</code> that I always forget exists and to Shepmaster for suggesting to remove the unnecessary <code>Box</code> under <code>Rc</code> in <code>Lam</code> and how to satisfy the borrow checker in longer <code>Lam</code> chains.</p>\n"}, {"comments": [{"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539569674, "post_id": 52808497, "comment_id": 92535829, "body": "@shepmaster I personally prefer <code>(FnOnce(Term) -&gt; Term) + Clone + &#39;static</code> than <code>(FnOnce(Term) -&gt; Term + Clone + &#39;static)</code>, as the former makes it clear <code>FnOnce(Term) -&gt; Term</code> is a single trait, and cannot be understood as <code>FnOnce(Term) -&gt; (Term + Clone) + &#39;static</code> or something like that."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539569883, "post_id": 52808497, "comment_id": 92535879, "body": "You are welcome to change it back, that&#39;s just what rustfmt corrects it to. I tend to put those before the Fn: <code>Clone + FnOnce.. </code>. You should open a rustfmt issue if you think that it actively makes your code less clear."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539575603, "post_id": 52808497, "comment_id": 92537019, "body": "You gave a very good idea. Usually when it is unambiguous it is better to write the main trait first, then the decoration traits, then lifetimes. However, if things becomes confusing there is no reason to not using the opposite."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1540520355, "post_id": 52808497, "comment_id": 92905486, "body": "@Shepmaster I figured out that rustfmt formatted style is not only undesirable, it is also invalid. I submitted an issue <a href=\"https://github.com/rust-lang-nursery/rustfmt/issues/3137\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/rustfmt/issues/3137</a>"}], "tags": [], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "is_accepted": false, "score": 5, "last_activity_date": 1540778621, "last_edit_date": 1540778621, "creation_date": 1539565408, "answer_id": 52808497, "question_id": 51182640, "link": "https://stackoverflow.com/questions/51182640/is-it-possible-to-represent-higher-order-abstract-syntax-in-rust/52808497#52808497", "title": "Is it possible to represent Higher-Order Abstract Syntax in Rust?", "body": "<p>The <a href=\"https://stackoverflow.com/a/51186603/155423\">accepted solution</a> uses <code>Rc</code> to create a clonable heap allocated closure.</p>\n\n<p>Technically speaking, this is not necessary as there is no runtime reference counting needed. All we need is a closure as a trait object and that is also clonable.</p>\n\n<p>However, Rust 1.29.2 does not allow us to have things like <code>dyn Clone + FnOnce(Term) -&gt; Term</code>, this restriction may be relaxed in the future. The restriction has two factors: <code>Clone</code> is not object safe (which is unlikely to be relaxed) and if we combine two traits together, one of them has to be an auto trait (this can be relaxed IMHO).</p>\n\n<p>Whilst waiting for the language improvement, we can introduce a new trait to get around this:</p>\n\n<pre><code>// Combination of FnOnce(Term) -&gt; Term and Clone\ntrait TermLam {\n    // The FnOnce part, declared like an Fn, because we need object safety\n    fn app(&amp;self, t: Term) -&gt; Term;\n    // The Clone part, but we have to return sized objects \n    // (not Self either because of object safety), so it is in a box\n    fn clone_box(&amp;self) -&gt; Box&lt;dyn TermLam&gt;;\n}\n\n// Blanket implementation for appropriate types\nimpl&lt;F&gt; TermLam for F\nwhere\n    F: 'static/*' highlighting fix */ + Clone + FnOnce(Term) -&gt; Term\n{\n    // Note: when you have a Clone + FnOnce, you effectively have an Fn\n    fn app(&amp;self, t: Term) -&gt; Term {\n        (self.clone())(t)\n    }\n\n    fn clone_box(&amp;self) -&gt; Box&lt;dyn TermLam&gt; {\n        Box::new(self.clone())\n    }\n}\n\n// We can now clone the box\nimpl Clone for Box&lt;dyn TermLam&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        self.clone_box()\n    }\n}\n</code></pre>\n\n<p>Then we can remove the need to use <code>Rc</code>.</p>\n\n<pre><code>#[derive(Clone)]\nenum Term {\n    Hol(Box&lt;Term&gt;),\n    Var(usize),\n    Lam(Box&lt;dyn TermLam&gt;),\n    App(Box&lt;Term&gt;, Box&lt;Term&gt;),\n}\n\nimpl Term {\n    fn app(t1: Term, t2: Term) -&gt; Self {\n        App(Box::new(t1), Box::new(t2))\n    }\n\n    fn lam&lt;F&gt;(f: F) -&gt; Self\n    where\n       F: 'static/*' highlighting fix */ + Clone + FnOnce(Term) -&gt; Term        \n    {\n        Lam(Box::new(f))\n    }\n\n    fn hol(t: Term) -&gt; Self {\n        Hol(Box::new(t))\n    }\n}\n\nfn pretty(term: Term) -&gt; String {\n    fn go(lvl: usize, term: Term) -&gt; String {\n        match term {\n            Hol(hol) =&gt; go(lvl, *hol),\n            Var(idx) =&gt; format!(\"x{}\", idx),\n            Lam(bod) =&gt; format!(\"\u03bbx{}. {}\", lvl, go(lvl + 1, bod.app(Term::hol(Var(lvl))))),\n            App(fun, arg) =&gt; format!(\"({} {})\", go(lvl, *fun), go(lvl, *arg)),\n        }\n    }\n\n    go(0, term)\n}\n\nfn reduce(term: Term) -&gt; Term {\n    match term {\n        Hol(hol) =&gt; *hol,\n        Var(idx) =&gt; Var(idx),\n        Lam(bod) =&gt; Term::lam(move |v| reduce(bod.app(v))),\n        App(fun, arg) =&gt; match reduce(*fun) {\n            Hol(fhol) =&gt; Term::app(Hol(fhol), reduce(*arg)),\n            Var(fidx) =&gt; Term::app(Var(fidx), reduce(*arg)),\n            Lam(fbod) =&gt; fbod.app(reduce(*arg)),\n            App(ffun, farg) =&gt; Term::app(Term::app(*ffun, *farg), reduce(*arg)),\n        },\n    }\n}\n\nfn main() {\n    // (\u03bbx. x x) (\u03bbs. \u03bbz. s (s (s z)))\n    let term1 = Term::app(\n        Term::lam(|x| Term::app(x.clone(), x.clone())),\n        Term::lam(|s| {\n            Term::lam(move |z| {\n                Term::app(\n                    s.clone(),\n                    Term::app(s.clone(), Term::app(s.clone(), z.clone())),\n                )\n            })\n        }),\n    );\n\n    // \u03bbb. \u03bbt. \u03bbf. b t f\n    let term2 = Term::lam(|b| {\n        Term::lam(move |t| {\n            Term::lam({\n                //let b = b.clone(); No longer necessary for Rust 1.29.2\n                move |f| Term::app(Term::app(b.clone(), t.clone()), f)\n            })\n        })\n    });\n\n    println!(\"{}\", pretty(reduce(term1))); // \u03bbx0. \u03bbx1. (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 x1)))))))))))))))))))))))))))\n    println!(\"{}\", pretty(reduce(term2))); // \u03bbx0. \u03bbx1. \u03bbx2. ((x0 x1) x2)\n}\n</code></pre>\n\n<p>This was the original way that the other answer attempted, which the author was unable to resolve.</p>\n\n<h1>Optimize!</h1>\n\n<p>Rust is known to be achieve performance without sacrificing safety. The implementation above however, always passes <code>Term</code>s by value and have many unnecessary <code>clone</code> calls, so some optimizations can be done.</p>\n\n<p>Also, the standard way to stringify a piece of Rust data is to use the <code>Display</code> trait. So let's make those right!</p>\n\n<pre><code>use std::fmt::{Display, Error, Formatter};\nuse Term::*;\n\n// Combination of FnOnce(Term) -&gt; Term and Clone\ntrait TermLam {\n    // The FnOnce part, declared like an Fn, because we need object safety\n    fn app(&amp;self, t: Term) -&gt; Term;\n    // The Clone part, but we have to return sized objects\n    // (not Self either because of object safety), so it is in a box\n    fn clone_box(&amp;self) -&gt; Box&lt;dyn TermLam&gt;;\n}\n\n// Blanket implementation for appropriate types\nimpl&lt;F&gt; TermLam for F\nwhere\n    F: 'static/*' highlighting fix */ + Clone + FnOnce(Term) -&gt; Term,\n{\n    // Note: when you have a Clone + FnOnce, you effectively have an Fn\n    fn app(&amp;self, t: Term) -&gt; Term {\n        (self.clone())(t)\n    }\n\n    fn clone_box(&amp;self) -&gt; Box&lt;dyn TermLam&gt; {\n        Box::new(self.clone())\n    }\n}\n\n// We can now clone the box\nimpl Clone for Box&lt;dyn TermLam&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        self.clone_box()\n    }\n}\n\n#[derive(Clone)]\nenum Term {\n    Hol(Box&lt;Term&gt;),\n    Var(usize),\n    Lam(Box&lt;dyn TermLam&gt;),\n    App(Box&lt;Term&gt;, Box&lt;Term&gt;),\n}\n\nimpl Term {\n    fn app(t1: Term, t2: Term) -&gt; Self {\n        App(Box::new(t1), Box::new(t2))\n    }\n\n    fn lam&lt;F&gt;(f: F) -&gt; Self\n    where\n        F: 'static/*' highlighting fix */ + Clone + FnOnce(Term) -&gt; Term,\n    {\n        Lam(Box::new(f))\n    }\n\n    fn hol(t: Term) -&gt; Self {\n        Hol(Box::new(t))\n    }\n\n    // `reduce` is now a by-reference method\n    fn reduce(&amp;self) -&gt; Term {\n        match self {\n            Hol(_) =&gt; self.clone(),\n            Var(_) =&gt; self.clone(),\n            Lam(bod) =&gt; {\n                let bod = bod.clone();\n                Term::lam(move |v| bod.app(v).reduce())\n            },\n            // We reuse the reduced object when possible,\n            // to avoid unnecessary clone.\n            App(fun, arg) =&gt; match fun.reduce() {\n                other @ Hol(_) =&gt; Term::app(other, arg.reduce()),\n                other @ Var(_) =&gt; Term::app(other, arg.reduce()),\n                Lam(fbod) =&gt; fbod.app(arg.reduce()),\n                other @ App(_, _) =&gt; Term::app(other, arg.reduce()),\n            },\n        }\n    }\n}\n//The standard way of `pretty` is `Display`\nimpl Display for Term {\n    fn fmt(&amp;self, fmt: &amp;mut Formatter) -&gt; Result&lt;(), Error&gt; {\n        // As the API is different from `pretty`, the way we do recursion is\n        // a bit different as well\n        struct LvlTerm&lt;'a&gt;(usize, &amp;'a Term);\n        impl&lt;'a&gt; Display for LvlTerm&lt;'a&gt; {\n            fn fmt(&amp;self, fmt: &amp;mut Formatter) -&gt; Result&lt;(), Error&gt; {\n                match self {\n                    LvlTerm(lvl, Hol(hol)) =&gt; write!(fmt, \"{}\", LvlTerm(*lvl, hol)),\n                    LvlTerm(_, Var(idx)) =&gt; write!(fmt, \"x{}\", idx),\n                    LvlTerm(lvl, Lam(bod)) =&gt; write!(\n                        fmt,\n                        \"\u03bbx{}. {}\",\n                        *lvl,\n                        LvlTerm(*lvl + 1, &amp;bod.app(Term::hol(Var(*lvl))))\n                    ),\n                    LvlTerm(lvl, App(fun, arg)) =&gt; {\n                        write!(fmt, \"({} {})\", LvlTerm(*lvl, fun), LvlTerm(*lvl, arg))\n                    }\n                }\n            }\n        }\n        write!(fmt, \"{}\", LvlTerm(0, self))\n    }\n}\n\nfn main() {\n    // In general, if you need to use a value n+1 times, you need to\n    // call clone it n times. You don't have to clone it in the last use.\n    // (\u03bbx. x x) (\u03bbs. \u03bbz. s (s (s z)))\n    let term1 = Term::app(\n        Term::lam(|x| Term::app(x.clone(), x)),\n        Term::lam(|s| {\n            Term::lam(move |z| Term::app(s.clone(), Term::app(s.clone(), Term::app(s, z))))\n        }),\n    );\n\n    // No clone is required if all values are used exactly once.\n    // \u03bbb. \u03bbt. \u03bbf. b t f\n    let term2 =\n        Term::lam(|b| Term::lam(move |t| Term::lam(move |f| Term::app(Term::app(b, t), f))));\n\n    println!(\"{}\", term1.reduce()); // \u03bbx0. \u03bbx1. (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 (x0 x1)))))))))))))))))))))))))))\n    println!(\"{}\", term2.reduce()); // \u03bbx0. \u03bbx1. \u03bbx2. ((x0 x1) x2)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=a06d804f27c9ad545574a29bfdf74983\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>We can see that, the code above can be further simplified: as the match arms in <code>reduce</code> have code duplication, we can collapse them together. However, as the purpose of this answer is to demonstrate doing things the SAME way the Haskell code in the question does, so this was left as it is.</p>\n\n<p>Also, by only requiring the closures to be <code>FnOnce</code>, not <code>Fn</code>, we relaxed in the usage site the requirement of cloning all variables to only when it is use more than once. The trade off is that whenever the closure was called, all variables it captures will be cloned. It is hard to tell which one is better until profiling on it; so I just pick the one that makes the code looks better.</p>\n\n<p>Again, Rust makes those decisions explicit and keeps the differences of choices in you mind, this is good!</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3029, "favorite_count": 10, "accepted_answer_id": 51186603, "answer_count": 2, "score": 34, "last_activity_date": 1540778621, "creation_date": 1530757640, "last_edit_date": 1530818191, "question_id": 51182640, "link": "https://stackoverflow.com/questions/51182640/is-it-possible-to-represent-higher-order-abstract-syntax-in-rust", "title": "Is it possible to represent Higher-Order Abstract Syntax in Rust?", "body": "<p>In Haskell, it is very easy to write <a href=\"https://en.wikipedia.org/wiki/Algebraic_data_type\" rel=\"noreferrer\">algebraic data types (ADTs)</a> with functions. This allows us to write interpreters that rely on native functions for substitutions, i.e., a <a href=\"https://en.wikipedia.org/wiki/Higher-order_abstract_syntax\" rel=\"noreferrer\">higher-order abstract syntax (HOAS)</a>, which is known to be very efficient. For example, this is a simple \u03bb-calculus interpreter using that technique:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Term\n  = Hol Term\n  | Var Int\n  | Lam (Term -&gt; Term)\n  | App Term Term\n\npretty :: Term -&gt; String\npretty = go 0 where\n  go lvl term = case term of\n    Hol hol     -&gt; go lvl hol \n    Var idx     -&gt; \"x\" ++ show idx\n    Lam bod     -&gt; \"\u03bbx\" ++ show lvl ++ \". \" ++ go (lvl+1) (bod (Hol (Var lvl)))\n    App fun arg -&gt; \"(\" ++ go lvl fun ++ \" \" ++ go lvl arg ++ \")\"\n\nreduce :: Term -&gt; Term\nreduce (Hol hol)     = hol\nreduce (Var idx)     = Var idx\nreduce (Lam bod)     = Lam (\\v -&gt; reduce (bod v))\nreduce (App fun arg) = case reduce fun of\n  Hol fhol      -&gt; App (Hol fhol) (reduce arg)\n  Var fidx      -&gt; App (Var fidx) (reduce arg)\n  Lam fbod      -&gt; fbod (reduce arg)\n  App ffun farg -&gt; App (App ffun farg) (reduce arg)\n\nmain :: IO ()\nmain\n  = putStrLn . pretty . reduce\n  $ App\n    (Lam$ \\x -&gt; App x x)\n    (Lam$ \\s -&gt; Lam$ \\z -&gt; App s (App s (App s z)))\n</code></pre>\n\n<p>Notice how native functions were used rather than de Bruijn indices. That makes the interpreter considerably faster than it would be if we substituted applications manually.</p>\n\n<p>I'm aware Rust has closures and many <code>Fn()</code> types, but I'm not sure they work exactly like Haskell closures in this situation, much less how to express that program given the low-level nature of Rust. <strong>Is it possible to represent HOAS in Rust? How would the <code>Term</code> datatype be represented?</strong></p>\n"}]