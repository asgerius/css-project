[{"tags": ["rust", "closures", "mutable"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1485985066, "post_id": 41990175, "comment_id": 71157726, "body": "I think you might need to borrow it as <code>&amp;mut</code> inside your closure like this:      .on_edit(move | s, input, _| {         let words = &amp;mut words;         words.typed_some(s, input);     })  I can&#39;t test it though (on mobile)."}, {"owner": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1485985732, "post_id": 41990175, "comment_id": 71158011, "body": "@WesleyWiser Thanks but I get the same error, just slightly rephrased <a href=\"https://bpaste.net/show/dde9cfc1c7fe\" rel=\"nofollow noreferrer\">bpaste.net/show/dde9cfc1c7fe</a>"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1486045081, "post_id": 41990175, "comment_id": 71185053, "body": "@WesleyWiser <code>EditView::on_edit</code> requires a closure with the <code>Fn</code> bound, which means it cannot mutate its environment (except through an escape hatch like <code>RefCell</code>, as shown in my answer)."}], "answers": [{"comments": [{"owner": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "edited": false, "score": 0, "creation_date": 1486054661, "post_id": 41991381, "comment_id": 71191762, "body": "When I had went to bed (of course) I actually thought &quot;Maybe this is when you have to use refcell?&quot;. Thanks for the explanation!"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "edited": false, "score": 1, "creation_date": 1486116203, "post_id": 41991381, "comment_id": 71217214, "body": "@Powersource It would still be a good idea to check with the cursive developers whether <code>on_edit</code> really requires a <code>Fn</code> or it could be relaxed to accept a <code>FnMut</code>. If the current constraint is there for a good reason, cheating it with <code>RefCell</code> might eventually lead to a panic at run-time."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 7, "last_activity_date": 1486048639, "last_edit_date": 1486048639, "creation_date": 1485989783, "answer_id": 41991381, "question_id": 41990175, "link": "https://stackoverflow.com/questions/41990175/problems-with-mutability-in-a-closure/41991381#41991381", "title": "Problems with mutability in a closure", "body": "<p><code>on_edit</code> actually requires an immutable callback. It is not obvious whether that is an oversight or a conscious decision by developers, but your code must respect it by having the closure only access its enclosing environment immutably.</p>\n\n<p>Rust does provide an escape hatch for such situations: the <a href=\"https://doc.rust-lang.org/beta/book/choosing-your-guarantees.html#refcellt\" rel=\"nofollow noreferrer\"><code>RefCell</code> type</a>. Instead of moving the <code>WordBar</code> into the closure, move a <code>RefCell&lt;WordBar&gt;</code>, and then use its <code>borrow_mut()</code> method to borrow mutably, moving the borrow check to run-time. This compiles:</p>\n\n<pre><code>fn main() {\n    let mut siv = Cursive::new();\n    siv.add_global_callback('q', |s| s.quit());\n\n    let words = ::std::cell::RefCell::new(WordBar::new());\n\n    let text = words.borrow_mut().update_and_get_bar();\n    siv.add_layer(Dialog::around(LinearLayout::vertical()\n                                 .child(TextView::new(text)\n                                        .with_id(\"target_field\"))\n                                 .child(EditView::new()\n                                        .on_edit(move |s, input, _|\n                                                 words.borrow_mut().typed_some(s, input))\n                                        .with_id(\"input_field\")))\n                  .title(\"Keyurses\")\n                  .button(\"Quit\", |s| s.quit()));\n\n    siv.run();\n}\n</code></pre>\n\n<p>Note that despite bypassing the compile-time borrow check, the above code doesn't give up the guarantees of safe code, it just moves the check into the run-time. <code>RefCell</code> will not allow an already borrowed cell to be borrowed again - if the value is already borrowed, a call to <code>borrow_mut()</code> will panic.</p>\n\n<p>It is up to your code to ensure that this panic is not triggered - in this case by making sure that the actions performed by the closure passed to <code>on_edit</code> don't cause <code>on_edit</code> to be invoked on the same <code>EditView</code> until the closure returns.</p>\n"}], "owner": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 793, "favorite_count": 1, "accepted_answer_id": 41991381, "answer_count": 1, "score": 4, "last_activity_date": 1486048639, "creation_date": 1485984805, "last_edit_date": 1485986875, "question_id": 41990175, "link": "https://stackoverflow.com/questions/41990175/problems-with-mutability-in-a-closure", "title": "Problems with mutability in a closure", "body": "<p>I really don't know how to get past this. As far as I understand it, <code>words</code> is moved into the closure (which is fine by me, it's the only place it's going to be used after this) but needs to be &amp;mut according to <code>typed_some</code>. What the error suggests sounds like a decent idea, it's just that that part is in a library and I don't know if it'd be something they could implement.<br>\n<a href=\"https://gyscos.github.io/Cursive/cursive/views/struct.EditView.html#method.on_edit\" rel=\"nofollow noreferrer\"><code>on_edit</code> documentation.</a></p>\n\n<pre><code>extern crate cursive;\nextern crate rand;\n\nuse cursive::Cursive;\nuse cursive::views::{Dialog, TextView, EditView, LinearLayout};\nuse cursive::traits::Identifiable;\nuse rand::Rng;\n\nfn main() {\n    // This really messes with stdout. Seems to disable it by default but when\n    // siv is running println prints in random places on the screen.\n    let mut siv = Cursive::new();\n    siv.add_global_callback('q', |s| s.quit());\n\n    let mut words = WordBar::new();\n\n    siv.add_layer(Dialog::around(LinearLayout::vertical()\n            .child(TextView::new(words.update_and_get_bar()).with_id(\"target_field\"))\n            .child(EditView::new()\n                .on_edit(move |s, input, _| words.typed_some(s, input))\n                .with_id(\"input_field\")))\n        .title(\"Keyurses\")\n        .button(\"Quit\", |s| s.quit()));\n\n    siv.run();\n}\n\n\ntype WordList = Vec&lt;&amp;'static str&gt;;\n\n#[derive(Debug)]\nstruct WordBar {\n    words: WordList,\n    target_list: WordList,\n}\n\nimpl WordBar {\n    fn new() -&gt; Self {\n        WordBar {\n            words: include_str!(\"google-10000-english-usa.txt\").lines().collect(),\n            target_list: vec![\"foo\"],\n        }\n    }\n\n    fn typed_some(&amp;mut self, siv: &amp;mut Cursive, input: &amp;str) {\n        // See https://github.com/gyscos/Cursive/issues/102\n        // for discussion on this mess\n\n        let mut reset_input = false;\n        {\n            let target_word = siv.find_id::&lt;TextView&gt;(\"target_field\").unwrap();\n            if target_word.get_content() == input {\n                target_word.set_content(self.update_and_get_bar());\n                reset_input = true;\n            }\n        }\n        if reset_input {\n            siv.find_id::&lt;EditView&gt;(\"input_field\").unwrap().set_content(\"\");\n        }\n    }\n\n    fn rand_word(&amp;self) -&gt; &amp;'static str {\n        let mut rng = rand::thread_rng();\n        rng.choose(&amp;self.words).unwrap()\n    }\n\n    fn update_and_get_bar(&amp;mut self) -&gt; String {\n        if self.target_list.len() &gt; 0 {\n            self.target_list.pop();\n        }\n        while self.target_list.len() &lt; 5 {\n            let new_word = self.rand_word();\n            self.target_list.push(new_word);\n        }\n        let mut bar_text: String = \"\".to_string();\n        for word in &amp;self.target_list {\n            if bar_text == \"\" {\n                bar_text = word.to_string();\n            } else {\n                bar_text.push_str(\" \");\n                bar_text.push_str(word);\n            }\n        }\n        bar_text\n    }\n}\n</code></pre>\n\n<p>And the errors</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot borrow captured outer variable in an `Fn` closure as mutable\n  --&gt; src/main.rs:20:45\n   |\n20 |                 .on_edit(move |s, input, _| words.typed_some(s, input))\n   |                                             ^^^^^\n   |\nhelp: consider changing this closure to take self by mutable reference\n  --&gt; src/main.rs:20:26\n   |\n20 |                 .on_edit(move |s, input, _| words.typed_some(s, input))\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p><a href=\"https://github.com/Powersource/keyurses\" rel=\"nofollow noreferrer\">Repo link</a> if you'd rather clone it, everything's pushed. Commit 633ed60 to be specific.</p>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1485983251, "post_id": 41989202, "comment_id": 71156873, "body": "I don&#39;t really understand the example. Is there a relation between <code>Court&lt;T&gt;</code> and <code>Field&lt;T&gt;</code>?"}, {"owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1485983504, "post_id": 41989202, "comment_id": 71156990, "body": "@WesleyWiser No, I just wanted to show that there would be multiple structs that would be involved in this."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1485983838, "post_id": 41989202, "comment_id": 71157157, "body": "Ok. It looks to me like you&#39;re trying to have different implementations of <code>Match&lt;T&gt;</code> depending on the <code>Field&lt;T&gt;</code> and the activity being played on it right? I think you&#39;re either going to have to add a type parameter to <code>Field</code> for the game type or to <code>Match</code> for the game type."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 4, "creation_date": 1485992557, "post_id": 41989202, "comment_id": 71160802, "body": "I agree with @WesleyWiser: it&#39;s very hard to understand what you are trying to accomplish. You could likely remove all but two of the types, which should be enough. Additionally, you haven&#39;t defined what <code>Match</code> <i>is</i>. Please review what how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. <b>Showing us</b> code that is an &quot;expose[d] unneeded ball method&quot; would also go a long way."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527782890, "post_id": 41989202, "comment_id": 88267048, "body": "Which of the two types would be the private one and which the public one, the balls or the fields?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527782937, "post_id": 41989202, "comment_id": 88267069, "body": "Are you looking for <code>impl&lt;T&gt; Match&lt;T, Football&lt;T&gt;&gt; for Field&lt;T&gt; { \u2026 }</code>?"}], "owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 67, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1485983439, "creation_date": 1485981151, "last_edit_date": 1485983439, "question_id": 41989202, "link": "https://stackoverflow.com/questions/41989202/can-i-associate-two-types-with-an-implementation", "title": "Can I associate two types with an implementation?", "body": "<p>I have a public trait in a library that is expected to use two structures for its implementation. One of the structs is public and is expected to be set up by the programmer, at which point they'll call the methods from the trait as they choose.</p>\n\n<p>During that process, however, the public trait will make use of another struct (private) and implementation to do the job of the public implementation. All of that is 'under the hood', but I'd like to give the programmer the option to choose which strategy is used 'under the hood'.</p>\n\n<p>Can I do this by associating an implementation with multiple types?</p>\n\n<h2>Contrived Example</h2>\n\n<pre><code>pub struct Court&lt;T&gt; {}\n\npub struct Field&lt;T&gt; {}\n\nstruct Football&lt;T&gt; {}\n\nimpl&lt;T&gt; Football&lt;T&gt; {}\n\nstruct SoccerBall&lt;T&gt; {}\n\nimpl&lt;T&gt; SoccerBall&lt;T&gt; {}\n\nstruct LacrosseBall&lt;T&gt; {}\n\nimpl&lt;T&gt; LacrosseBall&lt;T&gt; {}\n\nstruct Baseball&lt;T&gt; {}\n\nimpl&lt;T&gt; Baseball&lt;T&gt;{}\n\nimpl&lt;T&gt; Match&lt;T&gt; for Field&lt;T&gt;, Football&lt;T&gt; {}\n\nimpl&lt;T&gt; Match&lt;T&gt; for Field&lt;T&gt;, SoccerBall&lt;T&gt; {}\n\nimpl&lt;T&gt; Match&lt;T&gt; for Field&lt;T&gt;, LacrosseBall&lt;T&gt; {}\n\nimpl&lt;T&gt; Match&lt;T&gt; for Field&lt;T&gt;, Baseball&lt;T&gt; {}\n\nimpl&lt;T&gt; Match&lt;T&gt; for Court&lt;T&gt;, LacrosseBall&lt;T&gt;{}\n</code></pre>\n\n<p>In this case, I may want to implement a <code>Match</code> played with different balls, on different playing areas. At the outset, I want to give the programmer the chance to choose a ball, but I don't want to expose unneeded ball methods publicly.</p>\n\n<p>The contrived example may seem like it invites the solution of adding a <code>Sport</code> type, but that's an artifact of the example, and I'd like to avoid adding more types if I can get away with it.</p>\n"}, {"tags": ["types", "rust", "traits"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1485956541, "post_id": 41980909, "comment_id": 71140158, "body": "I&#39;m getting different issues: &quot;expected type parameter, found enum <code>std::result::Result</code>&quot; (are you missing an <code>unwrap</code> in the code above?) and &quot;no method named <code>shutdown</code> found for type <code>T</code> in the current scope&quot; (assuming you are using only <code>std::net::{TcpStream, Shutdown}</code> and <code>std::io::{Read, Write}</code>)."}, {"owner": {"reputation": 866, "user_id": 1756880, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/a81ab9957b782da9baeb42d437a5a95a?s=128&d=identicon&r=PG", "display_name": "Marco Alka", "link": "https://stackoverflow.com/users/1756880/marco-alka"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1485959013, "post_id": 41980909, "comment_id": 71141907, "body": "@ljedrz the implementation above is only a sample, so I did not check for the return types or error management etc. (I wanted to keep the purpose simple and readable). The second problem is actually mentioned in the text above ;)"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1485959417, "post_id": 41980909, "comment_id": 71142188, "body": "Ah yes, I wasn&#39;t reading carefully enough :). Nevertheless, it is always a good idea to provide code that reproduces the exact issue you are having upon compilation (<a href=\"http://stackoverflow.com/help/mcve\">MCVE</a>) - it makes it much easier to find the solution applicable to your specific case."}], "answers": [{"comments": [{"owner": {"reputation": 866, "user_id": 1756880, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/a81ab9957b782da9baeb42d437a5a95a?s=128&d=identicon&r=PG", "display_name": "Marco Alka", "link": "https://stackoverflow.com/users/1756880/marco-alka"}, "edited": false, "score": 0, "creation_date": 1485959606, "post_id": 41981431, "comment_id": 71142337, "body": "That looks like a good idea and I managed to make it compile, thank you a lot! I think I learned something new today :)"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 1, "last_activity_date": 1485956977, "creation_date": 1485956977, "answer_id": 41981431, "question_id": 41980909, "link": "https://stackoverflow.com/questions/41980909/trait-implementation-with-specific-struct-as-parameter/41981431#41981431", "title": "Trait implementation with specific struct as parameter", "body": "<p>Instead of making the <code>MyTraitPool</code> trait generic, you'd make your <code>MyPool</code> generic and you'd create an intermediate <code>MyStream</code> trait to offer you all methods you need:</p>\n\n<pre><code>trait MyStream: Read + Write {\n    fn connect(&amp;str) -&gt; Self;\n    fn shutdown(self);\n}\nimpl MyStream for TcpStream {\n    fn connect(addr: &amp;str) -&gt; Self { TcpStream::connect(addr) }\n    fn shutdown(self) { TcpStream::shutdown(self, Shutdown::Both); }\n}\nimpl&lt;T: MyStream&gt; MyTraitPool for MyPool&lt;T&gt; {\n    fn acquire(&amp;self, addr: &amp;str) -&gt; T {\n        MyStream::connect(addr)\n    }\n    fn free(&amp;self, con: T) {\n        con.shutdown()\n    }\n}\n</code></pre>\n\n<p>Streams which do not actually need to shutdown, would simply leave the implementation empty.</p>\n"}], "owner": {"reputation": 866, "user_id": 1756880, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/a81ab9957b782da9baeb42d437a5a95a?s=128&d=identicon&r=PG", "display_name": "Marco Alka", "link": "https://stackoverflow.com/users/1756880/marco-alka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 41981431, "answer_count": 1, "score": 2, "last_activity_date": 1485964640, "creation_date": 1485955374, "last_edit_date": 1485964640, "question_id": 41980909, "link": "https://stackoverflow.com/questions/41980909/trait-implementation-with-specific-struct-as-parameter", "title": "Trait implementation with specific struct as parameter", "body": "<p>I have a trait for readable and writable streams (like <code>TcpStream</code>):</p>\n\n<pre><code>pub trait MyTraitPool&lt;T: Read + Write&gt; {\n    fn acquire(&amp;self, &amp;String) -&gt; T;\n    fn free(&amp;self, T);\n}\n</code></pre>\n\n<p>I want to implement that trait with <code>TcpStream</code> as <code>T</code>, so I would like to write</p>\n\n<pre><code>struct MyPool;\n\nimpl&lt;T&gt; MyTraitPool&lt;T&gt; for MyPool\n    where T: Read + Write {\n\n    fn acquire(&amp;self, addr: &amp;String) -&gt; T {\n        TcpStream::connect(addr.as_str()).unwrap()\n    }\n\n    fn free(&amp;self, con: T) {\n        con.shutdown(Shutdown::Both);\n    }\n}\n</code></pre>\n\n<p>I get the error \"expected type parameter, found struct <code>std::net::TcpStream</code>\" in the <code>acquire</code> method. As for the <code>free</code> method, I know that <code>shutdown</code> is <code>TcpStream</code>-specific, but I would like to have an implementation specific for <code>TcpStream</code>s at that point and hence be able to call <code>TcpStream</code>-specific methods. So how do I go about doing so?</p>\n\n<p>As a side note: the implementation is just an example for what kind of things I would like to do, not for how the code operates later!</p>\n"}, {"tags": ["testing", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485939134, "post_id": 41970758, "comment_id": 71128677, "body": "Glad to see I&#39;m not the only one wishing to bundle multiple crates in the same repository. I am surprised cargo doesn&#39;t seem to have better support for this."}], "answers": [{"tags": [], "owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "is_accepted": false, "score": 6, "last_activity_date": 1485915347, "last_edit_date": 1495540398, "creation_date": 1485915347, "answer_id": 41970857, "question_id": 41970758, "link": "https://stackoverflow.com/questions/41970758/how-to-recursively-test-all-crates-under-a-directory/41970857#41970857", "title": "How to recursively test all crates under a directory?", "body": "<p>You could use a shell script. According to <a href=\"https://stackoverflow.com/a/2282701/2851815\">this answer</a>, this</p>\n\n<pre><code>find . -name Cargo.toml -printf '%h\\n'\n</code></pre>\n\n<p>Will print out the directories containing <code>Cargo.toml</code>, so, composing this with the rest of the standard shell utils yields us</p>\n\n<pre><code>for f in $(find . -name Cargo.toml -printf '%h\\n' | sort -u); do\n  pushd $f &gt; /dev/null;\n  cargo test;\n  popd &gt; /dev/null;\ndone\n</code></pre>\n\n<p>Which will iterate over all directories containing <code>Cargo.toml</code> (a good bet for crates) and run <code>cargo test</code> in them.</p>\n"}, {"tags": [], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "is_accepted": false, "score": 8, "last_activity_date": 1486281728, "last_edit_date": 1486281728, "creation_date": 1485915469, "answer_id": 41970873, "question_id": 41970758, "link": "https://stackoverflow.com/questions/41970758/how-to-recursively-test-all-crates-under-a-directory/41970873#41970873", "title": "How to recursively test all crates under a directory?", "body": "<p>Update: since adding this answer 1.15 was released, adding <code>cargo test --all</code>, will compare this with a custom script.</p>\n\n<hr>\n\n<p>This shell-script runs tests recursively on a git repository for all directories containing a <code>Cargo.toml</code> file (easy enough to edit for other VCS).</p>\n\n<ul>\n<li>Exits on the first error.</li>\n<li>Uses <code>nocapture</code> so stdout is shown<br><em>(depends on personal preference, easy to adjust)</em>.</li>\n<li>Runs tests with <code>RUST_BACKTRACE</code> set, for more useful output.</li>\n<li>Builds and runs in two separate steps<br><em>(workaround for <a href=\"https://github.com/rust-lang/rust/issues/37477\" rel=\"nofollow noreferrer\">this bug</a> in 1.14 stable).</em></li>\n<li>Optional <code>CARGO_BIN</code> environment variable to override the cargo command<br><em>(handy if you want to use a cargo-wrapper such as <a href=\"https://github.com/ideasman42/cargo-oos\" rel=\"nofollow noreferrer\">cargo-out-of-source builder</a>).</em></li>\n</ul>\n\n<p>Script:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>#!/bin/bash\n\n# exit on first error, see: http://stackoverflow.com/a/185900/432509\nerror() {\n    local parent_lineno=\"$1\"\n    local message=\"$2\"\n    local code=\"${3:-1}\"\n    if [[ -n \"$message\" ]] ; then\n        echo \"Error on or near line ${parent_lineno}: ${message}; exiting with status ${code}\"\n    else\n        echo \"Error on or near line ${parent_lineno}; exiting with status ${code}\"\n    fi\n    exit \"${code}\"\n}\ntrap 'error ${LINENO}' ERR\n# done with trap\n\n# support cargo command override\nif [[ -z $CARGO_BIN ]]; then\n    CARGO_BIN=cargo\nfi\n\n# toplevel git repo\nROOT=$(git rev-parse --show-toplevel)\n\nfor cargo_dir in $(find \"$ROOT\" -name Cargo.toml -printf '%h\\n'); do\n    echo \"Running tests in: $cargo_dir\"\n    pushd \"$cargo_dir\"\n    RUST_BACKTRACE=0 $CARGO_BIN test --no-run\n    RUST_BACKTRACE=1 $CARGO_BIN test -- --nocapture\n    popd\ndone\n</code></pre>\n\n<p><em>Thanks to @\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438's answer, this is an expanded version.</em></p>\n"}, {"comments": [{"owner": {"reputation": 9735, "user_id": 112053, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/lObNt.jpg?s=128&g=1", "display_name": "barjak", "link": "https://stackoverflow.com/users/112053/barjak"}, "edited": false, "score": 0, "creation_date": 1486070851, "post_id": 41998772, "comment_id": 71200712, "body": "This option actually landed in stable Rust just today, in version 1.15!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1486085662, "post_id": 41998772, "comment_id": 71205828, "body": "Good things come to those who wait."}], "tags": [], "owner": {"reputation": 9735, "user_id": 112053, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/lObNt.jpg?s=128&g=1", "display_name": "barjak", "link": "https://stackoverflow.com/users/112053/barjak"}, "is_accepted": false, "score": 4, "last_activity_date": 1486028606, "creation_date": 1486028606, "answer_id": 41998772, "question_id": 41970758, "link": "https://stackoverflow.com/questions/41970758/how-to-recursively-test-all-crates-under-a-directory/41998772#41998772", "title": "How to recursively test all crates under a directory?", "body": "<p>I cannot test it right now, but I believe you can use <code>cargo test --all</code> to do that.</p>\n"}, {"tags": [], "owner": {"reputation": 3583, "user_id": 1391026, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/af98bdbeea8772f2d90d47d507098256?s=128&d=identicon&r=PG", "display_name": "musicmatze", "link": "https://stackoverflow.com/users/1391026/musicmatze"}, "is_accepted": false, "score": 2, "last_activity_date": 1486134539, "creation_date": 1486134539, "answer_id": 42027291, "question_id": 41970758, "link": "https://stackoverflow.com/questions/41970758/how-to-recursively-test-all-crates-under-a-directory/42027291#42027291", "title": "How to recursively test all crates under a directory?", "body": "<p>You could use the cargo workspace feature. <a href=\"https://github.com/matthiasbeyer/imag\" rel=\"nofollow noreferrer\">This crate</a> collection uses it in combination with a <code>Makefile</code>, which can be used to compile each crate on its own.</p>\n\n<p>(The workspace feature helps to not compile common dependencies multiple times)</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 648, "favorite_count": 2, "answer_count": 4, "score": 14, "last_activity_date": 1486281728, "creation_date": 1485914477, "last_edit_date": 1486219482, "question_id": 41970758, "link": "https://stackoverflow.com/questions/41970758/how-to-recursively-test-all-crates-under-a-directory", "title": "How to recursively test all crates under a directory?", "body": "<p>Some projects include multiple crates, which makes it a hassle to run all tests manually in each.</p>\n\n<p>Is there a convenient way to recursively run <code>cargo test</code> ? </p>\n"}, {"tags": ["unit-testing", "rust", "i2c"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 2, "creation_date": 1485914725, "post_id": 41970602, "comment_id": 71119912, "body": "<a href=\"http://play.integer32.com/?gist=5b80834b22da3381b56d255b90fafbdd&amp;version=stable\" rel=\"nofollow noreferrer\">This works</a>, but may be more restrictive than you were imagining. I&#39;m not sure if it helps you or not. The key is in the error message. Specifically: <code>&amp;mut T</code>. Your bound restricts <code>T</code> to <code>I2CDevice</code> but <code>&amp;mut T !== T</code> in Rust. If you&#39;re going to store a reference you need to say you are... which of course includes the need for explicit lifetimes."}, {"owner": {"user_type": "does_not_exist", "display_name": "user74754"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1485927582, "post_id": 41970602, "comment_id": 71123451, "body": "This seems to be an ideal solution, and the explanation is helpful too.  I&#39;d gladly accept this if you were to paste this same content into a formal answer."}], "owner": {"user_type": "does_not_exist", "display_name": "user74754"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 153, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1485919348, "creation_date": 1485913476, "last_edit_date": 1485919348, "question_id": 41970602, "link": "https://stackoverflow.com/questions/41970602/the-trait-is-not-implemented-for-mutable-generic-type-even-though-it-appears", "title": "&quot;the trait is not implemented for mutable generic type,&#39; even though it appears to be so", "body": "<p>I've got this code which I've tried to distill to its most basic essence:</p>\n\n<pre><code>use std::error::Error;\n\npub trait I2CDevice {\n    type Error: Error; \n}\n\nstruct MySensor&lt;T: I2CDevice + Sized&gt; {\n    Device : T\n}\n\nimpl&lt;T&gt; MySensor&lt;T&gt; where T: I2CDevice + Sized {\n    pub fn new(dev: &amp;mut T) {\n        let cal = get_calibration(dev);\n        let mut mySensor = &amp;mut MySensor { Device: dev};\n    }\n}\n\nfn get_calibration&lt;T: I2CDevice + Sized&gt;(dev: &amp;mut T) -&gt; Calibration {\n    Calibration {}\n}\n\nstruct Calibration {\n}\n</code></pre>\n\n<p>but which fails to compile, with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;mut T: I2CDevice` is not satisfied  \n--&gt; src\\main.rs:17:33    \n| 17 |         let mut mySensor = &amp;mut MySensor { Device: dev};    \n|                                      ^^^^^^^^\nthe trait `I2CDevice` is not implemented for `&amp;mut T`    \n|    = note:required by `MySensor`\n</code></pre>\n\n<p>I feel like the type constraint I have used on the impl of <code>MySensor</code> adequately restricts <code>T</code> such that it should satisfy, well, that exact same constraint on the <code>MySensor</code> struct itself.  So I'm stuck.</p>\n\n<p>The mutability has been forced on me by the requirements of the <code>I2CDevice</code> trait members.</p>\n\n<p>To give a bit more background, I'm trying to write an abstraction around a particular I2C-based hardware sensor so that the sensor can be used without having to know the particulars of interacting with that sensor over the I2C network.</p>\n\n<p>I am using the <a href=\"https://github.com/rust-embedded/rust-i2cdev/blob/master/src/linux.rs\" rel=\"nofollow noreferrer\">rust-i2cdev crate</a> which defines a <code>LinuxI2CDevice</code> struct which impls the <code>I2CDevice</code> trait, however my own code is a mess, so I am hoping to cover the code with tests prior to refactoring.  To do this I'm trying to replace the <code>LinuxI2CDevice</code> struct references with <code>I2CDevice</code> trait references, so that I can create test doubles which are also <code>I2CDevice</code> impls, which would then allow me to confidently clean up the messy code.  </p>\n\n<p>If I am attacking <em>that</em> overarching goal in the wrong way, I'd certainly appreciate being pointed toward better strategies.</p>\n"}, {"tags": ["error-handling", "rust", "std", "traits"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1485913884, "creation_date": 1485913884, "answer_id": 41970671, "question_id": 41970440, "link": "https://stackoverflow.com/questions/41970440/how-are-string-ioerrors-created/41970671#41970671", "title": "How are string io::Errors created", "body": "<p>Given:</p>\n\n<ul>\n<li><code>impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Box&lt;Error&gt;</code> (see the <a href=\"https://doc.rust-lang.org/std/convert/trait.From.html\" rel=\"nofollow noreferrer\"><code>From</code></a> docs)</li>\n<li><code>impl&lt;T, U&gt; Into&lt;U&gt; for T where U: From&lt;T&gt;</code> (see the <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>Into</code></a> docs)</li>\n</ul>\n\n<p>Substitute <code>T = &amp;'a str</code> and <code>U = Box&lt;Error&gt;</code>, which gives you:</p>\n\n<ul>\n<li><code>impl&lt;'a&gt; Into&lt;Box&lt;Error&gt;&gt; for &amp;'a str</code></li>\n</ul>\n"}], "owner": {"reputation": 949, "user_id": 1219515, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/64ce0ac7d44d2076d23b21ac62214970?s=128&d=identicon&r=PG", "display_name": "Maciej Goszczycki", "link": "https://stackoverflow.com/users/1219515/maciej-goszczycki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "accepted_answer_id": 41970671, "answer_count": 1, "score": 2, "last_activity_date": 1485919441, "creation_date": 1485912382, "last_edit_date": 1485919441, "question_id": 41970440, "link": "https://stackoverflow.com/questions/41970440/how-are-string-ioerrors-created", "title": "How are string io::Errors created", "body": "<p>Rust <a href=\"https://doc.rust-lang.org/std/io/struct.Error.html#examples\" rel=\"nofollow noreferrer\">docs</a> show a <code>std::io::Error</code> being created using</p>\n\n<pre><code>let custom_error = Error::new(ErrorKind::Other, \"oh no!\");\n</code></pre>\n\n<p>and <code>new</code> has a <a href=\"https://doc.rust-lang.org/std/io/struct.Error.html#method.new\" rel=\"nofollow noreferrer\">type signature</a> of</p>\n\n<pre><code>fn new&lt;E&gt;(kind: ErrorKind, error: E) -&gt; Error \n  where E: Into&lt;Box&lt;std::error::Error + Send + Sync&gt;&gt;\n</code></pre>\n\n<p>I've found an <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\">implementation</a> of <code>impl&lt;T: std::error::Error&gt; std::error::Error for Box&lt;T&gt;</code> but cannot find one for <code>&amp;'static str</code> like the one used in the example.</p>\n\n<p>What trait is used to achieve <code>Into&lt;Error&gt;</code> for strings?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "is_accepted": true, "score": 3, "last_activity_date": 1485907617, "creation_date": 1485907617, "answer_id": 41969796, "question_id": 41969714, "link": "https://stackoverflow.com/questions/41969714/possible-to-use-a-macro-to-expand-into-a-tuple-of-constructors/41969796#41969796", "title": "Possible to use a macro to expand into a tuple of constructors?", "body": "<p>You can accept a variadic argument in your macro and expand it with a call to <code>Item::new()</code> around like so:</p>\n\n\n\n<pre><code>macro_rules! item_tuple {\n    ($($arg:expr),*) =&gt; {\n        (\n            $(Item::new($arg),)*\n        )\n    }\n}\n</code></pre>\n\n<p>With this macro this call will work and behave as expected:</p>\n\n\n\n<pre><code>let (a, b, c, d) = item_tuple!(1, 10, 100, 1000);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=f106d852af0a6e0564a3962b73b493e7&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 524, "favorite_count": 0, "accepted_answer_id": 41969796, "answer_count": 1, "score": 1, "last_activity_date": 1485919397, "creation_date": 1485907116, "last_edit_date": 1495540393, "question_id": 41969714, "link": "https://stackoverflow.com/questions/41969714/possible-to-use-a-macro-to-expand-into-a-tuple-of-constructors", "title": "Possible to use a macro to expand into a tuple of constructors?", "body": "<p>Given the following tuple assignment:</p>\n\n<pre><code>let (a, b, c, d) = (Item::new(1), Item::new(10), Item::new(100), Item::new(1000));\n</code></pre>\n\n<p>Can this be simplified so that the constructor could be removed and made into a macro. e.g.:</p>\n\n<pre><code>let (a, b, c, d) = item_tuple!(1, 10, 100, 1000);\n</code></pre>\n\n<p>From looking into recursive macros, it seems each macro instantiation needs to create a valid tuple, so the macro would create tuple pairs, e.g.: <code>let (a, (b, (c, d))) = ...;</code> (<a href=\"https://stackoverflow.com/a/41946667/432509\">see this example</a>).</p>\n\n<p>Is it possible to write a macro that expands into a flat-tuple of constructors?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1485844207, "post_id": 41950933, "comment_id": 71081580, "body": "This isn&#39;t exactly &quot;combining results&quot; as you&#39;re attempting to here.. however lately I&#39;ve <a href=\"http://play.integer32.com/?gist=9470f7e9f293852f7444c1017ae91fa9&amp;version=stable\" rel=\"nofollow noreferrer\">been doing this - combining the parsing in the iteration when summing everything together</a>. I&#39;m not sure if this is suitable for you though, given its much harder to know which one failed in this scenario (if any do)."}, {"owner": {"reputation": 33796, "user_id": 45525, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/TKzgD.png?s=128&g=1", "display_name": "Synesso", "link": "https://stackoverflow.com/users/45525/synesso"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1485844406, "post_id": 41950933, "comment_id": 71081651, "body": "I like it. Although it&#39;s not what I need and makes me realise my question is a bit misleading. I&#39;ll have another go at writing it."}], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1485866732, "post_id": 41952017, "comment_id": 71094565, "body": "Wouldn&#39;t <code>a?.foo(b?).bar(c?)</code> also work? Or even: <code>parseA()?.foo(parseB()?).bar(parseC()?)</code>, with the latter not performing the <code>parseB</code> if <code>parseA</code> fails, and so on."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 2, "creation_date": 1485867196, "post_id": 41952017, "comment_id": 71094857, "body": "Only if your function returns a <code>Result</code>. If you want to manually process it, then not. Even if you return a <code>Result</code> you need to decide between <code>Ok(a?.foo(b?))</code> and <code>a.and_then(|a| a.foo(b?))</code>, which, depending on your real code might cause the latter to be more readable (in serde we have this situation frequently)."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 4, "last_activity_date": 1485848018, "creation_date": 1485848018, "answer_id": 41952017, "question_id": 41950933, "link": "https://stackoverflow.com/questions/41950933/how-can-i-succinctly-combine-many-results-of-different-types/41952017#41952017", "title": "How can I succinctly combine many `Result`s of different types?", "body": "<p>I usually wrap everything in layers instead of chaining through tuples:</p>\n\n<pre><code>let result = a.and_then(|a| {\n    b.and_then(|b| {\n        c.map(|c| {\n            a.foo(b).bar(c)\n        })\n    })\n});\n</code></pre>\n\n<p>Or, in recent Rust versions, you can make elaborate use of the <code>?</code> operator:</p>\n\n<pre><code>let result = a.and_then(|a| {\n    a.foo(b?).bar(c?)\n});\n</code></pre>\n\n<p>Closures allow you to do this nicely and safely.</p>\n\n<p>Of course this does not work if you want to store an intermediate <code>Result</code> in a variable.</p>\n"}], "owner": {"reputation": 33796, "user_id": 45525, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/TKzgD.png?s=128&g=1", "display_name": "Synesso", "link": "https://stackoverflow.com/users/45525/synesso"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1016, "favorite_count": 0, "accepted_answer_id": 41952017, "answer_count": 1, "score": 7, "last_activity_date": 1485869874, "creation_date": 1485843693, "last_edit_date": 1485869874, "question_id": 41950933, "link": "https://stackoverflow.com/questions/41950933/how-can-i-succinctly-combine-many-results-of-different-types", "title": "How can I succinctly combine many `Result`s of different types?", "body": "<p>Currently I use this pattern:</p>\n\n<pre><code>let a: Result&lt;A, ParseError&gt; = parseA();\nlet b: Result&lt;B, ParseError&gt; = parseB();\nlet c: Result&lt;C, ParseError&gt; = parseC();\na.and_then(|a| b.map(|b| (a, b))).and_then(|(a,b)| c.map(|c| {\n  // finally the crux of what I want to do\n  a.foo(b).bar(c)\n}))\n</code></pre>\n\n<p>Is there a more succinct way to define <code>a</code>, <code>b</code> &amp; <code>c</code>, such as Scala's for-expression?</p>\n"}, {"tags": ["concurrency", "rust", "threadpool", "future"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485969533, "post_id": 41984961, "comment_id": 71149185, "body": "This would be why the compiler was telling you <i>warning: unused variable: <code>producer_cpu</code></i>"}], "tags": [], "owner": {"reputation": 464, "user_id": 4660145, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/61039b2e8fce93ae427a1173273cbeaa?s=128&d=identicon&r=PG&f=1", "display_name": "Momh", "link": "https://stackoverflow.com/users/4660145/momh"}, "is_accepted": false, "score": 1, "last_activity_date": 1485969489, "last_edit_date": 1485969489, "creation_date": 1485967051, "answer_id": 41984961, "question_id": 41950097, "link": "https://stackoverflow.com/questions/41950097/rust-futures-cpupool-inconsistent-behavior-explanations/41984961#41984961", "title": "rust futures-cpupool: inconsistent behavior explanations", "body": "<p>The cause of the problem is the early drop of the producer future.</p>\n\n<p>On the method <code>search_names</code>, the <code>CpuFuture</code> that produces value is dropped when <code>search_names</code> returns. When dropped, a <code>CpuFuture</code> is cancelled, thus skipping production of the values.\nThe difference in behavior certainly comes from a race between the drop of the future and it's execution.</p>\n\n<p>A solution is to reference the producer future all along the application like this:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\nextern crate tokio_core;\nextern crate futures;\nextern crate futures_cpupool;\n\nuse std::time::Duration;\n\nuse futures_cpupool::{CpuPool, Builder, CpuFuture};\nuse futures::Stream;\nuse futures::{Future, future, lazy};\nuse futures::sync::mpsc;\nuse futures::Sink;\n\nlazy_static! {\nstatic ref CPU_POOL: CpuPool = {\n    Builder::new()\n    .pool_size(5)\n    .after_start(|| {\n        println!(\"Pool started one thread\");\n    })\n    .before_stop(|| {\n        println!(\"Pool stopped one thread\");\n    })\n    .create()\n};\n}\n\nstruct Producer {}\n\nimpl Producer {\n    fn search_names(&amp;self) -&gt; (CpuFuture&lt;(), ()&gt;, Box&lt;Stream&lt;Item = String, Error = String&gt; + Send&gt;) {\n        let (mut tx, rx) = mpsc::channel::&lt;Result&lt;String, String&gt;&gt;(1);\n\n        println!(\"Creating producer thread...\");\n        let producer_cpu: CpuFuture&lt;(), ()&gt; = CPU_POOL.spawn(\n            lazy(move || {\n                println!(\" -- Begin to produce names\");\n                for i in 0..2 {\n                    match tx.send(Ok(\"name\".to_string())).wait() {\n                        Ok(t) =&gt; {\n                            println!(\" -- sent the name\");\n                            tx = t\n                        },\n                        Err(err) =&gt; {\n                            println!(\" -- Error occured sending name! {:?}\", err);\n                            break\n                        },\n                    }\n                    std::thread::sleep(Duration::from_secs(1));\n                }\n                future::ok::&lt;(), ()&gt;(())\n            }).then(|result| {\n                match result {\n                    Ok(data) =&gt; println!(\"Producer finished with data: {:?}\", data),\n                    Err(err) =&gt; println!(\"Producer finished with error: {:?}\", err),\n                }\n                future::ok::&lt;(), ()&gt;(())\n            })\n        );\n\n        (\n            producer_cpu,\n            rx.then(|r| r.unwrap()).boxed()\n        )\n    }\n}\n\nfn main() {\n    let producer = Producer {};\n\n    let (future, stream) = producer.search_names();\n    let names = CPU_POOL.spawn(\n        stream\n            .map(|name| {\n                println!(\"name = {:?}\", name);\n                name\n            })\n            .collect()\n            .then(|result| {\n                match result {\n                    Ok(data) =&gt; println!(\"Finished to read producer {:?}\", data),\n                    Err(err) =&gt; println!(\"Error reading stream of producer! {:?}\", err)\n                }\n                future::ok::&lt;(), ()&gt;(())\n            })\n    );\n\n    names.wait();\n}\n</code></pre>\n"}], "owner": {"reputation": 464, "user_id": 4660145, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/61039b2e8fce93ae427a1173273cbeaa?s=128&d=identicon&r=PG&f=1", "display_name": "Momh", "link": "https://stackoverflow.com/users/4660145/momh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 737, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1485969489, "creation_date": 1485839595, "last_edit_date": 1485870066, "question_id": 41950097, "link": "https://stackoverflow.com/questions/41950097/rust-futures-cpupool-inconsistent-behavior-explanations", "title": "rust futures-cpupool: inconsistent behavior explanations", "body": "<p>I'm experiencing weird behavior with <a href=\"https://docs.rs/futures-cpupool/0.1.2/futures_cpupool/\" rel=\"nofollow noreferrer\">cpu pools</a>:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\nextern crate tokio_core;\nextern crate futures;\nextern crate futures_cpupool;\n\nuse std::time::Duration;\n\nuse futures_cpupool::{CpuPool, Builder, CpuFuture};\nuse futures::Stream;\nuse futures::{Future, future, lazy};\nuse futures::sync::mpsc;\nuse futures::Sink;\n\nlazy_static! {\n    static ref CPU_POOL: CpuPool = {\n        Builder::new()\n        .pool_size(10)\n        .after_start(|| {\n            println!(\"Pool started one thread\");\n        })\n        .before_stop(|| {\n            println!(\"Pool stopped one thread\");\n        })\n        .create()\n    };\n    }\n\nstruct Producer {}\n\nimpl Producer {\n    fn search_names(&amp;self) -&gt; Box&lt;Stream&lt;Item = String, Error = String&gt; + Send&gt; {\n        let (mut tx, rx) = mpsc::channel::&lt;Result&lt;String, String&gt;&gt;(1);\n\n        println!(\"Creating producer thread...\");\n        let producer_cpu: CpuFuture&lt;(), ()&gt; = CPU_POOL.spawn(lazy(move || {\n                println!(\" -- Begin to produce names\");\n                for i in 0..10 {\n                    match tx.send(Ok(\"name\".to_string())).wait() {\n                        Ok(t) =&gt; {\n                            println!(\" -- sent the name\");\n                            tx = t\n                        }\n                        Err(err) =&gt; {\n                            println!(\" -- Error occured sending name! {:?}\", err);\n                            break;\n                        }\n                    }\n                    std::thread::sleep(Duration::from_secs(1));\n                }\n                future::ok::&lt;(), ()&gt;(())\n            })\n            .then(|result| {\n                match result {\n                    Ok(data) =&gt; println!(\"Producer finished with data: {:?}\", data),\n                    Err(err) =&gt; println!(\"Producer finished with error: {:?}\", err),\n                }\n                future::ok::&lt;(), ()&gt;(())\n            }));\n\n        rx.then(|r| r.unwrap()).boxed()\n    }\n}\n\nfn main() {\n    let producer = Producer {};\n\n    let names = CPU_POOL.spawn(producer.search_names()\n        .map(|name| {\n            println!(\"name = {:?}\", name);\n            name\n        })\n        .collect()\n        .then(|result| {\n            match result {\n                Ok(data) =&gt; println!(\"Finished to read producer {:?}\", data),\n                Err(err) =&gt; println!(\"Error reading stream of producer! {:?}\", err),\n            }\n            future::ok::&lt;(), ()&gt;(())\n        }));\n\n    names.wait();\n}\n</code></pre>\n\n<p>Here is the corresponding Cargo.toml</p>\n\n<pre><code>[package]\nname = \"example\"\nversion = \"0.1.0\"\n\n[dependencies]\nlazy_static = \"^0.1.*\"\n\ntokio-core = \"^0.1\"\nfutures = \"^0.1\"\nfutures-cpupool = \"^0.1\"\n</code></pre>\n\n<p>I'm running on Rust nightly (<code>1.16.0-nightly (df8debf6d 2017-01-25)</code>)</p>\n\n<p>I would expect this program to generate the 10 <code>String</code>s, output it via <code>println</code> and exit. However, most of the time, the program doesn't generate the <code>String</code>s and exits normally, other times the <code>String</code>s are correctly generated.</p>\n\n<p>Here is the output of the first case:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Creating producer thread...\nPool started one thread\nFinished to read producer []\nPool started one thread\nPool started one thread\nPool started one thread\nPool started one thread\n</code></pre>\n\n<p>And the output when <code>String</code>s get generated</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Pool started one thread\nPool started one thread\nPool started one thread\nPool started one thread\nCreating producer thread...\n -- Begin to produce names\n -- sent the name\nname = \"name\"\nPool started one thread\n -- sent the name\nname = \"name\"\nProducer finished with data: ()\nFinished to read producer [\"name\", \"name\"]\n</code></pre>\n\n<p>I got the feeling that, for the first case, the producer thread doesn't get scheduled on the thread pool for whatever reason. I must be missing something but I don't know what.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "edited": false, "score": 0, "creation_date": 1485836217, "post_id": 41948200, "comment_id": 71078976, "body": "So the binaries in <code>.cargo</code> are basically proxies to the current toolchain, right?"}, {"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "reply_to_user": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "edited": false, "score": 0, "creation_date": 1485841459, "post_id": 41948200, "comment_id": 71080541, "body": "@ZizhengTai Yes, exactly."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485854875, "post_id": 41948200, "comment_id": 71086891, "body": "@squiguy: You might want to expand your answer to explain why the files are different."}, {"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485881579, "post_id": 41948200, "comment_id": 71105133, "body": "@MatthieuM. Done. Feel free to edit my answer(s) in the future."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "edited": false, "score": 2, "creation_date": 1485882402, "post_id": 41948200, "comment_id": 71105707, "body": "@ZizhengTai to clarify, the <code>cargo</code>, <code>rust-gdb</code>, <code>rust-lldb</code>, <code>rustc</code>, <code>rustdoc</code>, and <code>rustup</code> binaries in <code>.cargo&#47;bin&#47;</code> are all <i>the same</i> file. The first 5 all proxy to the relevant toolchain file."}], "tags": [], "owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "is_accepted": true, "score": 6, "last_activity_date": 1485882102, "last_edit_date": 1485882102, "creation_date": 1485825120, "answer_id": 41948200, "question_id": 41947210, "link": "https://stackoverflow.com/questions/41947210/rustup-vs-cargo-binaries/41948200#41948200", "title": "Rustup vs Cargo binaries", "body": "<p>The reason there are two files named <code>rustc</code> is because rustup is a toolchain multiplexer. It lets you install many versions of Rust and easily switch between them.</p>\n\n<p>The binary installed at <code>~/.cargo/bin/rustc</code> proxies to the current toolchain that you have selected. Each installed compiler is kept under the <code>toolchains</code> directory.</p>\n\n<p>Although the compiler in the <code>toolchains</code> directory appears to be a smaller file, that's only because it's dynamically linked instead of statically linked.</p>\n\n<p>More information can be found on <a href=\"https://github.com/rust-lang-nursery/rustup.rs/tree/cef627130947d2e7a20f88030c357b11d1c1bb1f#how-rustup-works\" rel=\"nofollow noreferrer\">rustup's README</a>.</p>\n"}], "owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2318, "favorite_count": 1, "accepted_answer_id": 41948200, "answer_count": 1, "score": 5, "last_activity_date": 1485882102, "creation_date": 1485818664, "question_id": 41947210, "link": "https://stackoverflow.com/questions/41947210/rustup-vs-cargo-binaries", "title": "Rustup vs Cargo binaries", "body": "<p>I just installed Rustup on macOS and noticed that there are two <code>rustc</code> and two <code>cargo</code> binaries:</p>\n\n<ul>\n<li><code>~/.cargo/bin/rustc (cargo)</code></li>\n<li><code>~/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rustc (cargo)</code></li>\n</ul>\n\n<p>Their versions are exactly the same, but <code>diff</code> shows there exists some difference. So why are there two different <code>rustc</code> (<code>cargo</code>) binaries and which one should I use?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1485811920, "creation_date": 1485811920, "answer_id": 41945753, "question_id": 41945628, "link": "https://stackoverflow.com/questions/41945628/is-it-possible-to-emit-rust-attributes-from-within-macros/41945753#41945753", "title": "Is it possible to emit Rust attributes from within macros?", "body": "<blockquote>\n  <p>Is it possible to emit Rust attributes from within macros?</p>\n</blockquote>\n\n<p><strong>Absolutely</strong>, it is possible. Here's a macro that emits a <code>test</code> attribute from within a macro:</p>\n\n<pre><code>macro_rules! example {\n    () =&gt; {\n        #[test]\n        fn test() {\n            assert!(false);\n        }\n    };\n}\n\nexample!();\n</code></pre>\n\n<p>It's not possible in all contexts, however. For example, you can't emit <em>just</em> an attribute because the attribute is expected to be attached to an item:</p>\n\n<pre><code>macro_rules! example {\n    () =&gt; {\n        #[test]\n    };\n}\n\n// Fails!\nexample!();\nfn test() {\n    assert!(false);\n}\n</code></pre>\n\n<hr>\n\n<p>Your <em>actual</em> question is closer to \"is it possible to call a macro inside of an attribute\". The answer to that appears to be <strong>no</strong> - the parser does not expect a macro expansion in that location. Perhaps you want to look at code generation or procedural macros, depending on what you are trying to do.</p>\n"}], "owner": {"reputation": 5818, "user_id": 389222, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6e599629d5f058545c7ae84e7bdd3441?s=128&d=identicon&r=PG", "display_name": "Gilad Naaman", "link": "https://stackoverflow.com/users/389222/gilad-naaman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 463, "favorite_count": 0, "accepted_answer_id": 41945753, "answer_count": 1, "score": 3, "last_activity_date": 1485811920, "creation_date": 1485811359, "last_edit_date": 1485811624, "question_id": 41945628, "link": "https://stackoverflow.com/questions/41945628/is-it-possible-to-emit-rust-attributes-from-within-macros", "title": "Is it possible to emit Rust attributes from within macros?", "body": "<p>I'm trying to do something like the following:</p>\n\n<pre><code>macro_rules! attr_trial {\n    ($msg:expr) =&gt; {{\n        let id = env!(\"SOME_ENV\");\n\n        #[link_section = env!(\"SOME_ENV\")]\n        static MESSAGE: &amp;'static str = $msg;\n    }};\n}\n</code></pre>\n\n<p>And I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: unexpected token: `env`\n  --&gt; src/main.rs:34:18\n   |\n34 |            #[link_section = env!(\"SOME_ENV\")]\n   |                           ^\n</code></pre>\n"}, {"tags": ["sockets", "rust", "mio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485800574, "post_id": 41941644, "comment_id": 71065800, "body": "What&#39;s wrong with <a href=\"https://docs.rs/mio/0.6.4/mio/\" rel=\"nofollow noreferrer\">the example posted in the documentation</a>, which appears to do the thing you want to do?"}, {"owner": {"reputation": 4421, "user_id": 1173529, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/4f64aeede68ff9de9a5100ece80e3a87?s=128&d=identicon&r=PG", "display_name": "Midiparse", "link": "https://stackoverflow.com/users/1173529/midiparse"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485808744, "post_id": 41941644, "comment_id": 71070132, "body": "It does basically the same thing just that it creates a client as well. But it says in the comment, that the example server drops the socket immediately, which I think is the same thing happening here, and I don&#39;t know who to leave it open. I am trying to create a &quot;simple&quot; concurrent TCP echo server."}, {"owner": {"reputation": 4421, "user_id": 1173529, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/4f64aeede68ff9de9a5100ece80e3a87?s=128&d=identicon&r=PG", "display_name": "Midiparse", "link": "https://stackoverflow.com/users/1173529/midiparse"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485811374, "post_id": 41941644, "comment_id": 71071451, "body": "I found an implementation <a href=\"https://github.com/tigranbs/libuv-vs-rustmio/blob/master/tcp_mio/src/main.rs\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485811555, "post_id": 41941644, "comment_id": 71071548, "body": "<i>I am trying to create a &quot;simple&quot; concurrent TCP echo server</i> \u2014 You probably want to look at <a href=\"https://tokio.rs/\" rel=\"nofollow noreferrer\">Tokio</a> instead, as that&#39;s the current forerunner in the Rust world."}], "owner": {"reputation": 4421, "user_id": 1173529, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/4f64aeede68ff9de9a5100ece80e3a87?s=128&d=identicon&r=PG", "display_name": "Midiparse", "link": "https://stackoverflow.com/users/1173529/midiparse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 880, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1485800324, "creation_date": 1485796445, "last_edit_date": 1485800324, "question_id": 41941644, "link": "https://stackoverflow.com/questions/41941644/how-to-accept-a-client-socket-and-then-poll-for-the-tcpstream-in-mio", "title": "How to accept a client socket and then poll for the TcpStream in mio?", "body": "<p>I cannot figure out how to accept a client socket then start polling for events on the returned <code>TcpStream</code> with mio 0.6.</p>\n\n<p>I tried this code, but an event for <code>Token(1)</code> never arrives. Although the <code>accept</code> part is printed out, the client is instantly disconnected.</p>\n\n<pre><code>loop {\n    poll.poll(&amp;mut events, None).unwrap();\n\n    for event in events.iter() {\n        match event.token() {\n            Token(0) =&gt; {\n                match server.accept() {\n                    Ok((stream, addr)) =&gt; {\n                        println!(\"{}: accept {}\", stream.as_raw_fd(), addr);\n\n                        stream.register(&amp;poll, Token(1), Ready::readable(), PollOpt::edge() | PollOpt::oneshot()).unwrap();\n                    }\n                    Err(e) =&gt; {\n                        println!(\"listener.accept() errored: {}\", e);\n                        return;\n                    }\n                }\n            },\n            Token(1) =&gt; {\n                println!(\"event from 1\")\n            }\n            _ =&gt; {\n                unreachable!()\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I have no clue how to do this properly.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485794050, "post_id": 41940740, "comment_id": 71061980, "body": "Yes, you cannot <a href=\"http://stackoverflow.com/q/25413201/155423\">implement a trait you don&#39;t own for a type you don&#39;t own</a>."}], "answers": [{"comments": [{"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 4, "creation_date": 1485802824, "post_id": 41940811, "comment_id": 71067099, "body": "What&#39;s more, <code>?</code> and <code>try!</code> call <code>From::from</code> on their Error argument, meaning that you can use <code>Box&lt;Error&gt;</code> and <code>?</code> to easily coalesce all sorts of errors into generic error, if that&#39;s what you want to do."}], "tags": [], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "is_accepted": false, "score": 2, "last_activity_date": 1485793695, "creation_date": 1485793695, "answer_id": 41940811, "question_id": 41940740, "link": "https://stackoverflow.com/questions/41940740/easily-convert-third-party-errors-to-string/41940811#41940811", "title": "Easily convert third party Errors to String", "body": "<p>Well it turns out there is a bit <a href=\"https://doc.rust-lang.org/book/error-handling.html#the-real-try-macro\" rel=\"nofollow noreferrer\">in the Rust book</a> about this. It doesn't allow you to convert to <code>String</code>, but apparently all <code>Error</code> types can be converted to <code>Box&lt;Error&gt;</code> so I just replaced <code>String</code> with that. It's cleaner too.</p>\n"}, {"comments": [{"owner": {"reputation": 1072, "user_id": 545794, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca3bafb054040cc4521b90835506f9d8?s=128&d=identicon&r=PG", "display_name": "Sean Leather", "link": "https://stackoverflow.com/users/545794/sean-leather"}, "edited": false, "score": 0, "creation_date": 1543839827, "post_id": 41940992, "comment_id": 94049992, "body": "How would you fill the <code>...</code> in <code>map_err(...)</code> with <code>to_string()</code> but without the explicit closure <code>(|e| ...)</code>? That is, I&#39;m wondering what it would look like in <a href=\"https://stackoverflow.com/a/32857265/545794\">this answer</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1072, "user_id": 545794, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca3bafb054040cc4521b90835506f9d8?s=128&d=identicon&r=PG", "display_name": "Sean Leather", "link": "https://stackoverflow.com/users/545794/sean-leather"}, "edited": false, "score": 1, "creation_date": 1543847829, "post_id": 41940992, "comment_id": 94054259, "body": "@SeanLeather With Rust 2018 (available at the end of this week in Rust 1.31) you can do <code>.as_ref().map_err(git2::Error::to_string)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1072, "user_id": 545794, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca3bafb054040cc4521b90835506f9d8?s=128&d=identicon&r=PG", "display_name": "Sean Leather", "link": "https://stackoverflow.com/users/545794/sean-leather"}, "edited": false, "score": 0, "creation_date": 1544022144, "post_id": 41940992, "comment_id": 94129896, "body": "@SeanLeather Do <a href=\"https://rust-lang-nursery.github.io/edition-guide/\" rel=\"nofollow noreferrer\">Rust 2018 edition guide</a>; <a href=\"https://stackoverflow.com/q/50251487/155423\">What are non-lexical lifetimes?</a> help?"}, {"owner": {"reputation": 1072, "user_id": 545794, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca3bafb054040cc4521b90835506f9d8?s=128&d=identicon&r=PG", "display_name": "Sean Leather", "link": "https://stackoverflow.com/users/545794/sean-leather"}, "edited": false, "score": 0, "creation_date": 1544161533, "post_id": 41940992, "comment_id": 94185549, "body": "No, unfortunately. It&#39;s not clear to me how non-lexical lifetimes allow the change from <code>.map_err(|e| e.to_string())</code> to <code>.as_ref().map_err(git2::Error::to_string)</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1072, "user_id": 545794, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca3bafb054040cc4521b90835506f9d8?s=128&d=identicon&r=PG", "display_name": "Sean Leather", "link": "https://stackoverflow.com/users/545794/sean-leather"}, "edited": false, "score": 0, "creation_date": 1544188325, "post_id": 41940992, "comment_id": 94197787, "body": "@SeanLeather they don&#39;t, it&#39;s just to allow one line, otherwise you&#39;d have to break it down into two lines. <code>as_ref</code> is the key to make the value in the <code>Option</code> a reference."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1587154994, "last_edit_date": 1587154994, "creation_date": 1485794276, "answer_id": 41940992, "question_id": 41940740, "link": "https://stackoverflow.com/questions/41940740/easily-convert-third-party-errors-to-string/41940992#41940992", "title": "Easily convert third party Errors to String", "body": "<p>If a type implements <code>std::error::Error</code>, <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\">it <strong>also</strong> implements <code>Display</code></a>:</p>\n\n<pre><code>pub trait Error: Debug + Display {\n    // ...\n}\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/string/trait.ToString.html\" rel=\"nofollow noreferrer\"><code>ToString</code></a> trait, which provides the method <code>to_string</code>, is implemented for any type that implements <code>Display</code>.</p>\n\n<p>Thus, any type that implements <code>Error</code> can be converted to a <code>String</code> via <code>to_string</code>:</p>\n\n<pre><code>use git2; // 0.13.2\n\nfn do_stuff() -&gt; Result&lt;i32, String&gt; {\n    let repo = git2::Repository::open(\".\").map_err(|e| e.to_string())?;\n    unimplemented!()\n}\n</code></pre>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3905, "favorite_count": 0, "accepted_answer_id": 41940992, "answer_count": 2, "score": 8, "last_activity_date": 1587154994, "creation_date": 1485793478, "last_edit_date": 1485794007, "question_id": 41940740, "link": "https://stackoverflow.com/questions/41940740/easily-convert-third-party-errors-to-string", "title": "Easily convert third party Errors to String", "body": "<p>I have this code:</p>\n\n<pre><code>fn do_stuff() -&gt; Result&lt;i32, String&gt; {\n\n    let repo = git2::Repository::open(\".\")?;\n    // ...\n}\n</code></pre>\n\n<p>This doesn't work because <code>git2::Repository::open()</code>'s error type isn't <code>String</code>. (Yes I'm being pretty lazy with my error handling by using Strings. It's a tiny program; sue me.)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::string::String: std::convert::From&lt;git2::Error&gt;` is not satisfied\n  --&gt; src/main.rs:94:13\n   |\n94 |    let repo = Repository::open(\".\")?;\n   |               ^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From&lt;git2::Error&gt;` is not implemented for `std::string::String`\n   |\n   = help: the following implementations were found:\n   = help:   &lt;std::string::String as std::convert::From&lt;&amp;'a str&gt;&gt;\n   = help:   &lt;std::string::String as std::convert::From&lt;std::borrow::Cow&lt;'a, str&gt;&gt;&gt;\n   = note: required by `std::convert::From::from`\n</code></pre>\n\n<p>I've tried adding this:</p>\n\n<pre><code>impl std::convert::From&lt;git2::Error&gt; for String {\n    fn from(err: git2::Error) -&gt; Self {\n        err.to_string()\n    }\n}\n</code></pre>\n\n<p>But that isn't allowed because it doesn't reference any types defined in this crate.</p>\n\n<p>I know I can probably use <code>.map_err()</code>, but I'd really like it to happen automatically. I kind of feel like I have got this to work before too, which is a bit annoying!</p>\n"}, {"tags": ["windows", "ssl", "curl", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1485784775, "post_id": 41937618, "comment_id": 71055765, "body": "We&#39;re missing some important details: does that happen in any project? If not, which one? Can you download the same packages using another application?"}, {"owner": {"reputation": 177, "user_id": 970468, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/xhULp.png?s=128&g=1", "display_name": "Marco Andreolli", "link": "https://stackoverflow.com/users/970468/marco-andreolli"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1485785358, "post_id": 41937618, "comment_id": 71056123, "body": "Yes for any project, also if I try &quot;cargo install racer&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 177, "user_id": 970468, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/xhULp.png?s=128&g=1", "display_name": "Marco Andreolli", "link": "https://stackoverflow.com/users/970468/marco-andreolli"}, "edited": false, "score": 0, "creation_date": 1485787469, "post_id": 41937999, "comment_id": 71057535, "body": "Ok, probably is network/windows problem, but is it possible exclude this check? With curl there is --ssl-no-revoke flag"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 177, "user_id": 970468, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/xhULp.png?s=128&g=1", "display_name": "Marco Andreolli", "link": "https://stackoverflow.com/users/970468/marco-andreolli"}, "edited": false, "score": 0, "creation_date": 1485787952, "post_id": 41937999, "comment_id": 71057865, "body": "@MarcoAndreolli probably not (see my updates). You should not strive to disable SSL (or any security, really), instead, you should strive to fix the problem. SSL security is vitally important in the world today."}, {"owner": {"reputation": 177, "user_id": 970468, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/xhULp.png?s=128&g=1", "display_name": "Marco Andreolli", "link": "https://stackoverflow.com/users/970468/marco-andreolli"}, "edited": false, "score": 1, "creation_date": 1485789874, "post_id": 41937999, "comment_id": 71059180, "body": "1. I don&#39;t have a proxy, 2. I disable proxy and AntiVirus, 3. config seems don&#39; do anything... but I don&#39;t know if I get the correct .pem file"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1485787778, "last_edit_date": 1485787778, "creation_date": 1485785557, "answer_id": 41937999, "question_id": 41937618, "link": "https://stackoverflow.com/questions/41937618/cargo-is-unable-to-download-a-file-due-to-a-ssl-connect-error/41937999#41937999", "title": "Cargo is unable to download a file due to a SSL connect error", "body": "<p>Your error message (automatically translated to English) says:</p>\n\n<blockquote>\n  <p>The revocation server is offline. The callback function will not be able to complete the revocation check</p>\n</blockquote>\n\n<p>SSL certificates can be revoked at any time, so a client needs to be able to check a server to see what state they are in. For whatever reason, your computer is unable to connect to the server. This is highly unlikely to be a Cargo issue; you probably need to perform normal network troubleshooting to discover why you cannot connect to this server.</p>\n\n<p>There are a number of Cargo issues (<a href=\"https://github.com/rust-lang/cargo/issues/2797\" rel=\"nofollow noreferrer\">2797</a>, <a href=\"https://github.com/rust-lang/cargo/issues/1180\" rel=\"nofollow noreferrer\">1180</a>, <a href=\"https://github.com/rust-lang/cargo/issues/636\" rel=\"nofollow noreferrer\">636</a>, <a href=\"https://github.com/rust-lang/cargo/issues/1689\" rel=\"nofollow noreferrer\">1689</a>, probably more) around this. Suggestions include:</p>\n\n<ul>\n<li>disabling your proxy</li>\n<li>disabling your firewall</li>\n<li>specifying <a href=\"https://github.com/rust-lang/cargo/issues/1180#issuecomment-235153322\" rel=\"nofollow noreferrer\">the <code>cainfo</code> configuration</a> </li>\n</ul>\n\n<p><a href=\"https://github.com/rust-lang/cargo/issues/636#issuecomment-263840700\" rel=\"nofollow noreferrer\">636 has a comment</a> also specifically about the revocation server.</p>\n\n<p>As of <a href=\"https://github.com/rust-lang/cargo/issues/636#issuecomment-264330042\" rel=\"nofollow noreferrer\">2016-12-01</a>:</p>\n\n<blockquote>\n  <p>The tl;dr; I believe is that on Windows right now there's no way to get Cargo to accept an invalidate [sic] SSL certificate.</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 6774, "user_id": 255244, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/dfb80b5c55b53e5d399e2c7867974fcd?s=128&d=identicon&r=PG", "display_name": "Marty Neal", "link": "https://stackoverflow.com/users/255244/marty-neal"}, "is_accepted": false, "score": 1, "last_activity_date": 1532980156, "last_edit_date": 1532980156, "creation_date": 1532980101, "answer_id": 51601283, "question_id": 41937618, "link": "https://stackoverflow.com/questions/41937618/cargo-is-unable-to-download-a-file-due-to-a-ssl-connect-error/51601283#51601283", "title": "Cargo is unable to download a file due to a SSL connect error", "body": "<p>You can prevent Cargo from checking for a revoked certificate with an option in <a href=\"https://doc.rust-lang.org/cargo/reference/config.html\" rel=\"nofollow noreferrer\"><code>~\\.cargo\\config</code></a>:</p>\n\n<pre><code>[http]\ncheck-config = false\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 101, "user_id": 4061001, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2b5e02b1d3755d482c5fc860784e71f?s=128&d=identicon&r=PG&f=1", "display_name": "ASB", "link": "https://stackoverflow.com/users/4061001/asb"}, "is_accepted": false, "score": 7, "last_activity_date": 1559932896, "creation_date": 1559932896, "answer_id": 56499724, "question_id": 41937618, "link": "https://stackoverflow.com/questions/41937618/cargo-is-unable-to-download-a-file-due-to-a-ssl-connect-error/56499724#56499724", "title": "Cargo is unable to download a file due to a SSL connect error", "body": "<p>Following Marty's answer, this worked for me:</p>\n\n<pre><code>[http]\ncheck-revoke = false\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "is_accepted": false, "score": 3, "last_activity_date": 1571073285, "creation_date": 1571073285, "answer_id": 58381318, "question_id": 41937618, "link": "https://stackoverflow.com/questions/41937618/cargo-is-unable-to-download-a-file-due-to-a-ssl-connect-error/58381318#58381318", "title": "Cargo is unable to download a file due to a SSL connect error", "body": "<p>Set the environmental variable <code>CARGO_HTTP_CHECK_REVOKE=false</code>. This worked for me.\nI did try to put the below setting in config but did not work;</p>\n\n<pre><code>[http]\nhttp.check-revoke = false\n</code></pre>\n\n<p>I'm on Windows 10 x64, build 1903.</p>\n"}], "owner": {"reputation": 177, "user_id": 970468, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/xhULp.png?s=128&g=1", "display_name": "Marco Andreolli", "link": "https://stackoverflow.com/users/970468/marco-andreolli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2852, "favorite_count": 0, "answer_count": 4, "score": 2, "last_activity_date": 1571073285, "creation_date": 1485784507, "last_edit_date": 1485785754, "question_id": 41937618, "link": "https://stackoverflow.com/questions/41937618/cargo-is-unable-to-download-a-file-due-to-a-ssl-connect-error", "title": "Cargo is unable to download a file due to a SSL connect error", "body": "<p>When Cargo tries to download a file, it gives the error <code>[35] SSL connect error</code>. I'm using Windows and I'm not using a proxy. </p>\n\n<p>If I try to compile a project with <code>cargo build</code>, it returns the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> Downloading crypto-hash v0.2.1\nerror: unable to get packages from source\n\nCaused by:\n  [35] SSL connect error (schannel: next InitializeSecurityContext failed: Unknown error (0x80092013) - Il server di revoca \ufffd offline. La funzione richiamata non \ufffd in grado di completare il controllo di revoca.)\n</code></pre>\n\n<p>Is it a problem with curl?\nI found <a href=\"https://curl.haxx.se/mail/lib-2016-03/0202.html\" rel=\"nofollow noreferrer\">this article</a>, but I don't know if I have to put some configuration in the <code>.cargo\\config</code> file.</p>\n"}, {"tags": ["data-structures", "rust", "recursive-type"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485781754, "post_id": 41936513, "comment_id": 71053678, "body": "This compiler error is totally unhelpful :("}], "answers": [{"comments": [{"owner": {"reputation": 315, "user_id": 5367513, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7bc3967ca71ebcd3dbb20b5b7552a904?s=128&d=identicon&r=PG&f=1", "display_name": "Jan Syn&#225;\u010dek", "link": "https://stackoverflow.com/users/5367513/jan-syn%c3%a1%c4%8dek"}, "edited": false, "score": 0, "creation_date": 1485785618, "post_id": 41936727, "comment_id": 71056323, "body": "Right, I can now see what this is about, thanks! I thought I could use it the same way as I would in Haskell, but apparently I can&#39;t. The Box&lt;FingerTree&lt;V, A&gt;&gt; would indeed not be correct."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1485807576, "post_id": 41936727, "comment_id": 71069534, "body": "Haskell boxes everything for you implicitly."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1485847870, "post_id": 41936727, "comment_id": 71083091, "body": "@BurntSushi5: I thought the issue was the lack of <code>Option&lt;&gt;</code> around the box, but note that the infinite recursion is not in the layout but in the instantiation of the type itself. Does Haskell allow &quot;infinite&quot; types?"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1485781697, "creation_date": 1485781697, "answer_id": 41936727, "question_id": 41936513, "link": "https://stackoverflow.com/questions/41936513/overflow-while-adding-drop-check-rules-while-implementing-a-fingertree/41936727#41936727", "title": "&quot;overflow while adding drop-check rules&quot; while implementing a fingertree", "body": "<p>You have created an infinite type.</p>\n\n<p>Instantiating <code>FingerTree&lt;V, A&gt;</code> instantiates <code>FingerTree&lt;V, Node&lt;V, A&gt;&gt;</code> which instantiates <code>FingerTree&lt;V, Node&lt;V, Node&lt;V, A&gt;&gt;&gt;</code> which instantiates, ... and there's no end in sight.</p>\n\n<p>The compiler cannot tell that the type will not actually be used at run-time, so prepares itself for the worst. And the worst is infinite.</p>\n\n<p>Simply replacing the type of <code>tree</code> by <code>Box&lt;FingerTree&lt;V, A&gt;&gt;</code> solves the issue, though it may not be correct for the situation at hand.</p>\n"}], "owner": {"reputation": 315, "user_id": 5367513, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7bc3967ca71ebcd3dbb20b5b7552a904?s=128&d=identicon&r=PG&f=1", "display_name": "Jan Syn&#225;\u010dek", "link": "https://stackoverflow.com/users/5367513/jan-syn%c3%a1%c4%8dek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 197, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1551011609, "creation_date": 1485781050, "last_edit_date": 1551011609, "question_id": 41936513, "link": "https://stackoverflow.com/questions/41936513/overflow-while-adding-drop-check-rules-while-implementing-a-fingertree", "title": "&quot;overflow while adding drop-check rules&quot; while implementing a fingertree", "body": "<p>I'm trying to define a finger tree structure and implement its basic operations as an exercise in Rust. I've come up with the following, which is basically what's described in this <a href=\"http://www.staff.city.ac.uk/~ross/papers/FingerTree.pdf\" rel=\"nofollow noreferrer\">paper</a>.</p>\n\n<pre><code>use self::FingerTree::{Empty, Single, Deep};\nuse self::Digit::{One, Two, Three, Four};\n\nenum Digit&lt;A&gt; {\n    One(A),\n    Two(A, A),\n    Three(A, A, A),\n    Four(A, A, A, A),\n}\n\nenum Node&lt;V, A&gt; {\n    Node2(V, A, A),\n    Node3(V, A, A, A),\n}\n\nenum FingerTree&lt;V, A&gt; {\n    Empty,\n    Single(A),\n    Deep {\n        size: V,\n        prefix: Digit&lt;A&gt;,\n        tree: Box&lt;FingerTree&lt;V, Node&lt;V, A&gt;&gt;&gt;,\n        suffix: Digit&lt;A&gt;,\n    },\n}\n\nfn main() {\n    let e: FingerTree&lt;i32, String&gt; = Empty;\n}\n</code></pre>\n\n<p>Compilation gives me an error that I don't understand:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0320]: overflow while adding drop-check rules for FingerTree&lt;i32, std::string::String&gt;\n  --&gt; fingertree.rs:28:9\n   |\n28 |     let e: FingerTree&lt;i32, String&gt; = Empty;\n   |         ^\n   |\nnote: overflowed on enum Node variant Node2 field 0 type: i32\n  --&gt; fingertree.rs:28:9\n   |\n28 |     let e: FingerTree&lt;i32, String&gt; = Empty;\n   |         ^\n\nerror[E0320]: overflow while adding drop-check rules for FingerTree&lt;i32, std::string::String&gt;\n  --&gt; fingertree.rs:28:38\n   |\n28 |     let e: FingerTree&lt;i32, String&gt; = Empty;\n   |                                      ^^^^^\n   |\nnote: overflowed on enum Node variant Node2 field 0 type: i32\n  --&gt; fingertree.rs:28:38\n   |\n28 |     let e: FingerTree&lt;i32, String&gt; = Empty;\n   |                                      ^^^^^\n</code></pre>\n\n<p>Why is this not working? How do I make it work?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 14451, "user_id": 33499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17c590aa4c56918b47c7ba5e39dba5d8?s=128&d=identicon&r=PG", "display_name": "wimh", "link": "https://stackoverflow.com/users/33499/wimh"}, "edited": false, "score": 2, "creation_date": 1485772778, "post_id": 41932806, "comment_id": 71047884, "body": "It looks like you add something a second time to the stack, without removing the first. But data should have 1 owner, not 2. Can you try to create a <a href=\"http://stackoverflow.com/help/mcve\">Minimal, Complete, and Verifiable Example</a>? That would make it easier to suggest an alternative."}], "answers": [{"tags": [], "owner": {"reputation": 36, "user_id": 7490139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15a2d22bf9f4978c8d425c2c4091abff?s=128&d=identicon&r=PG&f=1", "display_name": "vitalyd", "link": "https://stackoverflow.com/users/7490139/vitalyd"}, "is_accepted": true, "score": 2, "last_activity_date": 1485786043, "creation_date": 1485786043, "answer_id": 41938157, "question_id": 41932806, "link": "https://stackoverflow.com/questions/41932806/building-a-tree-of-vectors/41938157#41938157", "title": "Building a tree of vectors", "body": "<p>As @wimh mentioned, you're violating ownership.  Let me try to break it down a bit, and see if it makes sense.</p>\n\n<p><code>stack[0][0]</code> gives you a <code>Node</code> contained in a mutable borrow of a <code>Vec</code>.  You then try to mutably borrow the <code>Vec</code> contained in the <code>Node::List</code> variant of that <code>Node</code>, and add it as a mutable borrow to the outer <code>Vec</code> (the <code>stack</code>).  If this were allowed, you'd now have the outer <code>Vec</code> and the inner <code>Vec</code> able to mutate that <code>Node</code>'s <code>Vec</code> at the same time.</p>\n\n<p>I would try to rethink your design a bit, and see if you can make ownership a bit more clearcut.</p>\n"}, {"tags": [], "owner": {"reputation": 152, "user_id": 1187270, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80c924b1d7f3dbcf85a4429c8538b403?s=128&d=identicon&r=PG", "display_name": "rreillo", "link": "https://stackoverflow.com/users/1187270/rreillo"}, "is_accepted": false, "score": 1, "last_activity_date": 1485792315, "creation_date": 1485792315, "answer_id": 41940365, "question_id": 41932806, "link": "https://stackoverflow.com/questions/41932806/building-a-tree-of-vectors/41940365#41940365", "title": "Building a tree of vectors", "body": "<p>After reading a <a href=\"http://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/\" rel=\"nofollow noreferrer\">blog post about modeling graphs using vector indices</a> I decided to try a similar approach. The resulting code works and is a lot simpler:</p>\n\n<pre><code>type NodeIndex = usize;\n\npub fn parse(tokens: &amp;Vec&lt;Token&gt;) -&gt; Node {\n    let mut root: Node = Node::List(vec![]);\n\n    {\n        tokens.into_iter().fold((&amp;mut root, vec![]), handle_token);\n    }\n\n    root\n}\n\nfn add_node(tree: &amp;mut Node, indices: &amp;Vec&lt;NodeIndex&gt;, node: Node) -&gt; NodeIndex {\n    let node_to_add_to = get_node(tree, indices);\n\n    match node_to_add_to {\n        &amp;mut Node::List(ref mut vec) =&gt; {\n            vec.push(node);\n            vec.len() - 1\n        },\n        _ =&gt; panic!(),\n    }\n}\n\nfn get_node&lt;'a&gt;(tree: &amp;'a mut Node, indices: &amp;Vec&lt;NodeIndex&gt;) -&gt; &amp;'a mut Node {\n    indices.iter().fold(tree, |node, index| match node {\n        &amp;mut Node::List(ref mut vec) =&gt; &amp;mut vec[*index],\n        _ =&gt; panic!(),\n    })\n}\n\nfn handle_token&lt;'a&gt;(state: (&amp;'a mut Node, Vec&lt;NodeIndex&gt;), token: &amp;Token) -&gt; (&amp;'a mut Node, Vec&lt;NodeIndex&gt;) {\n    let (tree, mut index_stack) = state;\n\n    match *token {\n        Token::LParen =&gt; {\n            let new_index = add_node(tree, &amp;index_stack, Node::List(vec![]));\n            index_stack.push(new_index);\n        },\n        Token::RParen =&gt; { index_stack.pop(); },\n        Token::Identifier(ref identifier) =&gt; { add_node(tree, &amp;index_stack, Node::Identifier(identifier.to_owned())); },\n        Token::Number(number) =&gt; { add_node(tree, &amp;index_stack, Node::Number(number)); },\n        Token::Str(ref s) =&gt; { add_node(tree, &amp;index_stack, Node::Str(s.to_owned())); },\n        Token::EOF =&gt; { assert!(index_stack.is_empty()); },\n    }\n\n    (tree, index_stack)\n}\n</code></pre>\n"}], "owner": {"reputation": 152, "user_id": 1187270, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80c924b1d7f3dbcf85a4429c8538b403?s=128&d=identicon&r=PG", "display_name": "rreillo", "link": "https://stackoverflow.com/users/1187270/rreillo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 41938157, "answer_count": 2, "score": 2, "last_activity_date": 1485792315, "creation_date": 1485769506, "last_edit_date": 1485785160, "question_id": 41932806, "link": "https://stackoverflow.com/questions/41932806/building-a-tree-of-vectors", "title": "Building a tree of vectors", "body": "<p>I'm trying to make a simple LISP parser, but I'm stuck on the step where I convert the vector of tokens into a tree of AST nodes.</p>\n\n<p>I create the root of the tree, and then maintain a stack of references into the tree where I currently want to add the next node. The problem is that no matter what I try, it seems that the borrow checker thinks I'm referencing something that doesn't live long enough. </p>\n\n<p>This is the code:</p>\n\n<pre><code>pub fn parse(tokens: &amp;Vec&lt;Token&gt;) -&gt; Node {\n    let mut root: Vec&lt;Node&gt; = vec![];\n\n    {\n        tokens.into_iter().fold(vec![&amp;mut root], handle_token);\n    }\n\n    Node::List(root)\n}\n\nfn handle_token&lt;'a&gt;(mut stack: Vec&lt;&amp;'a mut Vec&lt;Node&gt;&gt;, token: &amp;Token) -&gt; Vec&lt;&amp;'a mut Vec&lt;Node&gt;&gt; {\n    if *token == Token::LParen {\n        let new_node = Node::List(vec![]); // Create the new node\n        stack[0].push(new_node); // Add it to the tree\n        match stack[0][0] {\n            Node::List(ref mut the_vec) =&gt; stack.push(the_vec), // Finally, add a mutable reference to the new vector so that subsequent nodes will become children of this Node\n            _ =&gt; panic!(),\n        };\n    } else if *token == Token::RParen {\n        stack.pop();\n    } else {\n        match *token {\n            Token::Identifier(ref identifier) =&gt; {\n                stack[0].push(Node::Identifier(identifier.to_owned()))\n            }\n            Token::Number(number) =&gt; stack[0].push(Node::Number(number)),\n            Token::Str(ref s) =&gt; stack[0].push(Node::Str(s.to_owned())),\n            Token::EOF =&gt; {}\n            _ =&gt; panic!(),\n        }\n    }\n\n    stack\n}\n</code></pre>\n\n<p>This is the compiler output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `stack` does not live long enough\n  --&gt; src/parser.rs:30:15\n   |\n30 |         match stack[0][0] {\n   |               ^^^^^ does not live long enough\n...\n47 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the block at 26:96...\n  --&gt; src/parser.rs:26:97\n   |\n26 | fn handle_token&lt;'a&gt;(mut stack: Vec&lt;&amp;'a mut Vec&lt;Node&gt;&gt;, token: &amp;Token) -&gt; Vec&lt;&amp;'a mut Vec&lt;Node&gt;&gt; {\n   |                                                                                                 ^\n</code></pre>\n\n<p>After researching this a bit, it seems like I'm trying to do something completely non-idiomatic to Rust, but I'm not sure. Is there a simple way to make this work, or do I need to rethink this?</p>\n\n<p>I tried to reduce the problem <a href=\"https://gist.github.com/anonymous/6f1335809d1c642f16f5a9e71d1c978e\" rel=\"nofollow noreferrer\">to a minimal example</a>:</p>\n\n<pre><code>enum Token {\n    Start,\n    End,\n    Value(i32),\n}\n\nenum Node {\n    List(Vec&lt;Node&gt;),\n    Value(i32),\n}\n\nfn main() {\n    let v = vec![Token::Start, Token::Value(1), Token::End];\n    parse(&amp;v);\n}\n\nfn parse(tokens: &amp;Vec&lt;Token&gt;) -&gt; Node {\n    let mut root: Vec&lt;Node&gt; = vec![];\n\n    {\n        tokens.into_iter().fold(vec![&amp;mut root], handle_token);\n    }\n\n    Node::List(root)\n}\n\nfn handle_token&lt;'a&gt;(mut stack: Vec&lt;&amp;'a mut Vec&lt;Node&gt;&gt;, token: &amp;Token) -&gt; Vec&lt;&amp;'a mut Vec&lt;Node&gt;&gt; {\n    match *token {\n        Token::Start =&gt; {\n            stack[0].push(Node::List(vec![])); // Add the new node to the tree\n            match stack[0][0] {\n                Node::List(ref mut the_vec) =&gt; stack.push(the_vec), // Add a mutable reference to the new vector so that subsequent nodes will become children of this Node\n                _ =&gt; panic!(),\n            };\n        },\n        Token::End =&gt; { stack.pop(); },\n        Token::Value(v) =&gt; stack[0].push(Node::Value(v)),\n    }\n\n    stack\n}\n</code></pre>\n"}, {"tags": ["performance", "rust", "future"], "comments": [{"owner": {"reputation": 8073, "user_id": 2852624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/682806d261e4f00f77aa8633689a9558?s=128&d=identicon&r=PG&f=1", "display_name": "Matthias247", "link": "https://stackoverflow.com/users/2852624/matthias247"}, "edited": false, "score": 2, "creation_date": 1485768715, "post_id": 41932137, "comment_id": 71045404, "body": "Option 3: Let the long running operation run on a threadpool, which signals a future (that is polled from the IO thread) upon completion. Afaik tokio already has support for this with some kind of ThreadPool executor (instead of the IO executor)."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 8073, "user_id": 2852624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/682806d261e4f00f77aa8633689a9558?s=128&d=identicon&r=PG&f=1", "display_name": "Matthias247", "link": "https://stackoverflow.com/users/2852624/matthias247"}, "edited": false, "score": 2, "creation_date": 1485771514, "post_id": 41932137, "comment_id": 71047113, "body": "Further to @Matthias247&#39;s comment, the crate for running futures on a thread pool is <a href=\"https://github.com/alexcrichton/futures-rs/tree/master/futures-cpupool\" rel=\"nofollow noreferrer\"><code>futures-cpupool</code></a>."}], "answers": [{"comments": [{"owner": {"reputation": 464, "user_id": 4660145, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/61039b2e8fce93ae427a1173273cbeaa?s=128&d=identicon&r=PG&f=1", "display_name": "Momh", "link": "https://stackoverflow.com/users/4660145/momh"}, "edited": false, "score": 0, "creation_date": 1485809820, "post_id": 41937561, "comment_id": 71070724, "body": "Thanks for your answer. By executor I  meant the <a href=\"https://tokio.rs/docs/getting-started/reactor/\" rel=\"nofollow noreferrer\">Core event loop</a> which basically do not spawn any thread if I get it right. Although I think I begin to get my mind around this: the Core event loop and cpu pool executors are complementary things, the most efficient depends on the situation (core event loop for low level rapid polling -like OS socket polling- and cpu-pool for heavy IO like network or disks)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 18, "last_activity_date": 1578849118, "last_edit_date": 1578849118, "creation_date": 1485784317, "answer_id": 41937561, "question_id": 41932137, "link": "https://stackoverflow.com/questions/41932137/what-is-the-best-approach-to-encapsulate-blocking-i-o-in-future-rs/41937561#41937561", "title": "What is the best approach to encapsulate blocking I/O in future-rs?", "body": "<blockquote>\n  <p>Ideally, an independent task would perform the I/O and the associated future would poll the I/O thread for the completion status.</p>\n</blockquote>\n\n<p>Yes, this is the recommended approach for asynchronous execution. Note that this is <strong>not restricted to I/O</strong>, but is valid for <em>any</em> long-running synchronous task!</p>\n\n<h1>Futures crate</h1>\n\n<p>The <a href=\"https://docs.rs/futures/0.3.1/futures/executor/struct.ThreadPool.html\" rel=\"noreferrer\"><code>ThreadPool</code></a> type was created for this<sup>1</sup>. </p>\n\n<p>In this case, you spawn work to run in the pool. The pool itself performs the work to check to see if the work is completed yet and returns a type that fulfills the <code>Future</code> trait.</p>\n\n<pre><code>use futures::{\n    executor::{self, ThreadPool},\n    future,\n    task::{SpawnError, SpawnExt},\n}; // 0.3.1, features = [\"thread-pool\"]\nuse std::{thread, time::Duration};\n\nasync fn delay_for(pool: &amp;ThreadPool, seconds: u64) -&gt; Result&lt;u64, SpawnError&gt; {\n    pool.spawn_with_handle(async {\n        thread::sleep(Duration::from_secs(3));\n        3\n    })?\n    .await;\n    Ok(seconds)\n}\n\nfn main() -&gt; Result&lt;(), SpawnError&gt; {\n    let pool = ThreadPool::new().expect(\"Unable to create threadpool\");\n\n    let a = delay_for(&amp;pool, 3);\n    let b = delay_for(&amp;pool, 1);\n\n    let c = executor::block_on(async {\n        let (a, b) = future::join(a, b).await;\n\n        Ok(a? + b?)\n    });\n\n    println!(\"{}\", c?);\n    Ok(())\n}\n</code></pre>\n\n<p>You can see that the total time is only 3 seconds:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>% time ./target/debug/example\n4\n\nreal    3.010\nuser    0.002\nsys     0.003\n</code></pre>\n\n<p><strong>1</strong> \u2014 There's some <a href=\"https://github.com/rust-lang/futures-rs/issues/1517#issuecomment-498983558\" rel=\"noreferrer\">discussion</a> that the current implementation may not be the <em>best</em> for blocking operations, but it suffices for now.</p>\n\n<h1>Tokio</h1>\n\n<p>Here, we use <code>task::spawn_blocking</code></p>\n\n<pre><code>use futures::future; // 0.3.1\nuse std::{thread, time::Duration};\nuse tokio::task; // 0.2.9, features = [\"full\"]\n\nasync fn delay_for(seconds: u64) -&gt; Result&lt;u64, task::JoinError&gt; {\n    task::spawn_blocking(move || {\n        thread::sleep(Duration::from_secs(seconds));\n        seconds\n    })\n    .await?;\n    Ok(seconds)\n}\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), task::JoinError&gt; {\n    let a = delay_for(3);\n    let b = delay_for(1);\n\n    let (a, b) = future::join(a, b).await;\n    let c = a? + b?;\n\n    println!(\"{}\", c);\n\n    Ok(())\n}\n</code></pre>\n\n<h1>Additional points</h1>\n\n<p>Note that this is <strong>not</strong> an efficient way of sleeping, it's just a placeholder for some blocking operation. If you actually need to sleep, use something like <a href=\"https://crates.io/crates/futures-timer\" rel=\"noreferrer\">futures-timer</a> or <a href=\"https://docs.rs/tokio/0.2.9/tokio/time/index.html\" rel=\"noreferrer\"><code>tokio::time</code></a>. See <a href=\"https://stackoverflow.com/q/48735952/155423\">Why does Future::select choose the future with a longer sleep period first?</a> for more details</p>\n\n<blockquote>\n  <p>neither solution is optimal and don't get the full advantage of the green-threading model</p>\n</blockquote>\n\n<p>That's correct - because you don't have something that is asynchronous! You are trying to combine two different methodologies and there has to be an ugly bit <em>somewhere</em> to translate between them.</p>\n\n<blockquote>\n  <p>second don't pass through the executor provided by reactor framework</p>\n</blockquote>\n\n<p>I'm not sure what you mean here. There's an executor implicitly created by <code>block_on</code> or <code>tokio::main</code>. The thread pool has some internal logic that checks to see if a thread is done, but that should only be triggered when the user's executor <code>poll</code>s it.</p>\n"}], "owner": {"reputation": 464, "user_id": 4660145, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/61039b2e8fce93ae427a1173273cbeaa?s=128&d=identicon&r=PG&f=1", "display_name": "Momh", "link": "https://stackoverflow.com/users/4660145/momh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5424, "favorite_count": 6, "accepted_answer_id": 41937561, "answer_count": 1, "score": 13, "last_activity_date": 1578849118, "creation_date": 1485767275, "last_edit_date": 1485783494, "question_id": 41932137, "link": "https://stackoverflow.com/questions/41932137/what-is-the-best-approach-to-encapsulate-blocking-i-o-in-future-rs", "title": "What is the best approach to encapsulate blocking I/O in future-rs?", "body": "<p>I read the <a href=\"https://tokio.rs/docs/getting-started/tokio/\" rel=\"noreferrer\">tokio documentation</a> and I wonder what is the best approach for encapsulating costly synchronous I/O in a future.</p>\n\n<p>With the reactor framework, we get the advantage of a green threading model: a few OS threads handle a lot of concurrent tasks through an executor.</p>\n\n<p>The future model of tokio is demand driven, which means the future itself will poll its internal state to provide informations about its completion; allowing backpressure and cancellation capabilities. As far as I understand, the polling phase of the future must be non-blocking to work well.</p>\n\n<p>The I/O I want to encapsulate can be seen as a long atomic and costly operation. Ideally, an independent task would perform the I/O and the associated future would poll the I/O thread for the completion status.</p>\n\n<p>The two only options I see are:</p>\n\n<ul>\n<li>Include the blocking I/O in the <code>poll</code> function of the future.</li>\n<li>spawn an OS thread to perform the I/O and use the future mechanism to poll its state, as <a href=\"https://tokio.rs/docs/going-deeper/synchronization/\" rel=\"noreferrer\">shown in the documentation</a></li>\n</ul>\n\n<p>As I understand it, neither solution is optimal and don't get the full advantage of the green-threading model (first is not advised in documentation and second don't pass through the executor provided by reactor framework). Is there another solution?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1485830549, "post_id": 41933625, "comment_id": 71077705, "body": "Regular functions are zero-sized. Boxing a zero-sized type does not perform any allocation at all (the allocator just returns <code>1</code> for the pointer)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1485848019, "post_id": 41933625, "comment_id": 71083159, "body": "@FrancisGagn&#233;: Are you sure? Surely the runtime will need a pointer to the function to know which one to call..."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1485912231, "post_id": 41933625, "comment_id": 71119206, "body": "@MatthieuM.: Normal functions all have their own type: this type is zero-sized. However, this type can also be cast to a function pointer type, which has the same size as a regular pointer. But <code>Box&lt;Fn()&gt;</code> does <i>not</i> perform a heap allocation if you use the distinct function type: <a href=\"https://play.rust-lang.org/?gist=6013c48297802fe6378bf391f45cc0fa&amp;version=stable&amp;backtrace=1\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. <code>Fn</code>&#39;s vtable will dispatch to the correct function."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1485935552, "post_id": 41933625, "comment_id": 71126856, "body": "@FrancisGagn&#233;: Ah I see, so the pointer to the function is implemented in the v-table. That&#39;s clever."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1485772162, "creation_date": 1485772162, "answer_id": 41933625, "question_id": 41931435, "link": "https://stackoverflow.com/questions/41931435/is-there-a-way-to-avoid-adding-lifetimes-to-all-downstream-structs-when-i-add-a/41933625#41933625", "title": "Is there a way to avoid adding lifetimes to all downstream structs when I add a lifetime?", "body": "<p>There is a very simple way of avoiding that: just use <code>Box&lt;Fn()&gt;</code> for regular functions as well.</p>\n\n<p>Rust has two types of abstracted functions:</p>\n\n<ul>\n<li><code>fn()</code> represents \"simple\" functions</li>\n<li><code>Fn()</code> abstracts over both functions and closures</li>\n</ul>\n\n<p>So using <code>Box&lt;Fn()&gt;</code> allows you to have both.</p>\n\n<p>Of course, there is a memory allocation here, which is unnecessary for \"naked\" functions. You may find the trade-off acceptable rather than having to refactor your entire code.</p>\n\n<p>If you are intent on avoiding the memory allocation, you may want to look into <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1485784915, "last_edit_date": 1495542258, "creation_date": 1485784915, "answer_id": 41937768, "question_id": 41931435, "link": "https://stackoverflow.com/questions/41931435/is-there-a-way-to-avoid-adding-lifetimes-to-all-downstream-structs-when-i-add-a/41937768#41937768", "title": "Is there a way to avoid adding lifetimes to all downstream structs when I add a lifetime?", "body": "<p><a href=\"https://stackoverflow.com/a/41933625/155423\">Matthieu M. has answered</a> the question \"how can I avoid adding a lifetime at all\", which probably solves your <em>problem</em> but not your <em>question</em>:</p>\n\n<blockquote>\n  <p>Is there a way to avoid adding lifetimes to all downstream structs when I add a lifetime</p>\n</blockquote>\n\n<p>No, there is no way. A lifetime annotation is <em>another generic type</em> that you have parameterized your type with. Everything that uses that type must know about the concrete lifetime that it is parameterized with. One of the big reasons for lifetimes is because of this - to have a safe system, the compiler (and you!) have to know that a struct contains a reference to something that might go out of scope. One that happens, the references are no longer valid.</p>\n"}], "owner": {"reputation": 333, "user_id": 2056328, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/408b85b14751f4dcc4128cf5896de27d?s=128&d=identicon&r=PG", "display_name": "kkspeed", "link": "https://stackoverflow.com/users/2056328/kkspeed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 370, "favorite_count": 1, "accepted_answer_id": 41933625, "answer_count": 2, "score": 2, "last_activity_date": 1485784915, "creation_date": 1485764431, "last_edit_date": 1485784539, "question_id": 41931435, "link": "https://stackoverflow.com/questions/41931435/is-there-a-way-to-avoid-adding-lifetimes-to-all-downstream-structs-when-i-add-a", "title": "Is there a way to avoid adding lifetimes to all downstream structs when I add a lifetime?", "body": "<p>I have a struct:</p>\n\n<pre><code>struct C {\n    field: Box&lt;Fn()&gt;\n}\n\nstruct D(C)\nstruct E(C)\nstruct F(D)\n</code></pre>\n\n<p>I want to change the field of <code>C</code> to <code>&amp;Fn()</code> instead to accommodate named functions. I run into trouble since the reference field in a Rust struct needs a lifetime parameter. <code>C</code> now has to be:</p>\n\n<pre><code>struct C&lt;'a&gt; {\n    field: &amp;'a Fn()\n}\n</code></pre>\n\n<p>Then for <code>D</code>, <code>E</code>, <code>F</code>, I have to supply the lifetime parameter as well:</p>\n\n<pre><code>struct D&lt;'a&gt;(c&lt;'a&gt;)\nstruct E&lt;'a&gt;(C&lt;'a&gt;)\nstruct F&lt;'a&gt;(C&lt;'a&gt;)\n</code></pre>\n\n<p>Imagine <code>D</code>, <code>E</code>, <code>F</code> have many <code>impl</code> functions... now the code requires a massive change to add a lifetime parameter to a lot of places.</p>\n\n<p>Is there a way to avoid doing that? The lifetime parameter for <code>C</code> cannot be <code>'static</code> as I have a bunch of locally defined closures as well.</p>\n"}, {"tags": ["arrays", "types", "casting", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485785943, "post_id": 41930702, "comment_id": 71056522, "body": "You could also have looked at the <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.binary_search\" rel=\"nofollow noreferrer\">standard library implementation of <code>binary_search</code></a> to get a hint at what one idiomatic Rust way would be."}, {"owner": {"reputation": 375, "user_id": 4873031, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/12972bef8c80332f812e801765cd99e4?s=128&d=identicon&r=PG&f=1", "display_name": "the_lrner", "link": "https://stackoverflow.com/users/4873031/the-lrner"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485964150, "post_id": 41930702, "comment_id": 71145646, "body": "Had not considered that, thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485771895, "post_id": 41930906, "comment_id": 71047349, "body": "I agree that <code>Option</code> is cleaner than a sentinel value, however I think the remark on size would be better off as a footnote. &quot;<i>especially on 64-bit systems where array lengths can greatly exceed what an i32 can represent</i>&quot; is in theory, but how often in practice do you deal with array of more than 2 billion elements? Apart from Zero-Sized Types, 2 billion elements is at least 2GB for the smallest possible element size (u8), and the size goes upward from there. Most software programs just don&#39;t have to deal with any collection that size, so putting the emphasis on it may weaken the answer."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485772309, "post_id": 41930906, "comment_id": 71047600, "body": "@MatthieuM. I rephrased it a little, but I dunno how much more footnote-y it can get given that it&#39;s already the last paragraph."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485777616, "post_id": 41930906, "comment_id": 71050893, "body": "I took a shot at it, feel free to revert if you don&#39;t like it."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 7, "last_activity_date": 1485777572, "last_edit_date": 1485777572, "creation_date": 1485761778, "answer_id": 41930906, "question_id": 41930702, "link": "https://stackoverflow.com/questions/41930702/downcasting-array-length-indices/41930906#41930906", "title": "Downcasting array length &amp; indices", "body": "<p>You're unnecessarily fighting the language.  <code>i32</code> isn't an appropriate type for array indices.  Instead, you should use <code>Option</code>:</p>\n\n<pre><code>fn binary_search(nums: &amp;[i32], target: i32) -&gt; Option&lt;usize&gt; {\n    let num_size = nums.len();\n    bsearch(nums, target, 0, num_size)\n}\n\nfn bsearch(nums: &amp;[i32], target: i32, lo: usize, hi: usize) -&gt; Option&lt;usize&gt; {\n    if hi &lt; lo {\n        return None;\n    }\n\n    let mid_idx = lo + ((hi - lo) / 2);\n    let guess = nums[mid_idx];\n\n    if guess &gt; target {\n        bsearch(nums, target, lo, mid_idx - 1)\n    } else if guess &lt; target {\n        bsearch(nums, target, mid_idx + 1, hi)\n    } else {\n        Some(mid_idx)\n    }\n}\n</code></pre>\n\n<p>Given that a function which deals with arrays <em>has</em> to use <code>usize</code> for indices, there's no benefit in forcing it to use <code>i32</code> instead.  If you want <code>i32</code> because you want \"not found\" to be <code>-1</code>, you can perform the conversion after the function has finished.</p>\n\n<hr>\n\n<p><em>Note: also, keep in mind that when using <code>i32</code>, you really should do bounds checking.  On 64-bit systems, array lengths can greatly exceed what an <code>i32</code> can represent, and even on 32-bit machines, you run the risk of having negative array indices.</em></p>\n"}], "owner": {"reputation": 375, "user_id": 4873031, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/12972bef8c80332f812e801765cd99e4?s=128&d=identicon&r=PG&f=1", "display_name": "the_lrner", "link": "https://stackoverflow.com/users/4873031/the-lrner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 41930906, "answer_count": 1, "score": 0, "last_activity_date": 1485785895, "creation_date": 1485760804, "last_edit_date": 1485785895, "question_id": 41930702, "link": "https://stackoverflow.com/questions/41930702/downcasting-array-length-indices", "title": "Downcasting array length &amp; indices", "body": "<p>I'm implementing binary search. The function returns the index of the target value when it's found in the array, otherwise <code>-1</code>.</p>\n\n<p>I prefer to deal with indices that are <code>i32</code> rather than <code>usize</code> as I need to allow negatives for returning <code>-1</code> when the target is not found. I'm explicitly casting at the edges of the function, which I assume isn't great. What's a more Rusty way around this?</p>\n\n<pre><code>fn binary_search(nums: &amp;[i32], target: i32) -&gt; i32 {\n    let num_size: i32 = nums.len() as i32;            // This seems bad\n    bsearch(nums, target, 0, num_size as usize)\n}\n\nfn bsearch(nums: &amp;[i32], target: i32, lo: usize, hi: usize) -&gt; i32 {\n    if hi &lt; lo {\n        return -1;\n    }\n\n    let mid_idx = lo + ((hi - lo) / 2);\n    let guess = nums[mid_idx];\n\n    if guess &gt; target {\n        bsearch(nums, target, lo, mid_idx - 1)\n    } else if guess &lt; target {\n        bsearch(nums, target, mid_idx + 1, hi)\n    } else {\n        mid_idx as i32                      // This seems bad\n    }\n}\n</code></pre>\n"}, {"tags": ["module", "rust", "visibility", "file-structure"], "owner": {"reputation": 615, "user_id": 4176597, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4f118d3068ac55ffc44752d308d50ee7?s=128&d=identicon&r=PG&f=1", "display_name": "ethanabrooks", "link": "https://stackoverflow.com/users/4176597/ethanabrooks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 20, "favorite_count": 0, "closed_date": 1485708517, "answer_count": 0, "score": 1, "last_activity_date": 1485717299, "creation_date": 1485708238, "last_edit_date": 1485717299, "question_id": 41923330, "link": "https://stackoverflow.com/questions/41923330/mixins-mixing-modules-and-files", "closed_reason": "Duplicate", "title": "Mixins / mixing modules and files", "body": "<p>I know that you can have multiple modules in a single file using the <code>mod</code> keyword. I know that you can also split a module across several files using the file structure described in the tutorial:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 english\n\u2502   \u251c\u2500\u2500 farewells.rs\n\u2502   \u251c\u2500\u2500 greetings.rs\n\u2502   \u2514\u2500\u2500 mod.rs\n</code></pre>\n\n<p>I am looking for a mix of these functionalities. Specifically, I have a set of modules in separate files:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 main.rs\n\u251c\u2500\u2500 constant.rs // module\n\u251c\u2500\u2500 function.rs // module\n\u251c\u2500\u2500 matrix.rs   // module\n\u2514\u2500\u2500 ops.rs      // module, but probably shouldn't be\n</code></pre>\n\n<p>These are separate modules, but I would prefer to only have <code>constant.rs</code>, <code>function.rs</code>, and <code>matrix.rs</code> be modules and to have <code>ops.rs</code> simply augment these three modules. The objective is to allow <code>ops.rs</code> to access private methods in those three modules. Right now I have to make those methods public, which is undesirable.</p>\n\n<p>I'm looking for something similar to Ruby mixins or C++ 'friend' functions.</p>\n"}, {"tags": ["regex", "rust", "visual-studio-code"], "comments": [{"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1485701527, "post_id": 41921208, "comment_id": 71024929, "body": "From what I know, the <code>\\s</code> might not catch CR. Try replacing all <code>\\s</code> with <code>[\\s\\r]</code> (<a href=\"https://regex101.com/r/pgGndx/1\" rel=\"nofollow noreferrer\">demo</a>)."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1485714928, "post_id": 41921208, "comment_id": 71029395, "body": "Try using <code>.*?</code> (non-greedy match) instead of <code>.*</code>? Also, the dot <code>.</code> may be not matching new lines."}], "answers": [{"tags": [], "owner": {"reputation": 8073, "user_id": 2852624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/682806d261e4f00f77aa8633689a9558?s=128&d=identicon&r=PG&f=1", "display_name": "Matthias247", "link": "https://stackoverflow.com/users/2852624/matthias247"}, "is_accepted": false, "score": 0, "last_activity_date": 1485731133, "last_edit_date": 1485731133, "creation_date": 1485731025, "answer_id": 41926961, "question_id": 41921208, "link": "https://stackoverflow.com/questions/41921208/visual-studio-code-task-regex-not-capturing-build-error-output/41926961#41926961", "title": "Visual Studio Code task regex not capturing build error output", "body": "<p>According to the <a href=\"https://code.visualstudio.com/Docs/editor/tasks#_defining-a-multiline-problem-matcher\" rel=\"nofollow noreferrer\">VS Code documentation</a>, you need a multiline problem matcher. This might work; I did not test it:</p>\n\n<pre><code>{\n    \"version\": \"0.1.0\",\n    \"command\": \"cargo\",\n    \"isShellCommand\": true,\n    \"args\": [\"build\"],\n    \"problemMatcher\": {\n        \"owner\": \"build\",\n        \"fileLocation\": [\"relative\", \"${workspaceRoot}\"],\n        \"pattern\": [{\n            \"regexp\": \"(error):(.*)\",\n            \"severity\": 1,\n            \"message\": 2\n        },{\n            \"regexp\": \"--&gt;\\\\s+([^:]*):(\\\\d+):(\\\\d+)\",\n            \"file\": 1,\n            \"line\": 2,\n            \"column\": 3\n        }]\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 51, "user_id": 956242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3b3ea74d27f82825b3de9daaf43417b9?s=128&d=identicon&r=PG", "display_name": "mastermind", "link": "https://stackoverflow.com/users/956242/mastermind"}, "is_accepted": false, "score": 0, "last_activity_date": 1505304383, "last_edit_date": 1505304383, "creation_date": 1505300265, "answer_id": 46195717, "question_id": 41921208, "link": "https://stackoverflow.com/questions/41921208/visual-studio-code-task-regex-not-capturing-build-error-output/46195717#46195717", "title": "Visual Studio Code task regex not capturing build error output", "body": "<p>Correct regexp for Rust v1.20.0:</p>\n\n<pre><code>\"pattern\": [{\n    \"regexp\": \"(error(?:\\\\[E\\\\d{4}\\\\])?|warning):\\\\s(.*)\",\n    \"severity\": 1,\n    \"message\": 2\n},{\n    \"regexp\": \"--&gt;\\\\s+([^:]*):(\\\\d+):(\\\\d+)\",\n    \"file\": 1,\n    \"line\": 2,\n    \"column\": 3\n}]\n</code></pre>\n"}], "owner": {"reputation": 27, "user_id": 3592255, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/777527630/picture?type=large", "display_name": "Bj&#246;rn", "link": "https://stackoverflow.com/users/3592255/bj%c3%b6rn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 333, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1505304383, "creation_date": 1485695151, "last_edit_date": 1485699842, "question_id": 41921208, "link": "https://stackoverflow.com/questions/41921208/visual-studio-code-task-regex-not-capturing-build-error-output", "title": "Visual Studio Code task regex not capturing build error output", "body": "<p>I am having some problems with my Regex for parsing build output from rustc.</p>\n\n<p>The output looks like</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling svd2rust v0.2.1 (file:///C:/trust/svd2rust)\nerror: expected one of `=&gt;`, `@`, `if`, or `|`, found `Some`\n  --&gt; src\\main.rs:56:9\n   |\n56 |         Some(\"all\") =&gt;\n   |         ^^^^\nerror: aborting due to previous error\nerror: Could not compile `svd2rust`.\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>My task at the moment looks like:</p>\n\n<pre><code>{\n    \"version\": \"0.1.0\",\n    \"command\": \"cargo\",\n    \"isShellCommand\": true,\n    \"args\": [\"build\"],\n    \"problemMatcher\": {\n        \"owner\": \"build\",\n        \"fileLocation\": [\"relative\", \"${workspaceRoot}\"],\n        \"pattern\": {\n            \"regexp\": \"(error):(.*)\\\\s+--&gt;\\\\s+(.*):(\\\\d+):(\\\\d+)\",\n            \"file\": 3,\n            \"line\": 4,\n            \"column\": 5,\n            \"severity\": 1,\n            \"message\": 2\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://regex101.com/r/rAdBF9/1\" rel=\"nofollow noreferrer\">According to regex101</a>, it looks like the regex should match the appropriate sections.</p>\n"}, {"tags": ["generics", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1485698999, "last_edit_date": 1495541348, "creation_date": 1485698687, "answer_id": 41921743, "question_id": 41920919, "link": "https://stackoverflow.com/questions/41920919/how-to-specialize-on-the-stable-channel-before-specialization-is-stabilized/41921743#41921743", "title": "How to specialize on the stable channel before specialization is stabilized?", "body": "<p><strong>You don't</strong>. The <em>entire reason</em> that the RFC exists is because it wasn't possible before!</p>\n\n<p>As \"proof\", consider <code>str::to_string</code>. Before specialization existed, <code>str::to_string</code> used the exact same mechanism as all the other implementors of <code>ToString</code>, which meant that it had to build up and use the formatting infrastructure. This is relatively expensive and benchmarks actively <a href=\"https://stackoverflow.com/q/31331356/155423\">showed the difference between <code>str::to_string</code> and <code>str::to_owned</code> or <code>String::from</code></a>. After specialization was enabled, the Rust compiler used it for <code>str::to_string</code>, and the benchmarks improved.</p>\n\n<p>If the <em>Rust compiler</em> couldn't specialize before specialization, it's <em>highly unlikely</em> that other code could find some way to work around it in a generic manner.</p>\n\n<hr>\n\n<p>For your specific case, I agree that you should just accept something implementing <code>BufRead</code> (<code>fn read&lt;T: BufRead&gt;(stream: T)</code>).</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1485698990, "creation_date": 1485698990, "answer_id": 41921790, "question_id": 41920919, "link": "https://stackoverflow.com/questions/41920919/how-to-specialize-on-the-stable-channel-before-specialization-is-stabilized/41921790#41921790", "title": "How to specialize on the stable channel before specialization is stabilized?", "body": "<p>In terms of pure Rust, with difficulty:</p>\n\n<ul>\n<li>Stable does not have specialization</li>\n<li>Rust does not have down-casting</li>\n</ul>\n\n<p>That being said, there are alternatives such as the <a href=\"https://crates.io/crates/query_interface\" rel=\"nofollow noreferrer\"><code>query_interfaces</code></a> crate which promote principled down-casting.</p>\n\n<p>In essence, you want to let the caller tell you whether <code>BufRead</code> is implemented for the stream in question. <code>query_interfaces</code> or a dedicated purpose solution can be created to ship \"optional\" v-pointers.</p>\n\n<p>However, I would simply require <code>BufRead</code> to be implement by <code>stream</code>. The caller can always wrap their <code>stream</code> with <code>BufRead::new</code> if they need.</p>\n"}], "owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "accepted_answer_id": 41921790, "answer_count": 2, "score": 3, "last_activity_date": 1485698999, "creation_date": 1485693072, "last_edit_date": 1485698668, "question_id": 41920919, "link": "https://stackoverflow.com/questions/41920919/how-to-specialize-on-the-stable-channel-before-specialization-is-stabilized", "title": "How to specialize on the stable channel before specialization is stabilized?", "body": "<p>How can I achieve the following (pseudo Rust) with stable Rust?</p>\n\n<pre><code>pub fn read&lt;T: Read&gt;(stream: T) {\n    let stream = if T implements BufRead {\n        stream\n    } else {\n        BufReader::new(stream)\n    };\n\n    // Work with `stream`\n}\n</code></pre>\n\n<p>I know about <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"nofollow noreferrer\">impl specialization</a>, however I want to achieve the same thing with stable Rust.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 14451, "user_id": 33499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17c590aa4c56918b47c7ba5e39dba5d8?s=128&d=identicon&r=PG", "display_name": "wimh", "link": "https://stackoverflow.com/users/33499/wimh"}, "edited": false, "score": 3, "creation_date": 1485689990, "post_id": 41920192, "comment_id": 71021821, "body": "You can create a custom Cargo.toml and use it like this: <code>cargo build --manifest-path .&#47;Cargo-custom.toml</code>. But it requires you specify dependencies in both files."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1569938545, "last_edit_date": 1569938545, "creation_date": 1485698432, "answer_id": 41921698, "question_id": 41920192, "link": "https://stackoverflow.com/questions/41920192/does-cargo-support-custom-profiles/41921698#41921698", "title": "Does Cargo support custom profiles?", "body": "<blockquote>\n  <p>Does Cargo support custom profiles?</p>\n</blockquote>\n\n<p>No, stable releases of Cargo do not support this. It is available as an <a href=\"https://github.com/rust-lang/cargo/issues/6988\" rel=\"nofollow noreferrer\"><em>unstable</em> nightly feature</a>.</p>\n\n<p>If you are using a nightly version of Cargo, you can create custom profiles in your Cargo.toml:</p>\n\n<pre><code>cargo-features = [\"named-profiles\"]\n\n[profile.release-lto]\ninherits = \"release\"\nlto = true\n</code></pre>\n\n<p>And then use them:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo +nightly build --profile release-lto -Z unstable-options\n</code></pre>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1030, "favorite_count": 0, "accepted_answer_id": 41921698, "answer_count": 1, "score": 3, "last_activity_date": 1569938545, "creation_date": 1485688031, "last_edit_date": 1485698532, "question_id": 41920192, "link": "https://stackoverflow.com/questions/41920192/does-cargo-support-custom-profiles", "title": "Does Cargo support custom profiles?", "body": "<p>I often want to compile in release mode with <code>debug = true</code> so that I can read the generated assembly a bit easier. I am currently doing this:</p>\n\n<pre><code>[profile.release]\ndebug = true\n</code></pre>\n\n<p>but I don't want any debug symbols in my final release build. I'd like to do something like:</p>\n\n<pre><code>[profile.custom]\ndebug = true\nopt-level = 3\nrpath = false\nlto = true\ndebug-assertions = false\ncodegen-units = 1\npanic = 'unwind'\n</code></pre>\n\n<p>And then run</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo build --custom\n</code></pre>\n\n<p>I've read <a href=\"http://doc.crates.io/manifest.html#the-profile-sections\" rel=\"nofollow noreferrer\">the documentation</a> to no avail.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485661611, "post_id": 41917398, "comment_id": 71016082, "body": "@Shepmaster Unless Cargo is parsing the build script&#39;s stdout as raw binary data, it won&#39;t matter.  To avoid <code>display</code>, you&#39;d also have to avoid all regular string-based formatting and output."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485662065, "post_id": 41917398, "comment_id": 71016146, "body": "I mean, I&#39;m sure the Cargo authors talked to the Rust authors (because they are the same people), and the Rust authors are the ones who created <code>Path</code> and <code>PathBuf</code> to be separate from <code>&amp;str</code> and <code>String</code>. I&#39;d hope (but wouldn&#39;t hold my breath) that Cargo does try a little bit harder. You wouldn&#39;t have to abandon all regular formatting though, just for the variables that needed it. It&#39;s also a shame that there&#39;s no obvious <code>panic</code> if the path cannot be display-formatted, which would cause any errors I&#39;m worried about to happen in an obvious way."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 8, "last_activity_date": 1485683310, "last_edit_date": 1485683310, "creation_date": 1485661349, "answer_id": 41917398, "question_id": 41917096, "link": "https://stackoverflow.com/questions/41917096/how-do-i-make-rustc-link-search-relative-to-the-project-location/41917398#41917398", "title": "How do I make rustc-link-search relative to the project location?", "body": "<p>Manually.</p>\n\n<p>A good example of this is the <a href=\"https://github.com/retep998/winapi-rs/\" rel=\"noreferrer\"><code>winapi</code></a> crate.  It has a pair of sub-crates for import libraries, each of which has a build script and a <code>lib</code> directory.  The <a href=\"https://github.com/retep998/winapi-rs/blob/dev/i686/build.rs\" rel=\"noreferrer\">build script for the <code>i686</code> crate</a> contains the following:</p>\n\n<pre><code>use std::path::Path;\nuse std::env;\n\nfn main() {\n    let dir = env::var(\"CARGO_MANIFEST_DIR\").unwrap();\n    println!(\"cargo:rustc-link-search=native={}\", Path::new(&amp;dir).join(\"lib\").display());\n}\n</code></pre>\n"}], "owner": {"reputation": 623, "user_id": 1955971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f1d7c2842d4d6be9c8f79e1384f284af?s=128&d=identicon&r=PG", "display_name": "Aleksander Fular", "link": "https://stackoverflow.com/users/1955971/aleksander-fular"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2351, "favorite_count": 0, "accepted_answer_id": 41917398, "answer_count": 1, "score": 3, "last_activity_date": 1485683310, "creation_date": 1485657309, "last_edit_date": 1485658366, "question_id": 41917096, "link": "https://stackoverflow.com/questions/41917096/how-do-i-make-rustc-link-search-relative-to-the-project-location", "title": "How do I make rustc-link-search relative to the project location?", "body": "<p>I am creating a Rust wrapper around a C library. I've put the C libraries in the <code>lib</code> directory and I am using <code>build.rs</code> to tell the compiler where to find the libraries to link with:  </p>\n\n<pre><code>println!(\"cargo:rustc-link-lib=static=wrapped-lib\");\nprintln!(r\"cargo:rustc-link-search=lib\\\");\n</code></pre>\n\n<p>This works fine when I build the library, but downstream libraries which depend on the wrapper library get compilation failures:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: could not find native static library `wrapped-lib`, perhaps an -L flag is missing?\n</code></pre>\n\n<p>The problem seems to be with:</p>\n\n<pre><code>println!(r\"cargo:rustc-link-search=lib\\\");\n</code></pre>\n\n<p>When compiling a client library, this does not point at <code>repository\\checked_out_project\\lib</code> but instead seems to be looking locally, because specifying the absolute path in the dependency works:</p>\n\n<pre><code>println!(r\"cargo:rustc-link-search=C:\\users\\id\\.cargo\\..\\lib\\\");\n</code></pre>\n\n<p>I also have instructed Cargo to include the <code>lib</code> directory in the wrapper-lib as follows:  </p>\n\n<pre><code>include = [\"lib/**/*\"]\n</code></pre>\n\n<p>How do I tell the compiler to look relative to the dependency, not the project being built? I thought that this should work:</p>\n\n<pre><code>println!(r\"cargo:rustc-link-search=lib\\\");\n</code></pre>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 7, "last_activity_date": 1605263386, "last_edit_date": 1605263386, "creation_date": 1485645032, "answer_id": 41915899, "question_id": 41915732, "link": "https://stackoverflow.com/questions/41915732/how-to-define-a-variable-that-conforms-to-a-trait-in-rust/41915899#41915899", "title": "How to define a variable that conforms to a trait in Rust?", "body": "<p>If you want to return one of two (or more) separate types that implement a trait, then you need to return a <a href=\"https://doc.rust-lang.org/beta/book/trait-objects.html\" rel=\"nofollow noreferrer\">trait object</a>.</p>\n<p>In this case you need the return value to own the object (since otherwise the <code>File</code> would be destroyed before the end of the <code>match</code>), so it it makes sense to use <code>Box&lt;dyn Write&gt;</code>.  Trait objects such as <code>&amp;Write</code> and <code>Box&lt;dyn Write&gt;</code> are &quot;fat&quot; pointers, which include both a pointer to the struct (<code>File</code> or <code>Stdout</code> in this case) as well as a pointer to a vtable which describes how to implement <code>Write</code>.  Importantly, <code>Box&lt;dyn Write&gt;</code> and <code>&amp;Write</code> automatically implement <code>Write</code>.</p>\n<p>Here's a working version (<a href=\"https://play.rust-lang.org/?gist=15fe776559c265dd510ad79e12b4d071&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a>):</p>\n<pre><code>fn get_writer(f: Option&lt;&amp;str&gt;) -&gt; Box&lt;dyn Write&gt; {\n    match f {\n        Some(file_name) =&gt; Box::new(File::create(file_name).expect(&quot;could not open output file&quot;)),\n        None =&gt; Box::new(std::io::stdout()),\n    }\n}\n</code></pre>\n<p>I've made a few changes from your code:</p>\n<ul>\n<li><p>Added the <code>Box&lt;dyn Write&gt;</code> return value (without a function you may need to have <code>let outputFile: Box&lt;dyn Write&gt; = ...</code>; without having the type defined somewhere the compiler won't be able to infer that it needs to coerce the two types to the common <code>Box&lt;dyn Write&gt;</code>.  Once the compiler knows that it needs <code>Box&lt;dyn Write&gt;</code>, it can <em>coerce</em> a <code>Box&lt;File&gt;</code> to <code>Box&lt;dyn Write&gt;</code>.</p>\n</li>\n<li><p>Boxed the two results.</p>\n</li>\n<li><p>Renamed <code>fileName</code> to <code>file_name</code> to match Rust conventions (and silence the warning).</p>\n</li>\n</ul>\n"}], "owner": {"reputation": 2582, "user_id": 768779, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ea3f7b449ae3e5b950c27476f96cc00c?s=128&d=identicon&r=PG", "display_name": "Matoe", "link": "https://stackoverflow.com/users/768779/matoe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2732, "favorite_count": 0, "closed_date": 1485645485, "accepted_answer_id": 41915899, "answer_count": 1, "score": 3, "last_activity_date": 1605263386, "creation_date": 1485643829, "last_edit_date": 1485643976, "question_id": 41915732, "link": "https://stackoverflow.com/questions/41915732/how-to-define-a-variable-that-conforms-to-a-trait-in-rust", "closed_reason": "Duplicate", "title": "How to define a variable that conforms to a trait in Rust?", "body": "<p>I want to instantiate a variable that I will pass into a function that takes a <code>T: Write</code>. It would be defined as follows:</p>\n\n<pre><code>let outputFile = match matches.opt_str(\"o\") {\n    Some(fileName) =&gt; File::create(fileName).expect(\"could not open output file\"),\n    None =&gt; std::io::stdout()\n};\n</code></pre>\n\n<p>Currently, the compiler will complain about non-matching types in arms (<code>File</code> vs. <code>Stdout</code>). All I want is to declare <code>outputFile</code> as something I can call any method from the <code>Write</code> trait on and nothing else.</p>\n\n<p>Does Rust allow me to do this or do I have to bring this entire <code>match</code> expression as a parameter to be passed into that function?</p>\n"}, {"tags": ["rust", "rust-cargo", "iron", "hyper"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485645314, "post_id": 41915308, "comment_id": 71013213, "body": "Why did you choose to use Rust 1.7? That&#39;s about 11 months old at this point."}, {"owner": {"reputation": 709, "user_id": 1146086, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/eec10495b9821c429bfde9295cf1b57d?s=128&d=identicon&r=PG", "display_name": "dnlkng", "link": "https://stackoverflow.com/users/1146086/dnlkng"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485686824, "post_id": 41915308, "comment_id": 71020975, "body": "thanks @Shepmaster. It was indeed a version problem."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485699761, "post_id": 41920022, "comment_id": 71024429, "body": "I&#39;m pretty sure if you kept reading the installation text, <a href=\"https://github.com/rust-lang-nursery/rustup.rs/blob/dcacbf6ed229ce96a86894011c11f28838df0979/src/rustup-cli/self_update.rs#L115-L119\" rel=\"nofollow noreferrer\">you would have seen</a>: <i>Next time you log in this will be done automatically. <b>To configure your current shell</b> run <code>source {cargo_home}&#47;env</code></i>."}], "tags": [], "owner": {"reputation": 709, "user_id": 1146086, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/eec10495b9821c429bfde9295cf1b57d?s=128&d=identicon&r=PG", "display_name": "dnlkng", "link": "https://stackoverflow.com/users/1146086/dnlkng"}, "is_accepted": true, "score": 1, "last_activity_date": 1485699569, "last_edit_date": 1485699569, "creation_date": 1485686745, "answer_id": 41920022, "question_id": 41915308, "link": "https://stackoverflow.com/questions/41915308/macro-undefined-error-while-compiling-hyper-0-9-17/41920022#41920022", "title": "&quot;macro undefined&quot; error while compiling hyper 0.9.17", "body": "<p>An old version of Rust was causing the problem. Today's stable version of Rust is 1.14.0, but on my Digital Ocean VM, Rust 1.7 was preinstalled. Even after running the official installer, the version was still 1.7:</p>\n\n<pre><code>curl https://sh.rustup.rs -sSf | sh\n</code></pre>\n\n<p>After the installation it says:</p>\n\n<blockquote>\n  <p>Welcome to Rust!</p>\n  \n  <p>This will download and install the official compiler for the Rust\n  programming language, and its package manager, Cargo.</p>\n  \n  <p>It will add the cargo, rustc, rustup and other commands to Cargo's bin\n  directory, located at:</p>\n\n<pre><code>/root/.cargo/bin\n</code></pre>\n  \n  <p>This path will then be added to your PATH environment variable by\n  modifying the profile file located at:</p>\n\n<pre><code>/root/.profile\n</code></pre>\n</blockquote>\n\n<p>I use zsh which doesn't use ~/.profile. So the <code>PATH</code> environment variable wasn't changed for me and therefor the command <code>cargo run</code> pointed to the preinstalled old version in <code>/usr/bin/cargo</code> and not to <code>~/.cargo/bin</code>.</p>\n\n<p>You can find out where the executables are located with the command <code>which cargo</code> or <code>which rustc</code>. </p>\n\n<p>The solution was to use <code>~/.cargo/bin/cargo run</code>. For zsh, you can also add the folder <code>~/.cargo/bin</code>to your <code>PATH</code> environment variable by adding </p>\n\n<pre><code>export PATH=\"~/.cargo/bin:$PATH\"\n</code></pre>\n\n<p>to your .zshrc</p>\n"}], "owner": {"reputation": 709, "user_id": 1146086, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/eec10495b9821c429bfde9295cf1b57d?s=128&d=identicon&r=PG", "display_name": "dnlkng", "link": "https://stackoverflow.com/users/1146086/dnlkng"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 143, "favorite_count": 0, "accepted_answer_id": 41920022, "answer_count": 1, "score": 1, "last_activity_date": 1485699569, "creation_date": 1485640793, "last_edit_date": 1485686941, "question_id": 41915308, "link": "https://stackoverflow.com/questions/41915308/macro-undefined-error-while-compiling-hyper-0-9-17", "title": "&quot;macro undefined&quot; error while compiling hyper 0.9.17", "body": "<p>I'm trying to build a web service with Iron using <a href=\"https://www.jamestease.co.uk/blether/writing-a-basic-json-web-server-in-rust-using-iron\" rel=\"nofollow noreferrer\">this source as a tutorial</a>, but I'm getting errors during compilation of hyper:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling hyper v0.9.17\n/root/.cargo/registry/src/github.com-88ac128001ac3a9a/hyper-0.9.17/src/header/common/accept_language.rs:62:23: 62:30 error: macro undefined: 'langtag!'\n/root/.cargo/registry/src/github.com-88ac128001ac3a9a/hyper-0.9.17/src/header/common/accept_language.rs:62                 qitem(langtag!(en;;;US)),\n                                                                                                                                 ^~~~~~~\n/root/.cargo/registry/src/github.com-88ac128001ac3a9a/hyper-0.9.17/src/header/common/accept_language.rs:63:34: 63:41 error: macro undefined: 'langtag!'\n/root/.cargo/registry/src/github.com-88ac128001ac3a9a/hyper-0.9.17/src/header/common/accept_language.rs:63                 QualityItem::new(langtag!(en), Quality(500)),\n                                                                                                                                            ^~~~~~~\n/root/.cargo/registry/src/github.com-88ac128001ac3a9a/hyper-0.9.17/src/header/common/accept_language.rs:64:23: 64:30 error: macro undefined: 'langtag!'\n/root/.cargo/registry/src/github.com-88ac128001ac3a9a/hyper-0.9.17/src/header/common/accept_language.rs:64                 qitem(langtag!(fr)),\n                                                                                                                                 ^~~~~~~\n</code></pre>\n\n<p>Versions I'm using:</p>\n\n<ul>\n<li>cargo 0.8.0 (built 2016-03-22)</li>\n<li>rustc 1.7.0</li>\n</ul>\n\n<p>Cargo.toml</p>\n\n<pre><code>[package]\nname = \"hello\"\nversion = \"0.1.0\"\nauthors = [\"root\"]\n\n[dependencies]\nlanguage-tags = \"0.2.2\"\niron = \"0.4.0\"\n</code></pre>\n\n<p>main.rs:</p>\n\n<pre><code>extern crate iron;\n\nuse iron::prelude::*;\nuse iron::status;\nuse iron::mime::Mime;\n\nfn main() {\n  Iron::new(|_: &amp;mut Request| {\n  let content_type = \"application/json\".parse::&lt;Mime&gt;().unwrap();\n\n  Ok(Response::with((content_type, status::Ok, \"{ respone: \\\"Hello world!\\\" }\")))\n }).http(\"localhost:3009\").unwrap();\n}\n</code></pre>\n\n<p>I only added the language-tags in the Cargo.toml because I thought it would be solve my problem. Additional changes were not made.</p>\n"}, {"tags": ["windows", "time", "rust"], "comments": [{"owner": {"reputation": 91121, "user_id": 179125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5594142dcc49a24b1902ec8059181f8d?s=128&d=identicon&r=PG&f=1", "display_name": "Jordan Running", "link": "https://stackoverflow.com/users/179125/jordan-running"}, "edited": false, "score": 3, "creation_date": 1485641367, "post_id": 41914909, "comment_id": 71012111, "body": "I don&#39;t know Rust, but perusing the source it appears that <code>UNIX_EPOCH</code> is a SystemTime, which for Windows is implemented in <code>libstd&#47;sys&#47;windows&#47;time.rs</code>. Its implementation of <code>add_duration</code> calls <code>dur2intervals</code>, which explicitly <a href=\"https://github.com/rust-lang/rust/blob/b1363a73ede57ae595f3a1be2bb75d308ba4f7f6/src/libstd/sys/windows/time.rs#L177\" rel=\"nofollow noreferrer\">divides the nanoseconds by 100</a> A workaround might be to convert UNIX_EPOCH to an Instant before doing the addition, but I&#39;m out of my depth."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 91121, "user_id": 179125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5594142dcc49a24b1902ec8059181f8d?s=128&d=identicon&r=PG&f=1", "display_name": "Jordan Running", "link": "https://stackoverflow.com/users/179125/jordan-running"}, "edited": false, "score": 0, "creation_date": 1485641895, "post_id": 41914909, "comment_id": 71012269, "body": "@Jordan if that&#39;s the response of someone who &quot;doesn&#39;t know Rust&quot;, then you need to start doing some Rust! Being able to peruse source for an unfamiliar programming language and get the right answer is a hard-fought skill."}, {"owner": {"reputation": 91121, "user_id": 179125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5594142dcc49a24b1902ec8059181f8d?s=128&d=identicon&r=PG&f=1", "display_name": "Jordan Running", "link": "https://stackoverflow.com/users/179125/jordan-running"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485642032, "post_id": 41914909, "comment_id": 71012311, "body": "@Shepmaster Thanks! In truth I&#39;ve read a lot of the Rust book (because I&#39;m that kind of nerd), and it&#39;s been at the top of my to-learn list for awhile."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1485641652, "creation_date": 1485641652, "answer_id": 41915431, "question_id": 41914909, "link": "https://stackoverflow.com/questions/41914909/why-is-the-nanoseconds-value-of-timeduration-floored-to-the-nearest-multiple-o/41915431#41915431", "title": "Why is the nanoseconds value of time::Duration floored to the nearest multiple of 100 on Windows?", "body": "<p>By adding <a href=\"https://doc.rust-lang.org/std/time/constant.UNIX_EPOCH.html\" rel=\"nofollow noreferrer\"><code>UNIX_EPOCH</code></a> (a <a href=\"https://doc.rust-lang.org/std/time/struct.SystemTime.html\" rel=\"nofollow noreferrer\"><code>SystemTime</code></a>) to your <a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html\" rel=\"nofollow noreferrer\"><code>Duration</code></a>, you end up with a <code>SystemTime</code>.</p>\n\n<p>The <a href=\"https://github.com/rust-lang/rust/blob/1.14.0/src/libstd/sys/windows/time.rs\" rel=\"nofollow noreferrer\">Windows-specific implementation</a> of <a href=\"https://github.com/rust-lang/rust/blob/1.14.0/src/libstd/sys/windows/time.rs#L28-L31\" rel=\"nofollow noreferrer\"><code>sys::time::SystemTime</code></a> is based on the Windows <code>FILETIME</code> struct.</p>\n\n<p>This structure <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284(v=vs.85).aspx\" rel=\"nofollow noreferrer\">has 100 nanosecond granularity</a>:</p>\n\n<blockquote>\n  <p>Contains a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).</p>\n</blockquote>\n\n<p>Presumably the choice of <code>FILETIME</code> is because that's a pervasive type for time in the Windows world and it offers a good mix of performance and capability.</p>\n"}], "owner": {"reputation": 1534, "user_id": 345722, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/455dacdd875d5101598476c06e076c44?s=128&d=identicon&r=PG", "display_name": "dOxxx", "link": "https://stackoverflow.com/users/345722/doxxx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 749, "favorite_count": 0, "accepted_answer_id": 41915431, "answer_count": 1, "score": 2, "last_activity_date": 1485641652, "creation_date": 1485638113, "last_edit_date": 1485641128, "question_id": 41914909, "link": "https://stackoverflow.com/questions/41914909/why-is-the-nanoseconds-value-of-timeduration-floored-to-the-nearest-multiple-o", "title": "Why is the nanoseconds value of time::Duration floored to the nearest multiple of 100 on Windows?", "body": "<p>When running the following program on Windows 10 64-bit:</p>\n\n<pre><code>use std::time::{Duration, UNIX_EPOCH};\n\nfn main() {\n    let d = Duration::new(4660, 22136);\n    let t = UNIX_EPOCH + d;\n    let d2 = t.duration_since(UNIX_EPOCH).unwrap();\n    println!(\"d: {:?}\", d);\n    println!(\"d2: {:?}\", d2);\n}\n</code></pre>\n\n<p>Why is the nanoseconds value floored to the nearest multiple of 100?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>d: Duration { secs: 4660, nanos: 22136 }\nd2: Duration { secs: 4660, nanos: 22100 }\n</code></pre>\n\n<p>Windows file times are represented as 100-nanosecond intervals, but I don't understand why that would affect this calculation.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1485619461, "creation_date": 1485619461, "answer_id": 41911853, "question_id": 41911228, "link": "https://stackoverflow.com/questions/41911228/how-to-use-recursive-associated-types-in-functions/41911853#41911853", "title": "How to use recursive associated types in functions?", "body": "<p>The answer lies at the very bottom of the <a href=\"https://doc.rust-lang.org/book/associated-types.html\" rel=\"nofollow noreferrer\">Associated Types</a> chapter of the Rust Book.</p>\n\n<p>When using a generic type in a bound, as in <code>V: Value</code>, it is possible to constrain one or several of its associated types to specific types by using the <code>Generic&lt;AssociatedType = SpecificType&gt;</code> syntax.</p>\n\n<p>In your case, it means constraining <code>V</code> to <code>Value&lt;Item = V&gt;</code>. This should also obsolete any reason to further constrain <code>V::Item</code> since the bounds to <code>V</code> are naturally available.</p>\n\n<hr>\n\n<p>I do encourage you to read the book to help you learn Rust, or at least skim it to know what's available there and be able to refer to it when you have a difficulty.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1485619875, "last_edit_date": 1495541803, "creation_date": 1485619875, "answer_id": 41911923, "question_id": 41911228, "link": "https://stackoverflow.com/questions/41911228/how-to-use-recursive-associated-types-in-functions/41911923#41911923", "title": "How to use recursive associated types in functions?", "body": "<p>Here's a further reduced example:</p>\n\n<pre><code>pub trait Value {\n    type Item;\n    fn items(&amp;self) -&gt; &amp;Self::Item;\n}\n\npub trait Delegate&lt;V&gt; {\n    fn something(&amp;mut self, v: &amp;V);\n}\n\npub fn diff&lt;V, D&gt;(l: &amp;V, d: &amp;mut D)\n    where V: Value,\n          V::Item: Value,\n          D: Delegate&lt;V&gt;\n{\n    let v = l.items();\n    d.something(v);\n}\n\nfn main() {}\n</code></pre>\n\n<p>The important thing to focus on are the restrictions on the generics of <code>diff</code>:</p>\n\n<pre><code>pub fn diff&lt;V, D&gt;(l: &amp;V, d: &amp;mut D)\n    where V: Value,\n          V::Item: Value,\n          D: Delegate&lt;V&gt;\n</code></pre>\n\n<p>In words, this says:</p>\n\n<ul>\n<li><code>V</code> can be <strong>any type</strong> so long as it implements the <code>Value</code> trait.</li>\n<li><code>V::Item</code> can be <strong>any type</strong> so long as it implements the <code>Value</code> trait.</li>\n<li><code>D</code> can be <strong>any type</strong> so long as it implements the <code>Delegate&lt;V&gt;</code> trait.</li>\n</ul>\n\n<p>Nowhere in that list of requirements was listed \"<code>V</code> and <code>V::Item</code> must be the same\". In fact, it's a <em>feature</em> that they are not required to be the same.</p>\n\n<p>In <em>this</em> reduction, another solution would be to say <code>D: Delegate&lt;V::Item&gt;</code>. However, that wouldn't apply to the slightly larger reproduction:</p>\n\n<pre><code>pub fn diff&lt;V, D&gt;(l: &amp;V, d: &amp;mut D)\n    where V: Value,\n          V::Item: Value,\n          D: Delegate&lt;V::Item&gt;\n{\n    d.something(l);\n    let v = l.items();\n    d.something(v);\n}\n</code></pre>\n\n<p>As <a href=\"https://stackoverflow.com/a/41911853/155423\">Matthieu M. has pointed out</a>, you want to specify the <em>associated type</em> of the trait:</p>\n\n<pre><code>pub fn diff&lt;V, D&gt;(l: &amp;V, d: &amp;mut D)\n    where V: Value&lt;Item = V&gt;,\n          D: Delegate&lt;V&gt;\n</code></pre>\n\n<p>For further reading, check out <a href=\"https://stackoverflow.com/q/29184358/155423\">Requiring implementation of Mul in generic function</a>.</p>\n"}], "owner": {"reputation": 3183, "user_id": 651368, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/2b8a70f5cb38a9e7565e128e6243ac20?s=128&d=identicon&r=PG", "display_name": "Byron", "link": "https://stackoverflow.com/users/651368/byron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 0, "accepted_answer_id": 41911853, "answer_count": 2, "score": 1, "last_activity_date": 1485619875, "creation_date": 1485615765, "last_edit_date": 1485618888, "question_id": 41911228, "link": "https://stackoverflow.com/questions/41911228/how-to-use-recursive-associated-types-in-functions", "title": "How to use recursive associated types in functions?", "body": "<p>I am trying to write a function that can descent into any kind of <code>Value</code> and inform a <code>Delegate</code> about the similarities it observes. The idea is to make this work across all kinds of Json/Yaml/YouNameIt values, generically.</p>\n\n<p>Here is an MVCE to trigger the issue (<a href=\"https://play.rust-lang.org/?gist=517905df53d9522519d1d72fc78955af&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground link</a>):</p>\n\n<pre><code>pub trait Value: PartialEq&lt;Self&gt; {\n    type Item;\n    type Key;\n    fn items&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;Box&lt;Iterator&lt;Item = (Self::Key, &amp;'a Self::Item)&gt; + 'a&gt;&gt;;\n}\n\npub trait Delegate&lt;'a, V&gt; {\n    fn something(&amp;mut self, _v: &amp;'a V) {}\n}\n\npub fn diff&lt;'a, V, D&gt;(l: &amp;'a V, d: &amp;'a mut D)\n    where V: Value,\n          &lt;V as Value&gt;::Item: Value,\n          D: Delegate&lt;'a, V&gt;\n{\n    d.something(l);\n    let v = l.items().unwrap().next().unwrap();\n    d.something(v.1);\n}\n\nstruct Recorder;\nimpl&lt;'a, V&gt; Delegate&lt;'a, V&gt; for Recorder {}\n\n#[derive(PartialEq)]\nstruct RecursiveValue;\n\nimpl Value for RecursiveValue {\n    type Key = usize;\n    type Item = RecursiveValue;\n    fn items&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;Box&lt;Iterator&lt;Item = (Self::Key, &amp;'a Self::Item)&gt; + 'a&gt;&gt; {\n        None\n    }\n}\n\nfn main() {\n    let v = RecursiveValue;\n    let mut r = Recorder;\n    diff(&amp;v, &amp;mut r);\n}    \n</code></pre>\n\n<p>When attempting to compile the code, the following error is produced:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; &lt;anon&gt;:19:17\n   |\n19 |     d.something(v.1);\n   |                 ^^^ expected type parameter, found associated type\n   |\n   = note: expected type `&amp;'a V`\n   = note:    found type `&amp;&lt;V as Value&gt;::Item`\n</code></pre>\n\n<p>I'm trying to say that the associated <code>Item</code> type is of type <code>V</code> too. Is there a way to make such an algorithm work generically?</p>\n"}, {"tags": ["thread-safety", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485607239, "post_id": 41909811, "comment_id": 71000992, "body": "I wonder if this is a remnant from when <code>Send</code> implied <code>static</code>, since sharing data across threads require <code>static</code> in the standard library at the moment."}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485607771, "post_id": 41909905, "comment_id": 71001143, "body": "Ahh! Right, thank you! @Matthieu M. even mentioned the hidden access via <code>drop()</code> in the other question. So I guess my statement &quot;<code>Arc&lt;T&gt;</code> only accesses <code>T</code> in the same way <code>&amp;T</code> does&quot; is wrong, because <code>Arc&lt;T&gt;</code> mutably access <code>T</code> for <code>drop()</code>. Awesome!"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485607884, "post_id": 41909905, "comment_id": 71001177, "body": "One thing thought: could you maybe use my <code>Foo</code> type from the other question to show that we <i>could</i> achieve unsafety? I think a specific example is easier to understand than &quot;a <code>T</code> that is not <code>Send</code>&quot;."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1485608087, "post_id": 41909905, "comment_id": 71001239, "body": "@LukasKalbertodt I don&#39;t think that specific example would be a problem <i>in practice.</i>  Off the top of my head, things like handles into thread-local storage, or OS values that must only be used from a specific thread come to mind.  Think something like <code>struct Handle(usize);</code> that indexes into a thread-local array of resources; dropping it on the wrong thread would result in either an out-of-bounds access, or deleting the wrong resource."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485608433, "post_id": 41909905, "comment_id": 71001344, "body": "Oh, true. My bad, you are right. And you just showed me another example for a type implementing <code>Sync</code> but not <code>Send</code>. Interesting... thanks!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485608966, "post_id": 41909905, "comment_id": 71001487, "body": "I would encourage you to put the <code>struct Handle(usize);</code> example in your answer; it exposes succinctly an easy to understand issue that would arise from not requiring the <code>Send</code> bound for <code>impl Send for Arc</code>. I think this may also indicate why it&#39;s required for <code>Sync</code>, given the presence of <code>clone_from</code> which can do the same with just a reference."}, {"owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "edited": false, "score": 1, "creation_date": 1485786048, "post_id": 41909905, "comment_id": 71056594, "body": "Also note that <code>Arc&lt;T&gt;</code> provides a method <code>try_unwrap()</code> which consumes the <code>Arc&lt;T&gt;</code> and moves the contained <code>T</code> out, if the strong ref count is one. That&#39;s another way to move <code>T</code> to another thread."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 8, "last_activity_date": 1485610353, "last_edit_date": 1485610353, "creation_date": 1485607279, "answer_id": 41909905, "question_id": 41909811, "link": "https://stackoverflow.com/questions/41909811/why-does-arct-require-t-to-be-both-send-and-sync-in-order-to-be-send/41909905#41909905", "title": "Why does `Arc&lt;T&gt;` require T to be both `Send` and `Sync` in order to be `Send`/`Sync` itself?", "body": "<p><em>I believe</em> this is because an <code>Arc</code> <em>owns</em> the value it contains, and is thus responsible for dropping it.</p>\n\n<p>Consider the following sequence:</p>\n\n<ul>\n<li>A value of type <code>T</code> is created in thread 1.  It is not <code>Send</code>, which means it is <em>not</em> safe to move this value to another thread.</li>\n<li>This value is moved into an <code>Arc</code> handle.</li>\n<li>A clone of the handle is sent to thread 2.</li>\n<li>The handle stored by thread 1 is dropped.</li>\n<li>The handle stored by thread 2 is dropped.  Since this is the last handle, it assumes full ownership of the stored value and drops it.</li>\n</ul>\n\n<p>And just like that, we've moved a value of type <code>T</code> from one thread to another, violating memory safety.</p>\n\n<p><code>&amp;T</code> doesn't require <code>Send</code> because dropping a <code>&amp;T</code> <em>never</em> allows you to drop the underlying value.</p>\n\n<p><strong>Addendum</strong>: As an example of a type where this would be a problem, consider a type like <code>struct Handle(usize);</code> which is backed by a thread-local array of resources.  If the <code>Drop</code> implementation for such a type is run on the wrong thread, this will lead to it <em>either</em> doing an out-of-bounds access (where it tries to destroy a resource that doesn't exist on this thread), or destroys a resource that's still in use.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "accepted_answer_id": 41909905, "answer_count": 1, "score": 8, "last_activity_date": 1485616815, "creation_date": 1485606645, "last_edit_date": 1495540387, "question_id": 41909811, "link": "https://stackoverflow.com/questions/41909811/why-does-arct-require-t-to-be-both-send-and-sync-in-order-to-be-send", "title": "Why does `Arc&lt;T&gt;` require T to be both `Send` and `Sync` in order to be `Send`/`Sync` itself?", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#implementations\" rel=\"nofollow noreferrer\"><code>Arc&lt;T&gt;</code> documentation</a> says:</p>\n\n<pre><code>impl&lt;T&gt; Sync for Arc&lt;T&gt; where T: Send + Sync + ?Sized\nimpl&lt;T&gt; Send for Arc&lt;T&gt; where T: Send + Sync + ?Sized\n</code></pre>\n\n<p>An <code>Arc</code> allows multiple threads to concurrently access the underlying <code>T</code> via an immutable reference <code>&amp;T</code>. This is safe as long as <code>T</code> can't be modified in an unsynchronized manner via <code>&amp;T</code>. This is true for all types with '<em>inherited mutability</em>' (nearly all types) and false for the ones with unsynchronized '<em>interior mutability</em>' (e.g. <code>RefCell</code>, ...).</p>\n\n<p>As far as I understand it, the <code>Send</code> bound is not required here. For example, I <em>think</em> sharing <a href=\"https://stackoverflow.com/questions/41846177/this-slightly-modified-rc-is-sync-but-not-send-right\">my artificial type which implements <code>Sync</code> but not <code>Send</code></a> in an <code>Arc</code> is safe.</p>\n\n<p>Lastly, <code>&amp;T</code> itself also doesn't have this bound! In the documentation for <a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\"><code>Send</code></a> and <a href=\"https://doc.rust-lang.org/std/marker/trait.Sync.html\" rel=\"nofollow noreferrer\"><code>Sync</code></a> we find:</p>\n\n<pre><code>impl&lt;'a, T&gt; Send for &amp;'a T where T: Sync + ?Sized\nimpl&lt;'a, T&gt; Sync for &amp;'a T where T: Sync + ?Sized\n</code></pre>\n\n<p>And as <code>Arc&lt;T&gt;</code> allows the same access to <code>T</code> as <code>&amp;T</code> does, I don't understand why <code>Arc&lt;T&gt;</code> has the additional <code>Send</code> bound. <strong>Why is that?</strong> </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 8, "last_activity_date": 1485606790, "creation_date": 1485606790, "answer_id": 41909829, "question_id": 41909785, "link": "https://stackoverflow.com/questions/41909785/why-does-rust-not-permit-type-inference-for-local-constants/41909829#41909829", "title": "Why does Rust not permit type inference for local constants?", "body": "<p>Insofar as I'm aware, there's no distinction between a <code>const</code> inside a function and one outside.  They're both the same thing, so they follow the same rules.</p>\n"}], "owner": {"reputation": 6933, "user_id": 2580955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/WZR9N.jpg?s=128&g=1", "display_name": "s3rvac", "link": "https://stackoverflow.com/users/2580955/s3rvac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 182, "favorite_count": 0, "accepted_answer_id": 41909829, "answer_count": 1, "score": 4, "last_activity_date": 1485606790, "creation_date": 1485606494, "question_id": 41909785, "link": "https://stackoverflow.com/questions/41909785/why-does-rust-not-permit-type-inference-for-local-constants", "title": "Why does Rust not permit type inference for local constants?", "body": "<p>I understand why type inference for module-level constants is not permitted (the same reason why type inference is not permitted for functions). However, why exactly does Rust not permit type inference for <em>local</em> constants?</p>\n\n<pre><code>fn main() {\n    const N = 1; // error: expected `:`, found `=`\n    let n = 1;   // OK\n}\n</code></pre>\n\n<p>Is there a more profound reason than consistency?</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485620387, "post_id": 41909467, "comment_id": 71005180, "body": "You are using a nightly compiler against a nightly version of code; it sounds like you should be filing a bug report against diesel."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485655357, "post_id": 41909467, "comment_id": 71015136, "body": "Alternatively, try a stable Rust version and/or stable Diesel version, to rule out other environmental factors."}, {"owner": {"reputation": 4257, "user_id": 3347227, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/160c472b1c6c43b47cc98cc01d3ce317?s=128&d=identicon&r=PG", "display_name": "Erik Vesteraas", "link": "https://stackoverflow.com/users/3347227/erik-vesteraas"}, "edited": false, "score": 0, "creation_date": 1485655929, "post_id": 41909467, "comment_id": 71015242, "body": "Is the example code you copied the latest version? I can only get the error you are getting by using an old version of the example code."}, {"owner": {"reputation": 99, "user_id": 2686218, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6bcd8aad010afa31d5f84900c51aac85?s=128&d=identicon&r=PG&f=1", "display_name": "stamm", "link": "https://stackoverflow.com/users/2686218/stamm"}, "edited": false, "score": 0, "creation_date": 1485674072, "post_id": 41909467, "comment_id": 71018011, "body": "I was using the v0.9.1 release example. This one already include the syntex removal, breaking compatibility with current stable. That will apparently be replaced by 1.15 on 2017-02-02, this new stable will exempt us to use the feature(port_macro)."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1485656957, "post_id": 41916872, "comment_id": 71015410, "body": "Even better, for the next week, try out the <b>beta</b> version of Rust 1.15; that way you can help test what will be the next stable release!"}, {"owner": {"reputation": 99, "user_id": 2686218, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6bcd8aad010afa31d5f84900c51aac85?s=128&d=identicon&r=PG&f=1", "display_name": "stamm", "link": "https://stackoverflow.com/users/2686218/stamm"}, "edited": false, "score": 0, "creation_date": 1485674496, "post_id": 41916872, "comment_id": 71018078, "body": "Ok it now works with the beta version : <code>rustup install beta &amp;&amp; cargo update &amp;&amp; cargo clean &amp;&amp; cargo build</code>. I also had to remove the <code>#[feature(port_macro)]</code> line from <code>src&#47;lib.rs</code>."}], "tags": [], "owner": {"reputation": 4257, "user_id": 3347227, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/160c472b1c6c43b47cc98cc01d3ce317?s=128&d=identicon&r=PG", "display_name": "Erik Vesteraas", "link": "https://stackoverflow.com/users/3347227/erik-vesteraas"}, "is_accepted": true, "score": 1, "last_activity_date": 1485656952, "last_edit_date": 1485656952, "creation_date": 1485654862, "answer_id": 41916872, "question_id": 41909467, "link": "https://stackoverflow.com/questions/41909467/unable-to-get-started-with-diesel-rs-and-rust-1-16-nightly/41916872#41916872", "title": "Unable to get started with diesel.rs and Rust 1.16 nightly", "body": "<p>The compile error you are getting sounds like it is caused by <a href=\"https://github.com/rust-lang/rust/issues/39347\" rel=\"nofollow noreferrer\">an issue with the current nightly</a>. You can probably fix it by removing <code>#![feature(proc_macro)]</code> from your code (it should no longer be needed for the feature Diesel uses). For the example you linked, this was done in <a href=\"https://github.com/diesel-rs/diesel/commit/41df4a6c9fe8b6bbee6aeb84d5542ecb3eeb3db1\" rel=\"nofollow noreferrer\">a commit made 17 days ago</a>.</p>\n\n<p>When working with examples for the nightly compiler there is a high risk of breakage. For popular crates, examples are updated pretty fast, so you should make sure both your compiler and the examples you are trying to run is up to date. Fortunately with the release of 1.15 (in less than a week, on 2017-02-02) Diesel will work with the stable compiler, where the risk of breakage is much less.</p>\n\n<p>If the above does not work you can use an older nightly (c07a6ae77 2017-01-17 for example should work), just wait for the issue to be fixed, or wait until 1.15 is released and use stable.</p>\n"}], "owner": {"reputation": 99, "user_id": 2686218, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6bcd8aad010afa31d5f84900c51aac85?s=128&d=identicon&r=PG&f=1", "display_name": "stamm", "link": "https://stackoverflow.com/users/2686218/stamm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 486, "favorite_count": 0, "accepted_answer_id": 41916872, "answer_count": 1, "score": 0, "last_activity_date": 1485656952, "creation_date": 1485604150, "last_edit_date": 1485656781, "question_id": 41909467, "link": "https://stackoverflow.com/questions/41909467/unable-to-get-started-with-diesel-rs-and-rust-1-16-nightly", "title": "Unable to get started with diesel.rs and Rust 1.16 nightly", "body": "<p>I'm trying to follow the <a href=\"http://diesel.rs/guides/getting-started/\" rel=\"nofollow noreferrer\">Diesel getting started guide</a> by directly copying <code>examples/getting_started_step_3/</code> from the <a href=\"https://github.com/diesel-rs/diesel.git\" rel=\"nofollow noreferrer\">Diesel GitHub repo</a>, but I'm facing some compile errors I can not fix: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo build \n   Compiling diesel_demo_step_3 v0.1.0 (file:///home/stamm/code/rustsome/pkiexpress)\nerror: macro undefined: 'options!'\n --&gt; src/schema.rs:1:1\n  |\n1 | infer_schema!(\"dotenv:DATABASE_URL\");\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: this error originates in a macro outside of the current crate\n\nerror: macro undefined: 'table_name!'\n  --&gt; src/models.rs:12:1\n   |\n12 | #[table_name=\"posts\"]\n   | ^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Here is my <code>.env</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>DATABASE_URL=postgres://postgres:password@localhost/pkiexpress\n</code></pre>\n\n<p>I am using Rust 1.16.0-nightly (df8debf6d 2017-01-25) and Diesel 0.9.0.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485627461, "post_id": 41908956, "comment_id": 71007654, "body": "Your followup question doesn&#39;t make any difference, you can still call the same functions that Lukas or DK. provided: <code>give_1_damage(0, &amp;mut game.player1);</code> or  <code>give_1_damage(0, &amp;mut game.players[player_idx]);</code> if it&#39;s actually an array."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485627549, "post_id": 41908956, "comment_id": 71007686, "body": "Unrelated, you should read <a href=\"http://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String) or Vec (&amp;Vec) as a function argument?</a>."}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 2, "last_activity_date": 1485601540, "creation_date": 1485601540, "answer_id": 41909033, "question_id": 41908956, "link": "https://stackoverflow.com/questions/41908956/pass-mutable-reference-to-an-element-of-a-vector-as-parameter-of-function-alongs/41909033#41909033", "title": "Pass mutable reference to an element of a vector as parameter of function alongside with that vector", "body": "<p>The simplest way would be to pass an index rather than a reference:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Monster {\n    life: i32,\n}\n\n// give 1 damage to all except me\n// increase my life of 1\nfn give_1_damage(monsters: &amp;mut [Monster], me: usize) {\n    for (i, m) in monsters.iter_mut().enumerate() {\n        if i == me {\n            m.life += 1;\n        } else {\n            m.life -= 1;\n        }\n    }\n}\n\nfn main() {\n    let mut a = vec![Monster{life: 3}, Monster{life: 3}];\n    println!(\"a: {:?}\", a);\n    let b = 0;\n    give_1_damage(&amp;mut a, b);\n    println!(\"a: {:?}\", a);\n}\n</code></pre>\n\n<p>Also, since you're not adding anything to the list of monsters, you should take a <code>&amp;mut [Monster]</code> rather than <code>&amp;mut Vec&lt;Monster&gt;</code>; it's more general that way.</p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 2, "last_activity_date": 1485627009, "last_edit_date": 1485627009, "creation_date": 1485601948, "answer_id": 41909096, "question_id": 41908956, "link": "https://stackoverflow.com/questions/41908956/pass-mutable-reference-to-an-element-of-a-vector-as-parameter-of-function-alongs/41909096#41909096", "title": "Pass mutable reference to an element of a vector as parameter of function alongside with that vector", "body": "<p>Welcome to Rust! As you already noticed, the Rust type system (more specifically: the borrow checker) won't let you do that. In Rust, you have to think about certain problems in a different way than you might be used to. And this is actually a good idea. </p>\n\n<p>For example, let's take a look at your code: in order to increase the \"life\" by 1, you increase it by 2 outside the loop, because the loop will decrease it by 1. This is not a good way to write code like that, because now different parts of your code are semantically connected, although they shouldn't be.</p>\n\n<p>So how can you do it in Rust? </p>\n\n<p>There are multiple ways to do that, but what about this (explanation in the comments):</p>\n\n<pre><code>#[derive(Debug)]\nstruct Monster {\n    life: i32,\n}\n\n// Instead of passing a mutable reference, we just pass the index of the \n// attacking monster in the vector.\n// Note that I also pass `&amp;mut [...]` instead of `&amp;mut Vec&lt;...&gt;`. This is\n// sufficient as long as you only want to mutate single elements.\nfn give_1_damage(me_idx: usize, all: &amp;mut [Monster]) {\n    // Here we split the vector in three parts: the part from the\n    // beginning to the attacking monster, the attacking monster itself,\n    // and the rest of the slice.\n    let (front, me, back) = {\n        // This is done by using those two special methods of slices.\n        let (first, second) = all.split_at_mut(me_idx);\n        let (me, rest) = second.split_first_mut().unwrap();\n        (first, me, rest)\n    };\n\n    // Here we chain together the two parts and iterate over all monsters\n    // except for the attacking one!\n    for m in front.into_iter().chain(back) {\n        m.life -= 1;\n    }\n    me.life += 1;\n}\n\nfn main() {\n    let mut a = vec![Monster { life: 3 }, Monster { life: 3 }];\n    give_1_damage(0, &amp;mut a);\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>You can try it <a href=\"https://play.rust-lang.org/?gist=572b8b98728a0d774ce974eca607e2a5&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 23, "user_id": 7482440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cb96cf6830a3fd288898c67c45e3aa0?s=128&d=identicon&r=PG&f=1", "display_name": "Guillaume", "link": "https://stackoverflow.com/users/7482440/guillaume"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1247, "favorite_count": 0, "accepted_answer_id": 41909096, "answer_count": 2, "score": 2, "last_activity_date": 1485627009, "creation_date": 1485601099, "last_edit_date": 1495539932, "question_id": 41908956, "link": "https://stackoverflow.com/questions/41908956/pass-mutable-reference-to-an-element-of-a-vector-as-parameter-of-function-alongs", "title": "Pass mutable reference to an element of a vector as parameter of function alongside with that vector", "body": "<p>I'm coding a little game; I have a vector of monsters and a monster can deal damage to all other monsters. I need a function that takes the vector of all monsters and a reference to the monster that is attacking.</p>\n\n<p>I understand why this is not possible with the type system of Rust: I need a mutable reference to the vector and a mutable reference to the monster, but this is not possible because the monster belongs to the vector. I can not find a workaround.</p>\n\n<pre><code>struct Monster {\n    life: i32,\n}\n\n// give 1 damage to all except me\n// increase my life by 1\nfn give_1_damage(me: &amp;mut Monster, all: &amp;mut Vec&lt;Monster&gt;) {\n\n    for m in all {\n        m.life -= 1;\n    }\n    me.life += 2;\n}\n\nfn main() {\n    let mut a = vec![Monster { life: 3 }, Monster { life: 3 }];\n    let ref mut b = &amp;mut a[0];\n    give_1_damage(b, &amp;mut a);\n}\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/a/41909096/155423\">Lukas Kalbertodt proposes</a> to pass the offset of the monster in the vector. This works great, thanks! But in fact my code is more complicated:</p>\n\n<pre><code>struct Monster {\n    life: i32,\n}\n\nstruct Game {\n    player1: Vec&lt;Monster&gt;,\n    player2: Vec&lt;Monster&gt;,\n}\n\nfn give_1_damage(player_idx: usize, monster_idx: usize, game: &amp;mut Game) {\n    // ...\n}\n</code></pre>\n\n<p>I know that it's possible to pass the index of the player, and the index of the monster, but I found this is ugly. Do I really need to pass the <code>player_idx</code> and the <code>monster_idx</code> whereas I previously know which monster is attacking and I can have a reference to it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485559995, "post_id": 41904689, "comment_id": 70991831, "body": "There are <a href=\"http://stackoverflow.com/search?q=is%3Aq+Cannot+infer+an+appropriate+lifetime+due+to+conflicting+requirements\"><b>87 questions</b> with the same error message</a>. Perhaps you could take the time to review some of them and explain why <i>this</i> question is special and different and hasn&#39;t already been answered?"}, {"owner": {"reputation": 171, "user_id": 6522377, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-oPYYo3Tbj5k/AAAAAAAAAAI/AAAAAAAAAVk/20jmjLMx7SI/photo.jpg?sz=128", "display_name": "Nils &#39;Linkpy&#39; Reid", "link": "https://stackoverflow.com/users/6522377/nils-linkpy-reid"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485560144, "post_id": 41904689, "comment_id": 70991863, "body": "I already seen many of them, but the problem here is mostly I don&#39;t quiet understand <i>why</i> I have this error, and seeing the other post doesn&#39;t help me on this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485560404, "post_id": 41904689, "comment_id": 70991918, "body": "I&#39;ve also seen many of them, and the problem is explained in one. \u2014 See how useful it is when you don&#39;t point out what is <i>wrong</i> with <i>any</i> of the existing questions? If you don&#39;t tell us what is wrong, we will just repeat the same answer you already don&#39;t understand, you won&#39;t be helped, and, even worse, there will be one more answer that the next person won&#39;t read and instead ignore and ask to have their code fixed."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1485560628, "post_id": 41904689, "comment_id": 70991976, "body": "I compiled your code and placed the <b>entire error message</b> into the question. Did you read what the compiler said? Did you try it?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485566632, "post_id": 41904689, "comment_id": 70993181, "body": "Additionally, I highly recommend that you learn to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Doing so will help you as you learn and grow as a programmer. It also greatly helps as you can focus on just the problem at hand and not be distracted by any extra junk. This is <a href=\"http://play.integer32.com/?gist=832bb6a62bd74a07331e3731d968a410&amp;version=stable\" rel=\"nofollow noreferrer\">one example of how to reduce your code while maintaining the same error message</a>. This will probably be a duplicate of <a href=\"http://stackoverflow.com/q/32300132/155423\">stackoverflow.com/q/32300132/155423</a>."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485598548, "post_id": 41904689, "comment_id": 70998828, "body": "@Shepmaster: interesting, the <code>help: consider..</code> message only appears when running on stable, on nightly this is not shown"}, {"owner": {"reputation": 171, "user_id": 6522377, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-oPYYo3Tbj5k/AAAAAAAAAAI/AAAAAAAAAVk/20jmjLMx7SI/photo.jpg?sz=128", "display_name": "Nils &#39;Linkpy&#39; Reid", "link": "https://stackoverflow.com/users/6522377/nils-linkpy-reid"}, "edited": false, "score": 0, "creation_date": 1485598978, "post_id": 41904689, "comment_id": 70998924, "body": "I started to understand why I&#39;m getting this error, now I just need to know how to extract a value from an iterator and it will be good for me. I done a minimal, complete and verifiable example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1485617714, "post_id": 41904689, "comment_id": 71004230, "body": "@hansaplast that&#39;s disappointing. Looks like <a href=\"https://github.com/rust-lang/rust/commit/a2735c02493d816835a19249dd258e0c678530d0\" rel=\"nofollow noreferrer\">the messages were not frequently useful</a>."}], "answers": [{"tags": [], "owner": {"reputation": 14451, "user_id": 33499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17c590aa4c56918b47c7ba5e39dba5d8?s=128&d=identicon&r=PG", "display_name": "wimh", "link": "https://stackoverflow.com/users/33499/wimh"}, "is_accepted": false, "score": 0, "last_activity_date": 1485605558, "creation_date": 1485605558, "answer_id": 41909653, "question_id": 41904689, "link": "https://stackoverflow.com/questions/41904689/array-doesnt-live-long-enough/41909653#41909653", "title": "`array` doesn&#39;t live long enough", "body": "<p>In the MCVE you have posted, the struct <code>Object</code> contains a reference to <code>Holded</code>:</p>\n\n<pre><code>struct Object&lt;'a&gt; {\n    holded: &amp;'a Holded,\n}\n</code></pre>\n\n<p>In the function <code>work()</code> you return an <code>Object</code> (optionally):</p>\n\n<pre><code>fn work(holder: &amp;Holder) -&gt; Option&lt;Object&gt; {\n</code></pre>\n\n<p>You acquire <code>Holded</code> from a function which returns it by value:</p>\n\n<pre><code>impl Holder {\n    pub fn get( &amp;self ) -&gt; [Holded; 2] {\n        [Holded { value: 0 }, Holded { value: 1 }]\n    }\n}\n</code></pre>\n\n<p>Now this will never work. If you return a reference to <code>Holded</code>, the <code>Holded</code> you reference to, must be stored somewhere. This means either as an input, or as an output of the function <code>work()</code>.</p>\n\n<p>I rewrote your example to include <code>Holded</code> inside <code>Holder</code>. That is one way to solve this. But I am not sure this would apply to your original problem.</p>\n\n<pre><code>struct Holded {\n    value: u8,\n}\n\nstruct Holder{\n    value: [Holded; 2],\n}\n\nimpl Holder {\n    pub fn new() -&gt; Holder {\n        Holder {value: [Holded { value: 0 }, Holded { value: 1 }] } \n    }\n\n    pub fn get( &amp;self ) -&gt; &amp;[Holded; 2] {\n        &amp;self.value\n    }\n}\n\nstruct Object&lt;'a&gt; {\n    holded: &amp;'a Holded,\n}\n\nfn main() {\n    let holder = Holder::new();\n\n    let obj = work(&amp;holder).unwrap();\n    println!(\"{}\", obj.holded.value);\n\n    let obj = work2(&amp;holder).unwrap();\n    println!(\"{}\", obj.holded.value);\n}\n\nfn work(holder: &amp;Holder) -&gt; Option&lt;Object&gt; {\n    let obj: Object;\n    let array = holder.get();\n\n    for h in array.into_iter() {\n        if h.value == 1u8 {\n            obj = Object { holded: h };\n            return Some(obj);\n        }\n    }\n\n    None\n}\n\nfn work2(holder: &amp;Holder) -&gt; Option&lt;Object&gt; {\n    holder.get()\n        .iter()\n        .filter(|h| h.value == 1u8)\n        .map(|h| Object { holded: h })\n        .next()\n}\n</code></pre>\n\n<p>You notice I also added a different way to implement the <code>work()</code> function (<code>work2()</code>).</p>\n"}], "owner": {"reputation": 171, "user_id": 6522377, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-oPYYo3Tbj5k/AAAAAAAAAAI/AAAAAAAAAVk/20jmjLMx7SI/photo.jpg?sz=128", "display_name": "Nils &#39;Linkpy&#39; Reid", "link": "https://stackoverflow.com/users/6522377/nils-linkpy-reid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 136, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1485617533, "creation_date": 1485559810, "last_edit_date": 1485617533, "question_id": 41904689, "link": "https://stackoverflow.com/questions/41904689/array-doesnt-live-long-enough", "title": "`array` doesn&#39;t live long enough", "body": "<p>I want to keep an <code>Holded</code> instance, but I can't since it's in an array. How can I do to 'extract' this instance from the array and keep it in an <code>Object</code> instance ? (In my original code, I don't have array but iterators). Here is the equivalent code :</p>\n\n<pre><code>struct Holded {\n    value: u8,\n}\n\nstruct Holder;\n\nimpl Holder {\n    pub fn get(&amp;self) -&gt; [Holded; 2] {\n        [Holded { value: 0 }, Holded { value: 1 }]\n    }\n}\n\nstruct Object&lt;'a&gt; {\n    holded: &amp;'a Holded,\n}\n\nfn main() {\n    let holder = Holder;\n\n    let obj = work(&amp;holder).unwrap();\n    println!(\"{}\", obj.holded.value);\n}\n\nfn work(holder: &amp;Holder) -&gt; Option&lt;Object&gt; {\n    let mut obj: Object;\n    let array = holder.get();\n\n    for h in array.into_iter() {\n        if h.value == 1u8 {\n            obj = Object { holded: h };\n            return Some(obj);\n        }\n    }\n\n    None\n}\n</code></pre>\n\n<p>The error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `array` does not live long enough\n  --&gt; src/main.rs:28:14\n   |\n28 |     for h in array.into_iter() {\n   |              ^^^^^ does not live long enough\n...\n36 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the block at 24:43...\n  --&gt; src/main.rs:24:44\n   |\n24 | fn work(holder: &amp;Holder) -&gt; Option&lt;Object&gt; {\n   |                                            ^\n</code></pre>\n"}, {"tags": ["rust", "linker", "cross-compiling", "glibc", "rust-cargo"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1485544768, "post_id": 41901024, "comment_id": 70985131, "body": "Have you tried changing the <code>rustflags</code> in <code>.cargo&#47;config</code>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485552551, "post_id": 41901024, "comment_id": 70988967, "body": "You might want to cross-post the question on /r/rust (Reddit), there are several users there who do cross-compilation in which picking up another libc is mandatory so they probably have a good grasp on how best to do it."}], "answers": [{"tags": [], "owner": {"reputation": 1113, "user_id": 969295, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/dea809ef5ac9770fb400f1eb65544443?s=128&d=identicon&r=PG", "display_name": "Sassa", "link": "https://stackoverflow.com/users/969295/sassa"}, "is_accepted": true, "score": 3, "last_activity_date": 1485549208, "creation_date": 1485549208, "answer_id": 41902556, "question_id": 41901024, "link": "https://stackoverflow.com/questions/41901024/how-can-i-make-my-rust-program-link-to-another-glibc/41902556#41902556", "title": "How can I make my Rust program link to another glibc?", "body": "<p>As kennytm pointed out, I can use <code>.cargo/config</code> to tell where is the new <code>glibc</code> by using the <code>sysroot</code> parameter:</p>\n\n<pre><code>[target.i686-unknown-linux-gnu]\nrustflags = [\"-C\", \"link-args=--sysroot=/home/ebarreto/x-tools/i686-unknown-linux-gnu/i686-unknown-linux-gnu/sysroot\"]\n</code></pre>\n\n<p>The <code>--sysroot</code> parameter will contain the path to my sysroot where lies the custom <code>glibc</code>.</p>\n\n<p>I still think this is not the most practical way to do that, but I don't know a better way..</p>\n"}], "owner": {"reputation": 1113, "user_id": 969295, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/dea809ef5ac9770fb400f1eb65544443?s=128&d=identicon&r=PG", "display_name": "Sassa", "link": "https://stackoverflow.com/users/969295/sassa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 926, "favorite_count": 0, "accepted_answer_id": 41902556, "answer_count": 1, "score": 3, "last_activity_date": 1601214675, "creation_date": 1485543002, "last_edit_date": 1601214675, "question_id": 41901024, "link": "https://stackoverflow.com/questions/41901024/how-can-i-make-my-rust-program-link-to-another-glibc", "title": "How can I make my Rust program link to another glibc?", "body": "<p>I have a <code>crosstool-ng</code> toolchain for <code>i686-linux-unknown-gnu</code>, this toolchain contains a different glibc than the one installed in my host.</p>\n\n<p>The path to my <code>libc.so.6</code> is:</p>\n\n<pre><code>~/x-tools/i686-unknown-linux-gnu/i686-unknown-linux-gnu/sysroot/lib\n</code></pre>\n\n<p>How can I tell Cargo to link to the glibc located in this directory instead of the system one?</p>\n\n<p>I have already tried <code>LD_LIBRARY_PATH</code>, but it doesn't work.</p>\n\n<p>What works is to set in my <code>.cargo/config</code> file this:</p>\n\n<pre><code>[target.i686-unknown-linux-gnu]\nlinker = \"i686-unknown-linux-gnu-gcc\"\n</code></pre>\n\n<p>But that links my program with the GCC toolchain instead of Clang. I want to use Clang and just link against a different glibc.</p>\n"}, {"tags": ["serialization", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1485535980, "post_id": 41898962, "comment_id": 70980439, "body": "You might be interesting in looking up &quot;serde&quot;, this is the best-of-breed serialization/deserialization crate currently available in Rust. Custom derives (ie, the use of <code>derive</code> for user-defined traits) will only be available come Rust 1.15, so it is only available on the nightly and beta channels but not the stable one for a couple days/weeks still."}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485536141, "post_id": 41898962, "comment_id": 70980554, "body": "Thanks, @MatthieuM, you are always on top of everything Rust related. I&#39;ll check serde out, although the fact that their builds are not passing seems like a bad start."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1485536263, "post_id": 41898962, "comment_id": 70980618, "body": "To be more precise, Rust 1.15 should be coming out on Thursday 2nd Feb, 2017. So, you have just under a week to wait till Serde comes to stable Rust :)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1485536379, "post_id": 41898962, "comment_id": 70980694, "body": "@Dash83: Shepmaster is even more on top than I am ;)"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1485536441, "post_id": 41898962, "comment_id": 70980744, "body": "@JoeClay, you make a compelling case. Will the serialization support for Rust 1.15 be literally the serde crate? If so, I can get started with the code right now using it as an external crate, and adjust when Rust 1.15 comes out."}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1485536518, "post_id": 41898962, "comment_id": 70980789, "body": "@MatthieuM: I know, he even dragged me to the Rust chat channel once. Anyways, all of us Rust newbies really appreciate the work both of you do, thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485537090, "post_id": 41898962, "comment_id": 70981099, "body": "@Dash83 serialization will continue to be external to the standard library (IMO a good thing). The difference is that 1.15 will allow using Serde with most of it&#39;s wonderful syntactic sugar with the stable compiler. For the next week or so, you should use the beta compiler to test out serde."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485537382, "post_id": 41898962, "comment_id": 70981270, "body": "Your concrete problem here is just a typo: <code>RustcEncodable</code> (with a <b>C</b>), not <code>RustEncodable</code>."}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485707226, "post_id": 41898962, "comment_id": 71026735, "body": "Thank you, @Shepmaster, you were correct. I want to raise something for future reference though, and that is that using #derive[RustcEncodable] did not work straight away. Seems like it won&#39;t work if the extern crate import is being from within a module. I had to move the import to the lib.rs file and then it worked out great. Not sure why."}], "owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 40, "favorite_count": 0, "closed_date": 1485537311, "answer_count": 0, "score": 2, "last_activity_date": 1485537240, "creation_date": 1485535617, "last_edit_date": 1495541348, "question_id": 41898962, "link": "https://stackoverflow.com/questions/41898962/struct-serialization-using-rustc-serialize-in-rust-stable", "closed_reason": "Duplicate", "title": "Struct serialization using rustc-serialize in Rust stable", "body": "<p>I'm trying to serialize a struct into bytes in order to send it down a pipe. I found <a href=\"https://stackoverflow.com/questions/28127165/how-to-convert-struct-to-u8\">How to convert &#39;struct&#39; to &#39;&amp;[u8]&#39;?</a>, which looks good. I'm using stable Rust, and trying to derive <code>RustcEncodable</code> or <code>RustcDecodable</code> results in a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `#[derive]` for custom traits is not stable enough for use and is subject to change (see issue #29644)\n  --&gt; src/main.rs:26:10\n   |\n26 | #[derive(RustEncodable)]\n   |          ^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>My initial instinct would be to implement the trait for my struct instead of deriving it, but <a href=\"https://doc.rust-lang.org/rustc-serialize/rustc_serialize/trait.Encodable.html\" rel=\"nofollow noreferrer\">the documentation for rustc-serialize is not very clear</a></p>\n\n<p>I'm using Rust 1.12.1.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1485538543, "post_id": 41898890, "comment_id": 70981921, "body": "It should be &quot;an empty array is treated differently&quot;, rather than ZSTs treated differently. Also an empty array is not a ZST, it is a value, not a type ;)."}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485595858, "post_id": 41907248, "comment_id": 70998199, "body": "&quot;<i>it&#39;s the same size as any other pointer</i>&quot; -&gt; this is not quite correct. It&#39;s a fat pointer with pointer and length. Anyway, I think OP was referring to the referenced value being a ZST and not the reference itself."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485597480, "post_id": 41907248, "comment_id": 70998580, "body": "@LukasKalbertodt No, <code>&amp;[]</code> is a pointer to a <code>[_; 0]</code>, which is a regular pointer.  A <code>&amp;[_]</code> would be a fat pointer, but I was specifically not talking about that."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485598450, "post_id": 41907248, "comment_id": 70998807, "body": "Sorry, misunderstood that. But the <code>&amp;[_; 0]</code> is coerced to a <code>&amp;[_]</code> before exiting the function. But thanks for the clarification!"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485598737, "post_id": 41907248, "comment_id": 70998860, "body": "@LukasKalbertodt No problem; the &quot;<code>&amp;[]</code> isn&#39;t a ZST&quot; thing <i>was</i> a distraction.  Either way, I think the key point isn&#39;t the coercion, but that <code>[]</code> is static data that lives forever."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485599230, "post_id": 41907248, "comment_id": 70998985, "body": "But the compiler chooses what data is <i>static</i> and what is stored on the <i>stack</i>. So the next question would be: why isn&#39;t <code>()</code> static data? It could also be stored in <code>.data</code> and result in a <code>&#39;static</code> reference (this is actually what happens!). I&#39;m not trying to shit in your answer, sorry :/ <b>I</b> just think that it doesn&#39;t answer all questions."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1485599428, "post_id": 41907248, "comment_id": 70999035, "body": "@LukasKalbertodt Good point; I believe it&#39;s the same issue with <code>&amp;[0]</code>: it <i>can</i> be constant data, the compiler just doesn&#39;t quite get that far."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1485599387, "last_edit_date": 1485599387, "creation_date": 1485587099, "answer_id": 41907248, "question_id": 41898890, "link": "https://stackoverflow.com/questions/41898890/lifetime-differences-between-references-to-zero-sized-types/41907248#41907248", "title": "Lifetime differences between references to zero sized types", "body": "<p>It's not that <code>[]</code> is zero-sized (though it is), it's that <code>[]</code> is a constant, compile-time literal.  This means the compiler can store it in the executable, rather than having to allocate it dynamically on the heap or stack.  This, in turn, means that pointers to it last as long as they want, because data in the executable isn't going anywhere.</p>\n\n<p>Annoyingly, this doesn't extend to something like <code>&amp;[0]</code>, because Rust isn't <em>quite</em> smart enough to realise that <code>[0]</code> is <em>definitely</em> constant.  You can work around this by using something like:</p>\n\n<pre><code>fn mold_slice&lt;'a, T&gt;(_: &amp;'a T) -&gt; &amp;'a [i32] {\n    const C: &amp;'static [i32] = &amp;[0];\n    C\n}\n</code></pre>\n\n<p>This trick also works with <em>anything</em> you can put in a <code>const</code>, like <code>()</code> or <code>Empty</code>.</p>\n\n<p>Realistically, however, it'd be simpler to just have functions like this return a <code>&amp;'static</code> borrow, since that can be coerced to any <em>other</em> lifetime automatically.</p>\n\n<p><strong>Edit</strong>: the previous version noted that <code>&amp;[]</code> is not zero sized, which was a little tangential.</p>\n"}, {"comments": [{"owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "edited": false, "score": 0, "creation_date": 1485638739, "post_id": 41908233, "comment_id": 71011274, "body": "Thanks for the link to the RFC."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 2, "last_activity_date": 1485595769, "creation_date": 1485595769, "answer_id": 41908233, "question_id": 41898890, "link": "https://stackoverflow.com/questions/41898890/lifetime-differences-between-references-to-zero-sized-types/41908233#41908233", "title": "Lifetime differences between references to zero sized types", "body": "<blockquote>\n  <p>Do the differences (<code>&amp;[]</code> fitting any lifetime and <code>&amp;()</code>, <code>&amp;Empty</code> not) nothing to do with ZSTs at all?</p>\n</blockquote>\n\n<p>I think this is exactly the case. The compiler <strong>probably just treats arrays differently</strong> and there is <strong>no deeper reasoning</strong> behind it. </p>\n\n<p>The only difference that could play a role is that <code>&amp;[]</code> is a fat pointer, consisting of the data pointer and a length. This fat pointer itself expresses the fact that there is actually no data behind it (because length=0). <code>&amp;()</code> on the other hand is just a normal pointer. Here, <em>only</em> the type system expresses the fact that it's not pointing to anything real. But I'm just guessing here.</p>\n\n<hr>\n\n<p>To clarify: a referencing fitting any lifetime means that the reference has the <code>'static</code> lifetime. So instead of introducing some lifetime <code>'a</code>, we can just return a static reference and will have the same effect (<code>&amp;[]</code> works, the others don't).</p>\n\n<p>There is <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1414-rvalue_static_promotion.md\" rel=\"nofollow noreferrer\">an RFC</a> which specifies that references to constexpr rvalues will be stored in the static data section of the executable, instead of the stack. After this RFC has been implemented (<a href=\"https://github.com/rust-lang/rust/issues/38865\" rel=\"nofollow noreferrer\">tracking issue</a>), all of your example will compile, as <code>[]</code>, <code>()</code> and <code>Empty</code> are constexpr rvalues. References to it will always be <code>'static</code>. But the important part of the RFC is that it works for non-ZSTs, too: e.g. <code>&amp;27</code> has the type <code>&amp;'static i32</code>.</p>\n\n<hr>\n\n<p>To have some fun, let's look at the generated assembly (I used the amazing <a href=\"https://godbolt.org/g/9ZKzX4\" rel=\"nofollow noreferrer\">Compiler Explorer</a>)! First let's try the working version:</p>\n\n<pre><code>pub fn mold_slice() -&gt; &amp;'static [i32] {\n    &amp;[]\n}\n</code></pre>\n\n<p>Using the <code>-O</code> flag (meaning: optimizations enabled; I checked the unoptimized version, too, and it doesn't have significant differences), this is compiled down to:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mold_slice:\n        push    rbp\n        mov     rbp, rsp\n        lea     rax, [rip + ref.0]\n        xor     edx, edx\n        pop     rbp\n        ret\n\nref.0:\n</code></pre>\n\n<p>The fat pointer is returned in the <code>rax</code> (data pointer) and <code>rdx</code> (length) registers. As you can see, the length is set to 0 (<code>xor edx, edx</code>) and the data pointer is set to this mysterious <code>ref.0</code>. The <code>ref.0</code> is not actually referencing anything at all. It's just an empty marker. This means we return just <em>some</em> pointer to the data section.</p>\n\n<p>Now let's just tell the compiler to trust us on <code>&amp;()</code> in order to compile it:</p>\n\n<pre><code>pub fn possibly_broken() -&gt; &amp;'static () {\n    unsafe { std::mem::transmute(&amp;()) } \n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>possibly_broken:\n        push    rbp\n        mov     rbp, rsp\n        lea     rax, [rip + ref.1]\n        pop     rbp\n        ret\n\nref.1:\n</code></pre>\n\n<p>Wow, we pretty much see the same result! The pointer (returned via <code>rax</code>) points somewhere to the data section. So it actually is a <code>'static</code> reference after code generation. Only the lifetime checker doesn't quite know that and still refuses to compile the code. Well... I guess this is nothing dramatic, especially since the RFC mentioned above will fix that in near future.</p>\n"}], "owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 217, "favorite_count": 0, "accepted_answer_id": 41907248, "answer_count": 2, "score": 9, "last_activity_date": 1485599387, "creation_date": 1485535410, "last_edit_date": 1485537846, "question_id": 41898890, "link": "https://stackoverflow.com/questions/41898890/lifetime-differences-between-references-to-zero-sized-types", "title": "Lifetime differences between references to zero sized types", "body": "<p>I came across an interesting case while playing with zero sized types (ZSTs). A reference to an empty array will mold to a reference with any lifetime:</p>\n\n<pre><code>fn mold_slice&lt;'a, T&gt;(_: &amp;'a T) -&gt; &amp;'a [T] {\n    &amp;[]\n}\n</code></pre>\n\n<p>I thought about how that is possible, since basically the \"value\" here lives on the stack frame of the function, yet the signature promises to return a reference to a value with a longer lifetime (<code>'a</code> contains the function call). I came to the conclusion that it is because the empty array <code>[]</code> is a ZST which basically only exists statically. The compiler can \"fake\" the value the reference refers to.</p>\n\n<p>So I tried this:</p>\n\n<pre><code>fn mold_unit&lt;'a, T&gt;(_: &amp;'a T) -&gt; &amp;'a () {\n    &amp;()\n}\n</code></pre>\n\n<p>and then the compiler complained:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed value does not live long enough\n --&gt; &lt;anon&gt;:7:6\n  |\n7 |     &amp;()\n  |      ^^ temporary value created here\n8 | }\n  | - temporary value only lives until here\n  |\nnote: borrowed value must be valid for the lifetime 'a as defined on the block at 6:40...\n --&gt; &lt;anon&gt;:6:41\n  |\n6 | fn mold_unit&lt;'a, T&gt;(_: &amp;'a T) -&gt; &amp;'a () {\n  |                                         ^\n</code></pre>\n\n<p>It doesn't work for the unit <code>()</code> type, and it also does not work for an empty struct:</p>\n\n<pre><code>struct Empty;\n\n// fails to compile as well\nfn mold_struct&lt;'a, T&gt;(_: &amp;'a T) -&gt; &amp;'a Empty {\n    &amp;Empty\n}\n</code></pre>\n\n<p>Somehow, the unit type and the empty struct are treated differently from the empty array. Are there any additional differences between those values besides just being ZSTs? Do the differences (<code>&amp;[]</code> fitting any lifetime and <code>&amp;()</code>, <code>&amp;Empty</code> not) nothing to do with ZSTs at all?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b9e82d92875a6a53fe2e38bdd540390c&amp;version=stable&amp;backtrace=0\">Playground example</a></p>\n"}, {"tags": ["types", "polymorphism", "rust"], "comments": [{"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 1, "creation_date": 1485536700, "post_id": 41898733, "comment_id": 70980887, "body": "<a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\" title=\"why doesnt rust support trait object upcasting\">stackoverflow.com/questions/28632968/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 981, "user_id": 1421366, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/f80bd2422107711f3cdaf71af128ce3f?s=128&d=identicon&r=PG", "display_name": "Dave", "link": "https://stackoverflow.com/users/1421366/dave"}, "edited": false, "score": 0, "creation_date": 1485677050, "post_id": 41914513, "comment_id": 71018567, "body": "That does indeed work although... I thought the Sized trait was a requirement, that the compiler can be shut up by telling it that Sized is optional suggests that the compiler can do without it. I&#39;d be interested to know how and if static dispatch is still occurring."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1485770956, "post_id": 41914513, "comment_id": 71046789, "body": "To address both of your concerns: the <code>?Sized</code> bound is required for mapping T to unsized types. In particular, when <code>T = HasWeight</code>, the function argument becomes a trait object (<code>&amp;HasWeight</code>), which is dynamically dispatched. For other cases, the concrete object type behind the argument is known and this one would be statically dispatched."}], "tags": [], "owner": {"reputation": 1702, "user_id": 110987, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3uTSO.png?s=128&g=1", "display_name": "Fabian", "link": "https://stackoverflow.com/users/110987/fabian"}, "is_accepted": true, "score": 2, "last_activity_date": 1485637197, "last_edit_date": 1485637197, "creation_date": 1485635378, "answer_id": 41914513, "question_id": 41898733, "link": "https://stackoverflow.com/questions/41898733/downcasting-rust-trait-combinations/41914513#41914513", "title": "Downcasting Rust Trait Combinations", "body": "<p>Here is a <code>print_weight</code> function that is generic over types with the <code>HasWeight</code> trait. Unfortunately, I'm too inexperienced with Rust to tell you why the additional <code>?Sized</code> trait bound is necessary.</p>\n\n<pre><code>fn print_weight&lt;T: HasWeight + ?Sized&gt;(thing: &amp;T) {\n    println!(\"{}\", thing.get_weight());\n}\n</code></pre>\n\n<p>This can be called from within your loop without any casting: <code>print_weight(animal)</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?code=%23%5Bderive(Debug)%5D%0Astruct%20Dog%20%7B%0A%20%20%20%20weight%3A%20f64%0A%7D%0A%0A%23%5Bderive(Debug)%5D%0Astruct%20Cat%20%7B%0A%20%20%20%20weight%3A%20f64%0A%7D%0A%0Atrait%20MakesSound%20%7B%0A%20%20%20%20fn%20make_sound(%26self)%3B%0A%7D%0A%0Aimpl%20MakesSound%20for%20Dog%20%7B%0A%20%20%20%20fn%20make_sound(%26self)%20%7B%0A%20%20%20%20%20%20%20%20println!(%22Bark%20bark!%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0Aimpl%20MakesSound%20for%20Cat%20%7B%0A%20%20%20%20fn%20make_sound(%26self)%20%7B%0A%20%20%20%20%20%20%20%20println!(%22Go%20away.%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0Atrait%20HasWeight%20%7B%0A%20%20%20%20fn%20get_weight(%26self)%20-%3E%20f64%3B%0A%7D%0A%0Aimpl%20HasWeight%20for%20Dog%20%7B%0A%20%20%20%20fn%20get_weight(%26self)%20-%3E%20f64%20%7B%20self.weight%20%7D%0A%7D%0A%0Aimpl%20HasWeight%20for%20Cat%20%7B%0A%20%20%20%20fn%20get_weight(%26self)%20-%3E%20f64%20%7B%20self.weight%20%7D%0A%7D%0A%0Atrait%20Animal%3A%20MakesSound%20%2B%20HasWeight%20%7B%7D%0Aimpl%3CT%3A%20MakesSound%20%2B%20HasWeight%3E%20Animal%20for%20T%20%7B%7D%0A%0Afn%20print_weight%3CT%3A%20HasWeight%20%2B%20%3FSized%3E(thing%3A%20%26T)%20%7B%0A%20%20%20%20println!(%22%7B%7D%22%2C%20thing.get_weight())%3B%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20let%20dog%20%3D%20Dog%7B%20weight%3A%2045.0%20%7D%3B%0A%20%20%20%20let%20cat%20%3D%20Cat%7B%20weight%3A%2012.0%20%7D%3B%0A%20%20%20%20let%20animals%3A%20Vec%3C%26Animal%3E%20%3D%20vec!%5B%26dog%2C%20%26cat%5D%3B%0A%20%20%20%20for%20animal%20in%20animals%20%7B%0A%20%20%20%20%20%20%20%20animal.make_sound()%3B%0A%20%20%20%20%20%20%20%20print_weight(animal)%3B%0A%20%20%20%20%7D%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 981, "user_id": 1421366, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/f80bd2422107711f3cdaf71af128ce3f?s=128&d=identicon&r=PG", "display_name": "Dave", "link": "https://stackoverflow.com/users/1421366/dave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 0, "accepted_answer_id": 41914513, "answer_count": 1, "score": 0, "last_activity_date": 1485637197, "creation_date": 1485534889, "last_edit_date": 1485537498, "question_id": 41898733, "link": "https://stackoverflow.com/questions/41898733/downcasting-rust-trait-combinations", "title": "Downcasting Rust Trait Combinations", "body": "<p>I have two structs, <code>Dog</code> and <code>Cat</code>:</p>\n\n<pre><code>struct Dog {\n    weight: f64\n}\nstruct Cat {\n    weight: f64\n}\n</code></pre>\n\n<p>and two traits <code>MakesSound</code> and <code>HasWeight</code></p>\n\n<pre><code>trait MakesSound {\n    fn make_sound(&amp;self);\n}\n\nimpl MakesSound for Dog {\n    fn make_sound(&amp;self) {\n        println!(\"Bark bark!\");\n    }\n}\n\nimpl MakesSound for Cat {\n    fn make_sound(&amp;self) {\n        println!(\"Go away.\");\n    }\n}\n\ntrait HasWeight {\n    fn get_weight(&amp;self) -&gt; f64;\n}\n\nimpl HasWeight for Dog {\n    fn get_weight(&amp;self) -&gt; f64 { self.weight }\n}\n\nimpl HasWeight for Cat {\n    fn get_weight(&amp;self) -&gt; f64 { self.weight }\n}\n</code></pre>\n\n<p>I would like to be able to store them in a heterogeneous <code>Vec</code> and then make use of both their traits</p>\n\n<pre><code>trait Animal: MakesSound + HasWeight {}\nimpl&lt;T: MakesSound + HasWeight&gt; Animal for T {}\n\nfn main() {\n    let dog = Dog{ weight: 45.0 };\n    let cat = Cat{ weight: 12.0 };\n    let animals: Vec&lt;&amp;Animal&gt; = vec![&amp;dog, &amp;cat];\n    for animal in animals {\n        animal.make_sound();\n        println!(\"{}\", animal.get_weight());\n        //print_weight(animal as &amp;HasWeight);\n    }\n}\n</code></pre>\n\n<p>How would I define a <code>print_weight</code> function that had type</p>\n\n<pre><code>fn print_weight(x: &amp;HasWeight);\n</code></pre>\n\n<p>so that my function would require as little information as possible, but my <code>Vec</code> is storing as much information as possible?</p>\n\n<p>The error I get from uncommenting the line above is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: non-scalar cast: `&amp;Animal` as `&amp;HasWeight`\n</code></pre>\n"}, {"tags": ["rust", "processor"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1485528863, "post_id": 41896462, "comment_id": 70975644, "body": "Do you want to detect this at compile (to enable/disable different functions) or is a runtime detection sufficient? The latter can be done with <code>if mem::size_of::&lt;usize&gt;() == 8</code> (and will be optimized out)."}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485537809, "post_id": 41896462, "comment_id": 70981504, "body": "At compile time, to disable portions of code."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485533871, "post_id": 41896499, "comment_id": 70979125, "body": "<i>which should correspond to the architecture</i> \u2014 not always. For example, AVR chips have 16-bit pointers but are 8-bit architecture."}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485537786, "post_id": 41896499, "comment_id": 70981493, "body": "So neither is the answer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1485537973, "post_id": 41896499, "comment_id": 70981582, "body": "It&#39;s more that the question you are asking is not specific enough. Why do you care about the &quot;architecture&quot;? If you care about the size of a pointer, that&#39;s one question. If you care about the other aspects, then <code>target_arch</code> might be right. If you care about the native CPU size of an integer, then I know of no answer."}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485538158, "post_id": 41896499, "comment_id": 70981696, "body": "Block sort uses term 64-bit systems when defining FloorOfTwo function. I&#39;m unsure what 64-bit would mean in this context ? <a href=\"https://en.wikipedia.org/wiki/Block_sort#Algorithm\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Block_sort#Algorithm</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1485538408, "post_id": 41896499, "comment_id": 70981851, "body": "That seems like a poor explanation of the algorithm then. It probably doesn&#39;t mean if the <b>system</b> is 64-bit, it means if a specific value has a certain number of bits. In the examples, it&#39;s always called with an array length. Since that&#39;s a <code>usize</code> in Rust, you care about the size of a usize. Although you can probably just use <a href=\"https://doc.rust-lang.org/std/primitive.usize.html#method.next_power_of_two\" rel=\"nofollow noreferrer\"><code>usize::next_power_of_two</code></a>."}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485541201, "post_id": 41896499, "comment_id": 70983364, "body": "Sadly, no; <code>usize::next_power_of_two gives</code> different results. The algorithm wants lesser power of two e.g. <code>63u8.next_power_of_two()</code> should be <code>32</code> not <code>64</code>. Although some combination of <code>next_power_of_two</code> and shift could work."}], "tags": [], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "is_accepted": true, "score": 13, "last_activity_date": 1493834720, "last_edit_date": 1493834720, "creation_date": 1485528006, "answer_id": 41896499, "question_id": 41896462, "link": "https://stackoverflow.com/questions/41896462/how-to-check-in-rust-if-architecture-is-32-or-64-bit/41896499#41896499", "title": "How to check in Rust if architecture is 32 or 64 bit?", "body": "<p>The <code>#[cfg(target_pointer_width = \"64\")]</code> from the <a href=\"https://doc.rust-lang.org/reference/attributes.html#conditional-compilation\" rel=\"noreferrer\">cfg</a> section in <a href=\"https://doc.rust-lang.org/reference/\" rel=\"noreferrer\">the Rust reference</a> seems like a likely solution. It is based on the size of a pointer (as well as <code>isize</code> and <code>usize</code>), which should correspond to the architecture.</p>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 7, "last_activity_date": 1493834673, "last_edit_date": 1493834673, "creation_date": 1485528017, "answer_id": 41896504, "question_id": 41896462, "link": "https://stackoverflow.com/questions/41896462/how-to-check-in-rust-if-architecture-is-32-or-64-bit/41896504#41896504", "title": "How to check in Rust if architecture is 32 or 64 bit?", "body": "<p>You should check the Rust Reference chapter on <a href=\"https://doc.rust-lang.org/reference/attributes.html#conditional-compilation\" rel=\"noreferrer\">conditional compilation</a>:</p>\n\n<blockquote>\n  <p><code>target_arch = \"...\"</code> - Target CPU architecture, such as <code>\"x86\"</code>, <code>\"x86_64\"</code>, <code>\"mips\"</code>, <code>\"powerpc\"</code>, <code>\"powerpc64\"</code>, <code>\"arm\"</code>, or <code>\"aarch64\"</code>. This value is closely related to the first element of the platform target triple, though it is not identical.</p>\n</blockquote>\n"}], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4121, "favorite_count": 1, "accepted_answer_id": 41896499, "answer_count": 2, "score": 6, "last_activity_date": 1493834720, "creation_date": 1485527868, "last_edit_date": 1485528030, "question_id": 41896462, "link": "https://stackoverflow.com/questions/41896462/how-to-check-in-rust-if-architecture-is-32-or-64-bit", "title": "How to check in Rust if architecture is 32 or 64 bit?", "body": "<p>If there a conditional check for whether processor is 32-bit or 64-bit? I'm looking for kind of configuration check like e.g. <code>#cfg[x86]</code> or <code>cfg[x64]</code>.</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1485506167, "post_id": 41889727, "comment_id": 70961620, "body": "Relevant to your interests: a <a href=\"http://stackoverflow.com/questions/41869048/is-there-a-trait-for-scalar-castable-types\">recent question on casts</a>."}], "answers": [{"comments": [{"owner": {"reputation": 634, "user_id": 301247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4ef89e836dd5e013e6a41e5aa2b9e9c?s=128&d=identicon&r=PG", "display_name": "Jason Teplitz", "link": "https://stackoverflow.com/users/301247/jason-teplitz"}, "edited": false, "score": 0, "creation_date": 1485507182, "post_id": 41889886, "comment_id": 70962135, "body": "Ah, I see. Thanks!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 14, "last_activity_date": 1485507131, "last_edit_date": 1485507131, "creation_date": 1485506676, "answer_id": 41889886, "question_id": 41889727, "link": "https://stackoverflow.com/questions/41889727/why-does-rust-not-allow-coercion-to-trait-objects-inside-containers/41889886#41889886", "title": "Why does Rust not allow coercion to trait objects inside containers?", "body": "<p>Because <code>Box&lt;Bar&gt;</code> is a different size than <code>Box&lt;Foo&gt;</code>.  The coercion is allowed on a <em>single</em> value, but here you'd have to resize the whole vector.  The book goes into some detail on this in the section on <a href=\"https://doc.rust-lang.org/book/trait-objects.html#representation\">Representation of Trait Objects</a>.  Short version: <code>Box&lt;Bar&gt;</code> is a pointer to a value.  <code>Box&lt;Foo&gt;</code> is a pointer to a value <em>and</em> a pointer to a vtable.</p>\n"}], "owner": {"reputation": 634, "user_id": 301247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4ef89e836dd5e013e6a41e5aa2b9e9c?s=128&d=identicon&r=PG", "display_name": "Jason Teplitz", "link": "https://stackoverflow.com/users/301247/jason-teplitz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 422, "favorite_count": 0, "accepted_answer_id": 41889886, "answer_count": 1, "score": 8, "last_activity_date": 1485526852, "creation_date": 1485506027, "last_edit_date": 1485526852, "question_id": 41889727, "link": "https://stackoverflow.com/questions/41889727/why-does-rust-not-allow-coercion-to-trait-objects-inside-containers", "title": "Why does Rust not allow coercion to trait objects inside containers?", "body": "<p>I have a <code>Vec&lt;Box&lt;T&gt;&gt;</code> where <code>T</code> implements <code>Foo</code>. Why can I not coerce it to a <code>Vec&lt;Box&lt;Foo&gt;&gt;</code> even though I can coerce anything of type <code>Box&lt;T&gt;</code> into a <code>Box&lt;Foo&gt;</code>? Why does the below code not compile?</p>\n\n<pre><code>use std::vec;\n\ntrait Foo {}\n\nstruct Bar {}\n\nimpl Foo for Bar {}\n\nfn main() {\n    let v = vec![Box::new(Bar {})];\n    let v_1 = v as Vec&lt;Box&lt;Foo&gt;&gt;;\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 3, "creation_date": 1485509270, "post_id": 41888242, "comment_id": 70963246, "body": "I think it is very difficult to come up with a solution to the problem, unless you give more information about the kind of library you are trying to write. For example, would a reference counted <code>Secret</code> make sense? If yes, then you no longer have the problem of the secret not living long enough."}], "answers": [{"comments": [{"owner": {"reputation": 3219, "user_id": 2444959, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b2964775b0f5c752ab8a66da85453771?s=128&d=identicon&r=PG", "display_name": "R&#250;nar Berg", "link": "https://stackoverflow.com/users/2444959/r%c3%banar-berg"}, "edited": false, "score": 0, "creation_date": 1485532608, "post_id": 41892615, "comment_id": 70978319, "body": "This is suboptimal, because the secret is involved, not just a string, and I&#39;d rather not expose it to the client API."}, {"owner": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "reply_to_user": {"reputation": 3219, "user_id": 2444959, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b2964775b0f5c752ab8a66da85453771?s=128&d=identicon&r=PG", "display_name": "R&#250;nar Berg", "link": "https://stackoverflow.com/users/2444959/r%c3%banar-berg"}, "edited": false, "score": 0, "creation_date": 1485773238, "post_id": 41892615, "comment_id": 71048214, "body": "@R&#250;narBerg I added a solution which uses a reference counted pointer. You may want to use <a href=\"https://doc.rust-lang.org/std/rc/struct.Weak.html\" rel=\"nofollow noreferrer\">Weak&lt;T&gt;</a> for the children though."}, {"owner": {"reputation": 3219, "user_id": 2444959, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b2964775b0f5c752ab8a66da85453771?s=128&d=identicon&r=PG", "display_name": "R&#250;nar Berg", "link": "https://stackoverflow.com/users/2444959/r%c3%banar-berg"}, "edited": false, "score": 0, "creation_date": 1485813753, "post_id": 41892615, "comment_id": 71072734, "body": "Thanks, this worked. Here is a <a href=\"https://play.rust-lang.org/?gist=2d263857c8d80e34334c7fa28754a457&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a>/<a href=\"https://gist.github.com/2d263857c8d80e34334c7fa28754a457\" rel=\"nofollow noreferrer\">gist</a> with the full working version"}], "tags": [], "owner": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "is_accepted": true, "score": 4, "last_activity_date": 1485773105, "last_edit_date": 1485773105, "creation_date": 1485515483, "answer_id": 41892615, "question_id": 41888242, "link": "https://stackoverflow.com/questions/41888242/hierarchical-api-with-a-common-value/41892615#41892615", "title": "Hierarchical API with a common value", "body": "<p>You could move the ownership of the Secret outside of the Parent and just share a reference to the secret:</p>\n\n<pre><code>#[derive(Clone)]\npub struct Parent&lt;'a&gt; {\n    pub child_a: ChildA&lt;'a&gt;,\n    family_secret: &amp;'a str,\n}\n\n#[derive(Clone)]\npub struct ChildA&lt;'a&gt; {\n    pub grand_child_x: GrandChildX&lt;'a&gt;,\n    family_secret: &amp;'a str,\n}\n\n#[derive(Clone)]\npub struct GrandChildX&lt;'a&gt; {\n    family_secret: &amp;'a str,\n}\n\nimpl&lt;'a&gt; Parent&lt;'a&gt; {\n    pub fn new(secret: &amp;'a str) -&gt; Parent&lt;'a&gt; {\n        Parent {\n            family_secret: secret,\n            child_a: ChildA::new(secret),\n        }\n    }\n}\n\nimpl&lt;'a&gt; ChildA&lt;'a&gt; {\n    pub fn new(secret: &amp;'a str) -&gt; ChildA&lt;'a&gt; {\n        ChildA {\n            family_secret: secret,\n            grand_child_x: GrandChildX::new(secret),\n        }\n    }\n}\n\nimpl&lt;'a&gt; GrandChildX&lt;'a&gt; {\n    pub fn new(secret: &amp;'a str) -&gt; GrandChildX&lt;'a&gt; {\n        GrandChildX{family_secret: secret}\n    }\n    pub fn method(&amp;self) {\n        println!(\"Secret: {} from grand child\", self.family_secret);\n    }\n}\n\nfn main() {\n    let secret = \"my secret\".to_string();\n    let parent = Parent::new(&amp;secret);\n    parent.child_a.grand_child_x.method();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4fe78c66314f53d1d215facac9ca722a&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<hr>\n\n<p>Another solution would be to use a <a href=\"https://doc.rust-lang.org/std/rc/\" rel=\"nofollow noreferrer\">reference counting pointer <code>Rc&lt;T&gt;</code></a>:</p>\n\n<pre><code>use std::rc::Rc;\n\n#[derive(Clone)]\npub struct Parent {\n    pub child_a: ChildA,\n    family_secret: Rc&lt;String&gt;,\n}\n\n#[derive(Clone)]\npub struct ChildA {\n    pub grand_child_x: GrandChildX,\n    family_secret: Rc&lt;String&gt;,\n}\n\n#[derive(Clone)]\npub struct GrandChildX {\n    family_secret: Rc&lt;String&gt;,\n}\n\nimpl Parent {\n    pub fn new(secret: String) -&gt; Parent {\n        let secret = Rc::new(secret);\n        Parent {\n            family_secret: secret.clone(),\n            child_a: ChildA::new(secret),\n        }\n    }\n}\n\nimpl ChildA {\n    pub fn new(secret: Rc&lt;String&gt;) -&gt; ChildA {\n        ChildA {\n            family_secret: secret.clone(),\n            grand_child_x: GrandChildX::new(secret),\n        }\n    }\n}\n\nimpl GrandChildX {\n    pub fn new(secret: Rc&lt;String&gt;) -&gt; GrandChildX {\n        GrandChildX{family_secret: secret}\n    }\n    pub fn method(&amp;self) {\n        println!(\"Secret: {} from grand child\", self.family_secret);\n    }\n}\n\nfn main() {\n    let secret = \"my secret\".to_string();\n    let parent = Parent::new(secret);\n    parent.child_a.grand_child_x.method();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9c4a1b8b8acc62237aec203565a18a4c&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 3219, "user_id": 2444959, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/b2964775b0f5c752ab8a66da85453771?s=128&d=identicon&r=PG", "display_name": "R&#250;nar Berg", "link": "https://stackoverflow.com/users/2444959/r%c3%banar-berg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 41892615, "answer_count": 1, "score": 3, "last_activity_date": 1485773105, "creation_date": 1485499265, "last_edit_date": 1485527265, "question_id": 41888242, "link": "https://stackoverflow.com/questions/41888242/hierarchical-api-with-a-common-value", "title": "Hierarchical API with a common value", "body": "<p>I have a <code>Parent</code> struct, a <code>Child</code> struct and a <code>GrandChild</code> struct:</p>\n\n<pre><code>pub struct Parent {\n    pub child_a: ChildA,\n    pub child_b: ChildB,\n    family_secret: Secret,\n}\n\npub struct ChildA {\n    pub grand_child_x: GrandChildX,\n    pub grand_child_y: GrandChildY,\n}\n\npub struct GrandChildX {}\n\n// etc.\n</code></pre>\n\n<p>The parent holds a family <code>Secret</code> that I want the grandchildren to have access to in their <code>impl</code>s.</p>\n\n<pre><code>impl GrandChildX {\n    pub fn method(&amp;self) {\n        // Here I need to use the family secret.\n    }\n}\n</code></pre>\n\n<p>I am trying to expose a hierarchical API.</p>\n\n<pre><code>let parent = Parent::new(\"our secret\");\nparent.child_a.grand_child_x.method();\nparent.child_b.grand_child_y.method();    // slightly different\n</code></pre>\n\n<p>I've tried a few ways of achieving this, including passing the secret down the family tree.</p>\n\n<pre><code>pub struct ChildA {\n    family_secret: Secret,\n    // ...\n}\n\npub struct ChildB {\n    family_secret: Secret,\n    // ...\n}\n</code></pre>\n\n<p>This has problems moving the value between children (already moved to at <code>ChildA::new(family_secret: secret)</code>).</p>\n\n<pre><code>impl Parent {\n    pub fn new(secret) -&gt; Parent {\n        let secret = Secret::new(secret);\n        Parent {\n            family_secret: secret,\n            child_a: ChildA { family_secret: &amp;secret },\n            // error move after use ---------^\n    }\n}\n</code></pre>\n\n<p>I tried passing it down as a reference, but then the value does not live long enough:</p>\n\n<pre><code>impl Parent {\n    pub fn new(secret) -&gt; Parent {\n        let secret = Secret::new(secret);\n        Parent {\n            child_a: ChildA { family_secret: &amp;secret },\n            //                               ^-----&lt;\n            // error does not live long enough ----^\n    }\n}\n</code></pre>\n\n<p>My only success is implementing the <code>method</code> as a <code>trait</code> of <code>Parent</code>, and keeping separate client <code>struct</code>s.</p>\n\n<pre><code>pub struct ChildAClient&lt;'a&gt; {\n    family_secret: &amp;'a Secret,\n}\n\npub trait ChildA {\n    fn child_a(&amp;self) -&gt; ChildAClient,        \n}\n\nimpl ChildA for Parent {\n    fn child_a(&amp;self) -&gt; ChildAClient {\n        ChildAClient {\n            family_secret: &amp;self.family_secret,\n        }\n    }\n}\n\n// Same for ChildB, etc.\n\npub struct GrandChildXClient&lt;'a&gt; {\n    family_secret: &amp;'a Secret,\n}\n\npub trait GrandChildX {\n    fn grand_child_x(&amp;self) -&gt; GrandChildXClient,        \n}\n\nimpl&lt;'a&gt; GrandChildX for ChildAClient&lt;'a&gt; {\n    fn grand_child_x(&amp;self) -&gt; GrandChildXClient {\n        GrandChildXClient {\n            family_secret: self.family_secret,\n        }\n    }\n}\n</code></pre>\n\n<p>This not only feels clunky to author, but it offers a clunky API as well, as I have to import all these traits plus call the trait methods to traverse down the family tree:</p>\n\n<pre><code>use my_api::child_a::ChildA;\nuse my_api::child_a::grand_child_x::GrandChildX;\nuse my_api::child_b::ChildB;\nuse my_api::child_b::grand_child_Y::GrandChildY;\n\nlet parent = my_api::Parent::new(\"my secret\");\n\nparent.child_a().grand_child_x().method();\nparent.child_b().grand_child_y().method();\n</code></pre>\n\n<p>Is there a nice way to pass this secret down the family tree? There is only a single parent, so it makes sense for it to be owned by the parent. How can I borrow it in the descendants?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1529462368, "last_edit_date": 1529462368, "creation_date": 1485462524, "answer_id": 41882374, "question_id": 41882151, "link": "https://stackoverflow.com/questions/41882151/how-do-i-imply-the-type-of-the-value-when-there-are-no-type-parameters-or-ascrip/41882374#41882374", "title": "How do I imply the type of the value when there are no type parameters or ascriptions?", "body": "<blockquote>\n  <p>How do I imply the type of the value when there is no type parameters or ascriptions?</p>\n</blockquote>\n\n<p>In the vast majority of cases, the Rust compiler can infer the generic types of a type or function based on how values of the generic type are used.</p>\n\n<p>In some cases, there isn't enough information to infer exactly one type for a generic type, but there is always a way to pass type parameters when they exist.</p>\n\n<p>The two ways of doing so are to use the <em>turbofish</em> or <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation-calling-methods-with-the-same-name\" rel=\"nofollow noreferrer\"><em>fully qualified syntax</em></a> at the call site.</p>\n\n<h2>Turbofish</h2>\n\n<p>The turbofish is the symbols <code>::&lt;Type1, Type2, ...&gt;</code> appended to a function or type. See how it looks like a fish?</p>\n\n<h3>Function example</h3>\n\n<p><a href=\"https://doc.rust-lang.org/std/mem/fn.size_of.html\" rel=\"nofollow noreferrer\"><code>mem::size_of</code></a> is defined as:</p>\n\n<pre><code>pub const fn size_of&lt;T&gt;() -&gt; usize.\n</code></pre>\n\n<p>You can call it as:</p>\n\n<pre><code>std::mem::size_of::&lt;i8&gt;()\n//               ^^^^^^ turbofish\n</code></pre>\n\n<h3>Type example</h3>\n\n<p><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.new\" rel=\"nofollow noreferrer\"><code>Vec::new</code></a> is defined as:</p>\n\n<pre><code>impl&lt;T&gt; Vec&lt;T&gt; {\n    pub fn new() -&gt; Vec&lt;T&gt;\n}\n</code></pre>\n\n<p>You can call it as:</p>\n\n<pre><code>Vec::&lt;u8&gt;::new()\n// ^^^^^^ turbofish\n</code></pre>\n\n<h3>Multiple types</h3>\n\n<p>If your function has multiple types, you need to specify something for each type in the same order as the definition:</p>\n\n<pre><code>fn example&lt;A, B&gt;() {}\n\nfn main() {\n    example::&lt;i32, bool&gt;();\n    //         ^A  ^B\n}\n</code></pre>\n\n<h2>Fully qualified syntax</h2>\n\n<p>If you need to disambiguate a method call to a specific trait with a type parameter, you can use the fully qualified syntax.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/convert/trait.From.html#tymethod.from\" rel=\"nofollow noreferrer\"><code>From::from</code></a> is defined as:</p>\n\n<pre><code>trait From&lt;T&gt; {\n    fn from(T) -&gt; Self;\n}\n</code></pre>\n\n<p>You can call it as:</p>\n\n<pre><code>    &lt;String as From&lt;&amp;str&gt;&gt;::from(\"a\")\n//  ^^^^^^^^^^^^^^^^^^^^^^ fully qualified syntax\n</code></pre>\n\n<h2>Partially inferring types</h2>\n\n<p>If there are multiple types that can be provided but some of them can be inferred, you can still use <code>_</code> to allow the compiler to infer that specific type.</p>\n\n<hr>\n\n<p>Here, I use the turbofish on the <code>Into</code> type for your code:</p>\n\n<pre><code>let json_object = *Into::&lt;HashMap&lt;String, Value&gt;&gt;::into(self);\n</code></pre>\n\n<p>That's not your problem though.</p>\n\n<p>For this line to be valid:</p>\n\n<pre><code>let json_object: HashMap&lt;String, Value&gt; = *self.into();\n</code></pre>\n\n<p>The result of the call to <code>self.into()</code> must be something that could be dereferenced to produce the type <code>HashMap&lt;String, Value&gt;</code>. How is the compiler expected to know what that is? It's also not what you want.</p>\n\n<p>All you have is <code>&amp;self</code>, so <em>that's what you have to convert from</em>. Implement the trait for a reference to your struct:</p>\n\n<pre><code>impl&lt;'a&gt; From&lt;&amp;'a WeatherSettings&gt; for HashMap&lt;String, Value&gt; {\n    fn from(weather: &amp;'a WeatherSettings) -&gt; HashMap&lt;String, Value&gt; {\n        let mut json_object = HashMap::new();\n        json_object.insert(\"unit\".to_owned(), Value::String(weather.unit.clone()));\n        json_object.insert(\"forecast_days\".to_owned(), Value::Int(weather.forecast_days));\n        json_object.insert(\"data\".to_owned(), Value::String(weather.data.clone()));\n        json_object\n    }\n}\n</code></pre>\n\n<p>This means you cannot move the strings over, but instead have to copy them. That's the restriction placed by the <code>&amp;self</code>.</p>\n"}], "owner": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 796, "favorite_count": 0, "accepted_answer_id": 41882374, "answer_count": 1, "score": 2, "last_activity_date": 1529462368, "creation_date": 1485461663, "last_edit_date": 1485465733, "question_id": 41882151, "link": "https://stackoverflow.com/questions/41882151/how-do-i-imply-the-type-of-the-value-when-there-are-no-type-parameters-or-ascrip", "title": "How do I imply the type of the value when there are no type parameters or ascriptions?", "body": "<p>I am trying to convert my struct into a <code>HashMap</code>, but I am unable to do so while being in the impl block. Due to a crate <a href=\"https://mhallin.github.io/juniper/juniper/macro.graphql_scalar!.html\" rel=\"nofollow noreferrer\">constraint</a>, I can only use <code>&amp;self</code> as a parameter for the <code>resolve</code> function.</p>\n\n<pre><code>use std::collections::HashMap;\n\npub enum Value {\n    Int(i64),\n    Object(HashMap&lt;String, Value&gt;),\n}\n\npub struct WeatherSettings {\n    forecast_days: i64,\n}\n\nimpl WeatherSettings {\n    fn resolve(&amp;self) -&gt; Value {\n        let json_object: HashMap&lt;String, Value&gt; = *self.into();\n        Value::Object(json_object)\n    }\n}\n\nimpl From&lt;WeatherSettings&gt; for HashMap&lt;String, Value&gt; {\n    fn from(weather: WeatherSettings) -&gt; HashMap&lt;String, Value&gt; {\n        let mut json_object = HashMap::new();\n        json_object.insert(\"forecast_days\".to_owned(),\n                           Value::Int(weather.forecast_days));\n        return json_object;\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>More directly, I get the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the type of this value must be known in this context\n  --&gt; src/main.rs:14:51\n   |\n14 |         let json_object: HashMap&lt;String, Value&gt; = *self.into();\n   |                                                   ^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["function", "rust", "lifetime"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1485523397, "post_id": 41880315, "comment_id": 70971808, "body": "Note: you don&#39;t <i>assign</i> lifetimes, you <i>document</i> them. You may think of it as <i>creating</i> vs <i>discovering</i>, or as the joke goes &quot;But if oxygen was discovered in 1770, how did people breathe before?&quot;. The key understanding is that lifetimes exist whether you name them or not; and all you are doing is naming them to better understand their relationships (and have the compiler check them). Maybe I should trademark the <i>lifetimes are like oxygen</i> tidbit? Sounds better than burritos too."}], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 6226609, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oqpTA.png?s=128&g=1", "display_name": "pithonsmear", "link": "https://stackoverflow.com/users/6226609/pithonsmear"}, "edited": false, "score": 0, "creation_date": 1485462585, "post_id": 41882039, "comment_id": 70946924, "body": "That helps, thanks! I removed the &quot;fake&quot; Node, and will try to build from fixed select source. Taking mental notes for presenting questions better, as well!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1485461254, "last_edit_date": 1495535358, "creation_date": 1485461254, "answer_id": 41882039, "question_id": 41880315, "link": "https://stackoverflow.com/questions/41880315/how-do-i-assign-a-lifetime-when-returning-the-result-of-documentfind-from-the/41882039#41882039", "title": "How do I assign a lifetime when returning the result of document::find from the select crate?", "body": "<p>Your core problem is that you've defined a generic type that shadows the <em>real</em> <code>Node</code>:</p>\n\n<pre><code>fn elems_by_class&lt;'a, Node&gt;(document: &amp;'a Document, class: &amp;str)\n//                    ^^^^ -- no!\n</code></pre>\n\n<p>This <em>should</em> have been a duplicate of <a href=\"https://stackoverflow.com/q/37410672/155423\">Expected type parameter, found u8, but the type parameter is u8</a>. </p>\n\n<p>However, the select library (versions 0.2.2 and 0.3.0) appears to have a bug:</p>\n\n<pre><code>impl&lt;'a&gt; Selection&lt;'a&gt; {\n    fn iter(&amp;'a self) -&gt; Iter&lt;'a&gt;;\n}\n</code></pre>\n\n<p>This forces the values returned by the iterator to have a lifetime tied to the <code>Selection</code> struct, not the <code>Document</code>.</p>\n\n<p>This appears to <a href=\"https://github.com/utkarshkukreti/select.rs/commit/413e17c568ab78b3f9388f925a3996106bfeec20\" rel=\"nofollow noreferrer\">have been fixed</a> now:</p>\n\n<pre><code>impl&lt;'a&gt; Selection&lt;'a&gt; {\n    pub fn iter&lt;'sel&gt;(&amp;'sel self) -&gt; Iter&lt;'sel, 'a&gt;;\n}\n</code></pre>\n\n<p>But the fix has not been released, so you can't do anything except bug the maintainer to release a new version or you can choose to use the library from the git repository.</p>\n"}], "owner": {"reputation": 115, "user_id": 6226609, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oqpTA.png?s=128&g=1", "display_name": "pithonsmear", "link": "https://stackoverflow.com/users/6226609/pithonsmear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 0, "accepted_answer_id": 41882039, "answer_count": 1, "score": 1, "last_activity_date": 1485461254, "creation_date": 1485454893, "last_edit_date": 1485460312, "question_id": 41880315, "link": "https://stackoverflow.com/questions/41880315/how-do-i-assign-a-lifetime-when-returning-the-result-of-documentfind-from-the", "title": "How do I assign a lifetime when returning the result of document::find from the select crate?", "body": "<p>I'm having trouble defining a function that returns a vector of <code>Node</code>from the select crate, v0.2.2. I've been adding to this function as I've worked my way through error messages (aided by other questions online), but I can't figure out how to assign the <code>'a</code> lifetime variable to the return value:</p>\n\n<pre><code>extern crate select;\n\nuse select::document::Document;\nuse select::predicate::*;\n\nfn elems_by_class&lt;'a, Node&gt;(document: &amp;'a Document, class: &amp;str) -&gt;   Vec&lt;Node&lt;&gt;&gt;\n    where Vec&lt;Node&gt;: std::iter::FromIterator&lt;select::node::Node&lt;'a&gt;&gt;\n{\n    document.find(Attr(\"class\", class)).iter().collect::&lt;Vec&lt;Node&lt;&gt;&gt;&gt;()\n}\n\nfn main() {}\n</code></pre>\n\n<p>The error I'm getting is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed value does not live long enough\n  --&gt; src/main.rs:9:5\n   |\n9  |     document.find(Attr(\"class\", class)).iter().collect::&lt;Vec&lt;Node&lt;&gt;&gt;&gt;()\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ temporary value created here\n10 | }\n   | - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the block at 8:0...\n  --&gt; src/main.rs:8:1\n   |\n8  | {\n   | ^\n</code></pre>\n\n<p>How can I assign the <code>'a</code> lifetime to the function call? I tried (unsuccessfully) using variables, but read that variables created within the function body might cause problems, so abandoned that approach. Have I dug myself too far down the borrow hole, and should this function be defined in a simpler way?</p>\n"}, {"tags": ["struct", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 1552, "user_id": 3145469, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/40ef74077e497553ad7a6ce20a1fc38b?s=128&d=identicon&r=PG&f=1", "display_name": "MrMobster", "link": "https://stackoverflow.com/users/3145469/mrmobster"}, "edited": false, "score": 0, "creation_date": 1485420611, "post_id": 41869672, "comment_id": 70921516, "body": "This is a follow up question to <a href=\"http://stackoverflow.com/questions/41852283/safe-non-trivial-data-dependencies-custom-references\" title=\"safe non trivial data dependencies custom references\">stackoverflow.com/questions/41852283/&hellip;</a> and is inspired by the answers I received there. Still, I decided that the new question is sufficiently different."}, {"owner": {"user_type": "does_not_exist", "display_name": "user3704639"}, "edited": false, "score": 1, "creation_date": 1485438139, "post_id": 41869672, "comment_id": 70931208, "body": "Because your <code>get_edge()</code> function returns an immutable reference of itself via <code>&amp;self</code>, the immutable borrow will exist for as long as <code>edge1</code> exists. The borrow checker is thus working as intended. I&#39;m not really sure why you&#39;re trying to return a reference to itself when all you want is the edge ID."}, {"owner": {"reputation": 1552, "user_id": 3145469, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/40ef74077e497553ad7a6ce20a1fc38b?s=128&d=identicon&r=PG&f=1", "display_name": "MrMobster", "link": "https://stackoverflow.com/users/3145469/mrmobster"}, "edited": false, "score": 0, "creation_date": 1485438655, "post_id": 41869672, "comment_id": 70931542, "body": "@mmstick Because edge ID potentially becomes invalid when the graph is mutated. I want to make sure that no instance of <code>Edge</code> for a graph can outlive a graph mutation. Note: I would actually use PhantomData&lt;&amp;Graph&gt; here, but this doesn&#39;t change the question."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1485444450, "post_id": 41869672, "comment_id": 70935777, "body": "I think you might be running into the <a href=\"https://doc.rust-lang.org/nomicon/lifetime-mismatch.html\" rel=\"nofollow noreferrer\">Limits of lifetimes</a>"}, {"owner": {"reputation": 1552, "user_id": 3145469, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/40ef74077e497553ad7a6ce20a1fc38b?s=128&d=identicon&r=PG&f=1", "display_name": "MrMobster", "link": "https://stackoverflow.com/users/3145469/mrmobster"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1485448836, "post_id": 41869672, "comment_id": 70939019, "body": "@WesleyWiser, thanks for the link. Yes, it seems like its the same problem. For my understanding: so lifetimes in Rust are really just labels for lexical scope rather then actual existence? E.g. if I destructure a struct by moving its fields out, it still is considered to be alive?"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1485451227, "post_id": 41869672, "comment_id": 70940432, "body": "@MrMobster I would say in general yes lifetimes are labels for lexical scopes. There is a strong desire in the Rust community for &quot;non-lexical lifetimes&quot; see these for more info on that: <a href=\"https://github.com/rust-lang/rfcs/issues/811\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/811</a> <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/04/27/non-lexical-lifetimes-introduction/\" rel=\"nofollow noreferrer\">smallcultfollowing.com/babysteps/blog/2016/04/27/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546269333, "post_id": 53986833, "comment_id": 94815231, "body": "<i>it\u2019s possible to solve both problems with higher-rank trait bounds</i> \u2014 An admirable attempt, but <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=35a61cfd84008841ec868830eb8c4731\" rel=\"nofollow noreferrer\">it doesn&#39;t work</a>. Lifetimes have subtyping relationships."}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546283841, "post_id": 53986833, "comment_id": 94819143, "body": "@Shepmaster My mistake, I forgot to force <code>GraphView</code> to be invariant. This version should be secure against that attack."}, {"owner": {"reputation": 1552, "user_id": 3145469, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/40ef74077e497553ad7a6ce20a1fc38b?s=128&d=identicon&r=PG&f=1", "display_name": "MrMobster", "link": "https://stackoverflow.com/users/3145469/mrmobster"}, "edited": false, "score": 0, "creation_date": 1546499021, "post_id": 53986833, "comment_id": 94871751, "body": "Thanks for the in-depth answer! I still need to wrap my head around some details (like the <code>&amp;&#39;a mut &amp;&#39;a</code> notation), but I will see whether this can work for my purpose.  It would be nice if the system offered more clear ways to model such invariants. I&#39;d like to see some sort of abstract state modelling + local instance-dependent types. Rust lifetimes are great, but in their current form probably not sufficient..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548986125, "post_id": 53986833, "comment_id": 95751381, "body": "<i>forcing <code>GraphView&lt;&#39;a&gt;</code> to be invariant over <code>&#39;a</code></i> \u2014 You used <code>PhantomData&lt;&amp;&#39;a mut &amp;&#39;a ()&gt;</code>, but the page you linked to says that <code>PhantomData&lt;Cell&lt;&amp;&#39;a ()&gt;&gt;</code> is needed for lifetime invariance. Why the discrepancy?"}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549007486, "post_id": 53986833, "comment_id": 95757355, "body": "@Shepmaster There\u2019s no discrepancy; there are infinitely many types that are invariant over <code>&#39;a</code>, of which one example is <code>Cell&lt;&amp;&#39;a ()&gt;</code> (see the <code>Cell&lt;T&gt;</code> entry in the table on the page I linked), and another example is <code>&amp;&#39;a mut &amp;&#39;a ()</code> (see the <code>&amp;&#39;a mut T</code> entry in the same table). I just arbitrarily picked one that I didn\u2019t have to import anything for."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 1, "last_activity_date": 1546284043, "last_edit_date": 1546284043, "creation_date": 1546255154, "answer_id": 53986833, "question_id": 41869672, "link": "https://stackoverflow.com/questions/41869672/destructuring-a-struct-containing-a-borrow-in-a-function-argument/53986833#53986833", "title": "Destructuring a struct containing a borrow in a function argument", "body": "\n\n<p>You have a second problem that you didn\u2019t mention: how does <code>split</code> know that the user didn\u2019t pass an <code>Edge</code> from a different <code>Graph</code>?  Fortunately, it\u2019s possible to solve both problems with higher-rank trait bounds!</p>\n\n<p>First, let\u2019s have <code>Edge</code> carry a <code>PhantomData</code> marker instead of a real reference to the graph:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Edge&lt;'a&gt;(PhantomData&lt;&amp;'a mut &amp;'a ()&gt;, i32);\n</code></pre>\n\n<p>Second, let\u2019s move all the <code>Graph</code> operations into a new <code>GraphView</code> object that gets <em>consumed</em> by operations that should invalidate the identifiers:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct GraphView&lt;'a&gt; {\n    graph: &amp;'a mut Graph,\n    marker: PhantomData&lt;&amp;'a mut &amp;'a ()&gt;,\n}\n\nimpl&lt;'a&gt; GraphView&lt;'a&gt; {\n    pub fn get_edge(&amp;self) -&gt; Edge&lt;'a&gt; {\n        Edge(PhantomData, 0)\n    }\n\n    pub fn split(self, Edge(_, edge_id): Edge) {\n        self.graph.0 = self.graph.0 + edge_id;\n    }\n\n    pub fn join(self, Edge(_, edge0_id): Edge, Edge(_, edge1_id): Edge) {\n        self.graph.0 = self.graph.0 + edge0_id + edge1_id;\n    }\n}\n</code></pre>\n\n<p>Now all we have to do is guard the construction of <code>GraphView</code> objects such that there\u2019s never more than one with a given lifetime parameter <code>'a</code>.</p>\n\n<p>We can do this by (1) forcing <code>GraphView&lt;'a&gt;</code> to be <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">invariant</a> over <code>'a</code> with a <code>PhantomData</code> member as above, and (2) only ever providing a constructed <code>GraphView</code> to a closure with a higher-rank trait bound that creates a fresh lifetime each time:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Graph {\n    pub fn with_view&lt;Ret&gt;(&amp;mut self, f: impl for&lt;'a&gt; FnOnce(GraphView&lt;'a&gt;) -&gt; Ret) -&gt; Ret {\n        f(GraphView {\n            graph: self,\n            marker: PhantomData,\n        })\n    }\n}\n\nfn main() {\n    let mut graph = Graph(0);\n    graph.with_view(|view| {\n        let edge = view.get_edge();\n        view.split(edge);\n    });\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=cc50cc248b6db1deb4910a5bdd3cfa19\" rel=\"nofollow noreferrer\">Full demo on Rust Playground</a>.</p>\n\n<p>This isn\u2019t totally ideal, since the caller may have to go through contortions to put all its operations inside the closure.  But I think it\u2019s the best we can do in the current Rust language, and it does allow us to enforce a huge class of compile-time guarantees that almost no other language can express at all.  I\u2019d love to see more ergonomic support for this pattern added to the language somehow\u2014perhaps a way to create a fresh lifetime via a return value rather than a closure parameter (<code>pub fn view(&amp;mut self) -&gt; exists&lt;'a&gt; GraphView&lt;'a&gt;</code>)?</p>\n"}], "owner": {"reputation": 1552, "user_id": 3145469, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/40ef74077e497553ad7a6ce20a1fc38b?s=128&d=identicon&r=PG&f=1", "display_name": "MrMobster", "link": "https://stackoverflow.com/users/3145469/mrmobster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 640, "favorite_count": 1, "answer_count": 1, "score": 6, "last_activity_date": 1546284043, "creation_date": 1485420414, "last_edit_date": 1485440060, "question_id": 41869672, "link": "https://stackoverflow.com/questions/41869672/destructuring-a-struct-containing-a-borrow-in-a-function-argument", "title": "Destructuring a struct containing a borrow in a function argument", "body": "<p>I am trying to implement a system that would use borrow checking/lifetimes in order to provide safe custom indices on a collection. Consider the following code:</p>\n\n<pre><code>struct Graph(i32);\n\nstruct Edge&lt;'a&gt;(&amp;'a Graph, i32);\n\nimpl Graph {\n    pub fn get_edge(&amp;self) -&gt; Edge {\n        Edge(&amp;self, 0)\n    }\n\n    pub fn split(&amp;mut self, Edge(_, edge_id): Edge) {\n        self.0 = self.0 + edge_id;\n    }\n\n    pub fn join(&amp;mut self, Edge(_, edge0_id): Edge, Edge(_, edge1_id): Edge) {\n        self.0 = self.0 + edge0_id + edge1_id;\n    }\n}\n\n\nfn main() {\n    let mut graph = Graph(0);\n    let edge = graph.get_edge();\n    graph.split(edge)\n}\n</code></pre>\n\n<p>References to the graph borrowed by the <code>Edge</code> struct should be dropped when methods such as <code>split</code> or <code>join</code> are called. This would fulfill the API invariant that all edge indices must be destroyed when the graph is mutated. However, the compiler doesn't get it. It fails with messages like</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `graph` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:23:5\n   |\n22 |     let edge = graph.get_edge();\n   |                ----- immutable borrow occurs here\n23 |     graph.split(edge)\n   |     ^^^^^ mutable borrow occurs here\n24 | }\n   | - immutable borrow ends here\n</code></pre>\n\n<p>If I understand this correctly, the compiler fails to realise that the borrowing of the graph that happened in the edge struct is actually being released when the function is called. Is there a way to teach the compiler what I am trying to do here?</p>\n\n<p>Bonus question: is there a way to do exactly the same but without actually borrowing the graph in the <code>Edge</code> struct? The edge struct is only used as a temporary for the purpose of traversal and will <em>never</em> be part of an external object state (I have 'weak' versions of the edge for that).   </p>\n\n<p><strong>Addendum</strong>: After some digging around, it seems to be really far from trivial. First of all, <code>Edge(_, edge_id)</code> does not actually destructure the <code>Edge</code>, because <code>_</code> does not get bound at all (yes, <code>i32</code> is Copy which makes things even more complicated, but this is easily remedied by wrapping it into a non-Copy struct). Second, even if I completely destructure <code>Edge</code> (i.e. by doing it in a separate scope), the reference to the graph is still there, even though it should have been moved (this must be a bug). It only works if I perform the destructuring in a separate function. Now, I have an idea how to circumvent it (by having a separate object that describes a state change and destructures the indices as they are supplied), but this becomes very awkward very quickly. </p>\n"}, {"tags": ["vector", "types", "rust"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1485420573, "post_id": 41869608, "comment_id": 70921492, "body": "This will not work. For many reasons (the least of which being your actual assignment does not compile anyway). If you remove the <code>struct</code> entirely and just try assigning your attempt at a (I think jagged?) vector, you&#39;ll see the compiler will not allow it even if you leave the compiler to infer the type for you. For example: <code>let fuji = vec![1, 2, [[3, 4, 5], 6, [7, 8, 9]]];</code>. I would suggest <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">working your way through the Rust Book</a> to get a better understanding of what Rust and vectors in particular can do in Rust."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1485420746, "post_id": 41869608, "comment_id": 70921599, "body": "In addition to my comment above: A tree-like structure is <i>not an easy thing to build</i> in Rust. If you&#39;re uncomfortable with the general syntax/use of Rust I would definitely advise against trying to implement any sort of tree structure that relies heavily on relationships between nodes. At least until you have a solid grasp of ownership, references and how to use unsafe code in Rust."}, {"owner": {"reputation": 399, "user_id": 7421598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cXstR.jpg?s=128&g=1", "display_name": "Eva Red", "link": "https://stackoverflow.com/users/7421598/eva-red"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1485421699, "post_id": 41869608, "comment_id": 70922086, "body": "@S Thank U for your advice.It seems that I write Rust in a python way..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1485438277, "post_id": 41869608, "comment_id": 70931307, "body": "@SimonWhitehead a <b>tree</b> is just fine in Rust. A <b>graph</b> is hard."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 2, "last_activity_date": 1485425119, "creation_date": 1485425119, "answer_id": 41870992, "question_id": 41869608, "link": "https://stackoverflow.com/questions/41869608/what-is-the-type-of-a-vector-that-contains-another-vector/41870992#41870992", "title": "What is the type of a vector that contains another vector?", "body": "<p>Rust's <code>Vec</code>tor is written <code>Vec&lt;T&gt;</code> which means that its every element must be of type <code>T</code>. If you need a vector of vectors, this is possible - then it's a <code>Vec&lt;Vec&lt;T&gt;&gt;</code> (every element is a <code>Vec&lt;T&gt;</code> now).</p>\n\n<p>In your code you wrote:</p>\n\n<pre><code>vec![1, 2, [[3, 4, 5], 6, [7, 8, 9]]\n</code></pre>\n\n<p>Which is an attempt to create a vector containing integers and a fixed-length (3) array consisting of fixed-length (3) arrays of integers <em>and</em> integers. Whew! This is far from homogeneity required by the <code>Vec</code> data type.</p>\n\n<p>You could create a vector of vectors like this:</p>\n\n<pre><code>let v: Vec&lt;Vec&lt;i32&gt;&gt; = vec![vec![1,2,3], vec![4,5], vec![6]];\n</code></pre>\n\n<p>Since a vector's (unlike an array's) type is not bound to its length, this is a valid <code>Vec</code>tor of <code>Vec</code>tors which, in turn, are valid because they contain only integers (<code>i32</code>).</p>\n\n<p>I recommend going through <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">The Rust Book</a>, the best source for basic Rust knowledge.</p>\n"}], "owner": {"reputation": 399, "user_id": 7421598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cXstR.jpg?s=128&g=1", "display_name": "Eva Red", "link": "https://stackoverflow.com/users/7421598/eva-red"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 41870992, "answer_count": 1, "score": 0, "last_activity_date": 1485425119, "creation_date": 1485420166, "last_edit_date": 1485424147, "question_id": 41869608, "link": "https://stackoverflow.com/questions/41869608/what-is-the-type-of-a-vector-that-contains-another-vector", "title": "What is the type of a vector that contains another vector?", "body": "<pre><code>struct Tree&lt;T&gt; {\n    leaf: Vec&lt;?&gt;\n}\n\nfn main() {\n    let fuji = Tree { leaf: vec![1, 2, [[3, 4, 5], 6, [7, 8, 9]] };\n}\n</code></pre>\n\n<p>I don't know what I should put in the <code>Vec&lt;&gt;</code> so that the code above can run.</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 4, "last_activity_date": 1485423256, "last_edit_date": 1495540897, "creation_date": 1485418415, "answer_id": 41869202, "question_id": 41869048, "link": "https://stackoverflow.com/questions/41869048/is-there-a-trait-for-scalar-castable-types/41869202#41869202", "title": "Is there a trait for scalar-castable types?", "body": "<p>No, there isn't a trait covering this functionality. Only some casts are possible and their full list can be found in <a href=\"https://doc.rust-lang.org/book/casting-between-types.html\" rel=\"nofollow noreferrer\">The Book</a>.</p>\n\n<p>As for your <code>Add</code> implementation, you should modify it in the following manner in order for it to work:</p>\n\n<pre><code>use std::ops::Add;\n\nstruct Test&lt;T: Add&gt;{\n    m: T\n}\n\nimpl&lt;T&gt; Add for Test&lt;T&gt; where T: Add&lt;Output = T&gt; {\n    type Output = Self;\n\n    fn add(self, rhs: Self) -&gt; Self {\n        Test { m: self.m + rhs.m }\n    }\n}\n</code></pre>\n\n<p>You can find a good explanation why the additional <code>T: Add&lt;Output = T&gt;</code> bound is necessary in <a href=\"https://stackoverflow.com/a/29184450/1870153\">this SO answer</a>. <a href=\"https://stackoverflow.com/a/39170088/1870153\">This one</a> might be even closer to your exact case.</p>\n"}], "owner": {"reputation": 780, "user_id": 4669978, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qoS02.jpg?s=128&g=1", "display_name": "equal-l2", "link": "https://stackoverflow.com/users/4669978/equal-l2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 0, "accepted_answer_id": 41869202, "answer_count": 1, "score": 4, "last_activity_date": 1485423256, "creation_date": 1485417669, "last_edit_date": 1485420138, "question_id": 41869048, "link": "https://stackoverflow.com/questions/41869048/is-there-a-trait-for-scalar-castable-types", "title": "Is there a trait for scalar-castable types?", "body": "<p>I'm stuck with this code for operator overloading.</p>\n\n\n\n<pre><code>use std::ops::Add;\n\nstruct Test&lt;T: Add&gt;{\n    m:T\n}\n\nimpl&lt;T:Add&gt; Add for Test&lt;T&gt;{\n    type Output = Test&lt;T&gt;;\n    fn add(self, rhs: Test&lt;T&gt;) -&gt; Test&lt;T&gt; {\n        Test { m: (self.m + rhs.m) as T }\n    }\n}\n</code></pre>\n\n<p>I cannot cast <code>(self.m + rhs.m)</code> to <code>T</code> because it is a <code>non-scalar cast</code>.</p>\n\n<p>Is there a trait for types scalar-castable to <code>T</code>?</p>\n"}, {"tags": ["io", "rust"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1485415668, "post_id": 41868526, "comment_id": 70919228, "body": "Does the <code>&#47;files</code> directory exist?"}, {"owner": {"reputation": 27, "user_id": 3592255, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/777527630/picture?type=large", "display_name": "Bj&#246;rn", "link": "https://stackoverflow.com/users/3592255/bj%c3%b6rn"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1485415797, "post_id": 41868526, "comment_id": 70919277, "body": "Yes it has been created"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1485416283, "post_id": 41868526, "comment_id": 70919456, "body": "Can you post a <i>complete</i> minimal example that demonstrates the problem?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485416337, "post_id": 41868526, "comment_id": 70919481, "body": "Note: you should be able to use <code>Path::new(&quot;&#47;files&#47;&quot;).join(Path::new(&amp;filename))</code> as argument, without invoking the <code>format</code> macro or calling <code>as_str()</code> at the end (you should avoid strings as they validate that their content is valid Unicode and note all files are)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1485416463, "post_id": 41868526, "comment_id": 70919531, "body": "Regarding your question: it&#39;s pretty difficult to diagnose the issue without knowing what the file system looks like. What does <code>ls -ls &#47;files&#47;</code> return? (Post both the command you actually play and its output)."}, {"owner": {"reputation": 27, "user_id": 3592255, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/777527630/picture?type=large", "display_name": "Bj&#246;rn", "link": "https://stackoverflow.com/users/3592255/bj%c3%b6rn"}, "edited": false, "score": 0, "creation_date": 1485421759, "post_id": 41868526, "comment_id": 70922116, "body": "Matthieu, no luck with: let f = File::create(Path::new(&quot;/files/&quot;).join(Path::new(&amp;filename))&zwnj;&#8203;); Same error.  ls /files/ gives an empty response: PS C:\\trust\\svd2rust\\target\\debug&gt; ls .\\files\\ PS C:\\trust\\svd2rust\\target\\debug&gt;"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1485421892, "post_id": 41868526, "comment_id": 70922182, "body": "Can you print out the filename instead of passing it to <code>File::create</code>, to check that it&#39;s what you expect?  Where is <code>filename</code> coming from (e.g. does it have a trailing newline from input, etc.)"}, {"owner": {"reputation": 27, "user_id": 3592255, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/777527630/picture?type=large", "display_name": "Bj&#246;rn", "link": "https://stackoverflow.com/users/3592255/bj%c3%b6rn"}, "edited": false, "score": 0, "creation_date": 1485422152, "post_id": 41868526, "comment_id": 70922330, "body": "Yes, I can create files in the base folder so I am guessing it is fine:  &quot;I have managed to create the file in the same directory as the executable with:  let f = File::create(format!(&quot;{}&quot;,filename));&quot; Edit: Printing the filename also works"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1485423232, "post_id": 41868526, "comment_id": 70922885, "body": "Apart from possible problems with Windows paths using <code>` instead of </code>/` (I&#39;m never sure when the latter is also ok), wouldn&#39;t <code>&#47;files&#47;</code> point to <code>c:\\files` rather than </code>.\\files`?"}, {"owner": {"reputation": 27, "user_id": 3592255, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/777527630/picture?type=large", "display_name": "Bj&#246;rn", "link": "https://stackoverflow.com/users/3592255/bj%c3%b6rn"}, "edited": false, "score": 0, "creation_date": 1485424208, "post_id": 41868526, "comment_id": 70923462, "body": "You are correct! Using files/ instead of /files/ solves the problem! Thanks alot"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1485438370, "post_id": 41868526, "comment_id": 70931364, "body": "@MatthieuM. <code>Path::new(&quot;&#47;files&#47;&quot;).join(&amp;filename)</code> should be sufficient (<code>AsRef&lt;Path&gt;</code>)"}], "answers": [{"tags": [], "owner": {"reputation": 27, "user_id": 3592255, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/777527630/picture?type=large", "display_name": "Bj&#246;rn", "link": "https://stackoverflow.com/users/3592255/bj%c3%b6rn"}, "is_accepted": true, "score": 1, "last_activity_date": 1485424483, "creation_date": 1485424483, "answer_id": 41870806, "question_id": 41868526, "link": "https://stackoverflow.com/questions/41868526/creating-a-file-in-a-folder/41870806#41870806", "title": "Creating a file in a folder", "body": "<p>Using \"files/\" instead of \"/files/\" solved the problem.</p>\n\n<p>It seems \"/files/\" references to the absolute path of C:\\files, while \"files/\" references to the relative path of the executable.</p>\n\n<p>So when using \"/files/\" it did't work since there was no folder C:\\Files.</p>\n"}], "owner": {"reputation": 27, "user_id": 3592255, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/777527630/picture?type=large", "display_name": "Bj&#246;rn", "link": "https://stackoverflow.com/users/3592255/bj%c3%b6rn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 41870806, "answer_count": 1, "score": 0, "last_activity_date": 1485438406, "creation_date": 1485415304, "last_edit_date": 1485438406, "question_id": 41868526, "link": "https://stackoverflow.com/questions/41868526/creating-a-file-in-a-folder", "title": "Creating a file in a folder", "body": "<p>How do I create a file in a certain folder in Rust?</p>\n\n<p>I have tried the following approaches:</p>\n\n<pre><code>let f = File::create(Path::new(format!(\"{}{}\",\"/files/\",filename).as_str()));\n\nlet f = File::create(format!(\"{}{}\",\"/files/\",filename));\n</code></pre>\n\n<p>Both result in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>The system cannot find the path specified. (os error 3)\n</code></pre>\n\n<p>I have managed to create the file in the same directory as the executable with:</p>\n\n<pre><code>let f = File::create(format!(\"{}\",filename));\n</code></pre>\n\n<p>So how do I go about creating files in a specific directory?</p>\n\n<p><code>ls</code> on basefolder:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>PS C:\\trust\\svd2rust\\target\\debug&gt; ls\n\n    Directory: C:\\trust\\svd2rust\\target\\debug\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----       2017-01-24     12:13                .fingerprint\nd-----       2017-01-24     12:13                build\nd-----       2017-01-26     10:06                deps\nd-----       2017-01-24     12:13                examples\nd-----       2017-01-26     07:18                files\nd-----       2017-01-24     12:13                incremental\nd-----       2017-01-24     12:13                native\n-a----       2017-01-24     12:13              0 .cargo-lock\n-a----       2017-01-26     10:06        1079240 libsvd2rust.rlib\n-a----       2017-01-24     21:08          27608 log.rs\n-a----       2017-01-24     13:55          27372 log2.rs\n-a----       2016-08-23     15:07         565888 STM32F401x.svd\n-a----       2016-08-23     15:07         912360 STM32F401xE.svd\n-a----       2016-08-23     15:07        1907985 STM32F40x.svd\n-a----       2017-01-26     10:06       11761561 svd2rust.exe\n</code></pre>\n"}]