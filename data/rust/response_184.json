[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1531945259, "post_id": 51410226, "comment_id": 89792216, "body": "<code>struct{}{}</code> is not valid Rust syntax."}], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 4, "last_activity_date": 1531945341, "creation_date": 1531945341, "answer_id": 51410409, "question_id": 51410226, "link": "https://stackoverflow.com/questions/51410226/how-does-one-generically-duplicate-a-value-in-rust/51410409#51410409", "title": "How does one generically duplicate a value in Rust?", "body": "<p><code>Copy</code> implies <code>Clone</code>. You can just use <code>.clone()</code> for your duplicate function.</p>\n"}, {"comments": [{"owner": {"reputation": 226, "user_id": 7525350, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8684620dc1923d467f336e062c5e90c1?s=128&d=identicon&r=PG&f=1", "display_name": "tillyboy", "link": "https://stackoverflow.com/users/7525350/tillyboy"}, "edited": false, "score": 0, "creation_date": 1531946817, "post_id": 51410481, "comment_id": 89792906, "body": "Doesn&#39;t your proposed <code>duplicate</code> function take ownership of <code>x</code>? That is exactly what I wanted to circumvent."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 226, "user_id": 7525350, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8684620dc1923d467f336e062c5e90c1?s=128&d=identicon&r=PG&f=1", "display_name": "tillyboy", "link": "https://stackoverflow.com/users/7525350/tillyboy"}, "edited": false, "score": 0, "creation_date": 1531946892, "post_id": 51410481, "comment_id": 89792944, "body": "@tillyboy yes, which is why I added <code>&#47;&#47; sic</code> to it. The code you&#39;ve written doesn&#39;t show any need for anything else."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1531945710, "creation_date": 1531945710, "answer_id": 51410481, "question_id": 51410226, "link": "https://stackoverflow.com/questions/51410226/how-does-one-generically-duplicate-a-value-in-rust/51410481#51410481", "title": "How does one generically duplicate a value in Rust?", "body": "<blockquote>\n  <p>This assumes that every value in Rust implements either the <code>Clone</code> or the <code>Copy</code> trait. Is this assumption true?</p>\n</blockquote>\n\n<p>No.</p>\n\n<blockquote>\n  <p>is it possible to define a trait <code>Duplicate</code></p>\n</blockquote>\n\n<p>Yes, but it doesn't seem to serve any value beyond what the existing <code>Clone</code> trait does.</p>\n\n<hr>\n\n<p>You may wish to learn more about ownership, as you can make your code compile without doing any cloning at all:</p>\n\n<pre><code>fn duplicate&lt;T&gt;(x: T) -&gt; T { x } // sic\n\nfn main() {\n    let a = 7;\n    let b = duplicate(a);\n\n    let a = String::from(\"example\");\n    let b = duplicate(a);\n}\n</code></pre>\n\n<p>If you actually want to duplicate, just use <code>Clone</code>, as <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"noreferrer\">anything that implements <code>Copy</code> must implement <code>Clone</code></a>:</p>\n\n<pre><code>pub trait Copy: Clone { }\n</code></pre>\n\n<p>You will usually see it as the method syntax:</p>\n\n<pre><code>fn main() {\n    let a = 7;\n    let b: i32 = a.clone();\n\n    let a = String::from(\"example\");\n    let b: String = a.clone();\n}\n</code></pre>\n\n<p>If you want a function, use the fully-qualified syntax:</p>\n\n<pre><code>fn main() {\n    let a = 7;\n    let b: i32 = Clone::clone(&amp;a);\n\n    let a = String::from(\"example\");\n    let b: String = Clone::clone(&amp;a);\n}\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>fn main() {\n    let a = 7;\n    let b: i32 = i32::clone(&amp;a);\n\n    let a = String::from(\"example\");\n    let b: String = String::clone(&amp;a);\n}\n</code></pre>\n\n<p>All the explicit types (<code>: foo</code>) are redundant here, just for demonstration purposes.</p>\n"}], "owner": {"reputation": 226, "user_id": 7525350, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8684620dc1923d467f336e062c5e90c1?s=128&d=identicon&r=PG&f=1", "display_name": "tillyboy", "link": "https://stackoverflow.com/users/7525350/tillyboy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2581, "favorite_count": 0, "accepted_answer_id": 51410481, "answer_count": 2, "score": -2, "last_activity_date": 1531945710, "creation_date": 1531944514, "last_edit_date": 1531945245, "question_id": 51410226, "link": "https://stackoverflow.com/questions/51410226/how-does-one-generically-duplicate-a-value-in-rust", "title": "How does one generically duplicate a value in Rust?", "body": "<p>Primitives should be passed by value as usual and anything that is passed by reference ('borrowed') should be cloned. Something like:</p>\n\n<pre><code>let a = 7;\nlet b = duplicate(a);  // let b = a;\n\nlet a = struct{}{};\nlet b = duplicate(a);  // let b = a.clone();\n</code></pre>\n\n<p>This assumes that every value in Rust implements either the <code>Clone</code> or the <code>Copy</code> trait. Is this assumption true? If not, is it possible to define a trait <code>Duplicate</code> that is kind of an <code>enum { Clone, Copy }</code>?</p>\n"}, {"tags": ["rust", "cpython"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531942611, "post_id": 51409744, "comment_id": 89790921, "body": "Which part of the code are you expecting to know about the directory <code>pyth</code>?"}, {"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531943072, "post_id": 51409744, "comment_id": 89791167, "body": "@Shepmaster, this part: <code>let module = cpython::PyModule::import(py, &quot;fibo&quot;).unwrap();</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531943189, "post_id": 51409744, "comment_id": 89791219, "body": "Sorry, I don&#39;t think I stated my question clearly. <b>Why</b> would <code>cpython::PyModule::import</code> know about the directory named <code>pyth</code>? What if you had called it <code>pyt</code> or <code>pytho</code> or <code>i_put_my_code_in_here</code>? Is <code>pyth</code> some special, hard-coded directory? If so, can you point to some documentation that describes that?"}, {"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531943563, "post_id": 51409744, "comment_id": 89791395, "body": "@Shepmaster,  mm, I just need it to se the module <code>fibo.py</code> so thought it may be better to put it in a separate folder, thats all :)"}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1531982439, "post_id": 51414107, "comment_id": 89802959, "body": "Note that this solution will embed the Python code in your Rust executable, so that you will need to recompile the Rust executable each time the Python code changes. See my answer for solutions that keep the Python file separate."}], "tags": [], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "is_accepted": false, "score": 0, "last_activity_date": 1532019734, "last_edit_date": 1532019734, "creation_date": 1531972545, "answer_id": 51414107, "question_id": 51409744, "link": "https://stackoverflow.com/questions/51409744/modulenotfounderror-when-importing-a-python-module-using-the-cpython-crate/51414107#51414107", "title": "ModuleNotFoundError when importing a Python module using the cpython crate", "body": "<p>I found a solution.</p>\n\n<p><code>main.rs</code></p>\n\n<pre><code>extern crate cpython;\n\nuse cpython::{PyModule, PyResult, Python};\n\nconst FIBO_PY: &amp;'static str = include_str!(\"../pyth/fibo.py\");\n\nfn main() {\n    let gil = Python::acquire_gil();\n    let py = gil.python();\n\n    example(py).unwrap();\n}\n\nfn example(py: Python&lt;'_&gt;) -&gt; PyResult&lt;()&gt; {\n    let m = module_from_str(py, \"fibo\", FIBO_PY)?;\n\n    let out: Vec&lt;i32&gt; = m.call(py, \"fib\", (2,), None)?.extract(py)?;\n    println!(\n        \"successfully found fibo.py at compiletime.  Output: {:?}\",\n        out\n    );\n\n    Ok(())\n}\n\n/// Import a module from the given file contents.\n///\n/// This is a wrapper around `PyModule::new` and `Python::run` which simulates\n/// the behavior of the builtin function `exec`. `name` will be used as the\n/// module's `__name__`, but is not otherwise important (it does not need\n/// to match the file's name).\n\nfn module_from_str(py: Python&lt;'_&gt;, name: &amp;str, source: &amp;str) -&gt; PyResult&lt;PyModule&gt; {\n    let m = PyModule::new(py, name)?;\n\n    let builtins = cpython::PyModule::import(py, \"builtins\").unwrap();\n    m.dict(py).set_item(py, \"__builtins__\", &amp;builtins).unwrap();\n\n   // OR\n    m.add(py, \"__builtins__\", py.import(\"builtins\")?)?;\n    let m_locals = m.get(py, \"__dict__\")?.extract(py)?;\n\n    // To avoid multiple import, and to add entry to the cache in `sys.modules`.\n    let sys = cpython::PyModule::import(py, \"sys\").unwrap();\n    sys.get(py, \"modules\").unwrap().set_item(py, name, &amp;m).unwrap();\n\n    // Finally, run the moduke\n    py.run(source, Some(&amp;m_locals), None)?;\n    Ok(m)\n}\n</code></pre>\n\n<p><code>fibo.py</code></p>\n\n<pre class=\"lang-py prettyprint-override\"><code>def fib(n):   # return Fibonacci series up to n\n    print('Hello from python!')\n    result = []\n    a, b = 0, 1\n    while a &lt; n:\n        result.append(a)\n        a, b = b, a+b\n    return result\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "edited": false, "score": 0, "creation_date": 1532020010, "post_id": 51415918, "comment_id": 89827847, "body": "What is the module to call: <code>PyList</code>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "edited": false, "score": 0, "creation_date": 1532067324, "post_id": 51415918, "comment_id": 89842143, "body": "<a href=\"https://dgrunwald.github.io/rust-cpython/doc/cpython/struct.PyList.html\" rel=\"nofollow noreferrer\">dgrunwald.github.io/rust-cpython/doc/cpython/struct.PyList.h&zwnj;&#8203;tml</a>"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1532004907, "last_edit_date": 1532004907, "creation_date": 1531982366, "answer_id": 51415918, "question_id": 51409744, "link": "https://stackoverflow.com/questions/51409744/modulenotfounderror-when-importing-a-python-module-using-the-cpython-crate/51415918#51415918", "title": "ModuleNotFoundError when importing a Python module using the cpython crate", "body": "<p>I see two solutions if you want to keep <code>fibo.py</code> as a separate file from your executable:</p>\n\n<h1>You can add the <code>pyth</code> folder to the Python path:</h1>\n\n<pre><code>let sys = py.import(\"sys\")?;\nPyList::downcast_from(py, sys.get(\"path\")?)?.insert_item(py, 0, \"pyth\");\nlet module = py.import(\"fibo\")?;\n</code></pre>\n\n<p>This assumes that the Rust executable is run from the parent folder or the project, meaning that <code>pyth</code> is a subfolder of the current path.</p>\n\n<h1>Or you can import <code>pyth.fibo</code>, just like you would in Python:</h1>\n\n<pre><code>let module = py.import(\"pyth.fibo\")?;\n</code></pre>\n\n<p>This assumes that <code>pyth</code> is somewhere in the Python path (see first solution if you need to add the parent folder to the path).</p>\n"}], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 355, "favorite_count": 0, "accepted_answer_id": 51415918, "answer_count": 2, "score": -1, "last_activity_date": 1532019734, "creation_date": 1531942374, "last_edit_date": 1531943161, "question_id": 51409744, "link": "https://stackoverflow.com/questions/51409744/modulenotfounderror-when-importing-a-python-module-using-the-cpython-crate", "title": "ModuleNotFoundError when importing a Python module using the cpython crate", "body": "<p>I wrote the Rust code:</p>\n\n<p><code>myapp/src/main.rs</code></p>\n\n<pre><code>extern crate cpython;\n\nuse cpython::Python;\n\nfn main() {\n    let gil = Python::acquire_gil();\n    println!(\"Hello from Rust!\");\n    let py = gil.python();\n    let module = cpython::PyModule::import(py, \"fibo\").unwrap();\n\n    module.call(py, \"fib\", (1,), None).unwrap();\n}\n</code></pre>\n\n<p>And saved the Python module as <code>myapp/pyth/fibo.py</code> </p>\n\n<p><a href=\"https://i.stack.imgur.com/j798B.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/j798B.png\" alt=\"filesystem layout\"></a></p>\n\n<p>But I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: PyErr { ptype: &lt;class 'ModuleNotFoundError'&gt;, pvalue: Some(ModuleNotFoundError(\"No module named 'fibo'\",)), ptraceback: None }', libcore/result.rs:945:5\n</code></pre>\n\n<p>The part of the code I'm expecting to know about the directory <code>pyth</code> is: <code>let module = cpython::PyModule::import(py, \"fibo\").unwrap();</code></p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531939610, "post_id": 51408853, "comment_id": 89789382, "body": "Don&#39;t use <code>and_then</code> for that; use <code>if let</code> instead"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531939783, "post_id": 51408853, "comment_id": 89789493, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/44610594/155423\">Rust Deserialize JSON with top level array</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51408853/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531939823, "post_id": 51408853, "comment_id": 89789522, "body": "TL;DR the duplicate: Return a <code>Vec&lt;HistoricalEvent&gt;</code>; your JSON has no object with the key <code>items</code>."}, {"owner": {"reputation": 3666, "user_id": 2421349, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/bfce06c5facb3ecb1acc1b2ef895f321?s=128&d=identicon&r=PG&f=1", "display_name": "kibowki", "link": "https://stackoverflow.com/users/2421349/kibowki"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531940127, "post_id": 51408853, "comment_id": 89789702, "body": "Ahh, oops - that did it, thanks.  We can mark this question as already answered.  Also switched to using <code>if let</code> instead - why is <code>if let</code> better than <code>and_then</code> in this scenario?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531940297, "post_id": 51408853, "comment_id": 89789798, "body": "<code>and_then</code> is used to <i>transform</i> the <code>Option</code> from one thing to another when the closure returns another <code>Option</code>. <code>insert</code> happens to return an <code>Option</code> (the old value). <code>if let</code> is appropriate for side-effects, which is what you are doing."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531940343, "post_id": 51408853, "comment_id": 89789827, "body": "It&#39;s also idiomatic Rust to not have the explicit return at the end of a block. Just <code>send_request(&quot;info&#47;history&quot;, Some(params))</code>"}], "owner": {"reputation": 3666, "user_id": 2421349, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/bfce06c5facb3ecb1acc1b2ef895f321?s=128&d=identicon&r=PG&f=1", "display_name": "kibowki", "link": "https://stackoverflow.com/users/2421349/kibowki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1705, "favorite_count": 0, "closed_date": 1531940158, "answer_count": 0, "score": 1, "last_activity_date": 1531939574, "creation_date": 1531938928, "last_edit_date": 1531939574, "question_id": 51408853, "link": "https://stackoverflow.com/questions/51408853/invalid-type-map-expected-a-sequence-when-trying-to-deserialize-array-of-obj", "closed_reason": "Duplicate", "title": "&quot;invalid type: map, expected a sequence&quot; when trying to deserialize array of objects with Serde", "body": "<p>I'm trying to write an API wrapper with Serde.  I'm getting this error when trying to run my program:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Err(Error { kind: Json(Error(\"invalid type: map, expected a sequence\", line: 1, column: 2)), url: None })\n</code></pre>\n\n<p>It sounds like Serde is encountering a <code>{</code> where it expects a <code>[</code> based on the way my models are currently setup, but maybe I'm off base with this theory.</p>\n\n<p>The JSON returned directly from the endpoint is:</p>\n\n<pre><code>[\n  {\n    \"title\": \"Pad Abort Test\",\n    \"event_date_utc\": \"2015-05-06T13:00:00Z\",\n    \"event_date_unix\": 1430917200,\n    \"flight_number\": null,\n    \"details\": \"Crew Dragon tests launch abort system, which can provide astronauts with escape capability all the way to orbit.\",\n    \"links\": {\n      \"reddit\": \"https:\\/\\/www.reddit.com\\/r\\/spacex\\/comments\\/3527zv\\/official_video_pad_abort_test_2015\\/\",\n      \"article\": \"https:\\/\\/spaceflightnow.com\\/2015\\/04\\/21\\/dragon-pad-abort-test-set-for-early-may\\/\",\n      \"wikipedia\": \"https:\\/\\/en.wikipedia.org\\/wiki\\/Pad_abort_test\"\n    }\n  },\n  {\n    \"title\": \"SpaceX Awarded Commercial Crew Contract\",\n    \"event_date_utc\": \"2014-09-16T01:00:00Z\",\n    \"event_date_unix\": 1410829200,\n    \"flight_number\": null,\n    \"details\": \"NASA awards $2.6 billion SpaceX contract to fly American astronauts.\",\n    \"links\": {\n      \"reddit\": null,\n      \"article\": \"https:\\/\\/www.washingtonpost.com\\/news\\/the-switch\\/wp\\/2014\\/09\\/16\\/nasa-awards-space-contract-to-boeing-and-spacex\\/?utm_term=.d6388390d071\",\n      \"wikipedia\": null\n    }\n  }\n]\n</code></pre>\n\n<p>I know my code is wrong - I just don't know how to fix it.  Here it is:</p>\n\n<p><strong>models.rs</strong></p>\n\n<pre><code>#[derive(Debug, Deserialize)]\npub struct HistoricalEvents {\n    items: Vec&lt;HistoricalEvent&gt;,\n}\n\n#[derive(Debug, Deserialize)]\npub struct HistoricalEvent {\n    title: String,\n    event_date_utc: String,\n    event_date_unix: u64,\n    flight_number: Option&lt;u32&gt;,\n    details: Option&lt;String&gt;,\n    links: Links,\n}\n\n#[derive(Debug, Deserialize)]\nstruct Links {\n    reddit: Option&lt;String&gt;,\n    article: Option&lt;String&gt;,\n    wikipedia: Option&lt;String&gt;,\n}\n</code></pre>\n\n<p>part of <strong>lib.rs</strong></p>\n\n<pre><code>pub fn history(\n    start_date: Option&lt;String&gt;,\n    end_date: Option&lt;String&gt;,\n    flight_number: Option&lt;u32&gt;,\n    sort_dir: Option&lt;SortDir&gt;,\n) -&gt; Result&lt;HistoricalEvents, failure::Error&gt; {\n    let mut params = HashMap::new();\n\n    start_date.and_then(|string| params.insert(\"start\", string));\n\n    end_date.and_then(|string| params.insert(\"end\", string));\n\n    flight_number.and_then(|num| params.insert(\"flight_number\", num.to_string()));\n\n    sort_dir.and_then(|dir| params.insert(\"order\", dir.to_string()));\n\n    return send_request(\"info/history\", Some(params));\n}\n\nfn send_request&lt;T&gt;(\n    endpoint: &amp;str,\n    params: Option&lt;HashMap&lt;&amp;str, String&gt;&gt;,\n) -&gt; Result&lt;T, failure::Error&gt;\nwhere\n    T: DeserializeOwned,\n{\n    let base = &amp;(\"https://api.spacexdata.com/v2/\".to_owned() + endpoint);\n    let url = match params {\n        Some(map) =&gt; Url::parse_with_params(base, map),\n        None =&gt; Url::parse(base),\n    };\n    let client = Client::new();\n    let mut request = client.get(url.unwrap().as_str());\n    let mut response = request.send()?;\n    Ok(response.json()?)\n}\n</code></pre>\n"}, {"tags": ["authentication", "routing", "rust", "rust-actix"], "answers": [{"comments": [{"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "edited": false, "score": 2, "creation_date": 1532279067, "post_id": 51412273, "comment_id": 89903235, "body": "It&#39;s worth mentioning the any extracted information in the Middleware can be &quot;saved&quot; into the request using the <code>.extensions()</code> map."}, {"owner": {"reputation": 659, "user_id": 172106, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/0f55f3b9b2cdd268ac9a2ef47e3d684c?s=128&d=identicon&r=PG", "display_name": "turboladen", "link": "https://stackoverflow.com/users/172106/turboladen"}, "edited": false, "score": 0, "creation_date": 1544637088, "post_id": 51412273, "comment_id": 94349887, "body": "Adding middleware to a scope is really helpful to know--from the actix docs, I wasn&#39;t aware you could add it in to any level beside the root/app level."}], "tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": true, "score": 2, "last_activity_date": 1537013039, "last_edit_date": 1537013039, "creation_date": 1531956312, "answer_id": 51412273, "question_id": 51408376, "link": "https://stackoverflow.com/questions/51408376/is-there-a-good-way-to-implement-an-authentication-authorization-check-at-the/51412273#51412273", "title": "Is there a good way to implement an authentication / authorization check at the Actix route level?", "body": "<p>What you are looking for is <a href=\"https://actix.rs/docs/middleware/\" rel=\"nofollow noreferrer\">middleware</a>.</p>\n\n<p>You can then add your middleware to the scope:</p>\n\n<pre><code>// Create middleware\nstruct AuthMiddleware;\n\nimpl Middleware&lt;AppState&gt; for AuthMiddleware {\n    fn start(&amp;self, req: &amp;mut HttpRequest&lt;AppState&gt;) -&gt; Result&lt;Started&gt; {\n        unimplemented!() // implement your auth logic here\n    }\n}\n\n// later:\n\nApp::with_state(my_state)\n    .scope(\"/api\", |s| s\n        .middleware(AuthMiddleware) // add your middleware to the scope\n        .nested(\"/doorlock\", routes::doorlock)\n        .resource(\"/config{path:.*}\", |r| {\n            r.get().with(routes::config::read);\n            r.put().with(routes::config::write);\n            r.delete().with(routes::config::delete);\n        })\n);\n</code></pre>\n"}], "owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 489, "favorite_count": 1, "accepted_answer_id": 51412273, "answer_count": 1, "score": 2, "last_activity_date": 1537013039, "creation_date": 1531936995, "last_edit_date": 1531939491, "question_id": 51408376, "link": "https://stackoverflow.com/questions/51408376/is-there-a-good-way-to-implement-an-authentication-authorization-check-at-the", "title": "Is there a good way to implement an authentication / authorization check at the Actix route level?", "body": "<p>My API routes are collected into a scope like so:</p>\n\n<pre><code>.scope(\"/api\", |s| s\n        .nested(\"/doorlock\", routes::doorlock)\n        .resource(\"/config{path:.*}\", |r| {\n            r.get().with(routes::config::read);\n            r.put().with(routes::config::write);\n            r.delete().with(routes::config::delete);\n        })\n)\n</code></pre>\n\n<p>I am thinking about adding a route-level protection, something that would either pass-through or return a <code>401 Unauthorizated</code> response like so:</p>\n\n<pre><code>.scope(\"/api\", |s| s\n        .filter(is_authenticated_and_authorized)\n        .nested(\"/doorlock\", routes::doorlock)\n        .resource(\"/config{path:.*}\", |r| {\n            r.get().with(routes::config::read);\n            r.put().with(routes::config::write);\n            r.delete().with(routes::config::delete);\n        })\n)\n</code></pre>\n\n<p>Unfortunately, this will forward requests to the default handler rather than returning an error response in case it does not match.</p>\n"}, {"tags": ["floating-point", "rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "edited": false, "score": 0, "creation_date": 1531911536, "post_id": 51400032, "comment_id": 89771195, "body": "It should be <code>call!(|input: CompleteStr| ::nom::float_s(input.0).map(|(output, result)| (CompleteStr(output), result)))</code>, but you need to map <code>Err</code> part too, so it&#39;s very unpractical solution."}, {"owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "edited": false, "score": 0, "creation_date": 1531911659, "post_id": 51400032, "comment_id": 89771278, "body": "And I understand that I can unwrap-wrap input and output. I&#39;m just hoping that there is some less cumbersome solution."}], "tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": false, "score": 0, "last_activity_date": 1531910760, "creation_date": 1531910760, "answer_id": 51400032, "question_id": 51399610, "link": "https://stackoverflow.com/questions/51399610/how-to-parse-complete-f32-with-nom/51400032#51400032", "title": "How to parse complete f32 with nom?", "body": "<p><code>float_s</code> expects a string, so you have to extract the string from the <code>CompleteStr</code>:</p>\n\n<pre><code>named!(parse_float_complete(CompleteStr) -&gt; f32,\n    ws!(call!(|input| ::num::float_s(input.0).map(|output, result| CompleteStr(output, result))))\n);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "is_accepted": false, "score": 0, "last_activity_date": 1531914493, "creation_date": 1531914493, "answer_id": 51401263, "question_id": 51399610, "link": "https://stackoverflow.com/questions/51399610/how-to-parse-complete-f32-with-nom/51401263#51401263", "title": "How to parse complete f32 with nom?", "body": "<p>My current workaround is to just copy-paste <code>float_s</code> implementation:</p>\n\n<pre><code>fn float_cs(input: CompleteStr) -&gt; ::nom::IResult&lt;CompleteStr, f32&gt; {\n  flat_map!(input, call!(::nom::recognize_float), parse_to!(f32))\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "is_accepted": true, "score": 1, "last_activity_date": 1538903939, "creation_date": 1538903939, "answer_id": 52687092, "question_id": 51399610, "link": "https://stackoverflow.com/questions/51399610/how-to-parse-complete-f32-with-nom/52687092#52687092", "title": "How to parse complete f32 with nom?", "body": "<p><code>nom v4.1.0</code> fixed this problem:</p>\n\n<ul>\n<li><code>float</code> and <code>double</code> now work on all of nom's input types (<code>&amp;[u8]</code>, <code>&amp;str</code>, <code>CompleteByteSlice</code>, <code>CompleteStr</code> and any type that implements the required traits). <code>float_s</code> and <code>double_s</code> got the same modification, but are now deprecated</li>\n</ul>\n"}], "owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 0, "accepted_answer_id": 52687092, "answer_count": 3, "score": 4, "last_activity_date": 1538903939, "creation_date": 1531909507, "question_id": 51399610, "link": "https://stackoverflow.com/questions/51399610/how-to-parse-complete-f32-with-nom", "title": "How to parse complete f32 with nom?", "body": "<p>There is a function <a href=\"https://docs.rs/nom/4.0.0/nom/fn.float_s.html\" rel=\"nofollow noreferrer\"><code>float_s</code></a> that parses floats in stream mod (can return <code>Incomplete</code>). I want to use <code>CompleteStr</code> as input type instead. How I can achieve that?</p>\n\n<p>Simple approach fails with complains about <code>&amp;str</code> and <code>CompleteStr</code> mismatches:</p>\n\n<pre><code>named!(parse_float_complete(CompleteStr) -&gt; f32,\n    ws!(::num::float_s)\n);\n</code></pre>\n\n<p>I'm using <code>nom 4.0.0</code>.</p>\n"}, {"tags": ["generics", "rust"], "answers": [{"comments": [{"owner": {"reputation": 227, "user_id": 6754676, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-JPd3ge2OsCs/AAAAAAAAAAI/AAAAAAAAABI/xAvJc8Cf-j0/photo.jpg?sz=128", "display_name": "Theodor Johnson", "link": "https://stackoverflow.com/users/6754676/theodor-johnson"}, "edited": false, "score": 0, "creation_date": 1531916982, "post_id": 51398590, "comment_id": 89774826, "body": "Thank you for the answer. It does what I wanted. Thanks!"}], "tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 3, "last_activity_date": 1531919639, "last_edit_date": 1531919639, "creation_date": 1531906572, "answer_id": 51398590, "question_id": 51398074, "link": "https://stackoverflow.com/questions/51398074/can-i-have-optional-trait-bounds/51398590#51398590", "title": "Can I have optional trait bounds?", "body": "<p>You can change the definition of the trait to </p>\n\n<pre><code>trait Distribution&lt;U&gt; {\n    type T;\n    fn sample(&amp;self, x: U) -&gt; Self::T;\n}\n</code></pre>\n\n<p>This allows you to implement it on various types with different trait bounds.</p>\n\n<pre><code>impl&lt;U&gt; Distribution&lt;U&gt; for ConditionalNormal {\n    // ...\n}\n\nimpl&lt;U&gt; Distribution&lt;U&gt; for MultivariateConditionalNormal\nwhere\n    U: std::ops::Index&lt;usize, Output = f64&gt;,\n{\n    // ...\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d52648c2a93e7cb89dd70d809e93232f&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 227, "user_id": 6754676, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-JPd3ge2OsCs/AAAAAAAAAAI/AAAAAAAAABI/xAvJc8Cf-j0/photo.jpg?sz=128", "display_name": "Theodor Johnson", "link": "https://stackoverflow.com/users/6754676/theodor-johnson"}, "edited": false, "score": 0, "creation_date": 1531917008, "post_id": 51398690, "comment_id": 89774839, "body": "I like this solution as well! Might try it in the future! Thanks!"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 227, "user_id": 6754676, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-JPd3ge2OsCs/AAAAAAAAAAI/AAAAAAAAABI/xAvJc8Cf-j0/photo.jpg?sz=128", "display_name": "Theodor Johnson", "link": "https://stackoverflow.com/users/6754676/theodor-johnson"}, "edited": false, "score": 2, "creation_date": 1531917115, "post_id": 51398690, "comment_id": 89774908, "body": "@TheodorJohnson You must put more semantic in your generics. When you have a generic type <code>T</code>, put yourself the question: <i>what will I do with <code>T</code>?</i> and put those operations as methods of a new trait."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1531906851, "creation_date": 1531906851, "answer_id": 51398690, "question_id": 51398074, "link": "https://stackoverflow.com/questions/51398074/can-i-have-optional-trait-bounds/51398690#51398690", "title": "Can I have optional trait bounds?", "body": "<p>You can add a new trait to specify what are the capabilities of <code>U</code>:</p>\n\n<pre><code>trait Distribution {\n    type T;\n    fn sample&lt;U&gt;(&amp;self, x: U) -&gt; Self::T\n    where\n        U: Samplable;\n}\n\nstruct ConditionalNormal;\n\nimpl Distribution for ConditionalNormal {\n    type T = f64;\n\n    fn sample&lt;U&gt;(&amp;self, x: U) -&gt; Self::T\n    where\n        U: Samplable,\n    {\n        0.0.value()\n    }\n}\n\nstruct MultivariateConditionalNormal;\n\nimpl Distribution for MultivariateConditionalNormal {\n    type T = f64;\n\n    fn sample&lt;U&gt;(&amp;self, x: U) -&gt; Self::T\n    where\n        U: Samplable,\n    {\n        0.0 + x.value()\n    }\n}\n\ntrait Samplable {\n    fn value(&amp;self) -&gt; f64;\n}\n\nimpl Samplable for f64 {\n    fn value(&amp;self) -&gt; f64 {\n        *self\n    }\n}\n\nimpl Samplable for Vec&lt;f64&gt; {\n    fn value(&amp;self) -&gt; f64 {\n        self[0]\n    }\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 227, "user_id": 6754676, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-JPd3ge2OsCs/AAAAAAAAAAI/AAAAAAAAABI/xAvJc8Cf-j0/photo.jpg?sz=128", "display_name": "Theodor Johnson", "link": "https://stackoverflow.com/users/6754676/theodor-johnson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 51398590, "answer_count": 2, "score": 3, "last_activity_date": 1531919756, "creation_date": 1531905244, "last_edit_date": 1531919756, "question_id": 51398074, "link": "https://stackoverflow.com/questions/51398074/can-i-have-optional-trait-bounds", "title": "Can I have optional trait bounds?", "body": "<p>Given a trait that models a conditional probability distribution:</p>\n\n<pre><code>trait Distribution {\n    type T;\n    fn sample&lt;U&gt;(&amp;self, x: U) -&gt; Self::T;\n}\n</code></pre>\n\n<p>I want to implement the trait for two structs, <code>ConditionalNormal</code> and <code>MultivariateConditionalNormal</code> which model a scalar and vector valued distribution respectively.</p>\n\n<p>Such implementations look like this:</p>\n\n<pre><code>struct ConditionalNormal;\n\nimpl Distribution for ConditionalNormal {\n    type T = f64;\n\n    fn sample&lt;U&gt;(&amp;self, x: U) -&gt; Self::T {\n        0.0\n    }\n}\n\nstruct MultivariateConditionalNormal;\n\nimpl Distribution for MultivariateConditionalNormal {\n    type T = f64;\n\n    fn sample&lt;U&gt;(&amp;self, x: U) -&gt; Self::T {\n        0.0 + x[0]\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=14c0cdc19c2c4cbaa10d101de66765f9&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>However, the implementation for <code>MultivariateConditionalNormal</code> is invalid because the generic <code>x[0]</code> is not indexable.\nIf I add the trait bounds <code>std::ops::Index&lt;usize&gt;</code> the implementation for <code>ConditionalNormal</code> is invalid, because a scalar <code>f64</code> is not indexable. </p>\n\n<p>I have heard that e.g. the <code>Sized</code> trait accepts optional trait bounds via <code>?Sized</code>; can I do something similar? Is there any way to resolve this problem?</p>\n"}, {"tags": ["post", "rust", "hyper"], "comments": [{"owner": {"reputation": 277, "user_id": 2986683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/100003596915461/picture?type=large", "display_name": "user2986683", "link": "https://stackoverflow.com/users/2986683/user2986683"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1532138063, "post_id": 51397872, "comment_id": 89874359, "body": "@E_net4 thanks for the comment, I&#39;ve added code, rust playground does not work, maybe caused by the extra crate I use, so i posted the gist link"}], "answers": [{"comments": [{"owner": {"reputation": 277, "user_id": 2986683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/100003596915461/picture?type=large", "display_name": "user2986683", "link": "https://stackoverflow.com/users/2986683/user2986683"}, "edited": false, "score": 0, "creation_date": 1532144420, "post_id": 51452456, "comment_id": 89875021, "body": "thanks for the answer but one further question: i found that your code removed the  <i>text</i> field, i changed my code to <code>result.extend_from_slice(&quot;title\\r\\n\\r\\n&quot;.as_bytes());</code> (add one more &#39;\\r\\n&#39;), but httpbin returned <code>&quot;form&quot;:{&quot;text&quot;:&quot;&quot;}</code>,  is there a way to assign a value to <i>text</i> ?"}, {"owner": {"reputation": 277, "user_id": 2986683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/100003596915461/picture?type=large", "display_name": "user2986683", "link": "https://stackoverflow.com/users/2986683/user2986683"}, "edited": false, "score": 0, "creation_date": 1532144596, "post_id": 51452456, "comment_id": 89875047, "body": "i&#39;ve found out: add &#39;\\r\\n&#39; before title, thanks again :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1596632347, "last_edit_date": 1596632347, "creation_date": 1532142531, "answer_id": 51452456, "question_id": 51397872, "link": "https://stackoverflow.com/questions/51397872/how-to-post-an-image-using-multipart-form-data-with-hyper/51452456#51452456", "title": "How to post an image using multipart/form-data with hyper?", "body": "<p>You aren't correctly placing a newline/carriage return pair before your final boundary.</p>\n<p>Here's how I'd write your body generation code, requiring less allocation:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn image_data() -&gt; io::Result&lt;Vec&lt;u8&gt;&gt; {\n    let mut data = Vec::new();\n    write!(data, &quot;--{}\\r\\n&quot;, BOUNDARY)?;\n    write!(data, &quot;Content-Disposition: form-data; name=\\&quot;smfile\\&quot;; filename=\\&quot;11.jpg\\&quot;\\r\\n&quot;)?;\n    write!(data, &quot;Content-Type: image/jpeg\\r\\n&quot;)?;\n    write!(data, &quot;\\r\\n&quot;)?;\n\n    let mut f = File::open(&quot;11.jpg&quot;)?;\n    f.read_to_end(&amp;mut data)?;\n\n    write!(data, &quot;\\r\\n&quot;)?; // The key thing you are missing\n    write!(data, &quot;--{}--\\r\\n&quot;, BOUNDARY)?;\n\n    Ok(data)\n}\n</code></pre>\n<p>Calling this code can also be simplified:</p>\n<pre><code>fn main() {\n    let https = HttpsConnector::new(4).unwrap();\n    let client = Client::builder().build::&lt;_, hyper::Body&gt;(https);\n\n    let data = image_data().unwrap();\n    let req = Request::post(&quot;https://httpbin.org/post&quot;)\n        .header(CONTENT_TYPE, &amp;*format!(&quot;multipart/form-data; boundary={}&quot;, BOUNDARY))\n        .body(data.into())\n        .unwrap();\n\n    tokio::run(future::lazy(move || {\n        client\n            .request(req)\n            .and_then(|res| {\n                println!(&quot;status: {}&quot;, res.status());\n\n                res.into_body().for_each(|chunk| {\n                    io::stdout()\n                        .write_all(&amp;chunk)\n                        .map_err(|e| panic!(&quot;stdout error: {}&quot;, e))\n                })\n            })\n            .map_err(|e| println!(&quot;request error: {}&quot;, e))\n    }));\n}\n</code></pre>\n"}], "owner": {"reputation": 277, "user_id": 2986683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/100003596915461/picture?type=large", "display_name": "user2986683", "link": "https://stackoverflow.com/users/2986683/user2986683"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1771, "favorite_count": 2, "accepted_answer_id": 51452456, "answer_count": 1, "score": 6, "last_activity_date": 1596632347, "creation_date": 1531904647, "last_edit_date": 1532142560, "question_id": 51397872, "link": "https://stackoverflow.com/questions/51397872/how-to-post-an-image-using-multipart-form-data-with-hyper", "title": "How to post an image using multipart/form-data with hyper?", "body": "<p>I'm trying to post an image file using hyper like cURL does:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>curl -F smfile=@11.jpg https://httpbin.org/post --trace-ascii -\n</code></pre>\n\n<p>The result is:</p>\n\n<pre><code>{\n  \"args\": {},\n  \"data\": \"\",\n  \"files\": {\n    \"smfile\": \"data:image/jpeg;base64,...\"\n  },\n  \"form\": {},\n  \"headers\": {\n    \"Accept\": \"/\",\n    \"Connection\": \"close\",\n    \"Content-Length\": \"1709\",\n    \"Content-Type\": \"multipart/form-data; boundary=------------------------58370e136081470e\",\n    \"Expect\": \"100-continue\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"curl/7.59.0\"\n  },\n  \"json\": null,\n  \"origin\": \"myip\",\n  \"url\": \"https://httpbin.org/post\"\n}\n</code></pre>\n\n<p>I learned that Content-Type should be set to <code>multipart/form-data</code> with a boundary mark. Here's my code:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate hyper_tls;\nextern crate tokio;\n\nuse futures::{future, Future};\nuse hyper::header::CONTENT_TYPE;\nuse hyper::rt::Stream;\nuse hyper::{Body, Client, Method, Request};\nuse hyper_tls::HttpsConnector;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::io::{self, Write};\n\nconst BOUNDARY: &amp;'static str = \"------------------------ea3bbcf87c101592\";\n\nfn main() {\n    tokio::run(future::lazy(|| {\n        let https = HttpsConnector::new(4).unwrap();\n        let client = Client::builder().build::&lt;_, hyper::Body&gt;(https);\n\n        let mut req = Request::new(Body::from(image_data()));\n\n        req.headers_mut().insert(\n            CONTENT_TYPE,\n            format!(\"multipart/form-data; boundary={}\", BOUNDARY)\n                .parse()\n                .unwrap(),\n        );\n        *req.method_mut() = Method::POST;\n        *req.uri_mut() = \"https://httpbin.org/post\".parse().unwrap();\n\n        client\n            .request(req)\n            .and_then(|res| {\n                println!(\"status: {}\", res.status());\n\n                res.into_body().for_each(|chunk| {\n                    io::stdout()\n                        .write_all(&amp;chunk)\n                        .map_err(|e| panic!(\"stdout error: {}\", e))\n                })\n            })\n            .map_err(|e| println!(\"request error: {}\", e))\n    }));\n}\n\nfn image_data() -&gt; Vec&lt;u8&gt; {\n    let mut result: Vec&lt;u8&gt; = Vec::new();\n    result.extend_from_slice(format!(\"--{}\\r\\n\", BOUNDARY).as_bytes());\n    result\n        .extend_from_slice(format!(\"Content-Disposition: form-data; name=\\\"text\\\"\\r\\n\").as_bytes());\n    result.extend_from_slice(\"title\\r\\n\".as_bytes());\n    result.extend_from_slice(format!(\"--{}\\r\\n\", BOUNDARY).as_bytes());\n    result.extend_from_slice(\n        format!(\"Content-Disposition: form-data; name=\\\"smfile\\\"; filename=\\\"11.jpg\\\"\\r\\n\")\n            .as_bytes(),\n    );\n    result.extend_from_slice(\"Content-Type: image/jpeg\\r\\n\\r\\n\".as_bytes());\n\n    let mut f = File::open(\"11.jpg\").unwrap();\n    let mut file_data = Vec::new();\n    f.read_to_end(&amp;mut file_data).unwrap();\n\n    result.append(&amp;mut file_data);\n\n    result.extend_from_slice(format!(\"--{}--\\r\\n\", BOUNDARY).as_bytes());\n    result\n}\n</code></pre>\n\n<p>(<a href=\"https://gist.github.com/fliar/cf93aa56b9602d5b3e9a84d353c57227\" rel=\"noreferrer\">complete code</a>)</p>\n\n<p>Note that a JPEG file named 11.jpg is needed to run this code. This can be any JPEG file.</p>\n\n<p>httpbin shows that I posted nothing:</p>\n\n<pre><code>{\n  \"args\": {},\n  \"data\": \"\",\n  \"files\": {},\n  \"form\": {},\n  \"headers\": {\n    \"Connection\": \"close\",\n    \"Content-Length\": \"1803\",\n    \"Content-Type\": \"multipart/form-data; boundary=------------------------ea3bbcf87c101592\",\n    \"Host\": \"httpbin.org\"\n  },\n  \"json\": null,\n  \"origin\": \"myip\",\n  \"url\": \"https://httpbin.org/post\"\n}\n</code></pre>\n\n<p>I have no idea how to fix this.</p>\n"}, {"tags": ["rust", "polymorphism", "traits", "ownership", "borrowing"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1531899052, "post_id": 51395954, "comment_id": 89763215, "body": "<code>for it in &amp;mut self.renderables</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531901487, "post_id": 51395954, "comment_id": 89764598, "body": "Also, note that now, we must note trait objects with <code>dyn</code>: <code>Box&lt;dyn Renderable&gt;</code>"}, {"owner": {"reputation": 1273, "user_id": 1114113, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/618637d5a66688a5674f67edfeeae6a8?s=128&d=identicon&r=PG", "display_name": "Lunfel", "link": "https://stackoverflow.com/users/1114113/lunfel"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531937143, "post_id": 51395954, "comment_id": 89788037, "body": "Thanks @Boiethios, this worked for me. I know that it is a duplicate, but I tried the other answer with iter() and it didn&#39;t work."}, {"owner": {"reputation": 1273, "user_id": 1114113, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/618637d5a66688a5674f67edfeeae6a8?s=128&d=identicon&r=PG", "display_name": "Lunfel", "link": "https://stackoverflow.com/users/1114113/lunfel"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531937214, "post_id": 51395954, "comment_id": 89788067, "body": "So just to understand what is going on, in a for loop the <code>&amp;mut</code> is applied to each individual elements of the Vec and not the Vec itself?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1531945844, "post_id": 51395954, "comment_id": 89792486, "body": "Look at <code>AsMut</code>: <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-AsMut%3C%5BT%5D%3E\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/vec/&hellip;</a> It is like an overload of <code>&amp;mut</code> operator."}], "owner": {"reputation": 1273, "user_id": 1114113, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/618637d5a66688a5674f67edfeeae6a8?s=128&d=identicon&r=PG", "display_name": "Lunfel", "link": "https://stackoverflow.com/users/1114113/lunfel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 59, "favorite_count": 0, "closed_date": 1531919543, "answer_count": 0, "score": 0, "last_activity_date": 1531919434, "creation_date": 1531898655, "last_edit_date": 1531919434, "question_id": 51395954, "link": "https://stackoverflow.com/questions/51395954/cannot-borrow-immutable-box-content-it-as-mutable-while-looping-over-a-vec", "closed_reason": "Duplicate", "title": "Cannot borrow immutable `Box` content `**it` as mutable while looping over a vector with polymorphic traits", "body": "<p>I decided to do a really simple game loop by looping over a <code>Vec</code> of traits. Because a trait size is unknown, I need to use a <code>Box</code> or a reference to achieve this polymorphic approach. My approach may not be the right one to achieve this.</p>\n\n<p>I tried with a <code>Box</code>:</p>\n\n<pre><code>trait Renderable {\n    fn update(&amp;mut self);\n}\n\nstruct Game {\n    renderables: Vec&lt;Box&lt;Renderable&gt;&gt;,\n}\n\nimpl Game {\n    fn new() -&gt; Game {\n        Game {\n            renderables: Vec::new(),\n        }\n    }\n\n    fn update(&amp;mut self) {\n        for mut it in &amp;self.renderables {\n            it.update();\n        }\n    }\n}\n\nfn main() {\n    let mut g = Game::new();\n\n    g.update();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable `Box` content `**it` as mutable\n  --&gt; src/main.rs:18:13\n   |\n18 |             it.update();\n   |             ^^ cannot borrow as mutable\n</code></pre>\n\n<p>I tried with references:</p>\n\n<pre><code>trait Renderable {\n    fn update(&amp;mut self);\n}\n\nstruct Game&lt;'a&gt; {\n    renderables: Vec&lt;&amp;'a mut Renderable&gt;,\n}\n\nimpl&lt;'a&gt; Game&lt;'a&gt; {\n    fn new() -&gt; Game&lt;'a&gt; {\n        Game {\n            renderables: Vec::new(),\n        }\n    }\n\n    fn update(&amp;mut self) {\n        for it in &amp;self.renderables {\n            it.update();\n        }\n    }\n}\n\nfn main() {\n    let mut g = Game::new();\n\n    g.update();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0389]: cannot borrow data mutably in a `&amp;` reference\n  --&gt; src/main.rs:18:13\n   |\n18 |             it.update();\n   |             ^^ assignment into an immutable reference\n</code></pre>\n"}, {"tags": ["rust", "mutex"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1531877868, "post_id": 51392148, "comment_id": 89756529, "body": "I suppose it&#39;s to allow move of rust without problem if LLVM copy the value."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1531878599, "post_id": 51392148, "comment_id": 89756689, "body": "Also <a href=\"https://stackoverflow.com/q/14614523/155423\">Can a pthread_mutex_t be moved in memory?</a>. Empahsis mine: <i>Some mutex implementations on Linux, for example, use the futex system call which specifically waits on <b>the address of the mutex</i></b>"}], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 359, "favorite_count": 0, "closed_date": 1531927995, "answer_count": 0, "score": 13, "last_activity_date": 1531876258, "creation_date": 1531876258, "question_id": 51392148, "link": "https://stackoverflow.com/questions/51392148/why-does-mutex-contain-a-box", "closed_reason": "Duplicate", "title": "Why does Mutex contain a Box?", "body": "<p>Rust's <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"noreferrer\"><code>std::sync::Mutex</code></a> is a struct that contains a heap-allocated <code>inner</code> mutex, along with this semi-mysterious comment:</p>\n\n<pre><code>pub struct Mutex&lt;T: ?Sized&gt; {\n    // Note that this mutex is in a *box*, not inlined into the struct itself.\n    // Once a native mutex has been used once, its address can never change (it\n    // can't be moved). This mutex type can be safely moved at any time, so to\n    // ensure that the native mutex is used correctly we box the inner mutex to\n    // give it a constant address.\n    inner: Box&lt;sys::Mutex&gt;,\n    poison: poison::Flag,\n    data: UnsafeCell&lt;T&gt;,\n}\n</code></pre>\n\n<p>The comment explains that <code>Box</code> is used to give the inner mutex a stable address. But I can't seem to find any explanation for why a stable address is required in the first place.</p>\n\n<p>On Unix-like platforms at least, the \"native mutex\" here (<code>sys::Mutex</code>) is ultimately a wrapper around <code>libc::pthread_mutex_t</code> (<a href=\"https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/mutex.rs\" rel=\"noreferrer\">source code</a>).</p>\n\n<p>In C, it almost makes sense to have a rule against moving mutexes, because mutexes are used through pointers, and moving one while there is a live pointer to it would be clearly wrong. But in Rust, you can't even try to move something unless there <em>are</em> no live references to it. So this line of argument doesn't seem convincing.</p>\n\n<p>Why must the native mutex have a stable address?</p>\n"}, {"tags": ["serialization", "enums", "rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1531877276, "post_id": 51392071, "comment_id": 89756417, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51392071/edit\">edit</a> your question to include it. Emphasis on <b>minimal</b>. It <i>appears</i> that your question boils down to &quot;how do I convert an integer to an enum in Serde&quot;, but there&#39;s simply <b>so much</b> other code that figuring if that is correct is asking a lot of an answerer. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific tips</a> for reducing your code to a MCVE as well."}, {"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531878767, "post_id": 51392071, "comment_id": 89756712, "body": "@Shepmaster thanks for the assessment. I have cut out a lot of details from the post related to avro and I have taken a machete to the play-ground link. It should be a lot more succinct and easy to follow."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531884365, "post_id": 51392071, "comment_id": 89757956, "body": "It&#39;s <i>better</i>, but it&#39;s still ~370 lines long. Is it possible to reduce it to deserializing a slice of 3-4 bytes, just those that represent the enum (and data, I suppose)? Then you can remove all of the map-related code. Replacing the custom error with <code>Box&lt;Error&gt;</code>, etc. would also reduce a lot of the code. Creating an example that doesn&#39;t need to do the bit-twiddling will also make the problem more accessible (and any answer more understandable)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531884593, "post_id": 51392071, "comment_id": 89758005, "body": "Also, <a href=\"https://github.com/flavray/avro-rs\" rel=\"nofollow noreferrer\">someone has already implemented Avro support for Serde</a>."}, {"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531885416, "post_id": 51392071, "comment_id": 89758173, "body": "Unfortunately for me, the <code>deserialize_enum</code> implementation in avro-rs is a TODO. It is not a complete implementation. And the other popular version does enums but not avro unions."}, {"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531885471, "post_id": 51392071, "comment_id": 89758185, "body": "I agree, changing this to be an example of &quot;how to use numbers to drive enum deserialization&quot; is a great idea."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1531885749, "post_id": 51392071, "comment_id": 89758231, "body": "I&#39;d suggest something simple like an array of two<code>u8</code>. The first is the variant selector (0, 1) the second is the value (an integer or an ASCII character). Something at this level of complexity."}], "owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 199, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1531878717, "creation_date": 1531875478, "last_edit_date": 1531878717, "question_id": 51392071, "link": "https://stackoverflow.com/questions/51392071/how-to-use-enumaccess-in-serde", "title": "How to use EnumAccess in Serde?", "body": "<p>I am deserializing a externally coded enum for Avro. I have created an enum which matches it schema and I don't know how to take the variant identifer (a number) and choose the proper enum variant.</p>\n\n<p>The target struct:</p>\n\n<pre><code>#[derive(Deserialize, Debug)]\nstruct UT {\n    timestamp: Timestamp,\n    metric: String,\n}\n\n#[derive(Deserialize, Debug)]\nenum Timestamp {\n    Long(u64),\n    Int(i64),\n    Float(f32),\n    Double(f64)\n}\n</code></pre>\n\n<p>When I get to <code>deserialize_enum</code>, I can read the variant id out of the stream but I don't know how to use it to choose the variant.</p>\n\n<p>Dispatching to an enum variant is done by <code>AvroEnumVisitor</code> which implements both <code>EnumAccess</code> and <code>VariantAccess</code>. I can't get my code in <code>VariantAccess</code> to be called. <code>EnumAccess</code>s <code>variant_seed</code> is invoked by I don't know how to direct it, here's the nitty gritty:</p>\n\n<pre><code>// `EnumAccess` is provided to the `Visitor` to give it the ability to determine\n// which variant of the enum is supposed to be deserialized.\n//\n// Note that all enum deserialization methods in Serde refer exclusively to the\n// \"externally tagged\" enum representation.\nimpl&lt;'de, 'a&gt; EnumAccess&lt;'de&gt; for AvroEnumVisitor&lt;'a, 'de&gt; {\n    type Error = AvroError;\n    type Variant = Self;\n\n    fn variant_seed&lt;V&gt;(self, seed: V) -&gt; Result&lt;(V::Value, Self::Variant), Self::Error&gt;\n        where\n            V: serde::de::DeserializeSeed&lt;'de&gt;,\n    {\n        println!(\"EnumAccess::variant_seed\");\n\n        // !!! This is the index in to the timestamp enum\n        let variant = self.de.visit_varint();\n        // !!! it's 1, corresponding to Int(i64)\n\n        // This is code I just copy/pasted\n        let val = match seed.deserialize(&amp;mut *self.de) {\n            Ok(t) =&gt; t,\n            Err(e) =&gt; {\n                println!(\"error! {:#?}\", e);\n                panic!(\"not sure how to direct deserialize\");\n            }\n        };\n\n        Ok((val,self))\n    }\n}\n</code></pre>\n\n<p>(<a href=\"http://play.rust-lang.org/?gist=7cbe56f7fd8b81e34ee79020d8e6d75d&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n"}, {"tags": ["rust", "text-processing"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1531871490, "post_id": 51391666, "comment_id": 89755295, "body": "<code>s.chars().all(char::is_alphanumeric)</code> also works in this case."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531871511, "post_id": 51391666, "comment_id": 89755299, "body": "And for clarity, the &quot;generic&quot; version is to change the predicate in <code>all</code>."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 4, "last_activity_date": 1531871429, "creation_date": 1531871429, "answer_id": 51391666, "question_id": 51391548, "link": "https://stackoverflow.com/questions/51391548/how-to-check-if-string-only-contains-set-of-characters-in-rust/51391666#51391666", "title": "How to check if string only contains set of characters in Rust?", "body": "<p>There is <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.is_alphanumeric\" rel=\"nofollow noreferrer\">is_alphanumeric()</a>:</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", \"abcd\".chars().all(|x| x.is_alphanumeric()));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "is_accepted": true, "score": 22, "last_activity_date": 1531871641, "creation_date": 1531871641, "answer_id": 51391684, "question_id": 51391548, "link": "https://stackoverflow.com/questions/51391548/how-to-check-if-string-only-contains-set-of-characters-in-rust/51391684#51391684", "title": "How to check if string only contains set of characters in Rust?", "body": "<p>You'd use <code>all</code> to check that all characters are alphanumeric.</p>\n\n<pre><code>fn main() {\n    let name = String::from(\"B\u00f6b\");\n    println!(\"{}\", name.chars().all(char::is_alphanumeric));\n}\n</code></pre>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.chars\" rel=\"noreferrer\"><code>chars</code></a> returns an iterator of characters.</li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.all\" rel=\"noreferrer\"><code>all</code></a> returns true if the function is true for all elements of the iterator.</li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.is_alphanumeric\" rel=\"noreferrer\"><code>is_alphanumeric</code></a> checks if its alphanumeric.</li>\n</ul>\n\n<p>For arbitrary character sets you can pass whatever function or code block you like to <code>all</code>.</p>\n\n<p>Interestingly, <a href=\"https://github.com/rust-lang/rust/issues/49657\" rel=\"noreferrer\">the corresponding methods on <code>str</code> were explicitly removed for subtle Unicode reasons</a>.</p>\n"}], "owner": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5884, "favorite_count": 0, "accepted_answer_id": 51391684, "answer_count": 2, "score": 14, "last_activity_date": 1532042840, "creation_date": 1531870431, "last_edit_date": 1532042840, "question_id": 51391548, "link": "https://stackoverflow.com/questions/51391548/how-to-check-if-string-only-contains-set-of-characters-in-rust", "title": "How to check if string only contains set of characters in Rust?", "body": "<p>What is the idiomatic way in Rust to check if a string only contains a certain set of characters?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1531868575, "post_id": 51391057, "comment_id": 89754715, "body": "no, I don&#39;t think so, your algo look strange, to solve your problem you should give your real problem instead of a strange solution."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1531869068, "post_id": 51391057, "comment_id": 89754805, "body": "Something could always panic in the middle."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 2, "creation_date": 1531870138, "post_id": 51391057, "comment_id": 89755007, "body": "Even if this is somehow possible with <code>unsafe</code>, I wouldn&#39;t recommend doing it."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1531871327, "creation_date": 1531871327, "answer_id": 51391656, "question_id": 51391057, "link": "https://stackoverflow.com/questions/51391057/can-i-push-a-reference-to-a-vector-with-a-longer-lifetime-if-i-pop-it-back-jus/51391656#51391656", "title": "Can I push a reference to a vector with a longer lifetime if I pop() it back just after?", "body": "<p>Definitely not in safe Rust. The compiler has no idea what <code>Vec::push</code> and <code>Vec::pop</code> do. All it knows is what it can tell from the function signature \u2014 that you have to push the same type that the <code>Vec</code> is parameterized with.</p>\n\n<p>Doing this in unsafe Rust is <em>probably</em> possible, but unsafe code is <strong>tricky</strong> to get right. As <a href=\"https://stackoverflow.com/questions/51391057/can-i-push-a-reference-to-a-vector-with-a-longer-lifetime-if-i-pop-it-back-ju#comment89754805_51391057\">loganfsmyth mentions</a>, if you somehow push an \"invalid\" value into the <code>Vec</code> and then a panic happens, that value is still in the vector after the function has exited. Now the destructor of the <code>Vec</code> can access invalid memory, subverting Rust's guarantees. This is A Bad Thing.</p>\n\n<p>There's probably a better solution to your real problem. Possible avenues:</p>\n\n<ul>\n<li>Use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.chain\" rel=\"noreferrer\"><code>Iterator::chain</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/fn.once.html\" rel=\"noreferrer\"><code>iter::once</code></a> to combine the values into one iterator.</li>\n<li>Create a wrapper type around a slice and a single value that exposes the operation(s) you need.</li>\n</ul>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 51391656, "answer_count": 1, "score": 2, "last_activity_date": 1531871327, "creation_date": 1531866786, "last_edit_date": 1531870004, "question_id": 51391057, "link": "https://stackoverflow.com/questions/51391057/can-i-push-a-reference-to-a-vector-with-a-longer-lifetime-if-i-pop-it-back-jus", "title": "Can I push a reference to a vector with a longer lifetime if I pop() it back just after?", "body": "<p>Here, I'm not able to add <code>thing</code> to vector because its lifetime is different than <code>'a</code>:</p>\n\n<pre><code>pub fn foo&lt;'a&gt;(vec: &amp;'a mut Vec&lt;&amp;'a Thing&gt;) {\n    let thing: Thing = new_thing();\n    vec.push(&amp;thing);\n    // do stuff with vec\n    vec.pop();\n}\n</code></pre>\n\n<p>Notice that I always remove it from the vector, and the vector isn't reordered further, so this operation should be safe. I think it would be hard to convince that to the compiler, but is there any trick to achieve the same?</p>\n"}, {"tags": ["multithreading", "rust", "lock-free"], "comments": [{"owner": {"reputation": 14052, "user_id": 183397, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e44d2e9eaaa792ed3990b4a4a4d33c38?s=128&d=identicon&r=PG", "display_name": "clstrfsck", "link": "https://stackoverflow.com/users/183397/clstrfsck"}, "edited": false, "score": 2, "creation_date": 1531867375, "post_id": 51390826, "comment_id": 89754395, "body": "I don&#39;t know enough about rust to comment on the code, but <a href=\"https://codereview.stackexchange.com\">codereview.stackexchange.com</a> might be able to help too?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1531872656, "post_id": 51390826, "comment_id": 89755533, "body": "Am I correct in thinking <code>ResourceCell&lt;T&gt;</code> is essentially equivalent to <code>Mutex&lt;Option&lt;T&gt;&gt;</code>?"}, {"owner": {"reputation": 2244, "user_id": 1825860, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b9e1d70a0cbe81683a016e700d3239bf?s=128&d=identicon&r=PG", "display_name": "AlphaModder", "link": "https://stackoverflow.com/users/1825860/alphamodder"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1531874515, "post_id": 51390826, "comment_id": 89755862, "body": "@trentcl Yeah, it&#39;s essentially the same except you don&#39;t have to lock it to tell if it&#39;s empty."}], "owner": {"reputation": 2244, "user_id": 1825860, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b9e1d70a0cbe81683a016e700d3239bf?s=128&d=identicon&r=PG", "display_name": "AlphaModder", "link": "https://stackoverflow.com/users/1825860/alphamodder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1531866946, "creation_date": 1531865113, "last_edit_date": 1531866946, "question_id": 51390826, "link": "https://stackoverflow.com/questions/51390826/is-this-lock-free-structure-that-guards-usage-of-a-single-resource-in-rust-corre", "title": "Is this lock-free structure that guards usage of a single resource in Rust correct?", "body": "<p>I'm trying to make a structure that can marshal the use of a resource by multiple threads. I believe I have found a correct implementation, but I am still learning about memory orderings and such, so I want to make sure my reasoning is correct.</p>\n\n<p>The resource cell has three operations (aside from creation): </p>\n\n<ul>\n<li><code>try_acquire</code>, which attempts to take a mutable reference to the resource.</li>\n<li><code>try_take</code>, which attempts to take the resource out, leaving the cell empty.</li>\n<li><code>try_reserve</code>, which reserves space in an empty cell for a thread to place a new resource in.</li>\n</ul>\n\n<p>In order to implement this, I created a struct containing an <code>UnsafeCell&lt;Option&lt;T&gt;&gt;</code> with three possible states.</p>\n\n<pre><code>const EMPTY: usize = 0;\nconst FULL: usize = 1;\nconst IN_USE: usize = 2;\n\npub struct ResourceCell&lt;T: Send&gt; {\n    status: AtomicUsize,\n    resource: UnsafeCell&lt;Option&lt;T&gt;&gt;,\n}\n</code></pre>\n\n<p>Here's how I implemented the three operations:</p>\n\n<pre><code>pub fn try_acquire(&amp;self) -&gt; Result&lt;Guard&lt;T&gt;, ()&gt; {\n    if self.status.compare_and_swap(FULL, IN_USE, Ordering::Acquire) == IN_USE {\n        // A Guard allows mutable access to the resource for its lifetime\n        // then when dropped, it calls status.store(FULL, Ordering::Release);\n        return Ok(Guard(self))\n    }\n    Err(())\n}\n\npub fn try_take(&amp;self) -&gt; Result&lt;T, ()&gt; {\n    if self.status.compare_and_swap(FULL, IN_USE, Ordering::Acquire) == IN_USE {\n        let value = self.resource.get().take().unwrap();\n        self.cell.status.store(EMPTY, Ordering::Release);\n        return Ok(value);\n    }\n    Err(())\n}\n\npub fn try_reserve(&amp;self) -&gt; Result&lt;Reserve&lt;T&gt;, ()&gt; {\n    if self.status.compare_and_swap(EMPTY, IN_USE, Ordering::Acquire) == IN_USE {\n        // A Reserve has a single method that consumes itself and places a new \n        // value in the resource cell, then calls status.store(FULL, Ordering::Release);\n        return Ok(Reserve(self))\n    }\n    Err(())\n}\n</code></pre>\n\n<p>My reasoning that these are correct is as follows:</p>\n\n<ul>\n<li>For <code>try_acquire</code>, if the CAS sees <code>FULL</code>, then there must not exist any outstanding <code>Guard</code>s or <code>Reserve</code>s, because this <code>FULL</code> could only have originated from the dropping of a <code>Guard</code> or the consumption of a <code>Reserve</code> to set the value. Since both these operations specify <code>Ordering::Release</code>, this CAS synchronizes-with them, guaranteeing that this thread will also observe the accompanying write to the resource. The current state is also now <code>IN_USE</code>, which will prevent any operations on other threads from succeeding until the <code>Guard</code> is dropped. Therefore, no other thread will attempt to access the <code>UnsafeCell</code> until our <code>Guard</code> sets the state back to <code>FULL</code>, allowing it to safely access the <code>UnsafeCell</code>. </li>\n<li><code>try_take</code> actually functions nearly identically to <code>try_acquire</code> except that after providing access to the <code>UnsafeCell</code>, it sets the state to <code>EMPTY</code> with <code>Ordering::Release</code>. I believe that this does not affect any of the reasoning in <code>try_acquire</code>.</li>\n<li>For <code>try_reserve</code>, if the CAS sees <code>EMPTY</code>, then there must not exist any outstanding <code>Guard</code>s or <code>Reserve</code>s, because this <code>EMPTY</code> either originated from the initial state of the cell, or from a previous successful call to <code>try_take</code>. Since <code>try_take</code> specifies <code>Ordering::Release</code>, this CAS synchronizes-with it, ensuring that this thread will really observe the resource as empty. The current state is also now <code>IN_USE</code>, which will prevent any operations on other threads from succeeding until the <code>Guard</code> is dropped. Therefore, no other thread will attempt to access the <code>UnsafeCell</code> until our <code>Reserve</code> sets the state back to <code>FULL</code>, allowing it to safely access the <code>UnsafeCell</code>.</li>\n</ul>\n\n<p>Is this sufficient for thread-safety, or have I made an error?\n<a href=\"https://play.rust-lang.org/?gist=829cfc32ef9d28f8053138131c1708b6&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Here's a full code listing, including the implementations of <code>Guard</code> and <code>Reserve</code></a>:</p>\n\n<pre><code>use std::ops::{Deref, DerefMut};\nuse std::sync::atomic::{AtomicUsize, Ordering};\nuse std::cell::UnsafeCell;\n\nconst EMPTY: usize = 0;\nconst FULL: usize = 1;\nconst IN_USE: usize = 2;\n\npub struct ResourceCell&lt;T: Send&gt; {\n    status: AtomicUsize,\n    resource: UnsafeCell&lt;Option&lt;T&gt;&gt;,\n}\n\nimpl&lt;T: Send&gt; ResourceCell&lt;T&gt; {\n    pub fn new(data: Option&lt;T&gt;) -&gt; ResourceCell&lt;T&gt; {\n        ResourceCell {\n            status: AtomicUsize::new(if data.is_none() { EMPTY } else { FULL }),\n            resource: UnsafeCell::new(data)\n        }\n    }\n\n    pub fn try_acquire(&amp;self) -&gt; Result&lt;Guard&lt;T&gt;, ()&gt; {\n        if self.status.compare_and_swap(FULL, IN_USE, Ordering::Acquire) == IN_USE {\n            return Ok(Guard(self, FULL)) \n        }\n        Err(())\n    }\n\n    pub fn try_take(&amp;self) -&gt; Result&lt;T, ()&gt; {\n        if self.status.compare_and_swap(FULL, IN_USE, Ordering::Acquire) == IN_USE {\n            let value = unsafe { self.resource.get().as_mut().unwrap().take().unwrap() };\n            self.status.store(EMPTY, Ordering::Release);\n            return Ok(value);\n        }\n        Err(())\n    }\n\n    pub fn try_reserve(&amp;self) -&gt; Result&lt;Reserve&lt;T&gt;, ()&gt; {\n        if self.status.compare_and_swap(EMPTY, IN_USE, Ordering::Acquire) == IN_USE {\n            return Ok(Reserve(self))\n        }\n        Err(())\n    }\n}\n\nunsafe impl&lt;T: Send&gt; Sync for ResourceCell&lt;T&gt; { }\n\npub struct Guard&lt;'a, T: Send + 'a&gt;(&amp;'a ResourceCell&lt;T&gt;, usize);\n\nimpl&lt;'a, T: Send + 'a&gt; Guard&lt;'a, T&gt; {\n    pub fn take(mut self) -&gt; T {\n        let value = unsafe { self.0.resource.get().as_mut().unwrap().take().unwrap() };\n        self.1 = EMPTY;\n        return value;\n    }\n}\n\nimpl&lt;'a, T: Send + 'a&gt; Drop for Guard&lt;'a, T&gt; {\n    fn drop(&amp;mut self) {\n        self.0.status.store(self.1, Ordering::Release);\n    }\n}\n\nimpl&lt;'a, T: Send + 'a&gt; Deref for Guard&lt;'a, T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T {\n        return unsafe { self.0.resource.get().as_ref().unwrap().as_ref().unwrap() };\n    }\n}\n\nimpl&lt;'a, T: Send + 'a&gt; DerefMut for Guard&lt;'a, T&gt; {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut T {\n        return unsafe { self.0.resource.get().as_mut().unwrap().as_mut().unwrap() };\n    }\n}\n\npub struct Reserve&lt;'a, T: Send + 'a&gt;(&amp;'a ResourceCell&lt;T&gt;); \n\nimpl&lt;'a, T: Send + 'a&gt; Reserve&lt;'a, T&gt; {\n    pub fn fill(self, value: T) {\n        unsafe { *self.0.resource.get().as_mut().unwrap() = Some(value) };\n        self.0.status.store(FULL, Ordering::Release);\n    }\n}\n</code></pre>\n"}, {"tags": ["arrays", "rust", "slice"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531856135, "post_id": 51388940, "comment_id": 89749971, "body": "<i>Why</i> are you worried about copying <b>8 bytes</b> of data?"}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531856264, "post_id": 51388940, "comment_id": 89750032, "body": "@Shepmaster 1. To be clear, I don&#39;t even know how to copy the 8 bytes of data 2. I&#39;m trying to learn"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531856604, "post_id": 51388940, "comment_id": 89750200, "body": "Or <a href=\"https://stackoverflow.com/q/29239586/155423\">How can I create a stack-allocated vector-like container?</a>."}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531856703, "post_id": 51388940, "comment_id": 89750234, "body": "I guess that answers it, but is there really nothing like that in the standard library already? Seems like a surprising oversight... I&#39;d rather not have to include this very general code in my codebase. (edit: I see now it&#39;s a crate, but it still seems surprising to me it&#39;s not in the standard library)"}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531856923, "post_id": 51388940, "comment_id": 89750350, "body": "It looks like more common than arrayvec is Servo&#39;s <a href=\"https://github.com/servo/rust-smallvec\" rel=\"nofollow noreferrer\">smallvec</a>. It seems I&#39;m really not going to get it through the standard library, so I guess I&#39;ll go with that"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531856954, "post_id": 51388940, "comment_id": 89750371, "body": "If you don&#39;t like crates, Rust is <b>not</b> going to be a language that you enjoy. Rust doesn&#39;t even have <i>random number generation</i> in the standard library! Everyone always seems to think that <i>their</i> specific needs are the needs of the vast majority of programmers and that it&#39;s absurd that the standard library doesn&#39;t have what <i>they</i> want. Instead Rust spent time and effort to make reusing code easy to do via Cargo and crates.io. Additionally, the standard library already has &quot;very general code&quot; that you are using and only the code you use ends up in the compiled output."}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531857207, "post_id": 51388940, "comment_id": 89750485, "body": "@Shepmaster coming from JS, I tend to agree with you wholeheartedly, and Cargo/npm are some of my favorite parts of programming. The reason I would argue small vecs should be in the standard library are essentially just that Vectors, Arrays, and Slices are part of the standard library. Slices, as far as I&#39;m concerned, are about as general as small vecs. I recognize that that&#39;s entirely opinion oriented, however."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531857355, "post_id": 51388940, "comment_id": 89750545, "body": "Note that you <i>had a choice</i> in the implementation in the first place because there isn&#39;t something in the standard library. Anyway, if you feel that strongly about it, propose to merge the crate into the standard library. Things can always be added, but they can <b>never</b> be removed due to backwards compatibility guarantees."}], "owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 24, "favorite_count": 0, "closed_date": 1531856969, "answer_count": 0, "score": 0, "last_activity_date": 1531856549, "creation_date": 1531855844, "last_edit_date": 1531856549, "question_id": 51388940, "link": "https://stackoverflow.com/questions/51388940/retaining-a-sized-slice", "closed_reason": "Duplicate", "title": "Retaining a sized slice", "body": "<p>I have a struct <code>Message</code> as follows:</p>\n\n<pre><code>struct Message&lt;'a&gt; {\n    message_type: String,\n    data: &amp;'a [u8],\n}\n</code></pre>\n\n<p>The <a href=\"https://github.com/mbr/socketcan-rs\" rel=\"nofollow noreferrer\">socketcan</a> library has the <a href=\"https://docs.rs/socketcan/1.7.0/socketcan/struct.CANFrame.html#method.data\" rel=\"nofollow noreferrer\"><code>CANFrame::data</code></a> method that returns a <code>&amp;[u8]</code>. </p>\n\n<p>I would not like to copy this into a vector, as I'd like it to all remain in the <code>Message</code> object on the stack, but I want to move the data from one to another.</p>\n\n<pre><code>match socket.read_frame() {\n    Ok(frame) =&gt; {\n        let message = Message {\n            message_type: format!(\"{}\", frame.id()),\n            data: frame.data().clone(),\n        };\n</code></pre>\n\n<p>However, the result <code>frame.data()</code> does not live long enough as the frame's scope is (and should be) fairly short:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `frame` does not live long enough\n  --&gt; src/main.rs:27:31\n   |\n27 |                         data: frame.data().clone(),\n   |                               ^^^^^ borrowed value does not live long enough\n...\n39 |             }\n   |             - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>I know that the slice is only going to be at most 8 elements, as that's the limitation of the CAN protocol. What I really want is a struct that holds a <code>[u8]</code> as well as a <code>usize</code> (or <code>u8</code> would also be valid) and thus can be converted to a slice with the correct size.</p>\n\n<p>I'm just trying to figure out the idiomatic way to move (in the English \"move\" sense, as I may not want to use move semantics here -- not sure) the data from the <code>CANFrame</code> to the <code>Message</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 650, "user_id": 996314, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4d6f299c3fe907046a23f106f7b56995?s=128&d=identicon&r=PG&f=1", "display_name": "Rokit", "link": "https://stackoverflow.com/users/996314/rokit"}, "is_accepted": false, "score": 1, "last_activity_date": 1587095748, "creation_date": 1587095748, "answer_id": 61263897, "question_id": 51388721, "link": "https://stackoverflow.com/questions/51388721/is-it-possible-to-have-wasm-bindgen-ignore-certain-public-functions-in-an-impl/61263897#61263897", "title": "Is it possible to have wasm-bindgen ignore certain public functions in an impl?", "body": "<p>Yes, you can use multiple <code>impl</code> blocks and add <code>#[wasm_bindgen]</code> selectively.</p>\n\n<pre><code>impl Foo {\n    // pub fns internal to library\n}\n\n#[wasm_bindgen]\nimpl Foo {\n    // pub fns to export to JS\n}\n</code></pre>\n"}], "owner": {"reputation": 385, "user_id": 5577384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7265224a43bec8e07c971f2b11273e9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam R", "link": "https://stackoverflow.com/users/5577384/adam-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1587095748, "creation_date": 1531854926, "question_id": 51388721, "link": "https://stackoverflow.com/questions/51388721/is-it-possible-to-have-wasm-bindgen-ignore-certain-public-functions-in-an-impl", "title": "Is it possible to have wasm-bindgen ignore certain public functions in an impl?", "body": "<p>Is it possible to have wasm-bindgen ignore (not produce bindings for) certain public functions in an impl?  I have an impl for which I want some public functions to have bindings, but other public functions for which I don't want bindings.</p>\n"}, {"tags": ["rust", "closures", "ownership"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1531842414, "post_id": 51385381, "comment_id": 89743020, "body": "The <code>unwrap</code> call is going to move data out of the <code>Option</code> you&#39;re borrowing. You should interject an <code>Option::as_ref</code>, which turns an <code>&amp;Option&lt;T&gt;</code> into an <code>Option&lt;&amp;T&gt;</code>, this way you can unwrap the option and still only be borrowing the data. <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_ref\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/option/enum.Option.html#method.as_ref</a>"}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 4, "last_activity_date": 1531846229, "last_edit_date": 1531846229, "creation_date": 1531845430, "answer_id": 51386397, "question_id": 51385381, "link": "https://stackoverflow.com/questions/51385381/how-to-borrow-an-unwrapped-optiont/51386397#51386397", "title": "How to borrow an unwrapped Option&lt;T&gt;?", "body": "<p>You are looking for <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_ref\" rel=\"nofollow noreferrer\"><code>Option::as_ref</code></a>:</p>\n\n<blockquote>\n  <p>Converts from <code>Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.</p>\n</blockquote>\n\n<p>The following code solves your problem:</p>\n\n<pre><code>let pos = a.position.as_ref().unwrap();\n</code></pre>\n\n<p>For a mutable version, <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_mut\" rel=\"nofollow noreferrer\"><code>Option::as_mut</code></a> is provided.</p>\n\n<p>Your code does not work, because as <a href=\"https://stackoverflow.com/questions/51385381/how-to-borrow-an-unwrapped-optiont/51386397#comment89743020_51385381\">stated by turbulencetoo</a> you try to move the data out of the <code>Option</code> and borrow the moved data.</p>\n\n<p>However, in this case the better solution would be <a href=\"https://doc.rust-lang.org/1.8.0/book/if-let.html\" rel=\"nofollow noreferrer\">if let</a>:</p>\n\n<pre><code>if let Some(ref pos) = a.position {\n    a.distance = Some(calculate_distance(&amp;x, &amp;y, &amp;pos.latitude, &amp;pos.longitude));\n}\n</code></pre>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/22282117/how-do-i-borrow-a-reference-to-what-is-inside-an-optiont\">How do I borrow a reference to what is inside an Option&lt;T&gt;?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/50482210/how-to-unwrap-a-result/50482322#50482322\">How to unwrap a &amp;Result&lt;_,_&gt;?</a></li>\n</ul>\n"}], "owner": {"reputation": 617, "user_id": 3473012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/goi2u.png?s=128&g=1", "display_name": "PEAR", "link": "https://stackoverflow.com/users/3473012/pear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 960, "favorite_count": 0, "closed_date": 1531848389, "answer_count": 1, "score": 0, "last_activity_date": 1531846229, "creation_date": 1531841879, "last_edit_date": 1531845586, "question_id": 51385381, "link": "https://stackoverflow.com/questions/51385381/how-to-borrow-an-unwrapped-optiont", "closed_reason": "Duplicate", "title": "How to borrow an unwrapped Option&lt;T&gt;?", "body": "<p>I want to iterate over a vector using <code>.iter_mut()</code> and <code>.map()</code>:</p>\n\n<pre><code>fn calculate_distances(planes : &amp;mut Vec&lt;Aeroplane&gt;, x: f64, y: f64) {\n    fn calculate_distance(x1: &amp;f64, y1: &amp;f64, x2: &amp;f64, y2: &amp;f64) -&gt; f6 { ... }\n    planes.iter_mut().map(|a| if a.position.is_some() {\n        let pos: &amp;Position = &amp;a.position.unwrap();\n        a.distance = Some(calculate_distance(&amp;x, &amp;y, &amp;pos.latitude, &amp;pos.longitude));\n    });\n}\n</code></pre>\n\n<p><code>Aeroplane</code> contains instance of my <code>Position</code> struct:</p>\n\n<pre><code>struct Position {\n    latitude: f64,\n    longitude: f64,\n}\n</code></pre>\n\n<p>In my understanding I'm just borrowing the position information not moving out anything, but the borrow-checker refuses my code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n   --&gt; src/main.rs:145:31\n    |\n  4 |         let pos: &amp;Position = &amp;a.position.unwrap();\n    |                               ^ cannot move out of borrowed content\n</code></pre>\n\n<p>Where is my mistake?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531839890, "post_id": 51384707, "comment_id": 89741356, "body": "That&#39;s another issue solved by NLL"}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531839969, "post_id": 51384707, "comment_id": 89741401, "body": "@Boiethios What do you mean? What is NLL? (it seems sarcastic, hope it&#39;s not, I try to do my best)."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1531840048, "post_id": 51384707, "comment_id": 89741452, "body": "There has been a bunch of questions like yours. NLL is a new feature soon coming to the compiler. For now, put your binding in a scope to &quot;cancel&quot; it at the end of the scope."}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531840157, "post_id": 51384707, "comment_id": 89741507, "body": "@Boiethios Ok thanks! Maybe you could post your comment as an answer? (even if it&#39;s similar to some other questions, maybe it could help users since I did not found a similar question (because I did not know how to search for that need))"}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531840755, "post_id": 51384707, "comment_id": 89741919, "body": "@Boiethios Ok thank you."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1531841632, "post_id": 51384707, "comment_id": 89742499, "body": "Questions closed as duplicates are not deleted; they stick around, for the explicit purpose of helping future users who cannot find the &quot;canonical&quot; question. It&#39;s better to have a network of duplicates that all link to a common target than a bunch of isolated questions with slightly different answers."}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1531842003, "post_id": 51384707, "comment_id": 89742739, "body": "@trentcl Thank you for your answer :)"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 26, "favorite_count": 0, "closed_date": 1531840737, "answer_count": 0, "score": 1, "last_activity_date": 1531839896, "creation_date": 1531839816, "last_edit_date": 1531839896, "question_id": 51384707, "link": "https://stackoverflow.com/questions/51384707/bind-a-reference-to-a-struct-property-to-a-variable-inside-a-function-returning", "closed_reason": "Duplicate", "title": "Bind a reference to a struct property to a variable inside a function returning a mutable reference", "body": "<p>This codes:</p>\n\n<pre><code>struct A {\n    x: i32\n}\n\nstruct B {\n    y: A\n}\n\nimpl B {\n    pub fn new(y: A) -&gt; Self {\n        B {y: y}\n    }\n\n    pub fn fn1(&amp;mut self) -&gt; &amp;mut Self {\n        let z = &amp;self.y;\n        println!(\"{:?}\", z.x);\n        self\n    }\n}\n\nfn main() {\n    let a = A {x: 10};\n    B::new(a).fn1();\n}\n</code></pre>\n\n<p>Produces this error:</p>\n\n<pre><code>Compiling playground v0.0.1 (file:///playground)\nerror[E0502]: cannot borrow `*self` as mutable because `self.y` is also borrowed as immutable\n  --&gt; src/main.rs:17:9\n   |\n15 |         let z = &amp;self.y;\n   |                  ------ immutable borrow occurs here\n16 |         println!(\"{:?}\", z.x);\n17 |         self\n   |         ^^^^ mutable borrow occurs here\n18 |     }\n   |     - immutable borrow ends here\n</code></pre>\n\n<p>It's a simplified example, the code is more complex. I would like to create a var that is a reference to a property of a struct. The relevant part is:</p>\n\n<pre><code>pub fn fn1(&amp;mut self) -&gt; &amp;mut Self {\n    let z = &amp;self.y;\n    println!(\"{:?}\", z.x);\n    self\n}\n</code></pre>\n\n<p>It works if I do not use a local var <code>z</code> and directly use <code>self.y.x</code>:</p>\n\n<pre><code>pub fn fn1(&amp;mut self) -&gt; &amp;mut Self {\n    println!(\"{:?}\", self.y.x);\n    self\n}\n</code></pre>\n\n<p>Assuming my code is a bit more complex and I would like to use a temporary variable which is a reference one property of the struct (a.k.a <code>B</code>), is there a way to set <code>z</code> to <code>self.y</code> without copying the content of <code>y</code>? (so I thought I need a reference because I don't ant to copy).</p>\n\n<p><em>Maybe my question is not clear enough, feel free to ask, I can edit if required! Sorry if it's a duplicate. And sorry for the title too.</em></p>\n"}, {"tags": ["tcp", "rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 146, "user_id": 2055065, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b7eb4e5e16d6065e239134549c0929d3?s=128&d=identicon&r=PG", "display_name": "Markus Ebner", "link": "https://stackoverflow.com/users/2055065/markus-ebner"}, "is_accepted": true, "score": 3, "last_activity_date": 1537987133, "last_edit_date": 1537987133, "creation_date": 1537986845, "answer_id": 52524135, "question_id": 51381363, "link": "https://stackoverflow.com/questions/51381363/how-can-i-send-a-stream-of-data-using-tokios-tcpstream/52524135#52524135", "title": "How can I send a stream of data using Tokio&#39;s TcpStream?", "body": "<p>If you want to have two completely independent streams of data on the socket, you can use the <a href=\"https://docs.rs/tokio/0.1.8/tokio/prelude/trait.Stream.html#method.split\" rel=\"nofollow noreferrer\"><code>split()</code></a> method on the <code>TcpStream</code> in the current version of Tokio:</p>\n\n<pre><code>let connection = TcpStream::connect(&amp;address);\nconnection.and_then(|socket| {\n    let (rx, tx) = socket.split();\n    //Independently use tx/rx for sending/receiving\n    return Ok(());\n});\n</code></pre>\n\n<p>After the split, you can use <code>rx</code> (the receiving half) and <code>tx</code> (the sending half) independently. Here is a small example that treats sending and receiving as completely independent. The sender-half simply periodically sends the same message, whereas the receiving half just prints all incomming data:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio;\n\nuse self::futures::{Future, Poll, Stream};\nuse self::tokio::net::TcpStream;\nuse tokio::io::{AsyncRead, AsyncWrite, Error, ReadHalf};\nuse tokio::prelude::*;\nuse tokio::timer::Interval;\n\n//Receiver struct that implements the future trait\n//this exclusively handles incomming data and prints it to stdout\nstruct Receiver {\n    rx: ReadHalf&lt;TcpStream&gt;, //receiving half of the socket stream\n}\nimpl Future for Receiver {\n    type Item = ();\n    type Error = Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Self::Item, Self::Error&gt; {\n        let mut buffer = vec![0u8; 1000]; //reserve 1000 bytes in the receive buffer\n                                          //get all data that is available to us at the moment...\n        while let Async::Ready(num_bytes_read) = self.rx.poll_read(&amp;mut buffer)? {\n            if num_bytes_read == 0 {\n                return Ok(Async::Ready(()));\n            } //socket closed\n            print!(\"{}\", String::from_utf8_lossy(&amp;buffer[..num_bytes_read]));\n        }\n        return Ok(Async::NotReady);\n    }\n}\n\nfn main() {\n    let address = \"127.0.0.1:2323\".parse().expect(\"Unable to parse address\");\n    let connection = TcpStream::connect(&amp;address);\n    //wait for the connection to be established\n    let client = connection\n        .and_then(|socket| {\n            //split the successfully connected socket in half (receive / send)\n            let (rx, mut tx) = socket.split();\n\n            //set up a simple sender, that periodically (1sec) sends the same message\n            let sender = Interval::new_interval(std::time::Duration::from_millis(1000))\n                .for_each(move |_| {\n                    //this lambda is invoked once per passed second\n                    tx.poll_write(&amp;vec![82, 117, 115, 116, 10]).map_err(|_| {\n                        //shut down the timer if an error occured (e.g. socket was closed)\n                        tokio::timer::Error::shutdown()\n                    })?;\n                    return Ok(());\n                }).map_err(|e| println!(\"{}\", e));\n            //start the sender\n            tokio::spawn(sender);\n\n            //start the receiver\n            let receiver = Receiver { rx };\n            tokio::spawn(receiver.map_err(|e| println!(\"{}\", e)));\n\n            return Ok(());\n        }).map_err(|e| println!(\"{}\", e));\n\n    tokio::run(client);\n}\n</code></pre>\n\n<p>For some applications, this is enough. However, often you will have a defined protocol / format on the connection. HTTP connections, for example, always consist of requests and responses, each of which consists of a header and the body. Instead of directly working on the byte level, Tokio offers the traits <code>Encoder</code> and <code>Decoder</code> you fit onto a socket, which decodes your protocol and directly gives you the entities you want to work with. For an example you can either look at the very basic <a href=\"https://github.com/tokio-rs/tokio/blob/46353737e7ce60ec8b3e77c044a6b2583de2fd51/examples/tinyhttp.rs#L111-L225\" rel=\"nofollow noreferrer\">HTTP implementation</a> or the <a href=\"https://github.com/tokio-rs/tokio/blob/3dd95a9ff14109f2b27d181960f478ad67c0c1ae/tokio-codec/src/lines_codec.rs\" rel=\"nofollow noreferrer\">line-based</a> codec.</p>\n\n<p>It gets a bit more complicated when an incoming message triggers an outgoing message. For the simplest case (every incoming message leads to exactly one outgoing message) you can have a look at <a href=\"https://github.com/tokio-rs/tokio/blob/46353737e7ce60ec8b3e77c044a6b2583de2fd51/examples/tinydb.rs#L119-L155\" rel=\"nofollow noreferrer\">this</a> official request / response example.</p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2083, "favorite_count": 2, "accepted_answer_id": 52524135, "answer_count": 1, "score": 4, "last_activity_date": 1537987133, "creation_date": 1531830355, "last_edit_date": 1531848574, "question_id": 51381363, "link": "https://stackoverflow.com/questions/51381363/how-can-i-send-a-stream-of-data-using-tokios-tcpstream", "title": "How can I send a stream of data using Tokio&#39;s TcpStream?", "body": "<p>I am trying to implement a TCP client in Rust. I am able to read data coming from the server but I can not manage to send data. </p>\n\n<p>Here is the code that I am working on:</p>\n\n<pre><code>extern crate bytes;\nextern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse self::bytes::BytesMut;\nuse self::futures::{Future, Poll, Stream};\nuse self::tokio_core::net::TcpStream;\nuse self::tokio_core::reactor::Core;\nuse self::tokio_io::AsyncRead;\nuse std::io;\n\n#[derive(Default)]\npub struct TcpClient {}\n\nstruct AsWeGetIt&lt;R&gt;(R);\n\nimpl&lt;R&gt; Stream for AsWeGetIt&lt;R&gt;\nwhere\n    R: AsyncRead,\n{\n    type Item = BytesMut;\n    type Error = io::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        let mut buf = BytesMut::with_capacity(1000);\n\n        self.0\n            .read_buf(&amp;mut buf)\n            .map(|async| async.map(|_| Some(buf)))\n    }\n}\n\nimpl TcpClient {\n    pub fn new() -&gt; Self {\n        Self {}\n    }\n\n    pub fn connectToTcpServer(&amp;mut self) -&gt; bool {\n        let mut core = Core::new().unwrap();\n        let handle = core.handle();\n\n        let address = \"127.0.0.1:2323\".parse().expect(\"Unable to parse address\");\n        let connection = TcpStream::connect(&amp;address, &amp;handle);\n\n        let client = connection\n            .and_then(|tcp_stream| {\n                AsWeGetIt(tcp_stream).for_each(|buf| {\n                    println!(\"{:?}\", buf);\n                    Ok(())\n                })\n            })\n            .map_err(|e| eprintln!(\"Error: {}\", e));\n\n        core.run(client).expect(\"Unable to run the event loop\");\n        return true;\n    }\n}\n</code></pre>\n\n<p>How can I add asynchronous data sending functionality?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 7133, "user_id": 27074, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d787ce9740a19eac110217bc8af43cbe?s=128&d=identicon&r=PG", "display_name": "Chris Jefferson", "link": "https://stackoverflow.com/users/27074/chris-jefferson"}, "edited": false, "score": 0, "creation_date": 1531822460, "post_id": 51378583, "comment_id": 89729090, "body": "Thanks!   I&#39;ve just corrected my question (I differed in two places if I wanted 0..len-1, or 1..len. I wanted 0..len-1). You might want to make your answer sync up with that (sorry!)"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 7133, "user_id": 27074, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d787ce9740a19eac110217bc8af43cbe?s=128&d=identicon&r=PG", "display_name": "Chris Jefferson", "link": "https://stackoverflow.com/users/27074/chris-jefferson"}, "edited": false, "score": 0, "creation_date": 1531830415, "post_id": 51378583, "comment_id": 89734426, "body": "@ChrisJefferson Updated."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 8, "last_activity_date": 1531830409, "last_edit_date": 1531830409, "creation_date": 1531821860, "answer_id": 51378583, "question_id": 51378447, "link": "https://stackoverflow.com/questions/51378447/compare-a-vec-with-a-range-in-rust/51378583#51378583", "title": "Compare a Vec with a Range in rust", "body": "<p>You can use iterators to compare a <code>Vec&lt;T&gt;</code> (or more generally, a slice <code>[T]</code>) to a range (<a href=\"https://play.rust-lang.org/?gist=399f9d14c13d5a45ff8a3690bd579b6d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>let v = vec![0, 1, 2, 3, 4];\n\nif v.iter().cloned().eq(0..v.len()) {\n    println!(\"v contains 0..5\");\n} else {\n    println!(\"v doesn't contain 0..5\");\n}\n</code></pre>\n\n<p>Let's dissect the important part:</p>\n\n<pre><code>v.iter().cloned().eq(0..v.len())\n</code></pre>\n\n<ul>\n<li><code>v.iter()</code> creates an iterator over references to the elements in the vector (<code>Iterator&lt;Item = &amp;{integer}&gt;</code>).</li>\n<li><a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.cloned\" rel=\"nofollow noreferrer\"><code>.cloned()</code></a> clones each element in the iterator to go from reference to owned value. This is required because we cannot compare <code>&amp;{integer}</code> to <code>{integer}</code>. Luckily, cloning a simple integer is basically free. So now we have <code>Iterator&lt;Item = {integer}&gt;</code>.</li>\n<li><a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.eq\" rel=\"nofollow noreferrer\"><code>.eq</code> is a method of <code>Iterator</code></a> which compares the iterator to another iterator.</li>\n<li><code>0..v.len()</code> is an range from 0 (inclusive) to <code>v.len()</code> (exclusive). <a href=\"https://doc.rust-lang.org/stable/std/ops/struct.Range.html#implementations\" rel=\"nofollow noreferrer\">Such a range implements <code>Iterator</code></a>.</li>\n</ul>\n"}], "owner": {"reputation": 7133, "user_id": 27074, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d787ce9740a19eac110217bc8af43cbe?s=128&d=identicon&r=PG", "display_name": "Chris Jefferson", "link": "https://stackoverflow.com/users/27074/chris-jefferson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1057, "favorite_count": 1, "accepted_answer_id": 51378583, "answer_count": 1, "score": 4, "last_activity_date": 1531830409, "creation_date": 1531821493, "last_edit_date": 1531822410, "question_id": 51378447, "link": "https://stackoverflow.com/questions/51378447/compare-a-vec-with-a-range-in-rust", "title": "Compare a Vec with a Range in rust", "body": "<p>I want to check if a <code>Vec</code> is equal to <code>[0, 1, 2, ...]</code>. I've tried various variants of:</p>\n\n<pre><code>vec == &amp;(0..vec.len())\n</code></pre>\n\n<p>But none of them seem to work. Do I just have to write a loop out long-hand?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531797290, "post_id": 51372702, "comment_id": 89717195, "body": "Can you explain what you find confusing about the compiler message: <code>no two closures, even if identical, have the same type; consider boxing your closure and&#47;or using it as a trait object</code>? That way, we know how to usefully answer your question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531797509, "post_id": 51372702, "comment_id": 89717238, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/39083375/155423\">Expected closure, found a different closure</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51372702/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 42073, "user_id": 113632, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/f0aa6977c75f54ca9033d4f4d0244023?s=128&d=identicon&r=PG", "display_name": "dimo414", "link": "https://stackoverflow.com/users/113632/dimo414"}, "edited": false, "score": 0, "creation_date": 1531797680, "post_id": 51372702, "comment_id": 89717269, "body": "I experimented with <a href=\"http://hg.mwdiamond.com/rivet\" rel=\"nofollow noreferrer\">a few different dispatching patterns</a>, which you might find helpful / interesting."}, {"owner": {"reputation": 1475, "user_id": 7327755, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EsjT4.jpg?s=128&g=1", "display_name": "Ashton Wiersdorf", "link": "https://stackoverflow.com/users/7327755/ashton-wiersdorf"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531798013, "post_id": 51372702, "comment_id": 89717332, "body": "@Shepmaster It does indeed look like a similar problem. Thanks for linking to it. I&#39;d appreciate a clearer answer to my specific problem, though. :) I think that&#39;d be valuable not only to myself but anyone looking for &quot;dispatch table&quot;."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1531798329, "post_id": 51372702, "comment_id": 89717395, "body": "<code>consider boxing your closure and&#47;or using it as a trait object</code> That&#39;s the right answer, right there. Give your hash map an explicit type that all of the closures can agree with."}, {"owner": {"reputation": 1475, "user_id": 7327755, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EsjT4.jpg?s=128&g=1", "display_name": "Ashton Wiersdorf", "link": "https://stackoverflow.com/users/7327755/ashton-wiersdorf"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1531798607, "post_id": 51372702, "comment_id": 89717445, "body": "@SilvioMayolo That sounds like it would work. How do I do that though? (I put that at the bottom of the question.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531799069, "post_id": 51372702, "comment_id": 89717542, "body": "If you are looking for the exact syntax, that question has two answers showing syntax. <a href=\"https://stackoverflow.com/q/29371914/155423\">What is the inferred type of a vector of closures?</a> also does."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531799560, "post_id": 51372968, "comment_id": 89717655, "body": "<code>dispatch.get(&amp;String::from(&quot;+&quot;))</code> \u2014 unneeded allocation. <code>dispatch.get(&quot;+&quot;)</code> is fine to lookup. I don&#39;t know why the <code>HashMap</code> is <code>String</code>, but that could probably be a <code>&amp;str</code> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1531799587, "post_id": 51372968, "comment_id": 89717662, "body": "<code>hm.get(x).expect(...)</code> -&gt; <code>hm[x]</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531799758, "post_id": 51372968, "comment_id": 89717707, "body": "<code>HashMap&lt;String, fn(i32, i32) -&gt; i32&gt;</code> \u2014 No need to restate the key type; <code>HashMap&lt;_, fn(i32, i32) -&gt; i32&gt;</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531818634, "post_id": 51372968, "comment_id": 89726397, "body": "@Shepmaster Or you can put the full type and use <code>&quot;+&quot;.into()</code>"}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 4, "last_activity_date": 1531819236, "last_edit_date": 1531819236, "creation_date": 1531799369, "answer_id": 51372968, "question_id": 51372702, "link": "https://stackoverflow.com/questions/51372702/how-do-i-make-a-dispatch-table-in-rust/51372968#51372968", "title": "How do I make a dispatch table in Rust?", "body": "<p>There are a few orthogonal issues here. First and foremost, your hashmap is immutable. You use <code>let</code> instead of <code>let mut</code>, which is good practice, but in order to be able to insert into it, we need it to (at least initially) be <code>let mut</code>. If you're planning to modify the hashmap after the initial construction, you may want to <code>let mut</code> the <code>dispatch</code> variable as well.</p>\n\n<pre><code>let dispatch = {\n    let mut temp = HashMap::new();\n    temp.insert(String::from(\"+\"), |a, b| a + b);\n    temp.insert(String::from(\"-\"), |a, b| a - b);\n    temp\n};\n</code></pre>\n\n<p>Now you need an explicit type for your hashmap. The two closures you've defined, as far as the compiler is concerned, are of entirely distinct types. However, they are both <em>compatible</em> with <code>fn(i32, i32) -&gt; i32</code>, the type of binary functions on <code>i32</code> (you can replace <code>i32</code> with a different numerical type if you wish), so let's make the type explicit.</p>\n\n<pre><code>let dispatch = {\n    let mut temp: HashMap&lt;String, fn(i32, i32) -&gt; i32&gt; = HashMap::new();\n    temp.insert(String::from(\"+\"), |a, b| a + b);\n    temp.insert(String::from(\"-\"), |a, b| a - b);\n    temp\n};\n</code></pre>\n\n<p>Finally, <code>HashMap.get</code> returns an <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>std::option::Option</code></a>, not a direct value, so we need to unwrap it. <code>get</code> returns <code>None</code> if the key isn't found. If this was a large project, we'd handle that error appropriately, perhaps by logging it or telling the user, but for something simple like this, we simply need to use <code>expect</code>, which essentially tells the compiler \"Yes, I know this could go horribly wrong. I'm willfully ignoring that fact.\" which is perfectly fine for our simple example.</p>\n\n<pre><code>let plus = dispatch.get(&amp;String::from(\"+\")).expect(\"Couldn't find +\");\n</code></pre>\n\n\n\n<pre><code>let minus = dispatch.get(&amp;String::from(\"-\")).expect(\"Couldn't find -\");\n</code></pre>\n\n<p><strong>Complete example</strong></p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let dispatch = {\n        let mut temp: HashMap&lt;String, fn(i32, i32) -&gt; i32&gt; = HashMap::new();\n        temp.insert(\"+\".into(), |a, b| a + b);\n        temp.insert(\"-\".into(), |a, b| a - b);\n        temp\n    };\n\n    let plus = dispatch[\"+\"];\n    println!(\"2 + 3 = {}\", plus(2, 3));\n\n    let minus = dispatch[\"-\"];\n    println!(\"2 - 3 = {}\", minus(2, 3));\n}\n</code></pre>\n\n<p>Note that you can replace <code>String</code> with <code>&amp;'static str</code>:</p>\n\n<pre><code>let dispatch = {\n    let mut temp: HashMap&lt;_, fn(i32, i32) -&gt; i32&gt; = HashMap::new();\n    temp.insert(\"+\", |a, b| a + b);\n    temp.insert(\"-\", |a, b| a - b);\n    temp\n};\n</code></pre>\n"}], "owner": {"reputation": 1475, "user_id": 7327755, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EsjT4.jpg?s=128&g=1", "display_name": "Ashton Wiersdorf", "link": "https://stackoverflow.com/users/7327755/ashton-wiersdorf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 474, "favorite_count": 0, "closed_date": 1531799415, "accepted_answer_id": 51372968, "answer_count": 1, "score": 0, "last_activity_date": 1531819236, "creation_date": 1531797130, "last_edit_date": 1531798515, "question_id": 51372702, "link": "https://stackoverflow.com/questions/51372702/how-do-i-make-a-dispatch-table-in-rust", "closed_reason": "Duplicate", "title": "How do I make a dispatch table in Rust?", "body": "<p>I'm trying to build a simple RPN calculator, and I've got the basics working. I'd like to make a <a href=\"https://en.wikipedia.org/wiki/Dispatch_table\" rel=\"nofollow noreferrer\">dispatch table</a> to implement the various calculator functions. If I were doing this in Perl, I would write something like:</p>\n\n<pre class=\"lang-perl prettyprint-override\"><code>my %ops = (\n  '+' =&gt; sub { +shift + +shift; },\n  '-' =&gt; sub { +shift - +shift; },\n  '*' =&gt; sub { +shift * +shift; },\n  '/' =&gt; sub { +shift / +shift; }\n);\n</code></pre>\n\n<p>or in JavaScript:</p>\n\n<pre><code>let ops = {\n    \"+\": (a, b) =&gt; a + b,\n    \"-\": (a, b) =&gt; a - b,\n    \"*\": (a, b) =&gt; a * b,\n    \"/\": (a, b) =&gt; a / b\n};\n</code></pre>\n\n<p>This is what I've tried so far in Rust:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    println!(\"Going to call +\");\n\n    let dispatch = HashMap::new();\n\n    dispatch.insert(String::from(\"+\"), |a, b| a + b);\n    dispatch.insert(String::from(\"-\"), |a, b| a - b);\n\n    let plus = dispatch.get(&amp;String::from(\"+\"));\n    println!(\"2 + 3 = {}\", plus(2, 3));\n\n    let minus = dispatch.get(&amp;String::from(\"-\"));\n    println!(\"2 - 3 = {}\", minus(2, 3));\n}\n</code></pre>\n\n<p>When I try compiling, I get these errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:9:40\n  |\n9 |     dispatch.insert(String::from(\"-\"), |a, b| a - b);\n  |                                        ^^^^^^^^^^^^ expected closure, found a different closure\n  |\n  = note: expected type `[closure@src/main.rs:8:40: 8:52]`\n             found type `[closure@src/main.rs:9:40: 9:52]`\n  = note: no two closures, even if identical, have the same type\n  = help: consider boxing your closure and/or using it as a trait object\n\nerror[E0618]: expected function, found enum variant `plus`\n  --&gt; src/main.rs:12:28\n   |\n11 |     let plus = dispatch.get(&amp;String::from(\"+\"));\n   |         ---- `plus` defined here\n12 |     println!(\"2 + 3 = {}\", plus(2, 3));\n   |                            ^^^^^^^^^^ not a function\nhelp: `plus` is a unit variant, you need to write it without the parenthesis\n   |\n12 |     println!(\"2 + 3 = {}\", plus);\n   |                            ^^^^\n\nerror[E0618]: expected function, found enum variant `minus`\n  --&gt; src/main.rs:15:28\n   |\n14 |     let minus = dispatch.get(&amp;String::from(\"-\"));\n   |         ----- `minus` defined here\n15 |     println!(\"2 - 3 = {}\", minus(2, 3));\n   |                            ^^^^^^^^^^^ not a function\nhelp: `minus` is a unit variant, you need to write it without the parenthesis\n   |\n15 |     println!(\"2 - 3 = {}\", minus);\n   |                            ^^^^^\n</code></pre>\n\n<p>What does \"no two closures, even if identical, have the same type\" mean? How can I make a HashMap hold a closure, and then call it?</p>\n\n<p>It sounds like using <code>Box</code> would fix it... Like I said, I'm pretty new, and I haven't used <code>Box</code>. How do I get what's in the box out of the box?</p>\n"}, {"tags": ["docker", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531794038, "post_id": 51372229, "comment_id": 89716566, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51372229/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1531796602, "creation_date": 1531796602, "answer_id": 51372648, "question_id": 51372229, "link": "https://stackoverflow.com/questions/51372229/cannot-run-a-rust-application-in-a-docker-image-not-yet-stable-as-a-const-fn/51372648#51372648", "title": "Cannot run a Rust application in a Docker image: &quot;not yet stable as a const fn&quot;", "body": "<p>Calling <code>AtomicBool::new</code> as a const was <a href=\"https://github.com/rust-lang/rust/pull/46287/commits/6c5f53e65ee5f022611033dbf58c42e26be7f93d\" rel=\"nofollow noreferrer\">stabilized in Rust 1.24.0</a>. Using that version (or any newer) to compile with solves your problem:</p>\n\n<pre><code>FROM rust:1.24.0\n</code></pre>\n"}], "owner": {"reputation": 1370, "user_id": 4672397, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/23f394af81c7dfb4bae9fcc09fe784b7?s=128&d=identicon&r=PG&f=1", "display_name": "fuzzi", "link": "https://stackoverflow.com/users/4672397/fuzzi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 0, "accepted_answer_id": 51372648, "answer_count": 1, "score": -1, "last_activity_date": 1531796602, "creation_date": 1531792990, "last_edit_date": 1531794025, "question_id": 51372229, "link": "https://stackoverflow.com/questions/51372229/cannot-run-a-rust-application-in-a-docker-image-not-yet-stable-as-a-const-fn", "title": "Cannot run a Rust application in a Docker image: &quot;not yet stable as a const fn&quot;", "body": "<p>I am following <a href=\"https://hub.docker.com/_/rust/\" rel=\"nofollow noreferrer\">the tutorial to run a Rust application in a Docker image</a>. I have the following contents in my Dockerfile:</p>\n\n<pre><code>FROM rust:1.23.0\n\nWORKDIR src/main\n\nCOPY . .\n\nRUN cargo install\n\nCMD [\"main\"]\n</code></pre>\n\n<p>When I run this using <code>docker build -t my-rust-app .</code>, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `std::sync::atomic::AtomicBool::new` is not yet stable as a const fn\n   --&gt; /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/yansi-0.4.0/src/paint.rs:274:30\n    |\n274 | static ENABLED: AtomicBool = AtomicBool::new(true);\n    |                              ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: in Nightly builds, add `#![feature(const_atomic_bool_new)]` to the crate attributes to enable\n\nerror: aborting due to previous error\n\nerror: Could not compile `yansi`.\n</code></pre>\n\n<p>What can I do to resolve this error and run the Rust application within a Docker container?  I have been looking at this for a few hours, and have tried variations of <code>rustup update</code> and <code>cargo update</code> within my Dockerfile, but none of these installation have resolved the error.</p>\n"}, {"tags": ["rust", "biginteger"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1531789239, "post_id": 51371674, "comment_id": 89715641, "body": "<code>BigInt::one()</code> would probably be the easiest way."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1531789348, "post_id": 51371674, "comment_id": 89715662, "body": "@loganfsmyth That would be way smarter and less convoluted than my answer. May I suggest posting that as an answer?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1531789428, "post_id": 51371674, "comment_id": 89715679, "body": "@SilvioMayolo Nah you should just add it to yours :)"}], "answers": [{"comments": [{"owner": {"reputation": 133, "user_id": 3134725, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/53d7db90cbd53dd396396d148593b067?s=128&d=identicon&r=PG&f=1", "display_name": "user3134725", "link": "https://stackoverflow.com/users/3134725/user3134725"}, "edited": false, "score": 0, "creation_date": 1531789374, "post_id": 51371825, "comment_id": 89715671, "body": "Thanks.  I was hoping that there was a more succinct way than declaring <code>one</code> as your solution does."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 133, "user_id": 3134725, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/53d7db90cbd53dd396396d148593b067?s=128&d=identicon&r=PG&f=1", "display_name": "user3134725", "link": "https://stackoverflow.com/users/3134725/user3134725"}, "edited": false, "score": 0, "creation_date": 1531789438, "post_id": 51371825, "comment_id": 89715681, "body": "I&#39;m still somewhat new to Rust myself, to be entirely honest, so I don&#39;t know all of the ins and outs. I&#39;m a Haskeller by trade, so I approached this from a type-resolution perspective."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531789805, "post_id": 51371825, "comment_id": 89715735, "body": "The types are redundant. <code>let p = BigInt::from_usize(314159).unwrap(); let q = p - BigInt::one();</code>."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 5, "last_activity_date": 1531789698, "last_edit_date": 1531789698, "creation_date": 1531789145, "answer_id": 51371825, "question_id": 51371674, "link": "https://stackoverflow.com/questions/51371674/how-does-one-subtract-1-from-a-bigint-in-rust/51371825#51371825", "title": "How does one subtract 1 from a BigInt in Rust?", "body": "<p>Rust follows an open world hypothesis when it comes to traits. It knows, based on your annotations, that <code>p</code> is <code>BigInt</code>. It also knows that <code>One::one()</code> has a type which implements <code>One</code>. So Rust is looking for a subtraction operator on <code>BigInt</code> which takes a <code>One</code>-like thing as an argument.</p>\n\n<pre><code>num::BigInt as std::ops::Sub&lt;Foo&gt;&gt;\n</code></pre>\n\n<p>where <code>Foo</code> implements <code>One</code>. Trouble is, <code>BigInt</code> implements <code>Sub</code> <a href=\"https://docs.rs/num/0.2.0/num/struct.BigInt.html#implementations\" rel=\"noreferrer\">in several different ways</a>, so Rust doesn't know whether you're trying to subtract a <code>i32</code>, a <code>u64</code>, or another <code>BigInt</code> from <code>p</code>.</p>\n\n<p>One answer is to be more explicit with your types.</p>\n\n<pre><code>let p: BigInt = FromPrimitive::from_usize(314159).unwrap();\nlet one: BigInt = One::one();\nlet q: BigInt = p - one;\n</code></pre>\n\n<p>However, more succinctly, you may take advantage of the fact that <code>BigInt</code> implements <code>One</code> and help the compiler with type inference that way.</p>\n\n<pre><code>let p: BigInt = FromPrimitive::from_usize(314159).unwrap();\nlet q: BigInt = p - BigInt::one();\n</code></pre>\n\n<p>(Thanks, @loganfsmyth, for this latter solution!)</p>\n"}], "owner": {"reputation": 133, "user_id": 3134725, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/53d7db90cbd53dd396396d148593b067?s=128&d=identicon&r=PG&f=1", "display_name": "user3134725", "link": "https://stackoverflow.com/users/3134725/user3134725"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 429, "favorite_count": 0, "accepted_answer_id": 51371825, "answer_count": 1, "score": 2, "last_activity_date": 1531789908, "creation_date": 1531787808, "last_edit_date": 1531789908, "question_id": 51371674, "link": "https://stackoverflow.com/questions/51371674/how-does-one-subtract-1-from-a-bigint-in-rust", "title": "How does one subtract 1 from a BigInt in Rust?", "body": "<p>I'd like this program to compile and print <code>314158</code> when executed:</p>\n\n<pre><code>extern crate num;\n\nuse num::{BigInt, FromPrimitive, One};\n\nfn main() {\n    let p: BigInt = FromPrimitive::from_usize(314159).unwrap();\n    let q: BigInt = p - One::one();\n    println!(\"q = {}\", q);\n} // end main\n</code></pre>\n\n<p>The compiler error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0284]: type annotations required: cannot resolve `&lt;num::BigInt as std::ops::Sub&lt;_&gt;&gt;::Output == num::BigInt`\n --&gt; src/main.rs:7:23\n  |\n7 |     let q: BigInt = p - One::one();\n  |                       ^\n</code></pre>\n"}, {"tags": ["macros", "rust", "nom"], "answers": [{"tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 6, "last_activity_date": 1531765471, "creation_date": 1531765471, "answer_id": 51367982, "question_id": 51367781, "link": "https://stackoverflow.com/questions/51367781/where-does-noms-i-macro-argument-come-from/51367982#51367982", "title": "Where does nom&#39;s &quot;$i&quot; macro argument come from?", "body": "<p>The trick is that the <code>tag!()</code> macro call is inside the <code>value!</code> macro, which will match against <code>tag!</code> and pass it an additional parameter.  This is described in the file <a href=\"https://github.com/Geal/nom/blob/master/src/macros.rs#L27\" rel=\"noreferrer\">implementing <code>tag!</code></a>.</p>\n"}], "owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 51367982, "answer_count": 1, "score": 5, "last_activity_date": 1553271747, "creation_date": 1531764531, "last_edit_date": 1553271747, "question_id": 51367781, "link": "https://stackoverflow.com/questions/51367781/where-does-noms-i-macro-argument-come-from", "title": "Where does nom&#39;s &quot;$i&quot; macro argument come from?", "body": "<p>I'm trying to understand how Rust macro captures work and am looking at the <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">nom</a> parser library. </p>\n\n<p>Location <a href=\"https://github.com/Geal/nom/blob/2a09d8f887b6261aed57f70ceb3496c602db65b2/src/bytes.rs#L20\" rel=\"nofollow noreferrer\">nom/src/bytes.rs</a> declares macro <code>tag!</code> which captures with <code>($i:expr, $tag: expr)</code>. \nHowever throughout the places where <code>tag!</code> is used it is used with only one argument, i.e. <code>tag!(\"+\")</code>. \nExample: <a href=\"https://github.com/doomrobo/nom-lua53/blob/2070bf4a0579f6d1201dae34af528c3723e5bb69/src/op.rs#L23\" rel=\"nofollow noreferrer\">nom-lua52/op.rs</a>. I've read <a href=\"https://danielkeep.github.io/tlborm/book/\" rel=\"nofollow noreferrer\">tutorials</a> about macros however this construct seems to be special. </p>\n\n<p>It seems like the input <code>$i</code> is somehow <em>implicit</em>? </p>\n"}, {"tags": ["c", "rust", "perf"], "comments": [{"owner": {"reputation": 1632, "user_id": 2429333, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5eb897104dc190de7ea7da0ac29a59ae?s=128&d=identicon&r=PG", "display_name": "pbn", "link": "https://stackoverflow.com/users/2429333/pbn"}, "edited": false, "score": 0, "creation_date": 1531746179, "post_id": 51361727, "comment_id": 89697097, "body": "Have you annotated your FFI C calls with <code>#[no_mangle]</code>? Probably your functions are there but their names are mangled."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1531748431, "post_id": 51361727, "comment_id": 89698535, "body": "Can you show us a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> of what you are working on?"}, {"owner": {"reputation": 1033, "user_id": 3410010, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zFRd3.jpg?s=128&g=1", "display_name": "yadhu", "link": "https://stackoverflow.com/users/3410010/yadhu"}, "edited": false, "score": 1, "creation_date": 1531748587, "post_id": 51361727, "comment_id": 89698640, "body": "Have you enabled frame pointers/debugging symbols in the compiled c code?"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1531776461, "post_id": 51361727, "comment_id": 89712868, "body": "You probably don&#39;t want to use <code>perf record</code> on code you compiled with <code>-pg</code> because that adds extra asm instructions to instrument the binary.  i.e. to make it record which way branches went.  (At least that&#39;s what gcc&#39;s <code>-pg</code> does.)  This is useful for a later profile-guided optimization build, but you don&#39;t want to time a <code>-pg</code> build.  You do want <code>-g</code>, though.  <code>-g</code> adds debug symbols without affecting code-gen."}], "owner": {"reputation": 11, "user_id": 6841902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6979dc133b0d05e946751770f54dfcbb?s=128&d=identicon&r=PG&f=1", "display_name": "Zarghuna Naseem", "link": "https://stackoverflow.com/users/6841902/zarghuna-naseem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 92, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1531748438, "creation_date": 1531743630, "last_edit_date": 1531748438, "question_id": 51361727, "link": "https://stackoverflow.com/questions/51361727/perf-does-not-annotate-c-code-called-by-rust", "title": "Perf does not annotate C code called by Rust", "body": "<p>I am using <code>perf</code> to profile a Rust application which calls some C functions, but I can only find Rust code annotated in the <code>perf</code> report.</p>\n\n<p>I have compiled the binaries using debug arguments (<code>-g</code>, <code>-pg</code> enabled). I run the application as:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sudo perf record -pg --call-graph dwarf env RUST_BACKTRACE=full LD_LIBRARY_PATH=\"&lt;Rust&gt;/lib\" ./target/release/&lt;RustApp&gt;\n</code></pre>\n\n<p>What is my mistake?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531748825, "post_id": 51359860, "comment_id": 89698820, "body": "<i>Is there a way to return a function and take a closure without lifetimes</i> \u2014 yes, don&#39;t use any references."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531748859, "post_id": 51359860, "comment_id": 89698839, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51359860/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. We don&#39;t know what your build process involving <code>wasm_bindgen</code> is. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "owner": {"reputation": 606, "user_id": 906476, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dea7d7e309f00527cfca22512494d41c?s=128&d=identicon&r=PG", "display_name": "Talasan Nicholson", "link": "https://stackoverflow.com/users/906476/talasan-nicholson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1531748548, "creation_date": 1531737350, "last_edit_date": 1531748548, "question_id": 51359860, "link": "https://stackoverflow.com/questions/51359860/is-there-a-way-to-return-a-function-and-take-a-closure-without-lifetimes", "title": "Is there a way to return a function and take a closure without lifetimes?", "body": "<p>I have this:</p>\n\n<pre><code>fn with_name&lt;P&gt;(name: &amp;'static str) -&gt; impl Fn(P) -&gt; String\nwhere\n    P: Fn(&amp;str) -&gt; Markup,\n{\n    move |t| render(t(name))\n}\n</code></pre>\n\n<p>I'm looking for my API to be used like:</p>\n\n<pre><code>with_name(\"hi\")(|title: &amp;str| html! { ... })\n</code></pre>\n\n<p>This works, but wasm_bindgen can't do lifetime/type parameters. Is this over-engineered? Is there a better way?</p>\n"}, {"tags": ["ubuntu", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1531722424, "post_id": 51355650, "comment_id": 89683663, "body": "Have you tried it again, after the error occured?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1531722448, "post_id": 51355650, "comment_id": 89683681, "body": "Can you run <code>rustup default stable</code> ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531748902, "post_id": 51355650, "comment_id": 89698872, "body": "<i>could not download file</i> \u2014 you had a temporary network failure."}], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 10086427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b907ed92a305380e41dfb46dec8064d?s=128&d=identicon&r=PG&f=1", "display_name": "kwebi", "link": "https://stackoverflow.com/users/10086427/kwebi"}, "is_accepted": false, "score": 0, "last_activity_date": 1531724347, "creation_date": 1531724347, "answer_id": 51356216, "question_id": 51355650, "link": "https://stackoverflow.com/questions/51355650/rustup-install-stable-error-during-download/51356216#51356216", "title": "rustup install stable error during download", "body": "<p>I have solved this problem with follows:   </p>\n\n<pre><code>rustup update\nrustup default stable\nsudo apt-get install gcc\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 10086427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b907ed92a305380e41dfb46dec8064d?s=128&d=identicon&r=PG&f=1", "display_name": "kwebi", "link": "https://stackoverflow.com/users/10086427/kwebi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 752, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1531729181, "creation_date": 1531721985, "last_edit_date": 1531729181, "question_id": 51355650, "link": "https://stackoverflow.com/questions/51355650/rustup-install-stable-error-during-download", "title": "rustup install stable error during download", "body": "<p>I install Rust with command:</p>\n\n<pre><code>$ curl -sSf https://static.rust-lang.org/rustup.sh | sh\n</code></pre>\n\n<p>when I run:</p>\n\n<pre><code>$ rustc main.rs\n</code></pre>\n\n<p>this appeared:</p>\n\n<pre><code>error: no default toolchain configured\n</code></pre>\n\n<p>so I run:</p>\n\n<pre><code>rustup install stable\n</code></pre>\n\n<p>then:</p>\n\n<pre><code>info: downloading component 'rust-std'\n 23.2 MiB /  56.2 MiB ( 41 %)  67.2 KiB/s ETA: 503 s                error: component download failed for rust-std-x86_64-unknown-linux-gnu\ninfo: caused by: could not download file from 'https://static.rust-lang.org/dist/2018-07-10/rust-std-1.27.1-x86_64-unknown-linux-gnu.tar.xz' to '/home/kwebi/.rustup/downloads/d3b0d00357cfaecf85651bea6f1d72793a5a859b6b07e9613ba21285922d5d58.partial'\ninfo: caused by: error during download\ninfo: caused by: [56] Failure when receiving data from the peer (OpenSSL SSL_read: error:1408F119:SSL routines:SSL3_GET_RECORD:decryption failed or bad record mac, errno 0)\n</code></pre>\n\n<p>at the first,I use the follow to install rust, the error information printed as before, there is a download error:</p>\n\n<pre><code>$ curl https://sh.rustup.rs -sSf | sh\ncurl: (56) OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 104\nrustup: command failed: downloader https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init /tmp/tmp.2EZ69sGKWR/rustup-init\n</code></pre>\n\n<p>what can I do to install rust currently and completely?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 258, "user_id": 8083690, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BrIvk.png?s=128&g=1", "display_name": "Sam Pagenkopf", "link": "https://stackoverflow.com/users/8083690/sam-pagenkopf"}, "edited": false, "score": 0, "creation_date": 1531716606, "post_id": 51351633, "comment_id": 89681897, "body": "I&#39;m not sure what problem you&#39;re trying to solve. You could simply vec.remove(index) before iterating."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1531684303, "creation_date": 1531684303, "answer_id": 51351729, "question_id": 51351633, "link": "https://stackoverflow.com/questions/51351633/can-you-get-an-iterator-over-all-values-of-a-collection-except-one-and-a-referen/51351729#51351729", "title": "Can you get an iterator over all values of a collection except one and a reference to that element?", "body": "<p>There's no such iterator that I'm aware of, but it's not complicated to create your own:</p>\n\n<pre><code>struct X&lt;'a, T: 'a&gt; {\n    item: &amp;'a T,\n    before: &amp;'a [T],\n    after: &amp;'a [T],\n}\n\nstruct AllButOne&lt;'a, T: 'a&gt; {\n    slice: &amp;'a [T],\n    index: usize,\n}\n\nimpl&lt;'a, T&gt; AllButOne&lt;'a, T&gt; {\n    fn new(slice: &amp;'a [T]) -&gt; Self {\n        AllButOne { slice, index: 0 }\n    }\n}\n\nimpl&lt;'a, T&gt; Iterator for AllButOne&lt;'a, T&gt; {\n    type Item = X&lt;'a, T&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.index &gt; self.slice.len() {\n            return None;\n        }\n\n        let (before, middle) = self.slice.split_at(self.index);\n        let (middle, after) = middle.split_at(1);\n\n        self.index += 1;\n\n        Some(X {\n            before,\n            after,\n            item: &amp;middle[0],\n        })\n    }\n}\n\nfn main() {\n    let a = [1, 2, 3, 4];\n\n    for x in AllButOne::new(&amp;a) {\n        println!(\"{:?}, {}, {:?}\", x.before, x.item, x.after);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>[], 1, [2, 3, 4]\n[1], 2, [3, 4]\n[1, 2], 3, [4]\n[1, 2, 3], 4, []\n</code></pre>\n\n<p>This returns two slices, one for all the values before the current item and one for after. You can perform allocation and stick them into the same collection if you need.</p>\n"}], "owner": {"reputation": 17, "user_id": 10085092, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Itjok_hulfM/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7qwcm1cKlqmQ3UnbBWO1v-Ku8TWcQ/mo/photo.jpg?sz=128", "display_name": "daw kot", "link": "https://stackoverflow.com/users/10085092/daw-kot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 2, "accepted_answer_id": 51351729, "answer_count": 1, "score": 2, "last_activity_date": 1531684303, "creation_date": 1531683646, "last_edit_date": 1531683683, "question_id": 51351633, "link": "https://stackoverflow.com/questions/51351633/can-you-get-an-iterator-over-all-values-of-a-collection-except-one-and-a-referen", "title": "Can you get an iterator over all values of a collection except one and a reference to that element?", "body": "<p>I want to iterate over clients in a <code>Vec</code> and process each using a method that is supposed to take all the other clients as an argument as well.</p>\n"}, {"tags": ["generics", "reference", "rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 9, "last_activity_date": 1531666860, "creation_date": 1531666860, "answer_id": 51349578, "question_id": 51349577, "link": "https://stackoverflow.com/questions/51349577/how-to-borrow-the-t-from-a-refcellt-as-a-reference/51349578#51349578", "title": "How to borrow the T from a RefCell&lt;T&gt; as a reference?", "body": "<p>This is exactly the purpose of <code>impl Trait</code>, which has been available in stable Rust <a href=\"https://blog.rust-lang.org/2018/05/10/Rust-1.26.html#impl-trait\" rel=\"noreferrer\">since version 1.26</a>.</p>\n\n<pre><code>use std::ops::Deref;\n\nimpl&lt;T&gt; Outer&lt;T&gt; {\n    fn get_inner_ref&lt;'a&gt;(&amp;'a self) -&gt; impl Deref&lt;Target = T&gt; + 'a {\n        self.inner.borrow()\n    }\n}\n</code></pre>\n\n<p>The Rust compiler knows that the <em>actual</em> implementation is <code>Ref&lt;T&gt;</code> but lets you avoid having to write it explicitly, and callers of this function can only use functionality provided by the <code>Deref</code> trait.</p>\n\n<p>As long as the actual value that you return is of a type that implements <code>Deref&lt;Target = T&gt;</code>, you are free to change that implementation later without breaking any code that uses it. For example, you could return <code>&amp;T</code> or <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#implementors\" rel=\"noreferrer\">one of several other reference types</a>, including your own custom type, as in the <a href=\"https://stackoverflow.com/a/29401865/493729\">other linked question</a>. </p>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 421, "favorite_count": 1, "accepted_answer_id": 51349578, "answer_count": 1, "score": 4, "last_activity_date": 1545152720, "creation_date": 1531666860, "last_edit_date": 1545152720, "question_id": 51349577, "link": "https://stackoverflow.com/questions/51349577/how-to-borrow-the-t-from-a-refcellt-as-a-reference", "title": "How to borrow the T from a RefCell&lt;T&gt; as a reference?", "body": "<p>Sometimes I have a <code>struct</code> containing a value which is wrapped in a <code>RefCell</code>, and I want to borrow the value, but I don't want to make the signature of the accessor function to depend on the internal implementation. To make it work, I need to return the reference as a <code>Ref&lt;T&gt;</code> instead of a <code>&amp;T</code>.</p>\n\n<p>For example, if this is my struct:</p>\n\n<pre><code>use std::cell::RefCell;\n\npub struct Outer&lt;T&gt; {\n    inner: RefCell&lt;T&gt;,\n}\n</code></pre>\n\n<p>I could write an accessor like this:</p>\n\n<pre><code>use std::cell::Ref;\n\nimpl&lt;T&gt; Outer&lt;T&gt; {\n    fn get_inner_ref(&amp;self) -&gt; Ref&lt;T&gt; {\n        self.inner.borrow()\n    }\n}\n</code></pre>\n\n<p>This works fine. I can use it like this:</p>\n\n<pre><code>fn main() {\n    let outer = Outer { inner: RefCell::new(String::from(\"hi\")) };\n    let inner: &amp;str = &amp;outer.get_inner_ref();\n    println!(\"inner value = {:?}\", inner);\n}\n</code></pre>\n\n<p>However, this exposes <code>Ref</code> as part of the public API, which would make it harder to change the internals later, without breaking backwards compatibility.</p>\n\n<p>If I try change the signature to return an <code>&amp;T</code> \u2014 which <code>&amp;Ref&lt;T&gt;</code> can coerce to \u2014 then I get lifetime errors:</p>\n\n<pre><code>impl&lt;T&gt; Outer&lt;T&gt; {\n    fn get_inner_ref(&amp;self) -&gt; &amp;T {\n        &amp;self.inner.borrow()\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:16:10\n   |\n16 |         &amp;self.inner.borrow()\n   |          ^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n17 |     }\n   |     - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 15:5...\n  --&gt; src/main.rs:15:5\n   |\n15 | /     fn get_inner_ref(&amp;self) -&gt; &amp;T {\n16 | |         &amp;self.inner.borrow()\n17 | |     }\n   | |_____^\n</code></pre>\n\n<p>There doesn't appear to be a way to fix that, because the error message is correct. The code is trying to take a reference to the <code>Ref&lt;T&gt;</code>, which only lasts as long as the function call. To make this work, I'd have to move out the <code>Ref&lt;T&gt;</code> itself by returning it \u2014 exactly like in the original code above \u2014 rather than making a new reference to it.</p>\n\n<p>There is <a href=\"https://stackoverflow.com/a/29401865/493729\">an answer to How do I return a reference to something inside a RefCell without breaking encapsulation?</a> which would technically solve this, but it is a more specialised case (to get only a part of the value in the <code>RefCell</code>) and the solution seems overly complex for this simpler situation.</p>\n"}, {"tags": ["testing", "rust", "code-generation", "functional-testing", "rust-cargo"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1531656879, "post_id": 51346587, "comment_id": 89669098, "body": "Probably just use the workaround suggested in the issue you linked - write these tests in a separate crate. Not ideal obviously."}], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1531702289, "creation_date": 1531642713, "last_edit_date": 1531662799, "question_id": 51346587, "link": "https://stackoverflow.com/questions/51346587/how-do-i-run-a-binary-before-compiling-and-running-tests", "title": "How do I run a binary before compiling and running tests?", "body": "<p>My crate is a code generator that generates a parser.</p>\n\n<p>I would like to write tests that run a generated parser and compare its result to the expected result. This requires that I run my crate's binary prior to the tests to get the parser's code, compile that code, and <strong>then</strong> run the tests.</p>\n\n<p>How can I do that with Cargo?</p>\n\n<p>This is very similar to <a href=\"https://github.com/rust-lang/cargo/issues/1581\" rel=\"nofollow noreferrer\">this issue</a>, which unfortunately is not solved.</p>\n"}, {"tags": ["rust", "semantics", "literals", "borrowing"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531645049, "post_id": 51344979, "comment_id": 89666450, "body": "@Boiethios I don&#39;t think it&#39;s a duplicate. It&#39;s related, absolutely. But the questions are different."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1531660590, "post_id": 51344979, "comment_id": 89669974, "body": "The fun is that in C, this <code>#include  &lt;stdio.h&gt;  int main(void) {     int *p = &amp;(int){ 10 };     *p = 20;     printf(&quot;%d&quot;, *p); }</code> is allowed."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531662681, "post_id": 51344979, "comment_id": 89670495, "body": "See also <a href=\"https://stackoverflow.com/q/47662253/155423\">Why is it legal to borrow a temporary?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 1, "creation_date": 1531655140, "post_id": 51346943, "comment_id": 89668691, "body": "C++ does similar things sometimes as well, though the rules are slightly different."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 1, "creation_date": 1531655264, "post_id": 51346943, "comment_id": 89668721, "body": "@Veedrac I can only think of the special rule when const references are passed to functions (which then makes the reference last for the duration of the function call). Are there more rules?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1531663311, "post_id": 51346943, "comment_id": 89670690, "body": "<code>const T &amp;x = get_value();</code> gets extended as well. Supposedly <code>const T &amp;&amp;x = get_value();</code> also works!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1531645880, "creation_date": 1531645880, "answer_id": 51346943, "question_id": 51344979, "link": "https://stackoverflow.com/questions/51344979/what-are-the-semantics-of-mutably-borrowing-a-literal-in-rust/51346943#51346943", "title": "What are the semantics of mutably borrowing a literal in Rust?", "body": "<p>Like C++, Rust has the concept of rvalues and lvalue. The reference calls them <em>value expressions</em> (rvalue) and <em>place expressions</em> (lvalue). Additionally, there are <em>value contexts</em> and <em>place contexts</em> (slots inside of expressions/statements where a value expression or place expression, respectively, is expected).</p>\n\n<p><strong>Rust has special rules for when a value expression (like a literal) is used in a place context (like the borrow operator <code>&amp;</code>)</strong>. From <a href=\"https://doc.rust-lang.org/reference/expressions.html#temporary-lifetimes\" rel=\"noreferrer\">the reference</a>:</p>\n\n<blockquote>\n  <p>When using a value expression in most place expression contexts, a temporary unnamed memory location is created initialized to that value and the expression evaluates to that location instead [...].</p>\n</blockquote>\n\n<p>So Rust automatically stores your value <code>10</code> in a memory location. The lifetime of the memory location varies depending on <em>how</em> the value expression is used, but in your case, the unnamed memory location has the same lifetime as the enclosing block. It thus is equivalent to a hidden <code>let</code> binding:</p>\n\n<pre><code>let _compiler_generated = 10;\nlet x = &amp;mut _compiler_generated;\n*x = 20;\n</code></pre>\n\n<p>This doesn't just work with literals:</p>\n\n<pre><code>fn get_u32() -&gt; u32 { 3 }\n\nlet x = &amp;mut get_u32();\n*x = 20;\n</code></pre>\n\n<p>While being confusing to those familiar with how lifetimes of objects work in languages like C++, this is a fairly useful feature in a few situations.</p>\n\n<hr>\n\n<p>Related: if you use an <strong>im</strong>mutable reference to a literal, the value is not just written to a stack slot, but into static memory. Meaning that <code>let _: &amp;'static u32 = &amp;10</code> is valid! This has been specified in <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1414-rvalue_static_promotion.md\" rel=\"noreferrer\">RC 1414</a>.</p>\n"}], "owner": {"reputation": 1913, "user_id": 1332817, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c2b78e2725a5c8c1cd3ab2e502afff71?s=128&d=identicon&r=PG", "display_name": "abcdabcd987", "link": "https://stackoverflow.com/users/1332817/abcdabcd987"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 395, "favorite_count": 1, "closed_date": 1531749283, "accepted_answer_id": 51346943, "answer_count": 1, "score": 3, "last_activity_date": 1531662640, "creation_date": 1531624995, "last_edit_date": 1531662640, "question_id": 51344979, "link": "https://stackoverflow.com/questions/51344979/what-are-the-semantics-of-mutably-borrowing-a-literal-in-rust", "closed_reason": "Duplicate", "title": "What are the semantics of mutably borrowing a literal in Rust?", "body": "<p>I found that this is able to compile:</p>\n\n<pre><code>let x = &amp;mut 10;\n*x = 20;\n</code></pre>\n\n<p>This is very confusing. What are the semantics of mutably borrowing an literal?</p>\n\n<p>I come from C++, where the compiler will definitely not allow me to refer to a rvalue like this:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>int *x = &amp;10;\nint &amp;y = 10;\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531662517, "post_id": 51344951, "comment_id": 89670461, "body": "See also <a href=\"https://stackoverflow.com/q/49785136/155423\">Unwrap or continue in a loop</a>"}], "answers": [{"comments": [{"owner": {"reputation": 679, "user_id": 5155574, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-FX9BZpOiVdk/AAAAAAAAAAI/AAAAAAAAAI0/cHgtmpGWfgM/photo.jpg?sz=128", "display_name": "Josh Abraham", "link": "https://stackoverflow.com/users/5155574/josh-abraham"}, "edited": false, "score": 0, "creation_date": 1531687824, "post_id": 51345372, "comment_id": 89676756, "body": "Thank you. I also changed your macro to allow the caller to specify whether to <code>return</code> or <code>continue</code>. Is that idiomatic rust?"}, {"owner": {"reputation": 5962, "user_id": 3873510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/YpJMi.jpg?s=128&g=1", "display_name": "Paul Razvan Berg", "link": "https://stackoverflow.com/users/3873510/paul-razvan-berg"}, "edited": false, "score": 0, "creation_date": 1608731005, "post_id": 51345372, "comment_id": 115668745, "body": "What is the difference between the macro you created here and the <code>?</code> operator?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1609149898, "post_id": 51345372, "comment_id": 115758505, "body": "@Raul The <code>?</code> operator can only be used in a function that returns a <a href=\"https://doc.rust-lang.org/std/ops/trait.Try.html\" rel=\"nofollow noreferrer\"><code>Try</code></a> implementor. The OP wants to return from a function that returns unit, and unit does not implement <code>Try</code>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 17, "last_activity_date": 1574287010, "last_edit_date": 1574287010, "creation_date": 1531630324, "answer_id": 51345372, "question_id": 51344951, "link": "https://stackoverflow.com/questions/51344951/how-do-you-unwrap-a-result-on-ok-or-return-from-the-function-on-err/51345372#51345372", "title": "How do you unwrap a Result on Ok or return from the function on Err?", "body": "<p>You can create a macro:</p>\n\n<pre><code>macro_rules! unwrap_or_return {\n    ( $e:expr ) =&gt; {\n        match $e {\n            Ok(x) =&gt; x,\n            Err(_) =&gt; return,\n        }\n    }\n}\n\nfn callable(param: &amp;mut i32) -&gt; Result&lt;i32, ()&gt; {\n    Ok(*param)\n}\n\nfn main() {\n    let mut param = 0;\n    let res = unwrap_or_return!(callable(&amp;mut param));\n\n    println!(\"{:?}\", res);\n}\n</code></pre>\n\n<p>Note that I wouldn't recommend discarding the errors. Rust's error handling is pretty ergonomic, so I would return the error, even if it is only to log it:</p>\n\n<pre><code>fn callable(param: &amp;mut i32) -&gt; Result&lt;i32, ()&gt; {\n    Ok(*param)\n}\n\nfn run() -&gt; Result&lt;(), ()&gt; {\n    let mut param = 0;\n    let res = callable(&amp;mut param)?;\n\n    println!(\"{:?}\", res);\n\n    Ok(())\n}\n\nfn main() {\n    if let Err(()) = run() {\n        println!(\"Oops, something went wrong!\");\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531685604, "post_id": 51351788, "comment_id": 89676268, "body": "It&#39;s pretty clear from OPs example code that this isn&#39;t the case: <code>Err(_e) =&gt; return,</code>"}], "tags": [], "owner": {"reputation": 73, "user_id": 8778808, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-K4AKBp0ISFk/AAAAAAAAAAI/AAAAAAAAACg/tYnp9zrXYZE/photo.jpg?sz=128", "display_name": "Kian Ostad", "link": "https://stackoverflow.com/users/8778808/kian-ostad"}, "is_accepted": false, "score": -1, "last_activity_date": 1531684823, "creation_date": 1531684823, "answer_id": 51351788, "question_id": 51344951, "link": "https://stackoverflow.com/questions/51344951/how-do-you-unwrap-a-result-on-ok-or-return-from-the-function-on-err/51351788#51351788", "title": "How do you unwrap a Result on Ok or return from the function on Err?", "body": "<p>If both functions return <code>Result&lt;doesn't matter, same T&gt;</code> you can just put a <code>?</code> at the end of line of call.</p>\n\n<pre><code>fn caller() -&gt; Result&lt;Str, i32&gt; {\n    let number = job()?; // &lt;-- if job return error this function return/end here \n                         // otherwise the value of Ok will assign to number \n    Ok(format!(\"the number is {}\", number))\n}\n\nfn job() -&gt; Result&lt;i32, i32&gt; {\n    // do something\n    Err(3)\n}\n</code></pre>\n\n<p>You can use same pattern for <code>Option&lt;T&gt;</code> too.</p>\n"}], "owner": {"reputation": 679, "user_id": 5155574, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-FX9BZpOiVdk/AAAAAAAAAAI/AAAAAAAAAI0/cHgtmpGWfgM/photo.jpg?sz=128", "display_name": "Josh Abraham", "link": "https://stackoverflow.com/users/5155574/josh-abraham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7777, "favorite_count": 3, "accepted_answer_id": 51345372, "answer_count": 2, "score": 15, "last_activity_date": 1574287010, "creation_date": 1531624657, "last_edit_date": 1531662424, "question_id": 51344951, "link": "https://stackoverflow.com/questions/51344951/how-do-you-unwrap-a-result-on-ok-or-return-from-the-function-on-err", "title": "How do you unwrap a Result on Ok or return from the function on Err?", "body": "<p>I have a function that calls another function which returns a <code>Result</code>. I need to check if the <code>Result</code> is <code>Ok</code> or <code>Err</code> and if it is an <code>Err</code>, I need to <code>return</code> early from my function. This is what I'm doing now:</p>\n\n<pre><code>match callable(&amp;mut param) {\n    Ok(_v) =&gt; (),\n    Err(_e) =&gt; return,\n};\n</code></pre>\n\n<p>Is there a more idiomatic Rust way to do this?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1531620335, "creation_date": 1531620335, "answer_id": 51344713, "question_id": 51344641, "link": "https://stackoverflow.com/questions/51344641/why-i-can-still-access-a-vectors-element-after-taking-ownership-of-it-without-u/51344713#51344713", "title": "Why I can still access a vector&#39;s element after taking ownership of it without using reference?", "body": "<p>You have a vector of integers (<a href=\"https://stackoverflow.com/questions/38854408/do-literal-integral-values-have-a-specific-type-in-rust?noredirect=1&amp;lq=1\"><code>i32</code> to be specific</a>), and <code>i32</code> implements the <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"noreferrer\"><code>Copy</code></a> trait. </p>\n\n<p><a href=\"https://stackoverflow.com/q/27879161/155423\">The index syntax returns a dereferenced value</a>. Since the indexed type implements <code>Copy</code>, the compiler copies it implicitly.</p>\n\n<p>You <a href=\"https://stackoverflow.com/q/27904864/155423\">cannot take ownership of an item from a vector using the indexing syntax</a> at all.</p>\n\n<blockquote>\n  <p>what is the difference between vector indexing with a reference and a non-reference except taking the reference</p>\n</blockquote>\n\n<p>Without the <code>&amp;</code>, the value is copied (but only because it implements <code>Copy</code>). With the <code>&amp;</code>, you have a reference to the value inside the vector.</p>\n"}], "owner": {"reputation": 113, "user_id": 7602302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47b79ab3d92098c0b0a889f2583bc0b?s=128&d=identicon&r=PG&f=1", "display_name": "Tverous", "link": "https://stackoverflow.com/users/7602302/tverous"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 51344713, "answer_count": 1, "score": 2, "last_activity_date": 1531620390, "creation_date": 1531619078, "last_edit_date": 1531620390, "question_id": 51344641, "link": "https://stackoverflow.com/questions/51344641/why-i-can-still-access-a-vectors-element-after-taking-ownership-of-it-without-u", "title": "Why I can still access a vector&#39;s element after taking ownership of it without using reference?", "body": "<pre><code>fn main() {\n    let number_list = vec![1, 2, 3, 4, 5];\n\n    let n = number_list[0];\n    let r = &amp;number_list[0];\n\n    println!(\"{} : {} : {} : {}\", n, r, number_list[0], &amp;number_list[0]);\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1 : 1 : 1 : 1\n</code></pre>\n\n<p>Another question is what is the difference between vector indexing with a reference and a non-reference except taking the reference?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1531602665, "creation_date": 1531602665, "answer_id": 51343411, "question_id": 51343284, "link": "https://stackoverflow.com/questions/51343284/is-there-a-way-to-show-a-warning-that-a-result-is-redundant-as-a-return-type/51343411#51343411", "title": "Is there a way to show a warning that a Result is redundant as a return type?", "body": "<p>No, there is no such warning, either in the compiler or in <a href=\"https://github.com/rust-lang-nursery/rust-clippy\" rel=\"nofollow noreferrer\">Clippy</a>. You could submit an issue to Clippy suggesting they add it, of course.</p>\n\n<hr>\n\n<p>I challenge that this is a common occurrence or even one that is actually a problem. Even if it was, I'd believe such a warning will have many disadvantages:</p>\n\n<ul>\n<li><p>I use this pattern to scaffold out functions that I'm pretty sure will return an error once I've implemented them.</p></li>\n<li><p>A method that is part of a trait cannot change the return type.</p></li>\n<li><p>You might be passing the function as a function pointer or closure argument and the return type cannot be changed.</p></li>\n<li><p>Changing the return type breaks API backwards compatibility, so you have to wait until a major version bump.</p></li>\n</ul>\n"}], "owner": {"reputation": 185, "user_id": 6165740, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f365e2ce66ac98048b63e6d1a35b3d32?s=128&d=identicon&r=PG&f=1", "display_name": "Cryptor", "link": "https://stackoverflow.com/users/6165740/cryptor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 51343411, "answer_count": 1, "score": 0, "last_activity_date": 1531602665, "creation_date": 1531601507, "last_edit_date": 1531601848, "question_id": 51343284, "link": "https://stackoverflow.com/questions/51343284/is-there-a-way-to-show-a-warning-that-a-result-is-redundant-as-a-return-type", "title": "Is there a way to show a warning that a Result is redundant as a return type?", "body": "<p>Is there an attribute like <code>#[warn(redundant_result_as_return_type)]</code> to show a warning that <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow noreferrer\"><code>Result</code></a> is redundant as a return type?</p>\n\n<pre><code>#[derive(Debug)]\nstruct SomeError();\n\nfn process_some() -&gt; Result&lt;(), SomeError&gt; {\n    Ok(())\n}\n\nfn main() {\n    process_some().unwrap();\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=48da3521e2e74bb38311d3fdd3eb0a6d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>This code produces no warnings despite the fact that <code>Result</code> is not needed as the return type at all.</p>\n\n<p>I've been deciding how to properly implement error handling of a function from the crate used in my project. After digging into the function implementation, it turned out that no errors are generated.</p>\n\n<p>Since then, I want to prevent such cases in my own code. Ideally it would be great to get such warnings from inside of imported crates too, when utilizing methods with redundant <code>Result</code>s, but as far as I understand such checking is impossible for used crates without adjusting their code.</p>\n\n<p>The question is in some way the opposite of <a href=\"https://stackoverflow.com/questions/39369402/possible-to-declare-functions-that-will-warn-on-unused-results-in-rust\">Possible to declare functions that will warn on unused results in Rust?</a>.</p>\n"}, {"tags": ["rust", "borrow-checker", "interior-mutability"], "owner": {"reputation": 196, "user_id": 7119758, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5878a5823807d87ba772915a02435c40?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammed", "link": "https://stackoverflow.com/users/7119758/mohammed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 410, "favorite_count": 0, "closed_date": 1531588536, "answer_count": 0, "score": 1, "last_activity_date": 1545155575, "creation_date": 1531588316, "last_edit_date": 1545155575, "question_id": 51341643, "link": "https://stackoverflow.com/questions/51341643/returning-reference-from-refcell", "closed_reason": "Duplicate", "title": "Returning reference from RefCell", "body": "<p>Why does this program not compile</p>\n\n<pre><code>use std::cell::RefCell;\n\nstruct S {\n    field: RefCell&lt;String&gt;,\n}\n\nimpl S {\n    fn take_ref(&amp;self) -&gt; &amp;str {\n        &amp;self.field.borrow()\n    }\n}\n\nfn main() {\n    let s = S {\n        field: RefCell::new(\"abc\".to_string()),\n    };\n}\n</code></pre>\n\n<p>it gives the message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:9:10\n   |\n9  |         &amp;self.field.borrow()\n   |          ^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n10 |     }\n   |     - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 8:5...\n  --&gt; src/main.rs:8:5\n   |\n8  | /     fn take_ref(&amp;self) -&gt; &amp;str {\n9  | |         &amp;self.field.borrow()\n10 | |     }\n   | |_____^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531584985, "post_id": 51341054, "comment_id": 89655900, "body": "Drop the leading &quot;\\\\&quot; in <code>join(&quot;\\\\AppData\\\\Local\\\\Packages&quot;);</code>. It&#39;s being interpreted as the drive root directory."}, {"owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531586414, "post_id": 51341054, "comment_id": 89656239, "body": "@PeterHall, thanks, your comment makes it easy to understand the accepted answer below."}], "answers": [{"tags": [], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "is_accepted": true, "score": 6, "last_activity_date": 1531589007, "last_edit_date": 1592644375, "creation_date": 1531584985, "answer_id": 51341211, "question_id": 51341054, "link": "https://stackoverflow.com/questions/51341054/pathjoin-does-not-do-what-is-expected/51341211#51341211", "title": "Path::join does not do what is expected", "body": "<p><a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.join\" rel=\"nofollow noreferrer\"><code>Path::join</code></a> uses the same semantics as <a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.push\" rel=\"nofollow noreferrer\"><code>PathBuf::push</code></a>. Those docs say...</p>\n<blockquote>\n<p>Pushing an absolute path replaces the existing path:</p>\n<pre><code>use std::path::PathBuf;\n\nlet mut path = PathBuf::from(&quot;/tmp&quot;);\npath.push(&quot;/etc&quot;);\nassert_eq!(path, PathBuf::from(&quot;/etc&quot;));\n</code></pre>\n</blockquote>\n<p><code>\\\\AppData\\\\Local\\\\Packages</code> is absolute. You have to make it relative first.</p>\n"}, {"tags": [], "owner": {"reputation": 16, "user_id": 2490080, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/924e8e7b248cdb4fef87cb07ea55c3a2?s=128&d=identicon&r=PG", "display_name": "ignisvulpis", "link": "https://stackoverflow.com/users/2490080/ignisvulpis"}, "is_accepted": false, "score": 0, "last_activity_date": 1553593981, "creation_date": 1553593981, "answer_id": 55354152, "question_id": 51341054, "link": "https://stackoverflow.com/questions/51341054/pathjoin-does-not-do-what-is-expected/55354152#55354152", "title": "Path::join does not do what is expected", "body": "<p>Please do not use OS specific code like <code>join(\"\\\\AppData\\\\Local\\\\Packages\")</code>.\nPlease use <code>join(\"AppData\").join(\"Local\").join(\"Packages\")</code> as it uses the platforms path delimiter. It also solves your question because each path element is not absolute.</p>\n"}], "owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 706, "favorite_count": 0, "accepted_answer_id": 51341211, "answer_count": 2, "score": 2, "last_activity_date": 1553593981, "creation_date": 1531583837, "last_edit_date": 1531588982, "question_id": 51341054, "link": "https://stackoverflow.com/questions/51341054/pathjoin-does-not-do-what-is-expected", "title": "Path::join does not do what is expected", "body": "<p>I have this Rust code:</p>\n\n<pre><code>use std::env;\nuse std::path::{Path, PathBuf};\n\nfn main() {\n    let user_home_dir: PathBuf = env::home_dir().expect(\"Could not find home directory.\");\n    let images_dir = Path::new(&amp;user_home_dir).join(\"\\\\AppData\\\\Local\\\\Packages\");\n\n    println!(\"\\nUser dir: {:?}\", user_home_dir);\n    println!(\"Image folder: {:?}\", images_dir);\n}\n</code></pre>\n\n<p>This code prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>User dir: \"C:\\\\Users\\\\username\"\nImage folder: \"C:\\\\AppData\\\\Local\\\\Packages\"\n</code></pre>\n\n<p>My expectation is that it should print:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>User dir: \"C:\\\\Users\\\\username\"\nImage folder: \"C:\\\\Users\\\\username\\\\AppData\\\\Local\\\\Packages\"\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1531581781, "post_id": 51340645, "comment_id": 89655140, "body": "The compiler <i>does</i> perform enum optimization by niche-filling (<a href=\"https://github.com/rust-lang/rust/issues/46213\" rel=\"nofollow noreferrer\">related</a>), but I don&#39;t think your example demonstrates that. <code>Node</code> can&#39;t take advantage of niche-filling (as currently implemented) because it doesn&#39;t have any zero-sized variants; <code>Node2</code> has a zero-sized variant, but the non-zero-sized variant doesn&#39;t have any invalid values to fit it into. What do you mean by &quot;the fields are getting folded into the constructor tags&quot;?"}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1531582590, "post_id": 51340645, "comment_id": 89655335, "body": "@trentcl, the tag has padding bytes because of alignment requirements. For example, if I&#39;d used <code>N1_1(Box&lt;Node1&gt;, Box&lt;Node1&gt;</code>, the size would&#39;ve still been 24 bytes, with 7 bytes of padding for the tag. What&#39;s happening with the <code>bool</code> is that that one padding byte is getting replaced with the bool. Trying using <code>#[repr(C)]</code> and you&#39;ll see that the size jumps to 32."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531582685, "post_id": 51340645, "comment_id": 89655358, "body": "Rust does not &quot;fill in&quot; the padding bytes of a sibling type with values of another. This would allow two mutable references to the same memory address."}, {"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531582855, "post_id": 51340645, "comment_id": 89655398, "body": "I&#39;m very confused then. What is the memory layout of <code>Node1</code> in that case? @Shepmaster, could you add that to your answer?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1531583908, "post_id": 51340645, "comment_id": 89655652, "body": "I see what you mean, but it&#39;s not accurate to say that the <i>tag</i> has padding bytes. The <i>variants</i> have padding which may be different for different variants, but that is a consequence of how the memory layout is calculated. The padding in a variant does not need to be adjacent to the tag at all, and may exist even when the tag is absent. <a href=\"https://play.rust-lang.org/?gist=90f395959ed46ee173f9312c4f6b2967&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">In this example you can see that the tag is placed before <code>x</code>, but the padding is placed between <code>y</code> and <code>z</code>.</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1531587630, "last_edit_date": 1531587630, "creation_date": 1531582298, "answer_id": 51340867, "question_id": 51340645, "link": "https://stackoverflow.com/questions/51340645/what-guarantees-of-enum-compactness-does-the-rust-abi-make/51340867#51340867", "title": "What guarantees of enum compactness does the Rust ABI make?", "body": "<blockquote>\n  <p>Is this behavior guaranteed?</p>\n</blockquote>\n\n<p>No. The Rust ABI makes <strong>no guarantees of any kind</strong>, that's what \"unstable\" means. So long as the code works and other guarantees outside of the ABI are held, the developers are able to change it however they see fit.</p>\n\n<p>Really, in this case you don't care so much about the ABI as you do the <a href=\"https://doc.rust-lang.org/reference/type-layout.html\" rel=\"nofollow noreferrer\">type layout</a>. The reference says, emphasis mine:</p>\n\n<blockquote>\n  <p>Nominal types without a <code>repr</code> attribute have the default representation. Informally, this representation is also called the <code>rust</code> representation.</p>\n  \n  <p>There are <strong>no guarantees of data layout made by this representation</strong>.</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>a good reason why they may want to change the representation at some point to increase sizes</p>\n</blockquote>\n\n<p>One possible reason is because of concepts like padding or alignment. It's possible (but unlikely) that someone discovers that aligning every struct to 331 bytes makes code run 53x faster.</p>\n\n<hr>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc +nightly -Zprint-type-sizes enum-compactness.rs\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>type: `Node`: 24 bytes, alignment: 8 bytes\n    discriminant: 1 bytes\n    variant `N1_1`: 7 bytes\n        field `.is_good`: 1 bytes\n        padding: 2 bytes\n        field `.stuff`: 4 bytes, alignment: 4 bytes\n    variant `N1_2`: 23 bytes\n        field `.is_good`: 1 bytes\n        padding: 6 bytes\n        field `.left`: 8 bytes, alignment: 8 bytes\n        field `.right`: 8 bytes\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>type: `Node2`: 8 bytes, alignment: 4 bytes\n    discriminant: 4 bytes\n    variant `N2_1`: 4 bytes\n        field `.stuff`: 4 bytes\n    variant `N2_2`: 0 bytes\n</code></pre>\n"}], "owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 0, "accepted_answer_id": 51340867, "answer_count": 1, "score": 1, "last_activity_date": 1531587630, "creation_date": 1531580644, "last_edit_date": 1531582055, "question_id": 51340645, "link": "https://stackoverflow.com/questions/51340645/what-guarantees-of-enum-compactness-does-the-rust-abi-make", "title": "What guarantees of enum compactness does the Rust ABI make?", "body": "<p>I understand that the Rust ABI is not stable. However, the Rust compiler currently performs some optimizations to compact fields into tags. <a href=\"https://play.rust-lang.org/?gist=eb4a0f2f38311ff763d365e965e1541a&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">For example</a>:</p>\n\n<pre><code>use std::mem::size_of;\n\nenum Node {\n    N1_1 {\n        is_good: bool,\n        stuff: u32,\n    },\n    N1_2 {\n        is_good: bool,\n        left: Box&lt;Node&gt;,\n        right: Box&lt;Node&gt;,\n    },\n}\n\nenum Node2 {\n    N2_1 { stuff: u32 },\n    N2_2,\n}\n\nfn main() {\n    println!(\"{:?} {:?}\", size_of::&lt;Node&gt;(), size_of::&lt;Node2&gt;());\n}\n</code></pre>\n\n<p>This prints <code>24 8</code>. Clearly what is happening is that the fields are getting folded into the constructor tags. Is this behavior guaranteed? I'm not asking if the specific memory representation will stay the same but whether there is a promise that the size at some future point in time will not increase.</p>\n\n<p>I can't think of a good reason why they may want to change the representation at some point to increase sizes, but maybe it is just my lack of imagination, so I'm looking for an \"official\" answer.</p>\n\n<p>Links to GitHub issues/RFCs would be helpful. I tried browsing the issue tracker but wasn't able to find anything. The closest thing I could find was related to a <code>bool</code> being 1 byte sized, which isn't guaranteed.</p>\n"}, {"tags": ["reference", "rust", "ownership"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 4, "creation_date": 1531573492, "post_id": 51338579, "comment_id": 89652026, "body": "You can also write <code>map(ToOwned::to_owned)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 16, "last_activity_date": 1600182586, "last_edit_date": 1600182586, "creation_date": 1531573610, "answer_id": 51338799, "question_id": 51338579, "link": "https://stackoverflow.com/questions/51338579/how-to-convert-optiont-to-optiont-in-the-most-idiomatic-way-in-rust/51338799#51338799", "title": "How to convert Option&lt;&amp;T&gt; to Option&lt;T&gt; in the most idiomatic way in Rust?", "body": "<p><code>Option</code> comes with utility methods for various transformations, which are listed in <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\">its documentation</a>. For any <code>T</code> that implements <code>Clone</code> (which <code>String</code> does), <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.cloned\" rel=\"nofollow noreferrer\"><code>Option&lt;&amp;T&gt;::cloned</code></a> does what you're looking for.</p>\n<p><code>Clone</code> is more specific than <code>ToOwned</code>, so <code>.cloned()</code> isn't an <em>exact</em> match for <code>.map(|x| x.to_owned())</code>. For example, it won't turn an <code>Option&lt;&amp;str&gt;</code> into an <code>Option&lt;String&gt;</code>; for that you will have to stick with <code>map</code>.</p>\n<p>Since Rust 1.35, when <code>T</code> is <code>Copy</code>, <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.copied\" rel=\"nofollow noreferrer\"><code>.copied()</code></a> does the same thing as <code>.cloned()</code>, but it will fail to compile when <code>T</code> is not <code>Copy</code>. You might use this when you want to be explicit that the clone is cheap.</p>\n<hr />\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/31907887/how-to-clone-last-element-from-vector\">How to clone last element from vector?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/37579949/get-the-last-element-of-a-vector-and-push-it-to-the-same-vector\">Get the last element of a vector and push it to the same vector</a></li>\n</ul>\n"}], "owner": {"reputation": 4229, "user_id": 327702, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/FEzyr.jpg?s=128&g=1", "display_name": "opensourcegeek", "link": "https://stackoverflow.com/users/327702/opensourcegeek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2358, "favorite_count": 2, "accepted_answer_id": 51338799, "answer_count": 1, "score": 13, "last_activity_date": 1600182586, "creation_date": 1531572008, "question_id": 51338579, "link": "https://stackoverflow.com/questions/51338579/how-to-convert-optiont-to-optiont-in-the-most-idiomatic-way-in-rust", "title": "How to convert Option&lt;&amp;T&gt; to Option&lt;T&gt; in the most idiomatic way in Rust?", "body": "<p>When using HashMap's <code>get</code> method, I get an <code>Option&lt;&amp;T&gt;</code>, I've encountered it again this time with <code>Option&lt;&amp;String&gt;</code>. I'd like to get an owned value <code>Option&lt;String&gt;</code>. Is this possible without me writing <code>map(|x| x.to_owned())</code>?</p>\n\n<p>I'm just wondering if there's a way to write a blanket implementation for any of the utility traits to achieve that? </p>\n"}, {"tags": ["arrays", "generics", "rust"], "comments": [{"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 1, "creation_date": 1531568868, "post_id": 51338002, "comment_id": 89650803, "body": "It looks like a compiler bug. There is related issue <a href=\"https://github.com/rust-lang/rust/issues/52070\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/52070</a>"}, {"owner": {"reputation": 567, "user_id": 5223579, "user_type": "registered", "profile_image": "https://graph.facebook.com/887572487994048/picture?type=large", "display_name": "Johannes", "link": "https://stackoverflow.com/users/5223579/johannes"}, "reply_to_user": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1531569344, "post_id": 51338002, "comment_id": 89650937, "body": "This answers my question. You could write that into a separate answer."}, {"owner": {"reputation": 567, "user_id": 5223579, "user_type": "registered", "profile_image": "https://graph.facebook.com/887572487994048/picture?type=large", "display_name": "Johannes", "link": "https://stackoverflow.com/users/5223579/johannes"}, "edited": false, "score": 0, "creation_date": 1531573311, "post_id": 51338002, "comment_id": 89651980, "body": "The difference is quite subtle: The linked question asks how to solve that problem in general, with the answer being a future feature of Rust, but the specific solution in this question should actually work right now (but it&#39;s a bug)"}], "answers": [{"tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": true, "score": 1, "last_activity_date": 1531571330, "creation_date": 1531571330, "answer_id": 51338498, "question_id": 51338002, "link": "https://stackoverflow.com/questions/51338002/how-to-introduce-a-type-parameter-for-array-length-in-rust/51338498#51338498", "title": "How to introduce a Type-Parameter for Array Length in Rust?", "body": "<p>Associated constants can not be used to specify the length of an array  due to a compiler bug (<a href=\"https://github.com/rust-lang/rust/issues/52070\" rel=\"nofollow noreferrer\">issue #52070</a>).</p>\n"}], "owner": {"reputation": 567, "user_id": 5223579, "user_type": "registered", "profile_image": "https://graph.facebook.com/887572487994048/picture?type=large", "display_name": "Johannes", "link": "https://stackoverflow.com/users/5223579/johannes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 759, "favorite_count": 0, "closed_date": 1531575610, "accepted_answer_id": 51338498, "answer_count": 1, "score": 0, "last_activity_date": 1531571330, "creation_date": 1531567466, "question_id": 51338002, "link": "https://stackoverflow.com/questions/51338002/how-to-introduce-a-type-parameter-for-array-length-in-rust", "closed_reason": "Duplicate", "title": "How to introduce a Type-Parameter for Array Length in Rust?", "body": "<p>I have a little question concerning generics in Rust. I want to make the length of an Array a type parameter.</p>\n\n<p><strong>Question: Does Rust currently support that?</strong> \nThe error message does not indicate a missing feature but a programming error.</p>\n\n<p>Example of what I want to do:</p>\n\n<pre><code>fn create_array&lt;C: ConstSize&gt;(){\n    let arr = [64; C::SIZE];\n    println!(\"array.len: {:?}\", arr.len());\n}\n\npub trait ConstSize {\n    const SIZE: usize;\n}\n</code></pre>\n\n<p>with some example implementation:</p>\n\n<pre><code>fn main() {\n    create_array::&lt;Five&gt;();\n}\n\nstruct Five {}\nimpl ConstSize for Five {\n    const SIZE: usize = 5;\n}\n</code></pre>\n\n<p>But the compiler tells me:\n<code>no associated item named 'SIZE' found for type 'C' in the current scope</code></p>\n\n<p>However, the following works:</p>\n\n<pre><code>fn create_array(){\n    let arr = [64; Five::SIZE];\n    println!(\"array.len: {:?}\", arr.len());\n}\n</code></pre>\n\n<p><a href=\"http://play.rust-lang.org/?gist=0d74d539c9fb75e6ecf8ecd2276412f7&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\"><strong>See the example on the Rust Playground</strong></a></p>\n\n<p>Thanks for your attention.</p>\n"}, {"tags": ["c++", "arrays", "rust", "ffi"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1531565651, "post_id": 51337580, "comment_id": 89650025, "body": "<code>construct_array</code> is returning a pointer to a local automatic variable, that will immediately vanish when the function finishes. That will be Undefined Behavior in C or C++. In Rust it will not compile easily..."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 1, "last_activity_date": 1531566057, "creation_date": 1531566057, "answer_id": 51337820, "question_id": 51337580, "link": "https://stackoverflow.com/questions/51337580/returning-array-from-c-to-rust-in-rust-ffi/51337820#51337820", "title": "Returning array from c++ to rust in Rust FFI", "body": "<p>Your problem can be demonstrated in C++ alone:</p>\n\n<pre><code>int main() {\n    uint32_t foo[12];\n    construct_array(foo, 12);\n\n    printf(\"Actual result from C++:\");\n    for (auto i = 0; i &lt; 12; ++i) printf(\"%u\\n\", foo[i]);\n}\n</code></pre>\n\n<p>This prints garbage, and comes from the way you are \"copying\" your array:</p>\n\n<pre><code>arr_ptr = &amp;arr[0];\n</code></pre>\n\n<p>This will assign the address of the array to the local variable <code>arr_ptr</code> and do nothing with it. Even if this worked, you'd let the address of a local array escape, and that would be UB. Instead, you can just skip the <code>arr</code> buffer and use the array passed to your function directly:</p>\n\n<pre><code>extern \"C\" void construct_array(uint32_t* arr_ptr, uint32_t arr_size) {\n    for (uint32_t i = 0; i &lt; arr_size; i++) {\n        arr_ptr[i] = i;\n    }\n\n    // Print array items\n    printf(\"Result from c++ [\");\n    printf(\"%u\", arr_ptr[0]);\n    for (uint32_t i = 1; i &lt; arr_size; i++) {\n        printf(\", %u\", i);\n    }\n    printf(\"]\\n\");\n}\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 5903878, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1559031381080049/picture?type=large", "display_name": "Octav", "link": "https://stackoverflow.com/users/5903878/octav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 415, "favorite_count": 0, "closed_date": 1531567549, "accepted_answer_id": 51337820, "answer_count": 1, "score": -1, "last_activity_date": 1531569053, "creation_date": 1531564020, "last_edit_date": 1531569053, "question_id": 51337580, "link": "https://stackoverflow.com/questions/51337580/returning-array-from-c-to-rust-in-rust-ffi", "closed_reason": "Duplicate", "title": "Returning array from c++ to rust in Rust FFI", "body": "<p>I have a function which is written in C++ that will be called from Rust. This function constructs an array and must return it to Rust: </p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate libc;\n\nuse libc::c_void;\n\nextern {\n    fn construct_array(arr_ptr: *mut u32, arr_size: u32) -&gt; c_void;\n}\n\nfn main() {\n    let arr_size: usize = 4;\n    let mut arr: Vec&lt;u32&gt; = Vec::with_capacity(arr_size);\n\n    unsafe {\n        construct_array(arr.as_mut_ptr(), arr_size as u32);\n        let result = std::slice::from_raw_parts(arr.as_mut_ptr(), arr_size);\n        println!(\"Result from rust {:?}\", result);\n    }\n}\n</code></pre>\n\n<p><strong>funcs.cpp</strong></p>\n\n<pre><code>extern \"C\" void construct_array(uint32_t* arr_ptr, uint32_t arr_size) {\n    uint32_t arr[arr_size];\n\n    for (uint32_t i = 0; i &lt; arr_size; i++) {\n        arr[i] = i;\n    }\n\n    // Print array items\n    printf(\"Result from c++ [\");\n    printf(\"%u\", arr[0]);\n    for (uint32_t i = 1; i &lt; arr_size; i++) {\n        printf(\", %u\", arr[i]);\n    }\n    printf(\"]\\n\");\n\n    arr_ptr = &amp;arr[0];\n}\n</code></pre>\n\n<p>However, when I run it, the following gets printed:</p>\n\n<pre><code>$ cargo run\nResult from c++ [0, 1, 2, 3]\nResult from rust [0, 0, 0, 0]\n</code></pre>\n\n<p>How can I correctly construct an array in C++ and pass it to Rust via FFI?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1531565943, "post_id": 51337202, "comment_id": 89650091, "body": "Compiler plugins are only available on nightly builds. What compiler version are you using?"}, {"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1531566324, "post_id": 51337202, "comment_id": 89650173, "body": "@rodrigo, I&#39;ve <code>rustc 1.29.0-nightly (64f7de921 2018-07-12)</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1531566886, "post_id": 51337202, "comment_id": 89650285, "body": "In the linked post it says that compiler plugins must be in its own <code>lib</code> crate, with <code>plugin = true</code> in the <code>Cargo.toml</code>... Maybe you are writing this code in a <code>bin</code> crate?"}, {"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1531567096, "post_id": 51337202, "comment_id": 89650335, "body": "@rodrigo I put both files i the <code>src</code> folder, both files mean <code>main.rs</code> and <code>lib.rs</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1531567307, "post_id": 51337202, "comment_id": 89650391, "body": "I think you should create two different crates. One <code>bin</code> crate and another <code>lib</code> crate. You can create the <code>lib</code> crate inside the <code>bin</code> directory and in the <code>Cargo.toml</code> of the <code>bin</code> one you set the <code>path</code> of the dependency to point the the <code>lib</code> one. And the <code>Cargo.toml</code> of the <code>lib</code> one can have that <code>plugin = true</code>."}, {"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1531569472, "post_id": 51337202, "comment_id": 89650969, "body": "I updated my my question based on your feedback @rodrigo, kindly have a lock."}], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 3, "last_activity_date": 1531576650, "last_edit_date": 1531576650, "creation_date": 1531569965, "answer_id": 51338336, "question_id": 51337202, "link": "https://stackoverflow.com/questions/51337202/unresolved-import-error-e0432-when-creating-a-syntax-extension/51338336#51338336", "title": "Unresolved import error E0432 when creating a syntax extension", "body": "<p>This is what happens when you use unstable features: they change!\nThe blog post you link is quite old now (2015 maybe?)... Many things will still apply but things are being moved around.</p>\n\n<p>You can find the latest <a href=\"https://doc.rust-lang.org/unstable-book/language-features/plugin.html\" rel=\"nofollow noreferrer\">official documentation here</a>.</p>\n\n<p>A quick skimming through the docs reveal the first problem is that <code>rustc::plugin</code> has been moved to its own crate: <code>rustc_plugin</code>. I didn't follow all the documentation but more issues probably follow.</p>\n"}], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1179, "favorite_count": 0, "accepted_answer_id": 51338336, "answer_count": 1, "score": 2, "last_activity_date": 1531576650, "creation_date": 1531561176, "last_edit_date": 1531576621, "question_id": 51337202, "link": "https://stackoverflow.com/questions/51337202/unresolved-import-error-e0432-when-creating-a-syntax-extension", "title": "Unresolved import error E0432 when creating a syntax extension", "body": "<p>I'm trying to <a href=\"https://www.gulshansingh.com/posts/how-to-write-a-rust-syntax-extension/\" rel=\"nofollow noreferrer\">make a syntax extension</a>, but I got error E0432. I read about it in <a href=\"https://doc.rust-lang.org/error-index.html#E0432\" rel=\"nofollow noreferrer\">the error index</a> but could not understand what I should do!</p>\n\n<p>The error text I got is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>/Users/hasan/.cargo/bin/cargo run --color=always --package rust01 --bin rust01\n\nCompiling rust01 v0.1.0 (file:///Users/hasan/PycharmProjects/rust01)\n\nerror[E0432]: unresolved import `rustc::plugin`  --&gt; src/lib.rs:6:12\n| 6\n| use rustc::plugin::Registry;\n|            ^^^^^^ Could not find `plugin` in `rustc`\n\nerror[E0432]: unresolved import\n`syntax::ext::base::SyntaxExtension::Modifier`   --&gt; src/lib.rs:12:5\n| 12\n| use syntax::ext::base::SyntaxExtension::Modifier;\n|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `Modifier` in `ext::base::SyntaxExtension`\n\nerror[E0432]: unresolved import `syntax::parse::token::intern`   --&gt;\nsrc/lib.rs:13:5\n| 13\n| use syntax::parse::token::intern;\n|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `intern` in `parse::token`\n</code></pre>\n\n<p>This happened with my IDE:</p>\n\n<pre><code>#![feature(plugin_registrar, rustc_private)]\n\nextern crate syntax; extern crate rustc;\n\nuse rustc::plugin::Registry;\n\nuse syntax::ptr::P; use syntax::ast::{Item, MetaItem}; use syntax::ext::base::ExtCtxt; use syntax::codemap::Span; use syntax::ext::base::SyntaxExtension::Modifier; use syntax::parse::token::intern;\n\n#[plugin_registrar] pub fn registrar(reg: &amp;mut Registry) {\n    reg.register_syntax_extension(intern(\"extension\"), Modifier(Box::new(expand))); }\n\nfn expand(_: &amp;mut ExtCtxt, _: Span, _: &amp;MetaItem, item: P&lt;Item&gt;) -&gt; P&lt;Item&gt; {\n    println!(\"Hello world!\");\n    return item; }\n</code></pre>\n\n<p>Based on the comments received, I put the extension as a separate crate, the new app structure is in the screenshot below.</p>\n\n<p>The <code>Cargo.toml</code> of <code>bin</code> is:</p>\n\n<pre><code>[package]\nname = \"hello_world\"\nversion = \"0.1.0\"\nauthors = [\"hasan\"]\n\n[dependencies]\nextension = { path = \"./extension\" }\n</code></pre>\n\n<p>The <code>Cargo.toml</code> of <code>lib</code> is:</p>\n\n<pre><code>[package]\nname = \"extension\"\nversion = \"0.1.0\"\nauthors = [\"hasan\"]\n\n[dependencies]\n\n[lib]\nplugin = true\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/tusxk.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/tusxk.png\" alt=\"enter image description here\"></a></p>\n"}, {"tags": ["parsing", "rust", "type-inference"], "answers": [{"tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": true, "score": 4, "last_activity_date": 1531564954, "creation_date": 1531564954, "answer_id": 51337686, "question_id": 51337141, "link": "https://stackoverflow.com/questions/51337141/is-the-compiler-smart-enough-to-infer-a-parsed-values-type-based-on-the-values/51337686#51337686", "title": "Is the compiler smart enough to infer a parsed value&#39;s type based on the value&#39;s usage in a function which expects that type?", "body": "<p>It <em>is</em> smart enough to use later usage of a variable to infer its type in the first place. The same could be seen in an extremely simple example:</p>\n\n<pre><code>fn foo(v: Vec&lt;i16&gt;) {\n    println!(\"{:?}\", v);\n}\n\nfn main() {\n    let mut numbers = vec![]; // Let's make a Vec&lt;_&gt;\n    numbers.push(12345);      // Let's push a number (of an unknown type) to it\n    foo(numbers);             // A-ha! It is passed to a function requiring a Vec&lt;i16&gt;. \n                              // That means `numbers` is Vec&lt;i16&gt;\n                              // and the constant 12345 is of type i16.\n}\n</code></pre>\n\n<p>See also <a href=\"https://stackoverflow.com/questions/37542971/how-does-rusts-type-inference-work-across-multiple-statements\">How does Rust's type inference work across multiple statements?</a> </p>\n"}], "owner": {"reputation": 128, "user_id": 6938528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e47378d6ec9953eef195f56b30fcef1?s=128&d=identicon&r=PG&f=1", "display_name": "jonathan-dev", "link": "https://stackoverflow.com/users/6938528/jonathan-dev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 51337686, "answer_count": 1, "score": 1, "last_activity_date": 1531575528, "creation_date": 1531560664, "last_edit_date": 1531575528, "question_id": 51337141, "link": "https://stackoverflow.com/questions/51337141/is-the-compiler-smart-enough-to-infer-a-parsed-values-type-based-on-the-values", "title": "Is the compiler smart enough to infer a parsed value&#39;s type based on the value&#39;s usage in a function which expects that type?", "body": "<p>I found this code on <a href=\"https://tokio.rs/docs/getting-started/hello-world/\" rel=\"nofollow noreferrer\">the tokio hello world page</a>:</p>\n\n<pre><code>fn main() {\n    let addr = \"127.0.0.1:6142\".parse().unwrap();\n    let listener = TcpListener::bind(&amp;addr).unwrap();\n\n    // Following snippets come here...\n}\n</code></pre>\n\n<p>Is the Rust compiler actually smart enough to infer that the type that the string holding the IP address should be parsed to is <code>std::net::SocketAddr</code> because the parsed variable is passed to the bind method which expects that type? Why don't you need to <a href=\"https://stackoverflow.com/questions/27043268/convert-a-string-to-int-in-rust\">use the turbofish operator (::&lt;>) or an explicit type annotation</a>?</p>\n"}, {"tags": ["rust", "mutex", "mutability"], "answers": [{"tags": [], "owner": {"reputation": 347, "user_id": 5207376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/929972057068521/picture?type=large", "display_name": "Xu Chen", "link": "https://stackoverflow.com/users/5207376/xu-chen"}, "is_accepted": false, "score": 6, "last_activity_date": 1531575314, "last_edit_date": 1531575314, "creation_date": 1531551991, "answer_id": 51336145, "question_id": 51335679, "link": "https://stackoverflow.com/questions/51335679/where-is-a-mutexguard-if-i-never-assign-it-to-a-variable/51336145#51336145", "title": "Where is a MutexGuard if I never assign it to a variable?", "body": "<p>Here are my thoughts: </p>\n\n<pre><code>let y: &amp;mut Vec&lt;_&gt; = &amp;mut *x.lock().unwrap();\n</code></pre>\n\n<p>A couple of things going on under the surface for your current code:   </p>\n\n<ol>\n<li>Your <code>.lock()</code> yields a <code>LockResult&lt;MutexGuard&lt;Vec&gt;&gt;</code>  </li>\n<li>You called <code>unwrap()</code> on the <code>LockResult</code> and get a <code>MutexGuard&lt;Vec&gt;</code>  </li>\n<li>Because <code>MutexGuard&lt;T&gt;</code> implements the <code>DerefMut</code> interface, Rust performs deref coercion. It gets dereferenced by the <code>*</code> operator, and yields a <code>&amp;mut Vec</code>. </li>\n</ol>\n\n<p>In Rust, I believe you don't call <code>deref_mut</code> by your own, rather <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-02-deref.html#how-deref-coercion-interacts-with-mutability\" rel=\"noreferrer\">the complier will do the <code>Deref</code> coercion for you</a>.</p>\n\n<p>If you want to get your <code>MutexGuard</code>, you should not dereference it:</p>\n\n<pre><code>let mut y  = x.lock().unwrap();\n(*y).push(3);\nprintln!(\"{:?}, {:?}\", x, y);\n//Output: Mutex { data: &lt;locked&gt; }, MutexGuard { lock: Mutex { data: &lt;locked&gt; } }\n</code></pre>\n\n<p>From what I have seen online, people usually do make the <code>MutexGuard</code> explicit by saving it into a variable, and dereference it when it is being used, like my modified code above. I don't think there is an official pattern about this. Sometimes it will also save you from making a temporary variable. </p>\n"}, {"comments": [{"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1531564932, "post_id": 51337329, "comment_id": 89649864, "body": "But here the lifetime of the temporary seems to be the enclosing block and not the innermost enclosing statement?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1531567777, "post_id": 51337329, "comment_id": 89650514, "body": "@CodesInChaos Thanks for catching that! I was in a hurry and skipped over this important detail. I fixed my answer and now (almost) everything makes sense!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 17, "last_activity_date": 1531567740, "last_edit_date": 1531567740, "creation_date": 1531562079, "answer_id": 51337329, "question_id": 51335679, "link": "https://stackoverflow.com/questions/51335679/where-is-a-mutexguard-if-i-never-assign-it-to-a-variable/51337329#51337329", "title": "Where is a MutexGuard if I never assign it to a variable?", "body": "<p><strong>Summary</strong>: because <code>*x.lock().unwrap()</code> performs an <a href=\"https://doc.rust-lang.org/reference/expressions.html#implicit-borrows\" rel=\"noreferrer\">implicit borrow</a> of the operand <code>x.lock().unwrap()</code>, the operand is treated as a place context. But since our actual operand is not a place expression, but a value expression, <strong>it gets assigned to an unnamed memory location (basically a hidden <code>let</code> binding)!</strong></p>\n\n<p>See below for a more detailed explanation.</p>\n\n<hr>\n\n<h2>Place expressions and value expressions</h2>\n\n<p>Before we dive in, first two important terms. Expressions in Rust are divided into two main categories: place expressions and value expressions.</p>\n\n<ul>\n<li><strong>Place expressions</strong> represent a value that has a home (a memory location). For example, if you have <code>let x = 3;</code> then <code>x</code> is a place expression. Historically this was called <em>lvalue expression</em>.</li>\n<li><strong>Value expressions</strong> represent a value that does not have a home (we can only use the value, there is no memory location associated with it). For example, if you have <code>fn bar() -&gt; i32</code> then <code>bar()</code> is a value expression. Literals like <code>3.14</code> or <code>\"hi\"</code> are value expressions too. Historically these were called <em>rvalue expressions</em>.</li>\n</ul>\n\n<p>There is a good rule of thumb to check if something is a place or value expression: \"does it make sense to write it on the left side of an assignment?\". If it does (like <code>my_variable = ...;</code>) it is a place expression, if it doesn't (like <code>3 = ...;</code>) it's a value expression.</p>\n\n<p>There also exist <em>place contexts</em> and <em>value contexts</em>. These are basically the \"slots\" in which expressions can be placed. There are only a few <em>place contexts</em>, which (usually, see below) require a <em>place expression</em>:</p>\n\n<ul>\n<li>Left side of a (compound) assignment expression (<code>\u27e8place context\u27e9 = ...;</code>, <code>\u27e8place context\u27e9 += ...;</code>)</li>\n<li>Operand of an borrow expression (<code>&amp;\u27e8place context\u27e9</code> and <code>&amp;mut \u27e8place context\u27e9</code>)</li>\n<li>... plus a few more</li>\n</ul>\n\n<p>Note that place expressions are strictly more \"powerful\". They can be used in a value context without a problem, because they <em>also</em> represent a value. </p>\n\n<p>(<a href=\"https://doc.rust-lang.org/reference/expressions.html#place-expressions-and-value-expressions\" rel=\"noreferrer\">relevant chapter in the reference</a>)</p>\n\n<h2>Temporary lifetimes</h2>\n\n<p>Let's build a small dummy example to demonstrate a thing Rust does:</p>\n\n<pre><code>struct Foo(i32);\n\nfn get_foo() -&gt; Foo {\n    Foo(0)\n}\n\nlet x: &amp;Foo = &amp;get_foo();\n</code></pre>\n\n<p>This works!</p>\n\n<p>We know that the expression <code>get_foo()</code> is a <em>value expression</em>. And we know that the operand of a borrow expression is a <em>place context</em>. So why does this compile? Didn't <em>place contexts</em> need <em>place expressions</em>?</p>\n\n<p>Rust creates temporary <code>let</code> bindings! From <a href=\"https://doc.rust-lang.org/reference/expressions.html#temporary-lifetimes\" rel=\"noreferrer\">the reference</a>:</p>\n\n<blockquote>\n  <p>When using a value expression in most place expression contexts, a temporary unnamed memory location is created initialized to that value and the expression evaluates to that location instead [...].</p>\n</blockquote>\n\n<p>So the above code is equivalent to:</p>\n\n<pre><code>let _compiler_generated = get_foo();\nlet x: &amp;Foo = &amp;_compiler_generated;\n</code></pre>\n\n<p>This is what makes your <code>Mutex</code> example work: the <code>MutexLock</code> is assigned to a temporary unnamed memory location! That's where it lives. Let's see:</p>\n\n<pre><code>&amp;mut *x.lock().unwrap();\n</code></pre>\n\n<p>The <code>x.lock().unwrap()</code> part is a value expression: it has the type <code>MutexLock</code> and is returned by a function (<code>unwrap()</code>) just like <code>get_foo()</code> above. Then there is only one last question left: is the operand of the deref <code>*</code> operator a place context? I didn't mention it in the list of place contests above...</p>\n\n<h2>Implicit borrows</h2>\n\n<p>The last piece in the puzzle are implicit borrows. From <a href=\"https://doc.rust-lang.org/reference/expressions.html#implicit-borrows\" rel=\"noreferrer\">the reference</a>:</p>\n\n<blockquote>\n  <p>Certain expressions will treat an expression as a place expression by implicitly borrowing it.</p>\n</blockquote>\n\n<p>These include \"the operand of the dereference operator (<code>*</code>)\"! And all operands of any implicit borrow are place contexts!</p>\n\n<p>So because <code>*x.lock().unwrap()</code> performs an implicit borrow, the operand <code>x.lock().unwrap()</code> is a place context, but since our actual operand is not a place, but a value expression, it gets assigned to an unnamed memory location!</p>\n\n<h2>Why doesn't this work for <code>deref_mut()</code></h2>\n\n<p>There is an important detail of \"temporary lifetimes\". Let's look at the quote again:</p>\n\n<blockquote>\n  <p>When using a value expression in most place expression contexts, a temporary unnamed memory location is created initialized to that value and the expression evaluates to that location instead [...].</p>\n</blockquote>\n\n<p>Depending on the situation, Rust chooses memory locations with different lifetimes! In the <code>&amp;get_foo()</code> example above, the temporary unnamed memory location had a lifetime of the enclosing block. This is equivalent to the hidden <code>let</code> binding I showed above. </p>\n\n<p><em>However</em>, this \"temporary unnamed memory location\" is not always equivalent to a <code>let</code> binding! Let's take a look at this case:</p>\n\n<pre><code>fn takes_foo_ref(_: &amp;Foo) {}\n\ntakes_foo_ref(&amp;get_foo());\n</code></pre>\n\n<p>Here, the <code>Foo</code> value only lives for the duration of the <code>takes_foo_ref</code> call and not longer! </p>\n\n<p>In general, if the reference to the temporary is used as an argument for a function call, the temporary lives only for that function call. This also includes the <code>&amp;self</code> (and <code>&amp;mut self</code>) parameter. So in <code>get_foo().deref_mut()</code>, the <code>Foo</code> object would also only live for the duration of <code>deref_mut()</code>. But since <code>deref_mut()</code> returns a reference to the <code>Foo</code> object, we would get a \"does not live long enough\" error.</p>\n\n<p>That's of course also the case for <code>x.lock().unwrap().deref_mut()</code> -- that's why we get the error. </p>\n\n<p>In the deref operator (<code>*</code>) case, the temporary lives for the enclosing block (equivalent to a <code>let</code> binding). I can only assume that this is a special case in the compiler: the compiler knows that a call to <code>deref()</code> or <code>deref_mut()</code> always returns a reference to the <code>self</code> receiver, so it wouldn't make sense to borrow the temporary for only the function call.</p>\n"}], "owner": {"reputation": 1619, "user_id": 498680, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/86f955ec4bf3a8dc99906ee374339702?s=128&d=identicon&r=PG", "display_name": "AnimatedRNG", "link": "https://stackoverflow.com/users/498680/animatedrng"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2877, "favorite_count": 2, "accepted_answer_id": 51337329, "answer_count": 2, "score": 7, "last_activity_date": 1531575314, "creation_date": 1531547447, "last_edit_date": 1531575205, "question_id": 51335679, "link": "https://stackoverflow.com/questions/51335679/where-is-a-mutexguard-if-i-never-assign-it-to-a-variable", "title": "Where is a MutexGuard if I never assign it to a variable?", "body": "<p>I don't understand \"where\" the <code>MutexGuard</code> in the inner block of code is. The mutex is locked and unwrapped, yielding a <code>MutexGuard</code>. Somehow this code manages to dereference that <code>MutexGuard</code> and then mutably borrow that object. Where did the <code>MutexGuard</code> go? Also, confusingly, this dereference cannot be replaced with <code>deref_mut</code>. Why?</p>\n\n<pre><code>use std::sync::Mutex;\n\nfn main() {\n    let x = Mutex::new(Vec::new());\n    {\n        let y: &amp;mut Vec&lt;_&gt; = &amp;mut *x.lock().unwrap();\n        y.push(3);\n        println!(\"{:?}, {:?}\", x, y);\n    }\n\n    let z = &amp;mut *x.lock().unwrap();\n    println!(\"{:?}, {:?}\", x, z);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1147, "user_id": 3925319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VhNa3.png?s=128&g=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/3925319/joe"}, "edited": false, "score": 0, "creation_date": 1531539612, "post_id": 51334962, "comment_id": 89645228, "body": "Rust was built for security. You can only modify values of variables with that keyword I am pretty sure."}, {"owner": {"reputation": 1315, "user_id": 812906, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/uy9sl.jpg?s=128&g=1", "display_name": "Dragonborn", "link": "https://stackoverflow.com/users/812906/dragonborn"}, "reply_to_user": {"reputation": 1147, "user_id": 3925319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VhNa3.png?s=128&g=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/3925319/joe"}, "edited": false, "score": 0, "creation_date": 1531545703, "post_id": 51334962, "comment_id": 89646064, "body": "this is not about variable. but using types. is there way to reduce this to one line?"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1531577126, "post_id": 51334962, "comment_id": 89654011, "body": "For what it&#39;s worth - Rust doesn&#39;t tend to follow the same &#39;one struct/class per file&#39; idiom as languages like Java or C#. You&#39;re better off putting related functionality into one module."}], "answers": [{"comments": [{"owner": {"reputation": 1315, "user_id": 812906, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/uy9sl.jpg?s=128&g=1", "display_name": "Dragonborn", "link": "https://stackoverflow.com/users/812906/dragonborn"}, "edited": false, "score": 1, "creation_date": 1531683930, "post_id": 51337178, "comment_id": 89675817, "body": "another thing.. can  i <code>use</code> without declaring mod?"}, {"owner": {"reputation": 497, "user_id": 9499193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a205ab60584733c5a84aa4c6e780d106?s=128&d=identicon&r=PG&f=1", "display_name": "JayJamesJay", "link": "https://stackoverflow.com/users/9499193/jayjamesjay"}, "reply_to_user": {"reputation": 1315, "user_id": 812906, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/uy9sl.jpg?s=128&g=1", "display_name": "Dragonborn", "link": "https://stackoverflow.com/users/812906/dragonborn"}, "edited": false, "score": 1, "creation_date": 1531695113, "post_id": 51337178, "comment_id": 89678112, "body": "No, you have to declare every <code>mod</code>ule of your lib/app (inside <code>lib.rs</code>). Then you can freely <code>use</code> declared modules inside other modules. When you want to use them in your app (inside <code>main.rs</code>), you have to <code>extern crate</code>. However, when you <code>extern</code> someone&#39;s <code>crate</code>, you <code>use</code> without declaring modules, because they have been already declared inside the crate (by the author of it)"}], "tags": [], "owner": {"reputation": 497, "user_id": 9499193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a205ab60584733c5a84aa4c6e780d106?s=128&d=identicon&r=PG&f=1", "display_name": "JayJamesJay", "link": "https://stackoverflow.com/users/9499193/jayjamesjay"}, "is_accepted": true, "score": 1, "last_activity_date": 1531561987, "last_edit_date": 1531561987, "creation_date": 1531561009, "answer_id": 51337178, "question_id": 51334962, "link": "https://stackoverflow.com/questions/51334962/why-do-i-need-mod-keyword-for-accessing-structs-in-file-at-same-level-for-rust/51337178#51337178", "title": "Why do I need mod keyword for accessing structs in file at same level for Rust?", "body": "<p>Rust's module system allows you to split code into small, reusable modules.\nYou declare new module using <code>mod</code> keyword. Every module has its own scope. It means that if you want to use <code>struct</code> (or anything else) from module, you need to type <code>module_name::StructName</code> or bring it into your code's scope using <code>use</code> keyword (<code>use module_name::StructName</code>). This is because there might be two different structs with the same name in two different modules. E.x. There is a struct <code>A</code> in module <code>b</code>, and there is struct <code>A</code> in module <code>C</code>. If there wasn't separate scope for each module, which struct <code>A</code> would be imported? Rust wouldn't be able to figure out what was our intention. It may cause bugs and other issues.</p>\n\n<p>To import module you need to use module's name double colon and name of the imported submodule or struct e.x.</p>\n\n<pre><code>use std::io;\n</code></pre>\n\n<p>To import all submodules of one module you need to use module's name double colon and star sign, e.x.</p>\n\n<pre><code>use std::*;\n</code></pre>\n\n<p>You can also refer to parent module using <code>super</code> keyword and import all its modules at once, e.x.:</p>\n\n<pre><code>mod pair;\nmod point;\nmod rectangle;\n\nuse super::*;\n</code></pre>\n\n<p>Since <a href=\"https://blog.rust-lang.org/2018/03/29/Rust-1.25.html\" rel=\"nofollow noreferrer\">Rust 1.25</a> you can nest import groups, e.x.:</p>\n\n<pre><code>use std::{\n    cmp::{self, Ordering}, \n    fs, \n    io::prelude::*,\n};\n</code></pre>\n\n<p>Please also read:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/book/second-edition/ch07-00-modules.html\" rel=\"nofollow noreferrer\">Using Modules to Reuse and Organize Code - The Rust Programming<br>\nLanguage</a> </li>\n<li><a href=\"https://doc.rust-lang.org/book/second-edition/ch07-03-importing-names-with-use.html#using-super-to-access-a-parent-module\" rel=\"nofollow noreferrer\">Using super to Access a Parent Module - The Rust Programming<br>\nLanguage</a></li>\n</ul>\n"}], "owner": {"reputation": 1315, "user_id": 812906, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/uy9sl.jpg?s=128&g=1", "display_name": "Dragonborn", "link": "https://stackoverflow.com/users/812906/dragonborn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 589, "favorite_count": 0, "accepted_answer_id": 51337178, "answer_count": 1, "score": 2, "last_activity_date": 1531852271, "creation_date": 1531538566, "last_edit_date": 1531852271, "question_id": 51334962, "link": "https://stackoverflow.com/questions/51334962/why-do-i-need-mod-keyword-for-accessing-structs-in-file-at-same-level-for-rust", "title": "Why do I need mod keyword for accessing structs in file at same level for Rust?", "body": "<pre><code>mod pair;\nmod point;\nmod rectangle;\n\nuse pair::Pair;\nuse point::Point;\nuse rectangle::Rectangle;\n</code></pre>\n\n<p>Shouldn't these structs be available in the same scope for code files at same level as pair.rs, point.rs and rectangle.rs?</p>\n\n<p>And is there python like syntax?</p>\n\n<pre><code>from A import B\n</code></pre>\n"}, {"tags": ["memory-management", "rust", "object-lifetime"], "comments": [{"owner": {"reputation": 49, "user_id": 1241623, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bae1fc91176d42e91836ad489b28e352?s=128&d=identicon&r=PG", "display_name": "skittish", "link": "https://stackoverflow.com/users/1241623/skittish"}, "edited": false, "score": 0, "creation_date": 1531517559, "post_id": 51332725, "comment_id": 89641505, "body": "One potential solution that I could think of: operate on actual objects instead of references.  <code>let mut query_to_search: String = query.clone().to_string();     if case_insensitive {         query_to_search = query.to_lowercase();     }         for line in lines.lines() {         let mut line_to_search: String = line.clone().to_string();         if case_insensitive {             line_to_search = line.to_lowercase();         }            if line_to_search.contains(&amp;query_to_search) {             results.push(line);         }        }</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531517993, "post_id": 51332725, "comment_id": 89641654, "body": "The <a href=\"https://play.rust-lang.org/?gist=692e19a21c818b825ecc95adab8ab9bb&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">duplicate applied to your question</a>"}, {"owner": {"reputation": 49, "user_id": 1241623, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bae1fc91176d42e91836ad489b28e352?s=128&d=identicon&r=PG", "display_name": "skittish", "link": "https://stackoverflow.com/users/1241623/skittish"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532029052, "post_id": 51332725, "comment_id": 89832036, "body": "I agree that the duplicate applies. Just wanted to share what I ended up using."}], "owner": {"reputation": 49, "user_id": 1241623, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bae1fc91176d42e91836ad489b28e352?s=128&d=identicon&r=PG", "display_name": "skittish", "link": "https://stackoverflow.com/users/1241623/skittish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 47, "favorite_count": 0, "closed_date": 1531515777, "answer_count": 0, "score": 0, "last_activity_date": 1531516116, "creation_date": 1531515500, "last_edit_date": 1531515930, "question_id": 51332725, "link": "https://stackoverflow.com/questions/51332725/implementing-a-search-method-to-handle-optional-case-sensitivity", "closed_reason": "Duplicate", "title": "Implementing a search() method to handle optional case sensitivity", "body": "<p>In <em>The Rust Programming Language</em>, there is a <a href=\"https://doc.rust-lang.org/book/second-edition/ch12-05-working-with-environment-variables.html\" rel=\"nofollow noreferrer\">chapter which implements a minigrep</a>. Instead of implementing a second <code>search_case_insensitive()</code> method, I wanted to implement a single API which would duplicate code. That attempt went something like this:</p>\n\n<pre><code>pub fn search&lt;'a&gt;(query: &amp;str, lines: &amp;'a str, case_insensitive: bool) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut results = Vec::new();\n\n    let mut query_to_search = query.clone();\n    if case_insensitive {\n        query_to_search = &amp;query_to_search.to_lowercase();\n    }   \n\n    for line in lines.lines() {\n        let mut line_to_search = line.clone();\n        if case_insensitive {\n            line_to_search = &amp;line_to_search.to_lowercase();\n        }   \n        if line_to_search.contains(&amp;query_to_search) {\n            results.push(line);\n        }   \n    }   \n\n    return results;\n}\n</code></pre>\n\n<p>This results in a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n--&gt; src/lib.rs:49:28\n  |\n49|         query_to_search = &amp;query_to_search.to_lowercase();\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- temporary value dropped here while still borrowed\n  |                            |\n  |                            temporary value does not live long enough\n...\n63| }\n  | - temporary value needs to live until here\n  |\n  = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>And there is a similar error for this line:</p>\n\n<pre><code>line_to_search = &amp;line_to_search.to_lowercase();\n</code></pre>\n\n<p>I understand that <code>to_lowercase()</code> is creating a new <code>String</code> object which is going out of scope after the if-condition, which is causing the borrow checker to throw an error. </p>\n\n<p>How can I extend the lifetime of the <code>String</code> object returned by the <code>to_lowercase()</code> method so that it's not freed without creating a duplicate objects to hold the lowercase versions of the query/lines objects?</p>\n\n<p><strong>EXAMPLE:</strong></p>\n\n<pre><code>pub fn search&lt;'a&gt;(query: &amp;str, lines: &amp;'a str, case_insensitive: bool) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut results = Vec::new();\n\n    let query_lower_case = query.to_lowercase(); // We are retaining this lower case object unnecessarily for case sensitive search\n    let mut query_to_search: &amp;str = &amp;query.clone();\n    if case_insensitive {\n        query_to_search = &amp;query_lower_case;\n    }   \n\n    for line in lines.lines() {\n        let line_lower_case = line.to_lowercase(); // We are retaining this lower case object unnecessarily for case sensitive search\n        let mut line_to_search: &amp;str = &amp;line.clone();\n        if case_insensitive {\n            line_to_search = &amp;line_lower_case;\n        }   \n        if line_to_search.contains(&amp;query_to_search) {\n            results.push(line);\n        }   \n    }   \n\n    return results;\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 23816, "user_id": 870729, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/742ce6130a9b48676e57e2c38f8a2764?s=128&d=identicon&r=PG&f=1", "display_name": "random_user_name", "link": "https://stackoverflow.com/users/870729/random-user-name"}, "edited": false, "score": 2, "creation_date": 1531514387, "post_id": 51332487, "comment_id": 89640526, "body": "Consider the minimal aspect of <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>.... there&#39;s a TON of code here...."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1531522076, "post_id": 51332487, "comment_id": 89642699, "body": "be more careful when you cast thing."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1531516015, "creation_date": 1531516015, "answer_id": 51332821, "question_id": 51332487, "link": "https://stackoverflow.com/questions/51332487/my-rust-code-is-much-longer-than-the-equivalent-python-one-with-the-wrong-resul/51332821#51332821", "title": "My Rust code is much longer than the equivalent Python one, with the wrong result", "body": "<p>In Rust, you are converting everything to <code>usize</code> all the time:</p>\n\n<pre><code>(1 - gamma as usize) as f32\n</code></pre>\n\n<p>If you think about that one, <code>(1 - gamma as usize)</code> can only ever be <code>0</code> or <code>1</code> depending on the value of <code>gamma</code>. If you instead change it to</p>\n\n<pre><code>(1.0 - gamma) as f32\n</code></pre>\n\n<p>And also change</p>\n\n<pre><code>(smooth as usize + m * trend as usize) as f32\n</code></pre>\n\n<p>to</p>\n\n<pre><code>(smooth + m as f32 * trend)\n</code></pre>\n\n<p>Then you get the same result as in Python.</p>\n\n<p>As for performance, this looks about right, but you could introduce some temporary variables to avoid recomputing the same things all the time (although the optimizer should help). The default compilation mode for Rust is debug, be sure to switch to release for benchmarks.</p>\n"}, {"tags": [], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "is_accepted": false, "score": 0, "last_activity_date": 1531552254, "creation_date": 1531552254, "answer_id": 51336183, "question_id": 51332487, "link": "https://stackoverflow.com/questions/51332487/my-rust-code-is-much-longer-than-the-equivalent-python-one-with-the-wrong-resul/51336183#51336183", "title": "My Rust code is much longer than the equivalent Python one, with the wrong result", "body": "<p>I'm posting here the best comments and answer I received, hope be useful for others:</p>\n\n<p>try to minimize (and possibly to reduce to zero) the number of \u201cas\u201d casts in your code. into()/from() and try_from() help;</p>\n\n<p>Try to replace some raw loops with iterators;</p>\n\n<p>The triple_exponential_smoothing function has some arguments that are easy to confuse at the calling point because Rust currently doesn\u2019t have named arguments. To avoid the problem you could try to pack some arguments in structs/tuples.</p>\n\n<p>Using \u201creturn\u201d at the end of Rust functions isn\u2019t much idiomatic.</p>\n\n<p>Also, something worth noting is that in Python, the floating point type is double floating point, which would be f64 in Rust. This likely would introduce small differences in accuracy, although likely nothing major.</p>\n\n<p>The functional neat code the replaced mine is in this <a href=\"https://play.rust-lang.org/?gist=0bd893bdb65f93655a4ee93a05bc7c51&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">PlayGound</a>:</p>\n\n<pre><code>fn main() {\n    let series = [\n        30,21,29,31,40,48,53,47,37,39,31,29,17,9,20,24,27,35,41,38,\n        27,31,27,26,21,13,21,18,33,35,40,36,22,24,21,20,17,14,17,19,\n        26,29,40,31,20,24,18,26,17,9,17,21,28,32,46,33,23,28,22,27,\n        18,8,17,21,31,34,44,38,31,30,26,32];\n\n    triple_exponential_smoothing(&amp;series, 12, 0.716, 0.029, 0.993, 24);\n}\n\nfn initial_trend(series: &amp;[i32], slen: usize) -&gt; f32 {\n    series[..slen].iter().zip(&amp;series[slen..])\n        .map(|(&amp;a, &amp;b)| (b as f32 - a as f32) / slen as f32).sum::&lt;f32&gt;() / slen as f32\n}\n\nfn initial_seasonal_components (series: &amp;[i32], slen: usize) -&gt; Vec&lt;f32&gt; {\n    let n_seasons = series.len() / slen;\n    // # compute season averages\n    let season_averages = series //season_averages\n        .chunks(slen)\n        .map(|chunk| chunk.iter().sum::&lt;i32&gt;() as f32 / chunk.len() as f32)\n        .collect::&lt;Vec&lt;f32&gt;&gt;();\n    // # compute initial values\n    (0..slen).map(|i| {\n        let mut sum_of_vals_over_avg = 0.0;\n        for j in 0..n_seasons {\n            sum_of_vals_over_avg += series[i + j * slen] as f32 - season_averages[j] as f32;\n        }\n        sum_of_vals_over_avg / n_seasons as f32\n    }).collect()\n}\n\nfn triple_exponential_smoothing(series: &amp;[i32], slen: usize, alpha: f32, beta: f32,\n                                gamma: f32, n_preds: usize) {\n    let mut result: Vec&lt;f32&gt; = Vec::new();\n    let mut seasonals = initial_seasonal_components(&amp;series, slen);\n    println!(\"The seasonalities are: {:#?}\", seasonals);\n    let mut smooth = 0.0;\n    let mut trend = 0.0;\n\n    for i in 0..(series.len() + n_preds) {\n        match i {\n            0 =&gt; {  // # initial values\n                smooth = series[0] as f32;\n                trend = initial_trend(&amp;series, slen);\n                println!(\"The initial_trend is: {:#?}\", trend);\n                result.push(series[0] as f32);\n            },\n            i if i &gt;= series.len() =&gt; {  // # we are forecasting\n                let m = i - series.len() + 1;\n                result.push((smooth + m as f32 * trend) + seasonals[i % slen])\n            },\n            _ =&gt; {\n                let val = series[i];\n                let last_smooth = smooth;\n                smooth = alpha * (val as f32 - seasonals[i % slen]) +\n                    (1.0 - alpha)*(smooth + trend);\n                trend = beta * (smooth - last_smooth) + (1.0 - beta) * trend;\n                seasonals[i % slen] = gamma * (val as f32 - smooth) +\n                    (1.0 - gamma) * seasonals[i % slen];\n                result.push(smooth + trend + seasonals[i % slen]);\n            }\n        }\n    }\n    println!(\"The forecast is: {:#?}\", result);\n}\n</code></pre>\n"}], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 51332821, "answer_count": 2, "score": -1, "last_activity_date": 1531552254, "creation_date": 1531514195, "last_edit_date": 1531516420, "question_id": 51332487, "link": "https://stackoverflow.com/questions/51332487/my-rust-code-is-much-longer-than-the-equivalent-python-one-with-the-wrong-resul", "title": "My Rust code is much longer than the equivalent Python one, with the wrong result", "body": "<p>When converting <a href=\"https://grisha.org/blog/2016/02/17/triple-exponential-smoothing-forecasting-part-iii/\" rel=\"nofollow noreferrer\">existing Python code</a> to Rust, the number of lines increased, with many type changes, and worst of all with the wrong result! I'm not sure if I'm doing something wrong or if there is a way to optimize it:</p>\n\n<p>The main function is:</p>\n\n<pre><code>fn main() {\n    let series = [\n        30, 21, 29, 31, 40, 48, 53, 47, 37, 39, 31, 29, 17, 9, 20, 24, 27, 35, 41, 38, 27, 31, 27,\n        26, 21, 13, 21, 18, 33, 35, 40, 36, 22, 24, 21, 20, 17, 14, 17, 19, 26, 29, 40, 31, 20, 24,\n        18, 26, 17, 9, 17, 21, 28, 32, 46, 33, 23, 28, 22, 27, 18, 8, 17, 21, 31, 34, 44, 38, 31,\n        30, 26, 32,\n    ];\n\n    triple_exponential_smoothing(&amp;series, 12, 0.716, 0.029, 0.993, 24);\n}\n</code></pre>\n\n<p><code>triple_exponential_smoothing</code> calls two other functions, which I tested, and they give correct results:</p>\n\n<pre><code>fn initial_trend(series: &amp;[i32], slen: i32) -&gt; f32 {\n    let mut sum = 0.0;\n    for i in 0..slen as usize { // in Python: for i in range(slen)\n        sum += (series[i + slen as usize] as f32 - series[i] as f32) / slen as f32;\n    }\n    return sum / slen as f32;\n}\n</code></pre>\n\n<p>Which is a conversion of the Python code:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>def initial_trend(series, slen):\n    sum = 0.0\n    for i in range(slen):\n        sum += float(series[i+slen] - series[i]) / slen\n    return sum / slen\n\n# &gt;&gt;&gt; initial_trend(series, 12)\n# -0.7847222222222222\n</code></pre>\n\n<p>The second one is:</p>\n\n<pre><code>fn initial_seasonal_components(series: &amp;[i32], slen: i32) -&gt; Vec&lt;f32&gt; {\n    let mut seasonals = Vec::new();\n    let n_seasons = series.len() as i32 / slen;\n    // # compute season averages\n    let season_chunks = series //season_averages\n            .chunks(slen as usize)\n            .collect::&lt;Vec&lt;_&gt;&gt;();\n    let season_averages = season_chunks\n        .iter()\n        .map(|chunk| chunk.iter().sum::&lt;i32&gt;() as f32 / chunk.len() as f32)\n        .collect::&lt;Vec&lt;f32&gt;&gt;();\n    // # compute initial values\n    for i in 0..slen as usize {\n        let mut sum_of_vals_over_avg = 0.0;\n        for j in 0..n_seasons as usize {\n            sum_of_vals_over_avg +=\n                series[i + j * slen as usize] as f32 - season_averages[j] as f32;\n        }\n        seasonals.push(sum_of_vals_over_avg / n_seasons as f32);\n    }\n    return seasonals;\n}\n</code></pre>\n\n<p>Which is a conversion of the Python code:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>def initial_seasonal_components(series, slen):\n    seasonals = {}\n    season_averages = []\n    n_seasons = int(len(series)/slen)\n    # compute season averages\n    for j in range(n_seasons):\n        season_averages.append(sum(series[slen*j:slen*j+slen])/float(slen))\n    # compute initial values\n    for i in range(slen):\n        sum_of_vals_over_avg = 0.0\n        for j in range(n_seasons):\n            sum_of_vals_over_avg += series[slen*j+i]-season_averages[j]\n        seasonals[i] = sum_of_vals_over_avg/n_seasons\n    return seasonals\n\n# &gt;&gt;&gt; initial_seasonal_components(series, 12)\n# {0: -7.4305555555555545, 1: -15.097222222222221, 2: -7.263888888888888, 3: -5.097222222222222, 4: 3.402777777777778, 5: 8.069444444444445, 6: 16.569444444444446, 7: 9.736111111111112, 8: -0.7638888888888887, 9: 1.902777777777778, 10: -3.263888888888889, 11: -0.7638888888888887}\n</code></pre>\n\n<p>The error looks to be in this function:</p>\n\n<pre><code>fn triple_exponential_smoothing(\n    series: &amp;[i32],\n    slen: i32,\n    alpha: f32,\n    beta: f32,\n    gamma: f32,\n    n_preds: i32,\n) {\n    let mut result: Vec&lt;f32&gt; = Vec::new();\n    let mut seasonals = initial_seasonal_components(&amp;series, slen);\n    println!(\"The seasonalities are: {:#?}\", seasonals);\n    let mut smooth = 0.0;\n    let mut trend = 0.0;\n    // for i in range(len(series)+n_preds):\n    for i in 0..(series.len() + n_preds as usize) as usize {\n        match i {\n            0 =&gt; {\n                // # initial values\n                smooth = series[0] as f32;\n                trend = initial_trend(&amp;series, slen);\n                println!(\"The initial_trend is: {:#?}\", trend);\n                result.push(series[0] as f32);\n            }\n            i if i &gt;= series.len() =&gt; {\n                // # we are forecasting\n                let m = i - series.len() + 1;\n                result.push(\n                    (smooth as usize + m * trend as usize) as f32 + seasonals[i % slen as usize],\n                )\n            }\n            _ =&gt; {\n                let val = series[i];\n                let last_smooth = smooth;\n                smooth = alpha * (val as f32 - seasonals[i % slen as usize])\n                    + (1.0 - alpha) * (smooth + trend);\n                trend = beta * (smooth - last_smooth) + (1.0 - beta) * trend;\n                seasonals[i % slen as usize] = gamma * (val as f32 - smooth)\n                    + (1 - gamma as usize) as f32 * seasonals[i % slen as usize];\n                result.push(smooth + trend + seasonals[i % slen as usize]);\n            }\n        }\n    }\n    println!(\"The forecast is: {:#?}\", result);\n}\n</code></pre>\n\n<p>Which is a conversion of the Python code:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>def triple_exponential_smoothing(series, slen, alpha, beta, gamma, n_preds):\n    result = []\n    seasonals = initial_seasonal_components(series, slen)\n    for i in range(len(series)+n_preds):\n        if i == 0: # initial values\n            smooth = series[0]\n            trend = initial_trend(series, slen)\n            result.append(series[0])\n            continue\n        if i &gt;= len(series): # we are forecasting\n            m = i - len(series) + 1\n            result.append((smooth + m*trend) + seasonals[i%slen])\n        else:\n            val = series[i]\n            last_smooth, smooth = smooth, alpha*(val-seasonals[i%slen]) + (1-alpha)*(smooth+trend)\n            trend = beta * (smooth-last_smooth) + (1-beta)*trend\n            seasonals[i%slen] = gamma*(val-smooth) + (1-gamma)*seasonals[i%slen]\n            result.append(smooth+trend+seasonals[i%slen])\n    return result\n\n# # forecast 24 points (i.e. two seasons)\n# &gt;&gt;&gt; triple_exponential_smoothing(series, 12, 0.716, 0.029, 0.993, 24)\n# [30, 20.34449316666667, 28.410051892109554, 30.438122252647577, 39.466817731253066, ...\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=06a86d4fb8cf2ef99e665d168f3cea05&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">My complete code is available in the playground</a></p>\n\n<p>I appreciate any comment to optimize the code and fix the error.</p>\n"}, {"tags": ["rust", "pattern-matching", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531503960, "post_id": 51330147, "comment_id": 89636473, "body": "Again, returning <code>self</code> seemingly serves no purpose."}, {"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531504754, "post_id": 51330147, "comment_id": 89636847, "body": "But it does, because when calling it with <code>Foo::Foo1(Foo::Foo1(Foo::Foo1(Foo::Foo2(5)))</code>, the returned reference is to <code>Foo:Foo2(5)</code>, not the original reference passed in. The whole point is to search for that element in the data structure."}, {"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531504867, "post_id": 51330147, "comment_id": 89636890, "body": "Adjusting the solution in the other question for the second and third arm, with an early return in the first is not working here: <code>cannot borrow *self as mutable more than once at a time</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531505445, "post_id": 51330147, "comment_id": 89637128, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/48610593/155423\">Iterating through a recursive structure using mutable references and returning the last valid reference</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51330147/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "is_accepted": false, "score": 0, "last_activity_date": 1531505560, "creation_date": 1531505560, "answer_id": 51330773, "question_id": 51330147, "link": "https://stackoverflow.com/questions/51330147/how-can-i-pattern-match-a-tuple-containing-a-mut-enum-and-use-the-enum-in-one-m/51330773#51330773", "title": "How can I pattern match a tuple containing a &amp;mut enum and use the enum in one match arm and a recursive call in another?", "body": "<p>This seems to compile, but it's very ugly. Is there a way to simplify this? </p>\n\n<pre><code>enum Foo&lt;'a&gt; {\n    Foo1(Option&lt;&amp;'a mut Foo&lt;'a&gt;&gt;),\n    Foo2(i16),\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn bar(&amp;'a mut self, y: i16) -&gt; (i16, &amp;'a mut Foo&lt;'a&gt;) {\n        match (&amp;mut *self, y) {\n            (Foo::Foo1(Some(ref mut a)), b) if (b == 5) =&gt; {\n                return a.bar(y)\n            },\n\n            (self2, c) =&gt; {\n                let n = match (&amp;mut *self2 , c) {\n                    (Foo::Foo2(ref mut a), b) if (b == 5) =&gt; {\n                        print!(\"is five\");\n                        *a = (b + 42) as i16;\n\n                        *a * b\n                    },\n\n                    ref mut x =&gt; {\n                        print!(\"is not five!\");\n                        y\n                    }\n                };\n\n                return (n, self2)\n            }\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 204, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1531505560, "creation_date": 1531502890, "last_edit_date": 1531503680, "question_id": 51330147, "link": "https://stackoverflow.com/questions/51330147/how-can-i-pattern-match-a-tuple-containing-a-mut-enum-and-use-the-enum-in-one-m", "title": "How can I pattern match a tuple containing a &amp;mut enum and use the enum in one match arm and a recursive call in another?", "body": "<p>How can the code below be made to compile? It seems perfectly safe, but I can't convince the compiler that it is.</p>\n\n<p>The version matching <code>*self</code> gives the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:8:16\n  |\n8 |         match (*self, y) {\n  |                ^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>The version matching <code>self</code> gives:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `*self`\n  --&gt; src/main.rs:17:26\n   |\n8  |         match (self, y) {\n   |                ---- value moved here\n...\n17 |                 (*a * b, self)\n   |                          ^^^^ value used here after move\n   |\n   = note: move occurs because `self` has type `&amp;'a mut Foo&lt;'a&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n\n\n<pre><code>enum Foo&lt;'a&gt; {\n    Foo1(Option&lt;&amp;'a mut Foo&lt;'a&gt;&gt;),\n    Foo2(i16),\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn bar(&amp;'a mut self, y: i16) -&gt; (i16, &amp;'a mut Foo&lt;'a&gt;) {\n        match (self, y) {\n            (&amp;mut Foo::Foo1(Some(ref mut a)), b) if (b == 5) =&gt; {\n                return a.bar(y)\n            },\n\n            (&amp;mut Foo::Foo2(ref mut a), b) if (b == 5) =&gt; {\n                print!(\"is five\");\n                *a = (b + 42) as i16;\n\n                (*a * b, self)\n            },\n\n            ref mut x =&gt; {\n                print!(\"is not five!\");\n                (y, self)\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I feel like I would need a match arm such as the following, but it doesn't seem to be valid syntax:</p>\n\n<pre><code>(ref mut f @ Foo::Foo1, b) if (b == 5) =&gt; {\n    print!(\"is five\");\n    f.0 = b + 42;\n    (b, f)\n} \n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0532]: expected unit struct/variant or constant, found tuple variant `Foo::Foo1`\n  --&gt; src/main.rs:24:30\n   |\n24 |                 (ref mut f @ Foo::Foo1, b) if (b == 5) =&gt; {\n   |                              ^^^^^^^^^ not a unit struct/variant or constant\n</code></pre>\n\n<p>This is a dumbed down version of a <code>deep_fetch_mut</code> of a <code>toml::Value</code> that I am trying to write. The goal would be to be able to call <code>.deep_fetch_mut(vec![\"aaa\",\"bbb\",\"ccc\"])</code>, that will return a mutable reference to that value inside the <code>toml::Value</code>.</p>\n\n<p>This question is an extension of <a href=\"https://stackoverflow.com/questions/51329458/how-can-i-pattern-match-a-tuple-containing-a-mut-enum-and-use-the-enum-in-the-m\">How can I pattern match a tuple containing a &amp;mut enum and use the enum in the match arm?</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531503293, "post_id": 51330015, "comment_id": 89636135, "body": "<code>chunk.iter().sum::&lt;i32&gt;()</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1531503338, "post_id": 51330015, "comment_id": 89636155, "body": "Do <b>not</b> start your variable names with <code>_</code>. This indicates that the variable is deliberately <i>unused</i>, which is not true at all in this case."}, {"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531504435, "post_id": 51330015, "comment_id": 89636696, "body": "Thanks @Shepmaster will consider."}], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 28, "favorite_count": 0, "closed_date": 1531503245, "answer_count": 0, "score": 0, "last_activity_date": 1531503221, "creation_date": 1531502283, "last_edit_date": 1531503221, "question_id": 51330015, "link": "https://stackoverflow.com/questions/51330015/error-while-calculating-getting-average-of-chunks", "closed_reason": "Duplicate", "title": "Error while calculating Getting average of chunks", "body": "<p>I have a series of elements that I need to divide into chunks of 12 and calculate the average of each chunk:</p>\n\n<pre><code>fn main() {\n    let series = [\n        30, 21, 29, 31, 40, 48, 53, 47, 37, 39, 31, 29, 17, 9, 20, 24, 27, 35, 41, 38, 27, 31, 27,\n        26, 21, 13, 21, 18, 33, 35, 40, 36, 22, 24, 21, 20, 17, 14, 17, 19, 26, 29, 40, 31, 20, 24,\n        18, 26, 17, 9, 17, 21, 28, 32, 46, 33, 23, 28, 22, 27, 18, 8, 17, 21, 31, 34, 44, 38, 31,\n        30, 26, 32,\n    ];\n\n    find_chunks_averages(&amp;series, 12);\n}\n\nfn find_chunks_averages(series: &amp;[i32], chunk_length: i32) {\n    let _season_averages = series.to_vec();\n\n    let _chunks = series.chunks(chunk_length as usize).collect::&lt;Vec&lt;_&gt;&gt;();\n\n    let _chunks_averages = _chunks\n        .iter()\n        .map(|chunk| chunk.iter().sum() as f32 / chunk.len() as f32)\n        .collect::&lt;Vec&lt;f32&gt;&gt;();\n\n    println!(\"The chunks you have are:: {:#?}\", _chunks);\n    println!(\"The averagesof the chunks are: {:#?}\", _chunks_averages);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=7396407b2d6fde1d75daade844553cf7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:19:22\n   |\n19 |         .map(|chunk| chunk.iter().sum() as f32 / chunk.len() as f32)\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for `S`\n</code></pre>\n"}, {"tags": ["rust", "pattern-matching", "borrow-checker"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1531499834, "post_id": 51329458, "comment_id": 89634560, "body": "&quot;It seems perfectly safe&quot;, my C code seems perfectly safe too, but rust is not about &quot;seems&quot; but &quot;is&quot;"}, {"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "edited": false, "score": 0, "creation_date": 1531500507, "post_id": 51329458, "comment_id": 89634889, "body": "I&#39;m reading through the linked questions now, but your solution still gives me <code>use of moved value: *self</code>"}, {"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "edited": false, "score": 0, "creation_date": 1531500940, "post_id": 51329458, "comment_id": 89635096, "body": "Note that I am trying to also return self, where the error occurs"}], "answers": [{"comments": [{"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "edited": false, "score": 0, "creation_date": 1531502151, "post_id": 51329860, "comment_id": 89635601, "body": "Thanks for the input - although the aliasing only happens during return, so I would still say it is a safe operation, although the compiler may not be able to understand that. However your answer also points out that my example was dumbed down too much - In the real scenario the data structure is self-referencing and I am actually returning a subtree of the original one, I&#39;ll adjust my question to better reflect this"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "edited": false, "score": 1, "creation_date": 1531502408, "post_id": 51329860, "comment_id": 89635746, "body": "@&#193;kosVandra editing questions such that they invalidate existing answers is generally frowned upon."}, {"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "edited": false, "score": 1, "creation_date": 1531502912, "post_id": 51329860, "comment_id": 89635952, "body": "Sorry, reverted the change, and submitted a new question here: <a href=\"https://stackoverflow.com/questions/51330147/how-can-i-pattern-match-a-tuple-containing-a-mut-enum-and-use-the-enum-in-the-m\" title=\"how can i pattern match a tuple containing a mut enum and use the enum in the m\">stackoverflow.com/questions/51330147/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "edited": false, "score": 1, "creation_date": 1531502961, "post_id": 51329860, "comment_id": 89635972, "body": "@&#193;kosVandra and my edit about NLL doesn&#39;t happen to address your concern?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1531502917, "last_edit_date": 1531502917, "creation_date": 1531501544, "answer_id": 51329860, "question_id": 51329458, "link": "https://stackoverflow.com/questions/51329458/how-can-i-pattern-match-a-tuple-containing-a-mut-enum-and-use-the-enum-in-the-m/51329860#51329860", "title": "How can I pattern match a tuple containing a &amp;mut enum and use the enum in the match arm?", "body": "<p>No, this is not safe. You are attempting to introduce <em>mutable aliasing</em> inside the match arm. The mutable reference <code>a</code> points into the same value  as <code>self</code>. It would be possible to change <code>self</code> (e.g. <code>*self = Foo::Foo1(99)</code>) which would then invalidate <code>a</code>, so this code is disallowed.</p>\n\n<p>Instead, <em>mutably reborrow</em> <code>self</code> in the <code>match</code> statement and have it return the first value of the tuple. Since this value doesn't have a reference to <code>self</code>, you can then return <code>self</code> with the result of the <code>match</code>:</p>\n\n<pre><code>enum Foo {\n    Foo1(u32),\n    Foo2(u32), // changed so I don't have to figure out what casting you meant\n}\n\nimpl Foo {\n   fn bar(&amp;mut self, y: u32) -&gt; (u32, &amp;mut Foo) {\n        let next = match (&amp;mut *self, y) {\n            (Foo::Foo1(a), b @ 5) =&gt; {\n                *a = b + 42;\n                b\n            }\n\n            (Foo::Foo2(a), b @ 5) =&gt; {\n                *a = b + 42;\n                *a * b\n            }\n\n            _ =&gt; y,\n        };\n\n        (next, self)\n    }\n}\n</code></pre>\n\n<p>However, returning <code>self</code> like this is rather pointless here. The caller <em>already</em> has a <code>&amp;mut Foo</code>, so you don't need to \"give it back\". This allows simplifying to:</p>\n\n<pre><code>impl Foo {\n    fn bar(&amp;mut self, y: u32) -&gt; u32 {\n         match (self, y) {\n            (Foo::Foo1(a), b @ 5) =&gt; {\n                *a = b + 42;\n                b\n            }\n\n            (Foo::Foo2(a), b @ 5) =&gt; {\n                *a = b + 42;\n                *a * b\n            }\n\n            _ =&gt; y,\n        }\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>I would still say it is a safe operation, although the compiler may not be able to understand that</p>\n</blockquote>\n\n<p>With <a href=\"https://stackoverflow.com/q/50251487/155423\">non-lexical lifetimes</a>, the borrow checker becomes more intelligent. Your original code with an added explicit reborrow compiles:</p>\n\n<pre><code>#![feature(nll)]\n\nenum Foo {\n    Foo1(u32),\n    Foo2(u32), // changed so I don't have to figure out what casting you meant\n}\n\nimpl Foo {\n   fn bar(&amp;mut self, y: u32) -&gt; (u32, &amp;mut Foo) {\n        match (&amp;mut *self, y) {\n            (Foo::Foo1(a), b @ 5) =&gt; {\n                *a = b + 42;\n                (b, self)\n            }\n\n            (Foo::Foo2(a), b @ 5) =&gt; {\n                *a = b + 42;\n                (*a * b, self)\n            }\n\n            _ =&gt; (y, self),\n        }\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/48044295/155423\">Why does matching on a tuple of dereferenced references not work while dereferencing non-tuples does?</a></li>\n<li><a href=\"https://stackoverflow.com/q/36590549/155423\">What is the syntax to match on a reference to an enum?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28530338/155423\">How can I use match on a pair of borrowed values without copying them?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43370054/155423\">Is there any difference between matching on a reference to a pattern or a dereferenced value?</a></li>\n</ul>\n"}], "owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 409, "favorite_count": 0, "accepted_answer_id": 51329860, "answer_count": 1, "score": 0, "last_activity_date": 1531502917, "creation_date": 1531499585, "last_edit_date": 1531502566, "question_id": 51329458, "link": "https://stackoverflow.com/questions/51329458/how-can-i-pattern-match-a-tuple-containing-a-mut-enum-and-use-the-enum-in-the-m", "title": "How can I pattern match a tuple containing a &amp;mut enum and use the enum in the match arm?", "body": "<p>How can the code below be made to compile? It seems perfectly safe, but can't convince the compiler that it is.</p>\n\n<p>The version matching <code>*self</code> gives the error: <code>cannot move out of borrowed content</code> on the line of the match</p>\n\n<p>The version matching <code>self</code> gives: <code>use of moved value: *self</code></p>\n\n<pre><code>enum Foo {\n    Foo1(u32),\n    Foo2(i16),\n}\n\nimpl Foo {\n    fn bar(&amp;mut self, y: u32) -&gt; (u32, &amp;mut Foo) {\n        match (*self, y) {\n            (Foo::Foo1(ref mut a), b) if (b == 5) =&gt; {\n                print!(\"is five\");\n                *a = b + 42;\n\n                (b, self)\n            }\n\n            (Foo::Foo2(ref mut a), b) if (b == 5) =&gt; {\n                print!(\"is five\");\n                *a = (b + 42) as i16;\n\n                (*a * b, self)\n            }\n\n            _ =&gt; {\n                print!(\"is not five!\");\n                (y, self)\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I feel like I would need a match arm such as the following, but it doesn't seem to be valid syntax:</p>\n\n<pre><code>(ref mut f @ Foo::Foo1, b) if (b == 5) =&gt; {\n    print!(\"is five\");\n    f.0 = b + 42;\n    (b, f)\n} \n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0532]: expected unit struct/variant or constant, found tuple variant `Foo::Foo1`\n  --&gt; src/main.rs:24:30\n   |\n24 |                 (ref mut f @ Foo::Foo1, b) if (b == 5) =&gt; {\n   |                              ^^^^^^^^^ not a unit struct/variant or constant\n</code></pre>\n"}, {"tags": ["types", "compiler-errors", "rust", "traits"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531491858, "post_id": 51326622, "comment_id": 89629868, "body": "Even if you put the <code>#[rustc_on_unimplemented]</code> on the <code>T2</code> trait definition instead of the blanket impl, it still shows the &quot;T1 missing&quot; message. It <i>feels</i> like a bug, though you can see why it might do that. But I&#39;m not very familiar with this RFC - in fact I could only find the <a href=\"https://github.com/rust-lang/rust/issues/29628\" rel=\"nofollow noreferrer\">tracking issue</a> and not the RFC..."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1531492045, "post_id": 51326622, "comment_id": 89630002, "body": "<a href=\"https://github.com/rust-lang/rfcs/pull/2397\" rel=\"nofollow noreferrer\">Possibly related RFC</a>"}], "owner": {"reputation": 299, "user_id": 5530681, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/191a05a541d383f20c693e55c39fd67c?s=128&d=identicon&r=PG&f=1", "display_name": "corvus_192", "link": "https://stackoverflow.com/users/5530681/corvus-192"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 66, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1531492854, "creation_date": 1531489478, "last_edit_date": 1531492854, "question_id": 51326622, "link": "https://stackoverflow.com/questions/51326622/is-there-a-way-to-suppress-the-rustc-on-unimplemented-message-when-looking-for", "title": "Is there a way to suppress the `rustc_on_unimplemented` message when looking for implementations of another trait that has a blanket implementation?", "body": "<p>I have the following code:</p>\n\n<pre><code>#![feature(on_unimplemented)]\n\nuse std::marker::PhantomData;\n\nstruct S&lt;T&gt;(PhantomData&lt;T&gt;);\n\n#[rustc_on_unimplemented(message = \"T1 missing\")]\ntrait T1 {}\n\ntrait T2 {}\n\n#[rustc_on_unimplemented(message = \"T2 missing\")]\nimpl&lt;T: T1&gt; T2 for S&lt;T&gt; {}\n\nfn main() {\n    wants_t2(S::&lt;u8&gt;(PhantomData));\n}\n\nfn wants_t2&lt;T: T2&gt;(_: T) {}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=ffb23d4e2651db441e9cd0e096190040&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>When compiling this, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: T1 missing\n  --&gt; src/main.rs:16:5\n   |\n16 |     wants_t2(S::&lt;u8&gt;(PhantomData));\n   |     ^^^^^^^^ the trait `T1` is not implemented for `u8`\n   |\n   = note: required because of the requirements on the impl of `T2` for `S&lt;u8&gt;`\nnote: required by `wants_t2`\n  --&gt; src/main.rs:19:1\n   |\n19 | fn wants_t2&lt;T: T2&gt;(_: T) {}\n   | ^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Is there a way to suppress the <code>rustc_on_unimplemented</code> for <code>T1</code> when looking for implementations for <code>T2</code>? Somehow like <a href=\"https://github.com/rust-lang/rust/blob/c0955a34bcb17f0b31d7b86522a520ebe7fa93ac/src/libcore/ops/try.rs#L18\" rel=\"nofollow noreferrer\"><code>Try</code></a> filters for a method?</p>\n"}, {"tags": ["rust", "c-strings", "ffi"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1531470877, "post_id": 51320714, "comment_id": 89617329, "body": "Looks like it gets the job done. Why does it feel wrong?"}, {"owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1531472353, "post_id": 51320714, "comment_id": 89618173, "body": "@kazemakase, updated my question, because there might be issues converting <code>&amp;str</code> to <code>C</code> strings."}], "answers": [{"comments": [{"owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "edited": false, "score": 0, "creation_date": 1531477671, "post_id": 51321837, "comment_id": 89621202, "body": "Thanks for showing how <code>match CString::new</code> should be used in this context."}], "tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 8, "last_activity_date": 1531477433, "last_edit_date": 1531477433, "creation_date": 1531473749, "answer_id": 51321837, "question_id": 51320714, "link": "https://stackoverflow.com/questions/51320714/what-is-the-correct-way-to-fill-a-c-string-pointer-from-rust/51321837#51321837", "title": "What is the correct way to fill a C string pointer from Rust?", "body": "<p>Since C strings are not much more than 0-terminated byte arrays converting from Rust strings is very straight forward. Almost every valid Rust string is also a valid C string, but you have to make sure that the C string ends with a 0-character and that there are no 0-characters anywhere else in the string.</p>\n\n<p>Rust provides a type that takes care of the conversion: <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"noreferrer\"><code>CString</code></a>. </p>\n\n<p>If your input string was successfully converted to a <code>CString</code> you can simply copy the bytes without worrying about the details.</p>\n\n<pre><code>use std::slice;\nuse std::ffi::CString;\n\npub unsafe extern fn f(header_size: u32, header_ptr: *mut u8) -&gt; i32 {\n    let headers = \"abc\";\n    let c_headers = match CString::new(headers) {\n        Ok(cs) =&gt; cs,\n        Err(_) =&gt; return -1,  // failed to convert to C string\n    };\n    let bytes = c_headers.as_bytes_with_nul();\n\n    let header_bytes = slice::from_raw_parts_mut(header_ptr, header_size as usize);\n    header_bytes[..bytes.len()].copy_from_slice(bytes);\n\n    0  // success\n}\n\nfn main() {\n    let mut h = [1u8; 8];\n\n    unsafe {\n        f(h.len() as u32, h.as_mut_ptr());\n    }\n\n    println!(\"{:?}\", h);  // [97, 98, 99, 0, 1, 1, 1, 1]\n}\n</code></pre>\n\n<p>Note that I left out the length check for brevity. <code>header_bytes[..bytes.len()]</code> will panic if the buffer is too short. This is something you will want to avoid if <code>f</code> is called from C.</p>\n"}], "owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1409, "favorite_count": 1, "accepted_answer_id": 51321837, "answer_count": 1, "score": 5, "last_activity_date": 1531477433, "creation_date": 1531470009, "last_edit_date": 1531474868, "question_id": 51320714, "link": "https://stackoverflow.com/questions/51320714/what-is-the-correct-way-to-fill-a-c-string-pointer-from-rust", "title": "What is the correct way to fill a C string pointer from Rust?", "body": "<p>I have a FFI signature I need to implement:</p>\n\n<pre><code>pub unsafe extern fn f(header_size: u32, header_ptr: *mut u8) -&gt; i32;\n</code></pre>\n\n<p>A FFI caller is expected to provide a buffer <code>header_ptr</code> and the size of that buffer <code>header_size</code>. Rust is expected to fill a string into that buffer up to <code>header_size</code>, and return <code>0</code> if successful. The FFI caller is expected to interpret the string as ASCII.</p>\n\n<p>How can I fill that buffer the most idiomatic way, given I have a <code>headers: &amp;str</code> with the content I want to provide?</p>\n\n<p>Right now I have:</p>\n\n<pre><code>let header_bytes = slice::from_raw_parts_mut(header_ptr, header_size as usize);\n\nif header_bytes.len() &lt; headers.len() { return Errors::IndexOutOfBounds as i32; }\n\nfor (i, byte) in headers.as_bytes().iter().enumerate() {\n    header_bytes[i] = *byte;\n}\n</code></pre>\n\n<p>But that feels wrong.</p>\n\n<p><strong>Edit</strong>, I think this is not an exact duplicate to <a href=\"https://stackoverflow.com/questions/28219231/how-to-idiomatically-copy-a-slice\">this</a> because my question relates to strings, and IIRC there were special considerations when converting &amp;str to CStrings. </p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1531414154, "post_id": 51310731, "comment_id": 89598316, "body": "What is the problem that you are having with this code?"}, {"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531424957, "post_id": 51310731, "comment_id": 89603491, "body": "@PeterHall This code intentionally doesn&#39;t work. You can&#39;t duplicate the definitions of a struct."}], "answers": [{"comments": [{"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "edited": false, "score": 0, "creation_date": 1532113612, "post_id": 51313592, "comment_id": 89868295, "body": "This a solution, but I&#39;m not accepting it as the requirement of renaming the struct is too much of a pain point in a API."}], "tags": [], "owner": {"reputation": 96, "user_id": 4539151, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9zbKy.jpg?s=128&g=1", "display_name": "Josh Karns", "link": "https://stackoverflow.com/users/4539151/josh-karns"}, "is_accepted": false, "score": 6, "last_activity_date": 1543339222, "last_edit_date": 1543339222, "creation_date": 1531425755, "answer_id": 51313592, "question_id": 51310731, "link": "https://stackoverflow.com/questions/51310731/can-a-procedural-macro-derive-on-a-struct-add-other-derives/51313592#51313592", "title": "Can a procedural macro derive on a struct add other derives?", "body": "<p>With some sub-optimal work-arounds - yes!</p>\n\n<p>The first issue I encountered while implementing this was the duplicate definitions for the struct - having more than one definition just won't work. To get around this, I used a custom attribute that must be specified which will be the name of the struct in the generated code:</p>\n\n<pre><code>#![feature(custom_attribute)]\n#[macro_use] extern crate quote;\nextern crate proc_macro;\nextern crate proc_macro2;\nextern crate syn;\n\nuse syn::DeriveInput;\nuse proc_macro::TokenStream;\nuse proc_macro2::{Ident, Span};\nuse syn::{Attribute, Meta, Lit};\n\n#[proc_macro_derive(Combined)]\n#[attribute(ActualName)]\npub fn my_macro(input: TokenStream) -&gt; TokenStream {\n    let mut input: DeriveInput = syn::parse(input).unwrap();\n\n    for attr in input.attrs.iter().map(Attribute::interpret_meta).filter(|x| x.is_some()).map(|x| x.unwrap()) {\n        if &amp;attr.name().to_string()[..] != \"ActualName\" { continue }\n        let name;\n        match attr {\n            Meta::Word(ident) =&gt; { panic!(\"ActualName must be a name-value pair (i.e. #[ActualName = \\\"hey\\\"])\"); },\n            Meta::List(_) =&gt; { panic!(\"ActualName must be a name-value pair (i.e. #[ActualName = \\\"hey\\\"])\"); },\n            Meta::NameValue(meta_name_value) =&gt; {\n                match meta_name_value.lit {\n                    Lit::Str(lit_str) =&gt; { name = lit_str.value(); },\n                    _ =&gt; { panic!(\"ActualName must be a string\"); }\n                };\n            }\n        };\n        input.ident = Ident::new(&amp;name[..], Span::call_site());\n        let expanded = quote! {\n            #[derive(Clone, Debug)]\n            #input\n        };\n\n        return expanded.into()  \n    }\n    panic!(\"You must specify the ActualName attribute (i.e. #[Derive(Combined),         ActualName = \\\"...\\\"]\")\n\n}\n</code></pre>\n\n<p>After putting this code in your derive crate, the following sample of code will work:</p>\n\n<pre><code>#![feature(custom_attribute)]\n#[macro_use]\nextern crate derive_combined;\n\n#[derive(Combined)]\n#[ActualName = \"Stuff\"]\nstruct Stuff_ {\n    pub a: i32,\n    pub b: i64,\n}\n\nfn main() {\n    println!(\"{:?}\", Stuff { a: 10, b: 10 }.clone());\n}\n</code></pre>\n\n<p>If you have any questions about implementing this, <a href=\"https://doc.rust-lang.org/book/first-edition/procedural-macros.html\" rel=\"nofollow noreferrer\">this</a> is the tutorial I followed. If that doesn't help feel free to ask.</p>\n"}, {"tags": [], "owner": {"reputation": 183, "user_id": 5114106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f77c14990b0d85b695f1ec0134140ef2?s=128&d=identicon&r=PG", "display_name": "Technocoder", "link": "https://stackoverflow.com/users/5114106/technocoder"}, "is_accepted": true, "score": 5, "last_activity_date": 1543302951, "creation_date": 1543302951, "answer_id": 53494512, "question_id": 51310731, "link": "https://stackoverflow.com/questions/51310731/can-a-procedural-macro-derive-on-a-struct-add-other-derives/53494512#53494512", "title": "Can a procedural macro derive on a struct add other derives?", "body": "<p>While this cannot be done conveniently with <code>proc_macro_derive</code> it can be done with <code>proc_macro_attribute</code> and seeing as the other answer already uses a derive attribute this solution may be better for your use case:</p>\n\n<pre><code>extern crate proc_macro;\nextern crate proc_macro2;\n#[macro_use]\nextern crate quote;\nextern crate syn;\n\nuse proc_macro2::TokenStream;\n\n#[proc_macro_attribute]\npub fn add_derive(_metadata: proc_macro::TokenStream, input: proc_macro::TokenStream)\n                 -&gt; proc_macro::TokenStream {\n    let input: TokenStream = input.into();\n    let output = quote! {\n        #[derive(Debug, Serialize, Deserialize, etc, ...)]\n        #input\n    };\n    output.into()\n}\n</code></pre>\n\n<p>Then to use this macro:</p>\n\n<pre><code>#[add_derive]   \npub struct TestStruct { ... }\n</code></pre>\n\n<p>Notably, attribute macros <em>replace</em> token streams whereas derive macros are suited for <em>appending</em> to token streams: <a href=\"https://doc.rust-lang.org/reference/procedural-macros.html#attribute-macros\" rel=\"noreferrer\">Rust Reference: Procedural Macros</a></p>\n"}], "owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1380, "favorite_count": 1, "accepted_answer_id": 53494512, "answer_count": 2, "score": 4, "last_activity_date": 1543339222, "creation_date": 1531413627, "question_id": 51310731, "link": "https://stackoverflow.com/questions/51310731/can-a-procedural-macro-derive-on-a-struct-add-other-derives", "title": "Can a procedural macro derive on a struct add other derives?", "body": "<p>Is it possible for a procedural macro derive to add derives from other crates to the struct that it is derived upon?</p>\n\n<h3>lib.rs</h3>\n\n<pre><code>#[derive(Combined)]\nstruct Foo;\n</code></pre>\n\n<h2>derive_combined.rs</h2>\n\n<pre><code>#[macro_use] extern crate quote;\nextern crate proc_macro2;\nextern crate proc_macro;\nextern crate syn;\n\nuse proc_macro::TokenStream;\n\n#[proc_macro_derive(Combined)]\npub fn my_macro(input: TokenStream) -&gt; TokenStream {\n    let input: DeriveInput = syn::parse(input).unwrap();\n    let ident = input.ident;\n    let expanded = quote! {\n        #[derive(Clone, Debug)]\n        struct #ident;\n    };\n\n    expanded.into()\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531388517, "post_id": 51301677, "comment_id": 89581268, "body": "Please include enough code that someone can easily run it and see the problem. See <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531388901, "post_id": 51301677, "comment_id": 89581523, "body": "I have updated the post with a link to the code"}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 2, "creation_date": 1531401318, "post_id": 51301677, "comment_id": 89589924, "body": "Duplicate <a href=\"https://stackoverflow.com/a/32300133/5138648\">stackoverflow.com/a/32300133/5138648</a>"}], "owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 1, "closed_date": 1531401635, "answer_count": 0, "score": 0, "last_activity_date": 1531388876, "creation_date": 1531386978, "last_edit_date": 1531388876, "question_id": 51301677, "link": "https://stackoverflow.com/questions/51301677/misunderstanding-about-why-a-borrowed-value-does-not-live-long-enough", "closed_reason": "Duplicate", "title": "Misunderstanding about why a borrowed value does not live long enough", "body": "<p>I am facing an error in Rust and I do not understand why I face it.</p>\n\n<p>I have a custom <code>Reader</code> object that owns a <code>Vec</code> of some <code>IFD</code> objects and one <code>HashMap</code> whose objects are references to some <code>IFDEntry</code> elements owned by the <code>IFD</code> elements inside the first vector:</p>\n\n<pre><code>// `IFD` owns some `IFDEntry`\npub struct IFD {\n    pub entries: Vec&lt;IFDEntry&gt;,\n    pub next: usize,\n}\n\npub struct Reader&lt;'a, R&gt; {\n    inner: R,\n    order: Endian,\n    ifds: Vec&lt;IFD&gt;, // Reader owns the list of `IFD` here\n    entries_map: HashMap&lt;Tag, &amp;'a IFDEntry&gt;,\n}\n</code></pre>\n\n<p>This object defines a <code>new</code> function charging of filling those elements accordin to some  <code>std::io::BufRead</code> element. At the end of this function :</p>\n\n<pre><code>let mut map = HashMap::&lt;Tag, &amp;IFDEntry&gt;::new();\n\n// ifds owns the differents values here\nlet ifds: Vec&lt;IFD&gt; = IFDIterator::new(&amp;mut reader, order, offset as usize).collect();\n\n// We fill the map with references\nfor ifd in &amp;ifds {\n    for entry in &amp;ifd.entries {\n        map.insert(entry.tag, entry);\n    }\n}\n\n// Move from both `map` and `ifds` inside the `Reader`\nOk(Reader {\n    inner: reader,\n    order: order,\n    ifds: ifds,\n    entries_map: map,\n})\n</code></pre>\n\n<p>The compiler complains that <code>ifds</code> does not live long enough (line 68 corresponds to the return of <code>Ok(Reader)</code>):</p>\n\n<pre><code>error[E0597]: `ifds` does not live long enough\n  --&gt; src/reader.rs:56:21\n   |\n56 |         for ifd in &amp;ifds {\n   |                     ^^^^ borrowed value does not live long enough\n...\n68 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 16:6...\n</code></pre>\n\n<p>From my understanding, <code>ifds</code> is moved inside <code>Reader</code> at the end of the function. So why is it considered not living long enough?</p>\n\n<p>The whole file can be found here: <a href=\"https://github.com/yageek/tiff/blob/develop/src/reader.rs\" rel=\"nofollow noreferrer\">https://github.com/yageek/tiff/blob/develop/src/reader.rs</a></p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1531388244, "post_id": 51301170, "comment_id": 89581070, "body": "This can&#39;t be done in Rust right now."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1531463729, "post_id": 51301170, "comment_id": 89613715, "body": "If you want to avoid duplicating a complex body function, you can probably get somewhere by fully implementing only the immutable version, then having the mutable version call the immutable one with an added unsafe cast to restore mutability on the returned reference."}, {"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1531494218, "post_id": 51301170, "comment_id": 89631412, "body": "@Jmb, how would you go to do that? <code>std::mem::transmute::&lt;&amp;T, &amp;mut T&gt;(value)</code> does not compile: <code>error: mutating transmuted &amp;mut T from &amp;T may cause undefined behavior</code>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1531722642, "post_id": 51301170, "comment_id": 89683759, "body": "@&#193;kosVandra I thought <code>transmute</code> would do it directly. Since it doesn&#39;t, you can get there with raw pointers: <code>transmute (value as *const T as *mut T)</code> works."}], "owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "closed_date": 1531401689, "answer_count": 0, "score": 5, "last_activity_date": 1531399113, "creation_date": 1531385456, "last_edit_date": 1531396342, "question_id": 51301170, "link": "https://stackoverflow.com/questions/51301170/generalizing-over-pointer-mutability", "closed_reason": "Duplicate", "title": "Generalizing over pointer mutability", "body": "<p>My use case is a bit more complex than this, but I'm trying to simplify the issue with this abstract example.</p>\n\n<p>Say I have a structure:</p>\n\n<pre><code>struct Foo {\n    bar: u32,\n    baz: u32,\n    ....\n}\n</code></pre>\n\n<p>How can I write a <code>get_bar</code> function which can generalize over the mutability of the <code>self</code> parameter?</p>\n\n<p>Pseudocode:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>impl Foo {\n    fn&lt;?PT&gt; getBar(&amp;PT self) -&gt; &amp;PT u32 where PT = {mut immut} {\n        &amp;PT self.bar\n    }\n}\n</code></pre>\n\n<p>If called with a mutable pointer, it would return a mutble pointer to the inner field, if called with an immutable, it would return an immutable.</p>\n\n<p>My goal is to avoid having to define a nonmut and a mut version of each function, by copy pasting code basically:</p>\n\n<pre><code>impl Foo {\n    fn get_bar(&amp;self) -&gt; &amp;u32 { &amp;self.bar }\n    fn get_bar_mut(&amp;mut self) -&gt; &amp;mut u32 { &amp;mut self.bar }\n}\n</code></pre>\n\n<p>If the body of the function is more complex than this (my case is a recursive function), it gets pretty nasty, and there is a lot of code that is being copy&amp;pasted, something that should be avoided.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1531402262, "creation_date": 1531402262, "answer_id": 51307007, "question_id": 51297357, "link": "https://stackoverflow.com/questions/51297357/how-do-i-specify-that-a-workspace-member-should-only-be-built-on-specific-platfo/51307007#51307007", "title": "How do I specify that a workspace member should only be built on specific platforms?", "body": "<p>There is <a href=\"https://github.com/rust-lang/cargo/issues/5220\" rel=\"nofollow noreferrer\">no support in Cargo for this yet</a>.</p>\n\n<p>You'll need to annotate all the methods, modules, etc. in <code>crate-a</code> with appropriate <code>#![cfg(target_os)]</code> attributes for now.</p>\n"}], "owner": {"reputation": 6960, "user_id": 1611307, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/aac7f9a85388beb45df5ee4366240473?s=128&d=identicon&r=PG", "display_name": "ssb", "link": "https://stackoverflow.com/users/1611307/ssb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 51307007, "answer_count": 1, "score": 2, "last_activity_date": 1531402262, "creation_date": 1531370005, "last_edit_date": 1531402041, "question_id": 51297357, "link": "https://stackoverflow.com/questions/51297357/how-do-i-specify-that-a-workspace-member-should-only-be-built-on-specific-platfo", "title": "How do I specify that a workspace member should only be built on specific platforms?", "body": "<p>I have a Cargo project with several workspaces:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[workspace]\nmembers = [\n    \"crate-a\", # Compiles on Linux\n    \"crate-b\", # Compiles on Windows, Linux, Mac\n]\n</code></pre>\n\n<p>How do I ensure that <code>crate-a</code> is disabled when building the project (i.e. running <code>cargo build</code>) on a Windows or Mac system?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 0, "creation_date": 1531372084, "post_id": 51297055, "comment_id": 89572371, "body": "Could you specify what the correct output would look like on Windows?"}], "answers": [{"comments": [{"owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "edited": false, "score": 0, "creation_date": 1531467582, "post_id": 51298474, "comment_id": 89615629, "body": "The downside I see to this is that canonicalize tends to insert \\\\?\\, which has caused me problems in the past. However, in spite of this, I think this does address the issue (not a critique of the answer, more of things that don&#39;t support canonicalize)."}], "tags": [], "owner": {"reputation": 42, "user_id": 4479201, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bc8d93c06a47f2314e207225a71c9d?s=128&d=identicon&r=PG&f=1", "display_name": "wolandr", "link": "https://stackoverflow.com/users/4479201/wolandr"}, "is_accepted": true, "score": 2, "last_activity_date": 1531376211, "creation_date": 1531376211, "answer_id": 51298474, "question_id": 51297055, "link": "https://stackoverflow.com/questions/51297055/whats-the-correct-way-to-handle-a-path-that-could-either-be-a-drive-letter-or-a/51298474#51298474", "title": "What&#39;s the correct way to handle a path that could either be a drive letter or a path that gets joined to something else?", "body": "<p>Firstly, note that when you specify drive letter without trailing slash symbol, Windows API interpret it as a relative path to the current directory on the drive. I.e. <code>P:</code> and <code>P:\\</code> could reference to different locations, and <code>P:file.txt</code> is a valid path and means <code>P:\\current\\dir\\file.txt</code>. You could verify it by change directory and call from command prompt <code>dir P:</code> and <code>dir P:\\</code>.</p>\n\n<p>If you are sure that you want to interpret \"P:\" as a root path then you probably should manually detect it and add root slash, but I believe it is a bad practice. </p>\n\n<p>For strictly interpret path prefix and build an absolute path prefix you could use <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.canonicalize\" rel=\"nofollow noreferrer\">Path::canonicalize()</a> method, but please keep in mind that it works only for actually existent drive/path in the target OS.</p>\n\n<pre><code>use std::path::{Path, PathBuf};\n\nfn canonical_join&lt;P: AsRef&lt;Path&gt;&gt;(a: P, b: P) -&gt; PathBuf {\n    let a = a.as_ref();\n    a.canonicalize()\n    .unwrap_or(PathBuf::from(a))\n    .join(b)\n}\n\nfn main() {\n    println!(\"{}\", canonical_join(\"C:\", \"dir\\\\file.ext\").display());\n    println!(\"{}\", canonical_join(\"C:\\\\\", \"dir\\\\file.ext\").display());\n    println!(\"{}\", canonical_join(\"C:/\", \"dir\\\\file.ext\").display());\n}\n</code></pre>\n"}], "owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 51298474, "answer_count": 1, "score": 0, "last_activity_date": 1531401847, "creation_date": 1531367753, "last_edit_date": 1531401847, "question_id": 51297055, "link": "https://stackoverflow.com/questions/51297055/whats-the-correct-way-to-handle-a-path-that-could-either-be-a-drive-letter-or-a", "title": "What&#39;s the correct way to handle a path that could either be a drive letter or a path that gets joined to something else?", "body": "<p>Using the following program:</p>\n\n<pre><code>use std::path::Path;\n\nfn main() {\n    println!(\"{:?}\", Path::new(\"P:\").join(\"A_B_C\\\\D\\\\E\\\\F\\\\G.hij\"));\n}\n</code></pre>\n\n<p>POSIX will give you:</p>\n\n<pre><code>\"P:/A_B_C\\\\D\\\\E\\\\F\\\\G.hij\"\n</code></pre>\n\n<p>But Windows will give you:</p>\n\n<pre><code>\"P:A_B_C\\\\D\\\\E\\\\F\\\\G.hij\"\n</code></pre>\n\n<p>The latter isn't considered to be the intended path, at least by <code>std::fs::copy</code>.</p>\n\n<p>For the same of an example:</p>\n\n<pre><code>fn my_function(p: &amp;Path) -&gt; PathBuf {\n    p.join(\"Temp\")\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime", "lexical-scope", "borrowing"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1531357717, "post_id": 51295816, "comment_id": 89569509, "body": "<a href=\"https://play.rust-lang.org/?gist=ceafedff06064ea2630de9adf86433ae&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Works with non-lexical lifetimes enabled</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1531358243, "post_id": 51295816, "comment_id": 89569594, "body": "I feel like there is a close duplicate for this but I&#39;m not finding any good ones. <a href=\"https://stackoverflow.com/questions/45713314/is-it-possible-to-have-a-struct-which-contains-a-reference-to-a-value-which-has\">Is it possible to have a struct which contains a reference to a value which has a shorter lifetime than the struct?</a> is similar."}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1531362789, "post_id": 51295816, "comment_id": 89570436, "body": "Awesome @trentcl I had not heard of non-lexical lifetimes before now. I have only been doing Rust for about two weeks.  I would love to know more about what exactly about lexical lifetimes causes this error, and what property of non-lexical lifetimes fixes it. It still does not make sense to me why the initialization order of p and r has anything to do with values that borrow p."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1531363752, "post_id": 51295816, "comment_id": 89570619, "body": "See also: <a href=\"https://stackoverflow.com/q/29861388/155423\">When is it useful to define multiple lifetimes in a struct?</a>."}], "answers": [{"tags": [], "owner": {"reputation": 25, "user_id": 2568161, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f3aa92d66724ac129e10cdcf71f0eea?s=128&d=identicon&r=PG", "display_name": "user2568161", "link": "https://stackoverflow.com/users/2568161/user2568161"}, "is_accepted": false, "score": 1, "last_activity_date": 1531373723, "creation_date": 1531373723, "answer_id": 51297978, "question_id": 51295816, "link": "https://stackoverflow.com/questions/51295816/why-does-this-value-not-live-long-enough/51297978#51297978", "title": "Why does this value not live long enough?", "body": "<p><a href=\"https://play.rust-lang.org/?gist=48362cfc5ee81ff07628f9b60477c4cb&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=48362cfc5ee81ff07628f9b60477c4cb&amp;version=nightly&amp;mode=debug&amp;edition=2015</a></p>\n\n<p>this is another way to fix it. The lifetime of 'power' and 'name' in your struct is the same (&amp;'a). So when 'power' goes out of scope, the compiler will think that 'name' is also out of scope. So you need to define another lifetime for your struct</p>\n"}, {"comments": [{"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "edited": false, "score": 0, "creation_date": 1531443600, "post_id": 51298794, "comment_id": 89608959, "body": "Thanks, Jmb. This is useful. I feel like what you said makes sense."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1531377446, "creation_date": 1531377446, "answer_id": 51298794, "question_id": 51295816, "link": "https://stackoverflow.com/questions/51295816/why-does-this-value-not-live-long-enough/51298794#51298794", "title": "Why does this value not live long enough?", "body": "<p>This is only a guess, but here is what I think happens:</p>\n\n<ul>\n<li>When you declared <code>Superhero</code>, you stated that <code>name</code> and <code>power</code> should have the same lifetime.</li>\n<li>The type for <code>r</code> is inferred as <code>&amp;String</code> (or maybe <code>&amp;str</code>, the point is that <code>r</code> is a reference). With lexical lifetimes, <code>r</code> must live until the end of the block in which it is declared, so until line 14.</li>\n<li>Since you affect <code>hero.name</code> to <code>r</code>, <code>hero.name</code> should live at least as long as <code>r</code>, therefore <code>hero.name</code> should live until line 14.</li>\n<li>Since <code>hero.name</code> and <code>hero.power</code> should have the same lifetime per the struct declaration, <code>hero.power</code> should also live until line 14.</li>\n<li>Since <code>hero.power</code> borrows <code>p</code>, <code>p</code> should live until line 14, but it only lives until the end of the block in which it is declared (line 13).</li>\n</ul>\n\n<p>The reason it works with non-lexical lifetimes is because the compiler notices that you don't use <code>r</code> after line 12 and is therefore able to shorten the lifetimes accordingly. Note that <a href=\"https://play.rust-lang.org/?gist=eb7d86734b41a69b23f14164311c9049&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">it doesn't work even with nll if you use <code>r</code> after the closing brace of line 13</a>.</p>\n"}], "owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 163, "favorite_count": 0, "accepted_answer_id": 51298794, "answer_count": 2, "score": 5, "last_activity_date": 1531377446, "creation_date": 1531355407, "last_edit_date": 1531363608, "question_id": 51295816, "link": "https://stackoverflow.com/questions/51295816/why-does-this-value-not-live-long-enough", "title": "Why does this value not live long enough?", "body": "<p>I don't understand why I am getting the following compiler error from this code: </p>\n\n<pre><code>struct Superhero&lt;'a&gt; { name: &amp;'a String, power: &amp;'a i32 } //  1    \n                                                          //  2    \nfn main() {                                               //  3    \n    let n = \"Bruce Wayne\".to_string();                    //  4    \n    let r;                                                //  5    \n    {                                                     //  6    \n        let p = 98;                                       //  7    \n        {                                                 //  8    \n            let hero = Superhero{ name: &amp;n, power: &amp;p };  //  9    \n            r = hero.name;                                // 10    \n        }                                                 // 11    \n        println!(\"{}\", r);                                // 12    \n    }                                                     // 13    \n}                                                         // 14    \n</code></pre>\n\n<p>Compiler Error: <code>rustc 1.27.1 (5f2b325f6 2018-07-07)</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `p` does not live long enough\n  --&gt; src/main.rs:9:53\n   |\n9  |             let hero = Superhero{ name: &amp;n, power: &amp;p };\n   |                                                     ^ borrowed value does not live long enough\n...\n13 |     }\n   |     - `p` dropped here while still borrowed\n14 | }\n   | - borrowed value needs to live until here\n</code></pre>\n\n<p>Here is what I thought this code would do, line by line. There is something wrong with one or more of these lines, because this code does not compile.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> 4: Initialize name: String to \"Bruce Wayne\".to_string();\n 5: Declare r to be initialized in a different scope\n 6: Begin a new scope (A)\n 7: Initialize p to 98\n 8: Begin a new scope (B)\n 9: Initialize hero: Superhero to a new struct\n       hero.name refers to the variable{n},\n       hero.power refers to the variable{p}  \n10: Copy a reference to the variable{n}, \n       since reference types are copy, both hero.name and r are distinct references to the variable{n}.\n11: End scope (B): hero and the two references it owns {hero.name, hero.power} are dropped.\n12: Print the value of the variable{r}: Should print \"Bruce Wayne\"\n13: End scope (A): the variable{p} is dropped.\n14: End scope for main. The variables {n, r} are dropped.\n</code></pre>\n\n<p>Why does the compiler error say that something is still borrowing <code>p</code> on line 13? Shouldn't <code>hero</code> (and subsequently <code>hero.power</code>) have been dropped on line 11? There should be nothing referring to <code>p</code> at this point. </p>\n\n<p>Curiously, changing the order in which the values (<code>p</code> and <code>r</code>) are initialized  fixes the issue, and I have no idea why. </p>\n\n<p>Ways to fix:</p>\n\n<ol>\n<li>Move line 7 <code>let p = 90;</code> between line 4 and line 5</li>\n<li>Move line 5 <code>let r;</code> between line 7 and line 8</li>\n</ol>\n\n<p>In both of these cases, simply declaring <code>r</code> AFTER <code>p</code> ensures that nothing is still \"borrowing\" <code>p</code> when it is dropped. This makes no sense to me at all, because I feel like <code>r</code> has nothing at all to do with <code>p</code>, or with anything that may be borrowing <code>p</code>.  </p>\n\n<p>This code <a href=\"https://play.rust-lang.org/?gist=ceafedff06064ea2630de9adf86433ae&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">runs with non-lexical lifetimes enabled</a>.</p>\n\n<p>What property of lexical lifetimes causes this to not compile, and what about non-lexical lifetimes fixes this issue? </p>\n"}]