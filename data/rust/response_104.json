[{"tags": ["debian", "rust", "visual-studio-code"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1483564911, "post_id": 41473255, "comment_id": 70152611, "body": "<i>a big advantage of Debian is the centralized package manager to update everything with one command</i> \u2014 only if that centralized package manager has everything you need ^_^"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1483631507, "post_id": 41473376, "comment_id": 70183848, "body": "Thank you for your detailed answer. It&#39;s a shame that <code>rust-src</code> is not in the Debian repository."}], "tags": [], "owner": {"reputation": 1217, "user_id": 881195, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/n74Mq.jpg?s=128&g=1", "display_name": "Tupshin Harper", "link": "https://stackoverflow.com/users/881195/tupshin-harper"}, "is_accepted": true, "score": 3, "last_activity_date": 1483565025, "last_edit_date": 1483565025, "creation_date": 1483564594, "answer_id": 41473376, "question_id": 41473255, "link": "https://stackoverflow.com/questions/41473255/how-to-properly-set-up-a-rust-environment-in-vscode-on-debian/41473376#41473376", "title": "How to properly set up a Rust environment in VSCode on Debian?", "body": "<p>There is ongoing work to make Rust be a first class installable citizen on Debian systems, but as far as I know, we are not there yet. For the time being, I would recommend apt-get uninstalling rustc, followed by:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>curl https://sh.rustup.rs -sSf | sh\n</code></pre>\n\n<p>as suggested by <a href=\"https://www.rust-lang.org/en-US/install.html\" rel=\"nofollow noreferrer\">the Rust installation guides</a>.</p>\n\n<p>I hate that approach to installation as much as the next guy, and recommend that you look at that shell script without blindly installing it, but ultimately you are trusting that upstream is doing the right thing. </p>\n\n<p>In this case, at least, neither that shell script nor rustup require root access, so the default is just to install it all into <code>~/.rustup/</code>.</p>\n\n<p>While I look forward to using apt to install Rust in the future on my own Debian laptop, I think doing anything other than the above will be swimming too much against the current recommended approach.</p>\n\n<p>It's also worth nothing that the shell script installs <code>rustup</code>. <code>rustup</code> installs the main components, including <code>rustc</code> and <code>cargo</code>. What might not be obvious is that cargo can then install additional tools written in Rust, including racer:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo install racer\ncargo install rustfmt\ncargo install clippy\n</code></pre>\n\n<p>to name a few.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1387, "favorite_count": 0, "accepted_answer_id": 41473376, "answer_count": 1, "score": 2, "last_activity_date": 1483565025, "creation_date": 1483564028, "last_edit_date": 1483564884, "question_id": 41473255, "link": "https://stackoverflow.com/questions/41473255/how-to-properly-set-up-a-rust-environment-in-vscode-on-debian", "title": "How to properly set up a Rust environment in VSCode on Debian?", "body": "<p>I tried to set up VSCode to develop in Rust in Debian. My Rust installation is from the Debian repository, installed with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code># aptitude install rustc\n</code></pre>\n\n<p>I installed the VSCode plugin <code>Rustycode</code> for the autocompletion but then came the problems: <code>racer</code> needs the Rust sources:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ racer complete std::\nRUST_SRC_PATH environment variable must be set to point to the src directory of a\nrust checkout. E.g. \"/home/foouser/src/rust/src\"\n</code></pre>\n\n<p>I could not find the way to install the sources from the Debian repository, and I think this is the best practice because if <code>rustc</code> comes from the Debian repository and the sources from github, there could be some differences (different versions) between them.</p>\n\n<p>I read something about <code>rustup</code>, I do not really understand its purpose, but I think it is like a package manager for Rust. I do not like this idea because a big advantage of Debian is the centralized package manager to update everything with one command.</p>\n"}, {"tags": ["gdb", "rust", "visual-studio-code"], "comments": [{"owner": {"reputation": 29251, "user_id": 72178, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/M3OuM.png?s=128&g=1", "display_name": "ks1322", "link": "https://stackoverflow.com/users/72178/ks1322"}, "edited": false, "score": 0, "creation_date": 1483562468, "post_id": 41471950, "comment_id": 70151445, "body": "What is gdb version you are using ?"}, {"owner": {"reputation": 8814, "user_id": 250849, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/c055ab763c14578ea61c06520fd89559?s=128&d=identicon&r=PG", "display_name": "vmg", "link": "https://stackoverflow.com/users/250849/vmg"}, "reply_to_user": {"reputation": 29251, "user_id": 72178, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/M3OuM.png?s=128&g=1", "display_name": "ks1322", "link": "https://stackoverflow.com/users/72178/ks1322"}, "edited": false, "score": 0, "creation_date": 1483584349, "post_id": 41471950, "comment_id": 70159018, "body": "GNU gdb (GDB) 7.9.1"}, {"owner": {"reputation": 1740, "user_id": 1439313, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58aaf07bdb0641754eb3e3032d78f066?s=128&d=identicon&r=PG", "display_name": "dinesh ygv", "link": "https://stackoverflow.com/users/1439313/dinesh-ygv"}, "edited": false, "score": 0, "creation_date": 1596373578, "post_id": 41471950, "comment_id": 111785301, "body": "I had a similar issue and I found that if I have hyphens in my project name (E.g. &quot;abc-def&quot;), then the code will run, but the breakpoints won&#39;t hit."}], "answers": [{"comments": [{"owner": {"reputation": 3008, "user_id": 78804, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/1506664e7181bebc6fd6f0e3b91dd2c7?s=128&d=identicon&r=PG", "display_name": "Kevin Doyon", "link": "https://stackoverflow.com/users/78804/kevin-doyon"}, "edited": false, "score": 1, "creation_date": 1484414294, "post_id": 41534847, "comment_id": 70504189, "body": "And if you&#39;re wondering why it still doesn&#39;t work like I was, don&#39;t forget to re-build!"}, {"owner": {"reputation": 588, "user_id": 781796, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b91d2516a10b51dc2e38a53834c46a76?s=128&d=identicon&r=PG", "display_name": "dschaeffer", "link": "https://stackoverflow.com/users/781796/dschaeffer"}, "edited": false, "score": 0, "creation_date": 1486142293, "post_id": 41534847, "comment_id": 71233623, "body": "On Windows msvc is the default for rustup <a href=\"https://github.com/rust-lang-nursery/rustup.rs#working-with-rust-on-windows\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/&hellip;</a>"}], "tags": [], "owner": {"reputation": 157, "user_id": 3548976, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Vvnt1.jpg?s=128&g=1", "display_name": "VelocityRa", "link": "https://stackoverflow.com/users/3548976/velocityra"}, "is_accepted": true, "score": 6, "last_activity_date": 1484494877, "last_edit_date": 1484494877, "creation_date": 1483892522, "answer_id": 41534847, "question_id": 41471950, "link": "https://stackoverflow.com/questions/41471950/breakpoints-not-hit-when-debugging-rust-with-gdb-in-visual-studio-code/41534847#41534847", "title": "Breakpoints not hit when debugging Rust with gdb in Visual Studio Code", "body": "<p>I was having the same problem until I realized I was using an <code>msvc</code> build of <code>rustc</code>.</p>\n\n<p><strong>GDB is only supposed to work with <code>gnu</code> builds</strong>, so if you use rustup, the solution is as simple as <code>rustup default stable</code> (or beta/nightly). GNU is default, for msvc you would need to do <code>stable-msvc</code>).</p>\n\n<p>If you don't want to use rustup you should just re-install a gnu build of Rust manually.</p>\n\n<p>Edit: As noted in a comment below, don't forget to re-build!</p>\n"}, {"tags": [], "owner": {"reputation": 5029, "user_id": 273924, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/50c78d9d967c8a192aae64a618e521ab?s=128&d=identicon&r=PG", "display_name": "locka", "link": "https://stackoverflow.com/users/273924/locka"}, "is_accepted": false, "score": 2, "last_activity_date": 1498979859, "creation_date": 1498979859, "answer_id": 44868359, "question_id": 41471950, "link": "https://stackoverflow.com/questions/41471950/breakpoints-not-hit-when-debugging-rust-with-gdb-in-visual-studio-code/44868359#44868359", "title": "Breakpoints not hit when debugging Rust with gdb in Visual Studio Code", "body": "<p>I had similar problems with breakpoints and found that adding this line to the settings.json fixed it:</p>\n\n<pre><code>{\n    \"debug.allowBreakpointsEverywhere\": true\n}\n</code></pre>\n\n<p>I am also using Microsoft's C/C++ Debugger plugin, not the native one. It still works for GDB.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 13639913, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/--cCn7nOqSAI/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucmPH_mqjdj3NlFQPQzCoP7xEFrH_Q/photo.jpg?sz=128", "display_name": "Freigus", "link": "https://stackoverflow.com/users/13639913/freigus"}, "is_accepted": false, "score": 0, "last_activity_date": 1617252665, "creation_date": 1617252665, "answer_id": 66898592, "question_id": 41471950, "link": "https://stackoverflow.com/questions/41471950/breakpoints-not-hit-when-debugging-rust-with-gdb-in-visual-studio-code/66898592#66898592", "title": "Breakpoints not hit when debugging Rust with gdb in Visual Studio Code", "body": "<p>As it was said before - <code>gdb</code> debugger doesn't work well with <code>msvc</code> build of rustc.\nRustup defaults to <code>msvc</code> build on Windows right now.\n<br>To switch your default rustc build to <code>gnu</code> you have to run this command:</p>\n<pre><code>rustup default stable-gnu\n</code></pre>\n"}], "owner": {"reputation": 8814, "user_id": 250849, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/c055ab763c14578ea61c06520fd89559?s=128&d=identicon&r=PG", "display_name": "vmg", "link": "https://stackoverflow.com/users/250849/vmg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2277, "favorite_count": 0, "accepted_answer_id": 41534847, "answer_count": 3, "score": 5, "last_activity_date": 1617252665, "creation_date": 1483558711, "last_edit_date": 1483562068, "question_id": 41471950, "link": "https://stackoverflow.com/questions/41471950/breakpoints-not-hit-when-debugging-rust-with-gdb-in-visual-studio-code", "title": "Breakpoints not hit when debugging Rust with gdb in Visual Studio Code", "body": "<p>I started learning Rust, and I want to set up debugging in Visual Studio Code, but can't get breakpoints working. I use the Native Debug &amp; RustyCode extensions for VS Code.</p>\n\n<p>Here is my launch file:</p>\n\n<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug\",\n            \"type\": \"gdb\",\n            \"request\": \"launch\",\n            \"target\": \"target/debug/test\",\n            \"cwd\": \"${workspaceRoot}\"\n        }\n    ]\n}\n</code></pre>\n\n<p>But when I run this configuration, breakpoints do not get hit. I see in the debug console that the debugger started and the app ran fine, but there is a warning message \"No Symbols loaded\":</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>No symbol table is loaded.  Use the \"file\" command.\nNo symbol table is loaded.  Use the \"file\" command.\nRunning executable\n[New Thread 32168.0x81e0]\n[New Thread 32168.0x3360]\n[New Thread 32168.0x61b8]\n[New Thread 32168.0x8040]\nThe program \"+ + * - /\" calculates the value 1\n[Thread 32168.0x61b8 exited with code 0]\n[Thread 32168.0x3360 exited with code 0]\n[Thread 32168.0x8040 exited with code 0]\n[Inferior 1 (process 32168) exited normally]\n</code></pre>\n\n<p>Here is the <a href=\"https://github.com/thecoderok/rust-playground\" rel=\"noreferrer\">source of the app I am using</a>. How can I make breakpoints work?</p>\n"}, {"tags": ["utf-8", "rust"], "comments": [{"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1483551037, "post_id": 41469686, "comment_id": 70145479, "body": "as I have already said in a <a href=\"http://stackoverflow.com/a/41468380/1362755\">different question</a>, 3rd party crates provide such low-level functionality."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 2, "creation_date": 1483802905, "post_id": 41469686, "comment_id": 70251885, "body": "Stating <i>&quot;there is a crate for that&quot;</i> with a link to some search results - isn&#39;t answering the question. In this case I&#39;d rather use stdlib if thats possible. if not - then the answer to this question is simply &quot;no&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 3, "creation_date": 1483554918, "post_id": 41470792, "comment_id": 70147576, "body": "counterexample: node&#39;s leftpad. i know cargo strives to avoid that particular case. but it&#39;s not like there are <i>no</i> downsides to relying on additional dependencies. At least you have to vet the reliability (version management, API design, use of unsafe features) of possibly many options when choosing dependencies."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 1, "creation_date": 1483556618, "post_id": 41470792, "comment_id": 70148469, "body": "@the8472 leftpad is, unfortunately, pure FUD in the context of Rust / Cargo. Yanked versions are still downloadable from the repo, they just won&#39;t be automatically selected during upgrade time. For the other points: <i>version management</i> \u2014 only if you care; you can choose to never upgrade it and just leave the version locked forever. <i>API design</i> \u2014 true, it may not be the API you want, but <b>in the context of this question</b>, the stdlib can <i>also</i> provide an API you dislike, and then you are stuck with it. <i>use of unsafe features</i> \u2014 true, but the stdlib <i>also</i> uses unsafe code under the hood."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 3, "creation_date": 1483558118, "post_id": 41470792, "comment_id": 70149325, "body": "No, leftpad is not FUD, it merely served as a general example that dependencies can introduce additional headaches. I did not say that I expect cargo to have that <i>particular</i> problem, in fact I already said the opposite: <i>&quot;i know cargo strives to avoid that particular case.&quot;</i> (note my use of the word &quot;particular&quot; here, implying that it was more about a more general issue). What i&#39;m saying is that as you heap on dependencies you add sources of problems but you also add utility. So there are tradeoffs to be made. Ideally you want to extract the maximum utility with the minimum of dependencies."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1483558332, "post_id": 41470792, "comment_id": 70149440, "body": "@the8472 but I&#39;m trying to point out that the standard library <i>is a dependency</i>, written by the same humans that make crates. It&#39;s not like one is magically going to be better than the other. The standard library is a facade of many small crates, in fact. If I took 10 crates from crates.io and made my own facade, would that be any more palatable? Adding more stuff to the stdlib would have the same effect."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 5, "creation_date": 1483558339, "post_id": 41470792, "comment_id": 70149442, "body": "Anyway, I&#39;m not saying that dependencies should be avoided altogether. But they are a tradeoff, so it makes sense to investigate whether the use of any particular one can be avoided. E.g. several times I already had to use multiple crates doing pretty much the same thing at the same time because each only offered a subset of what I actually needed. It certainly does not feel optimal."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1483558469, "post_id": 41470792, "comment_id": 70149517, "body": "<i>multiple crates doing pretty much the same thing</i> \u2014 that&#39;s unfortunate :-( Any idea if those crate authors would be amenable to teaming up? You could always produce your own combination of the three and publish that ;-)."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 1, "creation_date": 1483558503, "post_id": 41470792, "comment_id": 70149531, "body": "The standard library is written by the language maintainers, no? So there would be some expectation that there are synergies from intimate knowledge of what the compiler compiler does and being developed in tandem with it. Optimal implementations and all that. That provides some confidence in its quality. Confidence which does not come naturally for 3rd party crates."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1483558694, "post_id": 41470792, "comment_id": 70149618, "body": "@the8472 <i>Confidence which does not come naturally for 3rd party crates</i> \u2014 I meant &quot;written by the same humans&quot; quite literally. Futures is a prime example, as are libraries like Itertools or Regex. All written by core team members (IIRC), but they might not have been core team members when they wrote the libraries. Anywho, I&#39;ve got the &quot;extended discussions&quot; warning, so feel free to <a href=\"http://chat.stackoverflow.com/rooms/62927/rust\">join our chat</a> if you&#39;d like to continue disabusing me of my notions."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483802481, "post_id": 41470792, "comment_id": 70251765, "body": "Re: <i>&quot;Third-party crates allow things to be created, evolve, and die without burdening the entire language.&quot;</i> - This doesn&#39;t solves a problem its just moving it around - since either way, if I want my software to be built on a stable base - it must rely on a large body of code (made up of crates), which may evolve and die. Its unavoidable of course. AFAICS it&#39;s more a solution from Rust maintainers perspective, and a reason to continue to be careful taking on new dependencies."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483802606, "post_id": 41470792, "comment_id": 70251789, "body": "Re: <i>&quot;And neither <b>should</b> there be.&quot;</i>, while I agree that <i>including-the-kitchen-sink</i> is to be avoided. I don&#39;t see any compelling reason that decoding a single character is a step-too-far down this path (something to check with the Rust devs I suppose)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1483554369, "creation_date": 1483554369, "answer_id": 41470792, "question_id": 41469686, "link": "https://stackoverflow.com/questions/41469686/how-to-decode-a-single-utf-8-character-and-step-onto-the-next-using-only-the-rus/41470792#41470792", "title": "How to decode a single UTF-8 character and step onto the next using only the Rust standard library?", "body": "<p>No, there is no such functionality publicly exposed in the Rust standard library as of Rust 1.14.</p>\n\n<hr>\n\n<p>And neither <strong>should</strong> there be. Rust doesn't <em>believe</em> in a gigantic standard library. Crates are trivial to use and prevent people from rewriting code. Many people have an incorrect opinion (yeah, that's right: an opinion is incorrect) that using dependencies makes their program weaker. </p>\n\n<p>Anything put in the standard library has to be maintained <strong>forever</strong>. There are zero plans for a Rust 2.0 that would break backwards compatibility. Python is the normal example here, with a multitude of \"get data from a URL\" parts of the standard library that are all redundant and deprecated now. The Python maintainers have to waste time keeping those working, instead of advancing the language.</p>\n\n<p>Third-party crates allow things to be created, evolve, and die without burdening the entire language. </p>\n"}, {"comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1488343422, "post_id": 42521914, "comment_id": 72183146, "body": "The limitation with this is you can&#39;t control behavior when invalid utf8 byte sequence is encountered (if you wanted to implement something like <a href=\"https://docs.python.org/3.6/library/codecs.html#surrogateescape\" rel=\"nofollow noreferrer\">docs.python.org/3.6/library/codecs.html#surrogateescape</a>)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 0, "last_activity_date": 1488333799, "creation_date": 1488333799, "answer_id": 42521914, "question_id": 41469686, "link": "https://stackoverflow.com/questions/41469686/how-to-decode-a-single-utf-8-character-and-step-onto-the-next-using-only-the-rus/42521914#42521914", "title": "How to decode a single UTF-8 character and step onto the next using only the Rust standard library?", "body": "<p>You can convert a byte slice (<code>&amp;[u8]</code>) into a string slice (<code>&amp;str</code>) by using <a href=\"https://doc.rust-lang.org/stable/std/str/fn.from_utf8.html\" rel=\"nofollow noreferrer\"><code>str::from_utf8</code></a> (note that this validates that the whole byte slice is valid UTF-8). You can then use the <code>chars()</code> iterator on the string slice to iterate on each character (<code>char</code>) in the string.</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 884, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1488333799, "creation_date": 1483550305, "last_edit_date": 1488308966, "question_id": 41469686, "link": "https://stackoverflow.com/questions/41469686/how-to-decode-a-single-utf-8-character-and-step-onto-the-next-using-only-the-rus", "title": "How to decode a single UTF-8 character and step onto the next using only the Rust standard library?", "body": "<p>Does Rust provide a way to decode a single character <em>(unicode-scalar-value to be exact)</em> from a <code>&amp;[u8]</code>, which may be multiple bytes, returning a single USV?</p>\n\n<p>Something like GLib's <code>g_utf8_get_char</code> &amp; <code>g_utf8_next_char</code>:</p>\n\n<pre><code>// Example of what glib's functions might look like once ported to Rust.\nlet i = 0;\nwhile i &lt; slice.len() {\n    let unicode_char = g_utf8_get_char(&amp;slice[i..]);\n\n    // do something with the unicode character\n    funcion(unicode_char);\n\n    // move onto the next.\n    i += g_utf8_next_char(&amp;slice[i..]);\n}\n</code></pre>\n\n<p>Short of porting parts of the GLib API to Rust, does Rust provide a way to do this, besides some trial &amp; error calls to <code>from_utf8</code> which stop once the second character is reached?</p>\n\n<p>See <a href=\"https://git.gnome.org/browse/glib/tree/glib/gutf8.c\" rel=\"nofollow noreferrer\">GLib's code</a>.</p>\n"}, {"tags": ["python", "rust", "ctypes"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1483547171, "post_id": 41468273, "comment_id": 70142860, "body": "See also <a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\">The Rust FFI Omnibus</a> and the <i>numerous</i> <a href=\"http://stackoverflow.com/search?q=%5Brust%5D+%5Bpython%5D+is%3Aq\">existing questions about Rust + Python</a>."}, {"owner": {"reputation": 4579, "user_id": 673600, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/HBWEo.jpg?s=128&g=1", "display_name": "disruptive", "link": "https://stackoverflow.com/users/673600/disruptive"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483548601, "post_id": 41468273, "comment_id": 70143912, "body": "@Shepmaster Thanks, I had a look, I presume Omnibus is yours - its good for covering these little points which I cannot seem to find in the Rust documentation."}], "answers": [{"tags": [], "owner": {"reputation": 76206, "user_id": 108205, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef459127edc89cc575d80a73cd8c567a?s=128&d=identicon&r=PG", "display_name": "jsbueno", "link": "https://stackoverflow.com/users/108205/jsbueno"}, "is_accepted": false, "score": 1, "last_activity_date": 1483547132, "last_edit_date": 1483547132, "creation_date": 1483546184, "answer_id": 41468364, "question_id": 41468273, "link": "https://stackoverflow.com/questions/41468273/calling-rust-from-python-with-string-in-the-function-parameters/41468364#41468364", "title": "Calling Rust from Python with string in the function parameters", "body": "<p>The string sent from Python should be represented in Rust as a <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"nofollow noreferrer\"><code>CString</code></a> instead.</p>\n"}, {"tags": [], "owner": {"reputation": 4579, "user_id": 673600, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/HBWEo.jpg?s=128&g=1", "display_name": "disruptive", "link": "https://stackoverflow.com/users/673600/disruptive"}, "is_accepted": true, "score": 1, "last_activity_date": 1483568301, "last_edit_date": 1483568301, "creation_date": 1483548927, "answer_id": 41469275, "question_id": 41468273, "link": "https://stackoverflow.com/questions/41468273/calling-rust-from-python-with-string-in-the-function-parameters/41469275#41469275", "title": "Calling Rust from Python with string in the function parameters", "body": "<p>I used <a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_arguments/\" rel=\"nofollow noreferrer\">the Rust FFI Omnibus</a> and now my code seems to work just fine.     </p>\n\n<pre><code>use std::env;\nuse std::ffi::{CString, CStr};\nuse std::os::raw::c_char;\n\n#[no_mangle]\npub extern \"C\" fn helloworld(names: *const c_char) {\n\n    unsafe {\n        let c_str = CStr::from_ptr(names).to_str().unwrap();\n        println!(\"{:?}\", c_str);\n\n    }\n    println!(\"helloworld...\");\n\n}\n</code></pre>\n"}], "owner": {"reputation": 4579, "user_id": 673600, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/HBWEo.jpg?s=128&g=1", "display_name": "disruptive", "link": "https://stackoverflow.com/users/673600/disruptive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 696, "favorite_count": 2, "accepted_answer_id": 41469275, "answer_count": 2, "score": 1, "last_activity_date": 1483568301, "creation_date": 1483545945, "last_edit_date": 1483547224, "question_id": 41468273, "link": "https://stackoverflow.com/questions/41468273/calling-rust-from-python-with-string-in-the-function-parameters", "title": "Calling Rust from Python with string in the function parameters", "body": "<p>I can call my test Rust program with integers as input and handle these fine, even without reference to <code>ctypes</code>. However I cannot seem to get a string without segfaulting in Rust.</p>\n\n<p>Here is my test Rust code:</p>\n\n<pre><code>use std::env;\n\n#[no_mangle]\npub extern fn helloworld(names: &amp;str ) {\n  println!(\"{}\", names);\n  println!(\"helloworld...\");\n}\n\n#[no_mangle]\npub extern fn ihelloworld(names: i32 ) {\n  println!(\"{}\", names);\n  println!(\"ihelloworld...\");\n}\n</code></pre>\n\n<p><code>ihelloworld</code> works just fine. But I cannot find a way to get a string from python into Rust even if I use <code>ctypes</code>.</p>\n\n<p>Here is the calling Python code:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import sys, ctypes, os\nfrom ctypes import cdll\nfrom ctypes import c_char_p\nfrom ctypes import *\n\n\nif __name__ == \"__main__\":\n    directory = os.path.dirname(os.path.abspath(__file__))\n    lib = cdll.LoadLibrary(os.path.join(directory, \"target/release/libembeded.so\"))\n\n    lib.ihelloworld(1)\n    lib.helloworld.argtypes = [c_char_p]\n    #lib.helloworld(str(\"test user\"))\n    #lib.helloworld(u'test user')\n    lib.helloworld(c_char_p(\"test user\"))\n\n    print(\"finished running!\")\n</code></pre>\n\n<p>The output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1\nihelloworld...\nSegmentation fault (core dumped)\n</code></pre>\n\n<p>The <code>ihellowworld</code> Rust function works just fine, but I cannot seem to get <code>helloworld</code> working.</p>\n"}, {"tags": ["sql", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483541100, "post_id": 41466393, "comment_id": 70138589, "body": "You appear to be trying to learn multiple separate things concurrently; I&#39;d recommend trying to learn them separately to start with. Modeling tree-like structures in SQL has multiple implementations, and they all have benefits and downsides. There&#39;s even entire <i>graph databases</i> because the problem can be difficult! Once you have figured out your data organization, then you can deal with creating the SQL query required to get what you want. Once you have that, you can then figure out how to get Diesel to do what you want. You will also have to figure out how to represent the tree in Rust!"}, {"owner": {"reputation": 1281, "user_id": 680794, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/fc0bbdeb0c23ceb9afbf2a658fc888f2?s=128&d=identicon&r=PG", "display_name": "Alex Botev", "link": "https://stackoverflow.com/users/680794/alex-botev"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483541217, "post_id": 41466393, "comment_id": 70138689, "body": "Could you point me to any information on how to do this in SQL. I know there and graph databases, but for now I would like to do it in SQL as there is other logic which resides in SQL."}], "owner": {"reputation": 1281, "user_id": 680794, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/fc0bbdeb0c23ceb9afbf2a658fc888f2?s=128&d=identicon&r=PG", "display_name": "Alex Botev", "link": "https://stackoverflow.com/users/680794/alex-botev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 114, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1483540868, "creation_date": 1483540555, "last_edit_date": 1483540868, "question_id": 41466393, "link": "https://stackoverflow.com/questions/41466393/how-can-i-fetch-a-hierarchical-tree-structure-in-diesel", "title": "How can I fetch a hierarchical tree structure in Diesel?", "body": "<p>I want to create a SQL database using Diesel. One of the tables will contain something called <code>groups</code> which can be thought of as a hierarchical  tree structure: a group can be root group, or it can have a single parent. Each group should have a <code>unique_id</code> and a user who owns it and a potential parent. </p>\n\n<p>How do I create this struct such that Diesel would be able to fetch the whole tree below a given group? If that is possible, how would I execute it?</p>\n\n<p>I'm quite new to web development, so I'm not too well acquainted with how to achieve what I want. </p>\n"}, {"tags": ["multithreading", "loops", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483538798, "post_id": 41465573, "comment_id": 70136984, "body": "This question doesn&#39;t really show any effort. You say you &quot;don&#39;t know how to pass a channel&quot;, but what have you tried? Passing an argument to a function is a very fundamental concept in most programming languages, and Rust is no different. If you don&#39;t know how to do that, you may want to hold off on multithreading as it&#39;s orders of magnitude more complicated."}, {"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 1, "creation_date": 1483539367, "post_id": 41465573, "comment_id": 70137335, "body": "And the docs for <a href=\"https://doc.rust-lang.org/std/sync/mpsc/index.html\" rel=\"nofollow noreferrer\">std::sync::mpsc</a> give examples of moving a channel Sender into a new thread."}, {"owner": {"reputation": 37, "user_id": 5806001, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/69f78529bbc0cb5ef7998a3763f8da6b?s=128&d=identicon&r=PG&f=1", "display_name": "Minege", "link": "https://stackoverflow.com/users/5806001/minege"}, "edited": false, "score": 0, "creation_date": 1483544171, "post_id": 41465573, "comment_id": 70140662, "body": "The doc say that only one thread can contain a specific receiver, and when i want to pass it in args, i can&#39;t because of &lt;T&gt;. I dont know wath to put there. The Receiver&lt;T&gt;. I want to pass a Receiver. Wath am i suposed to pass here ?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1483547396, "post_id": 41468454, "comment_id": 70143027, "body": "Would you suggest passing the atomic variable to a function? OP might not know how to do that."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1483550492, "post_id": 41468454, "comment_id": 70145146, "body": "The problem with the mpsc asymmetry does not apply to atomics. they can be shared between any number of threads."}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": true, "score": 2, "last_activity_date": 1483546502, "creation_date": 1483546502, "answer_id": 41468454, "question_id": 41465573, "link": "https://stackoverflow.com/questions/41465573/terminate-a-loop-from-a-different-thread-with-rust/41468454#41468454", "title": "Terminate a loop from a different thread with Rust", "body": "<p>Channels seem like overkill for a simple loop condition. You can use an <a href=\"https://doc.rust-lang.org/std/sync/atomic/index.html\" rel=\"nofollow noreferrer\">atomic variable</a> instead which can be shared across threads.</p>\n"}], "owner": {"reputation": 37, "user_id": 5806001, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/69f78529bbc0cb5ef7998a3763f8da6b?s=128&d=identicon&r=PG&f=1", "display_name": "Minege", "link": "https://stackoverflow.com/users/5806001/minege"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 807, "favorite_count": 0, "accepted_answer_id": 41468454, "answer_count": 1, "score": 2, "last_activity_date": 1483546502, "creation_date": 1483538262, "last_edit_date": 1483538700, "question_id": 41465573, "link": "https://stackoverflow.com/questions/41465573/terminate-a-loop-from-a-different-thread-with-rust", "title": "Terminate a loop from a different thread with Rust", "body": "<p>I have a simple loop in a thread, and I'd like to stop the loop. Normally with Python, I would use a global variable to stop the loop, but I don't know for Rust.</p>\n\n<p>I heard about channels, but I don't know how to pass a channel <code>Receiver</code> into my function which starts a new thread.</p>\n"}, {"tags": ["intellij-idea", "rust", "homebrew"], "comments": [{"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 4, "creation_date": 1483535987, "post_id": 41464063, "comment_id": 70135138, "body": "I would recommend using <code>rustup</code>, it downloads the correct sources, updates them together with the compiler tools and allows version switching. <a href=\"https://rustup.rs/\" rel=\"nofollow noreferrer\">rustup.rs</a> Without sources, IDEA will not know about any <code>std</code> types or values, which basically makes code completion completely useless."}], "answers": [{"comments": [{"owner": {"reputation": 235857, "user_id": 65387, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c0377fc1b08293d3362611978913a32b?s=128&d=identicon&r=PG", "display_name": "mpen", "link": "https://stackoverflow.com/users/65387/mpen"}, "edited": false, "score": 1, "creation_date": 1504860295, "post_id": 41473352, "comment_id": 79186869, "body": "There appears to be a download button right in the IDE now: <a href=\"https://i.imgur.com/p0Q7PZZ.png\" rel=\"nofollow noreferrer\">i.imgur.com/p0Q7PZZ.png</a>"}, {"owner": {"reputation": 4142, "user_id": 2460378, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/8195a4ad4c898abfd9544088d62901de?s=128&d=identicon&r=PG", "display_name": "Thomas S.", "link": "https://stackoverflow.com/users/2460378/thomas-s"}, "reply_to_user": {"reputation": 235857, "user_id": 65387, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/c0377fc1b08293d3362611978913a32b?s=128&d=identicon&r=PG", "display_name": "mpen", "link": "https://stackoverflow.com/users/65387/mpen"}, "edited": false, "score": 0, "creation_date": 1595415752, "post_id": 41473352, "comment_id": 111464851, "body": "@mpen: unfortunately, this link is not available any more in IDEA 20.1.3."}], "tags": [], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "is_accepted": true, "score": 38, "last_activity_date": 1483564817, "last_edit_date": 1483564817, "creation_date": 1483564491, "answer_id": 41473352, "question_id": 41464063, "link": "https://stackoverflow.com/questions/41464063/how-to-provide-standard-library-sources-for-intellij-ideas-rust-project/41473352#41473352", "title": "How to provide standard library sources for IntelliJ IDEA&#39;s Rust project?", "body": "<p>As commented, the supported approach is to use <code>rustup</code>:</p>\n\n<ul>\n<li>Navigate to <a href=\"https://rustup.rs/\" rel=\"noreferrer\">https://rustup.rs/</a> and follow the installation instructions for your platform.</li>\n<li>Add the <code>rust-src</code> component by running: <code>rustup component add rust-src</code></li>\n<li>Create a new Rust project in IntelliJ and choose your existing Rust project source.  If the folder already contains previous IntelliJ project files, you may have to delete those first before it will let you proceed.</li>\n<li>IntelliJ-Rust should automatically configure the standard library sources to point to the sources downloaded by <code>rustup</code>.</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 5, "creation_date": 1526845220, "post_id": 49453070, "comment_id": 87891464, "body": "who do you need to use a symlink here? it works fine for me without the symlink by just selecting <code>&#47;usr&#47;lib&#47;rustlib&#47;src&#47;rust&#47;src</code> in intellij"}, {"owner": {"reputation": 3201, "user_id": 2017781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f158070ca67f3dc6db7e15cbfdddf28e?s=128&d=identicon&r=PG", "display_name": "eddygeek", "link": "https://stackoverflow.com/users/2017781/eddygeek"}, "reply_to_user": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1591979052, "post_id": 49453070, "comment_id": 110268870, "body": "@msrd0 see the <i>Issue</i> link. It is (was?) a bug."}], "tags": [], "owner": {"reputation": 3201, "user_id": 2017781, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f158070ca67f3dc6db7e15cbfdddf28e?s=128&d=identicon&r=PG", "display_name": "eddygeek", "link": "https://stackoverflow.com/users/2017781/eddygeek"}, "is_accepted": false, "score": 8, "last_activity_date": 1521818407, "creation_date": 1521818407, "answer_id": 49453070, "question_id": 41464063, "link": "https://stackoverflow.com/questions/41464063/how-to-provide-standard-library-sources-for-intellij-ideas-rust-project/49453070#49453070", "title": "How to provide standard library sources for IntelliJ IDEA&#39;s Rust project?", "body": "<p>As a reference, since the question title is broad, for <strong>Fedora 28</strong> I had to:</p>\n\n<pre><code>dnf install cargo rust-src\nsudo ln -s /usr/lib/rustlib/src /usr/lib/rustlib/x86_64-unknown-linux-gnu/\n</code></pre>\n\n<p>then give <code>/usr/lib/rustlib/x86_64-unknown-linux-gnu/src/rust/src</code> as \"Standard library\"</p>\n\n<p>Full setup:\n<a href=\"https://i.stack.imgur.com/zOQkY.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/zOQkY.png\" alt=\"enter image description here\"></a></p>\n\n<p><a href=\"https://github.com/intellij-rust/intellij-rust/issues/2395\" rel=\"noreferrer\">Issue</a> opened to simplify the process</p>\n"}, {"comments": [{"owner": {"reputation": 161, "user_id": 855893, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/A354R.jpg?s=128&g=1", "display_name": "opncow", "link": "https://stackoverflow.com/users/855893/opncow"}, "edited": false, "score": 4, "creation_date": 1552652362, "post_id": 54542299, "comment_id": 97102782, "body": "I&#39;m also using Gentoo. Having installed:  [I] dev-lang/rust 1.32 (-clippy -debug -doc -libressl -rls -rustfmt -system-llvm -wasm)  I cannot seem to find the standard libraries anywhere... Any ideas why they are missing here?"}, {"owner": {"reputation": 447, "user_id": 2598608, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/0dFLL.png?s=128&g=1", "display_name": "Scott Tiger", "link": "https://stackoverflow.com/users/2598608/scott-tiger"}, "reply_to_user": {"reputation": 161, "user_id": 855893, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/A354R.jpg?s=128&g=1", "display_name": "opncow", "link": "https://stackoverflow.com/users/855893/opncow"}, "edited": false, "score": 1, "creation_date": 1588673038, "post_id": 54542299, "comment_id": 108981905, "body": "@opncow, I had the same trouble, found the answer here: <a href=\"https://stackoverflow.com/a/60576683/2598608\">stackoverflow.com/a/60576683/2598608</a> - Use the &quot;rls&quot; useflag for rust to have sources installed."}, {"owner": {"reputation": 161, "user_id": 855893, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/A354R.jpg?s=128&g=1", "display_name": "opncow", "link": "https://stackoverflow.com/users/855893/opncow"}, "reply_to_user": {"reputation": 447, "user_id": 2598608, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/0dFLL.png?s=128&g=1", "display_name": "Scott Tiger", "link": "https://stackoverflow.com/users/2598608/scott-tiger"}, "edited": false, "score": 0, "creation_date": 1588756285, "post_id": 54542299, "comment_id": 109017934, "body": "Thanks you @ScottTiger! Completely missed this useflag."}], "tags": [], "owner": {"reputation": 51, "user_id": 2795580, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b67c928db4d9dfc198db925997e32ee9?s=128&d=identicon&r=PG&f=1", "display_name": "Raffaele", "link": "https://stackoverflow.com/users/2795580/raffaele"}, "is_accepted": false, "score": 5, "last_activity_date": 1549397539, "creation_date": 1549397539, "answer_id": 54542299, "question_id": 41464063, "link": "https://stackoverflow.com/questions/41464063/how-to-provide-standard-library-sources-for-intellij-ideas-rust-project/54542299#54542299", "title": "How to provide standard library sources for IntelliJ IDEA&#39;s Rust project?", "body": "<p>Although the preferred way of installing Rust is by using rustup, as pointed out by the other posts, it is not uncommon to use the packages that your distro makes available. </p>\n\n<p>I use, for example, the packages provided by Gentoo and I share the same problem about the not prefilled field for standard libraries.\nNevertheless, you can easily find out where your standard libraries have been installed by typing the following find command:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>find /usr/lib* -type d -name \"rust\" | grep src\n</code></pre>\n\n<p>or the following if you installed rust in your home</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>find  -type d -name \"rust\" | grep src\n</code></pre>\n\n<p>The previous commands will help, unless, of course, in your distro there is a package for the binaries and one for the source and you only installed the binary one.</p>\n"}, {"tags": [], "owner": {"reputation": 1435, "user_id": 965638, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/3dbb79927c171952b1757479d53b1fe4?s=128&d=identicon&r=PG", "display_name": "eri0o", "link": "https://stackoverflow.com/users/965638/eri0o"}, "is_accepted": false, "score": 0, "last_activity_date": 1595295358, "last_edit_date": 1595295358, "creation_date": 1595294651, "answer_id": 63006059, "question_id": 41464063, "link": "https://stackoverflow.com/questions/41464063/how-to-provide-standard-library-sources-for-intellij-ideas-rust-project/63006059#63006059", "title": "How to provide standard library sources for IntelliJ IDEA&#39;s Rust project?", "body": "<p>I know the question is for MacOS but this answer is shown up when searching for it on Linux. Below I will answer for Ubuntu.</p>\n<p>The path is <code>/usr/lib/rustlib/src/rust/src</code> for Ubuntu 20.04</p>\n<hr />\n<p>The way I did is:</p>\n<ul>\n<li>Installed rustc from the repositories, which includes cargo</li>\n</ul>\n<pre><code>sudo apt install rustc\n</code></pre>\n<ul>\n<li>Then installed rust source package</li>\n</ul>\n<pre><code>sudo apt install rust-src\n</code></pre>\n<ul>\n<li>I used <code>apt-file</code> (can be installed with <code>sudo apt install apt-file</code>) to search for the install path of the sources</li>\n</ul>\n<pre><code>sudo apt-file update\napt-file list rust-src\n</code></pre>\n<p>This show the path as <code>/usr/src/rustc-1.41.0/src</code> .</p>\n<p>But a <code>ls -la</code> in <code>/usr/lib/rustlib/</code> will reveal symlinks and <code>/usr/lib/rustlib/src/rust/src</code> points to the previous found directory.</p>\n<p>Using the symlink on IntelliJ will survive new rust versions.</p>\n"}, {"tags": [], "owner": {"reputation": 27792, "user_id": 516167, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/SYxJD.png?s=128&g=1", "display_name": "MariuszS", "link": "https://stackoverflow.com/users/516167/mariuszs"}, "is_accepted": false, "score": 0, "last_activity_date": 1596312977, "creation_date": 1596312977, "answer_id": 63209655, "question_id": 41464063, "link": "https://stackoverflow.com/questions/41464063/how-to-provide-standard-library-sources-for-intellij-ideas-rust-project/63209655#63209655", "title": "How to provide standard library sources for IntelliJ IDEA&#39;s Rust project?", "body": "<p>For Fedora 32 install Rust using command:</p>\n<pre><code>dnf install cargo rust-src\n</code></pre>\n<p>and the path to standard libary source is:</p>\n<pre><code>/usr/lib/rustlib/src/rust\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4462, "user_id": 1396265, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/UetVH.png?s=128&g=1", "display_name": "Rainer Schwarze", "link": "https://stackoverflow.com/users/1396265/rainer-schwarze"}, "is_accepted": false, "score": 1, "last_activity_date": 1600333221, "creation_date": 1600333221, "answer_id": 63934669, "question_id": 41464063, "link": "https://stackoverflow.com/questions/41464063/how-to-provide-standard-library-sources-for-intellij-ideas-rust-project/63934669#63934669", "title": "How to provide standard library sources for IntelliJ IDEA&#39;s Rust project?", "body": "<p>When not using the rustup installer, one can install the source package and direct the rust plugin to use those:</p>\n<p><a href=\"https://i.stack.imgur.com/SabMW.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/SabMW.png\" alt=\"enter image description here\" /></a></p>\n<p>(Tested with CLion 2020.2.1, rust-1.46.0-x86_64-pc-windows-gnu.msi, rustc-1.46.0-src.tar.gz. Offline Rust installers and source archive from there: <a href=\"https://forge.rust-lang.org/infra/other-installation-methods.html\" rel=\"nofollow noreferrer\">https://forge.rust-lang.org/infra/other-installation-methods.html</a> )</p>\n"}], "owner": {"reputation": 2750, "user_id": 661598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/BVAlk.png?s=128&g=1", "display_name": "wst", "link": "https://stackoverflow.com/users/661598/wst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11982, "favorite_count": 5, "accepted_answer_id": 41473352, "answer_count": 6, "score": 26, "last_activity_date": 1600333221, "creation_date": 1483533582, "last_edit_date": 1483604736, "question_id": 41464063, "link": "https://stackoverflow.com/questions/41464063/how-to-provide-standard-library-sources-for-intellij-ideas-rust-project", "title": "How to provide standard library sources for IntelliJ IDEA&#39;s Rust project?", "body": "<p>I am using Mac for development. I installed Rust 1.13.0 using <code>brew install rust</code> and the Rust plugin 0.1.0.1385 for IntelliJ IDEA. I created my first test project with <code>cargo</code> and while opening it with IDEA I got the message</p>\n\n<blockquote>\n  <p>No standard library sources found, some code insight will not work</p>\n</blockquote>\n\n<p>I haven't found any sources installed, nor the Rust sources package in Homebrew.</p>\n\n<p>How do I provide sources for the project and what are the practical implication if I ignore this step?</p>\n"}, {"tags": ["casting", "rust", "box", "any"], "answers": [{"tags": [], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "is_accepted": false, "score": 1, "last_activity_date": 1483511920, "creation_date": 1483511920, "answer_id": 41457677, "question_id": 41457368, "link": "https://stackoverflow.com/questions/41457368/how-to-check-if-boxany-contains-unit-in-a-short-expression/41457677#41457677", "title": "How to check if &#39;Box&lt;Any&gt;&#39; contains &#39;Unit&#39; in a short expression?", "body": "<p>This can be done using <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html#method.is\" rel=\"nofollow noreferrer\"><code>Any::is</code></a> method, eg:</p>\n\n<pre><code>assert!(value.is::&lt;()&gt;());\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1483511959, "creation_date": 1483510721, "last_edit_date": 1483511959, "question_id": 41457368, "link": "https://stackoverflow.com/questions/41457368/how-to-check-if-boxany-contains-unit-in-a-short-expression", "title": "How to check if &#39;Box&lt;Any&gt;&#39; contains &#39;Unit&#39; in a short expression?", "body": "<p>What is a convenient way to check a <code>Box&lt;Any&gt;</code> is <code>()</code> (created by <code>Box::new(())</code>).</p>\n\n<p>Currently I have this, but I suspect there might be a more compact way to express this since the assignment seems redundant.</p>\n\n<pre><code>pub fn some_function(value: Box&lt;Any&gt;) {\n    if let Some(&amp;()) = value.downcast_ref() {\n        // pass\n    } else {\n        panic!();\n    }\n}\n</code></pre>\n"}, {"tags": ["linux-kernel", "rust", "tun"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 7370747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8d3314c79e30d4bb7f50df7d9594175?s=128&d=identicon&r=PG&f=1", "display_name": "Diime", "link": "https://stackoverflow.com/users/7370747/diime"}, "edited": false, "score": 0, "creation_date": 1483509464, "post_id": 41456556, "comment_id": 70120244, "body": "yes, and there&#39;re iotcl packages out there as well. but popular is that one  and how much is it close to de-facto?"}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "reply_to_user": {"reputation": 23, "user_id": 7370747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8d3314c79e30d4bb7f50df7d9594175?s=128&d=identicon&r=PG&f=1", "display_name": "Diime", "link": "https://stackoverflow.com/users/7370747/diime"}, "edited": false, "score": 0, "creation_date": 1483509623, "post_id": 41456556, "comment_id": 70120297, "body": "@Diime , currently <code>nix</code> has 325,649 downloads. I would say it&#39;s close to de-factor standard Unix api package in Rust."}, {"owner": {"reputation": 23, "user_id": 7370747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8d3314c79e30d4bb7f50df7d9594175?s=128&d=identicon&r=PG&f=1", "display_name": "Diime", "link": "https://stackoverflow.com/users/7370747/diime"}, "edited": false, "score": 0, "creation_date": 1483518466, "post_id": 41456556, "comment_id": 70124100, "body": "ok. but how about this <a href=\"https://github.com/rust-lang/rust/blob/5b3cd3900ceda838f5798c30ab96ceb41f962534/src/libstd/sys/unix/c.rs#L78\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/blob/&hellip;</a> ?"}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "reply_to_user": {"reputation": 23, "user_id": 7370747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8d3314c79e30d4bb7f50df7d9594175?s=128&d=identicon&r=PG&f=1", "display_name": "Diime", "link": "https://stackoverflow.com/users/7370747/diime"}, "edited": false, "score": 0, "creation_date": 1483518923, "post_id": 41456556, "comment_id": 70124360, "body": "@Diime , it is a <code>unsafe</code> C declaration internally used by the compiler. We have a <code>libc</code> version here: <a href=\"https://doc.rust-lang.org/libc/x86_64-unknown-linux-gnu/libc/fn.ioctl.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/libc/x86_64-unknown-linux-gnu/libc/&hellip;</a> On the other hand, <code>ioctl</code> in <code>nix</code> is safe."}], "tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": true, "score": 1, "last_activity_date": 1530422978, "last_edit_date": 1530422978, "creation_date": 1483506493, "answer_id": 41456556, "question_id": 41456211, "link": "https://stackoverflow.com/questions/41456211/how-to-call-ioctl-in-rust-and-interface-the-linux-tun-driver/41456556#41456556", "title": "How to call &quot;ioctl&quot; in Rust? And interface the Linux &quot;tun&quot; driver", "body": "<p>You can find <a href=\"https://docs.rs/nix/latest/nix/sys/ioctl/index.html\" rel=\"nofollow noreferrer\"><code>ioctl</code></a> in <a href=\"https://crates.io/crates/nix\" rel=\"nofollow noreferrer\"><code>nix</code></a>, which contains convenience wrapper of *nix functionalities.</p>\n"}], "owner": {"reputation": 23, "user_id": 7370747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8d3314c79e30d4bb7f50df7d9594175?s=128&d=identicon&r=PG&f=1", "display_name": "Diime", "link": "https://stackoverflow.com/users/7370747/diime"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2089, "favorite_count": 0, "accepted_answer_id": 41456556, "answer_count": 1, "score": 2, "last_activity_date": 1530422978, "creation_date": 1483504068, "last_edit_date": 1483504379, "question_id": 41456211, "link": "https://stackoverflow.com/questions/41456211/how-to-call-ioctl-in-rust-and-interface-the-linux-tun-driver", "title": "How to call &quot;ioctl&quot; in Rust? And interface the Linux &quot;tun&quot; driver", "body": "<p>How can I the function  \"ioctl\" in Rust? Should I find a wrapper for it somewhere? Is there a de-facto wrapper? Or maybe it's already included in the standard Rust library? I've not found it, though.</p>\n\n<p>Or, more generally, I need an interface the Linux \"tun\" driver.</p>\n"}, {"tags": ["utf-8", "rust", "unicode-escapes"], "answers": [{"comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 3, "creation_date": 1483502929, "post_id": 41455277, "comment_id": 70118341, "body": "Note that <code>from_utf8_lossy</code> doesn&#39;t provide different ways of handling errors as Python does. Instead of escaping, invalid utf-8 sequences are replaced with <code>U+FFFD</code> (matching Python&#39;s <code>replace</code> behavior). So I think the short answer to this question is <b>no</b>, though its worth mentioning <code>from_utf8_lossy</code> still."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483503245, "post_id": 41455277, "comment_id": 70118412, "body": "The short answer to either of the posed questions (&quot;Is it possible to decode bytes to UTF-8, converting errors to escape sequences in Rust?&quot; or &quot;Does Rust have a way to get a UTF-8 string from bytes which handles errors without failing entirely?&quot;) is <b>no</b>? I&#39;m pretty sure that this code does exactly that."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 2, "creation_date": 1483503745, "post_id": 41455277, "comment_id": 70118521, "body": "The docs for <code>from_utf8_lossy</code> state: <i>&quot;During this conversion, from_utf8_lossy() will replace any invalid UTF-8 sequences with U+FFFD REPLACEMENT CHARACTER, which looks like this: \ufffd&quot;</i>. So this is a replacement, not an escape sequence. The first part of this answer shows how converting with an escape sequence could be written: <a href=\"http://stackoverflow.com/a/41450295/432509\">stackoverflow.com/a/41450295/432509</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483503996, "post_id": 41455277, "comment_id": 70118607, "body": "@ideasman42 what do you mean by escape sequence in this case? What&#39;s an example?"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483504573, "post_id": 41455277, "comment_id": 70118739, "body": "Instead of replacing the character, the escape sequence shows the character using some identifier <code>\\N{...}</code> for example, so instead of being <i>lossy</i>, it includes the characters in the string (typically as a number). See: <a href=\"https://docs.python.org/3/library/codecs.html#error-handlers\" rel=\"nofollow noreferrer\">docs.python.org/3/library/codecs.html#error-handlers</a> for some examples. As noted in the OP, Python can use <code>surrogateescape</code> for this. Will clarify the question since anyone not familiar with Python won&#39;t find it so helpful."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1483533340, "post_id": 41455277, "comment_id": 70133400, "body": "For the example given in the answer, <code>bytes([104, 101, 0xFF, 108, 111]).decode(&#39;utf-8&#39;, &#39;surrogateescape&#39;)</code> would evaluate to <code>&#39;he\\udcfflo&#39;</code>, with <code>U+DCFF</code> being the &quot;escape&quot; character (a code point normally <a href=\"http://www.fileformat.info/info/unicode/char/dcff/index.htm\" rel=\"nofollow noreferrer\">not valid in Unicode</a>) used to represent the invalid 0xff byte. Replacing 0xff with 0xfe produces <code>\\udcfe</code>, and so on."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1483547091, "post_id": 41455277, "comment_id": 70142785, "body": "@user4815162342 But <code>surrogateescape</code> would be completely pointless in Rust; it seems like an alternate implementation of <code>OsStr</code>."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1483547794, "post_id": 41455277, "comment_id": 70143323, "body": "Also, it wouldn&#39;t actually work in today&#39;s Rust, whose strings and chars reject code points - for example, <code>&quot;he\\u{dcff}lo&quot;</code> is a compile-time error, and <code>::std::char::from_u32(0xdcff)</code> returns <code>None</code>."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483547983, "post_id": 41455277, "comment_id": 70143462, "body": "The question only asks about escaping the string, not how to perform <code>surrogateescape</code> in Rust, thats just an example of a common escaping method used in Python."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 9, "last_activity_date": 1539106331, "last_edit_date": 1539106331, "creation_date": 1483496704, "answer_id": 41455277, "question_id": 41455206, "link": "https://stackoverflow.com/questions/41455206/is-it-possible-to-decode-bytes-to-utf-8-converting-errors-to-escape-sequences-i/41455277#41455277", "title": "Is it possible to decode bytes to UTF-8, converting errors to escape sequences in Rust?", "body": "<p>Yes, via <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf8_lossy\" rel=\"nofollow noreferrer\"><code>String::from_utf8_lossy</code></a>:</p>\n\n<pre><code>fn main() {\n    let text = [104, 101, 0xFF, 108, 111];\n    let s = String::from_utf8_lossy(&amp;text);\n    println!(\"{}\", s); // he\ufffdlo\n}\n</code></pre>\n\n<p>If you need more control over the process, you can use <a href=\"https://doc.rust-lang.org/std/str/fn.from_utf8.html\" rel=\"nofollow noreferrer\"><code>std::str::from_utf8</code></a>, as suggested by the <a href=\"https://stackoverflow.com/a/41468380/155423\">other answer</a>. However, there's no reason to double-validate the bytes as it suggests.</p>\n\n<p>A quickly hacked-up example:</p>\n\n<pre><code>use std::str;\n\nfn example(mut bytes: &amp;[u8]) -&gt; String {\n    let mut output = String::new();\n\n    loop {\n        match str::from_utf8(bytes) {\n            Ok(s) =&gt; {\n                // The entire rest of the string was valid UTF-8, we are done\n                output.push_str(s);\n                return output;\n            }\n            Err(e) =&gt; {\n                let (good, bad) = bytes.split_at(e.valid_up_to());\n\n                if !good.is_empty() {\n                    let s = unsafe {\n                        // This is safe because we have already validated this\n                        // UTF-8 data via the call to `str::from_utf8`; there's\n                        // no need to check it a second time\n                        str::from_utf8_unchecked(good)\n                    };\n                    output.push_str(s);\n                }\n\n                if bad.is_empty() {\n                    //  No more data left\n                    return output;\n                }\n\n                // Do whatever type of recovery you need to here\n                output.push_str(\"&lt;badbyte&gt;\");\n\n                // Skip the bad byte and try again\n                bytes = &amp;bad[1..];\n            }\n        }\n    }\n}\n\nfn main() {\n    let r = example(&amp;[104, 101, 0xFF, 108, 111]);\n    println!(\"{}\", r); // he&lt;badbyte&gt;lo\n}\n</code></pre>\n\n<p>You could extend this to take values to replace bad bytes with, a closure to handle the bad bytes, etc. For example:</p>\n\n<pre><code>fn example(mut bytes: &amp;[u8], handler: impl Fn(&amp;mut String, &amp;[u8])) -&gt; String {\n    // ...    \n                handler(&amp;mut output, bad);\n    // ...\n}\n</code></pre>\n\n\n\n<pre><code>let r = example(&amp;[104, 101, 0xFF, 108, 111], |output, bytes| {\n    use std::fmt::Write;\n    write!(output, \"\\\\U{{{}}}\", bytes[0]).unwrap()\n});\nprintln!(\"{}\", r); // he\\U{255}lo\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/19076719/155423\">How do I convert a Vector of bytes (u8) to a string</a></li>\n<li><a href=\"https://stackoverflow.com/q/41449708/155423\">How to print a u8 slice as text if I don&#39;t care about the particular encoding?</a>.</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483547993, "post_id": 41468380, "comment_id": 70143473, "body": "<i>decode each failed attempt twice</i> \u2014 could you expand a bit more on that? I&#39;m not seeing the double decode attempt."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483548387, "post_id": 41468380, "comment_id": 70143764, "body": "Re: <i>&quot;But that&#39;s inefficient since you will decode each failed attempt twice.&quot;</i> seems like there should be a better way that can be done in a small function, similar to this answer, but supporting valid utf8: <a href=\"http://stackoverflow.com/a/41450295/432509\">stackoverflow.com/a/41450295/432509</a>"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483548581, "post_id": 41468380, "comment_id": 70143896, "body": "@Shepmaster, where do you see it being possible with a single pass in the presence of errors?"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483548632, "post_id": 41468380, "comment_id": 70143935, "body": "@ideasman42 that better way is the 2nd option I have suggested."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483553360, "post_id": 41468380, "comment_id": 70146752, "body": "Starting at the beginning, you parse until you hit an error, skip the error / add whatever marker you need, then continue parsing after the error. You only read each byte once, making a single pass over all the data. Thus why I&#39;m asking what I&#39;m missing."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483554799, "post_id": 41468380, "comment_id": 70147520, "body": "@Shepmaster to find the error position you need to call <code>from_utf8</code>, then you need to call it again on the prefix to get a valid partial result. so that&#39;s 2 passes over the input. in the stdlib there&#39;s nothing that takes <code>u8</code>s incrementally (a charset decoder basically), which seems to be what OP is looking for."}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": false, "score": 2, "last_activity_date": 1483547886, "last_edit_date": 1483547886, "creation_date": 1483546250, "answer_id": 41468380, "question_id": 41455206, "link": "https://stackoverflow.com/questions/41455206/is-it-possible-to-decode-bytes-to-utf-8-converting-errors-to-escape-sequences-i/41468380#41468380", "title": "Is it possible to decode bytes to UTF-8, converting errors to escape sequences in Rust?", "body": "<p>You can either:</p>\n\n<ol>\n<li><p>Construct it yourself by using the <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf8\" rel=\"nofollow noreferrer\">strict UTF-8 decoding</a> which returns an error indicating the position where the decoding failed, which you can then escape. But that's inefficient since you will decode each failed attempt twice.</p></li>\n<li><p>Try <a href=\"https://crates.io/search?q=charset\" rel=\"nofollow noreferrer\">3rd party crates</a> which provide more customizable charset decoders.</p></li>\n</ol>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2943, "favorite_count": 1, "answer_count": 2, "score": 10, "last_activity_date": 1539106331, "creation_date": 1483496180, "last_edit_date": 1483504889, "question_id": 41455206, "link": "https://stackoverflow.com/questions/41455206/is-it-possible-to-decode-bytes-to-utf-8-converting-errors-to-escape-sequences-i", "title": "Is it possible to decode bytes to UTF-8, converting errors to escape sequences in Rust?", "body": "<p>In Rust it's possible to get UTF-8 from bytes by doing this:</p>\n\n<pre><code>if let Ok(s) = str::from_utf8(some_u8_slice) {\n    println!(\"example {}\", s);\n}\n</code></pre>\n\n<p>This either works or it doesn't, but Python has the ability to handle errors, e.g.:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>s = some_bytes.decode(encoding='utf-8', errors='surrogateescape');\n</code></pre>\n\n<p>In this example the argument <code>surrogateescape</code> converts invalid utf-8 sequences to escape-codes, so instead of ignoring or replacing text that can't be decoded, they are replaced with a byte literal expression, which is valid <code>utf-8</code>. see: <a href=\"http://docs.python.org/3/library/codecs.html#error-handlers\" rel=\"noreferrer\">Python docs</a> for details.</p>\n\n<p>Does Rust have a way to get a UTF-8 string from bytes which escapes errors instead of failing entirely?</p>\n"}, {"tags": ["rust", "closures"], "answers": [{"comments": [{"owner": {"reputation": 10492, "user_id": 1351298, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/KJKqs.jpg?s=128&g=1", "display_name": "Electric Coffee", "link": "https://stackoverflow.com/users/1351298/electric-coffee"}, "edited": false, "score": 0, "creation_date": 1483485074, "post_id": 41453709, "comment_id": 70114055, "body": "Having to scope it isn&#39;t ideal, (and I know didn&#39;t make this clear) because the code has interleaved pushes and asserts. I.e. it pushes some values, then asserts via popping if it holds true, then pushes more values, etc."}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "reply_to_user": {"reputation": 10492, "user_id": 1351298, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/KJKqs.jpg?s=128&g=1", "display_name": "Electric Coffee", "link": "https://stackoverflow.com/users/1351298/electric-coffee"}, "edited": false, "score": 0, "creation_date": 1483485170, "post_id": 41453709, "comment_id": 70114086, "body": "I would generally not do what you described. It sounds quite confusing for a reader. What&#39;s so bad about assert_eq!(list.pop(), Some(3)); ?"}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "reply_to_user": {"reputation": 10492, "user_id": 1351298, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/KJKqs.jpg?s=128&g=1", "display_name": "Electric Coffee", "link": "https://stackoverflow.com/users/1351298/electric-coffee"}, "edited": false, "score": 0, "creation_date": 1483485381, "post_id": 41453709, "comment_id": 70114145, "body": "If you really, really want to do this, you can write a macro, which is equally confusing though, imo: macro_rules! assert_pop { ($expected:expr) =&gt; { assert_eq!(v.pop(), $expected); } }"}, {"owner": {"reputation": 10492, "user_id": 1351298, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/KJKqs.jpg?s=128&g=1", "display_name": "Electric Coffee", "link": "https://stackoverflow.com/users/1351298/electric-coffee"}, "edited": false, "score": 0, "creation_date": 1483485561, "post_id": 41453709, "comment_id": 70114184, "body": "yeah I suppose this is a case for brevity against clarity, which isn&#39;t always the best"}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "reply_to_user": {"reputation": 10492, "user_id": 1351298, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/KJKqs.jpg?s=128&g=1", "display_name": "Electric Coffee", "link": "https://stackoverflow.com/users/1351298/electric-coffee"}, "edited": false, "score": 1, "creation_date": 1483485651, "post_id": 41453709, "comment_id": 70114210, "body": "If you do use a macro, note that you have to declare the macro inline inside the function AFTER declaring the list variable, due to macro hygiene."}], "tags": [], "owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "is_accepted": false, "score": 2, "last_activity_date": 1483486200, "last_edit_date": 1483486200, "creation_date": 1483484609, "answer_id": 41453709, "question_id": 41453535, "link": "https://stackoverflow.com/questions/41453535/mutating-a-variable-in-the-body-of-a-closure/41453709#41453709", "title": "Mutating a variable in the body of a closure", "body": "<p>They key is to <strong>define the closure as mut</strong>, since it needs a mutable reference.</p>\n\n<p>This works:</p>\n\n<pre><code>let mut v = vec![1, 2];\nlet mut assert_pop = |expected| assert_eq!(v.pop(), expected);\n\nassert_pop(Some(2));\nassert_pop(Some(1));\nassert_pop(None);\n</code></pre>\n\n<p>Note that the the <code>pop</code> closure borrows mutably, so you if you want to use  the list afterwards, you have to scope it:</p>\n\n<pre><code>let mut v = vec![1,2];\n{\n    let mut assert_pop = |expected| assert_eq!(v.pop(), expected);\n    assert_pop(Some(2));\n    v.push(33); // ERROR: v is borrowed mutably...\n}\nv.push(33); // Works now, since pop is out of scope.\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1483495960, "last_edit_date": 1495535437, "creation_date": 1483486444, "answer_id": 41454001, "question_id": 41453535, "link": "https://stackoverflow.com/questions/41453535/mutating-a-variable-in-the-body-of-a-closure/41454001#41454001", "title": "Mutating a variable in the body of a closure", "body": "<p>Instead of directly answering your question (which is <a href=\"https://stackoverflow.com/a/41453709/155423\">well-enough answered already</a>), I'll instead address your other points:</p>\n\n<ul>\n<li>just write <code>assert_pop(None)</code> or <code>assert_pop(Some(3))</code></li>\n<li>a memory-safe way solution</li>\n<li>don't pass in a <code>&amp;mut list</code></li>\n</ul>\n\n<p>To solve all that, don't use a closure, just make a new type:</p>\n\n<pre><code>type List&lt;T&gt; = Vec&lt;T&gt;;\n\nstruct Thing&lt;T&gt;(List&lt;T&gt;);\n\nimpl&lt;T&gt; Thing&lt;T&gt; {\n    fn assert_pop(&amp;mut self, expected: Option&lt;T&gt;) \n        where T: PartialEq + std::fmt::Debug,\n    {\n        assert_eq!(self.0.pop(), expected);\n    }\n}\n\nfn main() {\n    let list = List::new();\n    let mut list = Thing(list);\n\n    list.0.push(1);\n    list.assert_pop(Some(1));\n    list.assert_pop(None);\n\n    // Take it back if we need to\n    let _list = list.0;\n}\n</code></pre>\n"}], "owner": {"reputation": 10492, "user_id": 1351298, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/KJKqs.jpg?s=128&g=1", "display_name": "Electric Coffee", "link": "https://stackoverflow.com/users/1351298/electric-coffee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1483495960, "creation_date": 1483483400, "question_id": 41453535, "link": "https://stackoverflow.com/questions/41453535/mutating-a-variable-in-the-body-of-a-closure", "title": "Mutating a variable in the body of a closure", "body": "<p>I'm writing a bunch of assertions that all involve popping a value from a list.</p>\n\n<p>Coming from a Scala background, I naturally did this:</p>\n\n<pre><code>let mut list = List::new();\nlet assert_pop = |expected| assert_eq!(list.pop(), expected);\n</code></pre>\n\n<p>So that I could just write <code>assert_pop(None)</code> or <code>assert_pop(Some(3))</code> instead of having to write <code>assert_eq!(list.pop(), None)</code> or <code>assert_eq!(list.pop(), Some(3))</code> every time.</p>\n\n<p>Of course the borrow checker doesn't like this one bit because the closure essentially needs to borrow the value for an undisclosed amount of time, while the rest of my code goes around mutating, thus violating the rule of <em>\"no aliasing if you're mutating\"</em>.</p>\n\n<p>The question is: is there a way to get around this? Do I have to write a macro, or is there a funky memory-safe way I can get around this?</p>\n\n<p><strong>Note</strong> that I know that I can just define the closure like this:</p>\n\n<pre><code>let_assert_pop = |lst: &amp;mut List, expected| assert_eq!(lst.pop(), expected);\n</code></pre>\n\n<p>But that would be less <em>DRY</em>, as I'd have to pass in a <code>&amp;mut list</code> as the first argument at every call.</p>\n"}, {"tags": ["build", "linker", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 69, "user_id": 6819630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8ae1ad8e32627b7bfdf3946af3aa1ca?s=128&d=identicon&r=PG&f=1", "display_name": "leviat", "link": "https://stackoverflow.com/users/6819630/leviat"}, "is_accepted": false, "score": 2, "last_activity_date": 1483839966, "last_edit_date": 1592644375, "creation_date": 1483565791, "answer_id": 41473626, "question_id": 41452469, "link": "https://stackoverflow.com/questions/41452469/how-can-i-make-cargo-execute-a-build-script-and-use-a-target-specific-linker-at/41473626#41473626", "title": "How can I make Cargo execute a build script and use a target-specific linker at the same time?", "body": "<h3>Update:</h3>\n<p>Currently, the stable version of Rust fails at including the proper libraries (namely the Windows SDK) when the VS linker is specified explictly. Consequently, the build-script could not be linked and building failed.</p>\n<h3>Solution:</h3>\n<p>Recent changes in the nightly have solved this problem. Just switch to the nightly or wait until it is merged to the stable version.</p>\n"}], "owner": {"reputation": 69, "user_id": 6819630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8ae1ad8e32627b7bfdf3946af3aa1ca?s=128&d=identicon&r=PG&f=1", "display_name": "leviat", "link": "https://stackoverflow.com/users/6819630/leviat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1135, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1557783102, "creation_date": 1483478024, "last_edit_date": 1483649038, "question_id": 41452469, "link": "https://stackoverflow.com/questions/41452469/how-can-i-make-cargo-execute-a-build-script-and-use-a-target-specific-linker-at", "title": "How can I make Cargo execute a build script and use a target-specific linker at the same time?", "body": "<p>I'm adjusting the build process of a library written in Rust. The goal is to have it compile on Windows with MSVCC. Due to some specific dependencies, I have to make sure that the correct MSVCC linker is being used, so I've set up a project-specific configuration file for Cargo with:</p>\n\n<pre><code>[target.x86_64-pc-windows-msvc]\nlinker = \"C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/amd64/link.exe\"\n</code></pre>\n\n<p>When I run <code>cargo build</code> now, my build-script <code>build.rs</code> is no longer executed. Since the script provides the paths for important libraries, the building process eventually fails.</p>\n\n<p>To reproduce the problem under Windows 10 (64-bit) with Visual Studio 12, create a project as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>|   build.rs\n|   Cargo.toml\n|\n+---.cargo\n|       config\n|\n\\---src\n        main.rs\n</code></pre>\n\n<p>./build.rs:\n</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    let manifest_dir = env::var(\"CARGO_MANIFEST_DIR\").unwrap();\n    panic!(\"Building!\");\n}\n</code></pre>\n\n<p>./Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"some_binary\"\nversion = \"0.1.0\"\nbuild = \"build.rs\"\n</code></pre>\n\n<p>.cargo/config:</p>\n\n<pre><code>[target.x86_64-pc-windows-msvc]\nlinker = \"C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/amd64/link.exe\"\n</code></pre>\n\n<p>src/main.rs:\n</p>\n\n<pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>When you call <code>cargo build</code>, linking should fail with </p>\n\n<blockquote>\n  <p>LINK : fatal error LNK1181: cannot open input file\n  'advapi32.lib'</p>\n</blockquote>\n"}, {"tags": ["rust", "parser-combinators", "nom"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483470191, "post_id": 41449860, "comment_id": 70107569, "body": "I&#39;d strongly recommend writing out the actual grammar before trying to write the code. A strong point of parsing tools is that they help map the grammar to the code."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1483531767, "post_id": 41449860, "comment_id": 70132370, "body": "I would also recomment 1) Doing a proper <a href=\"http://stackoverflow.com/help/mcve\">stackoverflow.com/help/mcve</a> (perhaps with <a href=\"http://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a>). See also <a href=\"http://www.sscce.org/\" rel=\"nofollow noreferrer\">sscce.org</a>. 2) Providing a kind of unit test as the example of how the grammar should be parsed."}], "answers": [{"comments": [{"owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "edited": false, "score": 0, "creation_date": 1483557467, "post_id": 41463246, "comment_id": 70148988, "body": "Thanks for taking a whack at it anyway. Sorry, I wasn&#39;t sure to put the full parser code in my question, feeling that it might be overwhelming. In my defense, I linked to a GitHub repo that should have made it fairly easy to see both the full parser and the example input, as well as something that would&#39;ve made it easy to test this (though maybe not as easy as your playground). Anyway, I&#39;ve tried to clarify my question a bit now. I&#39;ll dig into your example a bit more to see if there&#39;s anything in there that can help."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "edited": false, "score": 1, "creation_date": 1483557688, "post_id": 41463246, "comment_id": 70149105, "body": "@djc we don&#39;t want <i>the entire parser</i>, we want a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, emphasis on the <b>M</b>."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "edited": false, "score": 0, "creation_date": 1483569449, "post_id": 41463246, "comment_id": 70154731, "body": "@djc Thanks for the update. Regarding the &quot;Many1&quot; error, you should compile nom with the &quot;verbose-errors&quot; feature enabled in order for it to give you the exact position of the parsing failure."}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 0, "last_activity_date": 1483531019, "creation_date": 1483531019, "answer_id": 41463246, "question_id": 41449860, "link": "https://stackoverflow.com/questions/41449860/matching-template-filter-expressions-with-nom/41463246#41463246", "title": "Matching template filter expressions with nom", "body": "<p>I can't say I dig your question: there is no example of the text that should be parsed and neither do you describe the problem that you've encountered while building the parser.</p>\n\n<p>Still, maybe the following example will be helpful. A working recursive parser:</p>\n\n<pre><code>#[macro_use]\nextern crate nom;\n\nuse nom::alphanumeric;\n\ntype Variable = String;\ntype Filter = String;\n\nnamed! (plain_expression (&amp;str) -&gt; (Variable, Filter), do_parse! (\n    tag_s! (\"{{\") &gt;&gt;\n    variable: alphanumeric &gt;&gt;\n    tag_s! (\"|\") &gt;&gt;\n    filter: alphanumeric &gt;&gt;\n    tag_s! (\"}}\") &gt;&gt;\n    ((variable.into(), filter.into()))));\n\n#[derive(Debug)]\nenum Expression {\n    Plain(Variable, Filter),\n    Recursive(Box&lt;Expression&gt;, Filter),\n}\n\nnamed! (recursive_expression (&amp;str) -&gt; Expression,\n  alt_complete! (\n    map! (plain_expression, |(v, f)| Expression::Plain (v, f)) |\n    do_parse! (\n      tag_s! (\"{{\") &gt;&gt;\n      sub: recursive_expression &gt;&gt;\n      tag_s! (\"|\") &gt;&gt;\n      filter: alphanumeric &gt;&gt;\n      tag_s! (\"}}\") &gt;&gt;\n      (Expression::Recursive (Box::new (sub), filter.into())))));\n\nfn main() {\n    let plain = \"{{var|fil}}\";\n    let recursive = \"{{{{{{var1|fil1}}|fil2}}|fil3}}\";\n    // Prints: Done(\"\", (\"var\", \"fil\")).\n    println!(\"{:?}\", plain_expression(plain));\n    // Prints: Done(\"\", Recursive(Recursive(Plain(\"var1\", \"fil1\"), \"fil2\"), \"fil3\")).\n    println!(\"{:?}\", recursive_expression(recursive));\n}\n</code></pre>\n\n<p>(<a href=\"http://play.integer32.com/?gist=387d5b7bbe083a8d448a8039ee281e4b&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>).</p>\n"}, {"tags": [], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "is_accepted": true, "score": 0, "last_activity_date": 1483710004, "creation_date": 1483710004, "answer_id": 41506994, "question_id": 41449860, "link": "https://stackoverflow.com/questions/41449860/matching-template-filter-expressions-with-nom/41506994#41506994", "title": "Matching template filter expressions with nom", "body": "<p>I fixed it by writing my own parser function:</p>\n\n<pre><code>named!(expr_var&lt;Expr&gt;, map!(nom::alphanumeric, Expr::Var));\n\nfn expr_filtered(i: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], Expr&gt; {\n    let (mut left, mut expr) = match expr_var(i) {\n        IResult::Error(err) =&gt; { return IResult::Error(err); },\n        IResult::Incomplete(needed) =&gt; { return IResult::Incomplete(needed); },\n        IResult::Done(left, res) =&gt; (left, res),\n    };\n    while left[0] == b'|' {\n        match nom::alphanumeric(&amp;left[1..]) {\n            IResult::Error(err) =&gt; {\n                return IResult::Error(err);\n            },\n            IResult::Incomplete(needed) =&gt; {\n                return IResult::Incomplete(needed);\n            },\n            IResult::Done(new_left, res) =&gt; {\n                left = new_left;\n                expr = Expr::Filter(str::from_utf8(res).unwrap(), Box::new(expr));\n            },\n        };\n    }\n    return IResult::Done(left, expr);\n}\n\nnamed!(expr_node&lt;Node&gt;, map!(\n    delimited!(tag_s!(\"{{\"), ws!(expr_filtered), tag_s!(\"}}\")),\nNode::Expr));\n</code></pre>\n\n<p>There is probably some nicer way to do the same thing with nom macros, but at least I got something working.</p>\n"}], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 492, "favorite_count": 2, "accepted_answer_id": 41506994, "answer_count": 2, "score": 1, "last_activity_date": 1486869817, "creation_date": 1483467303, "last_edit_date": 1486869817, "question_id": 41449860, "link": "https://stackoverflow.com/questions/41449860/matching-template-filter-expressions-with-nom", "title": "Matching template filter expressions with nom", "body": "<p>I'm working on a templating engine where some of the syntax could be like:</p>\n\n<pre><code>{{ somevar|filter }}\n</code></pre>\n\n<p>In place of <code>somevar</code> could be an arbitrary \"expression\", which is to say, either a variable name like <code>somevar</code>, or a nested filter expression (like <code>{{ somevar|filter|anotherfilter }}</code>). I'm trying to parse this using Rust's nom parser combinator library, but failing to get it to work so far.</p>\n\n<p>Here's the parser I've come up with so far:</p>\n\n<pre><code>#[macro_use]\nextern crate nom;\n\nuse std::str;\n\n#[derive(Debug)]\npub enum Expr&lt;'a&gt; {\n    Var(&amp;'a [u8]),\n    Filter(&amp;'a str, Box&lt;Expr&lt;'a&gt;&gt;),\n}\n\n#[derive(Debug)]\npub enum Node&lt;'a&gt; {\n    Lit(&amp;'a [u8]),\n    Expr(Expr&lt;'a&gt;),\n}\n\nnamed!(expr_var&lt;Expr&gt;, dbg_dmp!(map!(nom::alphanumeric, Expr::Var)));\n\nnamed!(expr_filter&lt;Expr&gt;,\n    dbg_dmp!(do_parse!(\n         val: any_expr &gt;&gt;\n         tag_s!(\"|\") &gt;&gt;\n         name: map_res!(nom::alphanumeric, str::from_utf8) &gt;&gt;\n         (Expr::Filter(name, Box::new(val)))\n    ))\n);\n\nnamed!(any_expr&lt;Expr&gt;, dbg_dmp!(ws!(\n    alt_complete!(\n        expr_filter |\n        expr_var  \n    ))));\n\nnamed!(expr_node&lt;Node&gt;, dbg_dmp!(map!(\n    delimited!(tag_s!(\"{{\"), any_expr, tag_s!(\"}}\")),\n    Node::Expr)));\n\nnamed!(parse_template&lt; Vec&lt;Node&gt; &gt;, many1!(expr_node));\n</code></pre>\n\n<p>With a <a href=\"http://play.integer32.com/?gist=387d5b7bbe083a8d448a8039ee281e4b&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>. The current version panics through a stack overflow. I can fix this by reversing the <code>expr_var | expr_filter</code> order in <code>any_expr</code>, but then I'm back to basically the same error as before.</p>\n"}, {"tags": ["arrays", "string", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1483467360, "post_id": 41449708, "comment_id": 70106079, "body": "What byte encoding are you assuming? Plain 7-bit ASCII?"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1483467555, "post_id": 41449708, "comment_id": 70106164, "body": "Im not assuming a particular encoding, the text is probably ascii, but not guaranteed to be. I&#39;d just like to see it in the terminal, as if Id written bytes to the stdout. If there is some gibberish because of bad encoding, its OK."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1483469111, "post_id": 41449708, "comment_id": 70107024, "body": "The question needs to be modified to state that you can&#39;t assume any particular encoding. If you can assume UTF-8, that <code>str::from_utf8</code> is the best way. Otherwise, <code>str::from_utf8</code> fails if it&#39;s invalid UTF-8, so you&#39;ll need to use other approaches."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1483469743, "post_id": 41449708, "comment_id": 70107366, "body": "Updated the question"}], "answers": [{"comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 1, "creation_date": 1483496224, "post_id": 41449890, "comment_id": 70116840, "body": "While helpful, this is all or nothing - does Rust have something like Python&#39;s surrogateescape - python.org/dev/peps/pep-0383 where non decodable sequences still show output? - asked separately:  <a href=\"http://stackoverflow.com/questions/41455206\">stackoverflow.com/questions/41455206</a>"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1483497124, "post_id": 41449890, "comment_id": 70117039, "body": "More than one person answered your question. You might want to inspect the other answers."}], "tags": [], "owner": {"reputation": 769, "user_id": 5433623, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-0jplvxnVu04/AAAAAAAAAAI/AAAAAAAAGvQ/VLbN9V7SMJ8/photo.jpg?sz=128", "display_name": "Matt Brubeck", "link": "https://stackoverflow.com/users/5433623/matt-brubeck"}, "is_accepted": false, "score": 11, "last_activity_date": 1483499067, "last_edit_date": 1483499067, "creation_date": 1483467430, "answer_id": 41449890, "question_id": 41449708, "link": "https://stackoverflow.com/questions/41449708/how-to-print-a-u8-slice-as-text-if-i-dont-care-about-the-particular-encoding/41449890#41449890", "title": "How to print a u8 slice as text if I don&#39;t care about the particular encoding?", "body": "<p>The simplest way is <code>stdout().write_all(some_u8_slice)</code>. This will simply output the bytes, with no regard for their encoding.  This is useful for binary data, or text in some unknown encoding where you want to preserve the original encoding.</p>\n\n<p>If you want to treat the data as a string and you know that the encoding is UTF-8 (or a UTF-8 subset like ASCII) then you can do this:</p>\n\n<pre><code>use std::str;\n\nfn main() {\n    let some_utf8_slice = &amp;[104, 101, 0xFF, 108, 111];\n    if let Ok(s) = str::from_utf8(some_utf8_slice) {\n        println!(\"{}\", s);\n    }\n}\n</code></pre>\n\n<p>This will check that the data is valid UTF-8 before printing it.</p>\n"}, {"tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": false, "score": 8, "last_activity_date": 1585542163, "last_edit_date": 1585542163, "creation_date": 1483469035, "answer_id": 41450295, "question_id": 41449708, "link": "https://stackoverflow.com/questions/41449708/how-to-print-a-u8-slice-as-text-if-i-dont-care-about-the-particular-encoding/41450295#41450295", "title": "How to print a u8 slice as text if I don&#39;t care about the particular encoding?", "body": "<p>If I can't assume a particular encoding, the way I normally do it is with the <a href=\"https://doc.rust-lang.org/std/ascii/fn.escape_default.html\" rel=\"nofollow noreferrer\"><code>std::ascii::escape_default</code></a> function. Basically, it will show most ASCII characters as they are, and then escape everything else. The downside is that you won't see every possible Unicode codepoint even if portions of your string are correct UTF-8, but it does the job for most uses:</p>\n\n<pre><code>use std::ascii::escape_default;\nuse std::str;\n\nfn show(bs: &amp;[u8]) -&gt; String {\n    let mut visible = String::new();\n    for &amp;b in bs {\n        let part: Vec&lt;u8&gt; = escape_default(b).collect();\n        visible.push_str(str::from_utf8(&amp;part).unwrap());\n    }\n    visible\n}\n\nfn main() {\n    let bytes = b\"foo\\xE2\\x98\\x83bar\\xFFbaz\";\n    println!(\"{}\", show(bytes));\n}\n</code></pre>\n\n<p>Output: <code>foo\\xe2\\x98\\x83bar\\xffbaz</code></p>\n\n<p>Another approach is to lossily decode the contents into a string and print that. If there's any invalid UTF-8, you'll get a Unicode replacement character instead of hex escapes of the raw bytes, but you will get to see all valid UTF-8 encoded Unicode codepoints:</p>\n\n<pre><code>fn show(bs: &amp;[u8]) -&gt; String {\n    String::from_utf8_lossy(bs).into_owned()\n}\n\nfn main() {\n    let bytes = b\"foo\\xE2\\x98\\x83bar\\xFFbaz\";\n    println!(\"{}\", show(bytes));\n}\n</code></pre>\n\n<p>Output: <code>foo\u2603bar\ufffdbaz</code></p>\n"}, {"tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": true, "score": 6, "last_activity_date": 1613131378, "last_edit_date": 1613131378, "creation_date": 1483477246, "answer_id": 41452286, "question_id": 41449708, "link": "https://stackoverflow.com/questions/41449708/how-to-print-a-u8-slice-as-text-if-i-dont-care-about-the-particular-encoding/41452286#41452286", "title": "How to print a u8 slice as text if I don&#39;t care about the particular encoding?", "body": "<p>If you just want to shovel the raw bytes unescaped to stdout, which can be especially useful when the output is redirected to a pipe or a file then following should do the job:</p>\n<pre><code>let mut out = std::io::stdout();\nout.write_all(slice)?;\nout.flush()?;\n</code></pre>\n<p>The <code>flush</code> is necessary since <code>write_all</code> immediately followed by a program abort can fail to deliver the bytes to the underlying file descriptor.</p>\n"}, {"tags": [], "owner": {"reputation": 171, "user_id": 4262568, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-7CiH3oALTk0/AAAAAAAAAAI/AAAAAAAAAAA/xsd7dXV9yEQ/photo.jpg?sz=128", "display_name": "Kayo", "link": "https://stackoverflow.com/users/4262568/kayo"}, "is_accepted": false, "score": 2, "last_activity_date": 1538764672, "creation_date": 1538764672, "answer_id": 52671523, "question_id": 41449708, "link": "https://stackoverflow.com/questions/41449708/how-to-print-a-u8-slice-as-text-if-i-dont-care-about-the-particular-encoding/52671523#52671523", "title": "How to print a u8 slice as text if I don&#39;t care about the particular encoding?", "body": "<p>The variant using <code>escape_default()</code>:</p>\n\n<pre><code>use std::ascii::escape_default;\n\npub fn show_buf&lt;B: AsRef&lt;[u8]&gt;&gt;(buf: B) -&gt; String {\n    String::from_utf8(\n        buf.as_ref()\n           .iter()\n           .map(|b| escape_default(*b))\n           .flatten()\n           .collect(),\n    ).unwrap()\n}\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6600, "favorite_count": 0, "accepted_answer_id": 41452286, "answer_count": 4, "score": 10, "last_activity_date": 1613131378, "creation_date": 1483466710, "last_edit_date": 1609899381, "question_id": 41449708, "link": "https://stackoverflow.com/questions/41449708/how-to-print-a-u8-slice-as-text-if-i-dont-care-about-the-particular-encoding", "title": "How to print a u8 slice as text if I don&#39;t care about the particular encoding?", "body": "<p>When printing a <code>u8</code> array in Rust using <code>println!(&quot;{:?}&quot;, some_u8_slice);</code> this prints the numeric values (as it should).</p>\n<p>What is the most direct way to format the characters as-is into the string\nwithout assuming any particular encoding?</p>\n<p>Something like iterating over the byte string and writing each character to <code>stdout</code> <em>(without so much hassle)</em>.</p>\n<p>Can this be done using Rust's <code>format!</code>?</p>\n<p>Otherwise what's the most convenient way to print a <code>u8</code> slice?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 3, "creation_date": 1483466191, "post_id": 41448805, "comment_id": 70105440, "body": "Rust does have a &#39;bit&#39; datatype, it&#39;s called &quot;boolean&quot;. Your question is very unclear. What are you trying to do? Are you trying to read or write a binary format?"}, {"owner": {"reputation": 387, "user_id": 289701, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/be5a862385021d7bb17e6f4485709b82?s=128&d=identicon&r=PG", "display_name": "Johnny", "link": "https://stackoverflow.com/users/289701/johnny"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1483508227, "post_id": 41448805, "comment_id": 70119797, "body": "sorry , i don&#39;t know rust boolean is in size of one bit , my English is  rough too, i am trying to read or generate binary format , that&#39; right."}, {"owner": {"reputation": 387, "user_id": 289701, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/be5a862385021d7bb17e6f4485709b82?s=128&d=identicon&r=PG", "display_name": "Johnny", "link": "https://stackoverflow.com/users/289701/johnny"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1483509296, "post_id": 41448805, "comment_id": 70120186, "body": "could you talk more about the boolean type in rust ? capture the essence of rust."}, {"owner": {"reputation": 247, "user_id": 5470334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/082501348f63f418d2281917265d710f?s=128&d=identicon&r=PG&f=1", "display_name": "Maelkum", "link": "https://stackoverflow.com/users/5470334/maelkum"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1509547993, "post_id": 41448805, "comment_id": 81062471, "body": "Johnny I think what @WesleyWiser meant is not that a boolean in Rust is a one-eight of a byte long, but rather that it stores one bit of information (it&#39;s either true, or false)."}], "answers": [{"comments": [{"owner": {"reputation": 387, "user_id": 289701, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/be5a862385021d7bb17e6f4485709b82?s=128&d=identicon&r=PG", "display_name": "Johnny", "link": "https://stackoverflow.com/users/289701/johnny"}, "edited": false, "score": 0, "creation_date": 1483509103, "post_id": 41450683, "comment_id": 70120124, "body": "yes, it is help full , by speak of fashion , i don&#39;t like the &#39;include&lt;&quot;FilesPath&quot;&gt; &#39;(operating on the file system level)&#39;,and i just learned from there that C++ can do the bit-wise format declaratively , and i consider every declarative feature in HLL  is good thing,"}, {"owner": {"reputation": 247, "user_id": 5470334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/082501348f63f418d2281917265d710f?s=128&d=identicon&r=PG&f=1", "display_name": "Maelkum", "link": "https://stackoverflow.com/users/5470334/maelkum"}, "edited": false, "score": 0, "creation_date": 1509548228, "post_id": 41450683, "comment_id": 81062611, "body": "This is a good answer. It&#39;s easier to work with an abstract representation (if you want a bit, represent it as one bit of information not size) and then serialise/deserialise to the physical format as needed."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1483470551, "creation_date": 1483470551, "answer_id": 41450683, "question_id": 41448805, "link": "https://stackoverflow.com/questions/41448805/is-there-a-convenient-way-to-represent-x86-instructions-in-a-struct-or-other-lan/41450683#41450683", "title": "Is there a convenient way to represent x86 instructions in a struct or other language feature?", "body": "<blockquote>\n  <p>is there any data structure that can be directly compiled</p>\n</blockquote>\n\n<p>No, there are no structures that correspond to this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>OpCode 1or2 byte\n</code></pre>\n\n<p>That is, you cannot have a struct that has a value that is <strong>either</strong> one or two bytes long. Structures have a fixed size at compile time.</p>\n\n<p>Your main choices are:</p>\n\n<ol>\n<li><p>Use pretty Rust features like enums and structs. This is likely to not match the bit pattern of the actual instructions.</p></li>\n<li><p>Make something like <code>struct Instruction([u8; 4])</code> and implement methods that use bitwise operations. This will allow you to match the bit patterns.</p></li>\n</ol>\n\n<p>Since you don't want to use bitwise operations and must match the bit representation, I do not believe your problem can currently be solved in the fashion you'd like.</p>\n\n<p>Personally, I'd probably go the enum route and implement methods to parse the raw instructions from a type implementing <code>Read</code> and <code>Write</code> back to bytes. </p>\n\n<hr>\n\n<p>It's also possible you are interested in <em>bitfields</em>, like this C++ example:</p>\n\n<pre><code>struct S {\n    unsigned int b : 3;\n};\n</code></pre>\n\n<p>There is no direct support for that in Rust, but a few crates appear to support macros to create them. Perhaps that would be useful.</p>\n"}], "owner": {"reputation": 387, "user_id": 289701, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/be5a862385021d7bb17e6f4485709b82?s=128&d=identicon&r=PG", "display_name": "Johnny", "link": "https://stackoverflow.com/users/289701/johnny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 41450683, "answer_count": 1, "score": 1, "last_activity_date": 1483470551, "creation_date": 1483463536, "last_edit_date": 1483470270, "question_id": 41448805, "link": "https://stackoverflow.com/questions/41448805/is-there-a-convenient-way-to-represent-x86-instructions-in-a-struct-or-other-lan", "title": "Is there a convenient way to represent x86 instructions in a struct or other language feature?", "body": "<p>Rust doesn't have a \"bit\" data type, however, x86 instructions have a \"field\" which is in size of bits. Instead of using bit-wise operations, is there any data structure that can be directly compiled to such \"memory/byte alignment\" required by x86 instruction set or any binary protocol?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>OpCode 1or2 byte\nMod-R/M 0 or 1 byte\n    Mod 7,6 bit\n    Reg/OpCode 5,4,3 bit\n    R/M 2,1,0 bit\nSIB 0 or 1 byte\n    SS 7,6\n    Index 5,4,3\n    Base 2,1,0\nDisplacement 0,1,2 or 4 byte\nImmediate 0,1,2 or 4\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1483471038, "post_id": 41448232, "comment_id": 70108016, "body": "This code does not provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Notably absent is the <b>entire <code>BSTIntoIter</code> struct</b>! It&#39;s unclear why your consuming iterator has a lifetime at all."}], "answers": [{"comments": [{"owner": {"reputation": 164, "user_id": 5574172, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0fa159224bdd7aca4bec26d7dc510bc3?s=128&d=identicon&r=PG&f=1", "display_name": "Blue_vision", "link": "https://stackoverflow.com/users/5574172/blue-vision"}, "edited": false, "score": 0, "creation_date": 1483555093, "post_id": 41451912, "comment_id": 70147672, "body": "Thanks, this makes sense! It solves my problem (being that I was approaching it from the wrong angle), so I&#39;m going to mark it as accepted."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1483475731, "last_edit_date": 1495535437, "creation_date": 1483475731, "answer_id": 41451912, "question_id": 41448232, "link": "https://stackoverflow.com/questions/41448232/issues-constraining-implementation-lifetimes-on-type-without-lifetime-parameter/41451912#41451912", "title": "Issues constraining implementation lifetimes on type without lifetime parameter", "body": "<p>You've misunderstood the purpose and usage of <code>IntoIterator</code>. It converts a value <em>into</em> an iterator; <strong>consuming the value</strong> in the process. However, your iterator is attempting to return references to the collection. <a href=\"https://stackoverflow.com/q/25702909/155423\">You cannot return references into the iterator</a>, so it makes no sense to consume the tree, transferring ownership to the iterator.</p>\n\n<p>The fact that you've called it <code>BSTIter</code> instead of <code>BSTIntoIter</code> shows promise; as that's the idiomatic name for an iterator that returns references.</p>\n\n<p>You want to implement <code>IntoIterator</code> for <code>&amp;'a BST&lt;T&gt;</code>, not <code>BST&lt;T&gt;</code>. You could <em>also</em> implement it for <code>BST&lt;T&gt;</code>, but then you'd want to yield <code>T</code>, not <code>&amp;T</code>.</p>\n\n<p>After fixing that, there's lots of compiler errors: mismatched types all throughout the code, incorrect method signatures in traits (<code>fn into_iter(self)</code> is all you are allowed), for some reason there's a mutable reference to the tree, variables aren't mutable when they should be....</p>\n\n<pre><code>#[derive(Debug)]\nstruct Node&lt;T&gt;(Option&lt;Box&lt;T&gt;&gt;);\n\n#[derive(Debug)]\npub struct BST&lt;T&gt;\n    where T: Ord\n{\n    root: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; IntoIterator for &amp;'a BST&lt;T&gt;\n    where T: Ord\n{\n    type Item = T;\n    type IntoIter = BSTIter&lt;'a, T&gt;;\n    fn into_iter(self) -&gt; BSTIter&lt;'a, T&gt; {\n        BSTIter::new(self)\n    }\n}\n\npub struct BSTIter&lt;'a, T: 'a&gt;\n    where T: Ord + 'a\n{\n    bst: &amp;'a BST&lt;T&gt;,\n    node_list: Vec&lt;&amp;'a Node&lt;T&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; BSTIter&lt;'a, T&gt;\n    where T: Ord\n{\n    fn new(bst: &amp;'a BST&lt;T&gt;) -&gt; BSTIter&lt;'a, T&gt; {\n        let mut traverse_stack = Vec::new();\n        if let Some(ref x) = bst.root {\n            traverse_stack.push(&amp;**x);\n        }\n        BSTIter {\n            bst: bst,\n            node_list: traverse_stack,\n        }\n    }\n}\n\nimpl&lt;'a, T&gt; Iterator for BSTIter&lt;'a, T&gt;\n    where T: Ord\n{\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n        None\n    }\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 164, "user_id": 5574172, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0fa159224bdd7aca4bec26d7dc510bc3?s=128&d=identicon&r=PG&f=1", "display_name": "Blue_vision", "link": "https://stackoverflow.com/users/5574172/blue-vision"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 697, "favorite_count": 0, "accepted_answer_id": 41451912, "answer_count": 1, "score": 3, "last_activity_date": 1483475731, "creation_date": 1483461655, "last_edit_date": 1483474894, "question_id": 41448232, "link": "https://stackoverflow.com/questions/41448232/issues-constraining-implementation-lifetimes-on-type-without-lifetime-parameter", "title": "Issues constraining implementation lifetimes on type without lifetime parameter", "body": "<p>I'm trying to implement a BST in Rust (for HW3 in <a href=\"http://cis198-2016s.github.io/schedule/\" rel=\"nofollow noreferrer\">this</a> lovely intro to Rust), and I'm running into errors with lifetimes, and how to constrain lifetimes for types that are related to types without a lifetime.</p>\n\n<pre><code>#[derive(Debug)]\npub struct BST&lt;T&gt;\n    where T: Ord\n{\n    root: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\n// A couple dozen lines of BST stuff\n\nimpl&lt;'a, T&gt; IntoIterator for BST&lt;T&gt;\n    where T: Ord\n{\n    type Item = T;\n    type IntoIter = BSTIter&lt;'a, T&gt;; // &lt;- my intuition is that I should\n                                        // be able to say \"BSTIter lives as\n                                        // long as BST.\"\n\n    fn into_iter(&amp;'a mut self) -&gt; BSTIter&lt;'a, T&gt; {\n        BSTIter::new(&amp;mut self)\n    }\n}\n\n\npub struct BSTIter&lt;'a, T: 'a&gt;\n    where T: Ord + 'a\n{\n    bst: &amp;'a mut BST&lt;T&gt;,\n    node_list: Vec&lt;&amp;'a Node&lt;T&gt;&gt;, // this is where the need for a lifetime on\n                                 // BSTIter comes from\n}\n\n\nimpl&lt;'a, T&gt; BSTIter&lt;'a, T&gt;\n    where T: Ord\n{\n    fn new(&amp;mut bst: BST&lt;T&gt;) -&gt; BSTIter&lt;'a, T&gt; {\n        let traverse_stack = Vec::new();\n        if let Some(ref x) = bst.root {\n            traverse_stack.push(x);\n        }\n        BSTIter {\n            bst: bst,\n            node_list: traverse_stack,\n        }\n    }\n}\n\n\nimpl&lt;'a, T&gt; Iterator for BSTIter&lt;'a, T&gt;\n    where T: Ord\n{\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n        // BST iteration details\n    }\n}\n</code></pre>\n\n<p>As it stands, this code spits out the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the lifetime parameter `'a` is not constrained by the impl trait, self type, or predicates\n   --&gt; src/lib.rs:117:7\n    |\n117 | impl&lt;'a, T&gt; IntoIterator for BST &lt;T&gt; where T: Ord {\n    |      ^^ unconstrained lifetime parameter\n</code></pre>\n\n<p>If the <code>IntoIterator</code> trait didn't require me to specify <code>type IntoIterator = BSTIter</code>, the implementation block could just have an <code>into_iter</code> method signature of <code>into_iter&lt;'a&gt;(&amp;'a mut self) -&gt; BSTIter&lt;'a, T&gt;</code>. Since I need to specify the lifetime for <code>BSTIter</code>, it seems like I need to specify a lifetime for the entire BST type. Again, my instinct says that I shouldn't have to specify a lifetime on BST to be able to create an iterator for it.</p>\n\n<p>I realize the two solutions to this are likely one (or both) of</p>\n\n<ol>\n<li>There's a language feature that helps me get around this</li>\n<li>Somewhere along the way, my code became very much not idiomatic Rust</li>\n</ol>\n\n<p>If I could get help on either how to make the above code snippet work, or how I should be approaching these lifetime and ownership details in general, it would be very much appreciated!</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483460454, "post_id": 41447678, "comment_id": 70102012, "body": "See also <a href=\"http://stackoverflow.com/q/18686269/155423\">stackoverflow.com/q/18686269/155423</a>, and <a href=\"http://floating-point-gui.de/\" rel=\"nofollow noreferrer\">floating-point-gui.de</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1483460652, "post_id": 41447678, "comment_id": 70102119, "body": "@Shepmaster: Given the mention of <code>round</code>, I expect the latter, even though it&#39;s... probably not what the OP want."}, {"owner": {"reputation": 2432, "user_id": 4700841, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8ab51f7e9a70996576549b5c611a2833?s=128&d=identicon&r=PG&f=1", "display_name": "Persistence", "link": "https://stackoverflow.com/users/4700841/persistence"}, "edited": false, "score": 0, "creation_date": 1483460676, "post_id": 41447678, "comment_id": 70102139, "body": "I dont know rust but could you do something like <code>x-y &lt; 0.002</code>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1483460728, "post_id": 41447678, "comment_id": 70102167, "body": "Imagine that I compare to 2 decimals, is it okay for 1.449999 and 1.450 to be counted as different but 1.450 and 1.459999 to be counted as equal even though the former pair is so much closer to each than the latter? That is, do you really want to compare the decimal representation OR do you want to know whether two numbers are &quot;close enough&quot;?"}, {"owner": {"reputation": 239269, "user_id": 464709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ab3363d257d780bd4c1f0c844b020a2?s=128&d=identicon&r=PG", "display_name": "Fr&#233;d&#233;ric Hamidi", "link": "https://stackoverflow.com/users/464709/fr%c3%a9d%c3%a9ric-hamidi"}, "edited": false, "score": 1, "creation_date": 1483460742, "post_id": 41447678, "comment_id": 70102173, "body": "Looks like you could take inspiration from the <a href=\"https://mikedilger.github.io/float-cmp/float_cmp/index.html\" rel=\"nofollow noreferrer\">float_cmp</a> crate, or maybe even use it directly."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2432, "user_id": 4700841, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8ab51f7e9a70996576549b5c611a2833?s=128&d=identicon&r=PG&f=1", "display_name": "Persistence", "link": "https://stackoverflow.com/users/4700841/persistence"}, "edited": false, "score": 1, "creation_date": 1483460883, "post_id": 41447678, "comment_id": 70102271, "body": "@JamesHughes: It&#39;s probably what the OP wants, but it&#39;s definitely not what they are asking for."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1483460970, "post_id": 41447964, "comment_id": 70102331, "body": "Note: this function may be incorrect for sufficiently large floating pointer numbers/number of decimal combinations; the mantissa of <code>f64</code> being only 52 bits after all."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1483461189, "post_id": 41447964, "comment_id": 70102466, "body": "Oh, and the behaviour around 0 is possibly weird: <code>approx_equal(0.09, -0.09, 1)</code> returns <code>true</code>, because both numbers round toward 0 in Rust, even though the difference is greater than <code>0.1</code>..."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1483461195, "last_edit_date": 1483461195, "creation_date": 1483460881, "answer_id": 41447964, "question_id": 41447678, "link": "https://stackoverflow.com/questions/41447678/comparison-of-two-floats-in-rust-to-arbitrary-level-of-precision/41447964#41447964", "title": "Comparison of two floats in Rust to arbitrary level of precision", "body": "<p>From the Python documentation:</p>\n\n<blockquote>\n  <p>Note The behavior of <code>round()</code> for floats can be surprising: for example, <code>round(2.675, 2)</code> gives <code>2.67</code> instead of the expected <code>2.68</code>. This is not a bug: it\u2019s a result of the fact that most decimal fractions can\u2019t be represented exactly as a float.</p>\n</blockquote>\n\n<p>For more information, check out <a href=\"http://floating-point-gui.de/\" rel=\"noreferrer\">What Every Programmer Should Know About Floating-Point Arithmetic</a>.</p>\n\n<hr>\n\n<p><strong>If you don't understand how computers treat floating points, don't use this code</strong>. If you know what trouble you are getting yourself into:</p>\n\n<pre><code>fn approx_equal(a: f64, b: f64, decimal_places: u8) -&gt; bool {\n    let factor = 10.0f64.powi(decimal_places as i32);\n    let a = (a * factor).trunc();\n    let b = (b * factor).trunc();\n    a == b\n}\n\nfn main() {\n    assert!( approx_equal(1.234, 1.235, 1));\n    assert!( approx_equal(1.234, 1.235, 2));\n    assert!(!approx_equal(1.234, 1.235, 3));\n}\n</code></pre>\n\n<p>A <strong>non-exhaustive</strong> list of things that are known (or likely) to be broken with this code:</p>\n\n<ul>\n<li>Sufficiently large floating point numbers and/or number of decimal points</li>\n<li>Denormalized numbers</li>\n<li>NaN</li>\n<li>Infinities</li>\n<li>Values near zero (<code>approx_equal(0.09, -0.09, 1)</code>)</li>\n</ul>\n\n<hr>\n\n<p>A potential alternative is to use either a fixed-point or arbitrary-precision type, either of which are going to be slower but more logically consistent to the majority of humans.</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 14721330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4fe236e4ac69a102d6649d6bd41e81c4?s=128&d=identicon&r=PG&f=1", "display_name": "user14721330", "link": "https://stackoverflow.com/users/14721330/user14721330"}, "is_accepted": false, "score": 1, "last_activity_date": 1606504322, "creation_date": 1606504322, "answer_id": 65042686, "question_id": 41447678, "link": "https://stackoverflow.com/questions/41447678/comparison-of-two-floats-in-rust-to-arbitrary-level-of-precision/65042686#65042686", "title": "Comparison of two floats in Rust to arbitrary level of precision", "body": "<p>This one seems to work pretty well for me.</p>\n<pre><code>fn approx_equal (a:f64,b:f64,dp:u8) -&gt; bool {\n    let p:f64 = 10f64.powf(-(dp as f64));\n\n    if (a-b).abs() &lt; p {\n        return true;\n    } else {\n        return false;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4579, "user_id": 673600, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/HBWEo.jpg?s=128&g=1", "display_name": "disruptive", "link": "https://stackoverflow.com/users/673600/disruptive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5611, "favorite_count": 2, "accepted_answer_id": 41447964, "answer_count": 2, "score": 6, "last_activity_date": 1606504322, "creation_date": 1483459962, "last_edit_date": 1483461701, "question_id": 41447678, "link": "https://stackoverflow.com/questions/41447678/comparison-of-two-floats-in-rust-to-arbitrary-level-of-precision", "title": "Comparison of two floats in Rust to arbitrary level of precision", "body": "<p>How can I do a comparison at an arbitrary level of precision such that I can see that two numbers are the same? In Python, I would use a function like <a href=\"https://docs.python.org/3/library/functions.html#round\" rel=\"noreferrer\"><code>round()</code></a>, so I am looking for something equivalent in Rust.</p>\n\n<p>For example I have:</p>\n\n<pre><code>let x = 1.45555454;\nlet y = 1.45556766;\n</code></pre>\n\n<p>In my case, they are similar up to 2 decimal places. So <code>x</code> and <code>y</code> would become 1.46 for the purposes of comparison. I could format these, but that surely is slow, what is the best Rust method to check equivalence, so:</p>\n\n<pre><code>if x == y { // called when we match to 2 decimal places}\n</code></pre>\n\n<p>To further elucidate the problem and give some context. This is really for dollars and cents accuracy. So normally in <code>python</code> would use the <code>round()</code> function with all its problems. Yes I am aware of the limitations of floating point representations. There are two functions that compute amounts, I compute in dollars and need to handle the cents part to the nearest penny. </p>\n\n<p>The reason to ask the community is that I suspect that if I roll my own, it could hit performance and it's this aspect - which is I why I'm employing Rust, so here I am. Plus I saw something called <a href=\"https://doc.rust-lang.org/std/primitive.f32.html\" rel=\"noreferrer\">round()</a> in the Rust documentation, but it seems to take zero parameters unlike pythons version.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483477242, "post_id": 41447550, "comment_id": 70110917, "body": "If I understand you correctly: you want to migrate from Iron to Rouille. In addition you would like to read from a database (so you don&#39;t have your routes hard coded in the executable) and you would like to use Rouille&#39;s <code>router!</code> macro but you don&#39;t see how you could achieve that with data coming out of a db. Now: why don&#39;t you just register the routing function and <i>not</i> use the <code>router!</code> macro? E.g. in [this example}(<a href=\"https://github.com/tomaka/rouille/blob/9afdd2d42acf4ffdd3d70c8c5902d83fa8213d3f/examples/login-session.rs#L60\" rel=\"nofollow noreferrer\">github.com/tomaka/rouille/blob/&hellip;</a>) in the <code>handle_route</code> fn use a db instead of a hard wired code?"}, {"owner": {"reputation": 1751, "user_id": 3973406, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b2d94768947ebd5fd0f38ee5b3f472c5?s=128&d=identicon&r=PG&f=1", "display_name": "Dac0d3r", "link": "https://stackoverflow.com/users/3973406/dac0d3r"}, "reply_to_user": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483512449, "post_id": 41447550, "comment_id": 70121429, "body": "I don&#39;t quite follow you. The handle_route function uses  both the router! macro and still also with hardcoded routes within."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483567237, "post_id": 41447550, "comment_id": 70153762, "body": "I think I could come up with a rough example of what I mean - but before I craft that: what is your use case? Is it some sort of CMS? There is <a href=\"https://github.com/tomaka/rouille/blob/9afdd2d42acf4ffdd3d70c8c5902d83fa8213d3f/examples/database.rs\" rel=\"nofollow noreferrer\">this example</a> in rouille which explains how to interact with DBs but it is &quot;only&quot; for CRUD requests for urls like <code>&#47;note&#47;123</code>"}, {"owner": {"reputation": 1751, "user_id": 3973406, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b2d94768947ebd5fd0f38ee5b3f472c5?s=128&d=identicon&r=PG&f=1", "display_name": "Dac0d3r", "link": "https://stackoverflow.com/users/3973406/dac0d3r"}, "reply_to_user": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483661625, "post_id": 41447550, "comment_id": 70199963, "body": "you&#39;ve put quite a lot of emphasis on the word &quot;database&quot;. It&#39;s not so much about that. It&#39;s about not always hardcoding your routes - you might save them in a configuration db, or a global collection (vector etc like in my simplified example) which pluggable code would then be able to push new routes into. It&#39;s about flexibility instead of hardcoded routes."}], "answers": [{"comments": [{"owner": {"reputation": 1751, "user_id": 3973406, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b2d94768947ebd5fd0f38ee5b3f472c5?s=128&d=identicon&r=PG&f=1", "display_name": "Dac0d3r", "link": "https://stackoverflow.com/users/3973406/dac0d3r"}, "edited": false, "score": 0, "creation_date": 1483690659, "post_id": 41498286, "comment_id": 70208348, "body": "It&#39;s like I feared then. Thanks for the explanation and example anyway. By the way, would you happen to know what the following means: &quot;The pattern of the URL and the closure must be inside parentheses. This is to bypass limitations of Rust&#39;s macros system.&quot;. It is mentioned here: <a href=\"https://docs.rs/rouille/1.0.0/rouille/macro.router.html\" rel=\"nofollow noreferrer\">docs.rs/rouille/1.0.0/rouille/macro.router.html</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1751, "user_id": 3973406, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b2d94768947ebd5fd0f38ee5b3f472c5?s=128&d=identicon&r=PG&f=1", "display_name": "Dac0d3r", "link": "https://stackoverflow.com/users/3973406/dac0d3r"}, "edited": false, "score": 0, "creation_date": 1483711963, "post_id": 41498286, "comment_id": 70220666, "body": "@Dac0d3r it&#39;s hard to tell exactly. Usually something like that comes about because macros still have to adhere to Rust&#39;s grammar. Generally, this restricts what types of tokens can follow other types of tokens. In certain cases, it&#39;s impossible to determine if two tokens should be treated as one, so you have to add disambiguating markers."}, {"owner": {"reputation": 1751, "user_id": 3973406, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b2d94768947ebd5fd0f38ee5b3f472c5?s=128&d=identicon&r=PG&f=1", "display_name": "Dac0d3r", "link": "https://stackoverflow.com/users/3973406/dac0d3r"}, "edited": false, "score": 0, "creation_date": 1483754045, "post_id": 41498286, "comment_id": 70240429, "body": "Thanks - makes perfect sense now :-)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1483672027, "creation_date": 1483672027, "answer_id": 41498286, "question_id": 41447550, "link": "https://stackoverflow.com/questions/41447550/how-to-setup-routes-in-rouille-by-iterating-a-vector-of-routes/41498286#41498286", "title": "How to setup routes in Rouille by iterating a vector of routes", "body": "<p>If you examine <a href=\"https://github.com/tomaka/rouille/blob/93a8a410cbdb5f434b97783d39f9d228bf0ee7b7/src/router.rs#L74-L99\" rel=\"nofollow noreferrer\">the main source of the <code>router</code> macro</a>, it's long-ish but not supremely complicated:</p>\n\n<pre><code>($request:expr, $(($method:ident) ($($pat:tt)+) =&gt; $value:block,)* _ =&gt; $def:expr) =&gt; {\n    {\n        let request = &amp;$request;\n\n        // ignoring the GET parameters (everything after `?`)\n        let request_url = request.url();\n        let request_url = {\n            let pos = request_url.find('?').unwrap_or(request_url.len());\n            &amp;request_url[..pos]\n        };\n\n        let mut ret = None;\n\n        $({\n            if ret.is_none() &amp;&amp; request.method() == stringify!($method) {\n                ret = router!(__check_pattern request_url $value $($pat)+);\n            }\n        })+\n\n        if let Some(ret) = ret {\n            ret\n        } else {\n            $def\n        }\n    }\n};\n</code></pre>\n\n<p>In words, it takes a request, zero-or-more patterns to match, and a default. It gets ahold of the URL, then dispatches to the other arms of the macro to see if the URL matches the path and does some recursive trickery to define some variables with components of the path. Whichever arm matches first will set the return value, and if nothing matches, the default will be used.</p>\n\n<p>Unfortunately, the macro expects <code>ident</code>s for the methods and the paths, so basically you cannot use it with expressions. This means we can't pass in variables or literals like <code>\"foo\"</code>. This makes it very difficult for you.</p>\n\n<p>So, we do what all good programmers do: copy and paste the code. Lifting chunks out of the macro and repurpose them:</p>\n\n<pre><code>#[macro_use]\nextern crate rouille;\n\nuse rouille::Request;\nuse rouille::Response;\n\nstruct Route(&amp;'static str, &amp;'static str, fn(&amp;Request) -&gt; Response);\n\nfn main() {\n    let routes = [\n        Route(\"GET\", \"/one\", do_one),\n        Route(\"GET\", \"/two\", do_two),\n    ];\n\n    rouille::start_server(\"0.0.0.0:9080\", move |request| {\n        let mut result = None;\n\n        let request = &amp;request;\n\n        // ignoring the GET parameters (everything after `?`)\n        let request_url = request.url();\n        let request_url = {\n            let pos = request_url.find('?').unwrap_or(request_url.len());\n            &amp;request_url[..pos]\n        };\n\n        for &amp;Route(method, path, f) in &amp;routes {\n            if result.is_none() {\n                // This checking of the path is terrible, limited, and hacky\n                if request.method() == method &amp;&amp; request_url.ends_with(path) {\n                    result = Some(f(request));\n                }\n            }\n        }\n\n        result.unwrap_or_else(|| Response::text(\"Default!\"))\n    });\n}\n\nfn do_one(_: &amp;Request) -&gt; Response {\n    Response::text(\"hello world one\")\n}\n\nfn do_two(_: &amp;Request) -&gt; Response {\n    Response::text(\"hello world two\")\n}\n</code></pre>\n\n<p>This runs the various handlers for <code>/one</code>, <code>/two</code> and everything else.</p>\n\n<hr>\n\n<p>I'm no expert in Rouille, in fact I've never used it before today, but it certainly seems like you are trying to use it for something beyond what it is currently designed for. Perhaps this is deliberate and the authors are attempting to present a very opinionated tool. Perhaps it is accidental and they haven't thought of this use case. Perhaps it is temporary, and they just haven't gotten around to it.</p>\n\n<p>Either way, I'd suggest asking the authors. If it's not an intended use-case, they can update the project docs to clearly state so. Otherwise they might create issues to implement the feature, and you could be instrumental in helping design it.</p>\n"}], "owner": {"reputation": 1751, "user_id": 3973406, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b2d94768947ebd5fd0f38ee5b3f472c5?s=128&d=identicon&r=PG&f=1", "display_name": "Dac0d3r", "link": "https://stackoverflow.com/users/3973406/dac0d3r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 261, "favorite_count": 0, "accepted_answer_id": 41498286, "answer_count": 1, "score": 0, "last_activity_date": 1483672027, "creation_date": 1483459506, "last_edit_date": 1483459797, "question_id": 41447550, "link": "https://stackoverflow.com/questions/41447550/how-to-setup-routes-in-rouille-by-iterating-a-vector-of-routes", "title": "How to setup routes in Rouille by iterating a vector of routes", "body": "<p>The <a href=\"https://github.com/tomaka/rouille/blob/master/examples/hello-world.rs\" rel=\"nofollow noreferrer\">Rouille hello world example</a> shows how to use the <code>router!</code> macro for a fixed set of routes.</p>\n\n<p>The following example code illustrates the need to be able to \"bootstrap\" routes from a database or from pluggable code - which I've currently been able to do with the Iron web framework:</p>\n\n<pre><code>pub struct Route {\n    pub http_method: String,\n    pub url_path: String,\n    pub callback_func: fn(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt;,\n}\n\nimpl Route {\n    pub fn new(m: String, u: String, f: fn(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt;) -&gt; Route {\n        Route {\n            http_method: m,\n            url_path: u,\n            callback_func: f,\n        }\n    }\n}\n\nfn main() {\n    // router is an Iron middleware\n    let mut router = Router::new();\n\n    // prepare routes for bootstrapping into the Iron router\n    let r1 = Route::new(\"get\".to_string(), \"/*\".to_string(), my_callback_func);\n    let r2 = Route::new(\"get\".to_string(), \"/\".to_string(), my_callback_func);\n\n    let mut routes = Vec::new();\n    routes.push(r1);\n    routes.push(r2);\n\n    for route in routes.iter_mut() {\n        if route.http_method == \"get\" {\n            // passes each route to the Iron router\n            router.get(&amp;route.url_path, (&amp;*route).callback_func);\n        } // else if, put, post, delete...\n    }\n\n    Iron::new(router).http(\"localhost:3000\").unwrap();\n}\n\nfn my_callback_func(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    //...\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=526cd1a0d0cd0307a51cd68a6972d70b&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">(Playground)</a></p>\n\n<p>Although I'm reading up on macros in Rust, I do not have a good enough understanding of <a href=\"https://github.com/tomaka/rouille/blob/master/src/router.rs\" rel=\"nofollow noreferrer\">Rouille's <code>router!</code> macro</a>, Rust or macros in general, to figure out how to achieve the equivalent with Rouille.</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 0, "creation_date": 1483456875, "post_id": 41444297, "comment_id": 70099668, "body": "<code>read</code> itself is chunked, isn&#39;t it? You can read N bytes at a time. I&#39;m not sure if that correlates to exactly N bytes downloaded, or if it&#39;s just a buffered read. But that shouldn&#39;t matter much, as long as you properly save the data."}], "answers": [{"tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 8, "last_activity_date": 1536456105, "last_edit_date": 1536456105, "creation_date": 1483472030, "answer_id": 41451006, "question_id": 41444297, "link": "https://stackoverflow.com/questions/41444297/how-to-download-a-large-file-with-hyper-and-resume-on-error/41451006#41451006", "title": "How to download a large file with hyper and resume on error?", "body": "<blockquote>\n  <p>Is there any way with hyper to run some function for each chunk of data received?</p>\n</blockquote>\n\n<p>Hyper's <a href=\"https://docs.rs/hyper/0.9.12/hyper/client/response/struct.Response.html\" rel=\"nofollow noreferrer\"><code>Response</code></a> implements <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\"><code>Read</code></a>. It means that <code>Response</code> is a stream and you can read arbitrary chunks of data from it as you would usually do with a stream.</p>\n\n<p>For what it's worth, here's a piece of code I use to download large files from ICECat. I'm using the <code>Read</code> interface in order to display the download progress in the terminal.</p>\n\n<p>The variable <code>response</code> here is an instance of Hyper's <code>Response</code>.</p>\n\n<pre><code>{\n    let mut file = try_s!(fs::File::create(&amp;tmp_path));\n    let mut deflate = try_s!(GzDecoder::new(response));\n\n    let mut buf = [0; 128 * 1024];\n    let mut written = 0;\n    loop {\n        status_line! (\"icecat_fetch] \" (url) \": \" (written / 1024 / 1024) \" MiB.\");\n        let len = match deflate.read(&amp;mut buf) {\n            Ok(0) =&gt; break,  // EOF.\n            Ok(len) =&gt; len,\n            Err(ref err) if err.kind() == io::ErrorKind::Interrupted =&gt; continue,\n            Err(err) =&gt; return ERR!(\"{}: Download failed: {}\", url, err),\n        };\n        try_s!(file.write_all(&amp;buf[..len]));\n        written += len;\n    }\n}\n\ntry_s!(fs::rename(tmp_path, target_path));\nstatus_line_clear();\n</code></pre>\n\n<blockquote>\n  <p>I want to download large files (500mb) with hyper, and be able to resume if the download fails.</p>\n</blockquote>\n\n<p>This is usually implemented with the HTTP \"Range\" header (cf. <a href=\"https://tools.ietf.org/html/rfc7233\" rel=\"nofollow noreferrer\">RFC 7233</a>).</p>\n\n<p>Not every server out there supports the \"Range\" header. I've seen a lot of servers with a custom HTTP stack and without the proper \"Range\" support, or with the \"Range\" header disabled for some reason. So skipping the Hyper's <code>Response</code> chunks might be a necessary fallback.</p>\n\n<p>But if you want to speed things up and save traffic then the primary means of resuming a stopped download should be by using the \"Range\" header.</p>\n\n<hr>\n\n<p>P.S. With Hyper 0.12 the response body returned by the Hyper is a <a href=\"https://docs.rs/futures/0.1.24/futures/stream/trait.Stream.html\" rel=\"nofollow noreferrer\"><code>Stream</code></a> and to run some function for each chunk of data received we can use the <code>for_each</code> stream combinator:</p>\n\n<pre><code>extern crate futures;\nextern crate futures_cpupool;\nextern crate hyper; // 0.12\nextern crate hyper_rustls;\n\nuse futures::Future;\nuse futures_cpupool::CpuPool;\nuse hyper::rt::Stream;\nuse hyper::{Body, Client, Request};\nuse hyper_rustls::HttpsConnector;\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let url = \"https://steemitimages.com/DQmYWcEumaw1ajSge5PcGpgPpXydTkTcqe1daF4Ro3sRLDi/IMG_20130103_103123.jpg\";\n\n    // In real life we'd want an asynchronous reactor, such as the tokio_core, but for a short example the `CpuPool` should do.\n    let pool = CpuPool::new(1);\n    let https = HttpsConnector::new(1);\n    let client = Client::builder().executor(pool.clone()).build(https);\n\n    // `unwrap` is used because there are different ways (and/or libraries) to handle the errors and you should pick one yourself.\n    // Also to keep this example simple.\n    let req = Request::builder().uri(url).body(Body::empty()).unwrap();\n    let fut = client.request(req);\n\n    // Rebinding (shadowing) the `fut` variable allows us (in smart IDEs) to more easily examine the gradual weaving of the types.\n    let fut = fut.then(move |res| {\n        let res = res.unwrap();\n        println!(\"Status: {:?}.\", res.status());\n        let body = res.into_body();\n        // `for_each` returns a `Future` that we must embed into our chain of futures in order to execute it.\n        body.for_each(move |chunk| {println!(\"Got a chunk of {} bytes.\", chunk.len()); Ok(())})\n    });\n\n    // Handle the errors: we need error-free futures for `spawn`.\n    let fut = fut.then(move |r| -&gt; Result&lt;(), ()&gt; {r.unwrap(); Ok(())});\n\n    // Spawning the future onto a runtime starts executing it in background.\n    // If not spawned onto a runtime the future will be executed in `wait`.\n    // \n    // Note that we should keep the future around.\n    // To save resources most implementations would *cancel* the dropped futures.\n    let _fut = pool.spawn(fut);\n\n    thread::sleep (Duration::from_secs (1));  // or `_fut.wait()`.\n}\n</code></pre>\n"}], "owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2694, "favorite_count": 4, "accepted_answer_id": 41451006, "answer_count": 1, "score": 6, "last_activity_date": 1536456105, "creation_date": 1483448999, "last_edit_date": 1483451593, "question_id": 41444297, "link": "https://stackoverflow.com/questions/41444297/how-to-download-a-large-file-with-hyper-and-resume-on-error", "title": "How to download a large file with hyper and resume on error?", "body": "<p>I want to download large files (500mb) with hyper, and be able to resume if the download fails. </p>\n\n<p>Is there any way with hyper to run some function for each chunk of data received? The <code>send()</code> method returns a <code>Result&lt;Response&gt;</code>, but I can't find any methods on <a href=\"http://hyper.rs/hyper/0.8.0/hyper/client/response/struct.Response.html\" rel=\"nofollow noreferrer\">Response</a> that return an iterator over chunks. Ideally I'd be able to do something like:</p>\n\n<pre><code>client.get(&amp;url.to_string())\n    .send()\n    .map(|mut res| {\n        let mut chunk = String::new();\n        // write this chunk to disk\n    });\n</code></pre>\n\n<p>Is this possible, or will <code>map</code> only be called once hyper has downloaded the entire file?</p>\n"}, {"tags": ["linux", "rust", "dbus"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1483446702, "post_id": 41442745, "comment_id": 70093206, "body": "What is the type of <code>response</code> in your function above? Because the compiler seems to imply it&#39;s <code>()</code>."}, {"owner": {"reputation": 569, "user_id": 1286132, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/8aD2x.jpg?s=128&g=1", "display_name": "Joseph Roberts", "link": "https://stackoverflow.com/users/1286132/joseph-roberts"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483447876, "post_id": 41442745, "comment_id": 70093974, "body": "@MatthieuM. I added this line <code>let x: () = response;</code> and the error is <code>expected (), found struct `dbus::Message`</code>. <code>response</code> is a <code>dbus::Message</code>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1483448335, "post_id": 41442745, "comment_id": 70094244, "body": "Ah, my mistake, digging further it appears the <code>Get</code> is recursively applied until it hits the <code>Variant&lt;()&gt;</code> and this is where the <code>()</code> comes from."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483449264, "post_id": 41442745, "comment_id": 70094842, "body": "I got it to compile when replacing the assignment of <code>test</code> with this line: <code>let test: Array&lt;&amp;str, _&gt;  = response.get1().unwrap();</code> (got that from <a href=\"https://docs.rs/crate/dbus/0.4.1/source/examples/client.rs\" rel=\"nofollow noreferrer\">this code example</a>). Does that help?"}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483449682, "post_id": 41442745, "comment_id": 70095140, "body": "ah, apparently this leads to the same printout: <code>Array(Iter(&quot;Unknown?!&quot;, &quot;Unknown?!&quot;, &quot;Unknown?!&quot;, &quot;Unknown?!&quot;), PhantomData)</code>.."}], "answers": [{"tags": [], "owner": {"reputation": 569, "user_id": 1286132, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/8aD2x.jpg?s=128&g=1", "display_name": "Joseph Roberts", "link": "https://stackoverflow.com/users/1286132/joseph-roberts"}, "is_accepted": false, "score": 0, "last_activity_date": 1483608341, "creation_date": 1483608341, "answer_id": 41481274, "question_id": 41442745, "link": "https://stackoverflow.com/questions/41442745/the-trait-bound-dbusargget-is-not-satisfied-when-using-the-rust-dbus-libra/41481274#41481274", "title": "The trait bound `dbus::arg::Get` is not satisfied when using the Rust DBUS library", "body": "<p>Here's how to fix it by modifying the first example:</p>\n\n<pre><code>let test: dbus::arg::Dict&lt;&amp;str, dbus::arg::Dict&lt;&amp;str, dbus::arg::Variant&lt;dbus::arg::Iter&gt;, _&gt;, _&gt; =\nresponse.get1().unwrap();\n\nfor (k1, v1) in test {\n    println!(\"outer key = {:?}\", k1);\n    for (k2, v2) in v1 {\n        println!(\"    inner key = {:?}, inner type = {:?}, string value = {:?}\", k2, v2, v2.0.clone().get::&lt;&amp;str&gt;());\n    }\n}\n</code></pre>\n\n<p>You need to use <code>Variant&lt;Iter&gt;</code> if you don't know what's inside your variant when you get it. You will then have to use <code>get::&lt;&amp;str&gt;(), get::&lt;u32&gt;()</code>, etc to retrieve the actual value inside the variant.</p>\n"}], "owner": {"reputation": 569, "user_id": 1286132, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/8aD2x.jpg?s=128&g=1", "display_name": "Joseph Roberts", "link": "https://stackoverflow.com/users/1286132/joseph-roberts"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 127, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1483608341, "creation_date": 1483443770, "last_edit_date": 1483553429, "question_id": 41442745, "link": "https://stackoverflow.com/questions/41442745/the-trait-bound-dbusargget-is-not-satisfied-when-using-the-rust-dbus-libra", "title": "The trait bound `dbus::arg::Get` is not satisfied when using the Rust DBUS library", "body": "<p>I am trying to use <a href=\"https://github.com/diwic/dbus-rs\" rel=\"nofollow noreferrer\">the dbus-rs</a> library to get connection info from NetworkManager using the <code>GetSettings</code> method. I used D-Feet to try out the function which has a signature of <code>GetSettings() -&gt; (Dict of {String, Dict of {String, Variant} } settings)</code>, the data returned by D-Feet is below: </p>\n\n<pre><code>{'802-11-wireless': {'mac-address': [228, 179, 24, 77, 64, 139],\n                     'mac-address-blacklist': [],\n                     'mode': 'infrastructure',\n                     'security': '802-11-wireless-security',\n                     'seen-bssids': ['02:1D:AA:80:1B:DA', '02:1D:AA:80:1D:12'],\n                     'ssid': [80,\n                              108,\n                              111,\n                              117,\n                              103,\n                              104,\n                              32,\n                              87,\n                              97,\n                              121,\n                              32,\n                              67,\n                              97,\n                              102,\n                              101]},\n '802-11-wireless-security': {'auth-alg': 'open',\n                              'group': [],\n                              'key-mgmt': 'wpa-psk',\n                              'pairwise': [],\n                              'proto': []},\n 'connection': {'id': 'Plough Way Cafe',\n                'permissions': [],\n                'secondaries': [],\n                'timestamp': 1479304123,\n                'type': '802-11-wireless',\n                'uuid': 'ff9b7028-0911-491a-bfe8-53cba76069da'},\n 'ipv4': {'address-data': [],\n          'addresses': [],\n          'dns': [],\n          'dns-search': [],\n          'method': 'auto',\n          'route-data': [],\n          'routes': []},\n 'ipv6': {'address-data': [],\n          'addresses': [],\n          'dns': [],\n          'dns-search': [],\n          'method': 'auto',\n          'route-data': [],\n          'routes': []}}\n</code></pre>\n\n<p>and my code:</p>\n\n<pre><code>extern crate dbus;\n\nfn main() {\n    let message = dbus::Message::new_method_call(\"org.freedesktop.NetworkManager\",\n                                                 \"/org/freedesktop/NetworkManager/Settings/0\",\n                                                 \"org.freedesktop.NetworkManager.Settings.\\\n                                                  Connection\",\n                                                 \"GetSettings\")\n        .unwrap();\n\n    let response = dbus::Connection::get_private(dbus::BusType::System)\n        .unwrap()\n        .send_with_reply_and_block(message, 2000)\n        .unwrap();\n\n    println!(\"{:?}\", response);\n\n    let test: dbus::arg::Dict&lt;&amp;str, dbus::arg::Dict&lt;&amp;str, dbus::arg::Variant&lt;()&gt;, _&gt;, _&gt; =\n        response.get1().unwrap();\n\n    println!(\"{:?}\", test);\n}\n</code></pre>\n\n<p>which results in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `(): dbus::arg::Get&lt;'_&gt;` is not satisfied\n  --&gt; src/main.rs:20:18\n   |\n20 |         response.get1().unwrap();\n   |                  ^^^^ the trait `dbus::arg::Get&lt;'_&gt;` is not implemented for `()`\n   |\n   = note: required because of the requirements on the impl of `dbus::arg::Get&lt;'_&gt;` for `dbus::arg::Variant&lt;()&gt;`\n   = note: required because of the requirements on the impl of `dbus::arg::Get&lt;'_&gt;` for `dbus::arg::Dict&lt;'_, &amp;str, dbus::arg::Variant&lt;()&gt;, dbus::arg::Iter&lt;'_&gt;&gt;`\n   = note: required because of the requirements on the impl of `dbus::arg::Get&lt;'_&gt;` for `dbus::arg::Dict&lt;'_, &amp;str, dbus::arg::Dict&lt;'_, &amp;str, dbus::arg::Variant&lt;()&gt;, dbus::arg::Iter&lt;'_&gt;&gt;,     dbus::arg::Iter&lt;'_&gt;&gt;`\n</code></pre>\n\n<p>How can I get the connection info?</p>\n\n<p>I thought the whole point of <code>Variant</code> is that it can hold different types of data? What am I doing wrong?</p>\n\n<p>If I substitute the <code>Variant</code> type <code>()</code> with <code>&amp;str</code> it prints out <code>Dict(Iter(\"Unknown?!\", \"Unknown?!\", \"Unknown?!\", \"Unknown?!\", \"Unknown?!\"), PhantomData)</code>. What is the <code>Unknown?!</code> value?</p>\n\n<p>The <a href=\"https://docs.rs/dbus/0.4.1/dbus/arg/struct.Dict.html\" rel=\"nofollow noreferrer\">API for <code>Dict</code></a> also states</p>\n\n<blockquote>\n  <p>Creates a new <code>Dict</code> from an iterator. The iterator is consumed when appended.</p>\n</blockquote>\n\n<p>How/should I use this instead? I did manage to make some progress, perhaps naively?</p>\n\n<p>My code now looks like this:</p>\n\n<pre><code>extern crate dbus;\nextern crate network_manager;\n\n#[derive(Default, Debug)]\nstruct Connection {\n    path: String,\n    id: String,\n    uuid: String,\n    ssid: String,\n    interface: String,\n    security: String,\n    psk: String, // Only used when creating a new connection\n}\n\nfn main() {\n    let connection = Connection {\n        path: \"/org/freedesktop/NetworkManager/Settings/0\".to_string(),\n        ..Default::default()\n    };\n\n    let message = dbus::Message::new_method_call(\"org.freedesktop.NetworkManager\",\n                                                 connection.path.clone(),\n                                                 \"org.freedesktop.NetworkManager.Settings.\\\n                                                  Connection\",\n                                                 \"GetSettings\")\n        .unwrap();\n\n    let response = dbus::Connection::get_private(dbus::BusType::System)\n        .unwrap()\n        .send_with_reply_and_block(message, 2000)\n        .unwrap();\n\n    let mut outer_array_iter = response.iter_init().recurse(97).unwrap();\n    loop {\n        let mut outer_dict_iter = outer_array_iter.recurse(101).unwrap();\n        outer_dict_iter.next();\n\n        let mut inner_array_iter = outer_dict_iter.recurse(97).unwrap();\n        loop {\n            let mut inner_dict_iter = inner_array_iter.recurse(101).unwrap();\n\n            let key = inner_dict_iter.read::&lt;&amp;str&gt;().unwrap();\n            match key {\n                \"id\" =&gt; {\n                    let val: dbus::arg::Variant&lt;&amp;str&gt; = inner_dict_iter.read().unwrap();\n                    println!(\"id {:?}\", val);\n                }\n                \"uuid\" =&gt; {\n                    let val: dbus::arg::Variant&lt;&amp;str&gt; = inner_dict_iter.read().unwrap();\n                    println!(\"uuid {:?}\", val);\n                }\n                \"ssid\" =&gt; {\n                    let val: dbus::arg::Variant&lt;dbus::arg::Array&lt;i32, _&gt;&gt; = inner_dict_iter.read()\n                        .unwrap();\n                    println!(\"ssid {:?}\", val);\n                }\n                \"type\" =&gt; {\n                    let val: dbus::arg::Variant&lt;&amp;str&gt; = inner_dict_iter.read().unwrap();\n                    println!(\"interface {:?}\", val);\n                }\n                \"security\" =&gt; {\n                    let val: dbus::arg::Variant&lt;&amp;str&gt; = inner_dict_iter.read().unwrap();\n                    println!(\"security {:?}\", val);\n                }\n                _ =&gt; (),\n            }\n\n            if !(inner_array_iter.next()) {\n                break;\n            }\n        }\n\n        if !(outer_array_iter.next()) {\n            break;\n        }\n    }\n\n    println!(\"{:?}\", connection);\n}\n</code></pre>\n\n<p>this prints out:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>id Variant(\"Plough Way Cafe\")\nuuid Variant(\"e078808e-626f-4be9-bbb4-5e48b1d626de\")\ninterface Variant(\"802-11-wireless\")\nssid Variant(Array(Iter(\"u8\", \"u8\", \"u8\", \"u8\", \"u8\", \"u8\", \"u8\", \"u8\"), PhantomData))\nsecurity Variant(\"802-11-wireless-security\")\nConnection { path: \"/org/freedesktop/NetworkManager/Settings/0\", id: \"\", uuid: \"\", ssid: \"\", interface: \"\", security: \"\", psk: \"\" }\n</code></pre>\n\n<p>How can I get the data out of <code>Variant</code> and into my <code>connection</code> struct? Is there a better way to use iterators as this feels very fragile?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 0, "creation_date": 1603469956, "post_id": 41440621, "comment_id": 114057020, "body": "Is there a way to  direct the default-features setup to be true or false based upon the enabled feature?"}], "tags": [], "owner": {"reputation": 15070, "user_id": 388427, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/a43a07bc90818154ff9c8d4af7c23502?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/388427/sergey"}, "is_accepted": true, "score": 6, "last_activity_date": 1483436974, "creation_date": 1483436974, "answer_id": 41440621, "question_id": 41439912, "link": "https://stackoverflow.com/questions/41439912/rust-cargo-how-to-use-different-features-for-a-dep-when-a-particular-feature-is/41440621#41440621", "title": "Rust cargo: how to use different features for a dep when a particular feature is enabled?", "body": "<p>It was discussed <a href=\"https://github.com/rust-lang/cargo/issues/633\" rel=\"noreferrer\">here</a>. One can do it with <code>/</code>.</p>\n\n<pre><code>[features]\ndefault = []\npy2 = [\"cpython\", \"cpython/python27-sys\"]\npy3 = [\"cpython\", \"cpython/python3-sys\"]\nunstable = []\n\n[dependencies.cpython]\n# git = \"https://github.com/dgrunwald/rust-cpython.git\"\ndefault-features = false\noptional = true\n</code></pre>\n\n<p>I've seen nothing about it in documentation or official pages.</p>\n"}], "owner": {"reputation": 15070, "user_id": 388427, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/a43a07bc90818154ff9c8d4af7c23502?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/388427/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 504, "favorite_count": 1, "accepted_answer_id": 41440621, "answer_count": 1, "score": 5, "last_activity_date": 1483436974, "creation_date": 1483434471, "question_id": 41439912, "link": "https://stackoverflow.com/questions/41439912/rust-cargo-how-to-use-different-features-for-a-dep-when-a-particular-feature-is", "title": "Rust cargo: how to use different features for a dep when a particular feature is enabled?", "body": "<p>For example I define 2 features without dependencies:</p>\n\n<pre><code>[features]\ndefault = []\npy2 = []\npy3 = []\n</code></pre>\n\n<p>Based on selected feature (<code>--features py3</code>) I want to enable different features for a dependency (<code>cpython</code>):</p>\n\n<pre><code>[dependencies.cpython]\ndefault-features = false\n# features = [\"python27-sys\"]      I want to select this if py2 is enabled\nfeatures = [\"python3-sys\"]\noptional = true\n</code></pre>\n\n<p>Can I do this? Or simply can I select features for a dependency from command line as well?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 106, "user_id": 612944, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/098e8e528954dccf6a535634d3897a5c?s=128&d=identicon&r=PG", "display_name": "skies457", "link": "https://stackoverflow.com/users/612944/skies457"}, "is_accepted": true, "score": 1, "last_activity_date": 1484747972, "last_edit_date": 1484747972, "creation_date": 1483424321, "answer_id": 41437536, "question_id": 41437275, "link": "https://stackoverflow.com/questions/41437275/read-only-dereference-in-rust/41437536#41437536", "title": "Read-only dereference in Rust", "body": "<p>Replacing <code>ref</code> with <code>&amp;</code> works without dereferencing.</p>\n\n<pre><code>use List::*;\n\nenum List {\n    Cons(i32, Box&lt;List&gt;),\n    Nil,\n}\n\nimpl List {\n    fn stringify(&amp;self) -&gt; String {\n        match *self {\n            Cons(a, ref tail) =&gt; format!(\"{}, {}\", a, tail.stringify()),\n            Nil =&gt; format!(\"Nil\")\n        }\n    }\n}\n\nfn dissolve_number(num: i32) -&gt; List {\n    match num {\n        0 =&gt; Nil,\n        n =&gt; Cons(n % 10, Box::new(dissolve_number(n / 10)))\n    }\n}\n\nfn add_with_inc(a: &amp;List, b: &amp;List, inc: bool) -&gt; List {\n    match (a, b, inc) {\n        (&amp;Nil, &amp;Nil, false) =&gt; Nil,\n        (&amp;Nil, &amp;Nil, true) =&gt; Cons(1, Box::new(Nil)),\n        (&amp;Nil, &amp;Cons(j, ref btail), false) =&gt; Cons(j, Box::new(add_with_inc(&amp;Nil, btail, false))),\n        (&amp;Nil, &amp;Cons(j, ref btail), true) =&gt; Cons((j + 1) % 10, Box::new(add_with_inc(&amp;Nil, btail, (j + 1) &gt;= 10))),\n        (&amp;Cons(i, ref atail), &amp;Nil, false) =&gt; Cons(i, Box::new(add_with_inc(atail, &amp;Nil, false))),\n        (&amp;Cons(i, ref atail), &amp;Nil, true) =&gt; Cons((i + 1) % 10, Box::new(add_with_inc(atail, &amp;Nil, (i + 1) &gt;= 10))),\n        (&amp;Cons(i, ref atail), &amp;Cons(j, ref btail), false) =&gt; Cons((i + j) % 10, Box::new(add_with_inc(atail, btail, (i + j) &gt;= 10))),\n        (&amp;Cons(i, ref atail), &amp;Cons(j, ref btail), true) =&gt; Cons((i + j + 1) % 10, Box::new(add_with_inc(atail, btail, (i + j + 1) &gt;= 10)))\n    }\n}\n\nfn add(a: &amp;List, b: &amp;List) -&gt; List {\n    add_with_inc(a, b, false)\n}\n\nfn main() {\n    let (la, lb) = (dissolve_number(123), dissolve_number(223));\n    let lsum = add(&amp;la, &amp;lb);\n    println!(\"{}\", lsum.stringify());\n}\n</code></pre>\n"}], "owner": {"reputation": 106, "user_id": 612944, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/098e8e528954dccf6a535634d3897a5c?s=128&d=identicon&r=PG", "display_name": "skies457", "link": "https://stackoverflow.com/users/612944/skies457"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "accepted_answer_id": 41437536, "answer_count": 1, "score": 1, "last_activity_date": 1484747972, "creation_date": 1483422943, "last_edit_date": 1484747957, "question_id": 41437275, "link": "https://stackoverflow.com/questions/41437275/read-only-dereference-in-rust", "title": "Read-only dereference in Rust", "body": "<p>I'm trying to add up digits one by one in two linked lists:</p>\n\n<pre><code>use List::*;\n\nenum List {\n    Cons(i32, Box&lt;List&gt;),\n    Nil,\n}\n\nimpl List {\n    fn stringify(&amp;self) -&gt; String {\n        match *self {\n            Cons(a, ref tail) =&gt; format!(\"{}, {}\", a, tail.stringify()),\n            Nil =&gt; format!(\"Nil\")\n        }\n    }\n}\n\nfn dissolve_number(num: i32) -&gt; List {\n    match num {\n        0 =&gt; Nil,\n        n =&gt; Cons(n % 10, Box::new(dissolve_number(n / 10)))\n    }\n}\n\nfn add_with_inc(a: &amp;List, b: &amp;List, inc: bool) -&gt; List {\n    match (*a, *b, inc) {\n        (Nil, Nil, false) =&gt; Nil,\n        (Nil, Nil, true) =&gt; Cons(1, Box::new(Nil)),\n        (Nil, Cons(j, ref btail), false) =&gt; Cons(j, Box::new(add_with_inc(&amp;Nil, btail, false))),\n        (Nil, Cons(j, ref btail), true) =&gt; Cons((j + 1) % 10, Box::new(add_with_inc(&amp;Nil, btail, (j + 1) &gt;= 10))),\n        (Cons(i, ref atail), Nil, false) =&gt; Cons(i, Box::new(add_with_inc(atail, &amp;Nil, false))),\n        (Cons(i, ref atail), Nil, true) =&gt; Cons((i + 1) % 10, Box::new(add_with_inc(atail, &amp;Nil, (i + 1) &gt;= 10))),\n        (Cons(i, ref atail), Cons(j, ref btail), false) =&gt; Cons((i + j) % 10, Box::new(add_with_inc(atail, btail, (i + j) &gt;= 10))),\n        (Cons(i, ref atail), Cons(j, ref btail), true) =&gt; Cons((i + j + 1) % 10, Box::new(add_with_inc(atail, btail, (i + j + 1) &gt;= 10)))\n    }\n}\n\nfn add(a: &amp;List, b: &amp;List) -&gt; List {\n    add_with_inc(a, b, false)\n}\n\nfn main() {\n    let (la, lb) = (dissolve_number(123), dissolve_number(223));\n    let lsum = add(&amp;la, &amp;lb);\n    println!(\"{}\", lsum.stringify());\n}\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; add_two_numbers.rs:25:12\n   |\n25 |     match (*a, *b, inc) {\n   |            ^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; add_two_numbers.rs:25:16\n   |\n25 |     match (*a, *b, inc) {\n   |                ^^ cannot move out of borrowed content\n</code></pre>\n\n<p>After searching, I discovered that the error was due to dereferencing a borrowed variable. Is there any way to obtain a read-only copy of <code>List</code> from a reference?</p>\n\n<p>I modified the code a bit, but I still can't get it working...</p>\n\n<pre><code>fn add_with_inc(a: &amp;List, b: &amp;List, inc: bool) -&gt; List {\n    match (a, b, inc) {\n        (ref Nil, ref Nil, false) =&gt; Nil,\n        (ref Nil, ref Nil, true) =&gt; Cons(1, Box::new(Nil)),\n        (ref Nil, ref Cons(j, ref btail), false) =&gt; Cons(j, Box::new(add_with_inc(&amp;Nil, btail, false))),\n        (ref Nil, ref Cons(j, ref btail), true) =&gt; Cons((j + 1) % 10, Box::new(add_with_inc(&amp;Nil, btail, (j + 1) &gt;= 10))),\n        (ref Cons(i, ref atail), ref Nil, false) =&gt; Cons(i, Box::new(add_with_inc(atail, &amp;Nil, false))),\n        (ref Cons(i, ref atail), ref Nil, true) =&gt; Cons((i + 1) % 10, Box::new(add_with_inc(atail, &amp;Nil, (i + 1) &gt;= 10))),\n        (ref Cons(i, ref atail), ref Cons(j, ref btail), false) =&gt; Cons((i + j) % 10, Box::new(add_with_inc(atail, btail, (i + j) &gt;= 10))),\n        (ref Cons(i, ref atail), ref Cons(j, ref btail), true) =&gt; Cons((i + j + 1) % 10, Box::new(add_with_inc(atail, btail, (i + j + 1) &gt;= 10)))\n    }\n}\n</code></pre>\n"}, {"tags": ["reference", "rust", "immutability"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483431620, "post_id": 41436525, "comment_id": 70084360, "body": "Just to clarify, <code>MyStruct</code> is somehow akin to a map, and the ~20 lines of code you have are used to fetch the reference to <code>Bar</code>? It may because it&#39;s morning but I&#39;ve got some difficulties seeing exactly how things play out here, so it&#39;s hard to evaluate the potential answers I come up with... could you come up with a MCVE?"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483439667, "post_id": 41436525, "comment_id": 70088974, "body": "Added an example of a function where I needed this. Would have posted something simpler and self contained - but over simplifying the problem <i>may</i> use some feature of Rust that can&#39;t be used in more involved cases."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1483444792, "post_id": 41436525, "comment_id": 70092026, "body": "Now with your example it&#39;s clearer, thanks. I&#39;ve had the same issues in C++ and regularly used <code>const_cast</code> in a similar fashion to your example; I&#39;m interested to see what people will manage to do, maybe something with traits (with associated types) is available to abstract over the mutability."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483922058, "post_id": 41436525, "comment_id": 70284173, "body": "I&#39;ve edited your code to correct most usages of &quot;constant&quot; to &quot;immutable&quot;. A constant is something that can be evaluated at compile time, and is different than (im)mutability.. You should apply the same changes to your code example, which I&#39;ve left alone."}, {"owner": {"reputation": 6527, "user_id": 1422197, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6bcbddbd9c7b31aaff8cf25a356bc96c?s=128&d=identicon&r=PG", "display_name": "gnzlbg", "link": "https://stackoverflow.com/users/1422197/gnzlbg"}, "edited": false, "score": 0, "creation_date": 1488297303, "post_id": 41436525, "comment_id": 72163760, "body": "Can&#39;t you put your logic in a trait that is generic over <code>Self</code>, and then implement it for <code>&amp;MyStruct</code> and <code>&amp;mut MyStruct</code>? For example, just write <code>trait FooGetter { fn get_foo(Self) -&gt; Self { &#47;* generic logic *&#47; } }</code> and then <code>impl FooGetter for &amp;MyStruct {}</code> and <code>impl FooGetter for &amp;mut MyStruct {}</code>. I mean, you just want to abstract over two different types, if they were unrelated, you would just use a trait. Why not do the same here? You&#39;ll need to import the trait everywhere to use it, but you can use a prelude for that."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 6527, "user_id": 1422197, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6bcbddbd9c7b31aaff8cf25a356bc96c?s=128&d=identicon&r=PG", "display_name": "gnzlbg", "link": "https://stackoverflow.com/users/1422197/gnzlbg"}, "edited": false, "score": 0, "creation_date": 1488298613, "post_id": 41436525, "comment_id": 72164742, "body": "@gnzlbg not sure? could you show an example of this? Heres a real-world example (the crate builds without any deps) - <a href=\"https://gitlab.com/ideasman42/bmesh-rs/blob/7f330554f629318b8cb2faf20c06340334802575/intern/bmesh/src/intern/bmesh_queries.rs#L474\" rel=\"nofollow noreferrer\">gitlab.com/ideasman42/bmesh-rs/blob/&hellip;</a>"}, {"owner": {"reputation": 6527, "user_id": 1422197, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6bcbddbd9c7b31aaff8cf25a356bc96c?s=128&d=identicon&r=PG", "display_name": "gnzlbg", "link": "https://stackoverflow.com/users/1422197/gnzlbg"}, "edited": false, "score": 0, "creation_date": 1488300676, "post_id": 41436525, "comment_id": 72166092, "body": "@ideasman42 <a href=\"https://play.rust-lang.org/?gist=05d5441abf746d0cd7d70dc494db8ff2&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ? I can post it as an answer if that is what you want. Basically you just put the code on a trait that takes self, and then implement it for <code>&amp;</code> and <code>&amp;mut</code>, so now you have a generic <code>get</code> method that doesn&#39;t care about mutability and does the right thing. You can now write other traits that require this one, and use this to write generic code that abstracts over mutability."}, {"owner": {"reputation": 6527, "user_id": 1422197, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6bcbddbd9c7b31aaff8cf25a356bc96c?s=128&d=identicon&r=PG", "display_name": "gnzlbg", "link": "https://stackoverflow.com/users/1422197/gnzlbg"}, "edited": false, "score": 0, "creation_date": 1488303116, "post_id": 41436525, "comment_id": 72167570, "body": "@ideasman42 I posted an answer that shows the technique using type parameters and associated types, and how to use it to write generic code that works independently of the &quot;reference-ness&quot; of the input. Hope that helps."}], "answers": [{"comments": [{"owner": {"reputation": 691, "user_id": 4385342, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh3.googleusercontent.com/-ywHOrlzk5g4/AAAAAAAAAAI/AAAAAAAAB9Y/mO2q6r1jr60/photo.jpg?sz=128", "display_name": "a3y3", "link": "https://stackoverflow.com/users/4385342/a3y3"}, "edited": false, "score": 1, "creation_date": 1614539036, "post_id": 41445002, "comment_id": 117410168, "body": "But if I absolutely HAD to write accessor functions for String and HashMap, I&#39;d use generics - isn&#39;t that the entire point of generics? To have a single struct/function that works across types?  It just seems like there must be some way to avoid code duplication; to me it&#39;s just not very comfortable to accept such a huge violation of the DRY principle."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1483451324, "creation_date": 1483451324, "answer_id": 41445002, "question_id": 41436525, "link": "https://stackoverflow.com/questions/41436525/how-to-avoid-writing-duplicate-accessor-functions-for-mutable-and-immutable-refe/41445002#41445002", "title": "How to avoid writing duplicate accessor functions for mutable and immutable references in Rust?", "body": "<p>You don't, really. Recall that <code>T</code>, <code>&amp;T</code> and <code>&amp;mut T</code> are all <em>different types</em>. In that context, your question is the same as asking \"How to avoid writing duplicate accessor functions for <code>String</code> and <code>HashMap</code>\".</p>\n\n<p>Matthieu M had the right terms \"abstract over the mutability\":</p>\n\n<ul>\n<li><a href=\"https://internals.rust-lang.org/t/parameterisation-over-mutability/235\" rel=\"noreferrer\">Parameterisation over mutability</a></li>\n<li><a href=\"https://www.reddit.com/r/rust/comments/5iqqh1/dealing_with_mut_in_data_structures_abstract_over/\" rel=\"noreferrer\">Dealing with &amp;/&amp;mut in data structures: abstract over mutability or split types?</a></li>\n<li><a href=\"https://www.reddit.com/r/rust/comments/2a721y/a_safe_way_to_reuse_the_same_code_for_immutable/\" rel=\"noreferrer\">A safe way to reuse the same code for immutable and mutable variants of a function?</a></li>\n<li><a href=\"https://lab.whitequark.org/notes/2016-12-13/abstracting-over-mutability-in-rust/\" rel=\"noreferrer\">Abstracting over mutability in Rust</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/414\" rel=\"noreferrer\">\"Mutability polymorphism\"</a></li>\n<li>etc. etc. etc.</li>\n</ul>\n\n<p>The TL;DR is that Rust would likely need to be enhanced with new features to support this. Since no one has succeeded, no one is 100% sure which features those would need to be. The current best guess is <em>higher kinded types</em> (HKT). </p>\n"}, {"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 2, "creation_date": 1483930160, "post_id": 41539354, "comment_id": 70285706, "body": "-1 because creating a fake <code>&amp;mut</code> reference is UB; the program becomes hard to reason about, and you risk losing the main benefit of Rust: that your program is memory safe if it compiles"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 4, "creation_date": 1483930537, "post_id": 41539354, "comment_id": 70285787, "body": "There is no exemption from critical invariants when using <code>unsafe</code> blocks. Keep Ms2ger&#39;s maxim in mind: <i>\u201cAnd note, unsafe code isn&#39;t for violating Rust&#39;s invariants, it&#39;s for maintaining them manually\u201d</i>."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483936041, "post_id": 41539354, "comment_id": 70287018, "body": "@Shepmaster&#39;s answer states this isn&#39;t supported, thats OK, but there are ways to do this as included in this answer. So even if its downvoted as a poor choice - its worth noting still that it can be done and <i>might</i> be better then copy-pasting large blocks of code."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1483936642, "post_id": 41539354, "comment_id": 70287135, "body": "@bluss the <code>const -&gt; mut</code> is only done on the return argument, not in the body of the function. As long as inputs are mutable and the wrapper-function body is only a few lines, I think this is quite safe. Consider that copy-pasting code around can have significant downsides too. AFAICS it&#39;s a matter of choosing the lesser of two evils :S"}, {"owner": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 0, "creation_date": 1575126838, "post_id": 41539354, "comment_id": 104464820, "body": "@ideasman42: I think solution 2, to unsafely cast non-mut to mut in a wrapper function, is a perfectly reasonable solution. It follows the advice that is cited by bluss by providing a safe interface to a unsafe implementation. buss&#39;es objection seems simply uninformed."}, {"owner": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 0, "creation_date": 1575127125, "post_id": 41539354, "comment_id": 104464895, "body": "@ideasman42: Can you provide an example of how solution 2 might be implemented? Can you provide any sources or arguments for why it wouldn&#39;t cause undefined behaviour?"}, {"owner": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 1, "creation_date": 1581006992, "post_id": 41539354, "comment_id": 106294254, "body": "I asked a <a href=\"https://stackoverflow.com/questions/59594870/is-mutable-accessor-using-a-cast-safe\">question</a> specifically about if it could be safe to implement a getter with unsafe code. Everyone thinks that it is not possible, but I have seen no satisfactory arguments for why that it so."}], "tags": [], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "is_accepted": false, "score": -4, "last_activity_date": 1575126617, "last_edit_date": 1575126617, "creation_date": 1483920816, "answer_id": 41539354, "question_id": 41436525, "link": "https://stackoverflow.com/questions/41436525/how-to-avoid-writing-duplicate-accessor-functions-for-mutable-and-immutable-refe/41539354#41539354", "title": "How to avoid writing duplicate accessor functions for mutable and immutable references in Rust?", "body": "<p>Currently Rust doesn't support abstracting over mutability.</p>\n\n<p>There are some ways this can be achieved, although they aren't ideal:</p>\n\n<ol>\n<li>Use a macro to expand the duplicate code, declare the macro and share between both functions - needs to be constructed so it works for mutable and immutable of course.</li>\n<li>Write the immutable version of the function (to ensure nothing is changed), then write a wrapper function for the mutable version which performs an <code>unsafe</code> cast on the result to make it mutable.</li>\n</ol>\n\n<p>Neither of these are very appealing (a macro is overly verbose and a little less readable, adds some code-bloat), the <code>unsafe</code> is more readable, but it would be nice to avoid since casting from immutable to mutable isn't so nice to have through a code-base.</p>\n\n<p>For now the best option as far as I can see (where copy-pasting code isn't acceptable), is to write an immutable version of the function, then wrap it with a <code>mut</code> version of the function where both inputs and outputs are mutable.</p>\n\n<p>This requires an <code>unsafe</code> cast on the output of the function, so it's not ideal.</p>\n\n<hr>\n\n<p>Note: it's important to have the immutable function contain the body of the code, since the reverse will allow accidental mutating of what might be immutable input.</p>\n"}, {"comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1488304496, "post_id": 42514762, "comment_id": 72168296, "body": "Seems that this only works for methods? (that take self) although I suppose the functions could be wrapped and call the methods."}, {"owner": {"reputation": 6527, "user_id": 1422197, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6bcbddbd9c7b31aaff8cf25a356bc96c?s=128&d=identicon&r=PG", "display_name": "gnzlbg", "link": "https://stackoverflow.com/users/1422197/gnzlbg"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1488304954, "post_id": 42514762, "comment_id": 72168573, "body": "@ideasman42 Yes, see the <code>foo</code> function in the last code snippet above for how you can wrap a method call in a free function. You can wrap any object method/trait method in a free function. Note that we must use methods because what you want requires &quot;function overloading&quot; (as in different <code>.get</code> functions get called depending on the types of the arguments) which is not available for free functions. In particular, this is not restricted to the type of the first argument, since you can use associated types to overload on the types of the other arguments, and also, in nightly, specialization."}, {"owner": {"reputation": 2858, "user_id": 3358499, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fa794782e1c5f1e6978843d286dc5ad9?s=128&d=identicon&r=PG&f=1", "display_name": "WBuck", "link": "https://stackoverflow.com/users/3358499/wbuck"}, "edited": false, "score": 0, "creation_date": 1597070131, "post_id": 42514762, "comment_id": 112006058, "body": "@gnzlbg If <code>iter()</code> is written like this then why is there an <code>iter_mut()</code>?"}], "tags": [], "owner": {"reputation": 6527, "user_id": 1422197, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6bcbddbd9c7b31aaff8cf25a356bc96c?s=128&d=identicon&r=PG", "display_name": "gnzlbg", "link": "https://stackoverflow.com/users/1422197/gnzlbg"}, "is_accepted": false, "score": 10, "last_activity_date": 1488303422, "last_edit_date": 1488303422, "creation_date": 1488301647, "answer_id": 42514762, "question_id": 41436525, "link": "https://stackoverflow.com/questions/41436525/how-to-avoid-writing-duplicate-accessor-functions-for-mutable-and-immutable-refe/42514762#42514762", "title": "How to avoid writing duplicate accessor functions for mutable and immutable references in Rust?", "body": "<p>(playground links to solutions using <a href=\"https://play.rust-lang.org/?gist=21db206131e8012189d5dd2e4282f766&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">type parameters</a> and <a href=\"https://play.rust-lang.org/?gist=21db206131e8012189d5dd2e4282f766&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">associated types</a>)</p>\n\n<p>In this case <code>&amp;T</code> and <code>&amp;mut T</code> are just two different types. Code that is generic over different types (at both compile-time and run-time) is idiomatically written in Rust using traits. For example, given:</p>\n\n<pre><code>struct Foo { value: i32 }\nstruct Bar { foo: Foo }\n</code></pre>\n\n<p>suppose we want to provide <code>Bar</code> with a generic accessor for its <code>Foo</code> data member. The accessor should work on both <code>&amp;Bar</code> and <code>&amp;mut Bar</code> appropriately returning <code>&amp;Foo</code> or <code>&amp;mut Foo</code>. So we write a trait <code>FooGetter</code></p>\n\n<pre><code>trait FooGetter {\n    type Output;\n    fn get(self) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>whose job is to be generic over the particular type of <code>Bar</code> we have. Its <code>Output</code> type will depend on <code>Bar</code> since we want <code>get</code> to sometimes return <code>&amp;Foo</code> and sometimes <code>&amp;mut Foo</code>. Note also that it consumes <code>self</code> of type <code>Self</code>. Since we want <code>get</code> to be generic over <code>&amp;Bar</code> and <code>&amp;mut Bar</code> we need to implement <code>FooGetter</code> for both, so that <code>Self</code> has the appropriate types: </p>\n\n<pre><code>// FooGetter::Self == &amp;Bar\nimpl&lt;'a&gt; FooGetter for &amp;'a Bar {\n    type Output = &amp;'a Foo;\n    fn get(self) -&gt; Self::Output { &amp; self.foo }\n}\n\n// FooGetter::Self == &amp;mut Bar\nimpl&lt;'a&gt; FooGetter for &amp;'a mut Bar {\n    type Output = &amp;'a mut Foo;\n    fn get(mut self) -&gt; Self::Output { &amp;mut self.foo }\n}\n</code></pre>\n\n<p>Now we can easily use <code>.get()</code> in generic code to obtain <code>&amp;</code> or <code>&amp;mut</code> references to <code>Foo</code> from a <code>&amp;Bar</code> or a <code>&amp;mut Bar</code> (by just requiring <code>T: FooGetter</code>). For example:</p>\n\n<pre><code>// exemplary generic function:\nfn foo&lt;T: FooGetter&gt;(t: T) -&gt; &lt;T as FooGetter&gt;::Output {\n    t.get() \n}\n\nfn main() {\n    let x = Bar { foo: Foo {value: 2} };\n    let mut y = Bar { foo: Foo {value: 2} };\n\n    foo(&amp;mut y).value = 3;\n    println!(\"{} {}\\n\", foo(&amp;x).value, foo(&amp;mut y).value);\n}\n</code></pre>\n\n<p>Note that you can also implement <code>FooGetter</code> for <code>Bar</code>, so that <code>get</code> is generic over <code>&amp;T</code>,<code>&amp;mut T</code>, and <code>T</code> itself (by moving it in). This is actually how the <code>.iter()</code> method is implemented in the standard library, and why it always does \"the right thing\" independently of the reference-ness of the argument its invoked on.</p>\n"}, {"tags": [], "owner": {"reputation": 1127, "user_id": 8171453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3ac080ba0604191f0653a8880a21cdd?s=128&d=identicon&r=PG&f=1", "display_name": "Emoun", "link": "https://stackoverflow.com/users/8171453/emoun"}, "is_accepted": false, "score": 0, "last_activity_date": 1588268613, "creation_date": 1588268613, "answer_id": 61529565, "question_id": 41436525, "link": "https://stackoverflow.com/questions/41436525/how-to-avoid-writing-duplicate-accessor-functions-for-mutable-and-immutable-refe/61529565#61529565", "title": "How to avoid writing duplicate accessor functions for mutable and immutable references in Rust?", "body": "<p>You can use <a href=\"https://crates.io/crates/duplicate\" rel=\"nofollow noreferrer\">the <code>duplicate</code> crate</a>:</p>\n\n<pre><code>use duplicate::duplicate;\n\nimpl MyStruct {\n  #[duplicate(\n    get_foo         self        return_type;\n    [get_foo]       [&amp;self]     [&amp;Bar];\n    [get_foo_mut]   [&amp;mut self] [&amp;mut Bar]\n  )]\n  pub fn get_foo(self) -&gt; return_type {\n    // ~20 lines of code\n    // --- snip ---\n    return bar;\n  }\n}\n</code></pre>\n\n<p>This will expand to your first example. However, usually you would probably use constant/mutable versions of various calls in the code. Therefore, here is a guess at how your second example could be written (had to make some guesses about naming):</p>\n\n<pre><code>use duplicate::duplicate;\n#[duplicate(\n  face_vert_share_loop        VertConstP    FaceConstP    LoopConstP    as_const    null_const;\n  [face_vert_share_loop]      [VertConstP]  [FaceConstP]  [LoopConstP]  [as_const]  [null_const];\n  [face_vert_share_loop_mut]  [VertMutP]    [FaceMutP]    [LoopMutP]    [as_mut]    [null_mut];\n)]\npub fn face_vert_share_loop&lt;V, F&gt;(f: F, v: V) -&gt; LoopConstP\n    where V: Into&lt;VertConstP&gt;,\n          F: Into&lt;FaceConstP&gt;\n{\n    into_expand!(f, v);\n\n    let l_first = f.l_first.as_const();\n    let mut l_iter = l_first;\n    loop {\n        if l_iter.v == v {\n            return l_iter;\n        }\n\n        l_iter = l_iter.next.as_const();\n        if l_iter == l_first {\n            break;\n        }\n    }\n\n    return null_const();\n}\n</code></pre>\n\n<p>which will expand to:</p>\n\n<pre><code>pub fn face_vert_share_loop&lt;V, F&gt;(f: F, v: V) -&gt; LoopConstP\nwhere\n    V: Into&lt;VertConstP&gt;,\n    F: Into&lt;FaceConstP&gt;,\n{\n    into_expand!(f, v);\n    let l_first = f.l_first.as_const();\n    let mut l_iter = l_first;\n    loop {\n        if l_iter.v == v {\n            return l_iter;\n        }\n        l_iter = l_iter.next.as_const();\n        if l_iter == l_first {\n            break;\n        }\n    }\n    return null_const();\n}\npub fn face_vert_share_loop_mut&lt;V, F&gt;(f: F, v: V) -&gt; LoopMutP\nwhere\n    V: Into&lt;VertMutP&gt;,\n    F: Into&lt;FaceMutP&gt;,\n{\n    into_expand!(f, v);\n    let l_first = f.l_first.as_mut();\n    let mut l_iter = l_first;\n    loop {\n        if l_iter.v == v {\n            return l_iter;\n        }\n        l_iter = l_iter.next.as_mut();\n        if l_iter == l_first {\n            break;\n        }\n    }\n    return null_mut();\n}\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2625, "favorite_count": 3, "accepted_answer_id": 41445002, "answer_count": 4, "score": 29, "last_activity_date": 1588268613, "creation_date": 1483418446, "last_edit_date": 1483936075, "question_id": 41436525, "link": "https://stackoverflow.com/questions/41436525/how-to-avoid-writing-duplicate-accessor-functions-for-mutable-and-immutable-refe", "title": "How to avoid writing duplicate accessor functions for mutable and immutable references in Rust?", "body": "<p>A few times, I've run into the scenario where an accessor method is needed for both mutable and immutable references.</p>\n\n<p>For ~3 lines it isn't a problem to duplicate the logic, but when the logic gets more complex, it's not nice to copy-paste large blocks of code.</p>\n\n<p>I'd like to be able to re-use the code for both.</p>\n\n<p>Does Rust provide some way handle this better then copy-pasting code, or using <code>unsafe</code> casts?</p>\n\n<p>e.g.:</p>\n\n<pre><code>impl MyStruct {\n    pub fn get_foo(&amp;self) -&gt; &amp;Bar {\n        // ~20 lines of code\n        // --- snip ---\n        return bar;\n    }\n    pub fn get_foo_mut(&amp;mut self) -&gt; &amp;mut Bar {\n        // ~20 lines of code\n        // (exactly matching previous code except `bar` is mutable)\n        // --- snip ---\n        return bar;\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Here is a more detailed excerpt of a code-base where an immutable return argument was cast to mutable to support both immutable and mutable versions of a function. This uses a wrapped pointer type (<code>ConstP</code> and <code>MutP</code> for immutable and mutable references), but the logic of the function should be clear.</p>\n\n<pre><code>pub fn face_vert_share_loop&lt;V, F&gt;(f: F, v: V) -&gt; LoopConstP\n    where V: Into&lt;VertConstP&gt;,\n          F: Into&lt;FaceConstP&gt;\n{\n    into_expand!(f, v);\n\n    let l_first = f.l_first.as_const();\n    let mut l_iter = l_first;\n    loop {\n        if l_iter.v == v {\n            return l_iter;\n        }\n\n        l_iter = l_iter.next.as_const();\n        if l_iter == l_first {\n            break;\n        }\n    }\n\n    return null_const();\n}\npub fn face_vert_share_loop_mut(f: FaceMutP, v: VertMutP) -&gt; LoopMutP {\n    let l = face_vert_share_loop(f, v);\n    return unsafe {\n        // Evil! but what are the alternatives?\n        // Perform an unsafe `const` to `mut` cast :(\n        // While in general this should be avoided,\n        // its 'OK' in this case since input is also mutable.\n        l.as_mut()\n    };\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 79, "user_id": 3791276, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c090675513444a844805eecc77231f42?s=128&d=identicon&r=PG&f=1", "display_name": "user3791276", "link": "https://stackoverflow.com/users/3791276/user3791276"}, "edited": false, "score": 0, "creation_date": 1483413755, "post_id": 41434962, "comment_id": 70077786, "body": "You just blew my mind with using <code>*entry_result</code> in the match and then <code>ref entry</code> in the match arm. I had no idea that worked that way. I was under the impression that <code>*</code> and <code>ref</code> would just undo each other."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 79, "user_id": 3791276, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c090675513444a844805eecc77231f42?s=128&d=identicon&r=PG&f=1", "display_name": "user3791276", "link": "https://stackoverflow.com/users/3791276/user3791276"}, "edited": false, "score": 0, "creation_date": 1483451909, "post_id": 41434962, "comment_id": 70096490, "body": "@user3791276 added a bit more."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1483451901, "last_edit_date": 1495540419, "creation_date": 1483403915, "answer_id": 41434962, "question_id": 41434572, "link": "https://stackoverflow.com/questions/41434572/match-expects-result-when-i-want-to-use-result/41434962#41434962", "title": "Match expects &amp;Result when I want to use Result", "body": "<p>Using this as a <a href=\"/help/mcve\">MCVE</a> (which you should have provided):</p>\n\n<pre><code>use std::fs::{self, DirEntry};\n\nfn main() {\n    let dirs = fs::read_dir(\"/tmp\").expect(\"Nope\");\n\n    let (dir_list, file_list): (Vec&lt;std::io::Result&lt;DirEntry&gt;&gt;, Vec&lt;std::io::Result&lt;DirEntry&gt;&gt;) =\n        dirs.partition(|entry_result| {\n            match entry_result {\n                Ok(entry) =&gt; {\n                    entry.file_type()\n                        .and_then(|file_type| Ok(file_type.is_dir()))\n                        .unwrap_or(false)\n                }\n                Err(_) =&gt; false,\n            }\n        });\n}\n</code></pre>\n\n<p>You can then <a href=\"https://stackoverflow.com/q/21747136/155423\">print out the type of the variable</a></p>\n\n<pre><code>dirs.partition(|entry_result| {\n    let () = entry_result;\n    false\n});\n</code></pre>\n\n<p>Which shows that <code>entry_result</code> is a <code>&amp;std::result::Result&lt;std::fs::DirEntry, std::io::Error&gt;</code>.</p>\n\n<p>So the answer to</p>\n\n<blockquote>\n  <p>why my original match's branch arms expect an <code>&amp;Result</code> reference </p>\n</blockquote>\n\n<p>is because you are <em>giving it a <code>&amp;Result</code></em>!</p>\n\n<hr>\n\n<p>For completeness, you can dereference the variable and then reference the components:</p>\n\n<pre><code>match *entry_result {\n    Ok(ref entry) =&gt; {\n</code></pre>\n\n<p>This is redundant:</p>\n\n<pre><code>.and_then(|file_type| Ok(file_type.is_dir()))\n</code></pre>\n\n<p>as it can just be <code>map</code>:</p>\n\n<pre><code>.map(|m| m.is_dir())\n</code></pre>\n\n<p>And some more cleanup:</p>\n\n<pre><code>use std::fs;\n\nfn main() {\n    let dirs = fs::read_dir(\"/tmp\").expect(\"Nope\");\n\n    let (dir_list, file_list): (Vec&lt;_&gt;, Vec&lt;_&gt;) =\n        dirs.partition(|entry_result| {\n            entry_result.as_ref()\n                .ok()\n                .and_then(|entry| entry.file_type().ok())\n                .map(|ft| ft.is_dir())\n                .unwrap_or(false)\n        });\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>I was under the impression that <code>*</code> and <code>ref</code> would just undo each other.</p>\n</blockquote>\n\n<p><code>*</code> and <code>ref</code> <a href=\"https://stackoverflow.com/q/41273041/155423\"><em>might</em> undo each other</a>, but that would only apply if they were applied to the <em>same value</em>. Here, we are pattern matching, so we take the <code>&amp;Result</code> and pattern-match against the dereferenced value. We then take a reference to the value <em>inside</em> the <code>Result</code>, so nothing is ever moved, but we aren't dereferencing and re-referencing the same thing.</p>\n"}], "owner": {"reputation": 79, "user_id": 3791276, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c090675513444a844805eecc77231f42?s=128&d=identicon&r=PG&f=1", "display_name": "user3791276", "link": "https://stackoverflow.com/users/3791276/user3791276"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1240, "favorite_count": 0, "accepted_answer_id": 41434962, "answer_count": 1, "score": 0, "last_activity_date": 1483451901, "creation_date": 1483400166, "last_edit_date": 1483403128, "question_id": 41434572, "link": "https://stackoverflow.com/questions/41434572/match-expects-result-when-i-want-to-use-result", "title": "Match expects &amp;Result when I want to use Result", "body": "<p>I'm using Rust 1.15 nightly and have some code with an iterator over <code>std::io::Result&lt;std::fs::DirEntry&gt;</code> named <code>dir_contents_iterator</code> that I'm trying to partition based on whether each <code>DirEntry</code> corresponds to a file or a folder (with <code>Err</code> values sorted into the file list):</p>\n\n<pre><code>let (dir_list, file_list): (Vec&lt;std::io::Result&lt;DirEntry&gt;&gt;, Vec&lt;std::io::Result&lt;DirEntry&gt;&gt;) =\n    dir_contents_iterator.partition(|entry_result| {\n        match entry_result {\n            Ok(entry) =&gt; {\n                entry\n                    .file_type()\n                    .and_then(|file_type| Ok(file_type.is_dir()))\n                    .unwrap_or(false)\n            },\n            Err(_) =&gt; false\n        }\n    });\n</code></pre>\n\n<p>This code fails to compile with the following two errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n   --&gt; src/main.rs:179:13\n    |\n179 |             Ok(entry) =&gt; {\n    |             ^^^^^^^^^ expected reference, found enum `std::result::Result`\n    |\n    = note: expected type `&amp;std::result::Result&lt;std::fs::DirEntry, std::io::Error&gt;`\n    = note:    found type `std::result::Result&lt;_, _&gt;`\n\nerror[E0308]: mismatched types\n   --&gt; src/main.rs:185:13\n    |\n185 |             Err(_) =&gt; false\n    |             ^^^^^^ expected reference, found enum `std::result::Result`\n    |\n    = note: expected type `&amp;std::result::Result&lt;std::fs::DirEntry, std::io::Error&gt;`\n    = note:    found type `std::result::Result&lt;_, _&gt;`\n</code></pre>\n\n<p>I ended up solving my problem by rewriting my code to partition out the <code>Err</code> values first before partitioning between files and folders. This allows the match to be removed from the shown code and now it compiles. But for the sake of understanding, I'd still like to know why my original match's branch arms expect an <code>&amp;Result</code> reference rather than accepting a <code>Result</code>, especially in the case of the second branch arm (<code>Err(_) =&gt; false</code>) which doesn't even use the value!</p>\n\n<p><a href=\"https://github.com/starim/shadowhack/blob/sort-picker-by-filetype/src/main.rs#L177-L187\" rel=\"nofollow noreferrer\">Here's the problem code in the context of the project I'm working on</a> in case I've left out any details that help explain the problem.</p>\n"}, {"tags": ["tree", "rust", "move-semantics", "lifetime", "tree-rotation"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483380632, "post_id": 41431189, "comment_id": 70068692, "body": "<i>using <code>rustc bst.rs</code></i> \u2014 I&#39;d <b>strongly</b> suggest using Cargo. There&#39;s basically very little reason to ever use <code>rustc</code> directly."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483380775, "post_id": 41431189, "comment_id": 70068749, "body": "See also <a href=\"http://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>, the root of your problem."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1483395590, "last_edit_date": 1483395590, "creation_date": 1483380425, "answer_id": 41431391, "question_id": 41431189, "link": "https://stackoverflow.com/questions/41431189/left-rotation-of-binary-tree-in-rust-fails-to-outlive-the-original/41431391#41431391", "title": "Left Rotation of Binary Tree in Rust Fails to Outlive The Original", "body": "<p>You are misusing references.</p>\n\n<p>Much like C++, Rust has pointers and references: pointers own, references borrow.</p>\n\n<p>If you have a <code>&amp;'a BST&lt;'b&gt;</code> it:</p>\n\n<ul>\n<li>is a reference to a <code>BST&lt;'b&gt;</code> somewhere in memory, which lives at least as long as <code>'a</code></li>\n<li>contains something which lives at least as long as <code>'b</code></li>\n</ul>\n\n<p>Here, however:</p>\n\n<ul>\n<li>you don't want to refer to <code>BST</code>, you want to own them</li>\n<li>your BST does not contain anything that needs referring to. They are pretty pointless without a payload, by the way.</li>\n</ul>\n\n<p>What you really want is:</p>\n\n<pre><code>struct BST {\n    l: Option&lt;Box&lt;BST&gt;&gt;,\n    r: Option&lt;Box&lt;BST&gt;&gt;\n}\n\nimpl BST {\n    fn left_rotate(self) -&gt; BST {\n        match self.r {\n            None =&gt; self,\n            Some(mut y) =&gt; {\n                BST {\n                    l: Some(Box::new(BST {l: self.l, r: y.l.take()})),\n                    r: y.r.take()\n                } \n            }\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 2943739, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5PFO7.png?s=128&g=1", "display_name": "GBXWA", "link": "https://stackoverflow.com/users/2943739/gbxwa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "accepted_answer_id": 41431391, "answer_count": 1, "score": 0, "last_activity_date": 1483395590, "creation_date": 1483379394, "last_edit_date": 1495541339, "question_id": 41431189, "link": "https://stackoverflow.com/questions/41431189/left-rotation-of-binary-tree-in-rust-fails-to-outlive-the-original", "title": "Left Rotation of Binary Tree in Rust Fails to Outlive The Original", "body": "<p>I'm attempting to implement a self-balancing binary search tree and wrote a function to replace a tree with its left rotation:</p>\n\n<pre><code>struct BST&lt;'a&gt; {\n    l: Option&lt;&amp;'a BST&lt;'a&gt;&gt;,\n    r: Option&lt;&amp;'a BST&lt;'a&gt;&gt;\n}\n\nimpl&lt;'a&gt; BST&lt;'a&gt; {\n    fn left_rotate(self) -&gt; BST&lt;'a&gt; {\n        /*\n         *   (x)                 (y)\n         *  /   \\               /   \\\n         * a     (y)    =&gt;   (x)     c\n         *      /   \\       /  \\\n         *     b     c     a    b\n         */\n        match self.r {\n            None =&gt; self,\n            Some(y) =&gt; BST {\n                l: Some(&amp; BST {l: self.l, r: y.l}),\n                r: y.r\n            } \n        }\n    }\n}\n</code></pre>\n\n<p>Attempting to compile this example using <code>rustc bst.rs</code> results in the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed value does not live long enough\n  --&gt; bst.rs:18:27\n   |\n18 |                 l: Some(&amp; BST {l: self.l, r: y.l}),\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^ temporary value created here\n19 |                 r: y.r\n20 |             }\n   |             - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the block at 7:36...\n  --&gt; bst.rs:7:37\n   |\n7  |     fn left_rotate(self) -&gt; BST&lt;'a&gt; {\n   |                                     ^\n</code></pre>\n\n<p>I understand that because the original tree is destroyed when the function returns, its left rotation cannot outlast it because of <a href=\"https://stackoverflow.com/questions/27612687/how-do-lifetime-bounds-on-structs-work-in-rust\">lifetime parameter contravariance</a>. My intention was for the function to consume the original tree and return the left rotation in such a way that the left rotation would inherit the lifetime the original tree would have were the function not called. Is this possible in Rust? If not, what's the simplest design that accomplishes my goal of supporting tree replacement? My preference is to avoid leaning on the Rust standard library and learn to manage the lifetimes myself.</p>\n\n<p>Please excuse my lack of experience with Rust lifetimes. My background knowledge is mostly of C++ and ML-style languages.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1483369319, "post_id": 41429001, "comment_id": 70063809, "body": "<code>Map</code> <i>is</i> already an iterator. You may find what you need in <a href=\"http://stackoverflow.com/q/27535289/1233251\">this question</a>."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1483369322, "post_id": 41429001, "comment_id": 70063813, "body": "<code>Map</code> implements <code>Iterator</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483369380, "post_id": 41429001, "comment_id": 70063841, "body": "Related questions: <a href=\"http://stackoverflow.com/q/31904842/155423\">Return a map iterator which is using a closure in Rust</a>, <a href=\"http://stackoverflow.com/q/27646925/155423\">How do I return a Filter iterator from a function?</a>, <a href=\"http://stackoverflow.com/q/26329231/155423\">Returning a simpler Iterator interface instead of a Map in Rust</a>. <b>Please</b> do some basic searching before asking a question."}], "owner": {"reputation": 1523, "user_id": 99022, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/51a8973edc7c7a2d2b4b84d835920f07?s=128&d=identicon&r=PG", "display_name": "Leonard Ehrenfried", "link": "https://stackoverflow.com/users/99022/leonard-ehrenfried"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "closed_date": 1483369299, "answer_count": 0, "score": 0, "last_activity_date": 1483369440, "creation_date": 1483368979, "last_edit_date": 1483369440, "question_id": 41429001, "link": "https://stackoverflow.com/questions/41429001/how-to-return-an-iterator-from-a-map", "closed_reason": "Duplicate", "title": "How to return an Iterator from a Map", "body": "<p>I'm trying to write a function that returns a iterator of <code>PathBuf</code>s.</p>\n\n<p>It tries to load a <code>.gitignore</code> file but if it can't find one just returns all files in the directory tree. I'm using the gitignore and glob crates for this.</p>\n\n<pre><code>fn get_files(){\n    let pwd = env::current_dir().unwrap();\n    let gitignore_path = pwd.join(\".gitignore\");\n\n    let files = match gitignore::File::new(&amp;gitignore_path) {\n        Err(_) =&gt; glob(\"**/*\").expect(\"Failed to read glob pattern\").map(|x| x.unwrap()),\n        Ok(g)  =&gt; g.included_files().expect(\"Failed to read .gitignore\").iter()\n    };\n\n    files.map(|p| pwd.join(p)).filter(|p| metadata(p).unwrap().is_file()) \n}\n</code></pre>\n\n<p>Since I'm mapping over the result of the glob, the inferred return type is <code>std::iter::Map</code> and <code>std::slice::Iter</code>. I understand that Map is an iterator adapter but how can I convert it to a type that implements <code>Iterator</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1483347935, "post_id": 41423809, "comment_id": 70053219, "body": "The signature of <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow noreferrer\">std::collections::HashMap::get</a> says yes, use a reference."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483347950, "post_id": 41423809, "comment_id": 70053225, "body": "Note: it is more idiomatic for <code>two_sum</code> to take a <code>&amp;[i32]</code> argument (as it is allows for a strict superset of possible arguments)."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1483348609, "creation_date": 1483348609, "answer_id": 41424002, "question_id": 41423809, "link": "https://stackoverflow.com/questions/41423809/create-a-hashmapi32-i32-in-rust/41424002#41424002", "title": "Create a HashMap&lt;i32, i32&gt; in Rust", "body": "<p>If you check the signature of the <code>get</code> method, you will realize that:</p>\n\n<ul>\n<li>it accepts an argument <code>&amp;Q</code> bounded by <code>K: Borrow&lt;Q&gt;, Q: Hash + Eq</code></li>\n<li>it returns <code>Option&lt;&amp;V&gt;</code></li>\n</ul>\n\n<p>So, while the hash map itself will contain primitives, the <em>interface</em> of <code>get</code> requires a reference and returns a reference.</p>\n\n<p>This means:</p>\n\n<pre><code>fn two_sum(nums: &amp;Vec&lt;i32&gt;, target: i32) -&gt; (usize, usize) {\n    let mut map = HashMap::new();\n    for (i, x) in nums.iter().enumerate() {\n        match map.get(&amp;(target - x)) {\n            //        ^~~~~~~~~~~~~\n            Some(k) =&gt; return (*k as usize, i),\n            //                 ^~~~~~~~~~~\n            None =&gt; map.insert(x, i)\n        };\n    }\n    return (0, 0);\n}\n</code></pre>\n\n<p>Where I (1) pass a reference to <code>get</code> and (2) dereference the result I get (and convert it from <code>i32</code> to <code>usize</code>).</p>\n\n<p>However, this does not yet work because <code>map.get(&amp;a)</code> borrows the <code>map</code> for the duration of the <code>map</code> block, so you cannot <em>also</em> insert into it. This in turns is solved by moving the insertion after the <code>match</code> block:</p>\n\n<pre><code>fn two_sum(nums: &amp;Vec&lt;i32&gt;, target: i32) -&gt; (usize, usize) {\n    let mut map = HashMap::new();\n    for (i, x) in nums.iter().enumerate() {\n            let a = target - x;\n            match map.get(&amp;a) {\n                Some(k) =&gt; return (*k as usize, i),\n                None =&gt; (),\n            };\n            map.insert(x, i);\n    }\n    return (0, 0);\n}\n</code></pre>\n\n<p>That's it. <code>Hashmap</code> with primitives types.</p>\n\n<p><em>Side note: unlike some other languages, primitive types are nigh indistinguishable from other types in Rust.</em></p>\n"}], "owner": {"reputation": 106, "user_id": 612944, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/098e8e528954dccf6a535634d3897a5c?s=128&d=identicon&r=PG", "display_name": "skies457", "link": "https://stackoverflow.com/users/612944/skies457"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 601, "favorite_count": 0, "accepted_answer_id": 41424002, "answer_count": 1, "score": 1, "last_activity_date": 1483368668, "creation_date": 1483347580, "last_edit_date": 1483368668, "question_id": 41423809, "link": "https://stackoverflow.com/questions/41423809/create-a-hashmapi32-i32-in-rust", "title": "Create a HashMap&lt;i32, i32&gt; in Rust", "body": "<p>While trying to solve a LeetCode problem with Rust, I encountered a strange issue: it looks like I can't create a <code>HashMap</code> with primitive types:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn two_sum(nums: &amp;Vec&lt;i32&gt;, target: i32) -&gt; (usize, usize) {\n    let mut map = HashMap::new();\n    for (i, x) in nums.iter().enumerate() {\n        match map.get(target - x) {\n            Some(k) =&gt; return (k, i),\n            None =&gt; map.insert(x, i)\n        };\n    }\n    return (0, 0);\n}\n\nfn main() {\n    let ret = two_sum(&amp;vec![1,2,3], 4);\n    println!(\"{}, {}\", ret.0, ret.1);\n}\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; two_sum.rs:6:23\n  |\n6 |         match map.get(target - x) {\n  |                       ^^^^^^^^^^ expected reference, found i32\n  |\n  = note: expected type `&amp;_`\n  = note:    found type `i32`\n\nerror[E0308]: mismatched types\n --&gt; two_sum.rs:7:32\n  |\n7 |             Some(k) =&gt; return (k, i),\n  |                                ^ expected usize, found reference\n  |\n  = note: expected type `usize`\n  = note:    found type `&amp;_`\n</code></pre>\n\n<p>Is it necessary to always use reference with HashMap in Rust?</p>\n\n<p>EDIT:</p>\n\n<p>Looks like it is necessary... The solution looks a bit ugly but works anyway.</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn two_sum(nums: &amp;[i32], target: i32) -&gt; (usize, usize) {\n    let mut map = HashMap::new();\n    for (i, x) in nums.iter().enumerate() {\n        let df = target - x;\n        if map.contains_key(&amp;df) {\n            return (*map.get(&amp;df).unwrap(), i);\n        }\n        map.insert(x, i);\n    }\n    return (0, 0);\n}\n\nfn main() {\n    let ret = two_sum(&amp;vec![1,2,3], 4);\n    println!(\"{}, {}\", ret.0, ret.1);\n}\n</code></pre>\n\n<p>I wonder if there is a better solution or some best practice to use HashMaps with primitive types?</p>\n"}, {"tags": ["struct", "rust"], "owner": {"reputation": 549, "user_id": 1489340, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cc907954246f57665b1a9a41f97494fb?s=128&d=identicon&r=PG", "display_name": "shadowfox", "link": "https://stackoverflow.com/users/1489340/shadowfox"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1091, "favorite_count": 0, "closed_date": 1483347869, "answer_count": 0, "score": 2, "last_activity_date": 1483345679, "creation_date": 1483344928, "question_id": 41423340, "link": "https://stackoverflow.com/questions/41423340/rust-extend-struct-fields", "closed_reason": "Duplicate", "title": "Rust extend struct fields?", "body": "<p>How to extend fields from a common struct to avoid code repetition. Suppose the common struct has a lot of fields and the extending struct has only some extra fields.\nEg . </p>\n\n<pre><code>struct CommonStruct {\n  field_1:i32,\n  field_2:i32,\n  ...\n  field_10:i32\n}\n\nstruct ExtendedStruct1 {\n  field_11:i32\n}\n\nstruct ExtendedStruct2 {\n  field_12:i32\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1483329861, "post_id": 41421198, "comment_id": 70047817, "body": "I&#39;m <i>certain</i> that this has been answered before, but I cannot find a duplicate. If you find it, let me know and I&#39;ll close it."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1483394196, "post_id": 41421198, "comment_id": 70073364, "body": "Wow, I&#39;ve just stumbled on a very similar issue. It surprised me that <code>vec.drain(vec.len() - 1..)</code> is not allowed, while <code>let vlen = vec.len(); vec.drain(vlen - 1..)</code> compiles just fine. The workaround is trivial, but it feels wrong, as one could easily imagine the former practically <i>desugaring</i> into something like the latter. I assume the underlying cause is the same?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1483394907, "post_id": 41421198, "comment_id": 70073579, "body": "@user4815162342 yes."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 1, "creation_date": 1483413444, "post_id": 41421198, "comment_id": 70077730, "body": "Surprising this isn&#39;t high priority to resolve? AFAICS this is a fairly simple example where <i>borrow-checker-induced-damage</i> will be added to otherwise straightforward and safe code. I can understand that some complex scenarios will need workarounds, but this seems like a case that is likely to happen frequently. It also makes using methods more of a hassle then regular functions since accessing the method borrows too. Edit, maybe it is high priority - Issue 811 has &gt;50 likes :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1483329686, "creation_date": 1483329686, "answer_id": 41421198, "question_id": 41421107, "link": "https://stackoverflow.com/questions/41421107/borrow-checker-and-function-arguments-in-rust-correct-or-over-zealous/41421198#41421198", "title": "Borrow checker and function arguments in Rust, correct or over zealous?", "body": "<p>This is an artifact of the current implementation of the borrow checker. It is a well known limitation, dating back to <em>at least</em> 2013, and no one is overjoyed by it. </p>\n\n<blockquote>\n  <p>Is this working as intended</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<blockquote>\n  <p>something that should be resolved?</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<p>The magic keywords are \"non-lexical lifetimes\". Right now, lifetimes are lexical - they correspond to the blocks of source that we type. Ideally, <code>foo.method(foo.mutable_method())</code> would see that the borrow ends \"inside the parenthesis\", but for a myriad of reasons, it is tied to the entire statement.</p>\n\n<p>For tons of further information see <a href=\"https://github.com/rust-lang/rfcs/issues/811\" rel=\"nofollow noreferrer\">RFC issue 811</a> and everything linked from there.</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 532, "favorite_count": 1, "closed_date": 1525871019, "accepted_answer_id": 41421198, "answer_count": 1, "score": 2, "last_activity_date": 1483344343, "creation_date": 1483328613, "last_edit_date": 1483344343, "question_id": 41421107, "link": "https://stackoverflow.com/questions/41421107/borrow-checker-and-function-arguments-in-rust-correct-or-over-zealous", "closed_reason": "Duplicate", "title": "Borrow checker and function arguments in Rust, correct or over zealous?", "body": "<p>When a mutable argument is passed as a function argument, the borrow checker doesn't allow this to be used to construct other arguments, even when those arguments clone values without holding a reference.</p>\n\n<p>While assigning variables outside the function is always an option<sup>1</sup>, logically this seems over zealous and something the borrow checker could take into account.</p>\n\n<p>Is this working as intended or something that should be resolved?</p>\n\n<pre><code>#[derive(Debug)]\nstruct SomeTest {\n    pub some_value: f64,\n    pub some_other: i64,\n}\n\nfn some_fn(var: &amp;mut SomeTest, other: i64) {\n    println!(\"{:?}, {}\", var, other);\n}\n\nfn main() {\n    let mut v = SomeTest { some_value: 1.0, some_other: 2 };\n    some_fn(&amp;mut v, v.some_other + 1);\n\n    // However this works!\n/*\n    {\n        let x = v.some_other + 1;\n        some_fn(&amp;mut v, x);\n    }\n*/\n}\n</code></pre>\n\n<p>Gives this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  --&gt; src/main.rs:14:21\n   |\n14 |     some_fn(&amp;mut v, v.some_other + 1);\n   |                  -  ^^^^^^^^^^^^ use of borrowed `v`\n   |                  |\n   |                  borrow of `v` occurs here\n</code></pre>\n\n<p>See: <a href=\"https://play.rust-lang.org/?gist=c5a21c7c17ee425dc7df4a641a89c58a&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playpen</a>.</p>\n\n<hr>\n\n<p>[1]: Even though one-off assignments do sometimes improve readability, being forced to use them for arguments encourages use of scopes to avoid single use variables polluting the name-space, causing function calls that would otherwise be one line - being enclosed in braces and defining variables... I'd like to avoid this if possible especially when the requirement seems like something the borrow checker could support.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 2, "creation_date": 1483293830, "post_id": 41417660, "comment_id": 70040115, "body": "Unless I&#39;m missing something, it seems that you&#39;re laboring under an invalid assumption.  Zero is a valid key, so setting the key to zero by default doesn&#39;t make any sense to me.  What is the use case for this?"}, {"owner": {"reputation": 379, "user_id": 348892, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Bm2Wf.png?s=128&g=1", "display_name": "hindenbug", "link": "https://stackoverflow.com/users/348892/hindenbug"}, "reply_to_user": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 1, "creation_date": 1483294327, "post_id": 41417660, "comment_id": 70040267, "body": "@RobertHarvey My bad, reworded the last line, I am looking for a way to setup a default value for any key added to the HashMap? Ex: { &quot;A&quot; =&gt; 0 }"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 168120, "user_id": 102937, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/1233ec65168f4aae4d939ae8fe6cde1e?s=128&d=identicon&r=PG", "display_name": "Robert Harvey", "link": "https://stackoverflow.com/users/102937/robert-harvey"}, "edited": false, "score": 0, "creation_date": 1483294893, "post_id": 41417660, "comment_id": 70040417, "body": "You keep talking about when you <i>insert</i> a key, but it you are inserting a key, you can just type <code>0</code> as the value argument. I concur with @RobertHarvey; what are you trying to do? I&#39;d suggest <a href=\"https://stackoverflow.com/posts/41417660/edit\">edit</a>ing your question to show example (pseudo)code of what you&#39;d be able to do if such a default exists."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 2, "creation_date": 1483297476, "post_id": 41417660, "comment_id": 70041120, "body": "I don&#39;t know about Ruby, but in C++ there&#39;s a notion of a map <i>inserting</i> a <i>default</i> value when a key is accessed (cf. <a href=\"http://en.cppreference.com/w/cpp/container/map/operator_at\" rel=\"nofollow noreferrer\">en.cppreference.com/w/cpp/container/map/operator_at</a>). That always seemed a bit leaky though: what if the type doesn&#39;t have a default? Rust is less demanding on the mapped types and more explicit about the presence (or absence) of a key."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1483297767, "post_id": 41417660, "comment_id": 70041202, "body": "@ArtemGr that&#39;s also interesting in Rust as it means that a <code>get</code> would need to mutate the hashmap."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 5, "creation_date": 1483353649, "post_id": 41418147, "comment_id": 70055819, "body": "This is an interesting answer, as the reasons for NOT having a default value can be important, but I think this answer would benefit a lot from explaining how to solve the problem the OP is having <i>first</i>. I have many times used the <code>defaultdict</code> of Python, and I can see how having a &quot;short recipe&quot; on how to achieve this in Rust would be valuable... which your answer does not, actually, provide directly."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1483369214, "post_id": 41418147, "comment_id": 70063759, "body": "@MatthieuM. that&#39;s a thing I struggle with. I tend to optimize answers for the <i>question being asked</i> as I want to cater to the people that find a question through search. I feel bad when OP asks <a href=\"http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">an XY problem</a>, so sometimes I&#39;ll answer the bigger question as well. The &quot;directly&quot; part is because the question has already been asked before, thus my link. If you&#39;d like, go ahead and mark it a duplicate of <a href=\"http://stackoverflow.com/a/36154859/155423\">stackoverflow.com/a/36154859/155423</a>."}, {"owner": {"reputation": 3908, "user_id": 1398841, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/s8gQQ.png?s=128&g=1", "display_name": "phoenix", "link": "https://stackoverflow.com/users/1398841/phoenix"}, "edited": false, "score": 0, "creation_date": 1549834619, "post_id": 41418147, "comment_id": 96035258, "body": "This is the kind of little convenience item that would be a great addition to crates.io."}, {"owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "edited": false, "score": 1, "creation_date": 1556455565, "post_id": 41418147, "comment_id": 98437656, "body": "<code>Option::unwrap_or</code> doesn&#39;t work for <code>String</code> maps using a <code>&amp;str</code> default. In this case one should use <code>Option.map_or(&quot;default&quot;, String::as_str)</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 28, "last_activity_date": 1556455302, "last_edit_date": 1556455302, "creation_date": 1483297381, "answer_id": 41418147, "question_id": 41417660, "link": "https://stackoverflow.com/questions/41417660/how-does-one-create-a-hashmap-with-a-default-value-in-rust/41418147#41418147", "title": "How does one create a HashMap with a default value in Rust?", "body": "<p>Answering the <em>problem you have</em>...</p>\n\n<blockquote>\n  <p>I am looking to maintain a counter for a set of keys.</p>\n</blockquote>\n\n<p>Then you want to look at <a href=\"https://stackoverflow.com/q/28512394/155423\">How to lookup from and insert into a HashMap efficiently?</a>. Hint: <code>*map.entry(key).or_insert(0) += 1</code></p>\n\n<hr>\n\n<p>Answering the <em>question you asked</em>...</p>\n\n<blockquote>\n  <p>How does one create a HashMap with a default value in Rust?</p>\n</blockquote>\n\n<p>No, <code>HashMap</code>s do not have a place to store a default. Doing so would cause <em>every</em> user of that data structure to allocate space to store it, which would be a waste. You'd also have to handle the case where there is no appropriate default, or when a default cannot be easily created.</p>\n\n<p>Instead, you can look up a value using <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html#method.get\" rel=\"noreferrer\"><code>HashMap::get</code></a> and provide a default if it's missing using <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or\" rel=\"noreferrer\"><code>Option::unwrap_or</code></a>:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map: HashMap&lt;char, usize&gt; = HashMap::new();\n    map.insert('a', 42);\n\n    let a = map.get(&amp;'a').cloned().unwrap_or(0);\n    let b = map.get(&amp;'b').cloned().unwrap_or(0);\n\n    println!(\"{}, {}\", a, b); // 42, 0\n}\n</code></pre>\n\n<p>If <code>unwrap_or</code> doesn't work for your case, there are several similar functions that might:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or_else\" rel=\"noreferrer\"><code>Option::unwrap_or_else</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or\" rel=\"noreferrer\"><code>Option::map_or</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or_else\" rel=\"noreferrer\"><code>Option::map_or_else</code></a></li>\n</ul>\n\n<p>Of course, you are welcome to <a href=\"https://stackoverflow.com/a/36154859/155423\">wrap this in a function or a data structure to provide a nicer API</a>.</p>\n\n<hr>\n\n<p><a href=\"https://stackoverflow.com/questions/41417660/how-does-one-create-a-hashmap-with-a-default-value-in-rust/41418147#comment70041120_41417660\">ArtemGr brings up an interesting point</a>:</p>\n\n<blockquote>\n  <p>in C++ there's a notion of a map <a href=\"http://en.cppreference.com/w/cpp/container/map/operator_at\" rel=\"noreferrer\">inserting a default value when a key is accessed</a>. That always seemed a bit leaky though: what if the type doesn't have a default? Rust is less demanding on the mapped types and more explicit about the presence (or absence) of a key.</p>\n</blockquote>\n\n<p>Rust adds an additional wrinkle to this. Actually <em>inserting</em> a value would require that simply getting a value can also <em>change the <code>HashMap</code></em>. This would invalidate any existing references to values in the <code>HashMap</code>, as a reallocation might be required. Thus you'd no longer be able to get references to two values at the same time! That would be very restrictive.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483323618, "post_id": 41420637, "comment_id": 70046826, "body": "Yes, that would be why I linked to <a href=\"http://stackoverflow.com/q/28512394/155423\">stackoverflow.com/q/28512394/155423</a> in my answer."}], "tags": [], "owner": {"reputation": 67160, "user_id": 1078084, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/wApmM.jpg?s=128&g=1", "display_name": "Akavall", "link": "https://stackoverflow.com/users/1078084/akavall"}, "is_accepted": false, "score": 8, "last_activity_date": 1483322201, "creation_date": 1483322201, "answer_id": 41420637, "question_id": 41417660, "link": "https://stackoverflow.com/questions/41417660/how-does-one-create-a-hashmap-with-a-default-value-in-rust/41420637#41420637", "title": "How does one create a HashMap with a default value in Rust?", "body": "<p>What about using <code>entry</code> to get an element from the HashMap, and then modify it.</p>\n\n<p>From the docs:</p>\n\n<pre><code>fn entry(&amp;mut self, key: K) -&gt; Entry&lt;K, V&gt;\n</code></pre>\n\n<blockquote>\n  <p>Gets the given key's corresponding entry in the map for in-place\n      manipulation.</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/beta/std/collections/struct.HashMap.html#examples-13\" rel=\"noreferrer\">example</a></p>\n\n<pre><code>use std::collections::HashMap;\n\nlet mut letters = HashMap::new();\n\nfor ch in \"a short treatise on fungi\".chars() {\n    let counter = letters.entry(ch).or_insert(0);\n    *counter += 1;\n}\n\nassert_eq!(letters[&amp;'s'], 2);\nassert_eq!(letters[&amp;'t'], 3);\nassert_eq!(letters[&amp;'u'], 1);\nassert_eq!(letters.get(&amp;'y'), None);\n</code></pre>\n"}], "owner": {"reputation": 379, "user_id": 348892, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Bm2Wf.png?s=128&g=1", "display_name": "hindenbug", "link": "https://stackoverflow.com/users/348892/hindenbug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8511, "favorite_count": 2, "accepted_answer_id": 41418147, "answer_count": 2, "score": 18, "last_activity_date": 1556455302, "creation_date": 1483293477, "last_edit_date": 1483379467, "question_id": 41417660, "link": "https://stackoverflow.com/questions/41417660/how-does-one-create-a-hashmap-with-a-default-value-in-rust", "title": "How does one create a HashMap with a default value in Rust?", "body": "<p>Being fairly new to Rust, I was wondering on how to create a <code>HashMap</code> with a default value for a key? For example, having a default value <code>0</code> for any key inserted in the <code>HashMap</code>.</p>\n\n<p>In Rust, I know this creates an empty HashMap:</p>\n\n<pre><code>let mut mymap: HashMap&lt;char, usize&gt; = HashMap::new();\n</code></pre>\n\n<p>I am looking to maintain a counter for a set of keys, for which one way to go about it seems to be: </p>\n\n<pre><code>for ch in \"AABCCDDD\".chars() {\n    mymap.insert(ch, 0)\n}\n</code></pre>\n\n<p>Is there a way to do it in a much better way in Rust, maybe something equivalent to what Ruby provides:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>mymap = Hash.new(0)\nmymap[\"b\"] = 1\nmymap[\"a\"] # 0\n</code></pre>\n"}, {"tags": ["linux", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483295748, "post_id": 41417957, "comment_id": 70040683, "body": "While this is a generic answer that will probably stop the error from occurring, it should not be required to perform these actions to solve this specific problem."}, {"owner": {"reputation": 3360, "user_id": 7332147, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e4GFL.png?s=128&g=1", "display_name": "linuxfan says Reinstate Monica", "link": "https://stackoverflow.com/users/7332147/linuxfan-says-reinstate-monica"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483357495, "post_id": 41417957, "comment_id": 70057763, "body": "The first tag was &#39;linux&#39;, the second was &#39;rust&#39; which I don&#39;t even know. Your answer is clearly the correct one, but perhaps the tag order should have been &#39;rust&#39; then &#39;linux&#39;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483368610, "post_id": 41417957, "comment_id": 70063437, "body": "Perhaps, but tag order is by number of tags, so there&#39;s no way to specify."}], "tags": [], "owner": {"reputation": 3360, "user_id": 7332147, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e4GFL.png?s=128&g=1", "display_name": "linuxfan says Reinstate Monica", "link": "https://stackoverflow.com/users/7332147/linuxfan-says-reinstate-monica"}, "is_accepted": false, "score": 0, "last_activity_date": 1483357421, "last_edit_date": 1483357421, "creation_date": 1483295689, "answer_id": 41417957, "question_id": 41417163, "link": "https://stackoverflow.com/questions/41417163/how-to-solve-librustdoc-so-missing-when-using-rustbook-tool/41417957#41417957", "title": "How to solve librustdoc.so missing when using rustbook tool?", "body": "<p>List the directory containing your shared library into <code>/etc/ld.so.conf</code>, or make a symlink from a path already listed there, or from <code>/usr/lib</code> (<code>/usr/local/lib</code> would be preferable, but maybe you have to add it to the list in <code>ld.so.conf</code>, so this would be again case 1).</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1483325236, "creation_date": 1483325236, "answer_id": 41420838, "question_id": 41417163, "link": "https://stackoverflow.com/questions/41417163/how-to-solve-librustdoc-so-missing-when-using-rustbook-tool/41420838#41420838", "title": "How to solve librustdoc.so missing when using rustbook tool?", "body": "<p>This appears to be a known issue with rustup (<a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/350\" rel=\"nofollow noreferrer\">#350</a>, <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/765\" rel=\"nofollow noreferrer\">#765</a>), specifically around cargo-installed binaries that were compiled against the nightly toolchain. If your application requires nightly to even compile, there's not much you can do other than <code>rustup run nightly myprogram</code>. This will start the program with the appropriate environment.</p>\n\n<p>If the application doesn't require nightly Rust, then install it using the stable toolchain.</p>\n"}], "owner": {"reputation": 632, "user_id": 4068848, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/FD7nX.png?s=128&g=1", "display_name": "huron", "link": "https://stackoverflow.com/users/4068848/huron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 41420838, "answer_count": 2, "score": 1, "last_activity_date": 1483357421, "creation_date": 1483289451, "last_edit_date": 1483323670, "question_id": 41417163, "link": "https://stackoverflow.com/questions/41417163/how-to-solve-librustdoc-so-missing-when-using-rustbook-tool", "title": "How to solve librustdoc.so missing when using rustbook tool?", "body": "<p>I've used</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo install --git https://github.com/steveklabnik/rustbook.git\n</code></pre>\n\n<p>to install rustbook successfully, but when I run <code>rustbook</code> I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustbook: error while loading shared libraries: librustdoc-c0dcaea09a16c7ec.so: cannot open shared object file: No such file or directory\n</code></pre>\n\n<p>But I can find out this .so file.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/librustdoc-c0dcaea09a16c7ec.so\n./.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustdoc-c0dcaea09a16c7ec.so\n</code></pre>\n\n<p>How can I let <code>rustbook</code> know the path to <code>librustdoc-c0dcaea09a16c7ec.so</code>?</p>\n\n<ul>\n<li>rustc 1.16.0-nightly (4ecc85beb 2016-12-28)</li>\n<li>rustdoc 1.16.0-nightly (4ecc85beb 2016-12-28)</li>\n</ul>\n\n<p><code>rustup show</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Default host: x86_64-unknown-linux-gnu\nnightly-x86_64-unknown-linux-gnu (default)\nrustc 1.16.0-nightly (4ecc85beb 2016-12-28)\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "edited": false, "score": 0, "creation_date": 1483354054, "post_id": 41417057, "comment_id": 70056021, "body": "I don&#39;t know exactly, but I think it is important that the second example fails as you couldn&#39;t mutate f&#39;s x anymore."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483358210, "post_id": 41417057, "comment_id": 70058108, "body": "Note: <code>f</code> should be <code>F</code>, and you can call <code>y.get()</code> directly... and I really like this question!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483361820, "post_id": 41417057, "comment_id": 70059964, "body": "Wow, took me some time but I think I <i>finally</i> understand exactly what was going on here and going down this rabbit hole was really cool. Thanks for the question again!"}], "answers": [{"comments": [{"owner": {"reputation": 5146, "user_id": 851835, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/20bf44ece0e0db121f9a44812b113e03?s=128&d=identicon&r=PG", "display_name": "updogliu", "link": "https://stackoverflow.com/users/851835/updogliu"}, "edited": false, "score": 0, "creation_date": 1549613604, "post_id": 41427263, "comment_id": 95972863, "body": "Anywhere documented about the &quot;dereference and take a reference to the result&quot; when assigning from <code>&amp;mut T</code> to <code>&amp;T</code>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 5146, "user_id": 851835, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/20bf44ece0e0db121f9a44812b113e03?s=128&d=identicon&r=PG", "display_name": "updogliu", "link": "https://stackoverflow.com/users/851835/updogliu"}, "edited": false, "score": 0, "creation_date": 1549615997, "post_id": 41427263, "comment_id": 95973864, "body": "@updogliu: Not that I know of; but I haven&#39;t read the latest version of the Rust book, etc..."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 6, "last_activity_date": 1549639322, "last_edit_date": 1549639322, "creation_date": 1483361752, "answer_id": 41427263, "question_id": 41417057, "link": "https://stackoverflow.com/questions/41417057/why-do-i-get-a-lifetime-error-when-i-use-a-mutable-reference-in-a-struct-instead/41427263#41427263", "title": "Why do I get a lifetime error when I use a mutable reference in a struct instead of an immutable reference?", "body": "<p>Why does the Rust compiler reject this implementation of <code>get</code>? Because it allows:</p>\n\n<p>The following is a perfectly reasonable <code>main</code>, assuming that <code>get</code> compiles:</p>\n\n<pre><code>fn main() {\n    let mut x = 3;\n\n    let y = Foo { x: &amp;mut x };\n    let a = y.get();\n    let b = y.x;\n\n    println!(\"{} {}\", a, b);\n}\n</code></pre>\n\n<p>Yet if <code>get</code> were to compile, this would be fine:</p>\n\n<ul>\n<li><code>a</code> does not borrow <code>y</code> because the lifetime is different</li>\n<li><code>b</code> \"consumes\" <code>y</code> (moving from <code>y.x</code>) but we do not reuse it after</li>\n</ul>\n\n<p>So everything is fine, except that we now have a <code>&amp;i32</code> and <code>&amp;mut i32</code> <em>both</em> pointing to <code>x</code>.</p>\n\n<p><em>Note: to make it compile, you can use <code>unsafe</code> inside of <code>get</code>: <code>unsafe { std::mem::transmute(&amp;*self.x) }</code>; scary, eh?</em></p>\n\n<hr>\n\n<p>At the heart of the borrow-checking algorithm is the cornerstone on which Rust's memory safety is built:</p>\n\n<blockquote>\n  <p><strong>Aliasing XOR Mutability</strong></p>\n</blockquote>\n\n<p>Rust achieves memory safety without garbage collection by guaranteeing that whenever you are modifying something, no observer can have a reference inside that something that could become dangling.</p>\n\n<p>This, in turns, lets us interpret:</p>\n\n<ul>\n<li><code>&amp;T</code> as an <em>aliasing reference</em>; it is <code>Copy</code></li>\n<li><code>&amp;mut T</code> as a <em>unique reference</em>; it is NOT <code>Copy</code>, as it would violate uniqueness, but it can be moved</li>\n</ul>\n\n<p>This difference saved us here.</p>\n\n<p>Since <code>&amp;mut T</code> cannot be copied, the only way to go from <code>&amp;mut T</code> to <code>&amp;T</code> (or <code>&amp;mut T</code>) is to perform a re-borrowing: dereference and take a reference to the result.</p>\n\n<p>This is done implicitly by the compiler. Doing it manually makes for a somewhat better error message:</p>\n\n<pre><code>fn get&lt;'b&gt;(&amp;'b self) -&gt; &amp;'a i32 {\n    &amp;*self.x\n}\n</code></pre>\n\n<blockquote>\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n --&gt; &lt;anon&gt;:7:9\n  |\n7 |         &amp;*self.x\n  |         ^^^^^^^^\n  |\nhelp: consider using an explicit lifetime parameter as shown: fn get(&amp;'a self) -&gt; &amp;'a i32\n --&gt; &lt;anon&gt;:6:5\n  |\n6 |     fn get&lt;'b&gt;(&amp;'b self) -&gt; &amp;'a i32 {\n  |     ^\n</code></pre>\n</blockquote>\n\n<p>Why cannot it infer a lifetime? Because lifetime of the re-borrow is limited by <code>'b</code> but we are requiring a <code>'a</code> and there's no relationship between the two!</p>\n\n<p>By the way, this is what is saving us from blunder here, because it ensures that the instance <code>Foo</code> <em>must</em> be borrowed while the result lives (preventing us to use a mutable reference via <code>Foo::x</code>).</p>\n\n<p>Following the compiler hint, and returning <code>&amp;'b i32</code> works... and prevents the above <code>main</code> from compiling:</p>\n\n<pre><code>impl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn get&lt;'b&gt;(&amp;'b self) -&gt; &amp;'b i32 {\n        &amp;*self.x\n    }\n}\n\nfn main() {\n    let mut x = 3;\n\n    let y = Foo { x: &amp;mut x };\n    let a = y.get();\n    let b = y.x;\n\n    println!(\"{} {}\", a, b);\n}\n</code></pre>\n\n<blockquote>\n<pre><code>error[E0505]: cannot move out of `y.x` because it is borrowed\n  --&gt; &lt;anon&gt;:16:9\n   |\n15 |     let a = y.get();\n   |             - borrow of `y` occurs here\n16 |     let b = y.x;\n   |         ^ move out of `y.x` occurs here\n</code></pre>\n</blockquote>\n\n<p>However it lets the first <code>main</code> compile without issue:</p>\n\n<pre><code>fn main() {\n    let mut x = 3;\n\n    let y = Foo { x: &amp;mut x };\n    let z = y.get();\n\n    println!(\"{}\", z);\n}\n</code></pre>\n\n<p>Prints <code>3</code>.</p>\n"}], "owner": {"reputation": 31, "user_id": 7362829, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69b35440cfffa6302af6986eff09c1b3?s=128&d=identicon&r=PG&f=1", "display_name": "jackbang", "link": "https://stackoverflow.com/users/7362829/jackbang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 455, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1549639322, "creation_date": 1483288633, "last_edit_date": 1549639166, "question_id": 41417057, "link": "https://stackoverflow.com/questions/41417057/why-do-i-get-a-lifetime-error-when-i-use-a-mutable-reference-in-a-struct-instead", "title": "Why do I get a lifetime error when I use a mutable reference in a struct instead of an immutable reference?", "body": "<p>This code works fine (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9669d3ea1996b28d7c353f14cc46297c\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>struct F&lt;'a&gt; {\n    x: &amp;'a i32,\n}\n\nimpl&lt;'a&gt; F&lt;'a&gt; {\n    fn get&lt;'b&gt;(&amp;'b self) -&gt; &amp;'a i32 {\n        self.x\n    }\n}\n\nfn main() {\n    let x = 3;\n    let y = F { x: &amp;x };\n    let z = y.get();\n}\n</code></pre>\n\n<p>But when I change <code>x</code> to be a mutable reference instead (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=079da76cdfe3fe30ac6b185404b3a0bd\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    x: &amp;'a mut i32,  // &lt;-- `mut` added\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn get(&amp;self) -&gt; &amp;'a i32 {\n        self.x\n    }\n}\n\nfn main() {\n    let mut x = 3;              // &lt;-- `mut` added\n    let y = Foo { x: &amp;mut x };  // &lt;-- `mut` added\n    let z = y.get();\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n --&gt; src/main.rs:7:9\n  |\n7 |         self.x\n  |         ^^^^^^\n  |\nnote: ...the reference is valid for the lifetime 'a as defined on the impl at 5:6...\n --&gt; src/main.rs:5:6\n  |\n5 | impl&lt;'a&gt; Foo&lt;'a&gt; {\n  |      ^^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the method body at 6:5\n --&gt; src/main.rs:6:5\n  |\n6 | /     fn get(&amp;self) -&gt; &amp;'a i32 {\n7 | |         self.x\n8 | |     }\n  | |_____^\n</code></pre>\n\n<p>Why does that happen? As far as I see it, nothing about the lifetimes has changed: all values/references still live exactly as long as in the first code snippet.</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483307592, "post_id": 41416913, "comment_id": 70043923, "body": "Why not just restructure your data to fit what you want?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483308122, "post_id": 41416913, "comment_id": 70044075, "body": "Also, serde_xml doesn&#39;t seem to have any struct -&gt; XML capabilities."}, {"owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483344751, "post_id": 41416913, "comment_id": 70051984, "body": "@Shepmaster Serde can do this unless I&#39;m mistaken: <a href=\"http://stackoverflow.com/questions/37970355/read-xml-file-into-struct\" title=\"read xml file into struct\">stackoverflow.com/questions/37970355/read-xml-file-into-stru&zwnj;&#8203;ct</a>. As I mentioned this is a third-party format that I can&#39;t change."}, {"owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483344960, "post_id": 41416913, "comment_id": 70052054, "body": "@Shepmaster Ah there&#39;s no ser module for xml in <a href=\"https://github.com/serde-rs/xml/tree/master/src\" rel=\"nofollow noreferrer\">github.com/serde-rs/xml/tree/master/src</a>. I hadn&#39;t spotted that. Guess I need to find something else :-("}], "answers": [{"comments": [{"owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "edited": false, "score": 0, "creation_date": 1597059092, "post_id": 48977021, "comment_id": 112000905, "body": "I had to use <code>serde_xml_rs::to_string(&amp;album).unwrap()</code> instead of <code>serde_xml_rs::serialize(&amp;album, &amp;mut buffer).unwrap();</code>"}, {"owner": {"reputation": 103, "user_id": 11605745, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c59d220ccbe2a5a1b5213937712fd8e?s=128&d=identicon&r=PG&f=1", "display_name": "MarkO", "link": "https://stackoverflow.com/users/11605745/marko"}, "edited": false, "score": 0, "creation_date": 1610023576, "post_id": 48977021, "comment_id": 116005265, "body": "It works with <code>to_writer</code> as well."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 3, "last_activity_date": 1519583858, "creation_date": 1519583858, "answer_id": 48977021, "question_id": 41416913, "link": "https://stackoverflow.com/questions/41416913/how-to-flatten-a-vector-to-produce-multiple-xml-elements-when-using-serde/48977021#48977021", "title": "How to &#39;flatten&#39; a vector to produce multiple XML elements when using serde?", "body": "<p>The <a href=\"https://github.com/RReverser/serde-xml-rs\" rel=\"nofollow noreferrer\"><code>serde-xml-rs</code></a> crate is the replacement for the deprecated <code>serde_xml</code> crate and supports serializing data structures to XML in the representation you want.</p>\n\n<pre><code>extern crate serde;\nextern crate serde_xml_rs;\n\nuse serde::ser::{Serialize, Serializer, SerializeMap, SerializeStruct};\n\nstruct Artist {\n    name: String,\n    image: String,\n}\n\nimpl Serialize for Artist {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n        where S: Serializer\n    {\n        let mut map = serializer.serialize_map(Some(2))?;\n        map.serialize_entry(\"name\", &amp;self.name)?;\n        map.serialize_entry(\"image\", &amp;self.image)?;\n        map.end()\n    }\n}\n\nstruct Album {\n    title: String,\n    artists: Vec&lt;Artist&gt;,\n}\n\nimpl Serialize for Album {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n        where S: Serializer\n    {\n        let len = 1 + self.artists.len();\n        let mut map = serializer.serialize_struct(\"album\", len)?;\n        map.serialize_field(\"title\", &amp;self.title)?;\n        for artist in &amp;self.artists {\n            map.serialize_field(\"artist\", artist)?;\n        }\n        map.end()\n    }\n}\n\nfn main() {\n    let album = Album {\n        title: \"Some title\".to_owned(),\n        artists: vec![\n            Artist {\n                name: \"Bonnie\".to_owned(),\n                image: \"http://example.com/bonnie.jpg\".to_owned(),\n            },\n            Artist {\n                name: \"Cher\".to_owned(),\n                image: \"http://example.com/cher.jpg\".to_owned(),\n            },\n        ],\n    };\n\n    let mut buffer = Vec::new();\n    serde_xml_rs::serialize(&amp;album, &amp;mut buffer).unwrap();\n    let serialized = String::from_utf8(buffer).unwrap();\n    println!(\"{}\", serialized);\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;album&gt;\n  &lt;title&gt;Some title&lt;/title&gt;\n  &lt;artist&gt;\n    &lt;name&gt;Bonnie&lt;/name&gt;\n    &lt;image&gt;http://example.com/bonnie.jpg&lt;/image&gt;\n  &lt;/artist&gt;\n  &lt;artist&gt;\n    &lt;name&gt;Cher&lt;/name&gt;\n    &lt;image&gt;http://example.com/cher.jpg&lt;/image&gt;\n  &lt;/artist&gt;\n&lt;/album&gt;\n</code></pre>\n"}], "owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 593, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1519583858, "creation_date": 1483287489, "last_edit_date": 1483290876, "question_id": 41416913, "link": "https://stackoverflow.com/questions/41416913/how-to-flatten-a-vector-to-produce-multiple-xml-elements-when-using-serde", "title": "How to &#39;flatten&#39; a vector to produce multiple XML elements when using serde?", "body": "<p>I have the following structs:</p>\n\n<pre><code>struct Artist {\n    name: String,\n    image: String,\n}\n\nstruct Album {\n    title: String,\n    artists: Vec&lt;Artist&gt;,\n}\n</code></pre>\n\n<p>I need to produce XML that looks like:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;album&gt;\n  &lt;title&gt;Some title&lt;/title&gt;\n  &lt;artist&gt;\n    &lt;name&gt;Bonnie&lt;/name&gt;\n    &lt;image&gt;http://example.com/bonnie.jpg&lt;/image&gt;\n  &lt;/artist&gt;\n  &lt;artist&gt;\n    &lt;name&gt;Cher&lt;/name&gt;\n    &lt;image&gt;http://example.com/cher.jpg&lt;/image&gt;\n  &lt;/artist&gt;\n&lt;/album&gt;\n</code></pre>\n\n<p>How can I use serde to serialise/deserialise to the above XML format, specifically regarding flattening the <code>artists</code> vector to produce multiple <code>artist</code> elements? This is a third-party format I can't change :-(</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1483276567, "post_id": 41413595, "comment_id": 70035619, "body": "I don&#39;t see primitive types (e.g. <a href=\"https://doc.rust-lang.org/std/primitive.i64.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.i64.html</a>) listed in <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/marker/trait.Copy.html</a>, am I missing something?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 3, "creation_date": 1483282948, "post_id": 41413595, "comment_id": 70037104, "body": "@ArtemGr guh, I really thought that had been fixed by now. I linked to the issue for that."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1566404906, "post_id": 41413595, "comment_id": 101648913, "body": "But slices (those of the form <code>&amp;[T]</code>, not the plain unsized <code>[T]</code>), are just references, thus they are always <code>Copy</code>. I mean, your last example, once you add a type for the <code>Vec</code> generic) actually works: <code>is_copy(&amp;[Vec::&lt;u8&gt;::new()][..]);</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1566406377, "post_id": 41413595, "comment_id": 101649519, "body": "@rodrigo odd, wonder how I missed that. I&#39;ve rectified that and added a section about references."}, {"owner": {"reputation": 508, "user_id": 11950764, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8213f0ffc9106d7663c4b5f29f4ec9e5?s=128&d=identicon&r=PG", "display_name": "joe", "link": "https://stackoverflow.com/users/11950764/joe"}, "edited": false, "score": 0, "creation_date": 1566406790, "post_id": 41413595, "comment_id": 101649707, "body": "@Shepmaster Typo here: &quot;Immutable references always implement Copy, immutable references never implement Copy&quot; :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 24, "last_activity_date": 1566407631, "last_edit_date": 1566407631, "creation_date": 1483249056, "answer_id": 41413595, "question_id": 41413336, "link": "https://stackoverflow.com/questions/41413336/do-all-primitive-types-implement-the-copy-trait/41413595#41413595", "title": "Do all primitive types implement the Copy trait?", "body": "<p>We can use the compiler to prove if something implements <code>Copy</code>. Using <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/primitive-types.html\" rel=\"noreferrer\">the list of primitives from <em>The Rust Programming Language</em></a>:</p>\n\n<pre><code>fn is_copy&lt;T: Copy&gt;() {}\n\nfn main() {\n    is_copy::&lt;bool&gt;();\n    is_copy::&lt;char&gt;();\n    is_copy::&lt;i8&gt;();\n    is_copy::&lt;i16&gt;();\n    is_copy::&lt;i32&gt;();\n    is_copy::&lt;i64&gt;();\n    is_copy::&lt;u8&gt;();\n    is_copy::&lt;u16&gt;();\n    is_copy::&lt;u32&gt;();\n    is_copy::&lt;u64&gt;();\n    is_copy::&lt;isize&gt;();\n    is_copy::&lt;usize&gt;();\n    is_copy::&lt;f32&gt;();\n    is_copy::&lt;f64&gt;();\n    is_copy::&lt;fn()&gt;();\n}\n</code></pre>\n\n<p>There are a few other types I'd consider \"primitive\":</p>\n\n<ul>\n<li>Immutable references (<code>&amp;T</code>)</li>\n<li>Mutable references (<code>&amp;mut T</code>)</li>\n<li>Raw pointers (<code>*const T</code> / <code>*mut T</code>)</li>\n</ul>\n\n<p>Immutable references always implement <code>Copy</code>, mutable references never implement <code>Copy</code>, and raw pointers always implement <code>Copy</code>:</p>\n\n<pre><code>// OK\nis_copy::&lt;&amp;String&gt;();\nis_copy::&lt;*const String&gt;();\nis_copy::&lt;*mut String&gt;();\n// Not OK\nis_copy::&lt;&amp;mut i32&gt;();\n</code></pre>\n\n<p>There are a few other types from the book's list:</p>\n\n<ul>\n<li>Tuples</li>\n<li>Arrays</li>\n</ul>\n\n<p>These types can contain many types; they are parameterized over a generic. They are only <code>Copy</code> if all the contained values are <code>Copy</code>:</p>\n\n<pre><code>// OK\nis_copy::&lt;[i32; 1]&gt;();\nis_copy::&lt;(i32, i32)&gt;();\n// Not OK\nis_copy::&lt;[Vec&lt;i32&gt;; 1]&gt;();\nis_copy::&lt;(Vec&lt;i32&gt;, Vec&lt;i32&gt;)&gt;();\n</code></pre>\n\n<ul>\n<li>Slices</li>\n</ul>\n\n<p>Slices are doubly special. The slice type itself (<code>[T]</code>) and string slices (<code>str</code>) are <em>unsized</em> types. It's very rare to see them without an indirection of some kind, often a reference (<code>&amp;[T]</code> / <code>&amp;str</code>). The unsized values cannot exist by themselves. The version behind a reference behaves like references do.</p>\n\n<pre><code>// OK\nis_copy::&lt;&amp;str&gt;();\nis_copy::&lt;&amp;[i32]&gt;();\n// Not OK\nis_copy::&lt;str&gt;();\nis_copy::&lt;[i32]&gt;();\n</code></pre>\n\n<p>And as always, the <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"noreferrer\">documentation for a trait lists everything that implements that trait</a>. (Except when there are <a href=\"https://github.com/rust-lang/rust/issues/25893\" rel=\"noreferrer\">bugs in the documentation</a>).</p>\n"}], "owner": {"reputation": 1222, "user_id": 7152817, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b2b6ef3fc885710cadba2ae10136b473?s=128&d=identicon&r=PG&f=1", "display_name": "D. Ataro", "link": "https://stackoverflow.com/users/7152817/d-ataro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2128, "favorite_count": 1, "accepted_answer_id": 41413595, "answer_count": 1, "score": 10, "last_activity_date": 1566407631, "creation_date": 1483244464, "last_edit_date": 1483249079, "question_id": 41413336, "link": "https://stackoverflow.com/questions/41413336/do-all-primitive-types-implement-the-copy-trait", "title": "Do all primitive types implement the Copy trait?", "body": "<p>Do all <a href=\"https://doc.rust-lang.org/book/primitive-types.html\" rel=\"noreferrer\">primitive types in Rust</a> implement the <code>Copy</code> trait?</p>\n\n<p>It would be interesting to know, as surely such knowledge is part of a thorough learning of a new programming language.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1483238675, "creation_date": 1483238675, "answer_id": 41413030, "question_id": 41412932, "link": "https://stackoverflow.com/questions/41412932/do-all-generic-types-implement-the-copy-trait/41413030#41413030", "title": "Do all generic types implement the Copy trait?", "body": "<blockquote>\n  <p>Do all generic types in Rust contain the <code>Copy</code> trait?</p>\n</blockquote>\n\n<p>No. That's why you have to explicitly request that a generic type implement <code>Copy</code>:</p>\n\n<pre><code>fn foo&lt;T&gt;(value: T)\n    where T: Copy,\n{\n    // ...\n}\n</code></pre>\n\n<blockquote>\n  <p>are there a lot of types in the standard library that implement this trait,</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"noreferrer\">See for yourself</a>. A trait's documentation lists its known implementors.</p>\n"}], "owner": {"reputation": 1222, "user_id": 7152817, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b2b6ef3fc885710cadba2ae10136b473?s=128&d=identicon&r=PG&f=1", "display_name": "D. Ataro", "link": "https://stackoverflow.com/users/7152817/d-ataro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 673, "favorite_count": 0, "accepted_answer_id": 41413030, "answer_count": 1, "score": 3, "last_activity_date": 1483244514, "creation_date": 1483237188, "last_edit_date": 1483244514, "question_id": 41412932, "link": "https://stackoverflow.com/questions/41412932/do-all-generic-types-implement-the-copy-trait", "title": "Do all generic types implement the Copy trait?", "body": "<p>Do all generic types in Rust implement the <code>Copy</code> trait? To expand upon this, are there a lot of types in the standard library that implement this trait, other than that of generic types?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483222766, "post_id": 41412031, "comment_id": 70027801, "body": "Please <b>link to</b> the duplicates you have read and identified as not helping, otherwise we are likely to just repeat them when answering your question, then no one is helped."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483223285, "post_id": 41412031, "comment_id": 70027893, "body": "For example, <a href=\"http://stackoverflow.com/q/39120183/155423\">How do I clone a HashMap containing a boxed trait object?</a> seems to match quite closely with your actual code."}], "answers": [{"tags": [], "owner": {"reputation": 475, "user_id": 3046011, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ecf2063319b5fb3d7c3cebd8f0a2822?s=128&d=identicon&r=PG&f=1", "display_name": "sawyer", "link": "https://stackoverflow.com/users/3046011/sawyer"}, "is_accepted": true, "score": -1, "last_activity_date": 1483228504, "last_edit_date": 1495542280, "creation_date": 1483228504, "answer_id": 41412432, "question_id": 41412031, "link": "https://stackoverflow.com/questions/41412031/cannot-infer-an-appropriate-lifetime-for-lifetime-parameter-cloning-trait-object/41412432#41412432", "title": "Cannot infer an appropriate lifetime for lifetime parameter cloning trait object", "body": "<p>The error message is quite confusing in this case, but notice a double ampersand here: \n<code>(expected &amp;&amp;std::collections::HashMap&lt;std::string::String, Box&lt;Spider&gt;&gt;, found &amp;&amp;std::collections::HashMap&lt;std::string::String, Box&lt;Spider + 'static&gt;&gt;)</code>.</p>\n\n<p>It looks like it tries to clone the reference. I assume you wanted to clone the entire <code>HashMap</code>. Calling <code>clone</code> explicitly as <code>Clone::clone(spiders)</code> gives much clearer error message:</p>\n\n<pre><code>error[E0277]: the trait bound `Spider: std::clone::Clone` is not satisfied\nerror[E0277]: the trait bound `Spider: std::marker::Sized` is not satisfied\n  --&gt; error_orig.rs:19:26\n   |\n19 |     let thread_spiders = Clone::clone(spiders);\n   |                          ^^^^^^^^^^^^ the trait `std::marker::Sized` is not implemented for `Spider`\n   |\n   = note: `Spider` does not have a constant size known at compile-time\n   = note: required because of the requirements on the impl of `std::clone::Clone` for `Box&lt;Spider&gt;`\n   = note: required because of the requirements on the impl of `std::clone::Clone` for `std::collections::HashMap&lt;std::string::String, Box&lt;Spider&gt;&gt;`\n   = note: required by `std::clone::Clone::clone`\n</code></pre>\n\n<p>You are calling <code>Clone::clone</code> on <code>Box&lt;Spider&gt;</code>, an owned trait object.\n<a href=\"https://stackoverflow.com/q/39120183/155423\">How do I clone a HashMap containing a boxed trait object?</a> illustrates that it can be implemented by introducing a cloning method to your trait, like so:</p>\n\n<pre><code>pub trait Spider: Sync + Send {\n    fn add_request_headers(&amp;self, headers: &amp;mut Vec&lt;String&gt;);\n    fn clone_into_box(&amp;self) -&gt; Box&lt;Spider&gt;;\n}\n\nimpl Clone for Box&lt;Spider&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        self.clone_into_box()\n    }\n}\n\n#[derive(Clone)]\npub struct Google {}\n\nimpl Spider for Google {\n    fn add_request_headers(&amp;self, headers: &amp;mut Vec&lt;String&gt;) {\n        headers.push(\"Hello\".to_string())\n    }\n\n    fn clone_into_box(&amp;self) -&gt; Box&lt;Spider&gt; {\n        Box::new(self.clone())\n    }\n}\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/30353462/how-to-clone-a-struct-storing-a-trait-object#30353928\">How to clone a struct storing a trait object?</a> suggests creating a separate trait for this polymorphic cloning method.</p>\n"}], "owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 676, "favorite_count": 0, "accepted_answer_id": 41412432, "answer_count": 1, "score": 4, "last_activity_date": 1483228504, "creation_date": 1483222210, "last_edit_date": 1483222724, "question_id": 41412031, "link": "https://stackoverflow.com/questions/41412031/cannot-infer-an-appropriate-lifetime-for-lifetime-parameter-cloning-trait-object", "title": "Cannot infer an appropriate lifetime for lifetime parameter cloning trait object", "body": "<p>The duplicates of this question don't seem to solve things for me. The following code gives me errors:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::thread;\n\n\npub trait Spider : Sync + Send {\n    fn add_request_headers(&amp;self, headers: &amp;mut Vec&lt;String&gt;);\n}\n\npub struct Google {}\n\nimpl Spider for Google {\n    fn add_request_headers(&amp;self, headers: &amp;mut Vec&lt;String&gt;) {\n        headers.push(\"Hello\".to_string())\n    }\n}\n\nfn parallel_get(spiders: &amp;HashMap&lt;String, Box&lt;Spider&gt;&gt;) -&gt; std::thread::JoinHandle&lt;()&gt; {\n    let thread_spiders = spiders.clone();\n    thread::spawn(move || {\n        let headers = &amp;mut vec![];\n        let spider = thread_spiders.get(\"Google\").unwrap();\n        spider.add_request_headers(headers);\n    })\n}\n\nfn main() {\n    let spiders = HashMap::new();\n    let spider = Box::new(Google{});\n    spiders.insert(\"Google\", spider);\n}\n</code></pre>\n\n<p>Run on the playground <a href=\"https://play.rust-lang.org/?gist=badd69a4e21b0893b89b146816864394&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>I get: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.14.0 (e8a012324 2016-12-16)\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --&gt; &lt;anon&gt;:18:34\n   |\n18 |     let thread_spiders = spiders.clone();\n   |                                  ^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the block at 17:87...\n  --&gt; &lt;anon&gt;:17:88\n   |\n17 | fn parallel_get(spiders: &amp;HashMap&lt;String, Box&lt;Spider&gt;&gt;) -&gt; std::thread::JoinHandle&lt;()&gt; {\n   |                                                                                        ^\nnote: ...so that types are compatible (expected &amp;&amp;std::collections::HashMap&lt;std::string::String, Box&lt;Spider&gt;&gt;, found &amp;&amp;std::collections::HashMap&lt;std::string::String, Box&lt;Spider + 'static&gt;&gt;)\n  --&gt; &lt;anon&gt;:18:34\n   |\n18 |     let thread_spiders = spiders.clone();\n   |                                  ^^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `[closure@&lt;anon&gt;:19:19: 23:6 thread_spiders:&amp;std::collections::HashMap&lt;std::string::String, Box&lt;Spider&gt;&gt;]` will meet its required lifetime bounds\n  --&gt; &lt;anon&gt;:19:5\n   |\n19 |     thread::spawn(move || {\n   |     ^^^^^^^^^^^^^\n</code></pre>\n\n<p>I think it's telling me that it can't automatically infer the lifetime of <code>thread_spiders</code> because it needs to be <code>'static</code> to live long enough for the thread, but it can't outlive <code>'a</code> which is the lifetime of the input parameter.</p>\n\n<p>The thing is, I can clone other objects in <code>parallel_get</code> and they get moved into the new thread without issue. But for some reason <code>thread_spiders</code> seems to trip up the compiler. It should have a lifetime of <code>'a</code> if I'm correct and then get moved into the thread closure. </p>\n\n<p>I've tried adding explicit lifetime parameters to <code>parallel_get</code> but haven't been able to get anything working. How can I make this code compile?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483203373, "post_id": 41410212, "comment_id": 70023539, "body": "Have you read <a href=\"https://danielkeep.github.io/tlborm/book/README.html\" rel=\"nofollow noreferrer\">The Little Book of Rust Macros</a>?"}], "answers": [{"comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1502890896, "post_id": 45714800, "comment_id": 78388471, "body": "Can the variable assignment be kept? This was needed to prevent function calls being instantiated multiple times.  Also not sure about relying on <code>vec[0..count]</code> since the reason to unpack may be to unpack a vector into a tuple."}], "tags": [], "owner": {"reputation": 154, "user_id": 6261816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5ba543809a6a39a1fec992b8bf8721e8?s=128&d=identicon&r=PG&f=1", "display_name": "lukwol", "link": "https://stackoverflow.com/users/6261816/lukwol"}, "is_accepted": false, "score": 2, "last_activity_date": 1502889753, "creation_date": 1502889753, "answer_id": 45714800, "question_id": 41410212, "link": "https://stackoverflow.com/questions/41410212/how-to-avoid-repetition-expanding-indices-with-macros-in-rust/45714800#45714800", "title": "How to avoid repetition expanding indices with macros in Rust?", "body": "<p>To reduce verbosity you can construct recursive macro.</p>\n\n<pre><code>macro_rules! unpack {\n    ({$vec:expr; $count:expr}) =&gt; { \n        unpack!([$vec; $count])\n    };\n    (($vec:expr; $count:expr)) =&gt; { \n        unpack!([$vec; $count])\n    };\n    ([$vec:expr; $count:expr]) =&gt; { \n        $vec[0..$count]\n    };\n}\n\nfn main() {\n    let vec = vec![1, 2, 3, 4, 5];\n    assert_eq!([1, 2], unpack!({vec; 2}));\n    assert_eq!([1, 2, 3], unpack!((vec; 3)));\n    assert_eq!([1, 2, 3, 4], unpack!([vec; 4]));\n}\n</code></pre>\n\n<p>Every macro can be called with <code>()</code>, <code>[]</code> and <code>{}</code> brackets, so if you don't need additional pair of brackets your macro can be as simple as that:</p>\n\n<pre><code>macro_rules! unpack {\n    ($vec:expr; $count:expr) =&gt; { \n        $vec[0..$count]\n    };\n}\n\nfn main() {\n    let vec = vec![1, 2, 3, 4, 5];\n    assert_eq!([1, 2], unpack!{vec; 2});\n    assert_eq!([1, 2, 3], unpack!(vec; 3));\n    assert_eq!([1, 2, 3, 4], unpack![vec; 4]);\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/1.7.0/book/macros.html#recursive-macros\" rel=\"nofollow noreferrer\">Example</a> from Rust Book.</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1502889753, "creation_date": 1483203191, "last_edit_date": 1483204763, "question_id": 41410212, "link": "https://stackoverflow.com/questions/41410212/how-to-avoid-repetition-expanding-indices-with-macros-in-rust", "title": "How to avoid repetition expanding indices with macros in Rust?", "body": "<p>Is there a way to write this macro that expands array access in such a way that larger arrays can be written in a less verbose way?</p>\n\n<pre><code>/// Avoid manually expanding an expression, eg:\n///\n/// let array =  unpack!([some.vec; 3]);\n///\n/// Expands into: [some.vec[0], some.vec[1], some.vec[2]]\n///\n/// Supports expanding into different bracket types based on the input args.\n\nmacro_rules! unpack {\n    ([$v_:expr; 2]) =&gt; { { let v = $v_; [v[0], v[1]] } };\n    (($v_:expr; 2)) =&gt; { { let v = $v_; (v[0], v[1]) } };\n    ({$v_:expr; 2}) =&gt; { { let v = $v_; {v[0], v[1]} } };\n\n    ([$v_:expr; 3]) =&gt; { { let v = $v_; [v[0], v[1], v[2]] } };\n    (($v_:expr; 3)) =&gt; { { let v = $v_; (v[0], v[1], v[2]) } };\n    ({$v_:expr; 3}) =&gt; { { let v = $v_; {v[0], v[1], v[2]} } };\n\n    ([$v_:expr; 4]) =&gt; { { let v = $v_; [v[0], v[1], v[2], v[3]] } };\n    (($v_:expr; 4)) =&gt; { { let v = $v_; (v[0], v[1], v[2], v[3]) } };\n    ({$v_:expr; 4}) =&gt; { { let v = $v_; {v[0], v[1], v[2], v[3]} } };\n}\n</code></pre>\n"}, {"tags": ["rust", "function-pointers", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "edited": false, "score": 1, "creation_date": 1483199958, "post_id": 41409381, "comment_id": 70022585, "body": "But that would mean that a call to <code>(s.f)(&amp;x, &amp;y)</code> would not be generic over the lifetimes of <code>a</code> and <code>b</code> anymore, unlike <code>foo(&amp;x, &amp;y)</code>."}, {"owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "edited": false, "score": 0, "creation_date": 1483699942, "post_id": 41409381, "comment_id": 70213401, "body": "Great! I didn&#39;t know about HRTBs."}, {"owner": {"reputation": 146, "user_id": 4296401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcce3f627524bc4be389d44169c4f679?s=128&d=identicon&r=PG&f=1", "display_name": "montrivo", "link": "https://stackoverflow.com/users/4296401/montrivo"}, "edited": false, "score": 0, "creation_date": 1598357981, "post_id": 41409381, "comment_id": 112427280, "body": "It&#39;s worth to mention that hrtb syntax works with function pointer types as in <code>f: for&lt;&#39;a,&#39;b&gt; fn(a: &amp;&#39;a i32, b: &amp;&#39;b i32) -&gt; &amp;&#39;a i32</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1483202456, "last_edit_date": 1483202456, "creation_date": 1483196719, "answer_id": 41409381, "question_id": 41409127, "link": "https://stackoverflow.com/questions/41409127/specifying-lifetimes-in-function-pointer-types-in-a-struct/41409381#41409381", "title": "Specifying lifetimes in function pointer types in a struct", "body": "<p>Define the lifetimes on the struct:</p>\n\n<pre><code>fn foo&lt;'a&gt;(a: &amp;'a i32, b: &amp;i32) -&gt; &amp;'a i32 { a }\n\nstruct S&lt;'b, 'c&gt; {\n    f: fn(a: &amp;'b i32, b: &amp;'c i32) -&gt; &amp;'b i32,\n}\n\nfn main() {\n    S {\n        f: foo,\n    };\n}\n</code></pre>\n\n<p>Note that you cannot elide the second lifetime in this context.</p>\n\n<blockquote>\n  <p>But that would mean that a call to <code>(s.f)(&amp;x, &amp;y)</code> would not be generic over the lifetimes of <code>a</code> and <code>b</code> anymore, unlike <code>foo(&amp;x, &amp;y)</code></p>\n</blockquote>\n\n<p>Then you want <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\"><em>higher-rank trait bounds</em> (HRTBs)</a>:</p>\n\n<pre><code>fn foo&lt;'a&gt;(a: &amp;'a i32, _b: &amp;i32) -&gt; &amp;'a i32 { a }\n\nstruct S&lt;F&gt;\n    where for &lt;'b, 'c&gt; F: Fn(&amp;'b i32, &amp;'c i32) -&gt; &amp;'b i32,\n{\n    f: F,\n}\n\nfn main() {\n    S {\n        f: foo,\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1470, "favorite_count": 1, "accepted_answer_id": 41409381, "answer_count": 1, "score": 7, "last_activity_date": 1483202456, "creation_date": 1483194497, "last_edit_date": 1483196615, "question_id": 41409127, "link": "https://stackoverflow.com/questions/41409127/specifying-lifetimes-in-function-pointer-types-in-a-struct", "title": "Specifying lifetimes in function pointer types in a struct", "body": "<p>I have a function <code>foo</code> defined as follows:</p>\n\n<pre><code>fn foo&lt;'a&gt;(a: &amp;'a i32, b: &amp;i32) -&gt; &amp;'a i32 { a }\n</code></pre>\n\n<p>I want to store  a pointer to that function in a struct:</p>\n\n<pre><code>struct S {\n    f: fn(a: &amp;i32, b: &amp;i32) -&gt; &amp;i32,\n}\n</code></pre>\n\n<p>Because there are two input lifetimes, the result lifetime cannot be inferred:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n  |\n2 |     f: fn(a: &amp;i32, b: &amp;i32) -&gt; &amp;i32,\n  |                                ^ expected lifetime parameter\n  |\n  = help: this function's return type contains a borrowed value,\n    but the signature does not say whether it is borrowed from a or b\n</code></pre>\n\n<p>When I ask the compiler for <code>foo</code>'s type, it's not very helpful either:</p>\n\n<pre><code>let () = foo;\n</code></pre>\n\n<p>gives me</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected type `fn(&amp;'a i32, &amp;i32) -&gt; &amp;'a i32 {foo}`\n</code></pre>\n\n<p>which obviously doesn't work because <code>'a</code> is not defined anywhere. </p>\n\n<p>So how do I declare a lifetime in this context? Trying one of</p>\n\n<pre><code>f: fn&lt;'a&gt;(a: &amp;'a i32, b: &amp;i32) -&gt; &amp;'a i32\nf&lt;'a&gt;: fn(a: &amp;'a i32, b: &amp;i32) -&gt; &amp;'a i32\n</code></pre>\n\n<p>results in a syntax error, and I could not find documentation covering this specific situation.</p>\n"}, {"tags": ["python", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1483197545, "creation_date": 1483197545, "answer_id": 41409519, "question_id": 41408559, "link": "https://stackoverflow.com/questions/41408559/how-to-use-lifetimes-in-py-class-in-rust-cpython/41409519#41409519", "title": "How to use lifetimes in py_class! in rust-cpython?", "body": "<p>From the <a href=\"http://dgrunwald.github.io/rust-cpython/doc/cpython/macro.py_class.html\" rel=\"nofollow noreferrer\">documentation</a>:</p>\n\n<blockquote>\n  <p>Because Python code can pass all Python objects to other threads, <code>data_type</code> must be <code>Send + 'static</code>.</p>\n</blockquote>\n\n<p>Since everything inside the type must be <code>'static</code>, there would be no point to allowing a lifetime parameter on the class.</p>\n"}], "owner": {"reputation": 15070, "user_id": 388427, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/a43a07bc90818154ff9c8d4af7c23502?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/388427/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "accepted_answer_id": 41409519, "answer_count": 1, "score": 0, "last_activity_date": 1483197545, "creation_date": 1483189728, "last_edit_date": 1483197169, "question_id": 41408559, "link": "https://stackoverflow.com/questions/41408559/how-to-use-lifetimes-in-py-class-in-rust-cpython", "title": "How to use lifetimes in py_class! in rust-cpython?", "body": "<p>I use <a href=\"https://github.com/dgrunwald/rust-cpython\" rel=\"nofollow noreferrer\">rust-cpython</a> and Rust for a Python .so lib. I wanted to create a class like this:</p>\n\n<pre><code>py_class!(class MyType |py| {\n    data s: Into&lt;Cow&lt;'a, str&gt;&gt;;\n\n    ....\n}\n</code></pre>\n\n<p>But it doesn't allow to use a lifetime:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0261]: use of undeclared lifetime name `'p`\n   |\n81 |     data s: Into&lt;Cow&lt;'a, str&gt;&gt;;\n   |                      ^^ undeclared lifetime\n</code></pre>\n\n<p>And it doesn't allow to write:</p>\n\n<pre><code>py_class!(class MyType&lt;'a&gt; |py| {\n</code></pre>\n\n<p>with error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `&lt;`\n   |\n79 | py_class!(class MyType&lt;'a&gt; |py| {\n   |                        ^\n</code></pre>\n\n<p>Maybe I'm not so good in Rust, maybe <code>rust-cpython</code> doesn't allow it. What is the problem and how would I use lifetimes in macros in general?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483196788, "post_id": 41407713, "comment_id": 70021721, "body": "<i>Are use-statements in the middle of functions allowed</i> \u2014 you literally could have tried this, probably in less characters than it takes to ask the question."}, {"owner": {"reputation": 16291, "user_id": 259130, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/b7bc48d6e53251f642f5a4894eb89b82?s=128&d=identicon&r=PG", "display_name": "Roman A. Taycher", "link": "https://stackoverflow.com/users/259130/roman-a-taycher"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483196938, "post_id": 41407713, "comment_id": 70021755, "body": "I did but it didn&#39;t quite work and I wasn&#39;t sure why because it was in a macro and I think the error was a bit off. After asking this I wrapped the 2 statements in semi brackets and it worked(so it became an expression I think)"}], "answers": [{"tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": false, "score": 0, "last_activity_date": 1483196887, "last_edit_date": 1483196887, "creation_date": 1483183496, "answer_id": 41407874, "question_id": 41407713, "link": "https://stackoverflow.com/questions/41407713/how-do-i-import-types-inside-of-macros/41407874#41407874", "title": "How do I import types inside of macros?", "body": "<p>You can simply use <code>use</code> inside a function. For example:</p>\n\n<pre><code>fn foo() {\n    // do some other stuff\n    use std::collections::HashMap; // use statement only valid\n                                   // inside the current scope\n    // use HashMap\n}\n</code></pre>\n\n<p><code>use</code> statements are always absolute to the crate root. You can make them relative to the current module like this: <code>use self::submodule::Type</code></p>\n\n<p>This is also <a href=\"https://doc.rust-lang.org/stable/book/crates-and-modules.html\" rel=\"nofollow noreferrer\">documented in the Rust book</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1483189418, "last_edit_date": 1483189418, "creation_date": 1483184279, "answer_id": 41407967, "question_id": 41407713, "link": "https://stackoverflow.com/questions/41407713/how-do-i-import-types-inside-of-macros/41407967#41407967", "title": "How do I import types inside of macros?", "body": "<blockquote>\n  <p>Are <code>use</code>-statements in the middle of functions allowed?</p>\n</blockquote>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1dc0844e36cefb89e0d6768d9a608b10&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Yes.</a></p>\n\n<blockquote>\n  <p>If so, how do I refer to the module (<code>self</code>? <code>super</code>? full path?)</p>\n  \n  <p>[from comment] How do I refer to the module which the macro and type are defined in?</p>\n</blockquote>\n\n<p>AFAIK, this is not really possible. The only hope is the special <code>$crate</code> meta-variable which refers to the <em>crate</em> the macro is defined in. Thus you can and have to specify the whole path of the type you want to refer to, like:</p>\n\n<pre><code>use $crate::path::to::MyType;\n</code></pre>\n\n<p>Note that this type has to be public to be accessible in other crates which use your macro! This means the type belongs to the public interface of your crate and changing its path is considered a breaking change. Since breaking changes should occur rather seldom, you won't have to change the path in the macro definition very often ;-)</p>\n"}], "owner": {"reputation": 16291, "user_id": 259130, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/b7bc48d6e53251f642f5a4894eb89b82?s=128&d=identicon&r=PG", "display_name": "Roman A. Taycher", "link": "https://stackoverflow.com/users/259130/roman-a-taycher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 391, "favorite_count": 0, "accepted_answer_id": 41407967, "answer_count": 2, "score": 3, "last_activity_date": 1483196887, "creation_date": 1483182097, "last_edit_date": 1483196762, "question_id": 41407713, "link": "https://stackoverflow.com/questions/41407713/how-do-i-import-types-inside-of-macros", "title": "How do I import types inside of macros?", "body": "<p>Are <code>use</code>-statements in the middle of functions allowed?</p>\n\n<p>If so, how do I refer to the module (<code>self</code>? <code>super</code>? full path?) </p>\n\n<p>If not, is importing a struct/enum and macro in the file where I'm calling the macro the only option?</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 475, "user_id": 3046011, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ecf2063319b5fb3d7c3cebd8f0a2822?s=128&d=identicon&r=PG&f=1", "display_name": "sawyer", "link": "https://stackoverflow.com/users/3046011/sawyer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 176, "favorite_count": 2, "answer_count": 0, "score": 6, "last_activity_date": 1483196971, "creation_date": 1483179292, "last_edit_date": 1483196971, "question_id": 41407385, "link": "https://stackoverflow.com/questions/41407385/what-kind-of-change-would-be-needed-for-cowclone-to-return-shallow-copies", "title": "What kind of change would be needed for Cow::clone to return shallow copies?", "body": "<p>I have a question related to <a href=\"https://github.com/rust-lang/rust/issues/34284\" rel=\"nofollow noreferrer\">Rust issue #34284</a>. I understand why it is not possible in current Rust, but I am curious what kind of (breaking) change would be needed to avoid allocations in <code>Cow::clone</code>.</p>\n\n<p>I suspect it would need some sort of lifetime specialization. Something like (pseudo-Rust):</p>\n\n<pre><code>impl&lt;'a, B: ?Sized&gt; Clone for Cow&lt;'a, B&gt; where B: ToOwned {\n    fn clone(&amp;'b self) -&gt; Cow&lt;'a, B&gt; {\n        if /*lifetimes 'a and 'b allow for optimization*/ {\n            return /*shallow copy*/\n        } else {\n            return /*as it is today*/\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"nofollow noreferrer\">RFC 1210</a> states that specialization based on lifetimes is not possible: </p>\n\n<blockquote>\n  <p>We can't, because when the compiler goes to actually generate code\n  (\"trans\"), lifetime information has been erased</p>\n</blockquote>\n\n<p>but later it says that </p>\n\n<blockquote>\n  <p>Unfortunately, we cannot easily rule out the undesirable\n  lifetime-dependent specializations, because they can be \"hidden\"\n  behind innocent-looking trait bounds</p>\n</blockquote>\n\n<p>Does it mean that:</p>\n\n<ul>\n<li>optimizing <code>Cow::clone</code> is not possible without changing the compiler so that is retains lifetime information longer?</li>\n<li>it would be possible to optimize only for language-defined lifetimes (<code>'static</code>), if RFC 1210 allowed it?</li>\n</ul>\n"}, {"tags": ["rust", "rust-piston"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483159043, "post_id": 41405205, "comment_id": 70013948, "body": "Note that the implementation presented here <a href=\"https://github.com/PistonDevelopers/opengl_graphics/blob/3ba372353405b3b28e90b5aec83673fa0e7ca169/src/glyph_cache.rs#L89-L166\" rel=\"nofollow noreferrer\">has changed a lot in master</a>. Also, it&#39;s pretty strange as normally you would have something like <code>self.data.entry(size).or_insert_with(HashMap::new).entry(ch)&zwnj;&#8203;.or_insert_with(some&zwnj;&#8203;thing_that_loads_the&zwnj;&#8203;_char)</code>."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 6, "last_activity_date": 1483155365, "creation_date": 1483155365, "answer_id": 41405205, "question_id": 41404847, "link": "https://stackoverflow.com/questions/41404847/why-does-piston-text-require-a-mutable-reference-to-the-glyph-cache/41405205#41405205", "title": "Why does Piston text() require a mutable reference to the glyph cache?", "body": "<p>Because if you follow the code from <code>Text</code> all the way down, it <a href=\"http://docs.piston.rs/mush/src/opengl_graphics/glyph_cache.rs.html#120\" rel=\"noreferrer\">appears that it loads each character on demand on a per-font-size basis</a>. If you ask it for a character of a size it doesn't have cached, it will load it in - which requires a mutable reference in order to modify its internal state. Really, its the very first part where it uses the <code>entry</code> API - which requires a mutable reference: <code>fn entry(&amp;mut self, key: K) -&gt; Entry&lt;K, V&gt;</code></p>\n\n<p>The code in question though:</p>\n\n<pre><code>impl&lt;'a&gt; graphics::character::CharacterCache for GlyphCache&lt;'a&gt; {\n    type Texture = Texture;\n\n    fn character(&amp;mut self, size: FontSize, ch: char) -&gt; &amp;Character {\n        match {\n            match self.data.entry(size) { // &lt;----- BAM!\n                Vacant(entry) =&gt; entry.insert(HashMap::new()), \n                Occupied(entry) =&gt; entry.into_mut(),\n            }\n        }.contains_key(&amp;ch) {\n            true =&gt; &amp;self.data[&amp;size][&amp;ch],\n            false =&gt; { self.load_character(size, ch); &amp;self.data[&amp;size][&amp;ch] }\n            // ^^^^ BAM!\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3908, "user_id": 1398841, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/s8gQQ.png?s=128&g=1", "display_name": "phoenix", "link": "https://stackoverflow.com/users/1398841/phoenix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 544, "favorite_count": 0, "accepted_answer_id": 41405205, "answer_count": 1, "score": 4, "last_activity_date": 1500250493, "creation_date": 1483150500, "last_edit_date": 1500250493, "question_id": 41404847, "link": "https://stackoverflow.com/questions/41404847/why-does-piston-text-require-a-mutable-reference-to-the-glyph-cache", "title": "Why does Piston text() require a mutable reference to the glyph cache?", "body": "<p>I'm curious why <a href=\"http://docs.piston.rs/piston_window/graphics/fn.text.html\" rel=\"nofollow noreferrer\"><code>text()</code></a> takes a <em>mutable</em> borrow of the glyph cache:</p>\n\n<pre><code>cache: &amp;mut C\n</code></pre>\n\n<p>My understanding is that the glyphe cache represented the static characters (glyphs) loaded from the font file. Why would those need to be able to be mutated by the underlying graphics system?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 1, "creation_date": 1483134217, "post_id": 41402870, "comment_id": 70008621, "body": "what is the <code>iter</code> field for? Is this different in another instance of MyStruct? Otherwise, would turning this into a function <a href=\"http://play.integer32.com/?gist=7420fddff427fd7c01873f121235b238&amp;version=stable\" rel=\"nofollow noreferrer\">like this</a> solve your case?"}, {"owner": {"reputation": 7392, "user_id": 1555823, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2b69fc6d16ff23e3509b2f3602838acd?s=128&d=identicon&r=PG", "display_name": "vladon", "link": "https://stackoverflow.com/users/1555823/vladon"}, "reply_to_user": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483134512, "post_id": 41402870, "comment_id": 70008707, "body": "@hansaplast I need to save current position, i.e. iterator value."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483181523, "post_id": 41402870, "comment_id": 70018149, "body": "in addition to the duplicate this question points to, <a href=\"http://stackoverflow.com/questions/25269597/how-to-initialize-struct-fields-which-reference-each-other\">this</a> might also serve as a help on how to solve this"}], "owner": {"reputation": 7392, "user_id": 1555823, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2b69fc6d16ff23e3509b2f3602838acd?s=128&d=identicon&r=PG", "display_name": "vladon", "link": "https://stackoverflow.com/users/1555823/vladon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 392, "favorite_count": 1, "closed_date": 1483137229, "answer_count": 0, "score": 1, "last_activity_date": 1483133044, "creation_date": 1483133044, "question_id": 41402870, "link": "https://stackoverflow.com/questions/41402870/store-vector-and-cycle-iterator-to-it-in-a-struct", "closed_reason": "Duplicate", "title": "Store vector and cycle iterator to it in a struct", "body": "<pre><code>struct MyStruct&lt;'a&gt; {\n    items: Vec&lt;i32&gt;;\n    iter: Cycle&lt;std::slice::Iter&lt;'a, i32&gt;;\n}\n\nfn main() {\n    let v = vec![1, 2, 3];\n\n    let foo = MyStruct {\n        items: v,\n        iter: items.iter().cycle();\n    };\n}\n</code></pre>\n\n<p>Rust says that it doesn't know name <code>items</code>.</p>\n\n<p>How to do it correctly?</p>\n"}, {"tags": ["xcode", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483126810, "post_id": 41401722, "comment_id": 70005842, "body": "Huh... I don&#39;t even know if any of the core contributors uses an IDE to hack on Rust itself. Personally, I just use my preferred text editor and do all the compilation from the command line. I don&#39;t see why you couldn&#39;t use Xcode for editing the text, but does it even have Rust syntax highlighting? Then you&#39;d have to figure out how to connect the Rust build system with whatever Xcode supports. FWIW, <i>I</i> wouldn&#39;t try it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1483126887, "post_id": 41401722, "comment_id": 70005872, "body": "Use tags for what your question is <b>about</b>. This question, as currently worded, asks nothing <b>about</b> Make, CMake, or Open Source; they appear incidental."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 1, "creation_date": 1483132157, "post_id": 41401722, "comment_id": 70007865, "body": "do you plan to mix rust with cocoa? Then xcode makes sense to me. There&#39;s <a href=\"https://github.com/google/xi-editor\" rel=\"nofollow noreferrer\">xi-editor</a> a text editor (early alpha stage) which mixes rust with cocoa, maybe this could help you as a starting point. Otherwise: <a href=\"https://areweideyet.com/\" rel=\"nofollow noreferrer\">areweideyet.com</a> shows which IDEs support rust best. Personally I chose for IntelliJ."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483181176, "post_id": 41401722, "comment_id": 70018072, "body": "and btw: welcome to Rust, glad you&#39;re joining :)"}], "owner": {"reputation": 145, "user_id": 4853360, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh4.googleusercontent.com/-SiVTjG3twrk/AAAAAAAAAAI/AAAAAAAAAMA/qmnjqySxvl0/photo.jpg?sz=128", "display_name": "Jay Bhavsar", "link": "https://stackoverflow.com/users/4853360/jay-bhavsar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 421, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1483126895, "creation_date": 1483126261, "last_edit_date": 1495542280, "question_id": 41401722, "link": "https://stackoverflow.com/questions/41401722/how-to-create-an-xcode-project-for-the-rust-repository", "title": "How to create an Xcode project for the Rust repository?", "body": "<p>I am a beginner wanting to contribute to open source, and I picked Rust as my first project to do so. I want to create an Xcode project with all the Rust source files so that I can edit code, attach to running process and debug some of the issues. </p>\n\n<p>I am stuck at creating the Xcode project. I am following <a href=\"https://stackoverflow.com/questions/5942059/creating-an-xcode-project-with-existing-code\">these instructions</a>, and everything goes fine until Xcode freezes in indexing:</p>\n\n<p><img src=\"https://i.stack.imgur.com/Jfkxb.png\" alt=\"screenshot\"></p>\n\n<p>What's gone wrong? How can I build the project?</p>\n\n<p>Please comment if this is the right approach to get started. Should I be using other methods/tools to get debugging started with Rust?</p>\n\n<p>I am on macOS 10.12.2 running Xcode 8.2.1</p>\n"}, {"tags": ["rust", "operator-overloading"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483125086, "post_id": 41400891, "comment_id": 70005088, "body": "Which answer did you use <a href=\"http://stackoverflow.com/questions/24594374/how-can-an-operator-be-overloaded-for-different-rhs-types-and-return-values\">from that question</a>? The one that is accepted or the one with more upvotes?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483125208, "post_id": 41400891, "comment_id": 70005131, "body": "You should attempt to explain, in <i>words</i>, what you are trying to accomplish. You&#39;ve got various syntax mistakes that hide the meaning."}, {"owner": {"reputation": 820, "user_id": 343915, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40464b4ee4c9b7c36531b493977ec2b3?s=128&d=identicon&r=PG", "display_name": "progician", "link": "https://stackoverflow.com/users/343915/progician"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483126540, "post_id": 41400891, "comment_id": 70005721, "body": "Shepmaster: What are those syntax mistakes? This code should is pretty much the same as the one in the accepted answer. (I was going with the accepted answer)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483127113, "post_id": 41400891, "comment_id": 70005971, "body": "Why did you choose to ignore the upvoted answer that shows how to do it?"}, {"owner": {"reputation": 820, "user_id": 343915, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40464b4ee4c9b7c36531b493977ec2b3?s=128&d=identicon&r=PG", "display_name": "progician", "link": "https://stackoverflow.com/users/343915/progician"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483128723, "post_id": 41400891, "comment_id": 70006566, "body": "Are you implying that the highest voted answer is the solution? In which case the reason I ignored it because it because it wasn&#39;t accepted. Normally updates of such kind shows up in the comment of the original answer or at least a comment will imply that this solution is outdated and use the other answer. I thank you, I will give a try."}], "owner": {"reputation": 820, "user_id": 343915, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/40464b4ee4c9b7c36531b493977ec2b3?s=128&d=identicon&r=PG", "display_name": "progician", "link": "https://stackoverflow.com/users/343915/progician"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1483148548, "answer_count": 0, "score": 0, "last_activity_date": 1483127083, "creation_date": 1483122307, "last_edit_date": 1495535435, "question_id": 41400891, "link": "https://stackoverflow.com/questions/41400891/templating-the-return-type-as-well-as-rhs-type-for-the-opsmul-trait", "closed_reason": "Duplicate", "title": "Templating the return type as well as RHS type for the ops::Mul trait", "body": "<p>I want to overload an operator trait for multiple types. In this example case, a 3D vector might be multiplied by a scalar (scaling the vector components and returning a vector) or another vector (computing the dot-product and returning a scalar).</p>\n\n<p>I needed a similar solution to the one offered in '<a href=\"https://stackoverflow.com/questions/24594374/how-can-an-operator-be-overloaded-for-different-rhs-types-and-return-values\">How can an operator be overloaded for different RHS types and return values?</a>'. Here's approximately the code for the accepted solution in the original code. I removed the references as they don't seem to be needed.</p>\n\n<pre><code>use std::ops;\n\n#[derive(Debug)]\nstruct Vector3D {\n    x: f32,\n    y: f32,\n    z: f32,\n}\n\ntrait MulVector3D&lt;ResType&gt; {\n    fn do_mul(self, rhs: Vector3D) -&gt; ResType;\n}\n\n\nimpl MulVector3D&lt;Vector3D&gt; for f32 {\n    fn do_mul(self, rhs: Vector3D) -&gt; Vector3D {\n        Vector3D {\n            x: self * rhs.x,\n            y: self * rhs.y,\n            z: self * rhs.z,\n        }\n    }\n}\n\nimpl MulVector3D&lt;f32&gt; for Vector3D {\n    fn do_mul(self, rhs: Vector3D) -&gt; f32 {\n        self.x * rhs.x + self.y * rhs.y + self.z * rhs.z\n    }\n}\n\nimpl&lt;ResType, RHS: MulVector3D&lt;ResType&gt;&gt; ops::Mul for Vector3D {\n    fn mul(self, rhs: RHS) -&gt; ResType {\n        rhs.do_mul(self)\n    }\n}\n\nfn main() {\n    let a = Vector3D {\n        x: 1.0,\n        y: 2.0,\n        z: 3.0,\n    };\n\n    let b = a * -1.0;\n    let c = a * b;\n\n    println!(\"{:?}\", a);\n    println!(\"{:?}\", b);\n    println!(\"{:?}\", c);\n}\n</code></pre>\n\n<p>However, this doesn't seem to work for me, and I wonder if the language specification changed with regards to this. I am getting the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the type parameter `ResType` is not constrained by the impl trait, self type, or predicates\n  --&gt; src/main.rs:31:6\n   |\n31 | impl&lt;ResType, RHS: MulVector3D&lt;ResType&gt;&gt; ops::Mul for Vector3D {\n   |      ^^^^^^^ unconstrained type parameter\n\nerror[E0207]: the type parameter `RHS` is not constrained by the impl trait, self type, or predicates\n  --&gt; src/main.rs:31:15\n   |\n31 | impl&lt;ResType, RHS: MulVector3D&lt;ResType&gt;&gt; ops::Mul for Vector3D {\n   |               ^^^ unconstrained type parameter\n</code></pre>\n\n<p>I did some searching about it, and to be honest, I don't even know how to phrase this question compactly enough to get a meaningful answer. AFAIK, the <code>ResType</code> template parameter is indeed unconstrained, but I don't see why that's an issue. And as for the <code>RHS</code>, that's actually constrained to implement the <code>MulVector3D&lt;ResType&gt;</code> trait. So again, I don't see what the error message is trying to tell me.</p>\n\n<p>Can you explain the error messsage to me? Is it actually possible that I'm trying to do or it was disallowed since the original question by some language change?</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1483094501, "post_id": 41394751, "comment_id": 69991370, "body": "Is anything wrong with <code>inspect(|a| ...)</code>?"}, {"owner": {"reputation": 13, "user_id": 7357536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f24dbdcdb54b945820dfc87a6828410?s=128&d=identicon&r=PG&f=1", "display_name": "user7357536", "link": "https://stackoverflow.com/users/7357536/user7357536"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483094865, "post_id": 41394751, "comment_id": 69991537, "body": "Thank you, it&#39;s working! It&#39;s so simple, I&#39;ve really overcomplicated."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1483109907, "creation_date": 1483109907, "answer_id": 41398234, "question_id": 41394751, "link": "https://stackoverflow.com/questions/41394751/how-can-i-specify-the-type-of-a-closure-argument/41398234#41398234", "title": "How can I specify the type of a closure argument?", "body": "<p>The direct answer is to use a colon, just like everywhere else you define an arguments type:</p>\n\n<pre><code>fn main() {\n    vec!(1, 2, 3, 4)\n        .windows(2)\n        .inspect(|a: &amp;&amp;[u8]| println!(\"{} {}\", a[0], a[1]))\n        .count();\n}\n</code></pre>\n\n<p>As pointed out by Matthieu M., there's no reason to specify a type here at all as type inference will handle it:</p>\n\n<pre><code>fn main() {\n    vec!(1, 2, 3, 4)\n        .windows(2)\n        .inspect(|a| println!(\"{} {}\", a[0], a[1]))\n        .count();\n}\n</code></pre>\n\n<hr>\n\n<p>For completeness, you can also specify the return type of the closure, although doing so requires braces for the closure body. Again, this is rarely needed:</p>\n\n<pre><code>fn main() {\n    vec!(1, 2, 3, 4)\n        .windows(2)\n        .map(|a: &amp;[u8]| -&gt; bool { a[0] % 2 == 0 })\n        .inspect(|a| println!(\"{}\", a))\n        .count();\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 7357536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f24dbdcdb54b945820dfc87a6828410?s=128&d=identicon&r=PG&f=1", "display_name": "user7357536", "link": "https://stackoverflow.com/users/7357536/user7357536"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 41398234, "answer_count": 1, "score": 1, "last_activity_date": 1483109974, "creation_date": 1483094106, "last_edit_date": 1483109974, "question_id": 41394751, "link": "https://stackoverflow.com/questions/41394751/how-can-i-specify-the-type-of-a-closure-argument", "title": "How can I specify the type of a closure argument?", "body": "<p>I'm trying to do something like this, but it fails to compile on <code>inspect</code>'s closure arguments:</p>\n\n<pre><code>fn main() {\n    vec!(1, 2, 3, 4)\n        .windows(2)\n        .inspect(|&amp;&amp;a[]| println!(\"{} {}\", a[0], a[1]))\n        .count();\n}\n</code></pre>\n\n<p>I've tried moving the slice name <code>a</code> around, but couldn't find the sweet spot of the compiler's understanding.</p>\n"}, {"tags": ["terminal", "console", "rust", "tty", "windows-console"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483094420, "post_id": 41394691, "comment_id": 69991334, "body": "Are you looking for a way to fool <code>git</code> into thinking it is outputting to a terminal (and thus colorize its output) or are you content with simply passing a flag/configuration to git that will force it to use colors without relying on terminal detection?"}, {"owner": {"reputation": 51, "user_id": 5752915, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/984a84d0325d6b6da5083b717f62526a?s=128&d=identicon&r=PG", "display_name": "Wojciech Polak", "link": "https://stackoverflow.com/users/5752915/wojciech-polak"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483094963, "post_id": 41394691, "comment_id": 69991579, "body": "Fooling <code>git</code> seems to be nice idea. Right now <code>git</code> checks if stream is TTY right? (something like <code>if (uv_guess_handle(1) == UV_TTY) </code> in libuv)  Ok - let&#39;s assume I&#39;ll fool it (don&#39;t know how yet, but I&#39;ll solve that sooner or later). Then my output will contain escape codes and printing them will color final output?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483096534, "post_id": 41394691, "comment_id": 69992351, "body": "If you manage to fool git, yes your output should be colorized (if it&#39;s colorized on a terminal), however that&#39;s probably the most difficult option and I am not quite sure <i>how</i> you can do so."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1483106834, "post_id": 41394691, "comment_id": 69996855, "body": "AFAIK, this simply cannot be done on Windows in the console."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1483110219, "post_id": 41394691, "comment_id": 69998406, "body": "@WojciechPolak I suggest you ask this question with different tags, maybe windows-console, console, terminal. Then when you get a generic solution you could post another question on how to translate it to Rust. The gist of the question isn&#39;t specific to Rust and I&#39;d wager there&#39;s a lot of experts on stackoverflow that only monitor specific tags."}], "answers": [{"tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": false, "score": 2, "last_activity_date": 1483110554, "last_edit_date": 1483110554, "creation_date": 1483096740, "answer_id": 41395407, "question_id": 41394691, "link": "https://stackoverflow.com/questions/41394691/in-rust-how-can-i-capture-process-output-with-colors/41395407#41395407", "title": "In Rust, how can I capture process output with colors?", "body": "<p>You can force git to output colors by using <code>git -c color.status=always status</code></p>\n\n<pre><code>use std::process::Command;\n\nfn main() {\n    let output = Command::new(\"git\")\n        .arg(\"-c\")\n        .arg(\"color.status=always\")\n        .arg(\"status\")\n        .output()\n        .expect(\"failed to execute process\");\n\n    let output = String::from_utf8_lossy(&amp;output.stdout).into_owned();\n\n    println!(\"{}\", output);\n}\n</code></pre>\n\n<p>This works for <code>git status</code> only. For a more general solution, you either have to check the programs documentation and hope there is a way to force colored output or check how the program determines if it should output colors or not (such as checking for the <code>COLORTERM</code> environment variable).</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1483111813, "last_edit_date": 1495542731, "creation_date": 1483111813, "answer_id": 41398667, "question_id": 41394691, "link": "https://stackoverflow.com/questions/41394691/in-rust-how-can-i-capture-process-output-with-colors/41398667#41398667", "title": "In Rust, how can I capture process output with colors?", "body": "<p>Your code <strong>already works</strong>:</p>\n\n<pre><code>use std::process::Command;\n\nfn main() {\n    let output = Command::new(\"ls\")\n        .args(&amp;[\"-l\", \"--color\"])\n        .env(\"LS_COLORS\", \"rs=0:di=38;5;27:mh=44;38;5;15\")\n        .output()\n        .expect(\"Failed to execute\");\n\n    let sout = String::from_utf8(output.stdout).expect(\"Not UTF-8\");\n    let serr = String::from_utf8(output.stderr).expect(\"Not UTF-8\");\n\n    println!(\"{}\", sout);\n    println!(\"{}\", serr);\n}\n</code></pre>\n\n<p>Prints the output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>total 68\n-rw-r--r-- 4 root root 56158 Dec 23 00:00 [0m[44;38;5;15mCargo.lock[0m\n-rw-rw-r-- 4 root root  2093 Dec  9 02:54 [44;38;5;15mCargo.toml[0m\ndrwxr-xr-x 1 root root  4096 Dec 30 15:24 [38;5;27msrc[0m\ndrwxr-xr-x 1 root root  4096 Dec 23 00:19 [38;5;27mtarget[0m\n</code></pre>\n\n<p>Note that there's a bunch of junk scattered inside the output (<code>[44;</code>, <code>[0m</code>, etc.). Those are <a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code\" rel=\"nofollow noreferrer\">ANSI escape codes</a>, and the terminal emulator interprets those to change the color of the following text. </p>\n\n<p>If you print the string with debugging, you will see:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\\u{1b}[0m\\u{1b}[44;38;5;15mCargo.lock\\u{1b}[0m\n</code></pre>\n\n<p>Each escape code starts with an <code>ESC</code> (<code>\\u{1b}</code>) followed by the actual command. You will have to parse those in order to ignore them for whatever processing you are doing. </p>\n\n<p>Windows does not use escape codes (although <a href=\"http://www.nivot.org/blog/post/2016/02/04/Windows-10-TH2-(v1511)-Console-Host-Enhancements\" rel=\"nofollow noreferrer\">maybe it can in Windows 10</a>?), and instead a program directly <a href=\"https://stackoverflow.com/a/9203489/155423\">modifies the console it is connected to</a>. There is nothing in the output to indicate the color.</p>\n"}], "owner": {"reputation": 51, "user_id": 5752915, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/984a84d0325d6b6da5083b717f62526a?s=128&d=identicon&r=PG", "display_name": "Wojciech Polak", "link": "https://stackoverflow.com/users/5752915/wojciech-polak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2506, "favorite_count": 0, "accepted_answer_id": 41398667, "answer_count": 2, "score": 4, "last_activity_date": 1483122896, "creation_date": 1483093843, "last_edit_date": 1483122896, "question_id": 41394691, "link": "https://stackoverflow.com/questions/41394691/in-rust-how-can-i-capture-process-output-with-colors", "title": "In Rust, how can I capture process output with colors?", "body": "<p>I would like to capture output from another process (for example <code>git status</code>), process it, and print with all styles (bold, italics, underscore) and colors. It's very important for me to further process that <code>String</code>, I <strong>don't</strong> want only to print it.</p>\n\n<p>In the Unix world, I think this would involve escape codes, I'm not sure about Windows world but it's important for me too.</p>\n\n<p>I know how to do it without colors:</p>\n\n<pre><code>fn exec_git() -&gt; String {\n    let output = Command::new(\"git\")\n        .arg(\"status\")\n        .output()\n        .expect(\"failed to execute process\");\n\n    String::from_utf8_lossy(&amp;output.stdout).into_owned()\n}\n</code></pre>\n\n<p>Maybe I should use <code>spawn</code> instead?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1483082038, "last_edit_date": 1483082038, "creation_date": 1483081939, "answer_id": 41392216, "question_id": 41391522, "link": "https://stackoverflow.com/questions/41391522/how-to-use-a-type-ty-within-a-macro-to-construct-a-struct-instance-in-rust/41392216#41392216", "title": "How to use a type (ty) within a macro to construct a struct instance in Rust?", "body": "<p>No, not with <code>ty</code>.</p>\n\n<p>The simple fix is to capture an <code>ident</code> instead, which is valid in both contexts.  If you need something more complex than a simple identifier, then you're probably going to need to capture the name (for construction) and the type (for other uses) separately and specify them both on use.</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 502, "favorite_count": 1, "accepted_answer_id": 41392216, "answer_count": 1, "score": 7, "last_activity_date": 1483082038, "creation_date": 1483078508, "question_id": 41391522, "link": "https://stackoverflow.com/questions/41391522/how-to-use-a-type-ty-within-a-macro-to-construct-a-struct-instance-in-rust", "title": "How to use a type (ty) within a macro to construct a struct instance in Rust?", "body": "<p>When using <code>ty</code> in a macro, this works in nearly all cases I've tried.\nHowever, it seems it cant be used to declare a new <code>struct</code> instance.</p>\n\n<p>eg: <code>$my_type { some_member: some_value }</code></p>\n\n<p>A more comprehensive example</p>\n\n<pre><code>macro_rules! generic_impl {\n    ($my_type:ty) =&gt; {\n        impl $rect_ty {\n            pub fn flip(&amp;self) -&gt; $my_type { self.some_method() }\n            pub fn swap(&amp;self, &amp;other: $my_type) -&gt; { self.some_swap_method(other) }\n            // so far so good!\n\n            // now our troubles start :(\n            pub fn create(&amp;self) -&gt; $my_type {\n                return $my_type { foo: 1, bar: 2, baz: 2 };\n                //     ^^^^^^^^ this fails!!!\n            }\n        }\n    }\n}\n\n// example use\ngeneric_impl(MyStruct);\ngeneric_impl(MyOtherStruct);\n</code></pre>\n\n<p>The error is:</p>\n\n<pre><code>error: expected expression, found `MyStruct`\n</code></pre>\n\n<p>Changing the <code>ty</code> to an <code>expr</code> means I can't use <code>impl $my_type</code>.</p>\n\n<p>Besides passing in 2x arguments, one a <code>ty</code> the other an <code>expr</code>:</p>\n\n<p>Is there a way to construct a struct based on a <code>ty</code> argument to a macro?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1483092695, "post_id": 41390457, "comment_id": 69990487, "body": "How do you propose this to work with... non-boolean fields? For example, how would this work with a <code>struct Person { surname: String, age: u8 }</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1554641748, "last_edit_date": 1554641748, "creation_date": 1483071231, "answer_id": 41390522, "question_id": 41390457, "link": "https://stackoverflow.com/questions/41390457/how-to-match-struct-fields-in-rust/41390522#41390522", "title": "How to match struct fields in Rust?", "body": "<p>The syntax presented in your question doesn't make any sense; it seems that you just want to use a normal <code>if</code> statement:</p>\n\n<pre><code>if point.x { println!(\"x is true\") }\nif point.y { println!(\"y is true\") }\n</code></pre>\n\n<hr>\n\n<p>I'd highly recommend re-reading <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, specifically the chapters on</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/stable/book/ch06-01-defining-an-enum.html\" rel=\"nofollow noreferrer\">enums</a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/book/ch06-02-match.html\" rel=\"nofollow noreferrer\"><code>match</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/book/ch18-00-patterns.html\" rel=\"nofollow noreferrer\">patterns</a></li>\n</ul>\n\n<p>Once you've read that, it should become clear that <code>point.x</code> isn't a pattern, so it cannot be used on the left side of a match arm. </p>\n"}, {"tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 42, "last_activity_date": 1554659865, "last_edit_date": 1554659865, "creation_date": 1483094116, "answer_id": 41394755, "question_id": 41390457, "link": "https://stackoverflow.com/questions/41390457/how-to-match-struct-fields-in-rust/41394755#41394755", "title": "How to match struct fields in Rust?", "body": "<blockquote>\n  <p>Can Rust match struct fields?</p>\n</blockquote>\n\n<p>It is described in the Rust book in the <a href=\"https://doc.rust-lang.org/stable/book/ch18-03-pattern-syntax.html#destructuring-to-break-apart-values\" rel=\"noreferrer\">\"Destructuring structs\"</a> chapter.</p>\n\n<pre><code>match point {\n    Point { x: true, .. } =&gt; println!(\"x is true\"),\n    Point { y: true, .. } =&gt; println!(\"y is true\"),\n    _ =&gt; println!(\"something else\"),\n}\n</code></pre>\n"}], "owner": {"reputation": 255, "user_id": 7328541, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2acf0e34d229dd1622f978708cf17693?s=128&d=identicon&r=PG&f=1", "display_name": "maku", "link": "https://stackoverflow.com/users/7328541/maku"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9738, "favorite_count": 2, "answer_count": 2, "score": 19, "last_activity_date": 1554659865, "creation_date": 1483070684, "last_edit_date": 1483071127, "question_id": 41390457, "link": "https://stackoverflow.com/questions/41390457/how-to-match-struct-fields-in-rust", "title": "How to match struct fields in Rust?", "body": "<p>Can Rust match struct fields? For example, this code:</p>\n\n<pre><code>struct Point {\n    x: bool,\n    y: bool,\n}\n\nlet point = Point { x: false, y: true };\n\nmatch point {\n    point.x =&gt; println!(\"x is true\"),\n    point.y =&gt; println!(\"y is true\"),\n}\n</code></pre>\n\n<p>Should result in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>y is true\n</code></pre>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 44584, "user_id": 2617068, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/0nSBO.png?s=128&g=1", "display_name": "TigerhawkT3", "link": "https://stackoverflow.com/users/2617068/tigerhawkt3"}, "edited": false, "score": 1, "creation_date": 1483069135, "post_id": 41390244, "comment_id": 69982800, "body": "Oddly, I came upon a very similar situation just a few days ago - I rewrote a text parser in Julia, and the original Python version is 3x faster."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 7, "creation_date": 1483070174, "post_id": 41390244, "comment_id": 69982978, "body": "Your Rust program isn&#39;t using a buffered writer. Try replacing your <code>File::create(...).unwrap()</code> calls with <code>io::BufWriter::new(File::create(...).unwrap())</code>."}, {"owner": {"reputation": 11810, "user_id": 2063031, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/f2677db7242bfbcead46fbf27390160d?s=128&d=identicon&r=PG", "display_name": "ostrokach", "link": "https://stackoverflow.com/users/2063031/ostrokach"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1483070638, "post_id": 41390244, "comment_id": 69983059, "body": "@BurntSushi5 yup, thanks! I had a feeling I was missing something basic."}, {"owner": {"reputation": 44584, "user_id": 2617068, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/0nSBO.png?s=128&g=1", "display_name": "TigerhawkT3", "link": "https://stackoverflow.com/users/2617068/tigerhawkt3"}, "edited": false, "score": 0, "creation_date": 1483070708, "post_id": 41390244, "comment_id": 69983067, "body": "How much of an improvement did that produce?"}, {"owner": {"reputation": 11810, "user_id": 2063031, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/f2677db7242bfbcead46fbf27390160d?s=128&d=identicon&r=PG", "display_name": "ostrokach", "link": "https://stackoverflow.com/users/2063031/ostrokach"}, "reply_to_user": {"reputation": 44584, "user_id": 2617068, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/0nSBO.png?s=128&g=1", "display_name": "TigerhawkT3", "link": "https://stackoverflow.com/users/2617068/tigerhawkt3"}, "edited": false, "score": 0, "creation_date": 1483070889, "post_id": 41390244, "comment_id": 69983106, "body": "@TigerhawkT3 Now it&#39;s a bit faster than PyPy. Both are pretty much IO limited at this point, so it&#39;s not a good benchmark."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1483071982, "post_id": 41390244, "comment_id": 69983337, "body": "I would actually bet that it is not IO limited. It&#39;s probably bad form to link to an HN comment, but I wrote it recently and it&#39;s got lots of details relevant to this question that might help you speed it up even more! <a href=\"https://news.ycombinator.com/item?id=13268051\" rel=\"nofollow noreferrer\">news.ycombinator.com/item?id=13268051</a> (The trick is to remove allocation and perhaps even UTF-8 validation.)"}, {"owner": {"reputation": 11810, "user_id": 2063031, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/f2677db7242bfbcead46fbf27390160d?s=128&d=identicon&r=PG", "display_name": "ostrokach", "link": "https://stackoverflow.com/users/2063031/ostrokach"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1483079301, "post_id": 41390244, "comment_id": 69985276, "body": "@BurntSushi5 that&#39;s a very interesting post, thanks for writing and sharing! I tried rewriting my code using <code>... let mut line = vec![]; while rdr.read_until(b&#39;\\n&#39;, &amp;mut line)? &gt; 0 {...</code>, but the performance was about the same (it fluctuates too much for me to tell for sure). I could still be missing some optimizations though."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1483079958, "post_id": 41390244, "comment_id": 69985532, "body": "Interesting. I am kind of surprised, but it&#39;s possible! Next step would be to start looking at profiles. Big difference between my HN comment and your code is that you&#39;re writing data somewhere where as I was just counting. That could be the normalizer. (Which would mean your original comment about IO being the limiter would be right!)"}], "answers": [{"tags": [], "owner": {"reputation": 11810, "user_id": 2063031, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/f2677db7242bfbcead46fbf27390160d?s=128&d=identicon&r=PG", "display_name": "ostrokach", "link": "https://stackoverflow.com/users/2063031/ostrokach"}, "is_accepted": true, "score": 11, "last_activity_date": 1483071527, "creation_date": 1483071527, "answer_id": 41390552, "question_id": 41390244, "link": "https://stackoverflow.com/questions/41390244/rust-slower-than-python-at-parsing-files/41390552#41390552", "title": "Rust slower than Python at parsing files", "body": "<p>As suggested by @BurntSushi5, replacing</p>\n\n<pre><code>let mut headers = File::create(\"headers.txt\").unwrap();\nlet mut sequences = File::create(\"sequences.txt\").unwrap();\n</code></pre>\n\n<p>with</p>\n\n<pre><code>let mut headers = io::BufWriter::new(File::create(\"headers.txt\").unwrap());\nlet mut sequences = io::BufWriter::new(File::create(\"sequences.txt\").unwrap());\n</code></pre>\n\n<p>Brought the speed up to what I expected:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ time bash -c 'cat uniparc_active-head.fasta | target/release/parse_text'\nreal    0m5.645s\nuser    0m1.396s\nsys     0m0.804s\n</code></pre>\n"}], "owner": {"reputation": 11810, "user_id": 2063031, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/f2677db7242bfbcead46fbf27390160d?s=128&d=identicon&r=PG", "display_name": "ostrokach", "link": "https://stackoverflow.com/users/2063031/ostrokach"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1448, "favorite_count": 2, "accepted_answer_id": 41390552, "answer_count": 1, "score": 6, "last_activity_date": 1483071527, "creation_date": 1483068729, "last_edit_date": 1483071510, "question_id": 41390244, "link": "https://stackoverflow.com/questions/41390244/rust-slower-than-python-at-parsing-files", "title": "Rust slower than Python at parsing files", "body": "<p>I was hoping to use Rust to speed up some of the text processing scrips that are currently written in Python.</p>\n\n<p>In order to test the performance of the two languages, I decided to test them on a very simple task:</p>\n\n<ul>\n<li>Read in a file from <code>STDIN</code>, line by line.</li>\n<li>If the line starts with <code>&gt;</code>, save the line to a <code>headers.txt</code> file.</li>\n<li>Otherwise, save the line to a <code>sequences.txt</code> file.</li>\n</ul>\n\n<p>For this test, I am using a fasta file with 10 million lines, which looks as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ head uniparc_active-head.fasta\n&gt;UPI0000000001 status=active\nMGAAASIQTTVNTLSERISSKLEQEANASAQTKCDIEIGNFYIRQNHGCNLTVKNMCSAD\nADAQLDAVLSAATETYSGLTPEQKAYVPAMFTAALNIQTSVNTVVRDFENYVKQTCNSSA\nVVDNKLKIQNVIIDECYGAPGSPTNLEFINTGSSKGNCAIKALMQLTTKATTQIAPKQVA\nGTGVQFYMIVIGVIILAALFMYYAKRMLFTSTNDKIKLILANKENVHWTTYMDTFFRTSP\nMVIATTDMQN\n&gt;UPI0000000002 status=active\nMMTPENDEEQTSVFSATVYGDKIQGKNKRKRVIGLCIRISMVISLLSMITMSAFLIVRLN\nQCMSANEAAITDAAVAVAAASSTHRKVASSTTQYDHKESCNGLYYQGSCYILHSDYQLFS\nDAKANCTAESSTLPNKSDVLITWLIDYVEDTWGSDGNPITKTTSDYQDSDVSQEVRKYFC\n</code></pre>\n\n<p>Here is my Python script:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import fileinput\n\nwith open('headers.txt', 'w') as hof, \\\n        open('sequences.txt', 'w') as sof:\n    for line in fileinput.input():\n        if line[0] == '&gt;':\n            hof.write(line)\n        else:\n            sof.write(line)\n</code></pre>\n\n<p>and my Rust script (which I compile in <code>cargo build --release</code>):</p>\n\n<pre><code>use std::io;\nuse std::fs::File;\nuse std::io::Write;\nuse std::io::BufRead;\n\nfn main() {\n    let stdin = io::stdin();\n    let mut headers = File::create(\"headers.txt\").unwrap();\n    let mut sequences = File::create(\"sequences.txt\").unwrap();\n\n    for line in stdin.lock().lines() {\n        let line = line.unwrap();\n        match &amp;line[..1] {\n            \"&gt;\" =&gt; writeln!(headers, \"{}\", line).unwrap(),\n            _ =&gt; writeln!(sequences, \"{}\", line).unwrap(),\n        }\n    }\n}\n</code></pre>\n\n<p>Running some benchmarks:</p>\n\n<p>Python 2.7</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ time bash -c 'cat uniparc_active-head.fasta | python2 src/main.py'\nreal    0m11.704s\nuser    0m6.996s\nsys     0m1.100s\n</code></pre>\n\n<p>Python 3.5</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ time bash -c 'cat uniparc_active-head.fasta | python3 src/main.py'\nreal    0m16.788s\nuser    0m12.508s\nsys     0m1.576s\n</code></pre>\n\n<p>PyPy 5.3.1</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ time bash -c 'cat uniparc_active-head.fasta | pypy src/main.py'\nreal    0m6.526s\nuser    0m1.536s\nsys     0m0.884s\n</code></pre>\n\n<p>Rust 1.14.0</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --release\n$ time bash -c 'cat uniparc_active-head.fasta | target/release/parse_text'\nreal    0m17.493s\nuser    0m2.728s\nsys     0m15.408s\n</code></pre>\n\n<p>So Rust is ~3x slower than PyPy, and even slower than Python 3.</p>\n\n<p>Can anyone shine some light on this? Did I make a mistake in the Rust code? If not, should I stick to Python / PyPy for processing text files, or is there another language that would be better for the job?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483048542, "post_id": 41387445, "comment_id": 69977761, "body": "Please take the time to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. You don&#39;t need approximately half of the code shown (<a href=\"http://play.integer32.com/?gist=3e6b0bef5db6a1732494a16f01de2c3d&amp;version=stable\" rel=\"nofollow noreferrer\">for example</a>)"}], "answers": [{"comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483134716, "post_id": 41387614, "comment_id": 70008777, "body": "@Shepmaster, thanks. It has more meat to the bone now. Only thing that&#39;s still unclear to me is why <code>foo.a</code> would be invalid. Invalid in what sense? Pointing to a &quot;unprotected heap memory&quot; block?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483136268, "post_id": 41387614, "comment_id": 70009248, "body": "Pointing to a piece of allocated memory on the heap is a straightforward problem, yes. Ownership of that value controls who frees the memory, and a double free would be a problem. However, there&#39;s nothing special about the heap here. For example, if you have a <code>MutexGuard</code> or a <code>File</code> or anything that performs actions when dropped, &quot;duplicating&quot; ownership would be a <i>bad</i> thing."}], "tags": [], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "is_accepted": true, "score": 3, "last_activity_date": 1483133990, "last_edit_date": 1483133990, "creation_date": 1483047852, "answer_id": 41387614, "question_id": 41387445, "link": "https://stackoverflow.com/questions/41387445/how-do-i-perform-an-operation-only-when-two-variables-are-not-none-without-copyi/41387614#41387614", "title": "How do I perform an operation only when two variables are not None without copying them?", "body": "<p>You need to tell the <code>if let</code> statement to only reference <code>a</code> and <code>b</code> to <code>foo.a</code> and <code>foo.b</code>, otherwise <code>if let</code> would move some parts out of the borrowed value. This is forbidden for two reasons:</p>\n\n<ol>\n<li>The reference is immutable, so it can not be changed. </li>\n<li>References are always guaranteed to point to completely valid objects. If you could move <code>foo.a</code> into <code>a</code>, \"stealing away\" the struct from your lender, then the value residing in <code>foo.a</code> would no longer be valid, making <code>foo</code> also invalid.</li>\n</ol>\n\n<p>One solution would be to duplicate the values <code>Foo::a</code> and <code>Foo::b</code> via <code>clone()</code> which is - as you noted - unneeded and performance wise not optimal, especially since it would mean a deep copy.</p>\n\n<p>I got it working without copying:</p>\n\n<pre><code>if let (&amp;Some(ref a), &amp;Some(b)) = (&amp;foo.a, &amp;foo.b) {\n    println!(\"a: {:?}, b: {}\", a, b);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1483048747, "last_edit_date": 1495542295, "creation_date": 1483048747, "answer_id": 41387761, "question_id": 41387445, "link": "https://stackoverflow.com/questions/41387445/how-do-i-perform-an-operation-only-when-two-variables-are-not-none-without-copyi/41387761#41387761", "title": "How do I perform an operation only when two variables are not None without copying them?", "body": "<p>Using a smaller example:</p>\n\n<pre><code>struct Foo {\n    a: Option&lt;String&gt;,\n    b: Option&lt;String&gt;,\n}\n\nfn main() {\n    let foo = &amp;Foo {\n        a: Some(\"hi\".into()),\n        b: Some(\"world\".into()),\n    };\n\n    if let (Some(a), Some(b)) = (foo.a, foo.b) {\n        println!(\"a: {}, b: {}\", a, b);\n    }\n}\n</code></pre>\n\n<p>You can use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_ref\" rel=\"nofollow noreferrer\"><code>Option::as_ref</code></a> to perform the same type of matching on a reference as <a href=\"https://stackoverflow.com/a/41387614/155423\">the previous answer</a>:</p>\n\n<pre><code>if let (Some(a), Some(b)) = (foo.a.as_ref(), foo.b.as_ref()) {\n    println!(\"a: {}, b: {}\", a, b);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 3, "last_activity_date": 1483110037, "last_edit_date": 1483110037, "creation_date": 1483087141, "answer_id": 41393166, "question_id": 41387445, "link": "https://stackoverflow.com/questions/41387445/how-do-i-perform-an-operation-only-when-two-variables-are-not-none-without-copyi/41393166#41393166", "title": "How do I perform an operation only when two variables are not None without copying them?", "body": "<p>You can <a href=\"https://doc.rust-lang.org/stable/book/patterns.html#destructuring\" rel=\"nofollow noreferrer\">destructure</a> <code>Foo</code> instead of creating a tuple:</p>\n\n<pre><code>if let Foo { a: Some(ref a), b: Some(b), .. } = *foo {\n    println!(\"a: {:?}, b: {}\", a, b);\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 41387614, "answer_count": 3, "score": 0, "last_activity_date": 1483133990, "creation_date": 1483046873, "last_edit_date": 1483048228, "question_id": 41387445, "link": "https://stackoverflow.com/questions/41387445/how-do-i-perform-an-operation-only-when-two-variables-are-not-none-without-copyi", "title": "How do I perform an operation only when two variables are not None without copying them?", "body": "<p>I want to perform an operation if and only if <code>a</code> and <code>b</code> are not <code>None</code>. I do not want create a copy of complex structures, which is why <code>struct X</code> does not implement <code>Clone</code>.</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::cell::RefCell;\n\n#[derive(Debug)]\nstruct X {\n    d: u32,\n}\n\nstruct Foo {\n    a: Option&lt;X&gt;,\n    b: Option&lt;u32&gt;,\n    c: u32,\n}\n\nfn main() {\n    let smart_ptr = Arc::new(Mutex::new(RefCell::new(Foo {\n        a: Some(X { d: 1 }),\n        b: Some(2),\n        c: 3,\n    })));\n\n    {\n        let lock = smart_ptr.lock().unwrap();\n        let foo = lock.borrow();\n        if let (Some(ref a), Some(b)) = (foo.a, foo.b) {\n            println!(\"a: {:?}, b: {}\", a, b);\n        }\n    }\n}\n</code></pre>\n\n<p>If I try to compile this code, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:25:42\n   |\n25 |         if let (Some(ref a), Some(b)) = (foo.a, foo.b) {\n   |                                          ^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>How should I fix the <code>if</code> statement to get what I want without compilation errors?</p>\n"}, {"tags": ["xml", "xsd", "rust"], "comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 2, "creation_date": 1483046731, "post_id": 41386348, "comment_id": 69977091, "body": "I don&#39;t think that this exists. When it comes to serialization/deserialization in general the project which is furthest IMO is <a href=\"https://github.com/serde-rs/serde\" rel=\"nofollow noreferrer\">serde</a>, and there&#39;s a sibling project <a href=\"https://github.com/serde-rs/xml\" rel=\"nofollow noreferrer\">serde-xml</a>. The status there is that XML deserialization only works when you come with the struct code up front"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1483049292, "post_id": 41386348, "comment_id": 69978073, "body": "@hansaplast Perhaps this situation will improve with procedural macros.."}, {"owner": {"reputation": 3804, "user_id": 541794, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e68f829331a1daed2bc631493c6e9e92?s=128&d=identicon&r=PG", "display_name": "forgemo", "link": "https://stackoverflow.com/users/541794/forgemo"}, "edited": false, "score": 0, "creation_date": 1550158271, "post_id": 41386348, "comment_id": 96175259, "body": "about two years have passed now ... are there any updates?"}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1576083550, "post_id": 41386348, "comment_id": 104786153, "body": "I found some prototype at <a href=\"https://github.com/ProgVal/rust-xml-schema\" rel=\"nofollow noreferrer\">github.com/ProgVal/rust-xml-schema</a>, so if somebody is interested in lending a hand\u2026"}], "answers": [{"tags": [], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "is_accepted": false, "score": 0, "last_activity_date": 1604929999, "last_edit_date": 1604929999, "creation_date": 1604928366, "answer_id": 64752557, "question_id": 41386348, "link": "https://stackoverflow.com/questions/41386348/is-there-a-program-that-would-generate-rust-structures-from-a-xml-schema-file/64752557#64752557", "title": "Is there a program that would generate Rust structures from a XML schema file?", "body": "<p>Yes there is <a href=\"https://github.com/estk/xmlschemer\" rel=\"nofollow noreferrer\">xmlschemer</a>. Unfortunately it hasn't been maintained, and uses some nightly features which make it impossible to compile. I even tried installing an old version of the nightly compiler but that failed too due compile errors in <code>rustc-ap-rustc_lexer</code>.</p>\n<p>There's also <a href=\"https://github.com/media-io/xml-schema\" rel=\"nofollow noreferrer\">xml-schema</a> which I haven't tried yet.</p>\n"}], "owner": {"reputation": 2820, "user_id": 2180332, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c1611973aeffb045fed86daeaff3ad78?s=128&d=identicon&r=PG", "display_name": "azmeuk", "link": "https://stackoverflow.com/users/2180332/azmeuk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1446, "favorite_count": 3, "closed_date": 1604937126, "answer_count": 1, "score": 8, "last_activity_date": 1604933312, "creation_date": 1483041244, "last_edit_date": 1604933312, "question_id": 41386348, "link": "https://stackoverflow.com/questions/41386348/is-there-a-program-that-would-generate-rust-structures-from-a-xml-schema-file", "closed_reason": "Not suitable for this site", "title": "Is there a program that would generate Rust structures from a XML schema file?", "body": "<p>I know some programs can generate Java, C# or C++ classes from XSD files, but I am looking for something that would generate Rust code.</p>\n<p>An example would be appreciated.</p>\n"}, {"tags": ["rust", "optional", "predicate"], "answers": [{"comments": [{"owner": {"reputation": 3185, "user_id": 114887, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6b0c7e3c2d9ff81adf7470e066e4a705?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew Piziak", "link": "https://stackoverflow.com/users/114887/matthew-piziak"}, "edited": false, "score": 1, "creation_date": 1483033250, "post_id": 41384647, "comment_id": 69971383, "body": "Oh god. Too much abstract error handling. I forgot how to use if-else statements. -_-"}, {"owner": {"reputation": 3185, "user_id": 114887, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6b0c7e3c2d9ff81adf7470e066e4a705?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew Piziak", "link": "https://stackoverflow.com/users/114887/matthew-piziak"}, "edited": false, "score": 2, "creation_date": 1483036204, "post_id": 41384647, "comment_id": 69972748, "body": "Thank you for taking my brain fart and running with it. Excellent answer. :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1483034349, "last_edit_date": 1483034349, "creation_date": 1483033198, "answer_id": 41384647, "question_id": 41384597, "link": "https://stackoverflow.com/questions/41384597/return-value-if-passes-predicate-else-default/41384647#41384647", "title": "Return value if passes predicate, else default", "body": "<blockquote>\n  <p>I thought there would be something on <code>Option</code> or <code>Result</code></p>\n</blockquote>\n\n<p>But neither of these types appear here. Subtracting two numbers yields another number.</p>\n\n<p>It appears you just want a traditional if-else statement:</p>\n\n<pre><code>fn main() {\n    let a = 3 - 5;\n    assert_eq!(if a &lt; 0 { 0 } else { a }, 0);\n}\n</code></pre>\n\n<p>Since you have two values that can be compared, you may also be interested in <code>max</code>:</p>\n\n<pre><code>use std::cmp::max;\n\nfn main() {\n    assert_eq!(max(0, 3 - 5), 0);\n}\n</code></pre>\n\n<hr>\n\n<p>You <em>can</em> make your proposed syntax work, but I'm not sure it's worth it. Presented without further comment...</p>\n\n<pre><code>fn main() {\n    assert_eq!((3 - 5).but_if(|&amp;v| v &lt; 0).then(0), 0)\n}\n\ntrait ButIf: Sized {\n    fn but_if&lt;F&gt;(self, f: F) -&gt; ButIfTail&lt;Self&gt;\n        where F: FnOnce(&amp;Self) -&gt; bool;\n}\n\n// or `impl&lt;T&gt; ButIf for T {` for maximum flexibility\nimpl ButIf for i32 {\n    fn but_if&lt;F&gt;(self, f: F) -&gt; ButIfTail&lt;Self&gt;\n        where F: FnOnce(&amp;Self) -&gt; bool,\n    {\n        ButIfTail(f(&amp;self), self)\n    }\n}\n\nstruct ButIfTail&lt;T&gt;(bool, T);\n\nimpl&lt;T&gt; ButIfTail&lt;T&gt; {\n    fn then(self, alt: T) -&gt; T {\n        if self.0 {\n            alt\n        } else {\n            self.1\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1551132760, "last_edit_date": 1551132760, "creation_date": 1483040120, "answer_id": 41386130, "question_id": 41384597, "link": "https://stackoverflow.com/questions/41384597/return-value-if-passes-predicate-else-default/41386130#41386130", "title": "Return value if passes predicate, else default", "body": "<p><strong>Update:</strong> This got a bit nicer since <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1270-2018-06-21\" rel=\"nofollow noreferrer\">Rust 1.27</a>, when <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.filter\" rel=\"nofollow noreferrer\"><code>Option::filter</code></a> was added:</p>\n\n<pre><code>assert_eq!(Some(3 - 5).filter(|&amp;v| v &gt;= 0).unwrap_or(0), 0);\n</code></pre>\n\n<hr>\n\n<p>Prior to Rust 1.27, you would have needed an iterator in order to write a single, chained expression without lots of additional custom machinery:</p>\n\n<pre><code>assert_eq!(Some(3 - 5).into_iter().filter(|&amp;v| v &gt;= 0).next().unwrap_or(0), 0);\n</code></pre>\n"}], "owner": {"reputation": 3185, "user_id": 114887, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6b0c7e3c2d9ff81adf7470e066e4a705?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew Piziak", "link": "https://stackoverflow.com/users/114887/matthew-piziak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "accepted_answer_id": 41384647, "answer_count": 2, "score": 1, "last_activity_date": 1551268407, "creation_date": 1483033001, "last_edit_date": 1551268407, "question_id": 41384597, "link": "https://stackoverflow.com/questions/41384597/return-value-if-passes-predicate-else-default", "title": "Return value if passes predicate, else default", "body": "<p>How can I replace a value if it fails a predicate?</p>\n\n<p>To illustrate:</p>\n\n<pre><code>assert_eq!((3-5).but_if(|v| v &lt; 0).then(0), 0)\n</code></pre>\n\n<p>I thought there would be something on <code>Option</code> or <code>Result</code> to allow this, but I cannot find it.</p>\n"}, {"tags": ["generics", "rust", "polymorphism", "trait-objects"], "answers": [{"comments": [{"owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "edited": false, "score": 0, "creation_date": 1483032763, "post_id": 41383868, "comment_id": 69971167, "body": "I&#39;m still struggling with this. Will it work with multiple traits though? I&#39;ll need things like <code>ParsePage</code>, <code>GetQuery</code>, etc. and will need something that I can extend to cover all the traits that need implementing."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "edited": false, "score": 0, "creation_date": 1483034486, "post_id": 41383868, "comment_id": 69971971, "body": "@jbrown why do you believe it wont work with multiple traits?"}, {"owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "edited": false, "score": 0, "creation_date": 1483039942, "post_id": 41383868, "comment_id": 69974411, "body": "For some reason I needed to add <code>?Sized</code> into <code>Spider</code> as well, as in <code>struct Spider&lt;T: ?Sized + CanGetTitle &gt;</code>. This is great to know though, thanks a lot."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "edited": false, "score": 0, "creation_date": 1483100347, "post_id": 41383868, "comment_id": 69993968, "body": "@jbrown: The <code>?Sized</code> should not be necessary for a concrete <code>T</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1547955204, "last_edit_date": 1547955204, "creation_date": 1483030157, "answer_id": 41383868, "question_id": 41383790, "link": "https://stackoverflow.com/questions/41383790/variable-parameterised-over-a-trait-not-a-struct/41383868#41383868", "title": "Variable parameterised over a trait not a struct?", "body": "<blockquote>\n  <p>How can I declare that <code>spider</code> should be any <code>Spider&lt;T: CanGetTitle&gt;</code>?</p>\n</blockquote>\n\n<p>You cannot. Simply put, the compiler would have no idea how much space to allocate to store <code>spider</code> on the stack.</p>\n\n<p>Instead, you will want to use a <a href=\"https://doc.rust-lang.org/stable/book/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\"><em>trait object</em></a>: <code>Box&lt;CanGetTitle&gt;</code>:</p>\n\n<pre><code>impl&lt;T: ?Sized&gt; CanGetTitle for Box&lt;T&gt;\nwhere\n    T: CanGetTitle,\n{\n    fn get_title(&amp;self) -&gt; String {\n        (**self).get_title()\n    }\n}\n\nfn main() {\n    let innards: Box&lt;CanGetTitle&gt; = match SiteName::Google {\n        SiteName::Google =&gt; Box::new(GoogleParser),\n        SiteName::Yahoo =&gt; Box::new(YahooParser),\n    };\n    let spider = Spider { parser: innards };\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "edited": false, "score": 0, "creation_date": 1483090110, "post_id": 41387528, "comment_id": 69989343, "body": "Hmm interesting. I think in this case though there&#39;ll be a lot of commonality for what I want to do between sites, with the only differences things like exactly which HTML selectors to use to extract the data I need depending on the site, etc."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483100477, "post_id": 41387528, "comment_id": 69994029, "body": "<i>at the cost of extra pointer indirection when the data needs to be accessed</i> =&gt; Actually, that&#39;s the least cost you pay for it. The greater cost is that baring an optimizer smart enough to devirtualize the call, this inhibits inlining, which is a key enabler for optimizations. So while the cost of an extra pointer dereference/virtual call is very small, the loss of inlining and optimizations can (in tight loops) be very costly indeed."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1483100792, "post_id": 41387528, "comment_id": 69994174, "body": "@MatthieuM. Thanks, made a tweak to make that clear."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1488552441, "last_edit_date": 1488552441, "creation_date": 1483047371, "answer_id": 41387528, "question_id": 41383790, "link": "https://stackoverflow.com/questions/41383790/variable-parameterised-over-a-trait-not-a-struct/41387528#41387528", "title": "Variable parameterised over a trait not a struct?", "body": "<blockquote>\n  <p>How can I declare that <code>spider</code> should be any <code>Spider&lt;T: CanGetTitle&gt;</code>?</p>\n</blockquote>\n\n<p>Just to add a little to what @Shepmaster already said, <code>spider</code> cannot be <em>any</em> <code>Spider&lt;T&gt;</code>, because it has to be exactly <em>one</em> <code>Spider&lt;T&gt;</code>. Rust implements generics using monomorphization (explained <a href=\"https://doc.rust-lang.org/beta/book/trait-objects.html#static-dispatch\" rel=\"nofollow noreferrer\">here</a>) which means it compiles a separate version of your polymorphic function for each concrete type that is used. If the compiler cannot deduce a unique <code>T</code> for a particular call site then it's a compile error. In your case, the compiler deduced that the type must be <code>Spider&lt;Google&gt;</code>, but then the next line tries to treat it as <code>Spider&lt;Yahoo&gt;</code>.</p>\n\n<p>Using a trait object lets you defer all of that to runtime. By storing the actual object on the heap and using a <code>Box</code>, the compiler knows how much space needs to be stack allocated (just the size of a <code>Box</code>). But this comes with performance costs: there is extra pointer indirection when the data needs to be accessed and, more significantly, the optimising compiler cannot inline virtual calls.</p>\n\n<p>It is often possible to rejig things so you can work with a monomorphic type anyway. One way to do that in your case is to avoid the temporary assignment to a polymorphic variable, and use the value only at a place where you know its concrete type:</p>\n\n<pre><code>fn do_stuff&lt;T: CanGetTitle&gt;(spider: Spider&lt;T&gt;) {\n    println!(\"{:?}\", spider.parser.get_title());\n}\n\nfn main() {\n    let url = \"http://www.google.com\";\n    let site_name = SiteName::from_url(&amp;url);\n    match site_name {\n        SiteName::Google =&gt; do_stuff(Spider { parser: GoogleParser }),\n        SiteName::Yahoo =&gt; do_stuff(Spider { parser: YahooParser })\n    };\n}\n</code></pre>\n\n<p>Notice that each time <code>do_stuff</code> is called, <code>T</code> resolves to a different type. You only write one implementation of <code>do_stuff</code>, but the compiler monomorphizes it twice - once for each type that you called it with.</p>\n\n<p>If you use a <code>Box</code> then each call to <code>parser.get_title()</code> will have to be looked up in the <code>Box</code>'s <a href=\"https://doc.rust-lang.org/book/trait-objects.html#representation\" rel=\"nofollow noreferrer\">vtable</a>. But this version will usually be faster by avoiding the need for that lookup, and allowing the compiler the possibility of inlining the body of <code>parser.get_title()</code> in each case.</p>\n"}], "owner": {"reputation": 5825, "user_id": 2400966, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/937a1ba2c0aa7d9e24fd92b99e26e1e8?s=128&d=identicon&r=PG", "display_name": "jbrown", "link": "https://stackoverflow.com/users/2400966/jbrown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 481, "favorite_count": 0, "accepted_answer_id": 41383868, "answer_count": 2, "score": 2, "last_activity_date": 1547955204, "creation_date": 1483029784, "last_edit_date": 1547896206, "question_id": 41383790, "link": "https://stackoverflow.com/questions/41383790/variable-parameterised-over-a-trait-not-a-struct", "title": "Variable parameterised over a trait not a struct?", "body": "<p>I'm trying to wrap my head around Rust's generics. I'm writing something to extract HTML from different web sites. What I want is something like this:</p>\n\n<pre><code>trait CanGetTitle {\n    fn get_title(&amp;self) -&gt; String;\n}\n\nstruct Spider&lt;T: CanGetTitle&gt; {\n    pub parser: T\n}\n\nstruct GoogleParser;\nimpl CanGetTitle for GoogleParser {\n    fn get_title(&amp;self) -&gt; String {\n        \"title from H1\".to_string().clone()\n    }\n}\n\nstruct YahooParser;\nimpl CanGetTitle for YahooParser {\n    fn get_title(&amp;self) -&gt; String {\n        \"title from H2\".to_string().clone()\n    }\n}\n\nenum SiteName {\n    Google,\n    Yahoo,\n}\n\nimpl SiteName {\n    fn from_url(url: &amp;str) -&gt; SiteName {\n        SiteName::Google\n    }\n}\n\nfn main() {\n    let url = \"http://www.google.com\";\n    let site_name = SiteName::from_url(&amp;url);\n    let spider: Spider&lt;_&gt; = match site_name {\n        Google =&gt; Spider { parser: GoogleParser },\n        Yahoo =&gt; Spider { parser: YahooParser }\n    };\n\n    spider.parser.get_title();    // fails\n}\n</code></pre>\n\n<p>I'm getting an error about the <code>match</code> returning <code>Spider</code>s parameterised over two different types. It expects it to return <code>Spider&lt;GoogleParser&gt;</code> because that's the return type of the first arm of the pattern match. </p>\n\n<p>How can I declare that <code>spider</code> should be any <code>Spider&lt;T: CanGetTitle&gt;</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 1, "creation_date": 1483017896, "post_id": 41380557, "comment_id": 69963060, "body": "Thank you, I feel like the dumbest user in SO. I think one of the main problems I&#39;m having in learning Rust, is navigating the documentation. If you google &quot;Rust Char&quot;, you get the documentation for the module: <a href=\"https://doc.rust-lang.org/std/char/\" rel=\"nofollow noreferrer\">link</a> which does not include the method you mention. I see now that it is because it&#39;s part of the type and not the module, it just didn&#39;t seem obvious froms the docs to &quot;look there&quot;. &lt;/rant&gt;  Thanks again!"}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 1, "creation_date": 1483018292, "post_id": 41380557, "comment_id": 69963282, "body": "in turn, as a rust beginner myself, this was the first rust question I could answer :-) As for docs: I&#39;m using Dash for mac, which is just a wrapper around the docs you linked but somehow I find the things faster there than on the web (e.g. searching for char leads you to the primitive type and not to the module)"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1483018447, "post_id": 41380557, "comment_id": 69963359, "body": "Had not heard of dash before (funny, given my username). You just blew my mind. Thank you, kind stranger."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1483018486, "post_id": 41380557, "comment_id": 69963383, "body": "@Dash83: Yes, it&#39;s an issue with primitive types, with functions some time defined in one place and sometimes in another..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1483018538, "post_id": 41380557, "comment_id": 69963423, "body": "@hansaplast: Note that you can have the docs as local html pages, which eliminates network round-trips... and nice first answer, short, to the point, and with nice tips for the future!"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 1, "creation_date": 1483018590, "post_id": 41380557, "comment_id": 69963457, "body": "@Dash83: don&#39;t feel bad, that&#39;s what we&#39;re here for! I hope the two of you enjoy getting into Rust so far! Feel free to join <a href=\"http://chat.stackoverflow.com/rooms/62927/rust\">the SO Rust chat</a> if you want to talk about rusty stuff! :)"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1483022171, "post_id": 41380557, "comment_id": 69965385, "body": "Thanks, @LukasKalbertodt"}], "tags": [], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "is_accepted": true, "score": 15, "last_activity_date": 1483025172, "last_edit_date": 1483025172, "creation_date": 1483017396, "answer_id": 41380557, "question_id": 41380367, "link": "https://stackoverflow.com/questions/41380367/parsing-a-char-to-u32/41380557#41380557", "title": "Parsing a char to u32", "body": "<p><a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.to_digit\" rel=\"noreferrer\"><code>char::to_digit(radix)</code></a> does that. <code>radix</code> denotes the \"base\", i.e. 10 for the decimal system, 16 for hex, etc.:</p>\n\n<pre><code>let a = \"29\";\nfor c in a.chars() {\n    println!(\"{:?}\", c.to_digit(10));\n}\n</code></pre>\n\n<p>It returns an <code>Option</code>, so you need to <code>unwrap()</code> it, or better: <code>expect(\"that's no number!\")</code>. You can read more about proper error handling in <a href=\"https://doc.rust-lang.org/book/error-handling.html\" rel=\"noreferrer\">the appropriate chapter of the Rust book</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1483018041, "post_id": 41380607, "comment_id": 69963136, "body": "The answer by @hansaplast is just what I was looking for. Thanks though."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 8, "last_activity_date": 1483018435, "last_edit_date": 1483018435, "creation_date": 1483017622, "answer_id": 41380607, "question_id": 41380367, "link": "https://stackoverflow.com/questions/41380367/parsing-a-char-to-u32/41380607#41380607", "title": "Parsing a char to u32", "body": "<p>Well, you can always use the following hacky solution:</p>\n\n<pre><code>fn main() {\n    let a = \"29\";\n    for c in a.chars() {\n        println!(\"{}\", c as u32 - 48);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://en.wikipedia.org/wiki/ASCII#Printable_characters\" rel=\"noreferrer\">ASCII</a> digits are encoded with values from 48 to 57, so when you have a string containing characters 2 and 9 and attempt to interpret them as integers, you get 50 and 57. To get their expected values you just need to subtract 48 from them.</p>\n"}], "owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9652, "favorite_count": 1, "accepted_answer_id": 41380557, "answer_count": 2, "score": 8, "last_activity_date": 1483025172, "creation_date": 1483016776, "last_edit_date": 1483017564, "question_id": 41380367, "link": "https://stackoverflow.com/questions/41380367/parsing-a-char-to-u32", "title": "Parsing a char to u32", "body": "<p>As the questions states, how do I achieve this?</p>\n\n<p>If I have a code like this:</p>\n\n<pre><code>let a = \"29\";\nfor c in a.chars() {\n    println!(\"{}\", c as u32);\n}\n</code></pre>\n\n<p>What I obtain is the unicode codepoints for 2 and 9:</p>\n\n<ul>\n<li>50</li>\n<li>57</li>\n</ul>\n\n<p>What I want is to parse those characters into the actual numbers.</p>\n"}, {"tags": ["node.js", "memory-leaks", "rust", "node-ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1483027168, "post_id": 41372876, "comment_id": 69968194, "body": "For example, I created Rust code and changed the example to allocate ~1MiB per iteration, and my memory usage is <i>very slowly</i> creeping up over time; it&#39;s at ~12MiB after 4 minutes. It&#39;s actually using <i>less</i> memory than the <code>yarn</code> process I started it from. In other words, I <b>cannot reproduce</b> what you are saying."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1483175674, "post_id": 41372876, "comment_id": 70016912, "body": "If the same Rust library is not leaking when called from Python and Ruby, but leaking when called from Node.js, doesn&#39;t that indicate a possible bug in Node?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1483204352, "post_id": 41372876, "comment_id": 70023790, "body": "@user4815162342 certainly possible, but it could also be a bug in the implementation of how the Rust library is called from Node, i.e. the JS code presented here."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1483205413, "post_id": 41372876, "comment_id": 70024086, "body": "@Shepmaster Agreed. A good first step would be to replace the Rust code with equivalent (no-op) C code, and see if the problem persists. I have a hunch that this has nothing whatsoever to do with Rust."}], "owner": {"reputation": 33, "user_id": 2580461, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2096b9420deba6612f0d8524ec28dfdf?s=128&d=identicon&r=PG", "display_name": "cwchentw", "link": "https://stackoverflow.com/users/2580461/cwchentw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 344, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1492090522, "creation_date": 1482983313, "last_edit_date": 1492090522, "question_id": 41372876, "link": "https://stackoverflow.com/questions/41372876/memory-leak-in-a-node-js-extension-written-in-rust", "title": "Memory leak in a Node.js extension written in Rust", "body": "<p>I'm writing a Node.js extension in Rust. I called this toy library from C, checked it with Valgrind and no memory leak was found.</p>\n\n<p>I called the same library from Python and Ruby, running in an infinite loop, and see no sign of a memory leak. (I can not post the picture due to insufficient reputation here).</p>\n\n<p>When the same library is called from Node.js, the memory usage seems to increase with time: <a href=\"https://i.stack.imgur.com/1u4M0.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/1u4M0.png\" alt=\"The memory usage of the Node.js module\"></a></p>\n\n<p>The unit of time is the cycle of loop, not a real time.</p>\n\n<p>Here is the Rust code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C)]\npub struct Matrix {\n    m: Vec&lt;Vec&lt;f64&gt;&gt;,\n}\n\n#[no_mangle]\npub extern \"C\" fn matrix_new(nrow: usize, ncol: usize) -&gt; *mut Matrix {\n    let mut m = Vec::new();\n    for _ in 0..(nrow) {\n        let mut n = Vec::new();\n\n        for _ in 0..(ncol) {\n            n.push(0.0);\n        }\n\n        m.push(n);\n    }\n\n    Box::into_raw(Box::new(Matrix { m: m }))\n}\n\n#[no_mangle]\npub extern \"C\" fn matrix_free(matrix: *mut Matrix) {\n    if matrix.is_null() {\n        return\n    }\n\n    unsafe { Box::from_raw(matrix); }\n}\n</code></pre>\n\n<p>Here is the original Node.js code:</p>\n\n<pre><code>var ref = require('ref');\nvar ffi = require('ffi');\n\nvar c_matrix = ref.types.void;\nvar c_matrix_ptr = ref.refType(c_matrix);\n\nvar libmatrix = ffi.Library('./target/release/libmatrix.so', {\n    'matrix_new': [ c_matrix_ptr, ['size_t', 'size_t']],\n    'matrix_get': [ 'double', [ c_matrix_ptr, 'size_t', 'size_t']],\n    'matrix_set': [ 'double', [ c_matrix_ptr, 'size_t', 'size_t', 'double']],\n    'matrix_free': [ 'void', [ c_matrix_ptr ]]\n});\n\nvar matrix = function(nrow, ncol) {\n    \"use strict\";\n\n    var matrix = libmatrix.matrix_new(nrow, ncol);\n\n    Object.defineProperty(this, '_matrix', {\n        value: matrix,\n        writeable: false\n    });\n\n    return this;\n};\n\nmatrix.prototype.get = function(row, col) {\n    \"use strict\";\n\n    return libmatrix.matrix_get(this._matrix, row, col);\n};\n\nmatrix.prototype.set = function(row, col, value) {\n    \"use strict\";\n\n    libmatrix.matrix_set(this._matrix, row, col, value);\n};\n\nmatrix.prototype.free = function() {\n    \"use strict\";\n\n    libmatrix.matrix_free(this._matrix);\n};\n\nmodule.exports = matrix;\n\nif (!module.parent) {\n    while (true) {\n        var m = new matrix(3, 3);\n\n        m.free();\n        m = null;\n        delete global.m;\n\n        global.gc();\n        console.log(process.memoryUsage().rss);\n    }\n}\n</code></pre>\n\n<p>Some information:</p>\n\n<ul>\n<li>OS: Debian GNU/Linux (Jessie)</li>\n<li>Node.js: 7.2.0</li>\n<li>node-gyp: 7.2.0</li>\n<li>ffi: 2.2.0</li>\n<li>ref: 1.3.3</li>\n<li>Rust: 1.13.0</li>\n</ul>\n\n<p>I re-wrote the same library in C:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct Matrix {\n    size_t nrow;\n    size_t ncol;\n    double** mtx;\n} Matrix;\n\nvoid* matrix_new(size_t row, size_t col) {\n    Matrix* m = malloc(sizeof(Matrix));\n    m-&gt;nrow = row;\n    m-&gt;ncol = col;\n\n    m-&gt;mtx = malloc(m-&gt;nrow * sizeof(double*));\n\n    for (int i = 0; i &lt; m-&gt;nrow; i++) {\n        *((m-&gt;mtx)+i) = (double*) malloc(m-&gt;ncol * sizeof(double));\n    }\n\n    for (int i = 0; i &lt; m-&gt;nrow; i++) {\n        for (int j = 0; j &lt; m-&gt;ncol; j++) {\n            m-&gt;mtx[i][j] = 0.0;\n        }\n    }\n\n    return (void*) m;\n}\n\nvoid matrix_free(void* m) {\n    if (m == NULL) {\n        return;\n    }\n\n    double** ptr = ((Matrix*) m)-&gt;mtx;\n    for (int i = 0; i &lt; ((Matrix*) m)-&gt;nrow; i++) {\n        free((void*) (ptr[i]));\n    }\n\n   free((void*) ((Matrix*) m)-&gt;mtx);\n   free((void*) m);\n}\n</code></pre>\n\n<p>I also changed the version of Node from 7.2.0 to 7.3.0.  Here is the memory usage of the Node.js module with both C and Rust implementation:</p>\n\n<p><a href=\"https://i.imgur.com/jH7LWkU.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.imgur.com/jH7LWkU.png\" alt=\"The memory usage of the Node.js module from Rust and C\"></a></p>\n\n<p>I tried a no-op library without changing the Node.js code, finding something surprising myself:</p>\n\n<p><a href=\"https://i.imgur.com/KdL6M6D.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.imgur.com/KdL6M6D.png\" alt=\"The memory usage of the Node.js module from Rust, C, and no-op\"></a></p>\n"}]