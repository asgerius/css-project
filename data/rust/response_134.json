[{"tags": ["rust"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1501837958, "post_id": 45468755, "comment_id": 77966093, "body": "I would recommend the whole <code>partially_unsafe</code> function to be marked unsafe (<code>unsafe fn partialy_unsafe ...</code>) because it has a contract that needs to be fulfilled that the Rust type system and borrow checker cannot ascertain - namely, that the <code>*const scary_c_struct</code> pointer be valid. Documenting the existence of such a contract is the reason why <code>unsafe fn</code> exists."}], "answers": [{"comments": [{"owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "edited": false, "score": 0, "creation_date": 1501701169, "post_id": 45468865, "comment_id": 77899247, "body": "Either way it will panic, right?  Is there a difference between crashing inside vs. outside the unsafe block?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "edited": false, "score": 3, "creation_date": 1501705462, "post_id": 45468865, "comment_id": 77901652, "body": "@marathon this won&#39;t be a <i>panic</i>, which is a controlled situation. This is some lower level memory error like a segfault. And a crash is the <b>good</b> case. It&#39;s also likely that you expose secret information (e.g. passwords) corrupt data, allow for arbitrary code execution, etc."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1501710904, "post_id": 45468865, "comment_id": 77904314, "body": "On the contrary, I&#39;d say that shrinking the <code>unsafe</code> block makes it more likely that you will realize immediately the error is somewhere else. Increasing the scope of the <code>unsafe</code> block just increases the amount of code you have to search for the &quot;actual unsafety&quot; (e.g. initializing a pointer to null) and does nothing to reduce the amount of code you have to search for the logical error that caused the error."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1501708518, "last_edit_date": 1501708518, "creation_date": 1501700027, "answer_id": 45468865, "question_id": 45468755, "link": "https://stackoverflow.com/questions/45468755/is-there-an-idiom-for-assigning-a-var-to-the-result-of-an-unsafe-call-and-using/45468865#45468865", "title": "Is there an idiom for assigning a var to the result of an unsafe call and using that var later without nesting everything else inside of unsafe{}?", "body": "<p>The immediate answer is: <strong>Deferred Initialization</strong></p>\n\n<pre><code>let someval;\nunsafe {\n    someval = item.as_ref();\n}\n// use someval\n</code></pre>\n\n<p>However, is that what you really want?</p>\n\n<p>The ugly truth of <code>unsafe</code> is that it is <strong>pervasive</strong>, and percolates far beyond the boundary of the <code>unsafe</code> block.</p>\n\n<p>For example, the above allows:</p>\n\n<pre><code>let someval; // &amp;T\nunsafe {\n    someval = &amp;*(ptr::null() as *const T);\n}\n</code></pre>\n\n<p>in which case the crash will likely occur <em>outside</em> the <code>unsafe</code> block, even though its origin is within the <code>unsafe</code> block.</p>\n\n<p>Therefore, shrinking the <code>unsafe</code> block is here counter-productive; it induces a false sense of security.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1501705535, "last_edit_date": 1501705535, "creation_date": 1501703253, "answer_id": 45469733, "question_id": 45468755, "link": "https://stackoverflow.com/questions/45468755/is-there-an-idiom-for-assigning-a-var-to-the-result-of-an-unsafe-call-and-using/45469733#45469733", "title": "Is there an idiom for assigning a var to the result of an unsafe call and using that var later without nesting everything else inside of unsafe{}?", "body": "<p>There's no need for deferred evaluation here; blocks and unsafe blocks are expressions too:</p>\n\n<pre><code>fn partially_unsafe(item: *const scary_c_struct) -&gt; i32 {\n    let someval = unsafe { item.as_ref() };\n    match someval {\n        Some(big_long_block) =&gt; {\n            //lots of lines of code\n            42\n        }\n        None =&gt; -1,\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>but this subverts immutability</p>\n</blockquote>\n\n<p>You can always give up mutability by rebinding the variable:</p>\n\n<pre><code>let mut a = 0;\na += 1;\nlet a = a;\n</code></pre>\n\n<blockquote>\n  <p>I could also hide the <code>item.as_ref()</code> in its own function.</p>\n</blockquote>\n\n<p>That would be silly as the function would be identical to <code>as_ref</code> and would still need to be marked as <code>unsafe</code>, so you would gain nothing. It would make <em>far</em> more sense to do the opposite \u2014 move the safe (or at least <em>safer</em>) code out of this function:</p>\n\n<pre><code>fn partially_unsafe(item: *const scary_c_struct) -&gt; i32 {\n    unsafe {\n        item.as_ref().map_or(-1, |item| item.extracted_method())\n    }\n}\n</code></pre>\n\n<hr>\n\n<p><a href=\"https://stackoverflow.com/a/45468865/155423\">Matthieu M.'s answer</a> is spot-on about the scope of unsafe serving a purpose for the human in addition to requirements of the compiler. It's useful to use the scope of the block to highlight where the unsafety can reach.</p>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 45468865, "answer_count": 2, "score": 2, "last_activity_date": 1501708518, "creation_date": 1501699664, "last_edit_date": 1501703010, "question_id": 45468755, "link": "https://stackoverflow.com/questions/45468755/is-there-an-idiom-for-assigning-a-var-to-the-result-of-an-unsafe-call-and-using", "title": "Is there an idiom for assigning a var to the result of an unsafe call and using that var later without nesting everything else inside of unsafe{}?", "body": "<p>I would like to assign <code>someval</code> to the result of an unsafe call and use <code>someval</code> later:</p>\n\n<pre><code>fn partially_unsafe(item: *const scary_c_struct) -&gt; i32 {\n    let someval = item.as_ref();\n    match someval {\n        Some(big_long_block) =&gt; {\n            //lots of lines of code\n            42\n        }\n        None =&gt; -1,\n    }\n}\n</code></pre>\n\n<p>This doesn't compile because <code>item.as_ref()</code> needs to be in an <code>unsafe</code> block:</p>\n\n<pre><code>fn partially_unsafe(item: *const scary_c_struct) -&gt; i32 {\n    unsafe {\n        let someval = item.as_ref();\n        match someval {\n            Some(big_long_block) =&gt; {\n                //lots of lines of code\n                42\n            }\n            None =&gt; -1,\n        }\n    }\n}\n</code></pre>\n\n<p>This seems cumbersome if there's a lot of other nested blocks in the function.</p>\n\n<p>I could use this expression, but this subverts immutability:</p>\n\n<pre><code>// ...\nlet mut someval = None;\nunsafe {\n    someval = item.as_ref();\n}\n// ...\n</code></pre>\n\n<p>I could also hide the <code>item.as_ref()</code> in its own function.</p>\n\n<p>None of these seem satisfactory. Is there less cumbersome way to express unsafe assignments?</p>\n"}, {"tags": ["rust", "idioms"], "comments": [{"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1501692965, "post_id": 45465875, "comment_id": 77894332, "body": "Very similar question: <a href=\"https://stackoverflow.com/questions/41352710/nested-method-calls-with-mut-receivers-result-in-borrow-checker-errors\" title=\"nested method calls with mut receivers result in borrow checker errors\">stackoverflow.com/questions/41352710/&hellip;</a>"}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 1, "creation_date": 1501692996, "post_id": 45465875, "comment_id": 77894347, "body": "There is rfc about it: <a href=\"https://github.com/rust-lang/rfcs/issues/811\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/811</a> it would be interesting to know progress on this."}, {"owner": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 0, "creation_date": 1501693048, "post_id": 45465875, "comment_id": 77894380, "body": "Is this only to truncate a vector, or are you looking for a solution that can also grow it?"}, {"owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "edited": false, "score": 0, "creation_date": 1501693204, "post_id": 45465875, "comment_id": 77894483, "body": "Im looking for a solution to generally resize a vector."}], "answers": [{"comments": [{"owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "edited": false, "score": 1, "creation_date": 1501694293, "post_id": 45467086, "comment_id": 77895181, "body": "Ah, now I understand the problem... I thought the function was evaluated after the function-parameters; I didn\u2019t realize that the function really got expanded to <code>Vec::resize(&amp;mut my_vec, ...)</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1501694358, "last_edit_date": 1501694358, "creation_date": 1501693927, "answer_id": 45467086, "question_id": 45465875, "link": "https://stackoverflow.com/questions/45465875/one-liner-for-relative-vector-resizing-in-rust/45467086#45467086", "title": "One-liner for relative-vector-resizing in Rust", "body": "<p>You cannot currently put the two in lines into one as described in <a href=\"https://stackoverflow.com/q/41187296/155423\">Cannot borrow as immutable because it is also borrowed as mutable in function arguments</a>.</p>\n\n<blockquote>\n  <p>but I'm pretty sure that there is an one-liner...</p>\n</blockquote>\n\n<p>Of course:</p>\n\n<pre><code>{ let old_size = my_vec.len(); my_vec.resize(old_size - 2, 0x00); }\n</code></pre>\n\n<p>Less cheekily, you can add a trait method:</p>\n\n<pre><code>trait ResizeRelative&lt;T&gt; {\n    fn resize_relative(&amp;mut self, delta: isize, default: T);\n}\n\nimpl&lt;T: Clone&gt; ResizeRelative&lt;T&gt; for Vec&lt;T&gt; {\n    fn resize_relative(&amp;mut self, delta: isize, default: T) {\n        let len = if delta &lt; 0 {\n            self.len() - ((-delta) as usize)\n        } else {\n            self.len() + delta as usize\n        };\n\n        self.resize(len, default);\n    }\n}\n\nfn main() {\n    let mut v = Vec::new();\n    v.resize_relative(3, 42);\n    v.resize_relative(-1, 2);\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>Note the gyrations you need to perform to be able to resize in both directions. Even then, there's still the possibility of panicking if you resize below zero.</p>\n"}], "owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "accepted_answer_id": 45467086, "answer_count": 1, "score": 1, "last_activity_date": 1501694358, "creation_date": 1501690084, "question_id": 45465875, "link": "https://stackoverflow.com/questions/45465875/one-liner-for-relative-vector-resizing-in-rust", "title": "One-liner for relative-vector-resizing in Rust", "body": "<p>If I want to resize a vector in C++/Swift/Any other language I usually write something like this <code>my_vec.resize(my_vec.size(), 0x00);</code> but if I try this in Rust I get the error <code>immutable borrow occurs here</code>.</p>\n\n<p>Of course I can write something like this:</p>\n\n<pre><code>let old_size = my_vec.len();\nmy_vec.resize(old_size - 2, 0x00);\n</code></pre>\n\n<p>but I'm pretty sure that there is an one-liner...</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501687344, "post_id": 45464700, "comment_id": 77890561, "body": "You can only use <code>downcast</code> with <code>&#39;static</code> lifetimes. Duplicate of <a href=\"https://stackoverflow.com/q/27892375/155423\">stackoverflow.com/q/27892375/155423</a>"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1501709642, "post_id": 45464700, "comment_id": 77903816, "body": "I&#39;m not an expert at Rust (yet) but FYI you might consider using generics more rather than trait objects. Your usage of trait objects is what is adding to a lot of the complexity here. You could consider something like <a href=\"https://play.rust-lang.org/?gist=73d9693dfdf3857f7fb14a561f4ce302&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 725, "user_id": 156459, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/e944b56331602c572d23b47243dca582?s=128&d=identicon&r=PG", "display_name": "thamurath", "link": "https://stackoverflow.com/users/156459/thamurath"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1501761667, "post_id": 45464700, "comment_id": 77927597, "body": "Thanks for the comment @loganfsmyth ...  The only problem is that I found myself trying to store direferent types inside a container ... You know ... like a vector of &quot;things that can collide &quot; but It seems that is not possible in Rust ( at least as far as I know right now ). Rust is not an OO language, I know ... but I find the traits a little bit limiting ... too many years with c++ I fear..."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1501782023, "post_id": 45464700, "comment_id": 77943579, "body": "If you&#39;ve got an explicit finite set of things, you&#39;d make an enum with an entry for each type, then make the array a list of enum values."}], "owner": {"reputation": 725, "user_id": 156459, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/e944b56331602c572d23b47243dca582?s=128&d=identicon&r=PG", "display_name": "thamurath", "link": "https://stackoverflow.com/users/156459/thamurath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1501687009, "creation_date": 1501686806, "last_edit_date": 1501687009, "question_id": 45464700, "link": "https://stackoverflow.com/questions/45464700/traits-lifetimes-and-containers", "title": "Traits, lifetimes and containers", "body": "<p>I have two types of structs:</p>\n\n<ol>\n<li><code>Ship</code>s  have a 2D position and a speed </li>\n<li><code>Target</code>s are standing</li>\n</ol>\n\n<p>I have a vector with all the <code>Ship</code>s and another with all the <code>Target</code>s. I want to know then a <code>Ship</code> collides with another <code>Ship</code> or with a <code>Target</code>, so I will go through all the ships and check for collisions.</p>\n\n<p>I know this is a bunch of code, but I did want to provide a full example.</p>\n\n<pre><code>use std::any::Any;\n\n\ntrait AsAny {\n    fn as_any(&amp;self) -&gt; &amp;Any;\n}\n\nimpl&lt;T: Any&gt; AsAny for T {\n    fn as_any(&amp;self) -&gt; &amp;Any {\n        self\n    }\n}\n\ntrait AsPoint {\n    fn as_point(&amp;self) -&gt; &amp;Point;\n}\n\nimpl&lt;T: Point&gt; AsPoint for T {\n    fn as_point(&amp;self) -&gt; &amp;Point {\n        self\n    }\n}\n\ntrait Point: AsPoint {\n    fn x(&amp;self) -&gt; i32;\n    fn y(&amp;self) -&gt; i32;\n\n\n    fn distance(&amp;self, rhs: &amp;Point) -&gt; i32 {\n        (( ((self.x() - rhs.x()) as f64).powi(2) +\n            ((self.y() - rhs.y()) as f64).powi(2)\n        )as f64).sqrt().round() as i32\n    }\n}\n\nstruct Ship {\n    x: i32,\n    y: i32,\n    radius: i32,\n    vx: i32,\n    vy: i32,\n}\n\nstruct Target {\n    x: i32,\n    y: i32,\n    radius: i32,\n}\n\nstruct Collision&lt;'a&gt; {\n    pub a: &amp;'a mut (Element + 'a),\n    pub b: &amp;'a mut (Element + 'a),\n}\n\ntrait Element: Point + AsAny {\n    fn radius(&amp;self) -&gt; i32;\n    fn apply_collision(&amp;mut self, rhs: &amp;mut Element);\n}\n\nimpl Point for Target {\n    fn x(&amp;self) -&gt; i32 {\n        self.x\n    }\n\n    fn y(&amp;self) -&gt; i32 {\n        self.y\n    }\n}\n\nimpl Point for Ship {\n    fn x(&amp;self) -&gt; i32 {\n        self.x\n    }\n\n    fn y(&amp;self) -&gt; i32 {\n        self.y\n    }\n}\nimpl Element for Ship {\n    fn apply_collision(&amp;mut self, rhs: &amp;mut Element) {\n\n        if let Some(ref mut as_target) = rhs.as_any().downcast_ref::&lt;Target&gt;() {\n            self.collision_with_target(as_target);\n        } else if let Some(ref mut as_ship) = rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n            self.collision_with_ship(as_ship);\n        }\n    }\n    fn radius(&amp;self) -&gt; i32 {\n        self.radius\n    }\n}\n\nimpl Element for Target {\n    fn radius(&amp;self) -&gt; i32 {\n        self.radius\n    }\n\n    fn apply_collision(&amp;mut self, rhs: &amp;mut Element) {\n        match  rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n            Some(ref mut as_ship ) =&gt; {\n                as_ship.vx = -as_ship.vx;\n                as_ship.vy = -as_ship.vy;\n            },\n            None =&gt; panic!(), // should never happen\n        }\n    }\n}\n\nimpl Ship {\n    fn collision_with_target(&amp;mut self, target: &amp;Target) {\n        self.vx = -self.vx;\n        self.vy = -self.vy;\n    }\n\n    fn collision_with_ship(&amp;mut self, ship: &amp;mut Ship) {\n        let vx = self.vx;\n        let vy = self.vy;\n\n        self.vx = ship.vx;\n        self.vy = ship.vy;\n\n        ship.vx = vx;\n        ship.vy = vy;\n    }\n}\n\nfn collide&lt;'a&gt;(u1: &amp;'a mut Element, u2: &amp;'a mut Element) -&gt; Option&lt;Collision&lt;'a&gt;&gt; {\n\n    if u1.as_point().distance(u2.as_point()) &lt; u1.radius() + u2.radius() {\n        Some(Collision { a: u1, b: u2 })\n    } else {None}\n\n}\n\nfn handle_collisions(ships : &amp;mut Vec&lt;Ship&gt;, targets: &amp;mut Vec&lt;Target&gt;) {\n\n    for ship in ships.iter_mut() {\n        for other_ship in &amp;mut ships[1..] {\n            let collision = collide(ship, other_ship);\n\n            if let Some(col) = collision {\n                col.a.apply_collision(col.b);\n            }\n        }\n\n        for target in targets.iter_mut() {\n            let collision = collide(ship,target);\n\n            if let Some(col) = collision {\n                col.a.apply_collision(col.b);\n            }\n        }\n    }\n}\nfn main() {\n    let ships: Vec&lt;Ship&gt; = vec![Ship {\n        x: 10,\n        y: 10,\n        radius: 20,\n        vx: 5,\n        vy: 5,\n    }, Ship {\n        x: 20,\n        y: 20,\n        radius: 10,\n        vx: 100,\n        vy: 100,\n    }];\n\n    let targets = vec![ Target{\n        x: 15,\n        y: 15,\n        radius: 10,\n    }];\n\n\n    handle_collisions(&amp;mut ships, &amp;mut targets);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=453de0579100506e7634635f3e5b813e&amp;version=stable\" rel=\"nofollow noreferrer\">Here</a> is a playground link to the code.</p>\n\n<p>Compiler output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling playground v0.0.1 (file:///playground)\nerror[E0477]: the type `&amp;mut Element` does not fulfill the required lifetime\n  --&gt; src/main.rs:84:51\n   |\n84 |         } else if let Some(ref mut as_ship) = rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n   |                                                   ^^^^^^\n   |\n   = note: type must satisfy the static lifetime\n\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:82:46\n   |\n82 |         if let Some(ref mut as_target) = rhs.as_any().downcast_ref::&lt;Target&gt;() {\n   |                                              ^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the method body at 80:5...\n  --&gt; src/main.rs:80:5\n   |\n80 | /     fn apply_collision(&amp;mut self, rhs: &amp;mut Element) {\n81 | |\n82 | |         if let Some(ref mut as_target) = rhs.as_any().downcast_ref::&lt;Target&gt;() {\n83 | |             self.collision_with_target(as_target);\n...  |\n86 | |         }\n87 | |     }\n   | |_____^\nnote: ...so that the reference type `&amp;mut Element` does not outlive the data it points at\n  --&gt; src/main.rs:82:42\n   |\n82 |         if let Some(ref mut as_target) = rhs.as_any().downcast_ref::&lt;Target&gt;() {\n   |                                          ^^^^^^^^^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `&amp;mut Element` will meet its required lifetime bounds\n  --&gt; src/main.rs:82:46\n   |\n82 |         if let Some(ref mut as_target) = rhs.as_any().downcast_ref::&lt;Target&gt;() {\n   |                                              ^^^^^^\n\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:84:51\n   |\n84 |         } else if let Some(ref mut as_ship) = rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n   |                                                   ^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the method body at 80:5...\n  --&gt; src/main.rs:80:5\n   |\n80 | /     fn apply_collision(&amp;mut self, rhs: &amp;mut Element) {\n81 | |\n82 | |         if let Some(ref mut as_target) = rhs.as_any().downcast_ref::&lt;Target&gt;() {\n83 | |             self.collision_with_target(as_target);\n...  |\n86 | |         }\n87 | |     }\n   | |_____^\nnote: ...so that the reference type `&amp;mut Element` does not outlive the data it points at\n  --&gt; src/main.rs:84:47\n   |\n84 |         } else if let Some(ref mut as_ship) = rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n   |                                               ^^^^^^^^^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `&amp;mut Element` will meet its required lifetime bounds\n  --&gt; src/main.rs:84:51\n   |\n84 |         } else if let Some(ref mut as_ship) = rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n   |                                                   ^^^^^^\n\nerror[E0477]: the type `&amp;mut Element` does not fulfill the required lifetime\n  --&gt; src/main.rs:99:20\n   |\n99 |         match  rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n   |                    ^^^^^^\n   |\n   = note: type must satisfy the static lifetime\n\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:99:20\n   |\n99 |         match  rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n   |                    ^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the method body at 98:5...\n  --&gt; src/main.rs:98:5\n   |\n98 | /     fn apply_collision(&amp;mut self, rhs: &amp;mut Element) {\n99 | |         match  rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n100| |             Some(ref mut as_ship ) =&gt; {\n101| |                 as_ship.vx = -as_ship.vx;\n...  |\n105| |         }\n106| |     }\n   | |_____^\nnote: ...so that the reference type `&amp;mut Element` does not outlive the data it points at\n  --&gt; src/main.rs:99:16\n   |\n99 |         match  rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n   |                ^^^^^^^^^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `&amp;mut Element` will meet its required lifetime bounds\n  --&gt; src/main.rs:99:20\n   |\n99 |         match  rhs.as_any().downcast_ref::&lt;Ship&gt;() {\n   |                    ^^^^^^\n</code></pre>\n"}, {"tags": ["types", "rust", "primitive"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1501679240, "creation_date": 1501679240, "answer_id": 45461743, "question_id": 45461499, "link": "https://stackoverflow.com/questions/45461499/when-to-be-explicit-with-type-annotation/45461743#45461743", "title": "When to be explicit with type annotation?", "body": "<blockquote>\n  <p>against best practices or the preferred style</p>\n</blockquote>\n\n<p>Yes, I'd say that the prevailing style is to let type inference happen as much as possible.</p>\n\n<blockquote>\n  <p>Would compile times be improved due to the compiler not having to infer the type?</p>\n</blockquote>\n\n<p>Technically, yes, there should be some small savings, but in the vast majority of cases it wouldn't be measurable. The compiler already has to figure out what types everything is to make sure the code type checks.</p>\n\n<p>There <em>are</em> <a href=\"https://github.com/rust-lang/rust/issues/22204\" rel=\"noreferrer\">some pathological cases</a> where there's exponential time consumed, but that can often be \"fixed\" with a single well-placed type when it's needed.</p>\n\n<blockquote>\n  <p>In general I like to be explicit</p>\n</blockquote>\n\n<p>Then you do what you need to do. Often, when learning, we are more explicit than we need to be. Once you become familiar with the language, you'll drop the training wheels. Just be prepared for a lot of asides when experienced Rust programmers look at your code (\"you know, you don't have to put this type here...\").</p>\n\n<p>I prefer to be less explicit in <em>types</em> because I feel the rest of the program (variable and function names, mainly) should represent the logic. It doesn't matter in most cases if I have a <code>BTreeMap</code> or a <code>HashMap</code>, but the concept of a key-value structure is.</p>\n"}], "owner": {"reputation": 1142, "user_id": 3562561, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5455f5135299cdb6b4640148fa176f9f?s=128&d=identicon&r=PG", "display_name": "treiff", "link": "https://stackoverflow.com/users/3562561/treiff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2023, "favorite_count": 1, "accepted_answer_id": 45461743, "answer_count": 1, "score": 9, "last_activity_date": 1501679424, "creation_date": 1501678533, "last_edit_date": 1501679424, "question_id": 45461499, "link": "https://stackoverflow.com/questions/45461499/when-to-be-explicit-with-type-annotation", "title": "When to be explicit with type annotation?", "body": "<p>I've been reading through <a href=\"https://doc.rust-lang.org/book/\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a>, but I've been unable to find a clear answer on what the best practice is for type annotation, specifically with primitive types.</p>\n\n<p>For example, letting the compiler determine the type:</p>\n\n<pre><code>let v = true;\n</code></pre>\n\n<p>Or, using explicit type annotation:</p>\n\n<pre><code>let v: bool = true;\n</code></pre>\n\n<p>In general I like to be explicit, but I am unsure if this is against best practices or the preferred style. Would compile times be improved due to the compiler not having to infer the type?</p>\n"}, {"tags": ["rust", "benchmarking", "gnu-coreutils"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 7, "creation_date": 1501662140, "post_id": 45455275, "comment_id": 77871157, "body": "Just a guess, but: I&#39;d say <code>wc</code> <i>probably</i> isn&#39;t heap-allocating a new dynamically resized string for every single line."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1501665637, "post_id": 45455275, "comment_id": 77873640, "body": "There are minimal coreutils written in Rust for Redox; you can check <a href=\"https://github.com/redox-os/coreutils/blob/master/src/bin/wc.rs\" rel=\"nofollow noreferrer\">their implementation of wc</a>."}, {"owner": {"reputation": 219328, "user_id": 15498, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/Wi4EN.png?s=128&g=1", "display_name": "Damien_The_Unbeliever", "link": "https://stackoverflow.com/users/15498/damien-the-unbeliever"}, "edited": false, "score": 13, "creation_date": 1501667556, "post_id": 45455275, "comment_id": 77875090, "body": "Isn&#39;t it a bit off to describe this as &quot;Rust&#39;s version of wc&quot;, rather than <i>your</i> version of <code>wc</code>?"}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 219328, "user_id": 15498, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/Wi4EN.png?s=128&g=1", "display_name": "Damien_The_Unbeliever", "link": "https://stackoverflow.com/users/15498/damien-the-unbeliever"}, "edited": false, "score": 0, "creation_date": 1501668374, "post_id": 45455275, "comment_id": 77875669, "body": "@Damien_The_Unbeliever you could probably argue both ways - either that I didn&#39;t optimize it well (and judging by the answers I got here, it&#39;s not simple) or that Rust didn&#39;t."}], "answers": [{"comments": [{"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 1, "creation_date": 1501663197, "post_id": 45455539, "comment_id": 77871869, "body": "That&#39;s <code>14.9 MB&#47;s</code> for me."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 1, "creation_date": 1501663407, "post_id": 45455539, "comment_id": 77872010, "body": "@d33tah: I know, it&#39;s still not nearly equivalent. Right now, I&#39;m looking deeper into this. Reasons might include UTF8 validation and stuff like that. Will update the answer when I&#39;m sure about the results. If I don&#39;t find out anything useful, I&#39;ll delete it. Sorry for posting an incomplete answer :&#39;("}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 0, "creation_date": 1501663447, "post_id": 45455539, "comment_id": 77872040, "body": "I&#39;d just title it &quot;minor improvement&quot; at the beginning of the post and keep it as it is ;)"}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 0, "creation_date": 1501663628, "post_id": 45455539, "comment_id": 77872200, "body": "This might be a hint - on IRC I got this 17.5MB version: <code>println!(&quot;{}&quot;, stdin.lock().bytes().filter_map(|b| b.ok()).filter(|b| *b == b&#39;\\n&#39;).count());</code>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 0, "creation_date": 1501665061, "post_id": 45455539, "comment_id": 77873254, "body": "@d33tah I updated my answer. The IRC solution runs slower than the solution in my answer... at least on my notebook."}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 0, "creation_date": 1501666576, "post_id": 45455539, "comment_id": 77874369, "body": "Interesting. The code from &quot;UTF-8 validation&quot; section is still only 19.1MB/s for me."}, {"owner": {"reputation": 1935, "user_id": 2688641, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/dnRQq.jpg?s=128&g=1", "display_name": "Christoph Diegelmann", "link": "https://stackoverflow.com/users/2688641/christoph-diegelmann"}, "edited": false, "score": 3, "creation_date": 1501669476, "post_id": 45455539, "comment_id": 77876446, "body": "To really get this fast you probably to read chunks of 16/32 byte and then use sse/avx + bmi2 to count the numbers of OxAs. I don&#39;t know if that&#39;s possible with rust but that should speed things up A LOT: No branchmisse and around 32 byte per cycle if you could read from L1."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1501682820, "post_id": 45455539, "comment_id": 77886925, "body": "I would expect to be able to do perform <code>wc</code> without copying bytes in the user-land. A single pass that counts various marker bytes (SSE/AVX) should be sufficient, and would make this an I/O or memory-bound program. Anything on top (using <code>String</code>/<code>Vec</code>, ...) is going to add some overhead."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1533330195, "post_id": 45455539, "comment_id": 90323363, "body": "@MatthieuM.: and Lukas: GNU <code>wc</code> is <i>not</i> &quot;highly optimized&quot; on x86-64  Linux.  It uses a byte-at-a-time loop that doesn&#39;t get auto-vectorized (at least on Arch Linux, maybe they use <code>-O2</code>?).  I ran <code>wc -l</code> inside GDB and hit control-C to stop it in a hot loop.  With <code>stepi</code>, I can see it doing  <code>xor ecx,ecx</code> / <code>cmp    BYTE PTR [rax-0x1],0xa</code> / <code>sete   cl</code> / <code>add    rdx,rcx</code> inside a non-unrolled loop.  So it doesn&#39;t even run at 1 byte per cycle.  Even some loop unrolling would help.  Manual vectorization with SSE <code>pcmpeqb</code> / <code>psubb</code> could give it a factor if 16 speedup if we aren&#39;t I/O bound."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1533332452, "post_id": 45455539, "comment_id": 90324009, "body": "@MatthieuM.: so it&#39;s not optimized in any target-specific ways, but it does use an adaptive strategy for short line vs. long lines, using <code>memchr</code> to find the next <code>&#39;\\n</code> for long lines, vs. <code>while (p != end) lines += *p++ == &#39;\\n&#39;;</code> for short lines.   <a href=\"https://github.com/coreutils/coreutils/blob/master/src/wc.c#L313\" rel=\"nofollow noreferrer\">github.com/coreutils/coreutils/blob/master/src/wc.c#L313</a>.  gcc or clang could auto-vectorize that, because the loop trip count is known before it&#39;s entered.  That happens with <code>-O3</code>, but it uses punpckl/h up to qwords inside the inner loop, rather than accumulating byte sums for a while or using <code>psadbw</code>.  only ~2x faster <code>-l</code>, slow <code>-w</code>"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 17, "last_activity_date": 1533326965, "last_edit_date": 1533326965, "creation_date": 1501662626, "answer_id": 45455539, "question_id": 45455275, "link": "https://stackoverflow.com/questions/45455275/why-is-my-rust-version-of-wc-slower-than-the-one-from-gnu-coreutils/45455539#45455539", "title": "Why is my Rust version of &quot;wc&quot; slower than the one from GNU coreutils?", "body": "<p>There are many reasons why your code is way slower than the original <code>wc</code>. There are a few things you pay for which you actually don't need at all. By removing those, you can already get a quite substantial speed boost.</p>\n\n<h3>Heap allocations</h3>\n\n<p><a href=\"https://doc.rust-lang.org/stable/std/io/trait.BufRead.html#method.lines\" rel=\"noreferrer\"><code>BufRead::lines()</code></a> returns <a href=\"https://doc.rust-lang.org/stable/std/io/struct.Lines.html\" rel=\"noreferrer\">an iterator</a> which yields <code>String</code> elements. Due to this design, it will (it has to!) allocate memory for every single line. The <code>lines()</code> method is a convenient method to write code easily, but it isn't supposed to be used in high performance situations.</p>\n\n<p>To avoid allocating heap memory for every single line, you can use <a href=\"https://doc.rust-lang.org/stable/std/io/trait.BufRead.html#method.read_line\" rel=\"noreferrer\"><code>BufRead::read_line()</code></a> instead. The code is a bit more verbose, but as you can see, we are reusing the heap memory of <code>s</code>:</p>\n\n<pre><code>let mut n = 0;\nlet mut s = String::new();\nlet stdin = io::stdin();\nlet mut lock = stdin.lock();\nloop {\n    s.clear();\n    let res = lock.read_line(&amp;mut s);\n    if res.is_err() || res.unwrap() == 0 {\n        break;\n    }\n    n += 1;\n}\nprintln!(\"{}\", n);\n</code></pre>\n\n<p>On my notebook, this results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ yes | dd count=1000000 | wc -l\n256000000\n1000000+0 records in\n1000000+0 records out\n512000000 bytes (512 MB, 488 MiB) copied, 0,981827 s, 521 MB/s\n\n$ yes | dd count=1000000 | ./wc \n1000000+0 records in\n1000000+0 records out\n512000000 bytes (512 MB, 488 MiB) copied, 6,87622 s, 74,5 MB/s\n256000000\n</code></pre>\n\n<p>As you can see, it improved things <em>a lot</em>, but is still not equivalent.</p>\n\n<h3>UTF-8 validation</h3>\n\n<p>Since we are reading into a <code>String</code>, we are validating the raw input from stdin to be proper UTF-8. This costs time! But we are only interested in the raw bytes, since we only need to count the newline characters (<code>0xA</code>). We can get rid of UTF-8 checks by using a <code>Vec&lt;u8&gt;</code> and <a href=\"https://doc.rust-lang.org/stable/std/io/trait.BufRead.html#method.read_until\" rel=\"noreferrer\"><code>BufRead::read_until()</code></a>:</p>\n\n<pre><code>let mut n = 0;\nlet mut v = Vec::new();\nlet stdin = io::stdin();\nlet mut lock = stdin.lock();\nloop {\n    v.clear();\n    let res = lock.read_until(0xA, &amp;mut v);\n    if res.is_err() || res.unwrap() == 0 {\n        break;\n    }\n    n += 1;\n}\nprintln!(\"{}\", n);\n</code></pre>\n\n<p>This results in:</p>\n\n<pre><code>1000000+0 records in\n1000000+0 records out\n512000000 bytes (512 MB, 488 MiB) copied, 4,24162 s, 121 MB/s\n256000000\n</code></pre>\n\n<p>That's a 60% improvement. But the original <code>wc</code> is still faster by a factor of 3.5x!</p>\n\n<h3>Further possible improvements</h3>\n\n<p>Now we used up all the low hanging fruit to boost performance. In order to match <code>wc</code>s speed, one would have to do some serious profiling, I think. In our current solution, <code>perf</code> reports the following:</p>\n\n<ul>\n<li>around 11% of the time is spent in <code>memchr</code>; I don't think this can be improved</li>\n<li>around 18% is spent in <code>&lt;StdinLock as std::io::BufRead&gt;::fill_buf()</code> and</li>\n<li>around 6% is spent in <code>&lt;StdinLock as std::io::BufRead&gt;::consume()</code></li>\n</ul>\n\n<p>A huge part of the remaining time is spent in <code>main</code> directly (due to inlining). From the looks of it, we are also paying a bit for the cross platform abstraction. There is some time spent for <code>Mutex</code> methods and stuff. </p>\n\n<p>But at this point, I'm just guessing, because I don't have the time to look into this further. Sorry :&lt;</p>\n\n<p>But please note, that <code>wc</code> is an old tool and is highly optimized for the platform it's running on and for the task it's performing. I guess that knowledge about Linux internal things would help performance a lot. This is really specialized, so I wouldn't expect to match the performance that easily.</p>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 11, "last_activity_date": 1501664889, "creation_date": 1501664889, "answer_id": 45456369, "question_id": 45455275, "link": "https://stackoverflow.com/questions/45455275/why-is-my-rust-version-of-wc-slower-than-the-one-from-gnu-coreutils/45456369#45456369", "title": "Why is my Rust version of &quot;wc&quot; slower than the one from GNU coreutils?", "body": "<p>This is because your version is in no way equivalent to the GNU one which doesn't allocate any memory for strings, but only moves the file pointer and increments different counters. In addition, it processes raw bytes while Rust's <code>String</code> must be valid UTF-8.</p>\n\n<p><a href=\"https://www.gnu.org/software/cflow/manual/html_node/Source-of-wc-command.html\" rel=\"noreferrer\">GNU wc source</a></p>\n"}, {"tags": [], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "is_accepted": false, "score": 9, "last_activity_date": 1501666676, "creation_date": 1501666676, "answer_id": 45457093, "question_id": 45455275, "link": "https://stackoverflow.com/questions/45455275/why-is-my-rust-version-of-wc-slower-than-the-one-from-gnu-coreutils/45457093#45457093", "title": "Why is my Rust version of &quot;wc&quot; slower than the one from GNU coreutils?", "body": "<p>Here's a version I got from Arnavion on #rust-beginners IRC:</p>\n\n<pre><code>use std::io::Read;\n\nfn main() {\n    let mut buffer = [0u8; 1024];\n    let stdin = ::std::io::stdin();\n    let mut stdin = stdin.lock();\n    let mut wc = 0usize;\n    loop {\n        match stdin.read(&amp;mut buffer) {\n            Ok(0) =&gt; {\n                break;\n            },\n            Ok(len) =&gt; {\n                wc += buffer[0..len].into_iter().filter(|&amp;&amp;b| b == b'\\n').count();\n            },\n            Err(err) =&gt; {\n                panic!(\"{}\", err);\n            },\n        }\n    };\n    println!(\"{}\", wc);\n}\n</code></pre>\n\n<p>This gets performance very close to what original <code>wc</code> does.</p>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1208, "favorite_count": 2, "answer_count": 3, "score": 7, "last_activity_date": 1533326965, "creation_date": 1501661885, "last_edit_date": 1501678660, "question_id": 45455275, "link": "https://stackoverflow.com/questions/45455275/why-is-my-rust-version-of-wc-slower-than-the-one-from-gnu-coreutils", "title": "Why is my Rust version of &quot;wc&quot; slower than the one from GNU coreutils?", "body": "<p>Consider this program:</p>\n\n<pre><code>use std::io::BufRead;\nuse std::io;\n\nfn main() {\n    let mut n = 0;\n    let stdin = io::stdin();\n    for _ in stdin.lock().lines() {\n        n += 1;\n    }\n    println!(\"{}\", n);\n}\n</code></pre>\n\n<p>Why is it over 10x as slow as the GNU version of wc? Take a look at how I measure it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ yes | dd count=1000000 | wc -l\n256000000\n1000000+0 records in\n1000000+0 records out\n512000000 bytes (512 MB, 488 MiB) copied, 1.16586 s, 439 MB/s\n$ yes | dd count=1000000 | ./target/release/wc\n1000000+0 records in\n1000000+0 records out\n512000000 bytes (512 MB, 488 MiB) copied, 41.685 s, 12.3 MB/s\n256000000\n</code></pre>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 115745, "user_id": 119527, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/lTjBL.png?s=128&g=1", "display_name": "Jonathon Reinhart", "link": "https://stackoverflow.com/users/119527/jonathon-reinhart"}, "edited": false, "score": 4, "creation_date": 1501633211, "post_id": 45449525, "comment_id": 77860238, "body": "I don&#39;t know rust, but it looks like  <code>#[allow(unused_macros)]</code> might be worth a shot."}], "answers": [{"comments": [{"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "edited": false, "score": 0, "creation_date": 1569067881, "post_id": 45454272, "comment_id": 102480916, "body": "Notably, this should only disable the warning for this specific macro, right? <a href=\"https://stackoverflow.com/a/25877389/2550406\">For future newbies</a>"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 13, "last_activity_date": 1501659049, "creation_date": 1501659049, "answer_id": 45454272, "question_id": 45449525, "link": "https://stackoverflow.com/questions/45449525/how-to-disable-the-unused-macros-warning/45454272#45454272", "title": "How to disable the unused macros warning?", "body": "<p>The compiler warning states:</p>\n\n<pre><code>= note: #[warn(unused_macros)] on by default\n</code></pre>\n\n<p>Which is very similar to the warning caused by unused functions:</p>\n\n<pre><code>= note: #[warn(dead_code)] on by default\n</code></pre>\n\n<p>You can disable these warnings in the same way, but you need to use the matching macro attribute:</p>\n\n<pre><code>#[allow(unused_macros)]\nmacro_rules! test {\n    ($x:expr) =&gt; {{}}\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3489, "favorite_count": 1, "accepted_answer_id": 45454272, "answer_count": 1, "score": 11, "last_activity_date": 1501678791, "creation_date": 1501633013, "last_edit_date": 1501678791, "question_id": 45449525, "link": "https://stackoverflow.com/questions/45449525/how-to-disable-the-unused-macros-warning", "title": "How to disable the unused macros warning?", "body": "<p>This code:</p>\n\n<pre><code>#[allow(dead_code)]\nmacro_rules! test {\n    ($x:expr) =&gt; {{}}\n}\n\nfn main() {\n\n    println!(\"Results:\")\n\n}\n</code></pre>\n\n<p>produces the following warning about unused macro definition:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused macro definition\n  --&gt; /home/xxx/.emacs.d/rust-playground/at-2017-08-02-031315/snippet.rs:10:1\n   |\n10 | / macro_rules! test {\n11 | |     ($x:expr) =&gt; {{}}\n12 | | }\n   | |_^\n   |\n   = note: #[warn(unused_macros)] on by default\n</code></pre>\n\n<p>Is it possible to suppress it? As you can see <code>#[allow(dead_code)</code> doesn't help in case of macros.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 2, "creation_date": 1501661982, "post_id": 45449485, "comment_id": 77871046, "body": "<code>Complex64</code> doesn&#39;t have method <code>recip</code>."}, {"owner": {"reputation": 3536, "user_id": 1371116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61e179a755e44f07873b2ccd75771123?s=128&d=identicon&r=PG", "display_name": "Isaac", "link": "https://stackoverflow.com/users/1371116/isaac"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1501681273, "post_id": 45449485, "comment_id": 77885605, "body": "Whoops, switch up my examples without checking; however, the same thing still happens for <code>sin</code>, which <code>Complex64</code> does have."}, {"owner": {"reputation": 3536, "user_id": 1371116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61e179a755e44f07873b2ccd75771123?s=128&d=identicon&r=PG", "display_name": "Isaac", "link": "https://stackoverflow.com/users/1371116/isaac"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1501681617, "post_id": 45449485, "comment_id": 77885916, "body": "The linked question does solve my problem; thanks @shepmaster!"}], "owner": {"reputation": 3536, "user_id": 1371116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61e179a755e44f07873b2ccd75771123?s=128&d=identicon&r=PG", "display_name": "Isaac", "link": "https://stackoverflow.com/users/1371116/isaac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "closed_date": 1501679733, "answer_count": 0, "score": 0, "last_activity_date": 1501681360, "creation_date": 1501632633, "last_edit_date": 1501681360, "question_id": 45449485, "link": "https://stackoverflow.com/questions/45449485/how-can-i-implement-a-trait-using-existing-function-implementations", "closed_reason": "Duplicate", "title": "How can I implement a trait using existing function implementations?", "body": "<p>I'm trying to figure out the rules for which version of a function Rust will use inside of a trait implementation. Specifically, there are functions implemented <a href=\"http://huonw.github.io/primal/src/num_complex/lib.rs.html#96-326\" rel=\"nofollow noreferrer\">here</a> that I want to forward to from my own trait.</p>\n\n<p>When I define a trait <code>T</code> with a function <code>sin</code>; I want the implementation of <code>T</code> for <code>Complex64</code> to refer to the implementation of <code>sin</code> in the <code>num::complex</code> crate, but attempting to do so results in infinite recursion.</p>\n\n<p>This problem led me to try to figure out what it is that makes the call recursive, rather than referring to the existing function. My test cases are below (<a href=\"https://play.rust-lang.org/?gist=75356dadabec83ce9290eccb0572d286&amp;version=nightly\" rel=\"nofollow noreferrer\">playground link</a>); I've tried implementing a trait on an existing type, a new type, and a generic struct, but all those cases seem to forward correctly to the existing implementation.</p>\n\n<p>What is special about <code>Complex64</code> that it causes recursion? Is there any way around this?</p>\n\n<pre><code>extern crate num;\nuse num::complex::*;\n\nuse std::fmt::Debug;\nuse std::marker::PhantomData;\n\n// Vanilla struct\nstruct S { }\n\n// Generic struct\nstruct G&lt;K&gt; { _g: PhantomData&lt;K&gt; }\n\n// Trait with a function we want to forward to existing implementations\ntrait T {\n    fn sin(self) -&gt; Self;\n}\n\n// Existing implementation for vanilla struct\nimpl S {\n    fn sin(self) -&gt; Self { println!(\"Outside Version\"); S {} }\n}\n\n// Existing implementation for generic struct\nimpl&lt;K: Debug&gt; G&lt;K&gt; {\n    fn sin(self) -&gt; Self { println!(\"Outside (generic)\"); G { _g: PhantomData } }\n}\n\n// Forwarding for vanilla struct\nimpl T for S {\n    fn sin(self) -&gt; Self { self.sin() }\n}\n\n// Forwarding for generic struct\nimpl T for G&lt;f32&gt; {\n    fn sin(self) -&gt; Self { self.sin() }\n}\n\n// Forwarding for primitive type\nimpl T for f32 {\n    fn sin(self) -&gt; Self { let x = self.sin(); println!(\"{}\", x); x }\n}\n\n// Forwarding for externally defined type\n// NOTE: for this impl only, we get a warning about unconditional recursion\nimpl T for Complex64 {\n    fn sin(self) -&gt; Self { let x = self.sin(); println!(\"{}\", x); x }\n}\n\n// Function to ensure we're using the version of sin defined in T\nfn do_sin&lt;K: T&gt;(k: K) {\n    k.sin();\n}\n\nfn main() {\n    let x = S {};\n    let y = 1.2f32;\n    let z: G&lt;f32&gt; = G { _g: PhantomData };\n    let w = Complex64 { re: 1.0, im: 2.0 };\n    do_sin(x); // forwarding works\n    do_sin(y); // forwarding works\n    do_sin(z); // forwarding works\n    do_sin(w); // forwarding fails with infinite recursion\n}\n</code></pre>\n"}, {"tags": ["rust", "ownership", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 47633, "user_id": 3889449, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/eb07e0f09deb982a1a0deedca7a5c002?s=128&d=identicon&r=PG", "display_name": "Marco Bonelli", "link": "https://stackoverflow.com/users/3889449/marco-bonelli"}, "edited": false, "score": 0, "creation_date": 1501619993, "post_id": 45446679, "comment_id": 77855677, "body": "Oh... I totally forgot that sneaky reference inside the <code>HashMap</code>... thank you very much for the detailed answer! Could you suggest a good way of avoiding putting the reference itself inside the hash map? Should I clone the string or something similar?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1501620775, "last_edit_date": 1501620775, "creation_date": 1501617563, "answer_id": 45446679, "question_id": 45446237, "link": "https://stackoverflow.com/questions/45446237/is-my-variables-lifetime-changing-due-to-the-addition-of-an-apparently-unrelate/45446679#45446679", "title": "Is my variable&#39;s lifetime changing due to the addition of an apparently unrelated instruction?", "body": "<blockquote>\n  <p>Yes, I drop <code>cmd</code> at the end of the loop, and that's ok</p>\n</blockquote>\n\n<p>No, it's not, and that's what the compiler is telling you. Rust has done its job and prevented you from inserting memory unsafety into your program.</p>\n\n<p>You allocate a <code>String</code> inside the loop, <em>take a reference to it</em> and make a <code>Command</code> from it. <code>Command</code> only says that it contains references, all of the same lifetime. The code then takes one of those references back out of <code>Command</code> and tries to store it in the <code>HashMap</code>. </p>\n\n<p>After the loop exits, the <code>HashMap</code> would contain a reference to the now-deallocated <code>String</code>, which would be a Very Bad Thing.</p>\n\n<blockquote>\n  <p>Anything related to <code>cmd</code> happens inside the loop</p>\n</blockquote>\n\n<p>No, it doesn't. You pass the reference to the <code>String</code> to a function. At that point, all bets are off. That function can do <em>anything</em> allowed by the signature, including:</p>\n\n<pre><code>fn parse_command&lt;'a&gt;(line: &amp;'a String) -&gt; Result&lt;Command&lt;'a&gt;, &amp;'a str&gt; {\n    Ok(Command::Add {\n        name: line,\n        unit: line,\n    })\n}\n</code></pre>\n\n<hr>\n\n<p>Your code is equivalent to:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let mut units = HashSet::new();\n\n    {\n        let cmd = String::new();\n        units.insert(&amp;cmd);\n    }\n\n    println!(\"{:?}\", units);\n}\n</code></pre>\n"}], "owner": {"reputation": 47633, "user_id": 3889449, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/eb07e0f09deb982a1a0deedca7a5c002?s=128&d=identicon&r=PG", "display_name": "Marco Bonelli", "link": "https://stackoverflow.com/users/3889449/marco-bonelli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 1, "accepted_answer_id": 45446679, "answer_count": 1, "score": 3, "last_activity_date": 1529829777, "creation_date": 1501615906, "last_edit_date": 1529829777, "question_id": 45446237, "link": "https://stackoverflow.com/questions/45446237/is-my-variables-lifetime-changing-due-to-the-addition-of-an-apparently-unrelate", "title": "Is my variable&#39;s lifetime changing due to the addition of an apparently unrelated instruction?", "body": "<p>I'm quite new to Rust, and still reading <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">the book</a> while writing some simple program every now and then to test what I'm learning.</p>\n\n<p>Today I tried to write a program suggested as an exercise (more precisely the last one at <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch08-03-hash-maps.html\" rel=\"nofollow noreferrer\">the end of chapter 8.3</a>). Since I'm still learning and thus pretty slow, I run a new <code>cargo build</code> for almost any new line I add to my <code>main.rs</code>. As of now, it looks like this:</p>\n\n<pre><code>use std::io::{self, Write};\nuse std::collections::{HashMap, HashSet};\n\nenum Command&lt;'a&gt; {\n    Add {name: &amp;'a str, unit: &amp;'a str},\n    List {unit: &amp;'a str},\n    Exit\n}\n\nfn main() {\n    let mut units: HashMap&lt;&amp;str, HashSet&lt;&amp;str&gt;&gt; = HashMap::new();\n\n    loop {\n        let mut cmd = String::new();\n        io::stdin().read_line(&amp;mut cmd).unwrap();\n\n        let cmd = match parse_command(&amp;cmd) {\n            Ok(command) =&gt; command,\n            Err(error) =&gt; {\n                println!(\"Error: {}!\", error);\n                continue;\n            }\n        };\n\n        match cmd {\n            Command::Add {name: new_name, unit: new_unit} =&gt; {\n                let mut u = units.entry(\"unit1\").or_insert(HashSet::new());\n                u.insert(new_name);\n            },\n\n            Command::List {unit: target_unit} =&gt; {},\n            Command::Exit =&gt; break\n        }\n    } // end of loop\n} // end of main\n\nfn parse_command&lt;'a&gt;(line: &amp;'a String) -&gt; Result&lt;Command&lt;'a&gt;, &amp;'a str&gt; {\n    Ok(Command::Exit)\n    // ... still need to write something useful ...\n}\n</code></pre>\n\n<p>Nothing complicated, since that I still haven't even wrote anything inside my <code>parse_command</code> function, which currently only returns a <code>Result::Ok(Command::Exit)</code>, but when I try to compile the above code, I get the following error:</p>\n\n <pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `cmd` does not live long enough\n  --&gt; src/main.rs:34:2\n   |\n17 |            let cmd = match parse_command(&amp;cmd) {\n   |                                           --- borrow occurs here\n...\n34 |    } // end of loop\n   |    ^ `cmd` dropped here while still borrowed\n35 | } // end of main\n   | -  borrowed value needs to live until here\n</code></pre>\n\n<p>It shouldn't be anything strange to figure out, but I'm quite confused by this error. Yes, I drop <code>cmd</code> at the end of the <code>loop</code>, and that's ok, but <strong>why does the borrowed value need to live until the end of <code>main</code>?</strong> Anything related to <code>cmd</code> happens inside the <code>loop</code>, why is the borrowed value expected to live longer than that?</p>\n\n<p>Trying to figure out what's wrong, I removed the two lines inside the <code>match</code> arm of <code>Command::Add {...}</code>, so it looks like this:</p>\n\n<pre><code>    match cmd {\n        Command::Add {name: new_name, unit: new_unit} =&gt; {},\n        Command::List {unit: target_unit} =&gt; {},\n        Command::Exit =&gt; break\n    }\n</code></pre>\n\n<p>and, to my surprise, the code compiled with no error (even though I need those lines so this is just a silly test).</p>\n\n<p><strong>I thought that these two lines had <em>nothing</em> to do with my <code>cmd</code> variable, or do they? What's going on here?</strong> I am 99% sure that there's something very silly that I'm missing, but can't figure out what it might be by myself. Any help would be really appreciated!</p>\n"}, {"tags": ["rust", "let"], "comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 1, "creation_date": 1501610134, "post_id": 45444637, "comment_id": 77850151, "body": "Why do you want this to be a macro?"}, {"owner": {"reputation": 13, "user_id": 8401208, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P9TOa6Z2v_A/AAAAAAAAAAI/AAAAAAAABRs/VYRM-Du5ijc/photo.jpg?sz=128", "display_name": "Andreas Stahl", "link": "https://stackoverflow.com/users/8401208/andreas-stahl"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1501610703, "post_id": 45444637, "comment_id": 77850461, "body": "@sepp2k Testing around."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1501611150, "creation_date": 1501611150, "answer_id": 45444961, "question_id": 45444637, "link": "https://stackoverflow.com/questions/45444637/no-rules-expected-the-token-when-writing-a-let-statement-in-a-macro/45444961#45444961", "title": "&quot;no rules expected the token&quot; when writing a `let` statement in a macro", "body": "<p>If you are \"very new to programing\", then you should start at the beginning; macros are <em>not</em> the beginning. Go back and re-read <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em>, second edition</a>, even though it's targeted at people who already understand another programming language.</p>\n\n<p>You can then read <a href=\"https://doc.rust-lang.org/stable/book/first-edition/macros.html\" rel=\"nofollow noreferrer\">the chapter from the first edition about macros</a>. This will show you the proper syntax for macros. Macros have a number of arms, like a <code>match</code> statement:</p>\n\n<pre><code>macro_rules! getPI {\n    () =&gt; {\n        let pi = 3.141592;\n        println!(\"Pi is roughly 3.142 \\n {0}\", pi);\n    }\n}\n\nfn main() {\n    getPI!();\n}\n</code></pre>\n\n<p>I also don't know why you'd try to <code>print!</code> the return value of your macro, so I removed that. You must also call the macro using an exclamation mark (<code>!</code>).</p>\n"}], "owner": {"reputation": 13, "user_id": 8401208, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P9TOa6Z2v_A/AAAAAAAAAAI/AAAAAAAABRs/VYRM-Du5ijc/photo.jpg?sz=128", "display_name": "Andreas Stahl", "link": "https://stackoverflow.com/users/8401208/andreas-stahl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1403, "favorite_count": 0, "accepted_answer_id": 45444961, "answer_count": 1, "score": 0, "last_activity_date": 1501611150, "creation_date": 1501609944, "last_edit_date": 1501610859, "question_id": 45444637, "link": "https://stackoverflow.com/questions/45444637/no-rules-expected-the-token-when-writing-a-let-statement-in-a-macro", "title": "&quot;no rules expected the token&quot; when writing a `let` statement in a macro", "body": "<p>When I try to compile this code using <code>rustc main.rs</code>:</p>\n\n<pre><code>macro_rules! getPI {\n    let pi = 3.141592;\n    println!(\"Pi is roughly 3.142 \\n {0}\", pi);\n}\n\nfn main() {\n    print!(getPI);\n}\n</code></pre>\n\n<p>it gives me an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `pi`\n --&gt; src/main.rs:2:9\n  |\n2 |     let pi = 3.141592;\n  |         ^^\n</code></pre>\n\n<p>I'm very new to programing, I hope someone has a solution.</p>\n"}, {"tags": ["regex", "replace", "rust"], "answers": [{"comments": [{"owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1501608938, "post_id": 45443665, "comment_id": 77849469, "body": "So far I&#39;ve tried fancy-regex, and onig, and they can&#39;t do this either, or if they can the syntax for the substitution is undocumented."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "reply_to_user": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1501621320, "post_id": 45443665, "comment_id": 77856392, "body": "You might need to implement substitution yourself, but they both support backreferences, which is the fundamental problem you&#39;re hitting."}], "tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": false, "score": 5, "last_activity_date": 1501606600, "creation_date": 1501606600, "answer_id": 45443665, "question_id": 45443409, "link": "https://stackoverflow.com/questions/45443409/how-do-i-do-a-regex-string-substitution-using-a-regex-with-backreferences-in-rus/45443665#45443665", "title": "How do I do a regex string substitution using a Regex with backreferences in Rust?", "body": "<p>From the <a href=\"https://docs.rs/regex\" rel=\"noreferrer\"><code>regex</code> crate documentation</a>:</p>\n\n<blockquote>\n  <p>This crate provides a library for parsing, compiling, and executing regular expressions. Its syntax is similar to Perl-style regular expressions, but <strong>lacks a few features like look around and backreferences</strong>. In exchange, all searches execute in linear time with respect to the size of the regular expression and search text.</p>\n</blockquote>\n\n<p>Your regex uses backreferences. If you want to use backreferences in Rust, then I'd recommend <a href=\"https://docs.rs/fancy-regex\" rel=\"noreferrer\"><code>fancy-regex</code></a> or some other crate that binds to another regex engine such as PCRE or Oniguruma.</p>\n\n<p>In this case (for <code>regex 0.2.x</code>), <code>\\1</code> is interpreted as an octal escape, which corresponds to the Unicode codepoint <code>U+0001</code>.</p>\n"}], "owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 658, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1501607150, "creation_date": 1501605853, "last_edit_date": 1501607150, "question_id": 45443409, "link": "https://stackoverflow.com/questions/45443409/how-do-i-do-a-regex-string-substitution-using-a-regex-with-backreferences-in-rus", "title": "How do I do a regex string substitution using a Regex with backreferences in Rust?", "body": "<p>I'm trying the following code, but, which works for other languages, but not for Rust</p>\n\n<pre><code>#[test]\nfn regex_test() {\n    let regex = Regex::new(r\"(\\*|_)(.*?)\\1\").unwrap();\n    let string = \"*quack* klfjalksd *this* is a *test* **dfadfjkl** \";\n    let substitution = \"&lt;em&gt;$2&lt;/em&gt;\";\n\n    // result will be a String with the substituted value\n    let result = regex.replace_all(string, substitution);\n\n    println!(\"{}\", result);\n\n}\n</code></pre>\n\n<p>The result has none of the substitutions:</p>\n\n<pre><code>*quack* klfjalksd *this* is a *test* **dfadfjkl** \n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 376, "user_id": 7268884, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/pYfwn.png?s=128&g=1", "display_name": "twistezo", "link": "https://stackoverflow.com/users/7268884/twistezo"}, "edited": false, "score": 1, "creation_date": 1501607085, "post_id": 45442890, "comment_id": 77848371, "body": "@twistezo You are only calling <code>next</code> once, <i>so you only get one result</i>. I&#39;m unclear why you think you would get multiple. I&#39;d highly recommend re-reading <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i>, second edition</a>, specifically the <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch03-05-control-flow.html\" rel=\"nofollow noreferrer\">chapter on control flow</a> (esp. <code>loop</code>) and <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch13-02-iterators.html\" rel=\"nofollow noreferrer\">the chapter on iterators</a>. Your original code already looped over everything (<code>for result in rows</code>)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1501604251, "creation_date": 1501604251, "answer_id": 45442890, "question_id": 45442609, "link": "https://stackoverflow.com/questions/45442609/why-does-the-result-of-query-map-not-print-anything/45442890#45442890", "title": "Why does the result of query_map not print anything?", "body": "<p>You are <em>throwing away the result of the iterator</em>:</p>\n\n<pre><code>match rows.next() {\n    Some(_x) =&gt; {\n</code></pre>\n\n<p>That <code>_x</code> means \"I want to ignore this variable, compiler, don't complain about it\". Except you <strong>don't want to ignore it</strong>. </p>\n\n<pre><code>Some(row) =&gt; {\n    println!(\"Some\");\n    println!(\"{:?}\", row.unwrap());\n}\n</code></pre>\n"}], "owner": {"reputation": 376, "user_id": 7268884, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/pYfwn.png?s=128&g=1", "display_name": "twistezo", "link": "https://stackoverflow.com/users/7268884/twistezo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "accepted_answer_id": 45442890, "answer_count": 1, "score": -1, "last_activity_date": 1501610951, "creation_date": 1501603340, "last_edit_date": 1501610951, "question_id": 45442609, "link": "https://stackoverflow.com/questions/45442609/why-does-the-result-of-query-map-not-print-anything", "title": "Why does the result of query_map not print anything?", "body": "<p>I would like to catch a SQLite null result and properly print a message or the result.</p>\n\n<p>I prepare a statement, extract the result to <code>MyStruct</code>, check if the result is <code>Some</code> or <code>None</code> (null) and if it's <code>Some</code> print result in the for loop.</p>\n\n<p>This code properly matches <code>Some</code> or <code>None</code> but does not print anything:</p>\n\n<pre><code>let mut stmt = conn.prepare(&amp;query).expect(\"execute error\");\nlet mut rows = stmt.query_map(&amp;[&amp;par_a, &amp;par_b], |row| {\n    MyStruct {\n        a: row.get(0),\n        b: row.get(1),\n        c: row.get(2),\n    }\n}).expect(\"query_map error\");\n\nmatch rows.next() {\n    Some(_x) =&gt; {\n        println!(\"Some\");\n        for result in rows {\n            println!(\"{:?}\", result.unwrap());\n        }\n    }\n    None =&gt; println!(\"The result is empty. Try again.\"),\n}\n</code></pre>\n\n<p>If I remove all the <code>match</code> statements and put only this print in loop everything works properly:</p>\n\n<pre><code>for result in rows {\n     println!(\"{:?}\", result.unwrap());\n}\n</code></pre>\n"}, {"tags": ["rust", "ownership", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1501592528, "post_id": 45437893, "comment_id": 77838066, "body": "Have you seen <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a>? Are you familiar with the data structure known as a <a href=\"https://crates.io/crates/petgraph\" rel=\"nofollow noreferrer\"><i>graph</i></a>? <i>a lot of repetition all throughout the code</i> \u2014 why do you think so? <i>since the <code>Triangle</code> and <code>Vertex</code> structs are not aware of the struct <code>Geometry</code></i> \u2014 why is that a constraint that must be upheld? <i>so that the <code>Triangle</code> and <code>Vertex</code> objects can in fact store a reference to one another</i> \u2014 Have you read <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1501597780, "post_id": 45437893, "comment_id": 77842451, "body": "Do you ever plan to delete Vertex/Triangle or not? And if you do, do you plan to do it in batch or incrementally?"}, {"owner": {"reputation": 1811, "user_id": 128059, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/d6839aa55d93905ad4849abed3215843?s=128&d=identicon&r=PG", "display_name": "JorenB", "link": "https://stackoverflow.com/users/128059/jorenb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501668086, "post_id": 45437893, "comment_id": 77875451, "body": "@Shepmaster: I will take a look at Rc, that might be fitting for my purposes. I don&#39;t think a graph structure will resolve my problems, but I&#39;ll also look into that briefly. Currently, Triangle and Vertex are not aware of Geometry because they are in some sense member objects. Are you saying I could in principle do a borrow of the Geometry object to all member Vertex&#39;es and Triangles? I&#39;ll also take a look at your last link and see whether it&#39;s relevant for me. Thank you!"}, {"owner": {"reputation": 1811, "user_id": 128059, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/d6839aa55d93905ad4849abed3215843?s=128&d=identicon&r=PG", "display_name": "JorenB", "link": "https://stackoverflow.com/users/128059/jorenb"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1501668189, "post_id": 45437893, "comment_id": 77875519, "body": "@MatthieuM. Vertex&#39;es and Triangles are created and destroyed continuously throughout the simulation, which is the main difficulty. At every Monte Carlo step, only a handful can be created or destroyed (on the order of 5). Why are you asking?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1501672621, "post_id": 45437893, "comment_id": 77878703, "body": "@JorenB: If destruction is infrequent, or batched, then an Arena would have solved the ownership issue (basically, after a batch of deletions, you copy the whole live set to another arena, which is equivalent to a moving GC). This can still work with frequent destruction, but it&#39;s not as obvious <i>when</i> to make the copy."}], "owner": {"reputation": 1811, "user_id": 128059, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/d6839aa55d93905ad4849abed3215843?s=128&d=identicon&r=PG", "display_name": "JorenB", "link": "https://stackoverflow.com/users/128059/jorenb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 335, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1501592540, "creation_date": 1501590712, "last_edit_date": 1501592540, "question_id": 45437893, "link": "https://stackoverflow.com/questions/45437893/what-is-the-best-approach-for-multiple-cross-references-in-rust", "title": "What is the best approach for multiple cross-references in Rust?", "body": "<p>I'm converting a Monte Carlo simulation of certain random geometries from Python  to Rust. The freedom I had in Python allowed me to be somewhat sloppy about storing references to other objects all throughout my code, but this seems to be trickier to implement in Rust.</p>\n\n<p>In my current Python implementation, the main object is a <code>Geometry</code>. It contains a dictionary of <code>Vertex</code>es with a unique ID (the ID is also its lookup key in the dictionary) and a dictionary of <code>Triangle</code>s (same scenario as for <code>Vertex</code>). Every <code>Triangle</code> contains a list of three <code>Vertex</code>es (no dictionary this time, here it's an ordered list), and every <code>Vertex</code> contains a dictionary of all the <code>Triangle</code>s that it appears in (again indexed by the <code>Triangle</code>'s unique ID).</p>\n\n<p>This leads to a whole lot of cross-references, but it does make it very easy to find things. For example, it is straightforward to find all the neighbouring <code>Vertex</code>es of a specific <code>Vertex</code> by simply looping through all the <code>Triangle</code>s it appears in and collecting all the <code>Vertex</code>es that are contained in these <code>Triangle</code>s.</p>\n\n<p>For convenience, here is a summary of the data structures:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>class Geometry(object):\n    def __init__(self):\n        self.vertices = {}\n        self.triangles = {}\n\nclass Vertex(object):\n    counter = 0\n    def __init__(self):\n        self.index = Vertex.counter\n        Vertex.counter += 1\n        self.triangles = {}\n\nclass Triangle(object):\n    counter = 0\n    def __init__(self, vertices):\n        self.index = Triangle.counter\n        Triangle.counter += 1\n        self.vertices = vertices # list of length 3\n</code></pre>\n\n<p>In Rust, this will not work because of the ownership model. The most straightforward alternative I could come up with would be to give the <code>Geometry</code> object a member <code>HashMap</code> of <code>Vertex</code>es and <code>Triangle</code>s, just like in my Python code (again indexed by ID). The <code>Vertex</code> and <code>Triangle</code> objects would then contain a vector/array of the IDs of their 'members'. This ID can then be used to find the appropriate object in the <code>HashMap</code>.</p>\n\n<p>For example, if a certain <code>Triangle</code> contains the <code>Vertex</code>es with IDs 1, 2, and 3, I could set the variable 'vertices' in the <code>Triangle</code> object to the array <code>[1,2,3]</code>. However, in order to actually work with the <code>Vertex</code> objects afterwards, I'd have to subsequently look up the object in the <code>HashMap</code>. This would lead to a lot of repetition all throughout the code. Furthermore, since the <code>Triangle</code> and <code>Vertex</code> structs are not aware of the struct <code>Geometry</code>, it will be impossible to add a method to either <code>Triangle</code> or <code>Vertex</code> that will encapsulate this process - after all, they cannot access the appropriate <code>HashMap</code>.</p>\n\n<p>I've been thinking about a way of making this work with borrows, so that the <code>Triangle</code> and <code>Vertex</code> objects can in fact store a reference to one another. However, my experience with Rust is severely lacking, so I'm not getting very far. Some initial naive approaches always ran into problems with lifetimes and I'm even starting to doubt whether my current setup is workable at all in the Rust paradigm.</p>\n\n<p>All feedback on any part of my question would be very welcome. Ideally I'm looking for a concrete suggestion on how to implement something along my line of thinking, but if you get the idea that I should rethink my entire approach, then I'd also be very happy to hear that.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501601697, "post_id": 45434546, "comment_id": 77845123, "body": "@Shepmaster I cannot see why it is a duplicate except because of the title. The answer of <a href=\"https://stackoverflow.com/questions/32634634/how-can-i-peek-into-a-vector-and-pop-if-a-condition-is-met\" title=\"how can i peek into a vector and pop if a condition is met\">stackoverflow.com/questions/32634634/&hellip;</a> is not adapted to this question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1501602348, "post_id": 45434546, "comment_id": 77845517, "body": "@Boiethios &quot;adapted to the question&quot; is not really a prerequisite for a question to be a duplicate. If it were, I&#39;d expect there to be an infinite number of &quot;extremely near duplicates&quot; (e.g. &quot;It&#39;s not a duplicate because my variable was <code>foo</code> and that one was <code>bar</code>&quot;). I don&#39;t know how much more of a duplicate these could be \u2014 the questions have the <i>exact</i> same structure - matching on the result of <code>Vec::last</code> and trying to mutate the vector."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1501667616, "last_edit_date": 1501667616, "creation_date": 1501586129, "answer_id": 45436286, "question_id": 45434546, "link": "https://stackoverflow.com/questions/45434546/non-moving-mutable-reference-borrowing-in-nested-match-statements/45436286#45436286", "title": "Non-Moving Mutable Reference Borrowing in Nested Match Statements", "body": "<p>If it does not matter to clone the token, you can use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.cloned\" rel=\"nofollow noreferrer\"><code>Option::cloned</code></a></p>\n\n<pre><code>let last = tokens.last().cloned();\n\nif let Some(token) = last {\n    match token {\n        lexer::Token::OpenBracket =&gt; {\n            tokens.pop();\n        },\n        _ =&gt; ()\n    }\n}\n</code></pre>\n\n<p>By cloning the content (and thereby dropping the reference, <em>i.e.</em> unborrowing the vector), you can borrow again the vector.</p>\n\n<hr>\n\n<p>If you do not want to clone, you can always do that:</p>\n\n<pre><code>let mut must_pop = false;\n\nif let Some(token) = tokens.last() {\n    match token {\n        lexer::Token::OpenBracket =&gt; {\n            must_pop = true;\n        },\n        _ =&gt; ()\n    }\n}\nif must_pop {\n    tokens.pop();\n}\n</code></pre>\n\n<p>This solution is not very \"aesthetic\", but it works at least.</p>\n"}], "owner": {"reputation": 1961, "user_id": 1874323, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7f6c299c60b5eab6f199347f6715bc05?s=128&d=identicon&r=PG", "display_name": "BlamKiwi", "link": "https://stackoverflow.com/users/1874323/blamkiwi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "closed_date": 1501591613, "answer_count": 1, "score": 1, "last_activity_date": 1501667616, "creation_date": 1501581029, "last_edit_date": 1501585806, "question_id": 45434546, "link": "https://stackoverflow.com/questions/45434546/non-moving-mutable-reference-borrowing-in-nested-match-statements", "closed_reason": "Duplicate", "title": "Non-Moving Mutable Reference Borrowing in Nested Match Statements", "body": "<p>I'm using Rust to implement a compiler as part of a learning exercise. For parts of the compiler I implement token peeking to perform efficient parser alternation. To do that in Rust, I peek at the token stack then match on the token which results in a nested match statement like below.     </p>\n\n<pre><code>// Is there an optional type modifier\n// Peek at the next token and process it\nmatch tokens.last() {\n    Some(token) =&gt;\n        match token.clone() {\n            lexer::Token::OpenBracket =&gt; {\n                tokens.pop()\n            },\n            _ =&gt; ()\n\n        },\n    None =&gt; ()\n};\n</code></pre>\n\n<p>I'm having trouble figuring out the appropriate borrow checking logic for passing the <code>tokens</code> vector as mutable reference to the innermost scope. I've already tried variations of rebinding <code>tokens</code> in the match statement using mutable references, but the compiler still captures <code>tokens</code> as an immutable. How do I get a mutable <code>tokens</code> reference to the inner most scope in this example?</p>\n"}, {"tags": ["winapi", "rust", "ffi"], "comments": [{"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "edited": false, "score": 0, "creation_date": 1501533964, "post_id": 45424754, "comment_id": 77811399, "body": "There is no <i>&quot;segfault&quot;</i> in Windows. Please exercise more diligence in representing your problem."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "edited": false, "score": 1, "creation_date": 1501573345, "post_id": 45424754, "comment_id": 77824468, "body": "@IInspectable Why do not you edit the question to correct that?"}, {"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1501573894, "post_id": 45424754, "comment_id": 77824886, "body": "@Boiethios: I cannot reproduce the issue, and I don&#39;t know the exact error message. <code>0xC0000005</code> looks like an access violation, but I have no idea, how the Rust runtime reports this. Since you can presumably reproduce the issue on your machine, why not propose an edit yourself?"}], "answers": [{"comments": [{"owner": {"reputation": 27, "user_id": 4718281, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc0c3a2be8990067cb24d5c46152c036?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/4718281/alex"}, "edited": false, "score": 0, "creation_date": 1501535013, "post_id": 45424854, "comment_id": 77811853, "body": "More information about rust pointers: <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.pointer.html</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1501533352, "creation_date": 1501533352, "answer_id": 45424854, "question_id": 45424754, "link": "https://stackoverflow.com/questions/45424754/segfault-when-calling-getbinarytypea/45424854#45424854", "title": "Segfault when calling GetBinaryTypeA", "body": "<p>You are casting the value <code>0</code> to a pointer. On the vast majority of computers in use today, the pointer with the value <code>0</code> is known as <code>NULL</code>. Thus, you are trying to write to the <code>NULL</code> pointer, which causes a crash.</p>\n\n<p>You want to write to the address of the value:</p>\n\n<pre><code>&amp;mut out as *mut c_ulong\n</code></pre>\n\n<p>Which doesn't even need the cast:</p>\n\n<pre><code>unsafe {\n    GetBinaryTypeA(cpath.as_ptr(), &amp;mut out);\n}\n</code></pre>\n"}], "owner": {"reputation": 27, "user_id": 4718281, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc0c3a2be8990067cb24d5c46152c036?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/4718281/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 45424854, "answer_count": 1, "score": 0, "last_activity_date": 1501533988, "creation_date": 1501532978, "last_edit_date": 1501533820, "question_id": 45424754, "link": "https://stackoverflow.com/questions/45424754/segfault-when-calling-getbinarytypea", "title": "Segfault when calling GetBinaryTypeA", "body": "<p>I tried to import the <a href=\"https://msdn.microsoft.com/ru-ru/library/windows/desktop/aa364819(v=vs.85).aspx\" rel=\"nofollow noreferrer\"><code>GetBinaryTypeA</code></a> function: </p>\n\n<pre><code>use std::ffi::CString;\n\nuse ::std::os::raw::{c_char, c_ulong};\nextern { fn GetBinaryTypeA(s: *const c_char, out: *mut c_ulong) -&gt; i32; }\n\nfn main() {\n    let path = \"absolute/path/to/bin.exe\";\n\n    let cpath = CString::new(path).unwrap();\n    let mut out: c_ulong = 0;\n\n    println!(\"{:?}\", cpath);\n    unsafe { GetBinaryTypeA(cpath.as_ptr(), out as *mut c_ulong); }\n    println!(\"{:?}\", cpath);\n}\n</code></pre>\n\n<p>Output:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: process didn't exit successfully: `target\\debug\\bin_deploy.exe` (exit code: 3221225477)\nProcess finished with exit code -1073741819 (0xC0000005)\n</code></pre>\n\n<p>If I set an invalid path then it executes successfully and <code>GetLastError()</code> returns 2 (\"The system cannot find the file specified\"), so it looks like the imported function works.</p>\n\n<p>I received the same error using the kernel32-sys crate. Where else can the error be?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 725, "user_id": 156459, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/e944b56331602c572d23b47243dca582?s=128&d=identicon&r=PG", "display_name": "thamurath", "link": "https://stackoverflow.com/users/156459/thamurath"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501533604, "post_id": 45424615, "comment_id": 77811218, "body": "Thanks to point me to the correct answer ... @Shepmaster. I have search for a while but did not use the correct terms ..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1501533694, "post_id": 45424615, "comment_id": 77811259, "body": "No worries; that&#39;s why Stack Overflow has duplicates. This question will remain as a signpost for everyone else who searches using the same terms you did."}], "owner": {"reputation": 725, "user_id": 156459, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/e944b56331602c572d23b47243dca582?s=128&d=identicon&r=PG", "display_name": "thamurath", "link": "https://stackoverflow.com/users/156459/thamurath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 197, "favorite_count": 0, "closed_date": 1501532862, "answer_count": 0, "score": 0, "last_activity_date": 1501532801, "creation_date": 1501532419, "last_edit_date": 1501532801, "question_id": 45424615, "link": "https://stackoverflow.com/questions/45424615/how-to-use-a-super-trait-as-parameter", "closed_reason": "Duplicate", "title": "How to use a super-trait as parameter?", "body": "<p>I have some elements with a 2D position. Since most of them are (almost) round, to simplify I use the distance to check if two of them have collided.</p>\n\n<p>While I <strong>can</strong> call a method from a \"parent\" trait, I <strong>cannot</strong> use it as a parameter where a parent trait is required.</p>\n\n<pre><code>trait Point {\n    fn x(&amp;self) -&gt; f64;\n    fn y(&amp;self) -&gt; f64;\n    fn distance(&amp;self, other: &amp;Point) -&gt; f64 {\n        ((other.x() - self.x()).powi(2) + (other.y() - self.y()).powi(2)).sqrt()\n    }\n}\n\ntrait Round: Point {\n    fn radius(&amp;self) -&gt; f64;\n\n    fn collision(&amp;self, other: &amp;Round) -&gt; bool {\n        let distance: f64 = self.distance(other);\n        distance &lt; self.radius() + other.radius()\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:13:43\n   |\n13 |         let distance: f64 = self.distance(other);\n   |                                           ^^^^^ expected trait `Point`, found trait `Round`\n   |\n   = note: expected type `&amp;Point`\n              found type `&amp;Round`\n</code></pre>\n\n<p>What is the correct way to achieve this?</p>\n"}, {"tags": ["python", "rust", "ipc", "file-descriptor", "pipelining"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1501509395, "post_id": 45417809, "comment_id": 77796531, "body": "Someone may come up with a more direct answer to your question, but meanwhile let me suggest <a href=\"http://zeromq.org/\" rel=\"nofollow noreferrer\">&#216;MQ</a> for all your interprocess communication needs. It comes with bindings for both, <a href=\"https://github.com/zeromq/pyzmq\" rel=\"nofollow noreferrer\">Python</a> and <a href=\"https://github.com/erickt/rust-zmq\" rel=\"nofollow noreferrer\">Rust</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501511452, "post_id": 45417809, "comment_id": 77798040, "body": "Sounds good. I&#39;ve moved your question to the title of the post, which is where it belongs here on Stack Overflow. Next, I encourage you to <a href=\"https://stackoverflow.com/posts/45417809/edit\">edit</a> your question to include the important pieces of information: What the program <i>does</i> and what you <i>expect</i> it to do."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501511803, "post_id": 45417809, "comment_id": 77798307, "body": "<i>I haven&#39;t been able to find any way of opening a pipe using a file descriptor.</i> \u2014 except your code <b>shows that you did</b>: <code>pipe_in = unsafe { Stdio::from_raw_fd(fd) };  let mut my_pipe = Pipe::new();  my_pipe.reader = pipe_in;</code>."}, {"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501511917, "post_id": 45417809, "comment_id": 77798396, "body": "@Shepmaster this does not work at all (I am very new to Rust)"}, {"owner": {"reputation": 63078, "user_id": 220147, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b3881a28fe402dd2d1de44717486cae8?s=128&d=identicon&r=PG", "display_name": "Michael Kohl", "link": "https://stackoverflow.com/users/220147/michael-kohl"}, "edited": false, "score": 1, "creation_date": 1501512749, "post_id": 45417809, "comment_id": 77799023, "body": "Does this help? <a href=\"https://rustbyexample.com/std_misc/process/pipe.html\" rel=\"nofollow noreferrer\">rustbyexample.com/std_misc/process/pipe.html</a>"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 1, "creation_date": 1501513630, "post_id": 45417809, "comment_id": 77799690, "body": "&quot;this does not work at all&quot; - then post errors or whatever problem you encountered? don&#39;t make others replicate the attempts that you already did."}, {"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501519457, "post_id": 45417809, "comment_id": 77803469, "body": "@the8472 There is no runtime error. It just doesn&#39;t print out inputs from the other program. That&#39;s why I came here for help. Sorry if anything is unclear it&#39;s the first time I post here."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1501520297, "post_id": 45417809, "comment_id": 77803910, "body": "This is not the correct way to use <code>fork</code>. You&#39;re supposed to <code>fork</code> and then <code>exec</code> which replaces the child process. Instead, you&#39;re calling <code>subprocess.run</code> which does its own <code>fork</code>+<code>exec</code> and starts an external process. Your file descriptors won&#39;t be valid in that process."}, {"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501520532, "post_id": 45417809, "comment_id": 77804035, "body": "Is Popen better ? @interjay"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501520772, "post_id": 45417809, "comment_id": 77804157, "body": "It&#39;s the same. <code>run</code> is a wrapper around <code>Popen</code>+<code>wait</code>. There&#39;s no point in forking if you&#39;re going to use that."}, {"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "reply_to_user": {"reputation": 63078, "user_id": 220147, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b3881a28fe402dd2d1de44717486cae8?s=128&d=identicon&r=PG", "display_name": "Michael Kohl", "link": "https://stackoverflow.com/users/220147/michael-kohl"}, "edited": false, "score": 0, "creation_date": 1501529466, "post_id": 45417809, "comment_id": 77809064, "body": "@MichaelKohl no it actually doesnt since it&#39;s spawning a subprocess from Rust .. I want somethoing like in C when u get a handle on a pipe using a file descriptor."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501578917, "post_id": 45417809, "comment_id": 77828213, "body": "&quot;but standard input in Rust doesn&#39;t seem to take any input &quot; - how have you determined that?"}, {"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501579473, "post_id": 45417809, "comment_id": 77828602, "body": "@the8472 I printed out the inputs with the line &quot;pintln!(&quot;{}&quot;, buffer)&quot; which prints out inputs from the keyboard when i run the Rust process alone   .. but when I use the python program to launch it .. no inputs are printed out. they are supposed to come from the python process with the line &quot;process.stdin.write(str.encode(json.dumps(dictionnaire[str(&zwnj;&#8203;index)]))) &quot;."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501582302, "post_id": 45417809, "comment_id": 77830668, "body": "have you checked whether popen redirects stdout? have you tried printing before the read_line, which might block? does the process start and hang or not get started at all? you need to break down the problem into parts and <i>debug</i> step by step to figure out where it fails instead of just saying that it either works or doesn&#39;t."}, {"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501583394, "post_id": 45417809, "comment_id": 77831402, "body": "@the8472 Im sorry I didn&#39;t get too much in the details of what I did. So yes I had printed before and after the read_line and it was printing so stdout is not redirected. it is indeed blocking on read_line."}, {"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501583515, "post_id": 45417809, "comment_id": 77831485, "body": "@the8472 so thank you very much sir I found the solution ! &quot;process.stdin.write&quot; does not add a &quot;\\n&quot; at the end of the data i am trying to send so read line never gets to the end of the line !!!"}], "answers": [{"comments": [{"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "edited": false, "score": 0, "creation_date": 1501520032, "post_id": 45419649, "comment_id": 77803786, "body": "That is actually what I was trying to do .. opening handles on fd in new process. The problem is I can&#39;t find any API that does that in Rust. Then I tried your second approach. Please read the answer that I just posted below. thank you"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "edited": false, "score": 2, "creation_date": 1501522927, "post_id": 45419649, "comment_id": 77805469, "body": "the point is that there is no fd to open in the child process if it gets closed on the python side when spawning a child process."}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": false, "score": 0, "last_activity_date": 1501515143, "last_edit_date": 1501515143, "creation_date": 1501514341, "answer_id": 45419649, "question_id": 45417809, "link": "https://stackoverflow.com/questions/45417809/how-can-i-redirect-outputs-from-a-python-process-into-a-rust-process/45419649#45419649", "title": "How can I redirect outputs from a Python process into a Rust process?", "body": "<p>This may be a problem on the Python side</p>\n\n<blockquote>\n  <pre class=\"lang-py prettyprint-override\"><code>subprocess.run([\"cargo run -- \" + str(r)], shell=True)\n</code></pre>\n</blockquote>\n\n<p>This assumes that you have a numeric file descriptor that remains open across <code>fork</code> and <code>exec</code>. Spawning processes may close file descriptors either because they're marked as <code>CLOEXEC</code> or due to explicit cleanup code before <code>exec</code>.</p>\n\n<p>Before attempting to pass a numeric file descriptor as a string argument, you should make sure that they will remain valid in the new process.</p>\n\n<p>A better approach is to use some process spawning API that allows you to explicitly map the file descriptors in the new process to open handles or an API that spawns a process with stdin/out tied to pipes.</p>\n"}, {"tags": [], "owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "is_accepted": true, "score": 1, "last_activity_date": 1501591532, "last_edit_date": 1501591532, "creation_date": 1501583738, "answer_id": 45435497, "question_id": 45417809, "link": "https://stackoverflow.com/questions/45417809/how-can-i-redirect-outputs-from-a-python-process-into-a-rust-process/45435497#45435497", "title": "How can I redirect outputs from a Python process into a Rust process?", "body": "<p><code>process.stdin.write(str.encode(json.dumps(dictionnaire[str(index)]))</code> does not add a newline character by default, so on the Rust side I was never getting to the end of the line which was making the process block on <code>read_line</code>.</p>\n\n<p>Adding it manually made everything work smoothly.</p>\n\n<pre><code>process.stdin.write(str.encode(json.dumps(dictionnaire[str(index)])+ \"\\n\") )\n</code></pre>\n"}], "owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 251, "favorite_count": 0, "accepted_answer_id": 45435497, "answer_count": 2, "score": 1, "last_activity_date": 1501592083, "creation_date": 1501509107, "last_edit_date": 1501592083, "question_id": 45417809, "link": "https://stackoverflow.com/questions/45417809/how-can-i-redirect-outputs-from-a-python-process-into-a-rust-process", "title": "How can I redirect outputs from a Python process into a Rust process?", "body": "<p>I am trying to spawn a Rust process from a Python program and redirect Python's standard output into its standard input. I have used the following function:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>process = subprocess.Popen([\"./target/debug/mypro\"], stdin=subprocess.PIPE)\n</code></pre>\n\n<p>and tried to write to the subprocess using: </p>\n\n<pre class=\"lang-py prettyprint-override\"><code>process.stdin.write(str.encode(json.dumps(dictionnaire[str(index)]))) #Write bytes of Json representation of previous track\n</code></pre>\n\n<p>I am not getting any errors but standard input in Rust doesn't seem to take any input and standard output isn't printing anything at all. </p>\n\n<p>Here's the version of the Rust code I am currently running: </p>\n\n<pre><code>extern crate rustc_serialize;\nuse rustc_serialize::json::Json;\nuse std::fs::File;\nuse std::io;\nuse std::env;\nuse std::str;\n\nfn main(){\n    let mut buffer = String::new();\n    let stdin = io::stdin();\n    //stdin.lock();\n    stdin.read_line(&amp;mut buffer).unwrap();\n    println!{\"{}\", buffer};\n    println!{\"ok\"};      \n\n}\n</code></pre>\n"}, {"tags": ["linux", "rust", "profiling"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1501507885, "post_id": 45417187, "comment_id": 77795372, "body": "My first search result for <code>clear_page_c_e</code> is <a href=\"http://www.linuxforums.org/forum/kernel/199904-clear_page_c_e-eating-lots-cpu.html\" rel=\"nofollow noreferrer\">clear_page_c_e eating lots of cpu</a> and the second is <a href=\"https://randomascii.wordpress.com/2014/12/10/hidden-costs-of-memory-allocation/\" rel=\"nofollow noreferrer\">Hidden Costs of Memory Allocation</a>. Perhaps if you clarify what you don&#39;t understand from those references, you will get a better answer. Once you have done that, you should figure out the call stack to <code>clear_page_c_e</code>; that will show you what&#39;s calling it (thus causing it)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501507993, "post_id": 45417187, "comment_id": 77795450, "body": "<a href=\"https://doc.rust-lang.org/std/io/struct.Stdout.html\" rel=\"nofollow noreferrer\"><code>Stdout</code> is already buffered</a>, so you shouldn&#39;t need the extra buffer."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 1, "creation_date": 1501516844, "post_id": 45417187, "comment_id": 77801870, "body": "you might want to compile with debug information and <code>perf record -g</code> which should give you stack traces and source annotations in <code>perf report</code>. that might provide insight what&#39;s triggering it from userspace"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1501528810, "post_id": 45417187, "comment_id": 77808682, "body": "How are you measuring parsing speed?"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 976, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1501510728, "creation_date": 1501507436, "last_edit_date": 1501510728, "question_id": 45417187, "link": "https://stackoverflow.com/questions/45417187/whats-the-reason-clear-page-c-e-is-eating-most-cpu-time-here", "title": "What&#39;s the reason clear_page_c_e is eating most CPU time here?", "body": "<p>Consider this file:</p>\n\n<pre><code>extern crate csv;\nuse std::error::Error;\nuse std::process;\nuse std::io;\nuse std::io::Write;\n\nfn main() {\n    let mut rdr = csv::ReaderBuilder::new()\n        .has_headers(false)\n        .delimiter(b'\\t')\n        .from_reader(io::stdin());\n    let mut stdout_buf = io::BufWriter::new(io::stdout());\n    for result in rdr.records() {\n        let record = result.unwrap();\n        for (i, item) in record.iter().enumerate() {\n            write!(stdout_buf, \"{}\", item);\n        }\n    }\n}\n</code></pre>\n\n<p>In <code>Cargo.toml</code>, the only dependency is <code>csv = \"1.0.0-beta.3\"</code>. If I feed this program with a large tab-separated file, I initially get 100MiB/s parsing speed, but after a few seconds it drops to less than half a megabyte per second. Here's what took most time according to <code>perf</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Samples: 91K of event 'cycles:pp', Event count (approx.): 70889999629                                                                                                       \nOverhead  Command     Shared Object       Symbol                                                                                                                            \n  46.63%  csv_mapper  libc-2.17.so        [.] __memcpy_ssse3_back                                                                                                           \n  34.68%  csv_mapper  [kernel.kallsyms]   [k] clear_page_c_e                                                                                                                \n   5.66%  csv_mapper  csv_mapper          [.] csv_core::reader::Reader::read_record::hc2c3417e5570c6ac                                                                      \n   3.38%  csv_mapper  csv_mapper          [.] csv::byte_record::validate::hf69692f1aec60002                                                                                 \n   0.82%  csv_mapper  csv_mapper          [.] csv_mapper::main::h84d39cb33f062b66                                                                                           \n   0.79%  csv_mapper  csv_mapper          [.] core::fmt::write::h3f842b6303ea2a70                                                                                           \n   0.78%  csv_mapper  csv_mapper          [.] _$LT$std..io..Write..write_fmt..Adaptor$LT$$u27$a$C$$u20$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::h0002300cbe68df34  \n   0.69%  csv_mapper  csv_mapper          [.] core::str::from_utf8::h1297230116307e46                                                                                       \n   0.42%  csv_mapper  csv_mapper          [.] mallocx                                                                                                                       \n</code></pre>\n\n<p>What could be happening here? Tested on <code>rustc 1.20.0-nightly (d84693b93 2017-07-09)</code>, x86_64, CentOS 7.3.</p>\n"}, {"tags": ["serialization", "rust", "traits", "lmdb"], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 3, "last_activity_date": 1501424965, "last_edit_date": 1501424965, "creation_date": 1501412475, "answer_id": 45399106, "question_id": 45398971, "link": "https://stackoverflow.com/questions/45398971/putting-strings-or-enums-into-lmdb/45399106#45399106", "title": "Putting strings or enums into LMDB", "body": "<p>You will have to use <em>some</em> serialization format because you cannot directly put the bits that represent <code>MyEnum</code> in memory into the database (because the internal implementations of enums and <code>String</code> may not be stable across Rust versions, and <code>String</code> at least uses pointers internally).</p>\n\n<p>You do not have to use JSON specifically.  (JSON is indeed quite inefficient.)  You could pick something else supported by <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">serde</a> (which appears to be the de-facto type-directed serialization library for Rust).</p>\n"}], "owner": {"reputation": 599, "user_id": 1907778, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/6c218938854094046cff901c6dec7140?s=128&d=identicon&r=PG", "display_name": "5-to-9", "link": "https://stackoverflow.com/users/1907778/5-to-9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 0, "accepted_answer_id": 45399106, "answer_count": 1, "score": 2, "last_activity_date": 1501424965, "creation_date": 1501411449, "last_edit_date": 1501421954, "question_id": 45398971, "link": "https://stackoverflow.com/questions/45398971/putting-strings-or-enums-into-lmdb", "title": "Putting strings or enums into LMDB", "body": "<p>I want to write some data to my database using <a href=\"https://github.com/danburkert/lmdb-rs\" rel=\"nofollow noreferrer\">the lmdb crate</a>. I am writing an enum:</p>\n\n<pre><code>enum MyEnum {\n    A { astr: String, bstr: String },\n    B { i: u32 },\n    C,\n}\n</code></pre>\n\n<p>The <code>put</code> function of an <code>lmdb::RwTransaction</code> has following definition:</p>\n\n<pre><code>fn put&lt;K, D&gt;(\n    &amp;mut self,\n    database: Database,\n    key: &amp;K,\n    data: &amp;D,\n    flags: WriteFlags,\n) -&gt; Result&lt;()&gt;\nwhere\n    K: AsRef&lt;[u8]&gt;,\n    D: AsRef&lt;[u8]&gt;,\n</code></pre>\n\n<p>How do I put <code>MyEnum::A</code> into the database, since it does not implement <code>AsRef&lt;[u8]&gt;</code>?</p>\n\n<p>I could just convert the data to JSON and write that JSON into the database, but this costs performance.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": true, "score": 2, "last_activity_date": 1501422535, "last_edit_date": 1501422535, "creation_date": 1501415658, "answer_id": 45399515, "question_id": 45398756, "link": "https://stackoverflow.com/questions/45398756/how-can-i-write-a-function-that-takes-a-collection-of-closures/45399515#45399515", "title": "How can I write a function that takes a collection of closures?", "body": "<p>There are several issues with the code:</p>\n\n<ol>\n<li><p>Your boxed closure takes a parameter <code>ex</code>, but the trait <code>FnOnce()</code> takes no parameters. The parameter <code>ex</code> also shadows the parameter <code>ex</code> from the outer closure, so I assume you meant the inner closure to take no parameters: <code>move || assert!(ex &gt; 0)</code>.</p></li>\n<li><p>Type mismatch in <code>ex &gt; 0</code> because of comparing reference to non-reference. Can be fixed by dereferencing the outer closure parameter during pattern matching: <code>|&amp;ex| ....</code></p></li>\n<li><p>Type inference isn't strong enough to discover that the iterator returned by <code>map</code> should be over <code>Box&lt;FnOnce()&gt;</code> rather than <code>Box&lt;unique closure object&gt;</code>. You can add an explicit cast to fix this: <code>Box::new(move || assert!(ex &gt; 0)) as Box&lt;FnOnce()&gt;</code></p></li>\n<li><p>At this point, the code will compile, but you will get a compilation error when you add a call to the boxed <code>FnOnce()</code> due to a language limitation. See <a href=\"https://stackoverflow.com/questions/30411594/cannot-move-a-value-of-type-fnonce-when-moving-a-boxed-function\">&quot;cannot move a value of type FnOnce&quot; when moving a boxed function</a>. On nightly Rust, you can change <code>FnOnce</code> to <code>FnBox</code>. Otherwise, you can use <code>FnMut</code> instead or use one of the workarounds from that question. There's another workaround based on defining an extra trait given <a href=\"https://doc.rust-lang.org/book/second-edition/ch20-05-sending-requests-via-channels.html\" rel=\"nofollow noreferrer\">in the Rust book</a> (see section between listing 20-20 and listing 20-21).</p></li>\n</ol>\n\n<p>Here is the fixed code using <code>FnBox</code>:</p>\n\n<pre><code>#![feature(fnbox)]\nuse std::boxed::FnBox;\n\nfn run_all_tests&lt;I&gt;(tests: I)\nwhere\n    I: IntoIterator&lt;Item = Box&lt;FnBox()&gt;&gt;,\n{\n    for t in tests {\n        t();\n    }\n}\n\nfn main() {\n    let examples = [1, 2, 3];\n\n    run_all_tests(examples.iter().map(|&amp;ex| {\n        Box::new(move || assert!(ex &gt; 0)) as Box&lt;FnBox()&gt;\n    }));\n}\n</code></pre>\n"}], "owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 45399515, "answer_count": 1, "score": 2, "last_activity_date": 1501422535, "creation_date": 1501410025, "last_edit_date": 1501422061, "question_id": 45398756, "link": "https://stackoverflow.com/questions/45398756/how-can-i-write-a-function-that-takes-a-collection-of-closures", "title": "How can I write a function that takes a collection of closures?", "body": "<p>I am trying to write a function that takes a collection of closures of type <code>Fn() -&gt; ()</code>, i.e. each closure takes no args, returns nothing (and I want them to be <code>FnOnce</code> actually, so as to move all its environment into the closure object).</p>\n\n<p>I've tried many things (like using <code>Box&lt;Fn() -&gt; ()&gt;</code> and using <code>&amp;'static</code>) but I just can't get this working.</p>\n\n<p>I created a gist in the <a href=\"https://play.rust-lang.org/?gist=421151b3342c80078bf595aef0c8af56&amp;version=stable\" rel=\"nofollow noreferrer\">Rust Playground</a> to show what I am trying to do, approximately.</p>\n\n<p>Here's the simplified code:</p>\n\n<pre><code>fn run_all_tests&lt;I&gt;(tests: I)\nwhere\n    I: IntoIterator&lt;Item = Box&lt;FnOnce() -&gt; ()&gt;&gt;,\n{\n}\n\nfn main() {\n    let examples = [1, 2, 3];\n\n    run_all_tests(examples.iter().map(\n        |ex| Box::new(move |ex| assert!(ex &gt; 0)),\n    ));\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;[closure@src/main.rs:11:9: 11:49] as std::ops::FnOnce&lt;(&amp;{integer},)&gt;&gt;::Output == std::boxed::Box&lt;std::ops::FnOnce() + 'static&gt;`\n  --&gt; src/main.rs:10:5\n   |\n10 |     run_all_tests(examples.iter().map(\n   |     ^^^^^^^^^^^^^ expected closure, found trait std::ops::FnOnce\n   |\n   = note: expected type `std::boxed::Box&lt;[closure@src/main.rs:11:23: 11:48]&gt;`\n              found type `std::boxed::Box&lt;std::ops::FnOnce() + 'static&gt;`\n   = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Map&lt;std::slice::Iter&lt;'_, {integer}&gt;, [closure@src/main.rs:11:9: 11:49]&gt;`\n   = note: required by `run_all_tests`\n</code></pre>\n"}, {"tags": ["rust", "decorator"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501422319, "post_id": 45397876, "comment_id": 77761382, "body": "Why did you define <code>pub slave: &amp;&#39;a mut Slave,</code> as mutable? Just change it to <code>pub slave: &amp;&#39;a Slave,</code>. Otherwise yes, this is likely to be a duplicate."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1501430367, "post_id": 45397876, "comment_id": 77763954, "body": "Standard Library Example: <code>std::cell::Ref</code> and <code>std::cell::RefMut</code>. If the standard library authors do not manage to have a single type to handle both mutable and immutable access (at compile-time), chances are good that you won&#39;t... and if you do manage it, then please explain how you did and help improved the standard library!"}], "answers": [{"tags": [], "owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "is_accepted": false, "score": 0, "last_activity_date": 1501504199, "last_edit_date": 1501504199, "creation_date": 1501499845, "answer_id": 45414477, "question_id": 45397876, "link": "https://stackoverflow.com/questions/45397876/decorator-pattern-and-immutable-reference/45414477#45414477", "title": "Decorator pattern and immutable reference", "body": "<p>Taking <code>std::cell::Ref</code> and <code>std::cell::RefMut</code> as example, I will provide a <code>Drive</code> for <code>&amp;Slave</code> and a <code>DriveMut</code> for <code>&amp;mut Slave</code>.</p>\n"}], "owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 728, "favorite_count": 0, "closed_date": 1501504170, "answer_count": 1, "score": 1, "last_activity_date": 1501504199, "creation_date": 1501403306, "last_edit_date": 1501499603, "question_id": 45397876, "link": "https://stackoverflow.com/questions/45397876/decorator-pattern-and-immutable-reference", "closed_reason": "Duplicate", "title": "Decorator pattern and immutable reference", "body": "<p>I'm using the decorator pattern and find that while it works on a mutable reference, it doesn't work on an immutable one. Does anyone have a better idea?</p>\n\n<pre><code>pub struct Slave {\n    pub is_drive: bool\n}\n\nimpl Slave {\n    fn is_drive(&amp;self) -&gt; bool {\n        self.is_drive\n    }\n}\n</code></pre>\n\n<p><code>Drive</code> is a decorator type of <code>Slave</code>.</p>\n\n<pre><code>pub struct Drive&lt;'a&gt; {\n    pub slave: &amp;'a mut Slave,\n}\n\nimpl&lt;'a&gt; Drive&lt;'a&gt; {\n    // Create drive.\n    pub fn new(slave: &amp;mut Slave) -&gt; Drive {\n        Drive {\n            slave: slave,\n        }\n    }\n}\n</code></pre>\n\n<p><code>Drive</code> can only be used with a <code>&amp;mut Slave</code>, but I'd like to get a <code>&amp;Drive</code> from a <code>&amp;Slave</code>:</p>\n\n<pre><code>fn main() {\n    let s1 = &amp;mut Slave { is_drive: true };\n    let d1 = Drive::new(s1);\n\n    // Doesn't work\n    // let s2 = &amp; Slave { is_drive: true };\n    // let d2 = Drive::new(s2);\n}\n</code></pre>\n\n<p>Edit:</p>\n\n<p><code>Drive</code> can only be used with a <code>&amp;mut Slave</code>, but sometimes I need it for a <code>&amp;Slave</code>. I don't use accessor functions because Slave should not depend on Drive:</p>\n\n<pre><code>fn config_slave(slave: &amp;mut Slave) {\n    ...\n    if slave.is_drive() {\n        let drive = Drive::new(slave) {\n            // call functions provided by Drive\n        }\n    }\n    ...\n}\n\nfn print_slave(slave: &amp;Slave) {\n    ...\n    if slave.is_drive() {\n       let drive = Drive::new(slave) {\n           // Call functions provided by Drive\n       }\n    }\n    ...\n}\n</code></pre>\n"}, {"tags": ["multithreading", "unix", "rust", "file-permissions", "setuid"], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 2, "last_activity_date": 1501406305, "last_edit_date": 1501406305, "creation_date": 1501400826, "answer_id": 45397575, "question_id": 45397316, "link": "https://stackoverflow.com/questions/45397316/is-this-possible-to-switch-the-user-and-group-of-an-application-thread/45397575#45397575", "title": "Is this possible to switch the user and group of an application thread?", "body": "<p>On GNU/Linux, it is not possible to switch UID and GID just for a single thread of a process.  The Linux kernel maintains per-thread credentials, but POSIX requires a single set of credentials per process: POSIX <code>setuid</code> must change the UID of all threads or none.  glibc goes to great lengths to emulate the POSIX behavior, although that is quite difficult.</p>\n\n<p>You would have to create a completely new process for each request, not just a new thread.  Process creation is quite cheap on Linux, but it could still be a performance problem.  You could keep a pool of processes around to avoid the overhead of repeated process creation.  On the other hand, many years ago, lots of web sites (including some fairly large ones) used CGI to generate web pages, and you can get relatively far with a simple design.</p>\n"}, {"comments": [{"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1501406420, "post_id": 45398180, "comment_id": 77757099, "body": "I clarified my answer. With GNU/Linux, I meant the Linux kernel with a GNU (glibc) userland. Other libcs might behave differently. glibc may may not react well to UID/GID changes with direct system calls."}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": false, "score": 1, "last_activity_date": 1501423981, "last_edit_date": 1501423981, "creation_date": 1501405598, "answer_id": 45398180, "question_id": 45397316, "link": "https://stackoverflow.com/questions/45397316/is-this-possible-to-switch-the-user-and-group-of-an-application-thread/45398180#45398180", "title": "Is this possible to switch the user and group of an application thread?", "body": "<p>I think @Florian got this backwards in his original answer. <code>man 2 setuid</code> says </p>\n\n<blockquote>\n  <p><strong>C library/kernel differences</strong></p>\n  \n  <p>At  the  kernel  level, user IDs and group IDs are a per-thread attribute.  However, POSIX requires that all threads in a process\n  share the same credentials.  The NPTL threading implementation handles\n  the POSIX requirements by providing wrapper functions for the various\n  system calls that change process\n         UIDs and GIDs.  These wrapper functions (including the one for setuid()) employ a signal-based technique to ensure that when one\n  thread changes credentials, all of the other threads in the process\n  also change their credentials.  For details, see nptl(7).</p>\n</blockquote>\n\n<p>Since libc does the signal dance to do it for the whole process you will have to do direct system calls to bypass that.</p>\n\n<p>Note that this is linux-specific. Most other unix variants do seem to follow posix at the kernel level instead emulating it in libc.</p>\n"}], "owner": {"reputation": 612, "user_id": 5116662, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/493356c3e70039846530668c9e39ad2a?s=128&d=identicon&r=PG&f=1", "display_name": "lschuermann", "link": "https://stackoverflow.com/users/5116662/lschuermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 941, "favorite_count": 0, "accepted_answer_id": 45397575, "answer_count": 2, "score": 0, "last_activity_date": 1501423981, "creation_date": 1501398776, "last_edit_date": 1501421769, "question_id": 45397316, "link": "https://stackoverflow.com/questions/45397316/is-this-possible-to-switch-the-user-and-group-of-an-application-thread", "title": "Is this possible to switch the user and group of an application thread?", "body": "<p>I want to build a small web application in Rust which should be able to read and write files on a users behalf. The user should authenticate with their UNIX credentials and then be able to read / write only the files they have access to.</p>\n\n<p>My first idea, which would also seem the most secure to me, would be to switch the user-context of an application thread and do all the read/write-stuff there. Is this possible?</p>\n\n<p>If this is possible, what would the performance look like? I would assume spawning an operating system thread every time a request comes in could have a very high overhead. Is there a better way to do this?</p>\n\n<p>I really wouldn't like to run my entire application as root and check the permissions manually.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501355439, "post_id": 45392688, "comment_id": 77746723, "body": "Your first question has already been answered - <a href=\"https://stackoverflow.com/q/30243606/155423\">If let borrow conundrum</a>. Please remove it from your question. This is <a href=\"https://meta.stackexchange.com/q/39223/281829\">why you should only ask one question per question</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1501463427, "last_edit_date": 1501463427, "creation_date": 1501355543, "answer_id": 45393112, "question_id": 45392688, "link": "https://stackoverflow.com/questions/45392688/why-do-i-get-cannot-move-out-of-item-because-it-is-borrowed-for-a-custom-typ/45393112#45393112", "title": "Why do I get &quot;cannot move out of `item` because it is borrowed&quot; for a custom type but not a Box?", "body": "<p>Here's a much clearer example:</p>\n\n<pre><code>struct Item;\n\nstruct P&lt;T&gt; {\n    ptr: Box&lt;T&gt;,\n}\n\nimpl&lt;T&gt; P&lt;T&gt; {\n    fn new(v: T) -&gt; Self {\n        P { ptr: Box::new(v) }\n    }\n}\n\nimpl&lt;T&gt; std::ops::Deref for P&lt;T&gt; {\n    type Target = T;\n\n    fn deref(&amp;self) -&gt; &amp;T {\n        &amp;self.ptr\n    }\n}\n\nfn main() {\n    let mut item = P::new(Item);\n    // let mut item = Box::new(Item);\n\n    *item;\n}\n</code></pre>\n\n<blockquote>\n  <p>Both <code>Box</code> and <code>P</code> implement <code>Deref</code>, so the <code>item.node</code> expression should be the same.</p>\n</blockquote>\n\n<p>Hard truth time: moving out of <code>Box</code> is <a href=\"https://manishearth.github.io/blog/2017/01/10/rust-tidbits-box-is-special/\" rel=\"nofollow noreferrer\">special-cased in the compiler</a>. It does <strong>not</strong> use <code>Deref</code>. Moving out of a <code>Box</code> deallocates the memory and gives you ownership. It is not possible to implement this special ability ourselves.</p>\n\n<p><em>Maybe</em> at some point in the future a <em>hypothetical</em> trait like <code>DerefMove</code> will be added. This trait is hard to get right. There have been a <a href=\"https://github.com/rust-lang/rfcs/search?q=DerefMove&amp;type=Issues&amp;utf8=%E2%9C%93\" rel=\"nofollow noreferrer\">number of attempts for an RFC for it</a>, but none are currently open.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/33653946/155423\">Dereferencing Box&lt;T&gt; gives back value instead of reference</a></li>\n<li><a href=\"https://stackoverflow.com/q/38397163/155423\">How can I reuse a box that I have moved the value out of?</a></li>\n</ul>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 865, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1501463427, "creation_date": 1501352984, "last_edit_date": 1501354937, "question_id": 45392688, "link": "https://stackoverflow.com/questions/45392688/why-do-i-get-cannot-move-out-of-item-because-it-is-borrowed-for-a-custom-typ", "title": "Why do I get &quot;cannot move out of `item` because it is borrowed&quot; for a custom type but not a Box?", "body": "<p>Code:</p>\n\n<pre><code>use std::collections::HashSet;\nuse std::{mem, ptr, fmt};\nuse std::ops::Deref;\n\nenum Unsafety {\n    Normal\n}\nenum ImplPolarity { Positive }\nstruct TraitRef;\nstruct Ty;\nstruct ImplItem;\n\nenum ItemKind {\n    Impl(Unsafety,\n             ImplPolarity,\n             Option&lt;TraitRef&gt;, // (optional) trait this impl implements\n         Box&lt;Ty&gt;, // self\n    ),\n}\n\nstruct Item {\n    node: ItemKind,\n}\n\npub struct P&lt;T: ?Sized&gt; {\n    ptr: Box&lt;T&gt;\n}\n\nimpl&lt;T: 'static&gt; P&lt;T&gt; {\n    pub fn unwrap(self) -&gt; T {\n        *self.ptr\n    }\n}\n\nimpl&lt;T: ?Sized&gt; Deref for P&lt;T&gt; {\n    type Target = T;\n\n    fn deref(&amp;self) -&gt; &amp;T {\n        &amp;self.ptr\n    }\n}\n\nfn main() {\n\n    let mut items = Vec::&lt;P&lt;Item&gt;&gt;::new();\n\n    let mut item2: Item;\n\n    for item in items.drain(..) {\n\n        if let ItemKind::Impl(Unsafety::Normal,\n                                   ImplPolarity::Positive,\n                                   Some(ref trait_type),\n                                   ref for_type) = item.node {\n        } else {\n//            item2 = *item; // AAA\n            item2 = item.unwrap(); // BBB\n        }\n    }\n}\n</code></pre>\n\n<p>Produce the compile-time error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0505]: cannot move out of `item` because it is borrowed\n  --&gt; /home/xxx/.emacs.d/rust-playground/at-2017-07-29-204629/snippet.rs:64:21\n   |\n61 |                                    ref for_type) = item.node {\n   |                                                    ---- borrow of `item` occurs here\n...\n64 |             item2 = item.unwrap();\n</code></pre>\n\n<p>I do not understand two things:</p>\n\n<ol>\n<li><p>Why does it complain about the borrow in the <code>if</code> branch while we in <code>else</code> branch? They are supposed to be mutually exclusive, and a borrow in one should not influence another.</p></li>\n<li><p>If I replace <code>Vec</code> in <code>let mut items = Vec::&lt;P&lt;Item&gt;&gt;::new();</code> with <code>Vec&lt;Box&lt;Item&gt;&gt;</code> and uncomment line <code>AAA</code> and comment line <code>BBB</code>, then it compiles. Both <code>Box</code> and <code>P</code> implement <code>Deref</code>, so the <code>item.node</code> expression should be the same.</p></li>\n</ol>\n"}, {"tags": ["multithreading", "struct", "rust", "traits", "unsafe"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1501349082, "post_id": 45391874, "comment_id": 77744746, "body": "Please attempt to provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, ideally as a link to the playground. It is much easier to test the correctness of a solution when one does not have to <i>guess</i> at what is omitted."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1501349417, "post_id": 45391874, "comment_id": 77744855, "body": "(Example of MCVE: <a href=\"https://play.rust-lang.org/?gist=bcfd5e96cfcd390de67bc738bd821108&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>)"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1501349591, "post_id": 45391874, "comment_id": 77744910, "body": "No, your code isn&#39;t completely safe even with a single thread. It is UB to cast an &amp;T to a &amp;mut T. You should use UnsafeCell for this, which should also fix your Sync issue."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1501349927, "post_id": 45391874, "comment_id": 77745010, "body": "@BurntSushi5 you might want to chime in on <a href=\"https://codereview.stackexchange.com/questions/171420/unsafe-collection-which-allows-immutable-access-while-also-allowing-push\" title=\"unsafe collection which allows immutable access while also allowing push\">codereview.stackexchange.com/questions/171420/&hellip;</a> then :-)"}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1501349970, "last_edit_date": 1501349970, "creation_date": 1501349656, "answer_id": 45392130, "question_id": 45391874, "link": "https://stackoverflow.com/questions/45391874/how-to-prevent-autoimplementation-of-sync/45392130#45392130", "title": "How to prevent autoimplementation of Sync", "body": "<p>Interior mutability in Rust <strong>requires</strong><sup>1</sup> the use of <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\"><code>UnsafeCell</code></a> as a hint to the compiler that the normal rules <strong>do not apply</strong>.</p>\n\n<p>Your structure should therefore look such:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Foo&lt;T&gt; {\n    items: UnsafeCell&lt;Vec&lt;Box&lt;(T, String)&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>And then, the implementation of <code>add_element</code> is adjusted to:</p>\n\n<pre><code>impl&lt;T&gt; Foo&lt;T&gt; {\n    pub fn add_element(&amp;self, element: T, key: String) {\n        if !(self.items.iter().any( |i| i.1 == key)) {\n            let mut items = unsafe { &amp;mut *self.items.get() };\n            //                       ^~~~~~~~~~~~~~~~~~~~~~\n            items.push(Box::new((element,key)));\n        }\n    }\n}\n</code></pre>\n\n<p>The use of <code>UnsafeCell</code> makes <code>change_mut</code> completely unnecessary: it is the purpose of <code>UnsafeCell</code>, after all, to allow interior mutability. Note how its <code>get</code> method returns a raw pointer, which cannot be dereferenced without an <code>unsafe</code> block.</p>\n\n<hr>\n\n<p>Since <code>UnsafeCell</code> does not implement <code>Sync</code>, <code>Foo&lt;T&gt;</code> will not implement <code>Sync</code> either, and therefore it becomes unnecessary to use negative implementations or any marker.</p>\n\n<hr>\n\n<p><sup>1</sup> <em>If you do not use it directly, chances are the abstractions you do use are built on it. It is as special as it could be: it is a lang item, as denoted by its attribute <code>#[lang = \"unsafe_cell\"]</code>.</em></p>\n"}], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 500, "favorite_count": 0, "accepted_answer_id": 45392130, "answer_count": 1, "score": 3, "last_activity_date": 1501360870, "creation_date": 1501347965, "last_edit_date": 1501360870, "question_id": 45391874, "link": "https://stackoverflow.com/questions/45391874/how-to-prevent-autoimplementation-of-sync", "title": "How to prevent autoimplementation of Sync", "body": "<p>I have a struct containing unsafe code with the following method:</p>\n\n<pre><code>use std::sync::Arc;\nuse std::thread;\n\n#[derive(Debug)]\nstruct Foo&lt;T&gt; {\n    items: Vec&lt;Box&lt;(T, String)&gt;&gt;,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    pub fn add_element(&amp;self, element: T, key: String) {\n        if !(self.items.iter().any( |i| i.1 == key)) {\n            let mut items = unsafe {change_mut(&amp;(self.items))};\n            items.push(Box::new((element,key)));\n        }\n    }\n}\n\nunsafe fn change_mut&lt;T&gt;(x: &amp;T) -&gt; &amp;mut T { // changes &amp;self to &amp;mut self\n    &amp;mut *(x as *const T as *mut T)\n}\n\nfn main() {\n    let foo = Arc::new(Foo { items: vec!() });\n    let clone = foo.clone();\n\n    // This should not be possible, as it might lead to UB\n    thread::spawn(move || clone.add_element(1, String::from(\"one\")));\n\n    println!(\"{:?}\", *foo);\n\n}\n</code></pre>\n\n<p>This struct is completely safe until someone starts using this method while multithreading. However, due to the fact the struct only contains a <code>Vec&lt;Box&lt;T,String&gt;&gt;</code>, <code>Sync</code>is implemented by default, which I would like to prevent.</p>\n\n<p>I have found two ways to do this, both of which are not that great...</p>\n\n<ol>\n<li><p>Add a struct field which does not implement <code>Sync</code> for example <code>*const u8</code>, this is obviously rather bad, as it ends up resulting in unnecessary and unclear code and does not clearly show my intent.</p></li>\n<li><p><code>impl !Sync for Struct {}</code> is not available on stable and will be removed according to <a href=\"https://github.com/rust-lang/rust/issues/13231\" rel=\"nofollow noreferrer\">this issue</a>.\nThe corresponding error is telling me to use marker types instead, but <a href=\"https://doc.rust-lang.org/std/marker/trait.Sync.html\" rel=\"nofollow noreferrer\">the documention</a> does not present a way to solve my problem either.</p></li>\n</ol>\n\n<hr>\n\n<pre><code>error: negative trait bounds are not yet fully implemented; use marker types for\n now (see issue #13231)\n  --&gt; src\\holder.rs:44:1\n   |\n44 | impl !Sync for Struct {}\n   | ^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["time", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501341746, "post_id": 45386585, "comment_id": 77742375, "body": "See also <a href=\"https://stackoverflow.com/q/38957718/155423\">Format std::time output</a>"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 21, "last_activity_date": 1501423180, "last_edit_date": 1501423180, "creation_date": 1501323595, "answer_id": 45388083, "question_id": 45386585, "link": "https://stackoverflow.com/questions/45386585/how-to-format-systemtime-to-string/45388083#45388083", "title": "How to format SystemTime to string?", "body": "<p>You should use Chrono for its formatting support. Since Chrono v0.4.0 this is much easier, as it now implements direct conversions from <code>std::time::SystemTime</code>:</p>\n\n<pre><code>extern crate chrono;\nuse chrono::offset::Utc;\nuse chrono::DateTime;\nuse std::time::SystemTime;\n\nlet system_time = SystemTime::now();\nlet datetime: DateTime&lt;Utc&gt; = system_time.into();\nprintln!(\"{}\", datetime.format(\"%d/%m/%Y %T\"));\n</code></pre>\n\n<p>If you wanted the time in local timezone instead of UTC, use <a href=\"https://docs.rs/chrono/0.4.0/chrono/offset/struct.Local.html\" rel=\"noreferrer\"><code>Local</code></a> instead of <code>Utc</code>.</p>\n\n<p>For the full list of formatting specifiers see the <a href=\"https://docs.rs/chrono/0.4.0/chrono/format/strftime/index.html\" rel=\"noreferrer\">Chrono documentation</a>.</p>\n"}], "owner": {"reputation": 403, "user_id": 4013671, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/kfsxP.png?s=128&g=1", "display_name": "PENGUINLIONG", "link": "https://stackoverflow.com/users/4013671/penguinliong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5476, "favorite_count": 0, "accepted_answer_id": 45388083, "answer_count": 1, "score": 14, "last_activity_date": 1501423180, "creation_date": 1501312981, "last_edit_date": 1501324724, "question_id": 45386585, "link": "https://stackoverflow.com/questions/45386585/how-to-format-systemtime-to-string", "title": "How to format SystemTime to string?", "body": "<p>It seems there is no way I can turn <code>SystemTime</code> into a string. I have to use <code>SystemTime</code> because I need the value returned from <code>std::fs::Metadata::created()</code>.</p>\n"}, {"tags": ["hashmap", "rust", "hashset"], "comments": [{"owner": {"reputation": 42504, "user_id": 1161878, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/0157ddd785dc01e95342e3661d34b42a?s=128&d=identicon&r=PG", "display_name": "Gene", "link": "https://stackoverflow.com/users/1161878/gene"}, "edited": false, "score": 0, "creation_date": 1501300290, "post_id": 45384928, "comment_id": 77731226, "body": "I don&#39;t know Rust very well. In reference-based languages (like Java) when this problem comes up, you&#39;d use a boxed key (which you get whether you like it or not in Java) with a reference to it in the HashMap entry key field and another inside the corresponding value object. In a language like C or Ada that allows references/pointers to unboxed types, you can store the value in either place and a reference to it in the other. Afaik Rust collections allow the first solution for sure and maybe the second as well."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501321509, "post_id": 45384928, "comment_id": 77736235, "body": "maybe use an enum {Key(u32), KeyAndData(u32,u32)} and implement hash/eq so you can query by key and get keyanddata? That way you won&#39;t have to construct the tail of your <code>Foo</code>. Anyway, you didn&#39;t say why you actually need this, since your toy example already works without modification."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 42504, "user_id": 1161878, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/0157ddd785dc01e95342e3661d34b42a?s=128&d=identicon&r=PG", "display_name": "Gene", "link": "https://stackoverflow.com/users/1161878/gene"}, "edited": false, "score": 0, "creation_date": 1501343141, "post_id": 45384928, "comment_id": 77742806, "body": "@Gene Your first point works (see <a href=\"https://stackoverflow.com/a/32403439/155423\">How can I keep a reference to a key after it has been inserted into a HashMap?</a>), but you can&#39;t have a reference to the key because that solution is not memory-safe (and Rust will tell you so) \u2014 the address of the key can change as things are added/removed, so you&#39;d have a dangling pointer. Rust is actually not smart enough to tell that the boxed case is fine, either. See <a href=\"https://stackoverflow.com/q/43695527/155423\">What&#39;s the idiomatic way to make a lookup table which uses field of the item as the key?</a> for more."}, {"owner": {"reputation": 42504, "user_id": 1161878, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/0157ddd785dc01e95342e3661d34b42a?s=128&d=identicon&r=PG", "display_name": "Gene", "link": "https://stackoverflow.com/users/1161878/gene"}, "edited": false, "score": 0, "creation_date": 1501344656, "post_id": 45384928, "comment_id": 77743272, "body": "Thanks. I appreciate your response. I&#39;ve only read through the docs of Rust, but it seems to have many ideas I&#39;ve wished for in a language for a long time."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1501342808, "last_edit_date": 1501342808, "creation_date": 1501342429, "answer_id": 45390990, "question_id": 45384928, "link": "https://stackoverflow.com/questions/45384928/is-there-any-way-to-look-up-in-hashset-by-only-the-value-the-type-is-hashed-on/45390990#45390990", "title": "Is there any way to look up in HashSet by only the value the type is hashed on?", "body": "<p>When you check out the signature for <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html#method.get\" rel=\"noreferrer\"><code>HashSet::get</code></a>, you'll note that it's slightly more complicated than you might expect:</p>\n\n<pre><code>fn get&lt;Q: ?Sized&gt;(&amp;self, value: &amp;Q) -&gt; Option&lt;&amp;T&gt; \nwhere\n    T: Borrow&lt;Q&gt;,\n    Q: Hash + Eq, \n</code></pre>\n\n<p>This is done <em>precisely to solve your problem</em>. <code>get</code> accepts a reference to any type (<code>&amp;Q</code>) that can be borrowed from the type in the set (<code>T: Borrow&lt;Q&gt;</code>). <code>T</code> should be read as \"my type\" and <code>Q</code> should be read as \"the query type\".</p>\n\n<p>Thus, you need to implement <a href=\"https://doc.rust-lang.org/std/borrow/trait.Borrow.html\" rel=\"noreferrer\"><code>Borrow</code></a> for your type:</p>\n\n<pre><code>use std::borrow::Borrow;\nuse std::collections::HashSet;\nuse std::hash::{Hash, Hasher};\n\ntype Id = u32;\n\n#[derive(Debug, Eq)]\nstruct Foo {\n    id: Id,\n    other_data: u32,\n}\n\nimpl PartialEq for Foo {\n    fn eq(&amp;self, other: &amp;Foo) -&gt; bool {\n        self.id == other.id\n    }\n}\n\nimpl Hash for Foo {\n    fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n        self.id.hash(state);\n    }\n}\n\nimpl Borrow&lt;Id&gt; for Foo {\n    fn borrow(&amp;self) -&gt; &amp;Id {\n        &amp;self.id\n    }\n}\n\nfn main() {\n    let mut baz = HashSet::new();\n    baz.insert(Foo {\n        id: 1,\n        other_data: 2,\n    });\n\n    let other_data = baz.get(&amp;1).unwrap().other_data;\n    println!(\"other_data: {}\", other_data);\n}\n</code></pre>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/43695527/whats-the-idiomatic-way-to-make-a-lookup-table-which-uses-field-of-the-item-as\">What&#39;s the idiomatic way to make a lookup table which uses field of the item as the key?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/32401857/how-can-i-keep-a-reference-to-a-key-after-it-has-been-inserted-into-a-hashmap\">How can I keep a reference to a key after it has been inserted into a HashMap?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/36480845/how-to-avoid-temporary-allocations-when-using-complex-key-for-hashmap\">How to avoid temporary allocations when using complex key for HashMap?</a></li>\n</ul>\n"}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1140, "favorite_count": 1, "accepted_answer_id": 45390990, "answer_count": 1, "score": 3, "last_activity_date": 1501342808, "creation_date": 1501298827, "last_edit_date": 1501342723, "question_id": 45384928, "link": "https://stackoverflow.com/questions/45384928/is-there-any-way-to-look-up-in-hashset-by-only-the-value-the-type-is-hashed-on", "title": "Is there any way to look up in HashSet by only the value the type is hashed on?", "body": "<p>I have a struct that has, among other data, a unique <code>id</code>:</p>\n\n<pre><code>struct Foo {\n    id: u32,\n    other_data: u32,\n}\n</code></pre>\n\n<p>I want to use the <code>id</code> as the key and keep it inside of the struct:</p>\n\n<pre><code>use std::collections::HashSet;\nuse std::hash::{Hash, Hasher};\nimpl PartialEq for Foo {\n    fn eq(&amp;self, other: &amp;Foo) -&gt; bool {\n        self.id == other.id\n    }\n}\nimpl Eq for Foo {}\nimpl Hash for Foo {\n    fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n        self.id.hash(state);\n    }\n}\n</code></pre>\n\n<p>This works:</p>\n\n<pre><code>pub fn bar() {\n    let mut baz: HashSet&lt;Foo&gt; = HashSet::new();\n    baz.insert(Foo {\n        id: 1,\n        other_data: 2,\n    });\n    let other_data = baz.get(&amp;Foo {\n        id: 1,\n        other_data: 0,\n    }).unwrap()\n        .other_data;\n    println!(\"other_data: {}\", other_data);\n}\n</code></pre>\n\n<p>Is there any way to write <code>baz.get(1).unwrap().other_data;</code> instead of <code>baz.get(&amp;Foo { id: 1, other_data: 0 }).unwrap().other_data;</code>?</p>\n\n<p>An alternative might be a <code>HashMap</code> where the key is contained inside the <code>struct</code>. However, I can't have the <code>id</code> inside the struct and a duplicate <code>id</code> used for the <code>key</code>.</p>\n"}, {"tags": ["rust", "iron"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1501341881, "post_id": 45384452, "comment_id": 77742424, "body": "The code presented is not even syntactically valid \u2014 the function <code>after</code> is missing the definition."}, {"owner": {"reputation": 742, "user_id": 1006006, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/c7e18db000f12082ea6b1a68ae678701?s=128&d=identicon&r=PG", "display_name": "Vishal Kumar", "link": "https://stackoverflow.com/users/1006006/vishal-kumar"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501342255, "post_id": 45384452, "comment_id": 77742524, "body": "@Shepmaster that is correct. Corrected it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1501343640, "post_id": 45384452, "comment_id": 77742941, "body": "Attempting to compile this code in a clean cargo project, adding all the crates specified by <code>extern crate</code> (e.g. none), produces <b>25 compilation errors</b>. Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. For example, you state &quot;parsing or json to MyStruct&quot; but <i>never define what <code>MyStruct</code> is</i>."}, {"owner": {"reputation": 742, "user_id": 1006006, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/c7e18db000f12082ea6b1a68ae678701?s=128&d=identicon&r=PG", "display_name": "Vishal Kumar", "link": "https://stackoverflow.com/users/1006006/vishal-kumar"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501345088, "post_id": 45384452, "comment_id": 77743423, "body": "@Shepmaster i can take down this question if not following forum norm. Intent here is to see if someone else has faced this issue when running with lots of concurrent request (not simply ab or wrk tools) or one can see obvious bug."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1501345565, "post_id": 45384452, "comment_id": 77743568, "body": "<i>do not expect to build and run with examples as can not provide them because of privacy.</i> \u2014 We don&#39;t want your <i>real</i> code, we want the simplest possible piece of code that reproduces the same errors you are seeing. It is unlikely to have much in common with the original code that experienced the problem. You should have already created this in an attempt to debug your own problem. <i>or one can see obvious bug</i> \u2014 how can we see a bug in code that hasn&#39;t been provided?"}, {"owner": {"reputation": 742, "user_id": 1006006, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/c7e18db000f12082ea6b1a68ae678701?s=128&d=identicon&r=PG", "display_name": "Vishal Kumar", "link": "https://stackoverflow.com/users/1006006/vishal-kumar"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501347383, "post_id": 45384452, "comment_id": 77744179, "body": "@Shepmaster in process of debugging i did print payload in catch block. I also printed only bytes without converting to str. Both seems to result in correct data. Missing code is call to different service which further processes the request. But bug comes from code provided and I know because i did my debugging."}], "owner": {"reputation": 742, "user_id": 1006006, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/c7e18db000f12082ea6b1a68ae678701?s=128&d=identicon&r=PG", "display_name": "Vishal Kumar", "link": "https://stackoverflow.com/users/1006006/vishal-kumar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 113, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1501344794, "creation_date": 1501292674, "last_edit_date": 1501344794, "question_id": 45384452, "link": "https://stackoverflow.com/questions/45384452/rust-iron-web-framework-gives-some-phantom-error", "title": "Rust Iron Web Framework gives some phantom error", "body": "<p>I am using iron. Most of time like 99.* % all is good. But sometimes I get error like Error was: ErrorImpl { code: EofWhileParsingString/List/Object, line: 1, column: 8186 } or  InvalidUnicodeCodePoint. I am printing request in log and when i try that request every thing goes well. I also have server written in Golang receiving same request and they never have parsing or json to MyStruct conversion problem.<strong>Please note Code would not compile as it is, missing imports, error::from and structure definition. Can not provide reproducible request logs as it only happens when serving lots on concurrent request but if single request is taken it works fine.</strong> \nI have tried serde_json::from_reader, bodyparser crate and all have same issue. </p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\nextern crate iron;\nuse self::iron;\nuse self::iron::prelude::*;\n\n#[derive(Debug, Serialize, Deserialize, Clone)]\npub struct MyStruct {\n\n}\nstruct ResponseTime;\nimpl typemap::Key for ResponseTime {\n    type Value = u64;\n}\n\n#[derive(Debug)]\nstruct RequestBody;\nimpl typemap::Key for RequestBody {\n    type Value = RefCell&lt;Vec&lt;u8&gt;&gt;;\n}\n\nimpl BeforeMiddleware for ResponseTime {\n    fn before(&amp;self, req: &amp;mut Request) -&gt; IronResult&lt;()&gt; {\n        req.extensions.insert::&lt;RequestBody&gt;(RefCell::new(Vec::new()));\n        req.extensions.insert::&lt;ResponseTime&gt;(precise_time_ns());\n        Ok(())\n    }\n}\n\nimpl AfterMiddleware for ResponseTime {\n    fn after(&amp;self, req: &amp;mut Request, res: Response) -&gt; IronResult&lt;Response&gt; {\n         Ok(res)\n    }\n    fn catch(&amp;self, req : &amp;mut Request, err : IronError) -&gt; IronResult&lt;Response&gt; {\n        let ref byte_req = *req.extensions.get::&lt;RequestBody&gt;()\n                        .unwrap()\n                        .borrow();\n        //just to make sure uft8 is not causing some issue. \n        let payload  = unsafe {\n            str::from_utf8_unchecked(&amp;byte_req)\n        };\n        //but when i send request body all comes good\n        error!(\"Error {} for Body {}\", err, payload);\n        Err(err)\n    }\n}\n\n\nfn iron_handler(req : &amp;mut Request) -&gt; Result&lt;Response, CustomError&gt;{\n    let mut buffer = req.extensions.get::&lt;server::RequestBody&gt;()\n                        .unwrap()\n                        .borrow_mut();\n    req.body.read_to_end(&amp;mut buffer)?;\n    // not seeing InvalidUnicodeCodePoint after this. \n    let payload = String::from_utf8_lossy(&amp;buffer);\n    //some request throw error\n    let my_struct_obj : MyStruct = serde_json::from_str(&amp;payload)?;\n    Ok(Response::with((iron::status::Ok, \"Final Response\")))\n}\n</code></pre>\n\n<p>Need help to figure out how to identify problem. <strong>Intent of posting here is to see if someone had same issue or can see obvious problem with this.</strong> Appreciate everyone'e time do not expect to build and run with examples as can not provide them because of privacy.</p>\n"}, {"tags": ["arrays", "vector", "rust"], "comments": [{"owner": {"reputation": 15204, "user_id": 453271, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/G7rcK.png?s=128&g=1", "display_name": "Andriy Tylychko", "link": "https://stackoverflow.com/users/453271/andriy-tylychko"}, "edited": false, "score": 2, "creation_date": 1501261456, "post_id": 45378744, "comment_id": 77719173, "body": "<code>vec![0; n].into_boxed_slice();</code>? <a href=\"https://www.reddit.com/r/rust/comments/3gp0tl/dynamic_fixed_sized_arrays/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/3gp0tl/dynamic_fixed_sized_arrays</a>"}, {"owner": {"reputation": 15204, "user_id": 453271, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/G7rcK.png?s=128&g=1", "display_name": "Andriy Tylychko", "link": "https://stackoverflow.com/users/453271/andriy-tylychko"}, "edited": false, "score": 0, "creation_date": 1501262709, "post_id": 45378744, "comment_id": 77719890, "body": "btw, if you don&#39;t want vector to grow, why not to not grow it? I suppose your users don&#39;t have access to it. also, there&#39;s a possibility you&#39;ll reconsider this later, I&#39;m really curious what that &quot;not ever growable&quot; vector inside a hashtable stores"}, {"owner": {"reputation": 157, "user_id": 885076, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/17b6fe710af81c5b70f35dcd7414b38d?s=128&d=identicon&r=PG", "display_name": "etk1220", "link": "https://stackoverflow.com/users/885076/etk1220"}, "reply_to_user": {"reputation": 15204, "user_id": 453271, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/G7rcK.png?s=128&g=1", "display_name": "Andriy Tylychko", "link": "https://stackoverflow.com/users/453271/andriy-tylychko"}, "edited": false, "score": 0, "creation_date": 1501267377, "post_id": 45378744, "comment_id": 77722262, "body": "I could make my own protections, but I thought it would be nice to use a collection that met my requirements if it existed."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1501273525, "post_id": 45378744, "comment_id": 77725244, "body": "What do you call &quot;dynamically sized array&quot; in C++ by the way?"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501322663, "post_id": 45378744, "comment_id": 77736557, "body": "<a href=\"https://crates.io/keywords/array\" rel=\"nofollow noreferrer\">crates.io/keywords/array</a> offers several that appear to match your description, have you tried any?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1501486520, "post_id": 45378744, "comment_id": 77779930, "body": "@mcarton <code>auto array = new type[dimension]</code> for example"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1501489861, "post_id": 45378744, "comment_id": 77782064, "body": "@Boiethios that&#39;s not idiomatic C++. People have been using RAII for a long time now, and there are no standard RAII wrappers for such arrays that are aware of the array size."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1501490623, "post_id": 45378744, "comment_id": 77782575, "body": "@mcarton I agree, but that is yet C++. Obviously, OP wrote about that, RAII or not."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1501265954, "last_edit_date": 1501265954, "creation_date": 1501261443, "answer_id": 45378899, "question_id": 45378744, "link": "https://stackoverflow.com/questions/45378744/whats-the-best-choice-for-non-resizable-dynamic-length-arrays-in-rust/45378899#45378899", "title": "What&#39;s the best choice for non-resizable dynamic length arrays in Rust?", "body": "<p>A <em>boxed slice</em> is dynamically sized, the length cannot be changed once created, and it owns the contained data:</p>\n\n<pre><code>let the_vec: Vec&lt;i32&gt; = vec![1, 2, 3];\nlet the_boxed_slice: Box&lt;[i32]&gt; = the_vec.into_boxed_slice();\n</code></pre>\n\n<p>The types aren't required here, they are just present for pedagogical reasons.</p>\n\n<hr>\n\n<p>However, it's dubious whether you will get any <em>performance</em> benefit. A <code>Vec</code> is three pointer sized values (data, size, capacity). A <code>Box&lt;[T]&gt;</code> is only two: data and size. The overhead of having the extra value is minuscule in most cases.</p>\n\n<p>The main benefit is to be statically guaranteed that the size won't <em>change</em>; you won't statically know that it's a certain size. Such a guarantee <em>might</em> happen if <a href=\"https://stackoverflow.com/q/28136739/155423\">type-level numbers</a> ever happen.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/33704592/155423\">Performance comparison of a Vec and a boxed slice</a></li>\n</ul>\n"}], "owner": {"reputation": 157, "user_id": 885076, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/17b6fe710af81c5b70f35dcd7414b38d?s=128&d=identicon&r=PG", "display_name": "etk1220", "link": "https://stackoverflow.com/users/885076/etk1220"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 948, "favorite_count": 0, "accepted_answer_id": 45378899, "answer_count": 1, "score": 3, "last_activity_date": 1501265954, "creation_date": 1501260837, "last_edit_date": 1501262610, "question_id": 45378744, "link": "https://stackoverflow.com/questions/45378744/whats-the-best-choice-for-non-resizable-dynamic-length-arrays-in-rust", "title": "What&#39;s the best choice for non-resizable dynamic length arrays in Rust?", "body": "<p>I'm re-implementing a hashtable in Rust.  Eventually I'd like to make this distributed and have quorums, but for now it's a hashtable on a single system.  </p>\n\n<p>I want the size of the table to be passed in as an argument so the table should be dynamically sized.  I don't want the table to grow because that will mess with my hash function which works off a modulo operation.  I see a couple of options:</p>\n\n<ol>\n<li>Arrays - cannot be dynamically sized</li>\n<li>Vectors - can grow</li>\n<li>Slices - can be dynamically sized &amp; can't grow, but are just views onto <code>Vec</code>s and arrays, so I'll need a <code>Vec</code>/array anyways?</li>\n</ol>\n\n<p>In C++, I could have just used a dynamically sized array.  What's the best choice here?</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 2, "last_activity_date": 1501247830, "last_edit_date": 1501247830, "creation_date": 1501245770, "answer_id": 45373861, "question_id": 45373573, "link": "https://stackoverflow.com/questions/45373573/why-do-i-get-expected-type-when-trying-to-obtain-a-reference-to-a-boxed-val/45373861#45373861", "title": "Why do I get expected type `()` when trying to obtain a reference to a boxed value?", "body": "<p>You are getting the error because the <code>if</code> block is an expression; you need to follow it with an <code>else</code> so that the output of the function is correct (<code>Option&lt;&amp;Self&gt;</code>).</p>\n\n<p>In addition, you can utilize <code>if let</code> to obtain the inner value of an <code>Option</code>; then it is easy to get the reference out of the <code>Box</code>:</p>\n\n<pre><code>impl&lt;T&gt; Node&lt;T&gt; {\n    pub fn getLeft(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n        if let Some(ref left) = self.left { // if let\n            Some(&amp;*left) // return a reference to the content of the Box (in an Option)\n        } else {\n            None // or return None if self.left is None\n        }\n    }\n}\n</code></pre>\n\n<p>Example use:</p>\n\n<pre><code>fn main() {\n    let test0 = Node {\n        value: 0,\n        left: None,\n        right: None\n    };\n\n    let test1 = Node {\n        value: 0,\n        left: Some(Box::new(test0)),\n        right: None\n    };\n\n    println!(\"{:?}\", test1.getLeft()); // Some(Node { value: 0, left: None, right: None })\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1501248470, "last_edit_date": 1501248470, "creation_date": 1501246022, "answer_id": 45373950, "question_id": 45373573, "link": "https://stackoverflow.com/questions/45373573/why-do-i-get-expected-type-when-trying-to-obtain-a-reference-to-a-boxed-val/45373950#45373950", "title": "Why do I get expected type `()` when trying to obtain a reference to a boxed value?", "body": "<p>The problem here isn't the borrow-checker.  If you have an <code>if</code> without an <code>else</code>, you <em>must</em> return unit (<em>i.e.</em> <code>()</code>).  You're trying to return a value from the function, which means you need to either have an <code>else</code> branch, or use <code>return</code>.  To wit:</p>\n\n<pre><code>impl&lt;T&gt; Node&lt;T&gt; {\n    pub fn getLeft(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n        if self.left.is_some() {\n            Some(&amp;(*(self.left.unwrap())))\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>Ok, <em>now</em> the borrow-checker is a problem.  This is because you're taking a reference to a temporary (the result of <code>self.left.unwrap()</code>).  You need to access the contents of the <code>Option</code> <em>without</em> moving it.  So let's do that:</p>\n\n<pre><code>impl&lt;T&gt; Node&lt;T&gt; {\n    pub fn getLeft(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n        if self.left.is_some() {\n            Some(&amp;(*(self.left.as_ref().unwrap())))\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>That's better, but it's just ugly.  There's the <code>unwrap</code>, plus the redundant parentheses, the name is non-idiomatic, and finally the whole branch itself is unnecessary.  Let's fix all of those:</p>\n\n<pre><code>impl&lt;T&gt; Node&lt;T&gt; {\n    pub fn get_left(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n        self.left.as_ref().map(|l| &amp;**l)\n    }\n}\n</code></pre>\n\n<p>Or, if you want something slightly clearer:</p>\n\n<pre><code>impl&lt;T&gt; Node&lt;T&gt; {\n    pub fn get_left(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n        if let Some(left) = self.left.as_ref() {\n            Some(&amp;**left)\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 862, "user_id": 1417883, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/56fe3a87ac4d39ab9b7a15f92b5fd7dc?s=128&d=identicon&r=PG", "display_name": "barsan-md", "link": "https://stackoverflow.com/users/1417883/barsan-md"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1429, "favorite_count": 0, "accepted_answer_id": 45373950, "answer_count": 2, "score": 0, "last_activity_date": 1501248470, "creation_date": 1501244922, "last_edit_date": 1501248433, "question_id": 45373573, "link": "https://stackoverflow.com/questions/45373573/why-do-i-get-expected-type-when-trying-to-obtain-a-reference-to-a-boxed-val", "title": "Why do I get expected type `()` when trying to obtain a reference to a boxed value?", "body": "<p>I have this struct:</p>\n\n<pre><code>pub struct Node&lt;T&gt; {\n    value: T,\n    left: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n    right: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; Node&lt;T&gt; {\n    pub fn getLeft(&amp;self) -&gt; Option&lt;&amp;Self&gt; {\n        if self.left.is_some() {\n            Some(&amp;(*(self.left.unwrap())))\n            // Some(self.left.unwrap()) &lt;= same result\n        }\n        None\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>There seems to be a type mismatch as I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:10:13\n   |\n10 |             Some(&amp;(*(self.left.unwrap())))\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `std::option::Option`\n   |\n   = note: expected type `()`\n              found type `std::option::Option&lt;&amp;Node&lt;T&gt;&gt;`\n</code></pre>\n\n<p>I'm new to Rust and don't understand why the expected type is <code>()</code> while it should be <code>Option&lt;&amp;Self&gt;</code> and how can I return a reference to the node inside the box (how can I move out of borrowed self)?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1501250842, "last_edit_date": 1501250842, "creation_date": 1501238311, "answer_id": 45371311, "question_id": 45371062, "link": "https://stackoverflow.com/questions/45371062/is-it-possible-to-mark-a-potentially-uninitialized-variable-as-good-without-usin/45371311#45371311", "title": "Is it possible to mark a potentially uninitialized variable as good without using unsafe or panicking?", "body": "<p>In safe Rust, you cannot. In your code, <code>v</code> is only guaranteed to be initialized under the conditional branch <code>e == Enum::V1 || e == Enum::V2</code>, and yet <code>v</code> was declared in a wider scope. Note that this is not a limitation, but a hint from the compiler that the design of the program should be reconsidered.</p>\n\n<p>In this case, I would delegate the calculation of <code>v</code> to a function and only have <code>v</code> in the necessary case blocks.</p>\n\n<pre><code>fn calculate_v(e: Enum) -&gt; i32 { ... }\n\nlet e = Enum::V1;\n\nmatch e {\n    Enum::V1 =&gt; {\n        let v = calculate_v(e);\n        // use v\n        println!(\"Results: {}\", v);//1\n    }\n    Enum::V2 =&gt; {\n        let v = calculate_v(e);\n        println!(\"Results: {}\", v);//1\n    }\n    _ =&gt; {}\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1501261251, "post_id": 45371363, "comment_id": 77719061, "body": "It seems that this answer doesn&#39;t really address the underlying problem. Putting the value <code>v</code> in the enum still requires that <code>v</code> be computed at <i>some</i> point, but doesn&#39;t show how to only compute it for the two required cases. This answer would make more sense <i>after</i> the <a href=\"https://stackoverflow.com/a/45371311/155423\">other answer</a> has been used. <a href=\"https://play.integer32.com/?gist=9df5e679dc814d8eefb94e840c7694b3&amp;version=stable\" rel=\"nofollow noreferrer\">Two enums: one like the OP and used in the other answer, and one like this answer&#39;s</a>."}], "tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 5, "last_activity_date": 1501260836, "last_edit_date": 1501260836, "creation_date": 1501238461, "answer_id": 45371363, "question_id": 45371062, "link": "https://stackoverflow.com/questions/45371062/is-it-possible-to-mark-a-potentially-uninitialized-variable-as-good-without-usin/45371363#45371363", "title": "Is it possible to mark a potentially uninitialized variable as good without using unsafe or panicking?", "body": "<p>The simple method is to initialize <code>v</code>; it's a single word and the compiler can probably optimize it away if it is unnecessary. In this particular case, you could even move both the declaration and initialization into the inner scope of the match, because it isn't used anywhere else. </p>\n\n<p>The cleaner thing to do is to make the invalid case unrepresentable. Here <code>v</code> only really exists in the cases <code>V1</code> or <code>V2</code>, so if we join the two we don't have a name for a possibly uninitialized value. </p>\n\n<pre><code>#[derive(PartialEq, Debug)]\nenum Enum {\n    V1 { v: i32 },\n    V2 { v: i32 },\n    V3\n}\n\nfn main() {\n    let mut e = Enum::V1 { v: 17 };\n\n    match e {\n        Enum::V1 {v} | Enum::V2 {v} =&gt; {\n            println!(\"Results: {}\", v);//1\n        }\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p>This is how types like <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow noreferrer\"><code>Result</code></a> and <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a> function. </p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2596, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1501260836, "creation_date": 1501237591, "last_edit_date": 1501248707, "question_id": 45371062, "link": "https://stackoverflow.com/questions/45371062/is-it-possible-to-mark-a-potentially-uninitialized-variable-as-good-without-usin", "title": "Is it possible to mark a potentially uninitialized variable as good without using unsafe or panicking?", "body": "<p>Is it possible to explain to the compiler that the <code>v</code> variable is good at the line marked as <code>1</code> without using unsafe or code that may call <code>panic!</code>?  </p>\n\n<pre><code>#[derive(PartialEq, Debug)]\nenum Enum {\n    V1,\n    V2,\n    V3,\n}\n\nfn main() {\n    let e = Enum::V1;\n\n    let mut v: i32;\n\n    if e == Enum::V1 || e == Enum::V2 {\n        v = 17; //some complex, costy expression\n    }\n    match e {\n        Enum::V1 | Enum::V2 =&gt; {\n            println!(\"Results: {}\", v); //1\n        }\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p>The compiler reports:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0381]: use of possibly uninitialized variable: `v`\n  --&gt; src/main.rs:18:37\n   |\n18 |             println!(\"Results: {}\", v); //1\n   |                                     ^ use of possibly uninitialized `v`\n</code></pre>\n\n<p>I have a complex expression to initialize <code>v</code> in my real code instead of <code>17</code>, the type of <code>v</code> does not implement <code>Default</code>, and I only need <code>v</code> for the <code>Enum::V1</code> and <code>Enum::V2</code> cases.</p>\n\n<p>In the real code I have separate branches for <code>Enum::V1</code> and <code>Enum::V2</code>, and I can move <code>v</code> initialization there.</p>\n\n<p>I want to make my code more clear and I don't want to use potentially bad things like <code>unsafe</code> or <code>Option::unwrap</code></p>\n"}, {"tags": ["c++", "rust", "destructor", "move-semantics", "lifetime"], "comments": [{"owner": {"reputation": 46073, "user_id": 3002139, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tYIVC.png?s=128&g=1", "display_name": "Baum mit Augen", "link": "https://stackoverflow.com/users/3002139/baum-mit-augen"}, "edited": false, "score": 5, "creation_date": 1501195991, "post_id": 45362132, "comment_id": 77685703, "body": "I don&#39;t understand why you would need something like this in C++. What is your usecase for this?"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1501196091, "post_id": 45362132, "comment_id": 77685730, "body": "There\u2019s nothing you can call to make a given variable invalid to use after that call as far as I know. Is it possible for you to just use blocks instead? <code>{ T x; } &#47;* x is out of scope *&#47;</code>"}, {"owner": {"reputation": 38726, "user_id": 301883, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/937b36681a56def2b41c438a00e12b46?s=128&d=identicon&r=PG", "display_name": "Edward Strange", "link": "https://stackoverflow.com/users/301883/edward-strange"}, "edited": false, "score": 2, "creation_date": 1501196123, "post_id": 45362132, "comment_id": 77685743, "body": "When learning a new language sometimes you have to use different idioms.  I can&#39;t see a case where <code>drop</code> would be anything like idiomatic C++.  I honestly cannot think of a single reason why you&#39;d want it."}, {"owner": {"reputation": 56117, "user_id": 845092, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/50ccdbac5f0f9ff683e4b30a248189bf?s=128&d=identicon&r=PG", "display_name": "Mooing Duck", "link": "https://stackoverflow.com/users/845092/mooing-duck"}, "edited": false, "score": 1, "creation_date": 1501196681, "post_id": 45362132, "comment_id": 77685916, "body": "I think the idomatic C++ way to handle this is to return from the function. If you can&#39;t return from the function, your functions are doing too much."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 38726, "user_id": 301883, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/937b36681a56def2b41c438a00e12b46?s=128&d=identicon&r=PG", "display_name": "Edward Strange", "link": "https://stackoverflow.com/users/301883/edward-strange"}, "edited": false, "score": 3, "creation_date": 1501197241, "post_id": 45362132, "comment_id": 77686082, "body": "@CrazyEddie you&#39;ve never wanted to run a destructor before the end of the scope?"}, {"owner": {"reputation": 38726, "user_id": 301883, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/937b36681a56def2b41c438a00e12b46?s=128&d=identicon&r=PG", "display_name": "Edward Strange", "link": "https://stackoverflow.com/users/301883/edward-strange"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501274733, "post_id": 45362132, "comment_id": 77725691, "body": "@Shepmaster - No.  I&#39;ve not."}], "answers": [{"comments": [{"owner": {"reputation": 46073, "user_id": 3002139, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tYIVC.png?s=128&g=1", "display_name": "Baum mit Augen", "link": "https://stackoverflow.com/users/3002139/baum-mit-augen"}, "edited": false, "score": 2, "creation_date": 1501196535, "post_id": 45362329, "comment_id": 77685864, "body": "<code>&#47;&#47;`var` has been destroyed.</code> Not really, you can still assign to it for example. Also, I still don&#39;t what this is supposed to accomplish."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501196537, "post_id": 45362329, "comment_id": 77685865, "body": "Were one so inclined, could you make a function that has the same effect?"}, {"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "reply_to_user": {"reputation": 46073, "user_id": 3002139, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tYIVC.png?s=128&g=1", "display_name": "Baum mit Augen", "link": "https://stackoverflow.com/users/3002139/baum-mit-augen"}, "edited": false, "score": 2, "creation_date": 1501196587, "post_id": 45362329, "comment_id": 77685880, "body": "@BaummitAugen: It accomplishes the destruction of whatever <code>var</code> managed. If it was a file, the file is closed. If it was a shared pointer, the reference count has decreased."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 46073, "user_id": 3002139, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tYIVC.png?s=128&g=1", "display_name": "Baum mit Augen", "link": "https://stackoverflow.com/users/3002139/baum-mit-augen"}, "edited": false, "score": 2, "creation_date": 1501196603, "post_id": 45362329, "comment_id": 77685888, "body": "@BaummitAugen Nicol Bolas said this in the now-deleted sibling answer: <i>The point of the idea is that you have a stack variable that is still in scope, but you&#39;re finished using it and want the object cleaned up. Like an ifstream or something, where the destructor closes the file. You don&#39;t want to keep it open longer than needed, but it&#39;s silly to heap-allocate it just to be able to reset it.</i>"}, {"owner": {"reputation": 46073, "user_id": 3002139, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tYIVC.png?s=128&g=1", "display_name": "Baum mit Augen", "link": "https://stackoverflow.com/users/3002139/baum-mit-augen"}, "edited": false, "score": 1, "creation_date": 1501196663, "post_id": 45362329, "comment_id": 77685907, "body": "So why not just put the variable in the proper scope to begin with?"}, {"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501196679, "post_id": 45362329, "comment_id": 77685913, "body": "@Shepmaster: &quot;<i>Were one so inclined, could you make a function that has the same effect?</i>&quot; You could, but why? The name would have to be less than 11 characters in order to be shorter than this. <code>std::drop()</code> is 11 characters, so it wouldn&#39;t be any shorter. A function call would still need you to invoke <code>std::move()</code>, so those characters would have to remain."}, {"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "reply_to_user": {"reputation": 46073, "user_id": 3002139, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tYIVC.png?s=128&g=1", "display_name": "Baum mit Augen", "link": "https://stackoverflow.com/users/3002139/baum-mit-augen"}, "edited": false, "score": 0, "creation_date": 1501196738, "post_id": 45362329, "comment_id": 77685933, "body": "@BaummitAugen: Because maybe there&#39;s some other variable that you read into from the file, and that needs to be kept alive. You could refactor it into a function or something, or you could keep all of your code in a consistent place."}, {"owner": {"reputation": 46073, "user_id": 3002139, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tYIVC.png?s=128&g=1", "display_name": "Baum mit Augen", "link": "https://stackoverflow.com/users/3002139/baum-mit-augen"}, "edited": false, "score": 0, "creation_date": 1501196875, "post_id": 45362329, "comment_id": 77685971, "body": "Not terribly convinced about the actual usefulness of this yet, but it answers the question I guess. (If I understood that <code>drop</code> thing correctly that is.)"}, {"owner": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "edited": false, "score": 0, "creation_date": 1501197082, "post_id": 45362329, "comment_id": 77686033, "body": "@NicolBolas It does not accomplish the <code>destruction</code> of var though, it still needs to be in some defined state and in fact its <code>destructor</code> is never called. So for most resource management purposes, those will generally offer a more expressive alternative such as <a href=\"http://en.cppreference.com/w/cpp/memory/unique_ptr/reset\" rel=\"nofollow noreferrer\"><code>std::unique_ptr::reset</code></a> or similar."}, {"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "reply_to_user": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "edited": false, "score": 0, "creation_date": 1501197195, "post_id": 45362329, "comment_id": 77686070, "body": "@HeroicKatora: <code>reset</code> doesn&#39;t call the <code>unique_ptr</code>&#39;s destructor <i>either</i>. So I don&#39;t understand how that&#39;s an improvement. In both cases, the result of the construct is the destruction of the containing object. It&#39;s just that, in the case I outline, it works for every type that is move-constructible. Your way requires looking through the documentation for the right function (in <code>ifstream</code>, it&#39;s called <code>close</code>, not <code>reset</code>)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501197202, "post_id": 45362329, "comment_id": 77686072, "body": "@NicolBolas I guess to some level I was wondering if you can have &quot;default&quot; move semantics on a function&#39;s arguments. In your 11 characters, you aren&#39;t including the <code>{auto _</code> and <code>}</code>, right? Those aren&#39;t needed in Rust&#39;s <code>drop</code>. There&#39;s always the possibility of the preprocessor (or probably template voodoo, which I know not about) being used to reduce the boilerplate."}, {"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1501197256, "post_id": 45362329, "comment_id": 77686089, "body": "@Shepmaster: &quot;<i>I guess to some level I was wondering if you can have &quot;default&quot; move semantics on a function&#39;s arguments.</i>&quot; No, you cannot. The standard was explicitly defined to <i>prevent</i> that. The 11 characters in question are the <code>{auto _ = }</code> characters. A function call would look like <code>std::drop()</code>. Both forms need <code>std::move()</code>, and both forms need a semicolon."}, {"owner": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "edited": false, "score": 0, "creation_date": 1501197338, "post_id": 45362329, "comment_id": 77686103, "body": "@NicolBolas Exactly, it does not call the destructor but at least it is expressive about it in c++ terms and makes it clear that is in fact still a valid object. Whereas rusts <code>std::drop</code> is meant for a variable which you will not use after in the scope, since there are no borrows in C++, you simply can not express the same effect."}, {"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "reply_to_user": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "edited": false, "score": 0, "creation_date": 1501197431, "post_id": 45362329, "comment_id": 77686138, "body": "@HeroicKatora: I have no idea how what I did doesn&#39;t make it clear that <code>var</code> is still a valid object. I see a variable definition, initialized by a move from <code>var</code>. That clearly means <code>var</code> exists and is in the moved-from state. I don&#39;t know how it could possibly be clearer."}, {"owner": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "edited": false, "score": 1, "creation_date": 1501197668, "post_id": 45362329, "comment_id": 77686192, "body": "@NicolBolas My problem is that in Rust, the effect of <code>std::drop</code> is not merely a runtime one but also a compile time one as the compiler will explicitly error if you were to still use the variable. In C++ the same thing will not happen but by porting the idiom you give an illusion of having the same comfort. In my eyes, this is clearly misleading and likely to be misused, especially regarding that OP has a Rust background."}, {"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "reply_to_user": {"reputation": 858, "user_id": 3750062, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/097546a539804f0e62654904c546831a?s=128&d=identicon&r=PG&f=1", "display_name": "HeroicKatora", "link": "https://stackoverflow.com/users/3750062/heroickatora"}, "edited": false, "score": 0, "creation_date": 1501197828, "post_id": 45362329, "comment_id": 77686233, "body": "@HeroicKatora: I&#39;ve added a notation to that effect."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1501197939, "post_id": 45362329, "comment_id": 77686263, "body": "Why would both forms would need <code>std::move</code>? (referring to your response to Shepmaster) The <code>std::move</code> would be inside the implementation of <code>drop</code>. On the caller&#39;s side, it would just be <code>std::drop(var);</code>"}, {"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1501198065, "post_id": 45362329, "comment_id": 77686285, "body": "@BenjaminLindley: OK, if you want to move from a non-const lvalue reference, yes, you could do it that way. But it is generally considered bad form in C++ to move from a parameter in such a way."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1501198138, "post_id": 45362329, "comment_id": 77686300, "body": "I would think that the function&#39;s name would make it an exception to that rule."}], "tags": [], "owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "is_accepted": true, "score": 7, "last_activity_date": 1501197802, "last_edit_date": 1501197802, "creation_date": 1501196426, "answer_id": 45362329, "question_id": 45362132, "link": "https://stackoverflow.com/questions/45362132/is-there-a-c-equivalent-to-rusts-stdmemdrop-in-the-standard-library/45362329#45362329", "title": "Is there a C++ equivalent to Rust&#39;s `std::mem::drop` in the standard library?", "body": "<p>C++'s standard library has no such function. However, you can accomplish the same effect with this idiom:</p>\n\n<pre><code>SomeType var = ...;\n//do stuff with `var`.\n{auto _ = std::move(var);}\n//The contents of `var` have been destroyed.\n</code></pre>\n\n<p>As pointed out in the comments, C++ lacks Rust's ability to actually <em>prevent</em> you from further using <code>var</code>. Its contents have been moved from, but in C++ it is still a live, valid object, and you could even reuse it by properly transitioning it to a well-defined state.</p>\n\n<p>Of course, this requires that the type is move-constructible. Some types like <code>lock_guard</code> are not, so you're kinda hosed there. That means the only way to close it early is to use its built-in interface.</p>\n"}], "owner": {"reputation": 192, "user_id": 1078460, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2fc0afd46cdeee528399cdc09be1ef5d?s=128&d=identicon&r=PG", "display_name": "Friedrich", "link": "https://stackoverflow.com/users/1078460/friedrich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 494, "favorite_count": 1, "accepted_answer_id": 45362329, "answer_count": 1, "score": 8, "last_activity_date": 1501199793, "creation_date": 1501195130, "last_edit_date": 1501199793, "question_id": 45362132, "link": "https://stackoverflow.com/questions/45362132/is-there-a-c-equivalent-to-rusts-stdmemdrop-in-the-standard-library", "title": "Is there a C++ equivalent to Rust&#39;s `std::mem::drop` in the standard library?", "body": "<p>The function <a href=\"https://doc.rust-lang.org/std/mem/fn.drop.html\" rel=\"noreferrer\"><code>std::mem::drop</code></a> in Rust moves its argument and then destroys it by going out of scope. My attempt at writing a similar function in C++ looks like this:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>template &lt;typename T,\n          typename = std::enable_if_t&lt;std::is_rvalue_reference&lt;T &amp;&amp;&gt;::value&gt;&gt;\nvoid drop(T &amp;&amp;x) {\n    T(std::move(x));\n}\n</code></pre>\n\n<p>Does such a function already exist in the standard library?</p>\n\n<p><strong>Edit:</strong> The function can be used to invoke the destructor of an object before going out of scope. Consider a class that closes a file handle as soon as it is destroyed, but not earlier. For the sake of the argument, suppose <code>ofstream</code> did not have a <code>close</code> method. You can write:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>ofstream f(\"out\");\nf &lt;&lt; \"first\\n\";\ndrop(move(f));\n// f is closed now, and everything is flushed to disk\n</code></pre>\n"}, {"tags": ["c", "struct", "rust", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1501186615, "post_id": 45360245, "comment_id": 77681807, "body": "<i>Why</i> did you think it&#39;s appropriate to use <code>mem::transmute</code> here? Is there some resource that told you to do that?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501186791, "post_id": 45360245, "comment_id": 77681891, "body": "Have you already read <a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\">The Rust FFI Omnibus</a>?"}, {"owner": {"reputation": 123967, "user_id": 251153, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=128&d=identicon&r=PG", "display_name": "zneak", "link": "https://stackoverflow.com/users/251153/zneak"}, "edited": false, "score": 4, "creation_date": 1501186793, "post_id": 45360245, "comment_id": 77681892, "body": "Looks like you&#39;re returning a pointer from the Rust side and expecting a value from the C side. Your string might work by coincidence."}, {"owner": {"reputation": 2503, "user_id": 4737924, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06ff2f73692374431f3ddba82498dd9b?s=128&d=identicon&r=PG", "display_name": "Aleksander Wons", "link": "https://stackoverflow.com/users/4737924/aleksander-wons"}, "reply_to_user": {"reputation": 123967, "user_id": 251153, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=128&d=identicon&r=PG", "display_name": "zneak", "link": "https://stackoverflow.com/users/251153/zneak"}, "edited": false, "score": 0, "creation_date": 1501225428, "post_id": 45360245, "comment_id": 77694459, "body": "@zneak Rookies error :) Still don&#39;t know how I could have missed that. Thanks!"}, {"owner": {"reputation": 2503, "user_id": 4737924, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06ff2f73692374431f3ddba82498dd9b?s=128&d=identicon&r=PG", "display_name": "Aleksander Wons", "link": "https://stackoverflow.com/users/4737924/aleksander-wons"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501225536, "post_id": 45360245, "comment_id": 77694508, "body": "@Shepmaster the <code>mem::transmute</code> is from a blog somewhere. It described it as a way to pass a pointer to C and then be able to re-create the the struct and free memory later in Rust. I am going to go deeper into your blog for more details about FFI."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1501188123, "last_edit_date": 1501188123, "creation_date": 1501187436, "answer_id": 45360472, "question_id": 45360245, "link": "https://stackoverflow.com/questions/45360245/why-is-my-integer-value-changed-when-passing-a-heap-allocated-struct-from-rust-t/45360472#45360472", "title": "Why is my integer value changed when passing a heap-allocated struct from Rust to C?", "body": "<p>You have an issue because your ABI doesn't match. You are returning a pointer to an allocated structure but your C code claims the function returns a struct directly.</p>\n\n<p>As demonstrated in <a href=\"http://jakegoulding.com/rust-ffi-omnibus/objects/\" rel=\"noreferrer\"><em>The Rust FFI Omnibus</em> chapter on objects</a>, you should use <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.into_raw\" rel=\"noreferrer\"><code>Box::into_raw</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn get_my_struct() -&gt; *const MyStruct {\n    let my_struct = MyStruct {\n        x: 11 as c_int,\n        y: NAME.as_ptr(),\n    };\n\n    Box::into_raw(Box::new(my_struct))\n}\n</code></pre>\n\n<p>Your C function should be marked as returning a pointer:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>extern const my_struct *get_my_struct(void);\n\n// ...\n\nint main(void) {\n  const my_struct *my_complex_struct = get_my_struct();\n  // ...\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>(lldb) p *my_complex_struct\n(my_struct) $1 = (x = 11, y = \"ABC\")\n</code></pre>\n\n<p>The code also has a memory leak; you need to return the pointer back to Rust so it can be properly deallocated.</p>\n\n<hr>\n\n<p>If you meant to return the struct directly, change your Rust code to not perform an allocation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn get_my_struct() -&gt; MyStruct {\n    MyStruct {\n        x: 11 as c_int,\n        y: NAME.as_ptr(),\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>(lldb) p my_complex_struct\n(my_struct) $0 = (x = 11, y = \"ABC\")\n</code></pre>\n\n<hr>\n\n<p>Disclaimer: I'm the primary author of the <em>Omnibus</em>.</p>\n"}], "owner": {"reputation": 2503, "user_id": 4737924, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06ff2f73692374431f3ddba82498dd9b?s=128&d=identicon&r=PG", "display_name": "Aleksander Wons", "link": "https://stackoverflow.com/users/4737924/aleksander-wons"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 45360472, "answer_count": 1, "score": 3, "last_activity_date": 1501188123, "creation_date": 1501186465, "last_edit_date": 1501186684, "question_id": 45360245, "link": "https://stackoverflow.com/questions/45360245/why-is-my-integer-value-changed-when-passing-a-heap-allocated-struct-from-rust-t", "title": "Why is my integer value changed when passing a heap-allocated struct from Rust to C?", "body": "<p>I am passing data from Rust to C. While passing primitives seems to be easy, I am kind of lost with structs.</p>\n\n<p>I have the following Rust code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use ::std::os::raw::*;\n\nstatic NAME: &amp;[c_char] = &amp;[65, 66, 67, 0];\n\n#[repr(C)]\npub struct MyStruct {\n    pub x: c_int,\n    pub y: *const c_char,\n}\n\n#[no_mangle]\npub extern \"C\" fn get_my_struct() -&gt; *const MyStruct {\n    let my_struct = MyStruct {\n        x: 11 as c_int,\n        y: NAME.as_ptr(),\n    };\n\n    unsafe {\n        ::std::mem::transmute(Box::new(my_struct))\n    }\n}\n</code></pre>\n\n<p>And the following C code:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct _my_struct my_struct;\nextern const my_struct get_my_struct(void);\n\nstruct _my_struct {\n    int x;\n    const char *y;\n};\n\nint main(void) {\n  my_struct my_complex_struct = get_my_struct();\n\n  return 0;\n}\n</code></pre>\n\n<p>The output from gdb says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(gdb) p my_complex_struct\n$1 = {x = 6295568, y = 0x7ffff7bce1e0 &lt;ref&gt; \"ABC\"}\n</code></pre>\n\n<p>The string looks fine but the int is definitely off. What am I missing here? Why is the value of x 6295568 and not 11?</p>\n\n<p>Compiled by:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>gcc (Debian 4.9.2-10) 4.9.2\nrustc 1.20.0-nightly (8d22af87d 2017-07-22)\ncargo 0.21.0-nightly (ffab51954 2017-07-18)\n</code></pre>\n\n<p>using:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo build\ngcc --std=c11 -g -o main src/main.c /test/target/debug/libtest.so -L target/debug/\n</code></pre>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501185918, "post_id": 45359749, "comment_id": 77681502, "body": "Please re-check the linked duplicates and note the differences in the lifetimes: <code>fn into_iterator&lt;&#39;a&gt;(myvec: &amp;&#39;a Vec&lt;Foo&gt;) -&gt; Box&lt;Iterator&lt;Item = &amp;&#39;a Foo&gt; + &#39;a&gt;</code> and <code>fn to_words&lt;&#39;a&gt;(text: &amp;&#39;a str) -&gt; Box&lt;Iterator&lt;Item = &amp;&#39;a str&gt; + &#39;a&gt; </code> compared to your <code>fn baz&lt;&#39;a&gt;(&amp;self) -&gt; Box&lt;Iterator&lt;Item = &amp;String&gt; + &#39;a&gt;</code>."}, {"owner": {"reputation": 26014, "user_id": 123695, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/c1e4202cb329b1e3343a571dff94c68c?s=128&d=identicon&r=PG", "display_name": "Michael Mior", "link": "https://stackoverflow.com/users/123695/michael-mior"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501186258, "post_id": 45359749, "comment_id": 77681630, "body": "@Shepmaster I noted that and solved my problem, but the solution was not immediately obvious to me and I was hoping to reopen to answer my own question."}], "owner": {"reputation": 26014, "user_id": 123695, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/c1e4202cb329b1e3343a571dff94c68c?s=128&d=identicon&r=PG", "display_name": "Michael Mior", "link": "https://stackoverflow.com/users/123695/michael-mior"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 284, "favorite_count": 0, "closed_date": 1501184952, "answer_count": 0, "score": 1, "last_activity_date": 1501185845, "creation_date": 1501184704, "last_edit_date": 1501185845, "question_id": 45359749, "link": "https://stackoverflow.com/questions/45359749/returning-a-boxed-iterator-over-a-value-in-a-structure", "closed_reason": "Duplicate", "title": "Returning a boxed iterator over a value in a structure", "body": "<p>I want a function on a struct which returns an iterator to one of the struct's members. I tried something like the following, which doesn't work.</p>\n\n<pre><code>struct Foo {\n    bar: Vec&lt;String&gt;,\n}\n\nimpl Foo {\n    fn baz(&amp;self) -&gt; Box&lt;Iterator&lt;Item = &amp;String&gt;&gt; {\n        Box::new(self.bar.iter())\n    }\n}\n\nfn main() {\n    let x = Foo { bar: vec![\"quux\".to_string()] };\n    x.baz();\n}\n</code></pre>\n\n<p>When compiling, I get the error below:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n --&gt; src/main.rs:7:27\n  |\n7 |         Box::new(self.bar.iter())\n  |                           ^^^^\n  |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 6:5...\n --&gt; src/main.rs:6:5\n  |\n6 | /     fn baz(&amp;self) -&gt; Box&lt;Iterator&lt;Item = &amp;String&gt;&gt; {\n7 | |         Box::new(self.bar.iter())\n8 | |     }\n  | |_____^\nnote: ...so that reference does not outlive borrowed content\n --&gt; src/main.rs:7:18\n  |\n7 |         Box::new(self.bar.iter())\n  |                  ^^^^^^^^\n  = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that expression is assignable (expected std::boxed::Box&lt;std::iter::Iterator&lt;Item=&amp;std::string::String&gt; + 'static&gt;, found std::boxed::Box&lt;std::iter::Iterator&lt;Item=&amp;std::string::String&gt;&gt;)\n --&gt; src/main.rs:7:9\n  |\n7 |         Box::new(self.bar.iter())\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I also tried adding lifetime information as suggested elsewhere</p>\n\n<pre><code>struct Foo {\n    bar: Vec&lt;String&gt;,\n}\n\nimpl Foo {\n    fn baz&lt;'a&gt;(&amp;self) -&gt; Box&lt;Iterator&lt;Item = &amp;String&gt; + 'a&gt; {\n        Box::new(self.bar.iter())\n    }\n}\n\nfn main() {\n    let x = Foo { bar: vec![\"quux\".to_string()] };\n    x.baz();\n}\n</code></pre>\n\n<p>Now my error is the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n --&gt; src/main.rs:7:27\n  |\n7 |         Box::new(self.bar.iter())\n  |                           ^^^^\n  |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 6:5...\n --&gt; src/main.rs:6:5\n  |\n6 | /     fn baz&lt;'a&gt;(&amp;self) -&gt; Box&lt;Iterator&lt;Item = &amp;String&gt; + 'a&gt; {\n7 | |         Box::new(self.bar.iter())\n8 | |     }\n  | |_____^\nnote: ...so that reference does not outlive borrowed content\n --&gt; src/main.rs:7:18\n  |\n7 |         Box::new(self.bar.iter())\n  |                  ^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the method body at 6:5...\n --&gt; src/main.rs:6:5\n  |\n6 | /     fn baz&lt;'a&gt;(&amp;self) -&gt; Box&lt;Iterator&lt;Item = &amp;String&gt; + 'a&gt; {\n7 | |         Box::new(self.bar.iter())\n8 | |     }\n  | |_____^\nnote: ...so that expression is assignable (expected std::boxed::Box&lt;std::iter::Iterator&lt;Item=&amp;std::string::String&gt; + 'a&gt;, found std::boxed::Box&lt;std::iter::Iterator&lt;Item=&amp;std::string::String&gt;&gt;)\n --&gt; src/main.rs:7:9\n  |\n7 |         Box::new(self.bar.iter())\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1501175012, "post_id": 45356898, "comment_id": 77675266, "body": "I&#39;m not sure that I understand what you are asking, but you don&#39;t need named formatting arguments, you can stick to positional arguments: <code>write!(file, &quot;{} is {}&quot;, a, b)</code>, or <code>write!(file, &quot;{0} is {1}&quot;, a, b)</code>."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1501175140, "post_id": 45356898, "comment_id": 77675340, "body": "@E_net4 No, I not need numbers, I want names, in have ~ 5 arguments so I need name for them, like <code>{long_word}</code>,  <code>{another_long_word}</code>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1501175304, "post_id": 45356898, "comment_id": 77675438, "body": "You may wish to read the documentation on <a href=\"https://doc.rust-lang.org/stable/std/fmt/index.html\" rel=\"nofollow noreferrer\">std::fmt</a>. The code that you wrote does not seem to do what you want. Can you create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> that shows how you are currently formatting the struct?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501175807, "post_id": 45356898, "comment_id": 77675763, "body": "I think that using the <i>variable</i> <code>a</code> with the <i>string value</i> <code>&quot;a&quot;</code> is likely confusing your example, especially with the text <code>&quot;{a} is {b}&quot;</code>. Try using something concrete like <code>name</code> and <code>age</code> instead."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1501175808, "post_id": 45356898, "comment_id": 77675764, "body": "@E_net4 The question is, does the formatter allow <code>a</code> to be intepreted as <code>a = a</code> in formatters, like it allows <code>a</code> to be short for <code>a: a</code> in struct initializers. The answer is No AFAIK?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1501176049, "post_id": 45356898, "comment_id": 77675920, "body": "@loganfsmyth Indeed, it took me a while to understand the question. Thanks. As for its feasibility, I haven&#39;t managed to wrap my head around it yet. :)"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1501176290, "post_id": 45356898, "comment_id": 77676078, "body": "@loganfsmyth I know that it impossible, the question is it possible to create wrapper for std format macroses that do what I want."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1501181126, "post_id": 45356898, "comment_id": 77678869, "body": "if you&#39;re lazy you can just stuff them into a tuple and <code>{:?}</code> it since tuples implement Debug"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1612385690, "last_edit_date": 1612385690, "creation_date": 1501176332, "answer_id": 45357314, "question_id": 45356898, "link": "https://stackoverflow.com/questions/45356898/is-there-a-way-to-pass-named-arguments-to-format-macros-without-repeating-the-va/45357314#45357314", "title": "Is there a way to pass named arguments to format macros without repeating the variable names?", "body": "<p><a href=\"https://rust-lang.github.io/rfcs/2795-format-args-implicit-identifiers.html\" rel=\"nofollow noreferrer\">RFC 2795</a> has been accepted. When it is <a href=\"https://github.com/rust-lang/rust/issues/67984\" rel=\"nofollow noreferrer\">implemented</a>, you will be able to go beyond your desired syntax:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>write!(file, &quot;{a} is {b}&quot;).unwrap();\n</code></pre>\n<p>Until then, you can write your own wrapper around <code>println!</code> and friends:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! myprintln {\n    ($fmt:expr, $($name:ident),*) =&gt; { println!($fmt, $($name = $name),*) }\n}\n\nfn main() {\n    let a = &quot;alpha&quot;;\n    let b = &quot;beta&quot;;\n    myprintln!(&quot;{a} is {b}&quot;, a, b);\n}\n</code></pre>\n<p>This will likely always be limited compared to the full formatter macro, but it may be sufficient for your case.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1535080284, "post_id": 51996840, "comment_id": 90943080, "body": "OP asked this question on 2017-07-27; <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1180-2017-06-08\" rel=\"nofollow noreferrer\">Rust 1.18 was the stable release at the time</a>. In the question, they are already using the syntax you propose (<code>write!(file, &quot;{a} is {b}&quot;, a = a, b = b).unwrap();</code>). The specific question is about removing the duplication of <code>a = a</code>."}, {"owner": {"reputation": 6434, "user_id": 602340, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/c813559e4994a45eb8eedca722399fa0?s=128&d=identicon&r=PG", "display_name": "matiu", "link": "https://stackoverflow.com/users/602340/matiu"}, "edited": false, "score": 1, "creation_date": 1611835325, "post_id": 51996840, "comment_id": 116580853, "body": "I gave my upvote because I just wanted to know this answer and google found it :)"}], "tags": [], "owner": {"reputation": 411, "user_id": 1229736, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/549328a8a1b5227c9c0ff17c4782ed52?s=128&d=identicon&r=PG", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/1229736/chris-rudd"}, "is_accepted": false, "score": 1, "last_activity_date": 1612385308, "last_edit_date": 1612385308, "creation_date": 1535079544, "answer_id": 51996840, "question_id": 45356898, "link": "https://stackoverflow.com/questions/45356898/is-there-a-way-to-pass-named-arguments-to-format-macros-without-repeating-the-va/51996840#51996840", "title": "Is there a way to pass named arguments to format macros without repeating the variable names?", "body": "<p>As of <a href=\"https://doc.rust-lang.org/1.5.0/std/macro.format!.html\" rel=\"nofollow noreferrer\">1.5</a> there's now a native way to do this</p>\n<pre><code># notice how y is explicitly named (old way) and x is not (more concise)\nformat!(&quot;x = {}, y = {y}&quot;, 10, y = 30);\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1414, "favorite_count": 1, "accepted_answer_id": 45357314, "answer_count": 2, "score": 6, "last_activity_date": 1612385756, "creation_date": 1501174872, "last_edit_date": 1612385756, "question_id": 45356898, "link": "https://stackoverflow.com/questions/45356898/is-there-a-way-to-pass-named-arguments-to-format-macros-without-repeating-the-va", "title": "Is there a way to pass named arguments to format macros without repeating the variable names?", "body": "<p>With new versions of Rust, you can simplify structure initialization like this:</p>\n<pre><code>Foo {\n    a: a,\n    b: b,\n}\n</code></pre>\n<p>to this</p>\n<pre><code>Foo { a, b }\n</code></pre>\n<p>Is it possible to do something similar for <code>format!</code>/<code>println!</code>-like macros?</p>\n<p>For now I need to write it like this:</p>\n<pre><code>let a = &quot;a&quot;;\nlet b = &quot;b&quot;;\nwrite!(file, &quot;{a} is {b}&quot;, a = a, b = b).unwrap();\n</code></pre>\n<p>Is it possible to write my own macros with an API like this:</p>\n<pre><code>let a = &quot;a&quot;;\nlet b = &quot;b&quot;;\nmy_write!(file, &quot;{a} is {b}&quot;, a, b).unwrap();\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1501166482, "post_id": 45353757, "comment_id": 77669383, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String) or Vec (&amp;Vec) as a function argument?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 508, "user_id": 11950764, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8213f0ffc9106d7663c4b5f29f4ec9e5?s=128&d=identicon&r=PG", "display_name": "joe", "link": "https://stackoverflow.com/users/11950764/joe"}, "edited": false, "score": 0, "creation_date": 1567280494, "post_id": 45353922, "comment_id": 101921231, "body": "<a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter</a> That link solved my confusion about the double-reference: &quot;Because the closure passed to <code>filter()</code> takes a reference, and many iterators iterate over references, this leads to a possibly confusing situation, where the type of the closure is a double reference&quot;"}, {"owner": {"reputation": 918, "user_id": 742872, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/65dc2ca9ccb63a7004ff934f5501d576?s=128&d=identicon&r=PG", "display_name": "Rafa\u0142 Cie\u015blak", "link": "https://stackoverflow.com/users/742872/rafa%c5%82-cie%c5%9blak"}, "edited": false, "score": 0, "creation_date": 1604865172, "post_id": 45353922, "comment_id": 114470762, "body": "I microbenchmarked <code>filter().count()</code> and <code>fold()</code> and the latter is two times faster. For <code>(1..1_000_000).filter(|x| x % 2 == 0).count()</code> I got 167,317 ns/iter (+/- 9,497) and for <code>(1..1_000_000).fold(0, |acc, x| if x % 2 == 0 { acc + 1 } else { acc })</code> I got 74,451 ns/iter (+/- 3,860). That&#39;s unfortunate, because for me <code>filter().count()</code> is much more readable."}, {"owner": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "reply_to_user": {"reputation": 918, "user_id": 742872, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/65dc2ca9ccb63a7004ff934f5501d576?s=128&d=identicon&r=PG", "display_name": "Rafa\u0142 Cie\u015blak", "link": "https://stackoverflow.com/users/742872/rafa%c5%82-cie%c5%9blak"}, "edited": false, "score": 2, "creation_date": 1609691656, "post_id": 45353922, "comment_id": 115896097, "body": "@Rafa\u0142Cie\u015blak FWIW I did the same and found practically no difference in the performance. There is a special case implementation for <code>count</code> to allow this: <a href=\"https://doc.rust-lang.org/1.48.0/src/core/iter/adapters/mod.rs.html#1099-1118\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.48.0/src/core/iter/adapters/&hellip;</a> So I don&#39;t know the specifics of your benchmark, but I&#39;m inclined to say it was flawed."}, {"owner": {"reputation": 918, "user_id": 742872, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/65dc2ca9ccb63a7004ff934f5501d576?s=128&d=identicon&r=PG", "display_name": "Rafa\u0142 Cie\u015blak", "link": "https://stackoverflow.com/users/742872/rafa%c5%82-cie%c5%9blak"}, "reply_to_user": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 1, "creation_date": 1609858551, "post_id": 45353922, "comment_id": 115949500, "body": "@Tam&#225;sSzelei Thanks for the info! It&#39;s good to know that there&#39;s a special case for that, it indeed suggests that my benchmark was flawed."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 32, "last_activity_date": 1501166522, "last_edit_date": 1501166522, "creation_date": 1501166150, "answer_id": 45353922, "question_id": 45353757, "link": "https://stackoverflow.com/questions/45353757/how-to-count-the-elements-in-a-vector-with-some-value-without-looping/45353922#45353922", "title": "How to count the elements in a vector with some value without looping?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter\" rel=\"noreferrer\"><code>Iterator::filter</code></a> and then <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.count\" rel=\"noreferrer\"><code>count</code></a> it:</p>\n\n<pre><code>fn main() {\n    let v = vec![91, 55, 77, 91];\n    println!(\"count 91: {}\", v.iter().filter(|&amp;n| *n == 91).count());\n}\n</code></pre>\n"}], "owner": {"reputation": 2897, "user_id": 3392714, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/302ac6bfbe982dcd53aa123f9bde72eb?s=128&d=identicon&r=PG&f=1", "display_name": "dani", "link": "https://stackoverflow.com/users/3392714/dani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9632, "favorite_count": 3, "accepted_answer_id": 45353922, "answer_count": 1, "score": 20, "last_activity_date": 1501166522, "creation_date": 1501165765, "last_edit_date": 1501166451, "question_id": 45353757, "link": "https://stackoverflow.com/questions/45353757/how-to-count-the-elements-in-a-vector-with-some-value-without-looping", "title": "How to count the elements in a vector with some value without looping?", "body": "<p>How do I count the elements in a vector (e.g. <code>[91, 55, 77, 91]</code>) with a certain value (e.g. <code>91</code>) without using a loop (as shown below)?</p>\n\n<pre><code>fn count_eq(vec: &amp;Vec&lt;i64&gt;, num: i64) -&gt; i64 {\n    let mut counter = 0;\n    for i in vec {\n        if *i == num {\n            counter += 1;\n        }\n    }\n    return counter;\n}\n\nfn main() {\n    let v = vec![91, 55, 77, 91];\n    println!(\"count 91: {}\", count_eq(&amp;v, 91));\n}\n</code></pre>\n"}, {"tags": ["if-statement", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1501150180, "post_id": 45347375, "comment_id": 77656367, "body": "Use <code>String::from(&quot;n&quot;)</code> to create a <code>String</code>"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1501150741, "post_id": 45347375, "comment_id": 77656838, "body": "Also relevant: <a href=\"https://stackoverflow.com/questions/27201086/comparing-string-in-rust\">Comparing string in Rust</a>."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501150950, "post_id": 45347375, "comment_id": 77656996, "body": "<code>read_line</code> puts the newline in the result."}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1501151266, "post_id": 45347375, "comment_id": 77657242, "body": "@Boiethios actually, use <code>&quot;n&quot;.to_string()</code> to create a <code>String</code> :p"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1501151643, "post_id": 45347375, "comment_id": 77657488, "body": "@JanNilsFerner naah, I&#39;d rather do <code>&quot;n&quot;.to_owned()</code> :)"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1501151749, "post_id": 45347375, "comment_id": 77657564, "body": "@ljedrz <a href=\"https://github.com/rust-lang/rust/pull/32586\" rel=\"nofollow noreferrer\">Not anymore</a>. Since they are now equivalent, I would argue that <code>to_string</code> is more consistent and readable."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 1, "creation_date": 1501156018, "post_id": 45347375, "comment_id": 77660613, "body": "@JanNilsFerner Whatever, those solutions are better than <code>ToString::to_string</code>"}], "owner": {"reputation": 217, "user_id": 8214744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ldnm4.jpg?s=128&g=1", "display_name": "MrFlyingToasterman", "link": "https://stackoverflow.com/users/8214744/mrflyingtoasterman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 120, "favorite_count": 0, "closed_date": 1501154397, "answer_count": 0, "score": 0, "last_activity_date": 1501160295, "creation_date": 1501149509, "last_edit_date": 1501160295, "question_id": 45347375, "link": "https://stackoverflow.com/questions/45347375/what-is-a-reasonable-string-equals-check-in-rust", "closed_reason": "Duplicate", "title": "What is a reasonable String equals check in Rust?", "body": "<p>I'd like to compare 2 strings in Rust. I'm pretty sure that both \"strings\" are already strings, but no matter what the user enters, it always chooses the Blacklist mode!</p>\n\n<p>Here is what I've tried:</p>\n\n<pre><code>//Imports\nuse std::io;\n\nfn main() {\n    //Greeting\n    println!(\"[INFO] Welcome to Tracer!\\n\");\n    println!(\"[ ?? ] Use Blacklist mode ? [Y/n]\");\n\n    //Get user input\n    let users_choice = get_input();\n\n    //Check if user wants to run in Blacklist Mode\n    if users_choice == ToString::to_string(\"n\") || users_choice == ToString::to_string(\"N\") {\n        //User wants to use Whitelist mode\n        trace_network(0);\n    } else {\n        //User wants to use Blacklist mode\n        trace_network(1);\n    }\n}\n\nfn get_input() -&gt; String {\n\n    //Creating changeable var\n    let mut user_input = String::new();\n\n    //Read Input; On Error drop MSG\n    io::stdin().read_line(&amp;mut user_input)\n        .expect(\"[FAIL] Failed to read line\");\n\n    println!(\"[INFO] Your input was: &gt;{}&lt;\", user_input);\n\n    return user_input;\n}\n\nfn trace_network(mode:i32) {\n    println!(\"[INFO] Starting trace !!! {}\", mode);\n\n    //Print wich mode was choosen\n    if mode == 0 {\n        println!(\"[INFO] Whitelistmode!\");\n    } else {\n        println!(\"[INFO] Blacklistmode!\");\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4860, "user_id": 279236, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wJLyB.png?s=128&g=1", "display_name": "jwenting", "link": "https://stackoverflow.com/users/279236/jwenting"}, "edited": false, "score": 1, "creation_date": 1501140862, "post_id": 45344110, "comment_id": 77649693, "body": "not knowing Rust, it might not like doing nums.last() in the same statement as nums.push() as the value of nums.last() might change when pushing a new entry into nums."}], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 8373847, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/N0po6.jpg?s=128&g=1", "display_name": "LiLei", "link": "https://stackoverflow.com/users/8373847/lilei"}, "edited": false, "score": 0, "creation_date": 1501143363, "post_id": 45344425, "comment_id": 77651359, "body": "Thanks, it works. I thought nums.last() conflicted with nums.push(). Where does Rust document explain the &quot;reference unpack&quot;  in detail?"}, {"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "reply_to_user": {"reputation": 63, "user_id": 8373847, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/N0po6.jpg?s=128&g=1", "display_name": "LiLei", "link": "https://stackoverflow.com/users/8373847/lilei"}, "edited": false, "score": 0, "creation_date": 1501143654, "post_id": 45344425, "comment_id": 77651557, "body": "@LiLei, I updated the answer, you should take a look at all the pattern matching features rust has (sweet as honey) ;)"}], "tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": true, "score": 5, "last_activity_date": 1501160915, "last_edit_date": 1501160915, "creation_date": 1501141535, "answer_id": 45344425, "question_id": 45344110, "link": "https://stackoverflow.com/questions/45344110/how-to-satisfy-rust-borrow-checker-with-this-simple-code/45344425#45344425", "title": "How to satisfy Rust borrow checker with this simple code?", "body": "<p>You can dereference the reference in the guard clause:</p>\n\n<pre><code>fn main() {\n    let mut nums = vec![1, 2, 3];\n    if let Some(&amp;x) = nums.last() {\n        nums.push(x);\n    }\n}\n</code></pre>\n\n<p>Rust has a powerful pattern matching feature, you can unpack almost everything if you know its type. Check the <a href=\"https://doc.rust-lang.org/1.19.0/book/first-edition/patterns.html\" rel=\"nofollow noreferrer\">Rust pattern matching documentation</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 63, "user_id": 8373847, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/N0po6.jpg?s=128&g=1", "display_name": "LiLei", "link": "https://stackoverflow.com/users/8373847/lilei"}, "edited": false, "score": 0, "creation_date": 1501148593, "post_id": 45344530, "comment_id": 77655189, "body": "Thanks, this answer is more clear. I just didn&#39;t know why the life of the immutable borrow did not end. Now I know the reason is that the returned value of nums.last() is reference. But why &quot;&amp;x&quot; can end Immutable borrow?"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 63, "user_id": 8373847, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/N0po6.jpg?s=128&g=1", "display_name": "LiLei", "link": "https://stackoverflow.com/users/8373847/lilei"}, "edited": false, "score": 2, "creation_date": 1501150903, "post_id": 45344530, "comment_id": 77656957, "body": "in this context, <code>&amp;x</code> actually dereferences <code>x</code>. Normally, this would move <code>x</code>, but integers implement the <code>Copy</code> trait, which means that instead of moving <code>x</code> we work with an automatically generated copy of <code>x</code>. Us dereferencing <code>x</code> destroys the reference returned by <code>.last()</code> and ends the borrow it caused."}], "tags": [], "owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "is_accepted": false, "score": 7, "last_activity_date": 1501141859, "creation_date": 1501141859, "answer_id": 45344530, "question_id": 45344110, "link": "https://stackoverflow.com/questions/45344110/how-to-satisfy-rust-borrow-checker-with-this-simple-code/45344530#45344530", "title": "How to satisfy Rust borrow checker with this simple code?", "body": "<p>When you call <code>.last()</code> you borrow <code>nums</code> as immutable, as mutating it would invalidate the reference <code>x</code> that you hold.   You then call <code>.push</code>, which borrows <code>nums</code> as mutable. </p>\n\n<p>The problem is that you now have an immutable and a mutable borrow of the same value at the same time, which is against rusts memory safety guarantees (multiple readers <strong>or</strong> one single writer guarantee that you will never have invalid memory anywhere).</p>\n\n<pre><code>fn main() {\n    let mut nums = vec![1, 2, 3];\n    if let Some(x) = nums.last() { // Immutable borrow starts here\n        nums.push(*x);             // Mutable borrow starts here\n    }                              // Immutable and mutable borrows end here\n}\n</code></pre>\n\n<p>The solution would be to lower the scope of the immutable borrow by immediately dropping the reference of its result, as per @DanielSanchez's example: </p>\n\n<pre><code>let mut nums = vec![1, 2, 3];\nif let Some(&amp;x) = nums.last() { // Immutable borrow starts and ends here\n    nums.push(x);               // Mutable borrow starts here\n}                               // Mutable borrow ends here\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 8373847, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/N0po6.jpg?s=128&g=1", "display_name": "LiLei", "link": "https://stackoverflow.com/users/8373847/lilei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 1, "accepted_answer_id": 45344425, "answer_count": 2, "score": 6, "last_activity_date": 1501160915, "creation_date": 1501140569, "question_id": 45344110, "link": "https://stackoverflow.com/questions/45344110/how-to-satisfy-rust-borrow-checker-with-this-simple-code", "title": "How to satisfy Rust borrow checker with this simple code?", "body": "<p>I'm getting a Rust compile error from the borrow checker, and don't know how to fix it.<br>\nThe code below is simple, and no problem with similar code in C++.</p>\n\n<pre><code>fn main() {\n    let mut nums = vec![1, 2, 3];\n    if let Some(x) = nums.last() {\n        nums.push(*x);\n    }\n}\n</code></pre>\n\n<p>Here is the error\uff1a</p>\n\n<pre><code>message: 'cannot borrow `nums` as mutable because it is also borrowed as immutable (4, 9)'\n</code></pre>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 3, "creation_date": 1501138685, "post_id": 45343345, "comment_id": 77648204, "body": "why no crates? Would have suggested the official regex crates with a filter on <code>\\w</code> to generate all the alphabets in all languages."}, {"owner": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1501139173, "post_id": 45343345, "comment_id": 77648512, "body": "Thanks for that suggestion. Just hoping for another way using no crates"}], "answers": [{"comments": [{"owner": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "edited": false, "score": 0, "creation_date": 1501141548, "post_id": 45343841, "comment_id": 77650132, "body": "Looks good. I was also thinking of another way where you filter the range eg like (10..36) but you skip over the non letters with a if statement but got stuck on what to do for the else part"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1501142899, "last_edit_date": 1501142899, "creation_date": 1501139786, "answer_id": 45343841, "question_id": 45343345, "link": "https://stackoverflow.com/questions/45343345/is-there-a-simple-way-to-generate-the-lowercase-and-uppercase-english-alphabet-i/45343841#45343841", "title": "Is there a simple way to generate the lowercase and uppercase English alphabet in Rust?", "body": "<p>You can convert an int to a char in given base. Here the code for <code>'a'</code> to <code>'z'</code>:</p>\n\n<pre><code>use std::char;\n\nfn main() {\n    let alphabet = (10..36).map(|i| char::from_digit(i, 36).unwrap()).collect::&lt;Vec&lt;_&gt;&gt;();\n\n    println!(\"{:?}\", alphabet);\n}\n</code></pre>\n\n<p>Ouput:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n</code></pre>\n\n<p>For the whole solution, you can create another one with uppercase, and concatenate the two.</p>\n\n<p>Example of the whole solution:</p>\n\n<pre><code>use std::char;\n\nfn main() {\n    let mut lowercase = (10..36).map(|i| char::from_digit(i, 36).unwrap()).collect::&lt;Vec&lt;_&gt;&gt;();\n    let mut alphabet = lowercase.iter().map(|c| c.to_uppercase().next().unwrap()).collect::&lt;Vec&lt;_&gt;&gt;();\n\n    alphabet.append(&amp;mut lowercase);\n\n    println!(\"{:?}\", alphabet);\n}\n</code></pre>\n\n<p>That being said, I think it is easier to just write the vector with literals.</p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1501142744, "post_id": 45344045, "comment_id": 77650901, "body": "Is it guaranteed that <code>&#39;A&#39; &lt; &#39;z&#39;</code>?"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1501142864, "post_id": 45344045, "comment_id": 77650982, "body": "@Boiethios <a href=\"https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)\" rel=\"nofollow noreferrer\">Yes</a>, it&#39;s a unicode standard which rustc uses."}], "tags": [], "owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "is_accepted": true, "score": 8, "last_activity_date": 1548263533, "last_edit_date": 1548263533, "creation_date": 1501140369, "answer_id": 45344045, "question_id": 45343345, "link": "https://stackoverflow.com/questions/45343345/is-there-a-simple-way-to-generate-the-lowercase-and-uppercase-english-alphabet-i/45344045#45344045", "title": "Is there a simple way to generate the lowercase and uppercase English alphabet in Rust?", "body": "<p>You cannot iterate over a range of <code>char</code>s directly, so with a little casting we can do this:</p>\n\n<pre><code>let alphabet = (b'A'..=b'z')           // Start as u8\n        .map(|c| c as char)            // Convert all to chars\n        .filter(|c| c.is_alphabetic()) // Filter only alphabetic chars\n        .collect::&lt;Vec&lt;_&gt;&gt;();          // Collect as Vec&lt;char&gt;\n</code></pre>\n\n<p>or, combining the <code>map</code> and <code>filter</code> into <code>filter_map</code></p>\n\n<pre><code>let alphabet = (b'A'..=b'z')                               // Start as u8\n        .filter_map(|c| {\n            let c = c as char;                             // Convert to char\n            if c.is_alphabetic() { Some(c) } else { None } // Filter only alphabetic chars\n        })          \n        .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "edited": false, "score": 0, "creation_date": 1501141295, "post_id": 45344161, "comment_id": 77649960, "body": "Any possible way to do that as 1 assignment?"}, {"owner": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "edited": false, "score": 0, "creation_date": 1501141958, "post_id": 45344161, "comment_id": 77650423, "body": "Awesome!! I assume this will work on stable as well?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "edited": false, "score": 0, "creation_date": 1501142106, "post_id": 45344161, "comment_id": 77650528, "body": "@GoldenChrysanthem it will as soon as the <a href=\"https://github.com/rust-lang/rust/issues/28237\" rel=\"nofollow noreferrer\"><code>inclusive_range_syntax</code> feature</a> is stabilized, though then the syntax will probably be <code>..=</code> instead of <code>...</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "edited": false, "score": 1, "creation_date": 1501146324, "post_id": 45344161, "comment_id": 77653370, "body": "@GoldenChrysanthem You can get the vector in stable Rust this way: <code>let alphabet = (&#39;a&#39; as u8..&#39;z&#39; as u8 + 1).chain((&#39;A&#39; as u8..&#39;Z&#39; as u8 + 1)).map(|i| i as char).collect::&lt;Vec&lt;_&gt;&gt;();</code> I think this is the simplest way."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 10, "last_activity_date": 1548263443, "last_edit_date": 1548263443, "creation_date": 1501140709, "answer_id": 45344161, "question_id": 45343345, "link": "https://stackoverflow.com/questions/45343345/is-there-a-simple-way-to-generate-the-lowercase-and-uppercase-english-alphabet-i/45344161#45344161", "title": "Is there a simple way to generate the lowercase and uppercase English alphabet in Rust?", "body": "<p>There are many options; you can do the following:</p>\n\n<pre><code>fn main() {\n    let alphabet = String::from_utf8(\n        (b'a'..=b'z').chain(b'A'..=b'Z').collect()\n    ).unwrap();\n\n    println!(\"{}\", alphabet);\n}\n</code></pre>\n\n<p>This way you don't need to remember the ASCII numbers.</p>\n"}, {"tags": [], "owner": {"reputation": 4257, "user_id": 3347227, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/160c472b1c6c43b47cc98cc01d3ce317?s=128&d=identicon&r=PG", "display_name": "Erik Vesteraas", "link": "https://stackoverflow.com/users/3347227/erik-vesteraas"}, "is_accepted": false, "score": 1, "last_activity_date": 1501168246, "creation_date": 1501168246, "answer_id": 45354704, "question_id": 45343345, "link": "https://stackoverflow.com/questions/45343345/is-there-a-simple-way-to-generate-the-lowercase-and-uppercase-english-alphabet-i/45354704#45354704", "title": "Is there a simple way to generate the lowercase and uppercase English alphabet in Rust?", "body": "<p>Unless you for some reason (say, an assignment) need to actually generate the characters, the simplest, shortest code is of course just a literal:</p>\n\n<pre><code>fn main() {\n    let alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    println!(\"{:?}\", alpha);\n}\n</code></pre>\n\n<p>If you need the chars individually:</p>\n\n<pre><code>fn main() {\n    let chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".chars();\n\n    // If you for some reason need a Vec:\n    println!(\"{:?}\", chars.collect::&lt;Vec&lt;_&gt;&gt;());\n}\n</code></pre>\n"}], "owner": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3392, "favorite_count": 1, "accepted_answer_id": 45344045, "answer_count": 4, "score": 8, "last_activity_date": 1548263533, "creation_date": 1501138375, "last_edit_date": 1501160195, "question_id": 45343345, "link": "https://stackoverflow.com/questions/45343345/is-there-a-simple-way-to-generate-the-lowercase-and-uppercase-english-alphabet-i", "title": "Is there a simple way to generate the lowercase and uppercase English alphabet in Rust?", "body": "<p>This is what I'm doing so far:</p>\n\n<pre><code>fn main() {\n    let a = (0..58).map(|c| ((c + 'A' as u8) as char).to_string())\n                       .filter(|s| !String::from(\"[\\\\]^_`\").contains(s) )\n                       .collect::&lt;Vec&lt;_&gt;&gt;();    \n\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>Output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n</code></pre>\n\n<p>Also no crates if possible.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 2, "creation_date": 1501138728, "post_id": 45343320, "comment_id": 77648237, "body": "What exactly does the python code do in the first place?"}, {"owner": {"reputation": 46522, "user_id": 447489, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ZBqSB.jpg?s=128&g=1", "display_name": "fancyPants", "link": "https://stackoverflow.com/users/447489/fancypants"}, "edited": false, "score": 0, "creation_date": 1501138812, "post_id": 45343320, "comment_id": 77648276, "body": "Why don&#39;t you just concatenate the strings?"}, {"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1501138924, "post_id": 45343320, "comment_id": 77648346, "body": "@JanNilsFerner it returns the first non-empty string (in this example content of <code>bar</code>) @fancyPants because sometimes <code>foo</code> may already be populated, and i want to return the content in <code>foo</code> instead"}], "answers": [{"comments": [{"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501139014, "post_id": 45343541, "comment_id": 77648407, "body": "I did <code>if foo.is_empty() { bar } else { foo }</code>, works, but i wonder if there&#39;s any other way that I missed in the introductory material (I am new to the language)"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1501139029, "post_id": 45343541, "comment_id": 77648419, "body": "Not only will it not do implicit conversions here, Rust has no concept of &quot;truthiness&quot; like Python does, and it doesn&#39;t allow <i>anything</i> other than <code>bool</code>s to be used with logical operators.  You can&#39;t override the behaviour of those operators."}], "tags": [], "owner": {"reputation": 342, "user_id": 5186167, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/heYkp.jpg?s=128&g=1", "display_name": "Aratz", "link": "https://stackoverflow.com/users/5186167/aratz"}, "is_accepted": false, "score": 1, "last_activity_date": 1501160431, "last_edit_date": 1501160431, "creation_date": 1501138900, "answer_id": 45343541, "question_id": 45343320, "link": "https://stackoverflow.com/questions/45343320/how-can-i-return-the-first-non-empty-string/45343541#45343541", "title": "How can I return the first non-empty string?", "body": "<p>The problem here is that Rust will not implicitly convert strings (or anything else) to booleans in logical expressions.</p>\n\n<p>If you want to mimic Python's behavior, i.e. you want to keep strings after your boolean expression, you have to be more explicit with your code, e.g.:</p>\n\n<pre><code>if foo != \"\" {\n    foo\n} else if bar != \"\" {\n    bar\n} else {\n    \"\"\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1501141393, "post_id": 45343622, "comment_id": 77650025, "body": "And if OP miss the way Python works, he can put this in a macro like <code>str_or!(foo, bar)</code>."}, {"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501143301, "post_id": 45343622, "comment_id": 77651310, "body": "lol, I can see if I have 3 or more then the code I need to write would be a lot more"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501143540, "post_id": 45343622, "comment_id": 77651474, "body": "@Jeffrey04 if you want I can write you a macro to use for unlimited strings."}, {"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501144078, "post_id": 45343622, "comment_id": 77651833, "body": "it&#39;s okay I was just wondering, still learning and trying to familiarize with the language (I really hate statically typed language lol)"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501144407, "post_id": 45343622, "comment_id": 77652037, "body": "@Jeffrey04 Wrote it up anyways :P"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501144553, "post_id": 45343622, "comment_id": 77652135, "body": "@Jeffrey04 Dynamically typed languages do not have same security or fastness guarantees. They are not antithetical with statically ones, they just do not serve the same purpose."}, {"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501145007, "post_id": 45343622, "comment_id": 77652417, "body": "i know (: I just don&#39;t like them (:"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501160538, "post_id": 45343622, "comment_id": 77664144, "body": "@Jeffrey04 if you <i>hate</i> it so much, don&#39;t use Rust! There are so many different wonderful languages out there, don&#39;t waste your time on one that causes you displeasure."}, {"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501214511, "post_id": 45343622, "comment_id": 77690053, "body": "errrrrr... sometimes it is still fun to pick up a new language, isn&#39;t it?"}, {"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1501214706, "post_id": 45343622, "comment_id": 77690095, "body": "also learning about a new language refreshes my knowledge about a language i should already be familiar with"}], "tags": [], "owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "is_accepted": false, "score": 4, "last_activity_date": 1501160360, "last_edit_date": 1501160360, "creation_date": 1501139164, "answer_id": 45343622, "question_id": 45343320, "link": "https://stackoverflow.com/questions/45343320/how-can-i-return-the-first-non-empty-string/45343622#45343622", "title": "How can I return the first non-empty string?", "body": "<p>Rust has no concept of <em>truthy</em> or <em>falsy</em> values like Python, so you cannot use <code>str</code>s as booleans. In fact, you cannot use anything but actual bools with comparison operators. </p>\n\n<p>An alternative to <a href=\"https://stackoverflow.com/a/45343541/155423\">@Aratz's solution</a> using <code>match</code> would be</p>\n\n<pre><code>let result = match (foo.is_empty(), bar.is_empty) {\n    (true,_) =&gt; Some(foo),\n    (_, true) =&gt; Some(bar),\n    _ =&gt; None,\n};\n</code></pre>\n\n<p>If you want this kind or functionality for multiple strings, you can use a macro:</p>\n\n<pre><code>macro_rules! first_nonempty {\n   ( $( $string:expr),+ )=&gt; ({\n        $(\n            if !$string.is_empty() {\n                Some($string)\n            } else\n        )+\n        { None }\n   })\n}\n</code></pre>\n\n<p>Used like this</p>\n\n<pre><code>let res = first_nonempty!(\"foo\", \"bar\", \"\"); // res is Some(\"foo\")\nlet res = first_nonempty!(\"\", \"bar\", \"baz\", \"quux\"); // res is Some(\"bar\")\nlet res = first_nonempty!(\"\"); // res is None\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 3, "last_activity_date": 1501234350, "last_edit_date": 1501234350, "creation_date": 1501144202, "answer_id": 45345339, "question_id": 45343320, "link": "https://stackoverflow.com/questions/45343320/how-can-i-return-the-first-non-empty-string/45345339#45345339", "title": "How can I return the first non-empty string?", "body": "<p>If you have several strings, I would use iterators;</p>\n\n<pre><code>let strs = [\"\", \"foo\", \"bar\"];\nlet non_empty = strs.iter().skip_while(|&amp;x| x.is_empty()).next();\n\nprintln!(\"{}\", non_empty.unwrap_or(&amp;\"\"));\n</code></pre>\n\n<p>It can also go into its own function, if you're using this a lot:</p>\n\n<pre><code>// call as let non_empty = first_non_empty(&amp;[\"\", \"foo\", \"bar\"]);\nfn first_non_empty&lt;'a&gt;(strs: &amp;[&amp;'a str]) -&gt; &amp;'a str {\n    strs.iter().skip_while(|&amp;x| x.is_empty()).next().unwrap_or(&amp;\"\")\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 436, "user_id": 1152427, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f58ad5b5fc9bee2e9a0837afb1cb5da8?s=128&d=identicon&r=PG", "display_name": "Pan Hania", "link": "https://stackoverflow.com/users/1152427/pan-hania"}, "is_accepted": false, "score": 3, "last_activity_date": 1501160461, "last_edit_date": 1501160461, "creation_date": 1501146340, "answer_id": 45346122, "question_id": 45343320, "link": "https://stackoverflow.com/questions/45343320/how-can-i-return-the-first-non-empty-string/45346122#45346122", "title": "How can I return the first non-empty string?", "body": "<p>You can also create an extension trait that will add your desired behavior:</p>\n\n<pre><code>trait Or: Sized {\n    fn or(self, other: Self) -&gt; Self;\n}\n\nimpl&lt;'a&gt; Or for &amp;'a str {\n    fn or(self, other: &amp;'a str) -&gt; &amp;'a str {\n        if self.is_empty() { other } else { self }\n    }\n}\n</code></pre>\n\n<p>Now you can use it like this:</p>\n\n<pre><code>assert_eq!(\"foo\".or(\"bar\"), \"foo\");\nassert_eq!(\"\".or(\"\").or(\"baz\").or(\"\").or(\"quux\"), \"baz\");\n</code></pre>\n\n<p>If you need to make sure that the second argument is evaluated lazily you can extend the <code>Or</code> trait with the following method:</p>\n\n<pre><code>fn or_else&lt;F: FnOnce() -&gt; Self&gt;(self, f: F) -&gt; Self;\n</code></pre>\n\n<p>See analogous methods of <code>Option</code>: <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.or\" rel=\"nofollow noreferrer\"><code>Option#or</code></a> and <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.or_else\" rel=\"nofollow noreferrer\"><code>Option#or_else</code></a> for more details.</p>\n"}], "owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 719, "favorite_count": 0, "answer_count": 4, "score": 3, "last_activity_date": 1501234350, "creation_date": 1501138280, "last_edit_date": 1501160667, "question_id": 45343320, "link": "https://stackoverflow.com/questions/45343320/how-can-i-return-the-first-non-empty-string", "title": "How can I return the first non-empty string?", "body": "<p>The following Python code returns the first non-empty string (in this example, the content of <code>bar</code>):</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>foo = \"\"\nbar = \"hello\"\nfoo or bar # returns \"hello\"\n</code></pre>\n\n<p>How do I write it in Rust? I tried with this:</p>\n\n<pre><code>let foo = \"\";\nlet bar = \"\";\nfoo || bar;\n</code></pre>\n\n<p>but I am getting this</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:5\n  |\n4 |     foo || bar;\n  |     ^^^ expected bool, found &amp;str\n  |\n  = note: expected type `bool`\n             found type `&amp;str`\n</code></pre>\n\n<p>I suppose I can't easily do what I do in Python with Rust?</p>\n"}, {"tags": ["types", "rust", "type-alias"], "answers": [{"tags": [], "owner": {"reputation": 917, "user_id": 4808573, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/oFwhb.jpg?s=128&g=1", "display_name": "pengowen123", "link": "https://stackoverflow.com/users/4808573/pengowen123"}, "is_accepted": true, "score": 2, "last_activity_date": 1501160989, "last_edit_date": 1501160989, "creation_date": 1501127905, "answer_id": 45341153, "question_id": 45339659, "link": "https://stackoverflow.com/questions/45339659/why-does-this-rust-type-alias-need-a-lifetime-parameter/45341153#45341153", "title": "Why does this Rust type alias need a lifetime parameter?", "body": "<p>The problem is <code>String</code> owns its memory, while <code>&amp;str</code> is a reference to a <code>str</code>. Usually you can elide lifetimes, but when a reference is stored in a <code>struct</code>, <code>enum</code>, or type alias, all lifetimes must be specified. So the correct way to write the alias is:</p>\n\n<pre><code>type Name&lt;'a&gt; = &amp;'a str;\n</code></pre>\n\n<p>The lifetime is declared after the name of the type alias, and the lifetime of <code>&amp;str</code> is specified to be <code>'a</code>.</p>\n\n<p>Lifetimes on types can be elided in functions sometimes, which is why you can write <code>&amp;str</code>. This also applies to other types, including type aliases. That means this is valid:</p>\n\n<pre><code>fn foo(s: &amp;String) -&gt; Name { s.as_str() }\n</code></pre>\n\n<p>The lifetime parameter on <code>Name</code> is elided here.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 560, "favorite_count": 0, "accepted_answer_id": 45341153, "answer_count": 1, "score": 1, "last_activity_date": 1501160989, "creation_date": 1501116915, "last_edit_date": 1501160965, "question_id": 45339659, "link": "https://stackoverflow.com/questions/45339659/why-does-this-rust-type-alias-need-a-lifetime-parameter", "title": "Why does this Rust type alias need a lifetime parameter?", "body": "<p>I tried the following Rust type alias:</p>\n\n<pre><code>type Name = String;\n</code></pre>\n\n<p>It works fine. So I tried a variant:</p>\n\n<pre><code>type Name = &amp;str;\n</code></pre>\n\n<p>This failed with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:1:17\n  |\n1 |     type Name = &amp;str;\n  |                 ^ expected lifetime parameter\n</code></pre>\n\n<p>Why would a type alias need a lifetime parameter and how would I add it?</p>\n"}]