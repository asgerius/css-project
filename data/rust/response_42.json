[{"tags": ["rust", "capnproto"], "comments": [{"owner": {"reputation": 47, "user_id": 5498524, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/29384e7c43b0b8ca779899c353acaf52?s=128&d=identicon&r=PG&f=1", "display_name": "hamersaw", "link": "https://stackoverflow.com/users/5498524/hamersaw"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446152065, "post_id": 33392841, "comment_id": 54637972, "body": "Yes, your answer is correct. I noticed people were still answering when it is not needed. I&#39;ll remove the edit since it sounds like thats the stackoverflow way of doing things. Thanks for the help."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446152462, "post_id": 33392841, "comment_id": 54638175, "body": "Ah, I see. I only provided a comment which doesn&#39;t count as an answer. In fact, I tend to delete most of my comments after they have been added to a question / answer, and I will do so for these soon ^_^. The <i>creator</i> of the Rust capnproto library answered your question, so it&#39;s perfectly acceptable for that to be the accepted answer ;-)"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446122344, "post_id": 33414324, "comment_id": 54618581, "body": "I did actually have to install the &quot;normal&quot; binary, otherwise the <code>Command</code> invocation failed with &quot;no such file or directory&quot;."}, {"owner": {"reputation": 156, "user_id": 4024861, "user_type": "registered", "profile_image": "https://graph.facebook.com/3501547/picture?type=large", "display_name": "David Renshaw", "link": "https://stackoverflow.com/users/4024861/david-renshaw"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446123798, "post_id": 33414324, "comment_id": 54619586, "body": "Right, you still do need to <a href=\"https://capnproto.org/install.html\" rel=\"nofollow noreferrer\">install <code>capnp</code></a> on your system."}], "tags": [], "owner": {"reputation": 156, "user_id": 4024861, "user_type": "registered", "profile_image": "https://graph.facebook.com/3501547/picture?type=large", "display_name": "David Renshaw", "link": "https://stackoverflow.com/users/4024861/david-renshaw"}, "is_accepted": false, "score": 3, "last_activity_date": 1446122378, "last_edit_date": 1446122378, "creation_date": 1446121876, "answer_id": 33414324, "question_id": 33392841, "link": "https://stackoverflow.com/questions/33392841/capnpccompile-not-writing-files/33414324#33414324", "title": "capnpc::compile not writing files", "body": "<p>When you invoke capnpc::compile from a Cargo build script, the generated code goes in a subdirectory of target/ that can be found at main compile time through the <code>OUT_DIR</code> environment variable. This strategy is described in the <a href=\"http://doc.crates.io/build-script.html#case-study-code-generation\" rel=\"nofollow\">Cargo documentation</a>. </p>\n\n<p>You shouldn't need to install the capnpc-rust binary in /usr/local/bin or anywhere else for this to work.</p>\n\n<p>Your build.rs and Cargo.toml files look fine to me.</p>\n\n<p>You might find it helpful to consult the <a href=\"https://github.com/dwrensha/capnpc-rust/tree/master/example/addressbook\" rel=\"nofollow\">addressbook example</a>.</p>\n"}], "owner": {"reputation": 47, "user_id": 5498524, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/29384e7c43b0b8ca779899c353acaf52?s=128&d=identicon&r=PG&f=1", "display_name": "hamersaw", "link": "https://stackoverflow.com/users/5498524/hamersaw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 251, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1446151055, "creation_date": 1446040191, "last_edit_date": 1446151055, "question_id": 33392841, "link": "https://stackoverflow.com/questions/33392841/capnpccompile-not-writing-files", "title": "capnpc::compile not writing files", "body": "<p>I'm having difficulty working with the <a href=\"https://github.com/dwrensha/capnpc-rust\" rel=\"nofollow\">capnpc crate</a>. I'm running Arch Linux and have installed capnp from the AUR and compiled capnpc-rust from the github project and put it in <code>/usr/local/bin</code>. I can manually compile the .capnp file easily with the command </p>\n\n<pre><code>capnp compile -orust --src-prefix=capnp capnp/message.capnp\n</code></pre>\n\n<p>I tried cloning the capnpc project and compiling the .capnp test file in the test directory and that didn't work either. I'm not getting any errors (whereas earlier I was getting \"File not found\") so it seems like capnpc is working, but I can't find files anywhere.</p>\n\n<p>build.rs</p>\n\n<pre><code>extern crate capnpc;\nfn main() {\n    ::capnpc::compile(\"capnp\", &amp;[\"capnp/message.capnp\"]).unwrap();\n}\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>...\nbuild = \"build.rs\"\n\n[lib]\nname = \"rustp2p\"\npath = \"src/lib.rs\"\n\n[build-dependencies]\ncapnpc = \"*\"\n\n[dependencies]\ncapnp = \"0.5.0\"\n</code></pre>\n\n<p>Edit: .rs file builds out into /target/debug/build/.../out.</p>\n"}, {"tags": ["types", "rust", "linear-search"], "answers": [{"comments": [{"owner": {"reputation": 509, "user_id": 3419211, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000859618233/picture?type=large", "display_name": "user3419211", "link": "https://stackoverflow.com/users/3419211/user3419211"}, "edited": false, "score": 0, "creation_date": 1446035556, "post_id": 33390479, "comment_id": 54573750, "body": "Thank you both, in this case Option looks cleaner, but if i understand it right: with enum you have more options"}, {"owner": {"reputation": 874, "user_id": 3842022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71d9729ff4035657e7d6366611c28614?s=128&d=identicon&r=PG&f=1", "display_name": "C. Quilley", "link": "https://stackoverflow.com/users/3842022/c-quilley"}, "reply_to_user": {"reputation": 509, "user_id": 3419211, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000859618233/picture?type=large", "display_name": "user3419211", "link": "https://stackoverflow.com/users/3419211/user3419211"}, "edited": false, "score": 5, "creation_date": 1446035921, "post_id": 33390479, "comment_id": 54573964, "body": "@user3419211 in your case you should definitely use <code>Option</code>. The raw enum has more options (and can be nested, etc) but <code>Option</code> is in the standard library and it&#39;s use there matches your use case exactly."}], "tags": [], "owner": {"reputation": 874, "user_id": 3842022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71d9729ff4035657e7d6366611c28614?s=128&d=identicon&r=PG&f=1", "display_name": "C. Quilley", "link": "https://stackoverflow.com/users/3842022/c-quilley"}, "is_accepted": false, "score": 6, "last_activity_date": 1446034775, "last_edit_date": 1446034775, "creation_date": 1446033611, "answer_id": 33390479, "question_id": 33390395, "link": "https://stackoverflow.com/questions/33390395/can-a-function-return-different-types-depending-on-conditional-statements-in-the/33390479#33390479", "title": "Can a function return different types depending on conditional statements in the function?", "body": "<p>The precise type must be known at compile time (and is subsequently erased). You cannot decide arbitrarily which types to return at runtime.</p>\n\n<p>However, you can do you've tried to do, by wrapping the types into a generic enum (which replaces the <code>||</code> in your code):</p>\n\n<pre><code>enum TypeOr&lt;S, T&gt; {\n    Left(S),\n    Right(T),\n}\n\nfn linear_search(vector: ...) -&gt; TypeOr&lt;i32, bool&gt; { //...\n</code></pre>\n\n<p>The downside is that you must unwrap the value from the enum before you can do anything else with the result. However, this isn't so arduous in practice.</p>\n\n<p>This is essentially a generalised version of the commonly used <code>Option</code> and <code>Result</code> types.</p>\n\n<p>Edit: In fact, in your case, you are served very nicely by the semantics of the <code>Option</code> type: you never return <code>true</code>, so you may equate the <code>None</code> result with the <code>false</code> result your function returns, and this captures the idea you're trying to express: either your linear search finds the target and returns it (<code>Some(found)</code>), or it does not, and has nothing to return (<code>None</code>).</p>\n"}], "owner": {"reputation": 509, "user_id": 3419211, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000859618233/picture?type=large", "display_name": "user3419211", "link": "https://stackoverflow.com/users/3419211/user3419211"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1853, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1446034775, "creation_date": 1446033329, "question_id": 33390395, "link": "https://stackoverflow.com/questions/33390395/can-a-function-return-different-types-depending-on-conditional-statements-in-the", "title": "Can a function return different types depending on conditional statements in the function?", "body": "<p>I was wondering if it was possible to return different types depending on the conditions in the function:\nThis code will work if you remove '|| bool' and the 'if/else' statements.</p>\n\n<p>Thanks in advance.</p>\n\n<pre><code>fn main() {\n    let vector: Vec&lt;i32&gt; = vec![0, 2, 5, 8, 9];\n    let targetL i32 = 3;\n    let found_item = linear_search(vector, target);\n    println!(\"{}\", &amp;found_item);\n}\nfn linear_search(vector: Vec&lt;i32&gt;, target: i32) -&gt; i32 || bool {\n    let mut found: i32 = 0;\n    for item in vector {\n        if item == target {\n            found = item;\n            break\n        }\n    }\n    if found == 0 {\n        false\n    } else {\n        found\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "iron"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1446025351, "post_id": 33387326, "comment_id": 54567305, "body": "This sounds like it&#39;s unrelated to Rust or Iron: if all you&#39;re doing is dumping Markdown into HTML, then paragraph breaks won&#39;t show because HTML doesn&#39;t interpret newlines (outside of preformatted text elements).  <code>read_to_end</code> absolutely does not &quot;ignore&quot; whitespace or anything else."}, {"owner": {"reputation": 281, "user_id": 2150877, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0bcbfac01034df1d541bd732e3555b1?s=128&d=identicon&r=PG", "display_name": "NecroTechno", "link": "https://stackoverflow.com/users/2150877/necrotechno"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1446025686, "post_id": 33387326, "comment_id": 54567502, "body": "I tried adding &lt;/br&gt; to each newline, but all it did was show the tags. Is there another workaround?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1446029659, "post_id": 33387326, "comment_id": 54570081, "body": "Did you set the <code>Content-Type</code> header to <code>text&#47;html</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446047906, "post_id": 33387326, "comment_id": 54582896, "body": "Have you tried replacing <code>read_to_end</code> with a hard coded chunk of data? Something like <code>fn read_file() -&gt; String { &quot;hello\\nworld\\nI\\nam\\ntext&quot;.into() }</code>.  You might as well use <code>read_to_string</code> as it combines two of your lines. <code>read_to_end</code>  isn&#39;t part of the Rust <i>compiler</i>. This is just part of the <i>standard library</i>."}, {"owner": {"reputation": 281, "user_id": 2150877, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0bcbfac01034df1d541bd732e3555b1?s=128&d=identicon&r=PG", "display_name": "NecroTechno", "link": "https://stackoverflow.com/users/2150877/necrotechno"}, "edited": false, "score": 0, "creation_date": 1446264258, "post_id": 33387326, "comment_id": 54683770, "body": "It was actually an issue with Handlebars-rust and not interpreting the string correctly. Thanks everyone for your suggestions."}], "owner": {"reputation": 281, "user_id": 2150877, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0bcbfac01034df1d541bd732e3555b1?s=128&d=identicon&r=PG", "display_name": "NecroTechno", "link": "https://stackoverflow.com/users/2150877/necrotechno"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1446034105, "creation_date": 1446024576, "last_edit_date": 1446034105, "question_id": 33387326, "link": "https://stackoverflow.com/questions/33387326/readread-to-end-ignores-whitespace-when-reading-markdown", "title": "Read::read_to_end ignores whitespace when reading markdown", "body": "<p>My function is as follows:</p>\n\n<pre><code>fn read_file () -&gt; String {\n  let mut file = File::open(\"./assets/postdata/lorem_ipsum.md\").unwrap();\n  let mut buffer = Vec::new();\n  let read_variable = file.read_to_end(&amp;mut buffer).unwrap();\n  let filestr = String::from_utf8(buffer).unwrap();\n\n  return filestr;\n}\n</code></pre>\n\n<p>The file is a markdown file with four paragraphs of lorem ipsum text. This function, when called by a handlebars record generator, prints to a webpage producing a wall of text. I'm obviously missing something; how can I make the Rust compiler recognise the whitespace?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1445973635, "post_id": 33376486, "comment_id": 54547284, "body": "AFAIK, no. You can implement one trait with all your methods though."}], "answers": [{"comments": [{"owner": {"reputation": 317, "user_id": 4622121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01995df2ff53c367948c2a6a9545b745?s=128&d=identicon&r=PG", "display_name": "tsujin", "link": "https://stackoverflow.com/users/4622121/tsujin"}, "edited": false, "score": 0, "creation_date": 1445990807, "post_id": 33378549, "comment_id": 54555157, "body": "Awesome, thanks for the explanation. I had no idea about extension traits. Maybe I can suggest to get it added to the <a href=\"https://doc.rust-lang.org/book/traits.html\" rel=\"nofollow noreferrer\">book</a>, as this is the first place I checked to no avail."}, {"owner": {"reputation": 3495, "user_id": 7061265, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-8U6t4VlFL6o/AAAAAAAAAAI/AAAAAAAAADo/zCmKSPe3NEw/photo.jpg?sz=128", "display_name": "Dev Aggarwal", "link": "https://stackoverflow.com/users/7061265/dev-aggarwal"}, "edited": false, "score": 0, "creation_date": 1598419376, "post_id": 33378549, "comment_id": 112449008, "body": "Is there any way to avoid the 2 sources of truth when it comes to the method signature for double() ? Seems a little weird to declare the same type signature twice!"}, {"owner": {"reputation": 309, "user_id": 2038713, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FQjD8.png?s=128&g=1", "display_name": "6005", "link": "https://stackoverflow.com/users/2038713/6005"}, "reply_to_user": {"reputation": 3495, "user_id": 7061265, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-8U6t4VlFL6o/AAAAAAAAAAI/AAAAAAAAADo/zCmKSPe3NEw/photo.jpg?sz=128", "display_name": "Dev Aggarwal", "link": "https://stackoverflow.com/users/7061265/dev-aggarwal"}, "edited": false, "score": 0, "creation_date": 1607453101, "post_id": 33378549, "comment_id": 115275698, "body": "@DevAggarwal I doubt it: in Rust both a trait and its implementation have to include the type signature (and they must match)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 27, "last_activity_date": 1531576073, "last_edit_date": 1531576073, "creation_date": 1445980343, "answer_id": 33378549, "question_id": 33376486, "link": "https://stackoverflow.com/questions/33376486/is-there-a-way-other-than-traits-to-add-methods-to-a-type-i-dont-own/33378549#33378549", "title": "Is there a way other than traits to add methods to a type I don&#39;t own?", "body": "<p>As of Rust 1.27, no, there is no other way. It's not possible to define inherent methods on a type defined in another crate. </p>\n\n<p>You can define your own trait with the methods you need, then implement that trait for an external type. This pattern is known as <em>extension traits</em>. The name of extension traits, by convention, ends with <code>Ext</code>, to indicate that this trait is not meant to be used as a generic bound or as a trait object. <a href=\"http://doc.rust-lang.org/stable/std/?search=trait%3AExt\" rel=\"noreferrer\">There are a few examples in the standard library.</a></p>\n\n<pre><code>trait DoubleExt {\n    fn double(&amp;self) -&gt; Self;\n}\n\nimpl DoubleExt for i32 {\n    fn double(&amp;self) -&gt; Self {\n        *self * 2\n    }\n}\n\nfn main() {\n    let a = 42;\n    println!(\"{}\", 42.double());\n}\n</code></pre>\n\n<p>Other libraries can also export extension traits (example: <a href=\"http://burntsushi.net/rustdoc/byteorder/?search=trait%3AExt\" rel=\"noreferrer\">byteorder</a>). However, as for any other trait, you need to bring the trait's methods in scope with <code>use SomethingExt;</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": false, "score": 4, "last_activity_date": 1445980484, "creation_date": 1445980484, "answer_id": 33378593, "question_id": 33376486, "link": "https://stackoverflow.com/questions/33376486/is-there-a-way-other-than-traits-to-add-methods-to-a-type-i-dont-own/33378593#33378593", "title": "Is there a way other than traits to add methods to a type I don&#39;t own?", "body": "<p>No. Currently, the only way to write new methods for a type that has been defined in another crate is through traits. However, this seems too cumbersome as you have to write the both the trait definition and the implementation.</p>\n\n<p>In my opinion, the way to go is to use free functions instead of methods. This would at least avoid the duplication caused by traits.</p>\n"}], "owner": {"reputation": 317, "user_id": 4622121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01995df2ff53c367948c2a6a9545b745?s=128&d=identicon&r=PG", "display_name": "tsujin", "link": "https://stackoverflow.com/users/4622121/tsujin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4863, "favorite_count": 3, "accepted_answer_id": 33378549, "answer_count": 2, "score": 26, "last_activity_date": 1531576073, "creation_date": 1445972690, "last_edit_date": 1531575950, "question_id": 33376486, "link": "https://stackoverflow.com/questions/33376486/is-there-a-way-other-than-traits-to-add-methods-to-a-type-i-dont-own", "title": "Is there a way other than traits to add methods to a type I don&#39;t own?", "body": "<p>I'm trying to extend the <a href=\"http://docs.piston.rs/graphics/graphics/grid/struct.Grid.html\" rel=\"noreferrer\"><code>Grid</code></a> struct from the piston-2dgraphics library. There's no method for getting the location on the window of a particular cell, so I implemented a trait to calculate that for me. Then, I wanted a method to calculate the neighbours of a particular cell on the grid, so I implemented another trait.</p>\n\n<p>Something about this is ugly and feels unnecessary seeing as how I'll likely never use these traits for anything other than this specific grid structure. Is there another way in Rust to extend a type without having to implement traits each time?</p>\n"}, {"tags": ["vector", "rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1445964836, "creation_date": 1445964836, "answer_id": 33373935, "question_id": 33373239, "link": "https://stackoverflow.com/questions/33373239/is-there-a-more-friendly-refcell-like-object/33373935#33373935", "title": "Is there a more friendly RefCell-like object?", "body": "<p><code>RefCell</code> is not designed for long-lived borrows. The typical use case is that in a function, you'll borrow the <code>RefCell</code> (either mutably or immutably), work with the value, then release the borrow before returning. I'm curious to know how you're hoping to recover from a borrowed <code>RefCell</code> in a single-threaded context.</p>\n\n<p>The thread-safe equivalent to <code>RefCell</code> is <a href=\"http://doc.rust-lang.org/stable/std/sync/struct.RwLock.html\" rel=\"nofollow\"><code>RwLock</code></a>. It has <code>try_read</code> and <code>try_write</code> functions that do not block or panic if an incompatible lock is still acquired (on any thread, including the current thread). Contrarily to <code>RefCell</code>, it makes sense to just retry later if locking a <code>RwLock</code> fails, since another thread might just happen to have locked it at the same time.</p>\n\n<p>If you end up always using <code>write</code> or <code>try_write</code>, and never <code>read</code> or <code>try_read</code>, then you should probably use the simpler <a href=\"http://doc.rust-lang.org/stable/std/sync/struct.Mutex.html\" rel=\"nofollow\"><code>Mutex</code></a> instead.</p>\n"}, {"tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": false, "score": 1, "last_activity_date": 1445971466, "creation_date": 1445971466, "answer_id": 33376102, "question_id": 33373239, "link": "https://stackoverflow.com/questions/33373239/is-there-a-more-friendly-refcell-like-object/33376102#33376102", "title": "Is there a more friendly RefCell-like object?", "body": "<pre><code>#![feature(borrow_state)]\nuse std::cell::{RefCell, RefMut, BorrowState};\n\nstruct LendingLibrary&lt;T&gt; {\n    items: Vec&lt;RefCell&lt;T&gt;&gt;\n}\n\nimpl&lt;T&gt; LendingLibrary&lt;T&gt; {\n    fn new(items: Vec&lt;T&gt;) -&gt; LendingLibrary&lt;T&gt; {\n        LendingLibrary {\n            items: items.into_iter().map(|e| RefCell::new(e)).collect()\n        }\n    }\n\n    fn get(&amp;self, item: usize) -&gt; Option&lt;RefMut&lt;T&gt;&gt; {\n        self.items.get(item)\n            .and_then(|cell| match cell.borrow_state() {\n                BorrowState::Unused =&gt; Some(cell.borrow_mut()),\n                _ =&gt; None\n            })\n    }\n}\n\nfn main() {\n    let lib = LendingLibrary::new(vec![1, 2, 3]);\n\n    let a = lib.get(0); // Some\n    let b = lib.get(1); // Some\n\n    let a2 = lib.get(0); // None\n}\n</code></pre>\n\n<p>This currently requires a nightly release to work.</p>\n"}], "owner": {"reputation": 485, "user_id": 5350761, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-0vaJdsJ7fXw/AAAAAAAAAAI/AAAAAAAAD9s/pdF45XCQLN4/photo.jpg?sz=128", "display_name": "Jackson Loper", "link": "https://stackoverflow.com/users/5350761/jackson-loper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 33373935, "answer_count": 2, "score": 5, "last_activity_date": 1445971466, "creation_date": 1445962923, "last_edit_date": 1445966769, "question_id": 33373239, "link": "https://stackoverflow.com/questions/33373239/is-there-a-more-friendly-refcell-like-object", "title": "Is there a more friendly RefCell-like object?", "body": "<p>I'm looking for a class much like <code>Vec&lt;RefCell&lt;T&gt;&gt;</code>, in that it is the ultimate owner &amp; allocator of all of its data, yet different pieces of the array can be be mutably borrowed by multiple parties indefinitely.  </p>\n\n<p>I emphasize <strong>indefinitely</strong> because of course pieces of <code>Vec&lt;T&gt;</code> can also be mutably borrowed by multiple parties, but doing so involves making a split which can only be resolved after the parties are done borrowing.</p>\n\n<p><code>Vec&lt;RefCell&lt;T&gt;&gt;</code> seems to be a world of danger and many ugly <code>if</code> statements checking <code>borrow_state</code>, which seems to be <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.borrow_state\" rel=\"nofollow\">unstable</a>.  If you do something wrong, then kablammo!  Panic!  This is not what a lending library is like.  In a lending library, if you ask for a book that isn't there, they tell you \"Oh, it's checked out.\"  Nobody dies in an explosion.  </p>\n\n<p>So I would like to write code something like this:</p>\n\n<pre><code>let mut a = LendingLibrary::new();\na.push(Foo{x:10});\na.push(Foo{x:11});\nlet b1 = a.get(0); // &lt;-- b1 is an Option&lt;RefMut&lt;Foo&gt;&gt;\nlet b2 = a.get(1); // &lt;-- b2 is an Option&lt;RefMut&lt;Foo&gt;&gt;\n\n// the 0th element has already been borrowed, so...\nlet b3 = a.get(0); // &lt;-- b3 is Option::None \n</code></pre>\n\n<p>Does such a thing exist?  Or is there another canonical way to get this kind of behavior?  A kind of \"friendly RefCell\"? </p>\n\n<p>If the answer happens to be yes, is there also a threadsafe variant?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 4, "creation_date": 1445944151, "post_id": 33364403, "comment_id": 54527242, "body": "I believe this may be <a href=\"https://github.com/rust-lang/rust/issues/22557\" rel=\"nofollow noreferrer\">#22557</a>: i.e. it&#39;s a bug that the compiler isn&#39;t quite connecting the dots fully."}, {"owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "edited": false, "score": 2, "creation_date": 1520066923, "post_id": 33364403, "comment_id": 85170002, "body": "The code compiles fine as of Rust 1.23, released Jan 4, 2018."}], "answers": [{"tags": [], "owner": {"reputation": 848, "user_id": 8195987, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9550984d8633cb6f1b538445082dd400?s=128&d=identicon&r=PG&f=1", "display_name": "Angelicos Phosphoros", "link": "https://stackoverflow.com/users/8195987/angelicos-phosphoros"}, "is_accepted": false, "score": 1, "last_activity_date": 1608842395, "creation_date": 1608842395, "answer_id": 65443059, "question_id": 33364403, "link": "https://stackoverflow.com/questions/33364403/closures-and-higher-ranked-trait-bounds-lifetime-issue/65443059#65443059", "title": "Closures and Higher-Ranked-Trait-Bounds lifetime issue", "body": "<p>At current version of Rust this compiles without warnings:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;T&gt;(_: &amp;T) where\nT: for&lt;'a&gt; Fn(&amp;'a str) -&gt; &amp;'a str\n{\n}\n\nfn main() {\n    foo(&amp;|s: &amp;str| s); // explicitly specified parameter type\n}\n</code></pre>\n"}], "owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 345, "favorite_count": 0, "answer_count": 1, "score": 14, "last_activity_date": 1608842395, "creation_date": 1445938831, "last_edit_date": 1445941972, "question_id": 33364403, "link": "https://stackoverflow.com/questions/33364403/closures-and-higher-ranked-trait-bounds-lifetime-issue", "title": "Closures and Higher-Ranked-Trait-Bounds lifetime issue", "body": "<p>I am experimenting with higher-ranked-trait bounds. In a minimal example, I created, there is a function taking a closure which takes a <code>&amp;str</code> and returning a <code>&amp;str</code> of the same lifetime <code>'a</code>. I explicitly declared the lifetimes on the <code>Fn</code> trait.</p>\n\n<pre><code>fn foo(_: &amp;for&lt;'a&gt; Fn(&amp;'a str) -&gt; &amp;'a str) {\n}\n\nfn main() {\n    foo(&amp;|s| s);\n}\n</code></pre>\n\n<p>This works fine. If I annotate the type of the parameter in the closure to be of type <code>&amp;str</code>, I receive a lifetime error:</p>\n\n<pre><code>fn foo(_: &amp;for&lt;'a&gt; Fn(&amp;'a str) -&gt; &amp;'a str) {\n}\n\nfn main() {\n    foo(&amp;|s: &amp;str| s); // explicitly specified parameter type\n}\n</code></pre>\n\n<p>That confuses me. For several reasons.</p>\n\n<ul>\n<li>Isn't the return type of the closure inferred to be of the same type as the\nparameter (with the same lifetime via lifetime elision)?</li>\n<li>The argument of <code>foo</code> is univerally quantified over all possible\nlifetimes. Why can't the type of the lifetime be arbitrary? Isn't\n<code>'a</code> just a placeholder for some lifetime?</li>\n</ul>\n\n<p>It works without specifying the type explicitly, but why? How are those two versions different?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3755770b83fdfe3581b3&amp;version=nightly\">playpen code</a></p>\n"}, {"tags": ["multithreading", "http", "server", "rust", "apachebench"], "comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1445930157, "post_id": 33360721, "comment_id": 54518981, "body": "BTW, your content length is not 5, it&#39;s 7 (you missed last \\r\\n). But it is unlikely that this is the reason of the error, I think..."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1445936288, "post_id": 33360721, "comment_id": 54521969, "body": "can you try running it in verbose mode (adding the <code>-v</code> flag to the command line)? It&#39;s curious that 2/3 of the requests fail... If all of them failed I&#39;d have understood..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445952573, "post_id": 33360721, "comment_id": 54533163, "body": "I&#39;d recommend against <code>use std::io::Result</code> as that will shadow the &quot;normal&quot; <code>Result</code> type. I&#39;d suggest <code>use std::io</code> and <code>io::Result</code> instead. Also, it&#39;s very rare to need to use <code>drop</code> explicitly. Values will be automatically dropped at the end of the scope they are defined in."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445954611, "post_id": 33360721, "comment_id": 54534653, "body": "You should also create an <a href=\"/help/mcve\">MCVE</a> when asking a question. For example, <a href=\"http://is.gd/uhBwAY\" rel=\"nofollow noreferrer\">this version</a> uses <b>no threading</b> but has the same problem when run with <code>ab -c 1 -n 5000</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445955104, "post_id": 33360721, "comment_id": 54535017, "body": "Additionally, cURL occasionally reports the same &quot;connection reset&quot; error, so it&#39;s nothing specific to apachebench."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445956741, "post_id": 33360721, "comment_id": 54536189, "body": "<a href=\"https://github.com/rust-lang/rust/issues/18847\" rel=\"nofollow noreferrer\">This Rust bug</a> might potentially be of interest."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445953743, "post_id": 33363583, "comment_id": 54534013, "body": "This seems awfully suspicious. It would be a pretty bad design for the <code>Drop</code> implementation to not close the TCP connection in the proper way."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445954985, "post_id": 33363583, "comment_id": 54534945, "body": "If it wouldn&#39;t do that it might take arbitrarily long for the <code>Drop::drop</code> call to finish. Neither behavior is perfect, but this way it&#39;s deterministic."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445955178, "post_id": 33363583, "comment_id": 54535064, "body": "So how is one supposed to properly close the socket, respecting TCP?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445957330, "post_id": 33363583, "comment_id": 54536645, "body": "just as shown in the question: by calling <a href=\"https://doc.rust-lang.org/stable/std/net/struct.TcpStream.html#method.shutdown\" rel=\"nofollow noreferrer\">shutdown</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445957692, "post_id": 33363583, "comment_id": 54536911, "body": "Adding <code>shutdown</code> and <code>flush</code> did not fix the error for me. I added another answer."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446020094, "post_id": 33363583, "comment_id": 54564270, "body": "did not fix the <code>Connection reset by peer</code> error or the 2/3 failure chance?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446030294, "post_id": 33363583, "comment_id": 54570441, "body": "Did not fix the <code>connection reset by peer</code>. I am on OS X, what are you on? Can you post the code you used that worked with apachebench?"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 1, "last_activity_date": 1445936515, "creation_date": 1445936515, "answer_id": 33363583, "question_id": 33360721, "link": "https://stackoverflow.com/questions/33360721/connection-reset-by-peer-when-benchmarking-a-simple-rust-http-server-with-ab/33363583#33363583", "title": "&quot;Connection reset by peer&quot; when benchmarking a simple Rust HTTP server with ab", "body": "<p>The <a href=\"https://doc.rust-lang.org/stable/std/net/struct.TcpStream.html\" rel=\"nofollow\">documentation of TcpStream</a> states that </p>\n\n<blockquote>\n  <p>The socket will be closed when the value is dropped.</p>\n</blockquote>\n\n<p>Since your function ends without properly shutting down the TCP-stream but simply by closing the socket, you get the <code>Connection reset by peer</code> error. A full TCP-shutdown requires multiple messages to be sent in both directions. This obviously can't happen anymore since the socket was closed.</p>\n\n<p>I don't have an answer for your second question. Also, on stackoverflow you should only ask one question per question.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1445966866, "last_edit_date": 1445966866, "creation_date": 1445957638, "answer_id": 33371232, "question_id": 33360721, "link": "https://stackoverflow.com/questions/33360721/connection-reset-by-peer-when-benchmarking-a-simple-rust-http-server-with-ab/33371232#33371232", "title": "&quot;Connection reset by peer&quot; when benchmarking a simple Rust HTTP server with ab", "body": "<p>I believe the problem is that you are not fully reading the data sent <em>from the client</em>, so the client never has a chance to transition to reading the response. When it tries to write more data, it notices the socket has been closed and fails.</p>\n\n<p>I've augmented your example to read all the HTTP headers before replying, ignoring any request body. I'm punting on pretty error handling and just panicking if there are errors:</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::io::BufReader;\nuse std::net::{TcpListener, TcpStream};\nuse std::thread;\n\nfn handle_client(mut stream: TcpStream) {\n    // Read all the headers\n    for header in BufReader::new(&amp;mut stream).lines() {\n        let header = header.unwrap();\n        if header == \"\\r\" { break }\n    }\n\n    // Write our response\n    stream.write_all(b\"HTTP/1.0 200 OK\\r\\n\\r\\n\").unwrap();\n}\n\nfn main() {\n    let listener = TcpListener::bind(\"127.0.0.1:8080\").unwrap();\n\n    for stream in listener.incoming() {\n        let stream = stream.unwrap();\n        thread::spawn(|| {\n            handle_client(stream);\n        });\n    }\n}\n</code></pre>\n\n<p>This works with <code>ab -c 50 -n 5000 http://127.0.0.1:8080/</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Benchmarking 127.0.0.1 (be patient)\nCompleted 500 requests\nCompleted 1000 requests\nCompleted 1500 requests\nCompleted 2000 requests\nCompleted 2500 requests\nCompleted 3000 requests\nCompleted 3500 requests\nCompleted 4000 requests\nCompleted 4500 requests\nCompleted 5000 requests\nFinished 5000 requests\n\n\nServer Software:\nServer Hostname:        127.0.0.1\nServer Port:            8080\n\nDocument Path:          /\nDocument Length:        0 bytes\n\nConcurrency Level:      50\nTime taken for tests:   1.293 seconds\nComplete requests:      5000\nFailed requests:        0\nTotal transferred:      95000 bytes\nHTML transferred:       0 bytes\nRequests per second:    3868.22 [#/sec] (mean)\nTime per request:       12.926 [ms] (mean)\nTime per request:       0.259 [ms] (mean, across all concurrent requests)\nTransfer rate:          71.77 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        1    6   1.7      6      14\nProcessing:     1    6   1.7      6      14\nWaiting:        1    6   1.7      6      14\nTotal:          5   13   2.6     12      23\n\nPercentage of the requests served within a certain time (ms)\n  50%     12\n  66%     13\n  75%     13\n  80%     14\n  90%     17\n  95%     19\n  98%     21\n  99%     22\n 100%     23 (longest request)\n</code></pre>\n"}], "owner": {"reputation": 2003, "user_id": 457586, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/8fced1b618d6b8a714c598d3f8f7d9fe?s=128&d=identicon&r=PG", "display_name": "dynamitereed", "link": "https://stackoverflow.com/users/457586/dynamitereed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2035, "favorite_count": 1, "accepted_answer_id": 33371232, "answer_count": 2, "score": 9, "last_activity_date": 1445966866, "creation_date": 1445924875, "last_edit_date": 1445952383, "question_id": 33360721, "link": "https://stackoverflow.com/questions/33360721/connection-reset-by-peer-when-benchmarking-a-simple-rust-http-server-with-ab", "title": "&quot;Connection reset by peer&quot; when benchmarking a simple Rust HTTP server with ab", "body": "<p>I'm trying to write an extremely simple concurrent server in Rust to play with the language's concurrency primitives and its threading model.  Here's my code:</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::io::Result;\nuse std::net::{TcpListener, TcpStream, Shutdown};\nuse std::sync::{Arc, Mutex};\nuse std::thread;\n\nfn handle_client(mut stream: TcpStream) -&gt; Result&lt;()&gt; {\n    try!(stream.write(b\"HTTP/1.0 200 OK\\r\\nContent-Type: text/plain\\r\\nContent-Length: 5\\r\\n\\r\\nPong!\\r\\n\"));\n    // try!(stream.shutdown(Shutdown::Both));\n\n    Ok(())\n}\n\nfn main() {\n    let listener = TcpListener::bind(\"127.0.0.1:1337\").unwrap();\n    // let count = Arc::new(Mutex::new(0));\n\n    for stream in listener.incoming() {\n        match stream {\n            Ok(stream) =&gt; {\n                // let count = count.clone();\n                thread::spawn(move || {\n                    let _ = handle_client(stream);\n\n                    // let mut count = count.lock().unwrap();\n                    // *count += 1;\n                    // println!(\"{:?}\", *count);\n                });\n            }\n            Err(e) =&gt; {\n                println!(\"Error: {}\", e);\n            }\n        }\n    }\n\n    drop(listener);\n}\n</code></pre>\n\n<p>When I run <code>ab -c 100 -n 100 http://127.0.0.1:1337/</code> with the program running as listed above, I get <code>apr_socket_recv: Connection reset by peer (104)</code> almost immediately.  Why?</p>\n\n<p>When I add <code>try!(stream.shutdown(Shutdown::Both));</code> (commented out near the top, above) I no longer get the <code>apr_socket_recv</code> error like before, but apachebench gives me results that say 199 failed requests due to exceptions.  Why?  What am I doing wrong?</p>\n\n<pre><code>Concurrency Level:      100\nTime taken for tests:   0.008 seconds\nComplete requests:      100\nFailed requests:        199\n   (Connect: 0, Receive: 0, Length: 0, Exceptions: 199)\nTotal transferred:      500 bytes\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 0, "creation_date": 1445924770, "post_id": 33359511, "comment_id": 54516947, "body": "Can you explain your first example in comparison with the OP&#39;s code? How exactly is it different and where does Copy come into play here?"}, {"owner": {"reputation": 38714, "user_id": 45668, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/d4288118e4836464de401d53b60466dd?s=128&d=identicon&r=PG", "display_name": "Malcolm", "link": "https://stackoverflow.com/users/45668/malcolm"}, "reply_to_user": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 1, "creation_date": 1445934780, "post_id": 33359511, "comment_id": 54521168, "body": "@JimmyCuadra In the OP&#39;s code <code>last_value()</code> gets matched against <code>last_value</code>. Since <code>last_value()</code> returns a reference, <code>last_value</code> becomes a reference too. However, Francis changed the pattern to <code>&amp;last_value</code>, so the reference matches the <code>&amp;</code>, and the value itself matches <code>last_value</code> and therefore is copied by value. This is called destructuring."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 9, "last_activity_date": 1550153752, "last_edit_date": 1550153752, "creation_date": 1445916758, "answer_id": 33359511, "question_id": 33359426, "link": "https://stackoverflow.com/questions/33359426/pushing-something-into-a-vector-depending-on-its-last-element/33359511#33359511", "title": "Pushing something into a vector depending on its last element", "body": "<h1>After Non-Lexical Lifetimes</h1>\n\n<p>Your original code <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=307ec646a197c8bae870f26cd9e7904c\" rel=\"nofollow noreferrer\">works as-is in Rust 2018</a>, which enables <a href=\"https://stackoverflow.com/q/50251487/155423\">non-lexical-lifetimes</a>:</p>\n\n<pre><code>fn main() {\n    let mut vector: Vec&lt;i32&gt; = Vec::new();\n\n    if let Some(last_value) = vector.last() {\n        vector.push(*last_value + 1);\n    }\n}\n</code></pre>\n\n<p>The borrow checker has been improved to realize that the reference in <code>last_value</code> does not overlap with the mutable borrow of <code>vector</code> needed to push a new value in.</p>\n\n<p>See <a href=\"https://stackoverflow.com/q/38023871/155423\">Returning a reference from a HashMap or Vec causes a borrow to last beyond the scope it&#39;s in?</a> for a similar case that the borrow checker is not yet smart enough to deal with (as of Rust 1.32).</p>\n\n<h1>Before Non-Lexical Lifetimes</h1>\n\n<p>The result of <code>vector.last()</code> is an <code>Option&lt;&amp;i32&gt;</code>. The reference in that value keeps the vector borrowed. We need to get rid of all references into the vector before we can push to it.</p>\n\n<p>If your vector contains <code>Copy</code>able values, copy the value out of the vector to end the borrow sooner.</p>\n\n<pre><code>fn main() {\n    let mut vector: Vec&lt;i32&gt; = Vec::new();\n\n    if let Some(&amp;last_value) = vector.last() {\n        vector.push(last_value + 1);\n    }\n}\n</code></pre>\n\n<p>Here, I've used the pattern <code>Some(&amp;last_value)</code> instead of <code>Some(last_value)</code>. This <em>destructures</em> the reference and forces a copy. If you try this pattern with a type that isn't <code>Copy</code>able, you'll get a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:4:17\n  |\n4 |     if let Some(&amp;last_value) = vector.last() {\n  |                 ^----------\n  |                 ||\n  |                 |hint: to prevent move, use `ref last_value` or `ref mut last_value`\n  |                 cannot move out of borrowed content\n</code></pre>\n\n<p>If your vector does not contain <code>Copy</code>able types, you might want to clone the value first:</p>\n\n<pre><code>fn main() {\n    let mut vector: Vec&lt;String&gt; = Vec::new();\n\n    if let Some(last_value) = vector.last().cloned() {\n        vector.push(last_value + \"abc\");\n    }\n}\n</code></pre>\n\n<p>Or you can transform the value in another way such that the <code>.map()</code> call returns a value that doesn't borrow from the vector.</p>\n\n<pre><code>fn main() {\n    let mut vector: Vec&lt;String&gt; = Vec::new();\n\n    if let Some(last_value) = vector.last().map(|v| v.len().to_string()) {\n        vector.push(last_value);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 483, "user_id": 10489834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae6ed1c791725afc74bd02750367c43e?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan Pfeifer", "link": "https://stackoverflow.com/users/10489834/stefan-pfeifer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1933, "favorite_count": 0, "accepted_answer_id": 33359511, "answer_count": 1, "score": 7, "last_activity_date": 1550153752, "creation_date": 1445916134, "last_edit_date": 1550153344, "question_id": 33359426, "link": "https://stackoverflow.com/questions/33359426/pushing-something-into-a-vector-depending-on-its-last-element", "title": "Pushing something into a vector depending on its last element", "body": "<p>I would like to get the last element of a vector and use it to determine the next element to push in. Here's an example how it doesn't work, but it shows what I'm trying to achieve:</p>\n\n<pre><code>let mut vector: Vec&lt;i32&gt; = Vec::new();\n\nif let Some(last_value) = vector.last() {\n    vector.push(*last_value + 1);\n}\n</code></pre>\n\n<p>I can't use <code>push</code> while the vector is also borrowed immutably:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `vector` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:5:9\n  |\n4 |     if let Some(last_value) = vector.last() {\n  |                               ------ immutable borrow occurs here\n5 |         vector.push(*last_value + 1);\n  |         ^^^^^^ mutable borrow occurs here\n6 |     }\n  |     - immutable borrow ends here\n</code></pre>\n\n<p>What would be a good way to do this?</p>\n"}, {"tags": ["rust", "apache-kafka", "kafka-consumer-api"], "comments": [{"owner": {"reputation": 503, "user_id": 4559989, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh5.googleusercontent.com/-eRpedyCStI0/AAAAAAAAAAI/AAAAAAAAAB4/MKAPxowX8ZA/photo.jpg?sz=128", "display_name": "coco", "link": "https://stackoverflow.com/users/4559989/coco"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445919914, "post_id": 33357889, "comment_id": 54515331, "body": "@Shepmaster Thanks for the heads up, I revised my question."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 2, "creation_date": 1445935751, "post_id": 33357889, "comment_id": 54521664, "body": "These issues are actually the very basis of Rust: ownership. Please read the other stackoverflow issues that have the <code>use of moved value</code> error and read the book&#39;s chapter on ownership: <a href=\"https://doc.rust-lang.org/stable/book/ownership.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/book/ownership.html</a>"}, {"owner": {"reputation": 503, "user_id": 4559989, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh5.googleusercontent.com/-eRpedyCStI0/AAAAAAAAAAI/AAAAAAAAAB4/MKAPxowX8ZA/photo.jpg?sz=128", "display_name": "coco", "link": "https://stackoverflow.com/users/4559989/coco"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1445977284, "post_id": 33357889, "comment_id": 54549318, "body": "@ker Thank you for your help!"}], "answers": [{"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1446019918, "post_id": 33377771, "comment_id": 54564185, "body": "please post an explanation about what&#39;s wrong in the question and why your solution is correct"}], "tags": [], "owner": {"reputation": 503, "user_id": 4559989, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh5.googleusercontent.com/-eRpedyCStI0/AAAAAAAAAAI/AAAAAAAAAB4/MKAPxowX8ZA/photo.jpg?sz=128", "display_name": "coco", "link": "https://stackoverflow.com/users/4559989/coco"}, "is_accepted": false, "score": 2, "last_activity_date": 1445977388, "creation_date": 1445977388, "answer_id": 33377771, "question_id": 33357889, "link": "https://stackoverflow.com/questions/33357889/consuming-multiple-kafka-topics-in-a-rust-consumer/33377771#33377771", "title": "Consuming multiple Kafka topics in a Rust consumer", "body": "<p>At the end, I changed the code like this and it works.</p>\n\n<pre><code>let msgs = client.fetch_messages_multi(...).unwrap();\nfor msg in msgs{\n     println!(\"{}\", msg.message);\n}\n</code></pre>\n"}], "owner": {"reputation": 503, "user_id": 4559989, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh5.googleusercontent.com/-eRpedyCStI0/AAAAAAAAAAI/AAAAAAAAAB4/MKAPxowX8ZA/photo.jpg?sz=128", "display_name": "coco", "link": "https://stackoverflow.com/users/4559989/coco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 866, "favorite_count": 2, "answer_count": 1, "score": 2, "last_activity_date": 1445977388, "creation_date": 1445905220, "last_edit_date": 1445919866, "question_id": 33357889, "link": "https://stackoverflow.com/questions/33357889/consuming-multiple-kafka-topics-in-a-rust-consumer", "title": "Consuming multiple Kafka topics in a Rust consumer", "body": "<p>I'm trying to use a Rust consumer to read from multiple topics. This is the code I have now:</p>\n\n<pre><code>extern crate kafka;\nuse kafka::client::KafkaClient;\nuse kafka::consumer::Consumer;\nuse kafka::utils;\nfn main(){\n    let mut client = KafkaClient::new(vec!(\"localhost:9092\".to_owned()));\n    let res = client.load_metadata_all();\n    let topics = client.topic_partitions.keys().cloned().collect(); \n    let offsets = client.fetch_offsets(topics, -1);\n    for topic in &amp;topics {\n    let mut con = Consumer::new(client, \"test-consumer-group\".to_owned(), \"topic\".to_owned()).partition(0);\n    let mut messagedata = 0;\n    for msg in con {\n        println!(\"{}\", str::from_utf8(&amp;msg.message).unwrap().to_string());\n    }\n  }\n}\n</code></pre>\n\n<p>below is the error:</p>\n\n<pre><code>    src/main.rs:201:19: 201:25 error: use of moved value: `topics` [E0382]\nsrc/main.rs:201     for topic in &amp;topics {\n                                  ^~~~~~\n    note: in expansion of for loop expansion\n    src/main.rs:201:5: 210:6 note: expansion site\n    src/main.rs:167:40: 167:46 note: `topics` moved here because it has type `collections::vec::Vec&lt;collections::string::String&gt;`, which is non-copyable\n    src/main.rs:167     let offsets = client.fetch_offsets(topics, -1);\n                                                       ^~~~~~\n    src/main.rs:203:37: 203:43 error: use of moved value: `client` [E0382]\n    src/main.rs:203     let mut con = Consumer::new(client, \"test-consumer-group\".to_owned(), \"topicname\".to_owned()).partition(0);\n                                                    ^~~~~~\n    note: in expansion of for loop expansion\n    src/main.rs:201:5: 210:6 note: expansion site\n    note: `client` was previously moved here because it has type     `kafka::client::KafkaClient`, which is non-copyable\n    error: aborting due to 2 previous errors\n</code></pre>\n\n<p>To better explain my question, here is my partial workable code for just one topic:</p>\n\n<pre><code>let mut con = Consumer::new(client, \"test-consumer-group\".to_owned(), \"testtopic\".to_owned()).partition(0);\n\nfor msg in con {\n    println!(\"{}\", str::from_utf8(&amp;msg.message).unwrap().to_string());\n}\n</code></pre>\n\n<p>And I tested the fetch_message function, it works for multiple topics, but the result I have (msgs) is Topicmessage, I don't know how to get message from Topicmessage.</p>\n\n<pre><code>let msgs = client.fetch_messages_multi(vec!(utils::TopicPartitionOffset{\n                                            topic: \"topic1\".to_string(),\n                                            partition: 0,\n                                            offset: 0 //from the begining\n                                            },\n                                        utils::TopicPartitionOffset{\n                                            topic: \"topic2\".to_string(),\n                                            partition: 0,\n                                            offset: 0\n                                        },\n                                        utils::TopicPartitionOffset{\n                                            topic: \"topic3\".to_string(),\n                                            partition: 0,\n                                            offset: 0\n                                        }));\nfor msg in msgs{\n    println!(\"{}\", msg);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1445888594, "post_id": 33354168, "comment_id": 54504138, "body": "@ArtemGr great point! Bitflags and integral enumerations have some implementation overlap but are usually pretty different conceptually, so it&#39;s good to know about both."}, {"owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "edited": false, "score": 1, "creation_date": 1516658377, "post_id": 33354168, "comment_id": 83769804, "body": "@Shepmaster Is there a more universal way to handle this, so that one does not need to make a cast at every arithmetic operation performed with an enum type?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "edited": false, "score": 0, "creation_date": 1516658710, "post_id": 33354168, "comment_id": 83769937, "body": "@tinker no, there&#39;s not. Rust enums are not just pretty names for integer constants; you shouldn&#39;t be performing arithmetic on them frequently."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "edited": false, "score": 0, "creation_date": 1516659087, "post_id": 33354168, "comment_id": 83770109, "body": "@tinker It seems like you should have a <code>struct Piece(u8)</code> which is the packed form, and two enums <code>PieceType { A, B, C }</code> and <code>Color { Red, White }</code>. The <code>Piece</code> constructor would take in an <code>Option&lt;PieceType&gt;, Color</code> and <code>Piece</code> would have methods to convert to and from the packed form. Your <code>Piece</code> could even use the bitflags mentioned in a comment above."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 22, "last_activity_date": 1445888285, "creation_date": 1445888285, "answer_id": 33354168, "question_id": 33354058, "link": "https://stackoverflow.com/questions/33354058/how-do-i-get-the-integer-value-of-an-enum/33354168#33354168", "title": "How do I get the integer value of an enum?", "body": "<p>You get the value by casting the enum variant to an integral type:</p>\n\n<pre><code>enum Thing {\n    A = 1,\n    B = 2,\n}\n\nfn main() {\n    println!(\"{}\", Thing::A as u8);\n    println!(\"{}\", Thing::B as u8);\n}\n</code></pre>\n"}], "owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5561, "favorite_count": 2, "accepted_answer_id": 33354168, "answer_count": 1, "score": 14, "last_activity_date": 1516659870, "creation_date": 1445887913, "last_edit_date": 1516659870, "question_id": 33354058, "link": "https://stackoverflow.com/questions/33354058/how-do-i-get-the-integer-value-of-an-enum", "title": "How do I get the integer value of an enum?", "body": "<p>It is possible to write constructions like this:</p>\n\n<pre><code>enum Number {\n    One = 1,\n    Two = 2,\n    Three = 3,\n    Four = 4,\n}\n</code></pre>\n\n<p>but for what purpose? I can't find any method to get the value of an enum variant.</p>\n"}, {"tags": ["rust", "header-files", "ffi"], "comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1445885366, "post_id": 33351297, "comment_id": 54502386, "body": "Not into a Rust file, but check <a href=\"https://github.com/mystor/rust-cpp\" rel=\"nofollow noreferrer\">github.com/mystor/rust-cpp</a>"}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1445878793, "creation_date": 1445878793, "answer_id": 33351389, "question_id": 33351297, "link": "https://stackoverflow.com/questions/33351297/automatic-tools-for-processing-c-header-files-in-rust/33351389#33351389", "title": "Automatic tools for processing C header files in Rust?", "body": "<p>I never tried it, but there is <a href=\"https://github.com/crabtw/rust-bindgen\" rel=\"nofollow\">rust-bindgen</a>...</p>\n"}], "owner": {"reputation": 485, "user_id": 5350761, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-0vaJdsJ7fXw/AAAAAAAAAAI/AAAAAAAAD9s/pdF45XCQLN4/photo.jpg?sz=128", "display_name": "Jackson Loper", "link": "https://stackoverflow.com/users/5350761/jackson-loper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "closed_date": 1446580659, "accepted_answer_id": 33351389, "answer_count": 1, "score": 2, "last_activity_date": 1445882485, "creation_date": 1445878498, "last_edit_date": 1445882485, "question_id": 33351297, "link": "https://stackoverflow.com/questions/33351297/automatic-tools-for-processing-c-header-files-in-rust", "closed_reason": "Not suitable for this site", "title": "Automatic tools for processing C header files in Rust?", "body": "<p>I have a C header file with various enums and typedefs and structs defined. </p>\n\n<p>Are there any awesome tools out there for turning that into a Rust file?</p>\n"}, {"tags": ["syntax", "rust"], "comments": [{"owner": {"reputation": 401, "user_id": 2505109, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/72a0d0bf1e9c3e915e3138a2356b5201?s=128&d=identicon&r=PG", "display_name": "Burgi", "link": "https://stackoverflow.com/users/2505109/burgi"}, "edited": false, "score": 0, "creation_date": 1445876676, "post_id": 33350721, "comment_id": 54496750, "body": "Is it not the class identifer? See lines 13-19"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1445876812, "post_id": 33350721, "comment_id": 54496829, "body": "Beware! You are linking to <b>very old versions of Rust</b>. You should ensure that everything you read says Rust 1.0 beta or above!"}, {"owner": {"reputation": 1965, "user_id": 77438, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?s=128&d=identicon&r=PG", "display_name": "heartpunk", "link": "https://stackoverflow.com/users/77438/heartpunk"}, "edited": false, "score": 0, "creation_date": 1445877037, "post_id": 33350721, "comment_id": 54496959, "body": "Yeah, looks like the trie implementation just got dropped since then, which is why I couldn&#39;t find a newer version."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1445877536, "post_id": 33350721, "comment_id": 54497325, "body": "There are <a href=\"https://crates.io/search?q=trie\" rel=\"nofollow noreferrer\">crates that advertise</a> that they implement tries."}], "answers": [{"tags": [], "owner": {"reputation": 1965, "user_id": 77438, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?s=128&d=identicon&r=PG", "display_name": "heartpunk", "link": "https://stackoverflow.com/users/77438/heartpunk"}, "is_accepted": false, "score": 2, "last_activity_date": 1445876975, "creation_date": 1445876975, "answer_id": 33350850, "question_id": 33350721, "link": "https://stackoverflow.com/questions/33350721/what-does-mean-in-rust/33350850#33350850", "title": "What does :: mean in Rust?", "body": "<p>Oops. I wasn't reading very clearly. In this case, it's just the normal way of referring to anything under a module. <code>uint::BITS</code> is a constant, it seems.</p>\n"}, {"comments": [{"owner": {"reputation": 3785, "user_id": 2388257, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/4QzSp.jpg?s=128&g=1", "display_name": "Hi-Angel", "link": "https://stackoverflow.com/users/2388257/hi-angel"}, "edited": false, "score": 0, "creation_date": 1544353972, "post_id": 33350851, "comment_id": 94239135, "body": "The 1-st example <a href=\"https://docs.rs/rlua/0.9.5/rlua/struct.Table.html\" rel=\"nofollow noreferrer\">here, documentation for <code>set</code> metod of <code>rlua::Table</code></a> don&#39;t seem to be covered by this definition. They create there a variable <code>lua</code>, and then do <code>lua.exec::&lt;()&gt;(r#&quot;\u2026&quot;#, None)</code>. The <code>::</code> doesn&#39;t look like a path as in your example."}, {"owner": {"reputation": 3785, "user_id": 2388257, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/4QzSp.jpg?s=128&g=1", "display_name": "Hi-Angel", "link": "https://stackoverflow.com/users/2388257/hi-angel"}, "edited": false, "score": 0, "creation_date": 1544356258, "post_id": 33350851, "comment_id": 94239686, "body": "I asked on IRC: turns out, the <code>::&lt;Type&gt;</code> syntax is used to supply the <code>Type</code> parameter. That&#39;s like C++/C#/Java templates, except for some reason there&#39;s a redundant double colon."}, {"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1564846127, "post_id": 33350851, "comment_id": 101167801, "body": "are these two uses of <code>::</code> (path separator &amp; turbofish) related in some way?"}, {"owner": {"reputation": 1646, "user_id": 162830, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tCZKU.jpg?s=128&g=1", "display_name": "basicdays", "link": "https://stackoverflow.com/users/162830/basicdays"}, "edited": false, "score": 0, "creation_date": 1589670521, "post_id": 33350851, "comment_id": 109386982, "body": "That turbofish site is cute... :P"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 22, "last_activity_date": 1544373862, "last_edit_date": 1544373862, "creation_date": 1445876981, "answer_id": 33350851, "question_id": 33350721, "link": "https://stackoverflow.com/questions/33350721/what-does-mean-in-rust/33350851#33350851", "title": "What does :: mean in Rust?", "body": "<p>Please review <a href=\"https://doc.rust-lang.org/book/appendix-02-operators.html\" rel=\"noreferrer\">Appendix B: Operators and Symbols</a> of <em>The Rust Programming Language</em>.</p>\n\n<hr>\n\n<p>In this case, the double colon (<code>::</code>) is the path separator. <a href=\"https://doc.rust-lang.org/reference/paths.html\" rel=\"noreferrer\">Paths</a> are comprised of <em>crates</em>, <em>modules</em>, and <em>items</em>.</p>\n\n<p>The full path for <a href=\"http://doc.rust-lang.org/std/usize/constant.BITS.html\" rel=\"noreferrer\">your example item, updated for 1.0</a> is:</p>\n\n<pre><code>std::usize::BITS\n</code></pre>\n\n<p>Here, <code>std</code> is the crate, <code>usize</code> is a module, and <code>BITS</code> is the specific item \u2014 in this case a constant.</p>\n\n<p>If you scroll up in your file, you'll see <code>use core::usize</code>. <code>use</code> adds the path to the set of items to look in. That's how you can get away with just saying <code>usize::BITS</code>. The <code>core</code> crate is an implementation detail of the fa\u00e7ade that is the <code>std</code> crate, so you can just substitute <code>std</code> for <code>core</code> in normal code.</p>\n\n<hr>\n\n<p><code>::</code> can also be used as a way to specify generic types when they cannot otherwise be inferred; this is called the <a href=\"https://turbo.fish/\" rel=\"noreferrer\"><em>turbofish</em></a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52360464/155423\">What is the syntax: `instance.method::&lt;SomeThing&gt;()`?</a></li>\n</ul>\n"}], "owner": {"reputation": 1965, "user_id": 77438, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?s=128&d=identicon&r=PG", "display_name": "heartpunk", "link": "https://stackoverflow.com/users/77438/heartpunk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4399, "favorite_count": 3, "accepted_answer_id": 33350851, "answer_count": 2, "score": 9, "last_activity_date": 1544373862, "creation_date": 1445876566, "last_edit_date": 1445876772, "question_id": 33350721, "link": "https://stackoverflow.com/questions/33350721/what-does-mean-in-rust", "title": "What does :: mean in Rust?", "body": "<p>What does the <code>::</code> syntax in Rust, as seen <a href=\"http://doc.rust-lang.org/0.11.0/src/collections/home/rustbuild/src/rust-buildbot/slave/dist2-linux/build/src/libcollections/trie.rs.html#428-428\" rel=\"noreferrer\">here</a>, mean:</p>\n\n<pre><code>fn chunk(n: uint, idx: uint) -&gt; uint {\n    let sh = uint::BITS - (SHIFT * (idx + 1));\n    (n &gt;&gt; sh) &amp; MASK\n}\n</code></pre>\n\n<p>In languages like Haskell it means a type hint, but here the compiler already has an annotation of that values type, so it seems it's likely type casting.</p>\n"}, {"tags": ["rust", "equality"], "answers": [{"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 3, "creation_date": 1445887071, "post_id": 33348112, "comment_id": 54503315, "body": "You&#39;re doing double work, by looking at every element twice. I&#39;ve posted an alternative answer. :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1445887447, "post_id": 33348112, "comment_id": 54503508, "body": "@bluss it&#39;s true, but was closer in spirit to the code in the original question."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 14, "last_activity_date": 1578147717, "last_edit_date": 1578147717, "creation_date": 1445869344, "answer_id": 33348112, "question_id": 33348032, "link": "https://stackoverflow.com/questions/33348032/how-do-i-compare-a-vector-against-a-reversed-version-of-itself/33348112#33348112", "title": "How do I compare a vector against a reversed version of itself?", "body": "<p>Read up on <a href=\"http://doc.rust-lang.org/std/vec/struct.Vec.html#method.reverse\" rel=\"nofollow noreferrer\">the documentation</a> for the function you are using:</p>\n\n<blockquote>\n  <p>Reverse the order of elements in a slice, in place.</p>\n</blockquote>\n\n<p>Or check the function signature:</p>\n\n<pre><code>fn reverse(&amp;mut self)\n</code></pre>\n\n<p>The return value of the method is the unit type, an empty tuple <code>()</code>. You can't compare that against a vector.</p>\n\n<hr>\n\n<p>Stylistically, Rust uses 4 space indents, <code>snake_case</code> identifiers for functions and variables, and has an implicit return at the end of blocks. You should adjust to these conventions in a new language.</p>\n\n<p>Additionally, you should <a href=\"https://stackoverflow.com/q/40006219/155423\">take a <code>&amp;[T]</code> instead of a <code>Vec&lt;T&gt;</code></a> if you are not adding items to the vector.</p>\n\n<p>To solve your problem, we will use <em>iterators</em> to compare the slice. You can get forward and backward iterators of a slice, which requires a very small amount of space compared to reversing the entire array. <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.eq\" rel=\"nofollow noreferrer\"><code>Iterator::eq</code></a> allows you to do the comparison succinctly.</p>\n\n<p>You also need to state that the <code>T</code> is comparable against itself, which requires <a href=\"http://doc.rust-lang.org/std/cmp/trait.Eq.html\" rel=\"nofollow noreferrer\"><code>Eq</code></a> or <a href=\"http://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\"><code>PartialEq</code></a>. </p>\n\n<pre><code>fn is_palindrome&lt;T&gt;(v: &amp;[T]) -&gt; bool\nwhere\n    T: Eq,\n{\n    v.iter().eq(v.iter().rev())\n}\n\nfn main() {\n    println!(\"{}\", is_palindrome(&amp;[1, 2, 3]));\n    println!(\"{}\", is_palindrome(&amp;[1, 2, 1]));\n}\n</code></pre>\n\n<p>If you wanted to do the less-space efficient version, you have to allocate a new vector yourself:</p>\n\n<pre><code>fn is_palindrome&lt;T&gt;(v: &amp;[T]) -&gt; bool\nwhere\n    T: Eq + Clone,\n{\n    let mut reverse = v.to_vec();\n    reverse.reverse();\n    reverse == v\n}\n\nfn main() {\n    println!(\"{}\", is_palindrome(&amp;[1, 2, 3]));\n    println!(\"{}\", is_palindrome(&amp;[1, 2, 1]));\n}\n</code></pre>\n\n<p>Note that we are now also required to <a href=\"http://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"nofollow noreferrer\"><code>Clone</code></a> the items in the vector, so we add that <em>trait bound</em> to the method.</p>\n"}, {"tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": false, "score": 16, "last_activity_date": 1515863538, "last_edit_date": 1515863538, "creation_date": 1445887014, "answer_id": 33353830, "question_id": 33348032, "link": "https://stackoverflow.com/questions/33348032/how-do-i-compare-a-vector-against-a-reversed-version-of-itself/33353830#33353830", "title": "How do I compare a vector against a reversed version of itself?", "body": "<p>Since you only need to look at the front half and back half, you can use the <code>DoubleEndedIterator</code> trait (methods <code>.next()</code> and <code>.next_back()</code>) to look at pairs of front and back elements this way:</p>\n\n<pre><code>/// Determine if an iterable equals itself reversed\nfn is_palindrome&lt;I&gt;(iterable: I) -&gt; bool\nwhere\n    I: IntoIterator,\n    I::Item: PartialEq,\n    I::IntoIter: DoubleEndedIterator,\n{\n    let mut iter = iterable.into_iter();\n    while let (Some(front), Some(back)) = (iter.next(), iter.next_back()) {\n        if front != back {\n            return false;\n        }\n    }\n\n    true\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e1f29743a8a15451484b7b5bb7563a8d&amp;version=stable\" rel=\"noreferrer\">(run in playground)</a></p>\n\n<p>This version is a bit more general, since it supports any iterable that is double ended, for example slice and chars iterators.</p>\n\n<p>It only examines each element once, and it automatically skips the remaining middle element if the iterator was of odd length.</p>\n"}], "owner": {"reputation": 3474, "user_id": 497398, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/1dac2c810e7a6d0787aadc020caa4d71?s=128&d=identicon&r=PG", "display_name": "mfirry", "link": "https://stackoverflow.com/users/497398/mfirry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4071, "favorite_count": 1, "accepted_answer_id": 33348112, "answer_count": 2, "score": 4, "last_activity_date": 1578147717, "creation_date": 1445869109, "last_edit_date": 1515863178, "question_id": 33348032, "link": "https://stackoverflow.com/questions/33348032/how-do-i-compare-a-vector-against-a-reversed-version-of-itself", "title": "How do I compare a vector against a reversed version of itself?", "body": "<p>Why won't this compile?</p>\n\n<pre><code>fn isPalindrome&lt;T&gt;(v: Vec&lt;T&gt;) -&gt; bool {\n  return v.reverse() == v;\n}\n</code></pre>\n\n<p>I get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:2:25\n  |\n2 |   return v.reverse() == v;\n  |                         ^ expected (), found struct `std::vec::Vec`\n  |\n  = note: expected type `()`\n             found type `std::vec::Vec&lt;T&gt;`\n</code></pre>\n"}, {"tags": ["rust", "whitespace", "pretty-print"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 8, "last_activity_date": 1445832260, "last_edit_date": 1445832260, "creation_date": 1445809048, "answer_id": 33335372, "question_id": 33334994, "link": "https://stackoverflow.com/questions/33334994/multi-line-string-in-rust-with-preserved-leading-whitespace/33335372#33335372", "title": "Multi-line string in Rust with preserved leading whitespace", "body": "<p>No it's not possible (<code>v1.3</code> and probably for a long time).</p>\n\n<p>However, usually multi-line string literals that need to be human-readable are some sort of constant descriptions, like the usage string for a CLI program. You often see those things indented like this:</p>\n\n<pre><code>const USAGE: &amp;'static str = \"\nNaval Fate.\n\nUsage:\n  ...\n\";\n</code></pre>\n\n<p>Which is ok I guess. If you have a lot of those strings or a really big one, you could use <a href=\"http://doc.rust-lang.org/std/macro.include_str!.html\" rel=\"noreferrer\"><code>include_str!</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 11, "creation_date": 1505671410, "post_id": 36101262, "comment_id": 79496942, "body": "It&#39;s expected on Stack Overflow that you declare affiliation when you are promoting a tool or library that you have created."}, {"owner": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1576782970, "post_id": 36101262, "comment_id": 105018743, "body": "@Shepmaster Why do you say &quot;it is expected&quot;? Expected by who and why? Do you have references to Meta discussions about it? Here&#39;s my take: while I don&#39;t think it hurts to self-identify, I don&#39;t think &quot;it is expected&quot; or even part of the current guidelines that an author self-identify when linking to an open-source project they have authored or contributed. To form this assessment, I&#39;ve reviewed various Meta StackExchange posts on the topic of linking to external resources. This one seems to be the most official: <a href=\"https://meta.stackexchange.com/help/promotion\">meta.stackexchange.com/help/promotion</a> -- and it is silent on the matter."}, {"owner": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "edited": false, "score": 2, "creation_date": 1576783264, "post_id": 36101262, "comment_id": 105018844, "body": "For context, per <a href=\"https://en.wikipedia.org/wiki/Journalism_ethics_and_standards\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Journalism_ethics_and_standards</a> , &quot;Independence and objectivity: journalists should avoid topics in which they have a financial or personal interest that would provide them a particular benefit in the subject matter, as that interest may introduce bias into their reporting, or give the impression of such bias. In cases where a journalist may have a specific financial or personal interest, the interest should be disclosed;&quot; -- I would like to raise the question: what are the similarities and differences to the present context (StackOverflow)?"}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 12, "last_activity_date": 1596090170, "last_edit_date": 1596090170, "creation_date": 1458387808, "answer_id": 36101262, "question_id": 33334994, "link": "https://stackoverflow.com/questions/33334994/multi-line-string-in-rust-with-preserved-leading-whitespace/36101262#36101262", "title": "Multi-line string in Rust with preserved leading whitespace", "body": "<p>It is not supported by the language as of Rust 1.7 but <a href=\"https://github.com/dtolnay/indoc\" rel=\"noreferrer\">Indoc</a> is a procedural macro that does what you want. It stands for &quot;indented document.&quot; It provides a macro called <code>indoc!()</code> that takes a multiline string literal and un-indents it so the leftmost non-space character is in the first column.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let some_string = indoc! {&quot;\n    First line.\n     Second line, with leading space.&quot;\n};\n</code></pre>\n<p>It works for raw string literals as well.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let some_string = indoc! {r#&quot;\n    First line.\n     Second line, with leading space.&quot;#\n};\n</code></pre>\n<p>The result in both cases is <code>&quot;First line\\n Second line, with leading space.&quot;</code></p>\n"}, {"tags": [], "owner": {"reputation": 16645, "user_id": 402322, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/GWEWt.gif?s=128&g=1", "display_name": "ceving", "link": "https://stackoverflow.com/users/402322/ceving"}, "is_accepted": false, "score": 1, "last_activity_date": 1594981037, "creation_date": 1594981037, "answer_id": 62951918, "question_id": 33334994, "link": "https://stackoverflow.com/questions/33334994/multi-line-string-in-rust-with-preserved-leading-whitespace/62951918#62951918", "title": "Multi-line string in Rust with preserved leading whitespace", "body": "<p>You can start the line you want to indent with a ASCII quoted space <code>\\x20</code> or an Unicode quoted space <code>\\u{20}</code>.</p>\n<pre><code>let some_string = \n    &quot;First line.\\n\\\n     \\x20Second line, with leading space.\\n\\\n     \\u{20}Third line, with leading space.&quot;;\n</code></pre>\n<p>You just need to quote the first space.</p>\n<pre><code>let some_string = \n    &quot;First line.\\n\\\n     \\x20 Second line, with two leading spaces.\\n\\\n     \\u{20} Third line, with two leading spaces.&quot;;\n</code></pre>\n"}], "owner": {"reputation": 699, "user_id": 3957040, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e88a425a40322e715b799744b3a89898?s=128&d=identicon&r=PG&f=1", "display_name": "Pablo", "link": "https://stackoverflow.com/users/3957040/pablo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2718, "favorite_count": 1, "accepted_answer_id": 33335372, "answer_count": 3, "score": 9, "last_activity_date": 1596090170, "creation_date": 1445806574, "question_id": 33334994, "link": "https://stackoverflow.com/questions/33334994/multi-line-string-in-rust-with-preserved-leading-whitespace", "title": "Multi-line string in Rust with preserved leading whitespace", "body": "<p>In some languages it is possible to write something of this sort:</p>\n\n<pre><code>val some_string =\n  \"\"\"First line.\n    | Second line, with leading space.\"\"\"\n</code></pre>\n\n<p>That is, a multi-line string where all leading space is removed up to a point, but no further. This can be mimicked in Rust by writing:</p>\n\n<pre><code>let some_string = \n    \"First line.\\n \\\n     Second line, with leading space.\";\n</code></pre>\n\n<p>However, this loses the benefit of looking closer to the actual output. Is there a way in Rust of writing something like the example pseudocode, preserving (some) leading whitespace?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": true, "score": 7, "last_activity_date": 1445808083, "creation_date": 1445808083, "answer_id": 33335222, "question_id": 33334135, "link": "https://stackoverflow.com/questions/33334135/how-does-borrow-work-without-trait-specialization/33335222#33335222", "title": "How does `Borrow` work without trait specialization?", "body": "<h1>Short answer</h1>\n\n<p>In this case, trait specialization is not necessary, since the implementations are non-overlapping.</p>\n\n<h1>Long answer</h1>\n\n<p>In the particular case of <code>Vec&lt;T&gt;</code>, there are many impls that apply to it. For instance, the following:</p>\n\n<pre><code>impl&lt;T&gt; Borrow&lt;T&gt; for T where T: ?Sized\nimpl&lt;'a, T&gt; Borrow&lt;T&gt; for &amp;'a T where T: ?Sized\nimpl&lt;'a, T&gt; Borrow&lt;T&gt; for &amp;'a mut T where T: ?Sized\n// other implementations are omitted for conciseness\n</code></pre>\n\n<p>According to those implementations, the compiler can deduce the following:</p>\n\n<ol>\n<li><code>Vec&lt;T&gt;</code> implements <code>Borrow&lt;Vec&lt;T&gt;&gt;</code></li>\n<li><code>&amp;'a Vec&lt;T&gt;</code> implements <code>Borrow&lt;Vec&lt;T&gt;&gt;</code></li>\n<li><code>&amp;'a mut Vec&lt;T&gt;</code> implements <code>Borrow&lt;Vec&lt;T&gt;&gt;</code></li>\n</ol>\n\n<p>However, none of them implements <code>Borrow&lt;[T]&gt;</code> for <code>Vec&lt;T&gt;</code>. Since that implementation is not provided, you are free to provide your own:</p>\n\n<pre><code>impl&lt;T&gt; Borrow&lt;[T]&gt; for Vec&lt;T&gt;\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "accepted_answer_id": 33335222, "answer_count": 1, "score": 7, "last_activity_date": 1445808083, "creation_date": 1445801570, "question_id": 33334135, "link": "https://stackoverflow.com/questions/33334135/how-does-borrow-work-without-trait-specialization", "title": "How does `Borrow` work without trait specialization?", "body": "<p>Currently, Rust does not have the feature \"trait specialization\" yet. As far as I understand, this means that a trait can't be implemented more than once for one given type. However, I noticed that the <a href=\"http://doc.rust-lang.org/std/borrow/trait.Borrow.html\"><code>Borrow</code> trait</a> is implemented <code>for T where T: ?Sized</code> which are all non-reference types there are (right?). But it's also implemented for several other types, like <code>Vec&lt;T&gt;</code>, which looks like a specialization.</p>\n\n<p>How is that working? Is it compiler magic or did I misunderstand what trait specialization is?</p>\n"}, {"tags": ["int", "rust", "ffi"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1445788896, "post_id": 33331550, "comment_id": 54460374, "body": "Please don&#39;t edit your post too often in a meaning changing manner and for a second question open a new question-thread please. Let&#39;s keep SO questions atomic :)"}, {"owner": {"reputation": 485, "user_id": 5350761, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-0vaJdsJ7fXw/AAAAAAAAAAI/AAAAAAAAD9s/pdF45XCQLN4/photo.jpg?sz=128", "display_name": "Jackson Loper", "link": "https://stackoverflow.com/users/5350761/jackson-loper"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1445788984, "post_id": 33331550, "comment_id": 54460401, "body": "My bad :).  I have to get more disciplined about waiting longer before I post... I erased my second question."}], "answers": [{"comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1445788403, "post_id": 33331684, "comment_id": 54460199, "body": "2: Or use <code>libc::c_char</code> to let the library decide."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1445788625, "last_edit_date": 1445788625, "creation_date": 1445788269, "answer_id": 33331684, "question_id": 33331550, "link": "https://stackoverflow.com/questions/33331550/how-do-i-get-machine-sized-integer-for-ffi/33331684#33331684", "title": "How do I get machine-sized integer for FFI?", "body": "<p>To handle FFI types you should use the <a href=\"https://crates.io/crates/libc\" rel=\"nofollow\"><code>libc</code></a> crate. You can find it's documentation <a href=\"http://doc.rust-lang.org/libc/\" rel=\"nofollow\">here</a>. </p>\n\n<p>The two types you need are <code>libc::c_int</code> and <code>libc::c_char</code>.</p>\n\n<p><a href=\"https://doc.rust-lang.org/book/ffi.html\" rel=\"nofollow\">This chapter</a> from the Rust book gives a neat introduction and also mentions <code>c_int</code>.</p>\n"}], "owner": {"reputation": 485, "user_id": 5350761, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-0vaJdsJ7fXw/AAAAAAAAAAI/AAAAAAAAD9s/pdF45XCQLN4/photo.jpg?sz=128", "display_name": "Jackson Loper", "link": "https://stackoverflow.com/users/5350761/jackson-loper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 33331684, "answer_count": 1, "score": 3, "last_activity_date": 1445795228, "creation_date": 1445787606, "last_edit_date": 1445795228, "question_id": 33331550, "link": "https://stackoverflow.com/questions/33331550/how-do-i-get-machine-sized-integer-for-ffi", "title": "How do I get machine-sized integer for FFI?", "body": "<p>In dealing with foreign code, I have to take pointers to a C struct of the form</p>\n\n<pre><code>typedef struct {\n  int two;  \n  int nd;\n  char typekind; \n  ...           \n} PyArrayInterface;\n</code></pre>\n\n<p>Obviously the size of <code>int</code> is unknown.  How do I represent this struct in rust?  It's probably <code>i32</code>, but I might run across an ILP64 data model some day... </p>\n\n<p>At this point my only idea is to create an enum to wrap the struct, check the architecture at runtime, and do the right thing.  It's pretty goofy to have an <code>if</code> statement and a <code>transmute</code> each time I need to get the struct from C, but I've got nothing better at the moment...</p>\n"}, {"tags": ["json", "rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445748890, "post_id": 33323891, "comment_id": 54450098, "body": "Your current solution is what I would do. What do you think would be better or more efficient about avoiding the &quot;decoding duplication&quot;?"}, {"owner": {"reputation": 508, "user_id": 2660503, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/b82330ee764cb398ef7b77704e0118ea?s=128&d=identicon&r=PG", "display_name": "eyeinthebrick", "link": "https://stackoverflow.com/users/2660503/eyeinthebrick"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445762850, "post_id": 33323891, "comment_id": 54452697, "body": "I&#39;m comming from python, so I don&#39;t feel comfortable with stacilly typed languages. But if you say, that my approach is ok, I&#39;ll stick with it."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1445768469, "post_id": 33323891, "comment_id": 54454122, "body": "Just my opinion, but this sounds like a good example of premature worrying about optimization. Get your code to run and see if you deem it fast enough. If not, profile your code before changing it \u2013 perhaps the JSON decoding isn&#39;t even the problem."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1445866591, "post_id": 33346965, "comment_id": 54489518, "body": "Any numbers or gut feelings on the efficiency of this compared to the &quot;decode it twice&quot; solution outlined in the question?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1445867713, "post_id": 33346965, "comment_id": 54490374, "body": "it&#39;s more of a DRY solution. This way you don&#39;t need to handle any type in two locations. You just need to declare the enum. Never to match over all the possible types or anything. Speedwise this is probably worse than the solution offered in the Question (except if there are a lot of <code>String</code> fields and no struct/enum fields, then it&#39;s probably faster than the solution in the Question). It&#39;s hard to know without seeing the exact code. General solutions that are faster require precise knowledge about the field order in the json string and/or hacks on serde"}, {"owner": {"reputation": 508, "user_id": 2660503, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/b82330ee764cb398ef7b77704e0118ea?s=128&d=identicon&r=PG", "display_name": "eyeinthebrick", "link": "https://stackoverflow.com/users/2660503/eyeinthebrick"}, "edited": false, "score": 0, "creation_date": 1445880035, "post_id": 33346965, "comment_id": 54499077, "body": "Thank you, I suspected that, something like you suggested is possible. Can I use the same technique with rust-serialize?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1445933707, "post_id": 33346965, "comment_id": 54520664, "body": "I&#39;m sure that works, too, yes. It also has a <code>Json</code> enum for raw json and it has a special format for enums (most likely the same as serde?). So the conversion of my above code to <code>rustc-serialize</code> should be straight forward"}, {"owner": {"reputation": 508, "user_id": 2660503, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/b82330ee764cb398ef7b77704e0118ea?s=128&d=identicon&r=PG", "display_name": "eyeinthebrick", "link": "https://stackoverflow.com/users/2660503/eyeinthebrick"}, "edited": false, "score": 0, "creation_date": 1446061601, "post_id": 33346965, "comment_id": 54591872, "body": "unfortuenatly, rustc-serialize can&#39;t do that. <a href=\"http://stackoverflow.com/questions/25604339/parse-json-value-as-enum-in-rust\" title=\"parse json value as enum in rust\">stackoverflow.com/questions/25604339/&hellip;</a>   so this example (<a href=\"http://is.gd/XB1TiG\" rel=\"nofollow noreferrer\">is.gd/XB1TiG</a>) produces   {&quot;variant&quot;:&quot;Message&quot;,&quot;fields&quot;:[&quot;123&quot;,&quot;superuser&quot;,&quot;some text&quot;,&quot;beginning of epoch&quot;]}"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 8, "last_activity_date": 1445866027, "creation_date": 1445866027, "answer_id": 33346965, "question_id": 33323891, "link": "https://stackoverflow.com/questions/33323891/conditionally-decoding-json-based-on-a-field-in-the-json/33346965#33346965", "title": "Conditionally decoding JSON based on a field in the JSON", "body": "<p>You can use the existing enum deserialization. I'll give a step by step example to deserialize your format to the following enum:</p>\n\n<pre><code>#[derive(Debug, PartialEq, Eq, Deserialize)]\nenum MyType {\n    A {gar: ()},\n    B {test: i32},\n    C {blub: String},\n}\n</code></pre>\n\n<ol>\n<li><p>Start with an example json string:</p>\n\n<pre><code>let json = r#\"{\"type\": \"B\", \"test\": 42}\"#;\n</code></pre></li>\n<li><p>Turn it into a <a href=\"https://serde-rs.github.io/serde/serde_json/serde_json/value/enum.Value.html\" rel=\"noreferrer\"><code>Value</code></a> enum</p>\n\n<pre><code>let mut json: serde_json::Value = serde_json::from_str(json).unwrap();\n</code></pre></li>\n<li><p>Rip out the <code>type</code> field</p>\n\n<pre><code>let type_ = {\n    let obj = json.as_object_mut().expect(\"object\");\n    let type_ = obj.remove(\"type\").expect(\"`type` field\");\n    if let serde_json::Value::String(s) = type_ {\n        s\n    } else {\n        panic!(\"type field not a string\");\n    }\n};\n</code></pre></li>\n<li><p>Create the \"proper\" enum json. A struct with a single field where the name of the field is the enum variant and the value of the field is the variant value</p>\n\n<pre><code>let mut enum_obj = std::collections::BTreeMap::new();\nenum_obj.insert(type_, json);\nlet json = serde_json::Value::Object(enum_obj);\n</code></pre></li>\n<li><p>Use the generated json deserializer to turn the json into a value of your enum</p>\n\n<pre><code>let obj: MyType = serde_json::from_value(json).unwrap();\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 508, "user_id": 2660503, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/b82330ee764cb398ef7b77704e0118ea?s=128&d=identicon&r=PG", "display_name": "eyeinthebrick", "link": "https://stackoverflow.com/users/2660503/eyeinthebrick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1132, "favorite_count": 2, "accepted_answer_id": 33346965, "answer_count": 1, "score": 7, "last_activity_date": 1538857349, "creation_date": 1445724607, "last_edit_date": 1538857349, "question_id": 33323891, "link": "https://stackoverflow.com/questions/33323891/conditionally-decoding-json-based-on-a-field-in-the-json", "title": "Conditionally decoding JSON based on a field in the JSON", "body": "<p>I am receiving JSON from an API and the response can be one of 30 types. Each type has a unique set of fields, but all responses have a field <code>type</code> which states which type it is.</p>\n\n<p>My approach is to use <a href=\"https://serde-rs.github.io/serde/serde_json/serde_json/\" rel=\"nofollow\">serde</a>. I create a struct for each response type and make them decodable. Once I have that how do I choose which struct should be used for a freshly received message?</p>\n\n<p>At the moment, I've created another struct <code>TypeStruct</code> with only a single field for <code>type</code>. I decode the JSON into a <code>TypeStruct</code>, then choose the appropriate struct for received message, based on type value, and decode the message again.</p>\n\n<p>I would like to get rid of this decoding duplication.</p>\n"}, {"tags": ["rust", "bubble-sort", "type-mismatch"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1445709700, "post_id": 33321458, "comment_id": 54440749, "body": "Please post the complete compiler message, so that we don&#39;t have to search for the error in your code."}, {"owner": {"reputation": 509, "user_id": 3419211, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000859618233/picture?type=large", "display_name": "user3419211", "link": "https://stackoverflow.com/users/3419211/user3419211"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1445710446, "post_id": 33321458, "comment_id": 54441009, "body": "it took a moment to add the error"}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 3, "last_activity_date": 1445709912, "creation_date": 1445709912, "answer_id": 33321571, "question_id": 33321458, "link": "https://stackoverflow.com/questions/33321458/error-mismatched-types-expected-usize-found-usize-raised-while-trying-to/33321571#33321571", "title": "error: mismatched types: expected &#39;usize&#39; found &#39;&amp;usize&#39; raised while trying to implement bubble sort", "body": "<p>Without knowing the exact cause of your compiler error: You should remove quite a few <code>&amp;</code> -- in the index brackets <code>[ ]</code> for example.</p>\n\n<p>The compiler just says that it expected a variable of type <code>usize</code>, but found one of type <code>&amp;usize</code> which is a reference to that type. The index operator (the <code>[ ]</code> brackets) take a parameter of type <code>usize</code>. But you provide a reference by adding <code>&amp;</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 3, "creation_date": 1445726377, "post_id": 33321591, "comment_id": 54445842, "body": "Note that <code>list</code>&#39;s type is not <code>[usize]</code>, but <code>[usize; 6]</code>, 6 being for 6 elements in it. This is an important difference: <code>[usize]</code> is an <a href=\"http://doc.rust-lang.org/book/unsized-types.html\" rel=\"nofollow noreferrer\">unsized type</a> quite different from <code>[usize; N]</code> for some <code>N</code>."}], "tags": [], "owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "is_accepted": false, "score": 5, "last_activity_date": 1445710028, "creation_date": 1445710028, "answer_id": 33321591, "question_id": 33321458, "link": "https://stackoverflow.com/questions/33321458/error-mismatched-types-expected-usize-found-usize-raised-while-trying-to/33321591#33321591", "title": "error: mismatched types: expected &#39;usize&#39; found &#39;&amp;usize&#39; raised while trying to implement bubble sort", "body": "<p>Here are some more problems besides what Lukas mentioned:</p>\n\n<hr>\n\n<p>The parameter to bubble sort function must have type <code>&amp;mut [usize]</code>. <code>list</code> has type <code>[usize]</code>, so you must convert it: when you call the bubble sort function.</p>\n\n<pre><code>bubble_sort(&amp;mut list);\n</code></pre>\n\n<hr>\n\n<p>When you call <code>swap</code> on a list, you should pass in the indexes of the things you want to swap, not the values themselves.</p>\n\n<pre><code>list.swap( j, j+1 );\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 509, "user_id": 3419211, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000859618233/picture?type=large", "display_name": "user3419211", "link": "https://stackoverflow.com/users/3419211/user3419211"}, "is_accepted": true, "score": 1, "last_activity_date": 1445712306, "last_edit_date": 1445712306, "creation_date": 1445711987, "answer_id": 33321919, "question_id": 33321458, "link": "https://stackoverflow.com/questions/33321458/error-mismatched-types-expected-usize-found-usize-raised-while-trying-to/33321919#33321919", "title": "error: mismatched types: expected &#39;usize&#39; found &#39;&amp;usize&#39; raised while trying to implement bubble sort", "body": "<p>Thank you all and below is the correct implementation:</p>\n\n<pre><code>fn main() {\n    let mut list = [15, 3, 2, 1, 6, 0];\n    bubble_sort(&amp;mut list);\n    println!(\"Sorted list is: {:?}\", &amp;list);\n}\n\nfn bubble_sort(list: &amp;mut [usize]) {\n    for _ in 0..list.len() {\n        for j in 0..(&amp;list.len()-1) {\n            if list[j] &gt; list[j+1] {\n                list.swap( j, j+1 );\n            }\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 509, "user_id": 3419211, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000859618233/picture?type=large", "display_name": "user3419211", "link": "https://stackoverflow.com/users/3419211/user3419211"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2275, "favorite_count": 0, "accepted_answer_id": 33321919, "answer_count": 3, "score": 1, "last_activity_date": 1445748771, "creation_date": 1445709314, "last_edit_date": 1445748771, "question_id": 33321458, "link": "https://stackoverflow.com/questions/33321458/error-mismatched-types-expected-usize-found-usize-raised-while-trying-to", "title": "error: mismatched types: expected &#39;usize&#39; found &#39;&amp;usize&#39; raised while trying to implement bubble sort", "body": "<p>I am trying to implement a bubble sort algorithm in Rust, but I'm stuck with type mismatch errors. Can someone help with the implementation?</p>\n\n<p>Also this is implemented the same way as I have implemented it in Python. I'm sure there is a rustic way of implementing this.</p>\n\n<pre><code>fn main() {\n    let mut list = [15, 3, 2, 1, 6, 0];\n    bubble_sort(list);\n    println!(\"order list is: {:?}\", &amp;list);\n}\n\nfn bubble_sort(list: &amp;mut [usize]) {\n    for i in 0..&amp;list.len() {\n        for j in 0..(&amp;list.len()-1) {\n            if &amp;list[&amp;j] &gt; &amp;list[&amp;j+1] {\n                &amp;list.swap( &amp;list[&amp;j], &amp;list[&amp;j+1] );\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Compiler error:</p>\n\n<pre><code>Compiling bubble_sort v0.1.0 (file:///home/ranj/Desktop/Rust/algorithms/sorting/bubble_sort)\nsrc/main.rs:5:17: 5:21 error: mismatched types:\n expected `&amp;mut [usize]`,\n    found `[_; 6]`\n(expected &amp;-ptr,\n    found array of 6 elements) [E0308]\nsrc/main.rs:5     bubble_sort(list);\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~\n\nsrc/main.rs:5:17: 5:21 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/main.rs:11:14: 11:30 error: start and end of range have incompatible types: expected `_`, found `&amp;usize` (expected integral variable, found &amp;-ptr) [E0308]\nsrc/main.rs:11     for i in 0..&amp;list.len() {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:11:14: 11:30 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/main.rs:13:17: 13:25 error: the trait `core::ops::Index&lt;&amp;usize&gt;` is not implemented for the type `[usize]` [E0277]\nsrc/main.rs:13             if &amp;list[&amp;j] &gt; &amp;list[&amp;j+1] {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:13:17: 13:25 note: the type `[usize]` cannot be indexed by `&amp;usize`\nsrc/main.rs:13             if &amp;list[&amp;j] &gt; &amp;list[&amp;j+1] {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:13:17: 13:25 error: the trait `core::ops::Index&lt;&amp;usize&gt;` is not implemented for the type `[usize]` [E0277]\nsrc/main.rs:13             if &amp;list[&amp;j] &gt; &amp;list[&amp;j+1] {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:13:17: 13:25 note: the type `[usize]` cannot be indexed by `&amp;usize`\nsrc/main.rs:13             if &amp;list[&amp;j] &gt; &amp;list[&amp;j+1] {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:14:30: 14:38 error: the trait `core::ops::Index&lt;&amp;usize&gt;` is not implemented for the type `[usize]` [E0277]\nsrc/main.rs:14                 &amp;list.swap( &amp;list[&amp;j], &amp;list[&amp;j+1] );\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:14:30: 14:38 note: the type `[usize]` cannot be indexed by `&amp;usize`\nsrc/main.rs:14                 &amp;list.swap( &amp;list[&amp;j], &amp;list[&amp;j+1] );\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:14:30: 14:38 error: the trait `core::ops::Index&lt;&amp;usize&gt;` is not implemented for the type `[usize]` [E0277]\nsrc/main.rs:14                 &amp;list.swap( &amp;list[&amp;j], &amp;list[&amp;j+1] );\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:14:30: 14:38 note: the type `[usize]` cannot be indexed by `&amp;usize`\nsrc/main.rs:14                 &amp;list.swap( &amp;list[&amp;j], &amp;list[&amp;j+1] );\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:14:40: 14:51 error: mismatched types:\n expected `usize`,\n    found `&amp;usize`\n(expected usize,\n    found &amp;-ptr) [E0308]\nsrc/main.rs:14                 &amp;list.swap( &amp;list[&amp;j], &amp;list[&amp;j+1] );\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~\n\nnote: in expansion of for loop expansion\nsrc/main.rs:12:9: 16:10 note: expansion site\nnote: in expansion of for loop expansion\nsrc/main.rs:11:5: 17:6 note: expansion site\nsrc/main.rs:14:40: 14:51 help: run `rustc --explain E0308` to see a detailed explanation\nerror: aborting due to 7 previous errors\nCould not compile `bubble_sort`.\n</code></pre>\n"}, {"tags": ["types", "rust", "type-mismatch"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1445700784, "post_id": 33319755, "comment_id": 54437766, "body": "Please try to minimize your code -- it contains a lot of stuff irrelevant to the question."}, {"owner": {"reputation": 699, "user_id": 3957040, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e88a425a40322e715b799744b3a89898?s=128&d=identicon&r=PG&f=1", "display_name": "Pablo", "link": "https://stackoverflow.com/users/3957040/pablo"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1445703380, "post_id": 33319755, "comment_id": 54438637, "body": "OK, removed quite a bit of the code. Not sure if I can delete more without making it less clear."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1445713361, "creation_date": 1445713361, "answer_id": 33322142, "question_id": 33319755, "link": "https://stackoverflow.com/questions/33319755/type-mismatches-while-calling-a-boxed-function-inside-a-struct/33322142#33322142", "title": "Type mismatches while calling a Boxed function inside a struct", "body": "<p>The way you defined the <code>Problem</code> struct means that <code>R</code> and <code>W</code> are fixed at the time the <code>Problem</code> is instantiated. In <code>test_solver</code>, you allow the caller to specify any <code>R</code> and any <code>W</code> they want, but then you try to pass specific <code>Cursor</code> types to <code>(problem.solver)</code> instead.</p>\n\n<p>You can fix this in two ways:</p>\n\n<p>1) Don't define <code>test_solver</code> as a generic function. Note that you wouldn't be to call <code>(problem.solver)</code> multiple times with different types for <code>R</code> and <code>W</code>.</p>\n\n<pre><code>fn test_solver&lt;'a&gt;(problem: Problem&lt;'a, std::io::Cursor&lt;&amp;'a [u8]&gt;, std::io::Cursor&lt;Vec&lt;u8&gt;&gt;&gt;)\n{\n    let input = std::io::Cursor::new(problem.test_input.as_bytes());\n    let mut output = std::io::Cursor::new(Vec::&lt;u8&gt;::new());\n\n    (problem.solver)(input, &amp;mut output);\n    assert_eq!(problem.test_output.as_bytes(), &amp;*output.into_inner());\n}\n</code></pre>\n\n<p>2) Don't define the <code>solver</code> field as generic. Have the function take trait references instead.</p>\n\n<pre><code>use std::io::prelude::*;\nuse problems::Problem;\n\nmod problems {\n    use std::io::prelude::*;\n\n    pub struct Problem&lt;'a&gt;\n    {\n        pub test_input: &amp;'a str,\n        pub test_output: &amp;'a str,\n        pub solver: Box&lt;fn(&amp;mut BufRead, &amp;mut Write)&gt;,\n    }\n\n    pub mod a_problem {\n        use std::io::prelude::*;\n        use super::Problem;\n\n        pub fn getProblem&lt;'a&gt;() -&gt; Problem&lt;'a&gt;\n        {\n            Problem {\n                test_input: unimplemented!(),\n                test_output: unimplemented!(),\n                solver: Box::new(solver),\n            }\n        }\n\n        fn solver(input: &amp;mut BufRead, output: &amp;mut Write)\n        {\n            unimplemented!();\n        }\n    }\n}\n\nfn test_solver(problem: Problem)\n{\n    let mut input = std::io::Cursor::new(problem.test_input.as_bytes());\n    let mut output = std::io::Cursor::new(Vec::&lt;u8&gt;::new());\n\n    (problem.solver)(&amp;mut input, &amp;mut output);\n    assert_eq!(problem.test_output.as_bytes(), &amp;*output.into_inner());\n}\n\nfn main() {\n    let problem = problems::a_problem::getProblem();\n    test_solver(problem);\n}\n</code></pre>\n"}], "owner": {"reputation": 699, "user_id": 3957040, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e88a425a40322e715b799744b3a89898?s=128&d=identicon&r=PG&f=1", "display_name": "Pablo", "link": "https://stackoverflow.com/users/3957040/pablo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 453, "favorite_count": 0, "accepted_answer_id": 33322142, "answer_count": 1, "score": 1, "last_activity_date": 1445713361, "creation_date": 1445700068, "last_edit_date": 1445703233, "question_id": 33319755, "link": "https://stackoverflow.com/questions/33319755/type-mismatches-while-calling-a-boxed-function-inside-a-struct", "title": "Type mismatches while calling a Boxed function inside a struct", "body": "<p>I tried to sketch a generic way of running \u201cproblems\u201d represented according to the <code>struct Problem</code> below. These structs include test input/output and a solver function. My goal is to run these problems either by interacting with standard I/O, or by some tester function that verifies the validity of the <code>solver</code> against the given <code>test_input</code>/<code>test_output</code>. The sketch here only includes a tester function.</p>\n\n<p>When I try to compile it, I get type mismatches:</p>\n\n<pre><code>problem.rs:43:22: 43:27 error: mismatched types:\n expected `R`,\n    found `std::io::cursor::Cursor&lt;&amp;[u8]&gt;`\n(expected type parameter,\n    found struct `std::io::cursor::Cursor`) [E0308]\nproblem.rs:43     (problem.solver)(input, &amp;mut output);\n                                   ^~~~~\nproblem.rs:43:22: 43:27 help: run `rustc --explain E0308` to see a detailed explanation\nproblem.rs:43:29: 43:40 error: mismatched types:\n expected `&amp;mut W`,\n    found `&amp;mut std::io::cursor::Cursor&lt;collections::vec::Vec&lt;u8&gt;&gt;`\n(expected type parameter,\n    found struct `std::io::cursor::Cursor`) [E0308]\nproblem.rs:43     (problem.solver)(input, &amp;mut output);\n                                          ^~~~~~~~~~~\nproblem.rs:43:29: 43:40 help: run `rustc --explain E0308` to see a detailed explanation\nerror: aborting due to 2 previous errors\n</code></pre>\n\n<p>I was expecting the compiler to take <code>Cursor&lt;&amp;[u8]&gt;</code> as a <code>BufRead</code>er, and <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code> as a <code>Write</code>r, but it didn\u2019t work. I don\u2019t know what to make of the expectation for an <code>R</code> or a <code>W</code>. </p>\n\n<p>I tried to run a similar tester function by calling directly the solver, without involving a <code>Problem</code> at all, and it worked; so I suppose these errors might have something to do with the way I call <code>(problem.solver)(input, &amp;mut output)</code>. Other than this, I have no clue. Can somebody please give me a hint of what\u2019s happening here?</p>\n\n<pre><code>use std::io::prelude::*;\nuse problems::Problem;\n\nmod problems {\n    use std::io::prelude::*;\n\n    pub struct Problem&lt;'a, R, W&gt;\n        where R: BufRead, W: Write\n    {\n        test_input: &amp;'a str,\n        test_output: &amp;'a str,\n        solver: Box&lt;fn(R, &amp;mut W)&gt;,\n    }\n\n    mod a_problem {\n        use std::io::prelude::*;\n        use super::Problem;\n\n        pub fn getProblem&lt;'a, R, W&gt;() -&gt; Problem&lt;'a, R, W&gt;\n            where R: BufRead, W: Write\n        {\n            Problem {\n                test_input: unimplemented!(),\n                test_output: unimplemented!(),\n                solver: Box::new(solver),\n            }\n        }\n\n        fn solver&lt;R, W&gt;(input: R, output: &amp;mut W)\n            where R: BufRead, W: Write\n        {\n            unimplemented!();\n        }\n    }\n}\n\nfn test_solver&lt;R, W&gt;(problem: Problem&lt;R, W&gt;)\n    where R: BufRead, W: Write\n{\n    let input = std::io::Cursor::new(problem.test_input.as_bytes());\n    let mut output = std::io::Cursor::new(Vec::&lt;u8&gt;::new());\n\n    (problem.solver)(input, &amp;mut output);\n    assert_eq!(problem.test_output.as_bytes(), &amp;*output.into_inner());\n}\n\nfn main() {\n    let problem = problems::a_problem::getProblem();\n    test_solver(problem);\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1445701311, "post_id": 33319450, "comment_id": 54437946, "body": "Short answer: no, you can&#39;t do it. This is a duplicate of <a href=\"http://stackoverflow.com/q/32300132/155423\">stackoverflow.com/q/32300132/155423</a>, just with different wording. Substitute &quot;tuple&quot; for &quot;struct&quot; in that question/answer to see why."}], "owner": {"reputation": 1466, "user_id": 799764, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/7a5f78d96e453188f22c1f5dc7e27ee6?s=128&d=identicon&r=PG", "display_name": "Dino", "link": "https://stackoverflow.com/users/799764/dino"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1445755019, "answer_count": 0, "score": 1, "last_activity_date": 1445701367, "creation_date": 1445697860, "last_edit_date": 1445701367, "question_id": 33319450, "link": "https://stackoverflow.com/questions/33319450/returning-an-object-and-references-to-it-from-one-function", "closed_reason": "Duplicate", "title": "Returning an object and references to it from one function", "body": "<p>I would like to test the following struct, where Bar and Baz are traits:</p>\n\n<pre><code>struct Foo {\n  bar: Box&lt;Bar&gt;,\n  baz: Box&lt;Baz&gt;,\n}\n\nimpl Foo {\n  pub fn new(bar: Box&lt;Bar&gt;, baz: Box&lt;Baz&gt;) -&gt; Foo {\n    Foo { bar: bar, baz: baz }\n  }\n}\n</code></pre>\n\n<p>In my test for <code>Foo</code>, I have structs <code>FakeBar</code> and <code>FakeBaz</code> and I would like to write a setup method which creates the fakes and the <code>Foo</code>, plumbs them together, and returns all of it as a tuple. Conceptually, I would like something of the form:</p>\n\n<pre><code>fn setup_foo() -&gt; (Box&lt;Foo&gt;, &amp;Bar, &amp;Baz) {\n  let fake_bar = Box::new(FakeBar);\n  let fake_baz = Box::new(FakeBaz);\n  let foo = Foo::new(fake_bar, fake_baz);\n  return (foo, &amp;fake_bar, &amp;fake_baz);\n}\n</code></pre>\n\n<p>With this setup, the compiler complains that the references in the returned tuples are missing lifetimes.</p>\n\n<p>So the question: is there any way for me to tell the compiler that this setup is ok because the returned <code>Foo</code> owns the <code>bar</code> and <code>baz</code> we are returning references to? Or am I trying to do something fundamentally impossible here?</p>\n\n<p>I realize that there are a few workarounds (like adding methods to <code>Foo</code> which return references to its <code>bar</code> and <code>baz</code>), but I'd rather not add methods exposing the <code>Foo</code> internals if I don't have to. Also, I am curious as to what I'm missing in the situation above.</p>\n"}, {"tags": ["rust", "mio"], "comments": [{"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 0, "creation_date": 1445677715, "post_id": 33315842, "comment_id": 54431025, "body": "I don&#39;t think it&#39;s possible to help you with just the information you posted. We would need at least your <code>Cargo.toml</code> to reproduce the problem, and you should also say what version of Rust you&#39;re using and exactly what errors you&#39;re getting."}, {"owner": {"reputation": 375, "user_id": 4933761, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a61bc63522ce3222e4e0f060ea8c3f2?s=128&d=identicon&r=PG&f=1", "display_name": "elszben", "link": "https://stackoverflow.com/users/4933761/elszben"}, "reply_to_user": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 0, "creation_date": 1445679403, "post_id": 33315842, "comment_id": 54431442, "body": "Edited the question and added the error message. I know I am not using the proper types because rustc is complaining but I have no idea what type I should use to cover my use case. Rustc version rustc 1.5.0-nightly (9d3e79ad3 2015-10-10)"}], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 4933761, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a61bc63522ce3222e4e0f060ea8c3f2?s=128&d=identicon&r=PG&f=1", "display_name": "elszben", "link": "https://stackoverflow.com/users/4933761/elszben"}, "edited": false, "score": 0, "creation_date": 1445684538, "post_id": 33317340, "comment_id": 54432861, "body": "Great, I totally missed that it is complaining about the reference and not the actual ByteBuf type and tried to import other Buf/ByteBuf pairs, hoping that it would compile... Did not even think of that! Thanks. It compiles now!"}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": true, "score": 2, "last_activity_date": 1445683915, "creation_date": 1445683915, "answer_id": 33317340, "question_id": 33315842, "link": "https://stackoverflow.com/questions/33315842/trouble-with-buffer-types-in-mio/33317340#33317340", "title": "Trouble with buffer types in mio", "body": "<p>The problem is this:</p>\n\n<pre><code>let buf = self.send_queue.first_mut().unwrap();\nmatch self.sock.try_write_buf(&amp;mut buf) {\n</code></pre>\n\n<p>You pass in an <code>&amp;mut &amp;mut ByteBuf</code> to <code>try_write_buf</code> because <code>buf</code> is already an <code>&amp;mut ByteBuf</code>. Just drop the extra <code>&amp;mut</code>:</p>\n\n<pre><code>let buf = self.send_queue.first_mut().unwrap();\nmatch self.sock.try_write_buf(buf) {\n</code></pre>\n"}], "owner": {"reputation": 375, "user_id": 4933761, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a61bc63522ce3222e4e0f060ea8c3f2?s=128&d=identicon&r=PG&f=1", "display_name": "elszben", "link": "https://stackoverflow.com/users/4933761/elszben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 424, "favorite_count": 0, "accepted_answer_id": 33317340, "answer_count": 1, "score": 1, "last_activity_date": 1445701761, "creation_date": 1445673221, "last_edit_date": 1445701761, "question_id": 33315842, "link": "https://stackoverflow.com/questions/33315842/trouble-with-buffer-types-in-mio", "title": "Trouble with buffer types in mio", "body": "<p>I'd like to write an asynchronous server in Rust using mio and I have trouble with the buffer types. I've tried different buffer types and can't get it to work. My current code is:</p>\n\n<pre><code>extern crate mio;\nextern crate bytes;\n\nuse std::io;\nuse std::io::{Error, ErrorKind};\nuse std::net::SocketAddr;\nuse std::str::FromStr;\nuse std::io::Cursor;\n\nuse self::mio::PollOpt;\nuse self::mio::EventLoop;\nuse self::mio::EventSet;\nuse self::mio::Token;\nuse self::mio::Handler;\nuse self::mio::io::TryRead;\nuse self::mio::io::TryWrite;\n//use self::mio::buf::ByteBuf;\n//use self::mio::buf::Buf;\nuse self::mio::tcp::*;\nuse self::bytes::buf::Buf;\nuse self::bytes::buf::byte::ByteBuf;\n\nstruct EventHandler;\n\nimpl Handler for EventHandler {\n    type Timeout = ();\n    type Message = ();\n\n    fn ready(&amp;mut self, event_loop: &amp;mut EventLoop&lt;EventHandler&gt;, token: Token, events: EventSet) {\n    }\n}\n\npub struct Connection {\n    sock: TcpStream,\n    send_queue: Vec&lt;ByteBuf&gt;,\n}\n\nimpl Connection {\n    pub fn writable(&amp;mut self, event_loop: &amp;mut EventLoop&lt;EventHandler&gt;) -&gt; Result&lt;(), String&gt; {\n        while !self.send_queue.is_empty() {\n            if !self.send_queue.first().unwrap().has_remaining() {\n                self.send_queue.pop();\n            }\n            let buf = self.send_queue.first_mut().unwrap();\n            match self.sock.try_write_buf(&amp;mut buf) {\n                Ok(None) =&gt; {\n                    return Ok(());\n                }\n                Ok(Some(n)) =&gt; {\n                    continue;\n                }\n                Err(e) =&gt; {\n                    return Err(format!(\"{}\", e));\n                }\n            }\n        }\n    Ok(())\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>The <code>Cargo.toml</code> contains the following dependencies:</p>\n\n<pre><code>mio = \"*\"\nbytes = \"*\"\n</code></pre>\n\n<p>which currently translates to bytes 0.2.11 and mio 0.4.3 in Cargo.lock.</p>\n\n<p>The error I am getting is this:</p>\n\n<pre><code>main.rs:45:29: 45:52 error: the trait `bytes::buf::Buf` is not implemented\n            for the type `&amp;mut bytes::buf::byte::ByteBuf` [E0277]\nmain.rs:45             match self.sock.try_write_buf(&amp;mut buf) {\n</code></pre>\n\n<p>I'd want to be able to write a <code>Vec&lt;u8&gt;</code> into the socket and handle the case when the buffer is only partially written. How can I accomplish that?</p>\n\n<p>I don't need explanation about the code that properly handles the return values, this question is about the buffer type. I have no idea which buffer type I have to use.</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445701538, "post_id": 33313468, "comment_id": 54438016, "body": "<i>this <code>.clone()</code> call should be very cheap</i> \u2014 more specifically, <a href=\"https://github.com/rust-lang/rust/blob/1.3.0/src/libcore/clone.rs#L60-L88\" rel=\"nofollow noreferrer\">it <i>is</i> a copy</a>. And it is very likely to be inlined."}, {"owner": {"reputation": 397, "user_id": 1262557, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/54d8b0841e29841c78ccf299a1553f29?s=128&d=identicon&r=PG", "display_name": "violet_white", "link": "https://stackoverflow.com/users/1262557/violet-white"}, "edited": false, "score": 0, "creation_date": 1445708061, "post_id": 33313468, "comment_id": 54440214, "body": "You&#39;re right. Just changed the copyable requirement to Clone and it works for the types I wanted it to. Thanks"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1445648641, "creation_date": 1445648641, "answer_id": 33313468, "question_id": 33312455, "link": "https://stackoverflow.com/questions/33312455/traits-for-both-cloneable-types-and-copyable-types/33313468#33313468", "title": "Traits for both Cloneable types and Copyable types", "body": "<p><a href=\"http://doc.rust-lang.org/stable/std/marker/trait.Copy.html\" rel=\"nofollow\"><code>Copy</code></a> is a subtrait of <a href=\"http://doc.rust-lang.org/stable/std/clone/trait.Clone.html\" rel=\"nofollow\"><code>Clone</code></a> (i.e. all <code>Copy</code> types are also <code>Clone</code>), so you could have a single <code>impl</code> with a bound on <code>Clone</code> and it will also accept all <code>Copy</code> types.</p>\n\n<pre><code>impl&lt;T: Grid2d, V: Clone&gt; Drawable for Line2d {\n   fn stroke(&amp;self, out: &amp;mut T);\n}\n</code></pre>\n\n<p>You'll have to explicitly call <code>.clone()</code> to get a copy of the value, but for <code>Copy</code> types, this <code>.clone()</code> call should be very cheap (and in release builds, it's likely to be inlined).</p>\n"}], "owner": {"reputation": 397, "user_id": 1262557, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/54d8b0841e29841c78ccf299a1553f29?s=128&d=identicon&r=PG", "display_name": "violet_white", "link": "https://stackoverflow.com/users/1262557/violet-white"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 33313468, "answer_count": 1, "score": 2, "last_activity_date": 1445701381, "creation_date": 1445640207, "last_edit_date": 1445701381, "question_id": 33312455, "link": "https://stackoverflow.com/questions/33312455/traits-for-both-cloneable-types-and-copyable-types", "title": "Traits for both Cloneable types and Copyable types", "body": "<p>I've been writing a fairly simple raster image trait system, but I was also wanting to extend it to work for comma-separated values, and it seems more natural to allow the trait for both pixels (which would have the <code>Copy</code> trait), and <code>String</code> (which does not).</p>\n\n<p>However, overloading for both causes conflicts. So how would one go about writing a trait which accepts both <code>Copy</code>able types and <code>Clone</code>able types?</p>\n\n<p>Currently the working definition looks like </p>\n\n<pre><code>impl&lt;T:Grid2d,V:Copy&gt; drawable for Line2d{\n   fn stroke(&amp;self,out:&amp;mut T);\n}\n</code></pre>\n\n<p>This works fine for pixels which are basically integers.</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 5480811, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db037fb50de27605dd2fd1701b0efe1e?s=128&d=identicon&r=PG&f=1", "display_name": "vigu", "link": "https://stackoverflow.com/users/5480811/vigu"}, "edited": false, "score": 0, "creation_date": 1445617148, "post_id": 33306937, "comment_id": 54412935, "body": "Assume that the vector of 1000 elements. You will need skip 997 elements, then display the remaining 3 elements. I want to skip 3 elements from end, then print 3 elements, total: 6 moves."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 21, "user_id": 5480811, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db037fb50de27605dd2fd1701b0efe1e?s=128&d=identicon&r=PG&f=1", "display_name": "vigu", "link": "https://stackoverflow.com/users/5480811/vigu"}, "edited": false, "score": 0, "creation_date": 1445621206, "post_id": 33306937, "comment_id": 54415135, "body": "@vigu iterators do not allow you to produce the same element twice, so you cannot iterate backwards and then iterate forwards over the same items again."}, {"owner": {"reputation": 21, "user_id": 5480811, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db037fb50de27605dd2fd1701b0efe1e?s=128&d=identicon&r=PG&f=1", "display_name": "vigu", "link": "https://stackoverflow.com/users/5480811/vigu"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445622412, "post_id": 33306937, "comment_id": 54415754, "body": "@Shepmaster compiler optimizes skip the first 1000 elements?"}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 3, "last_activity_date": 1445616553, "creation_date": 1445616553, "answer_id": 33306937, "question_id": 33306844, "link": "https://stackoverflow.com/questions/33306844/using-an-iterator-how-do-i-skip-a-number-of-values-and-then-display-the-rest/33306937#33306937", "title": "Using an iterator, how do I skip a number of values and then display the rest?", "body": "<p>I think the code you wrote does what you're asking it to. \nYou are reversing the vec with rev() and then you're taking the first 3 elements of the reversed vector (therefore 0, 9, 8)</p>\n\n<p>To obtain the last 3 in non-reversed order you can <code>skip</code> to the end of the vector minus 3 elements, without reversing it: </p>\n\n<pre><code>let vec = vec![1,2,3,4,5,6,7,8,9,0];\nlet n = vec.len() - 3;\nfor v in vec.iter().skip(n) {\n    println!(\"{}\", v);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1445625114, "creation_date": 1445625114, "answer_id": 33309165, "question_id": 33306844, "link": "https://stackoverflow.com/questions/33306844/using-an-iterator-how-do-i-skip-a-number-of-values-and-then-display-the-rest/33309165#33309165", "title": "Using an iterator, how do I skip a number of values and then display the rest?", "body": "<p>Neither <code>skip</code> nor <code>take</code> yield <code>DoubleEndIterator</code>, you have to either:</p>\n\n<ul>\n<li><code>skip</code>, which is O(N) in the number of skipped items</li>\n<li><code>collect</code> the result of <code>.rev().take()</code>, and then <code>rev</code> it, which is O(N) in the number of items to be printed, and requires allocating memory for them</li>\n</ul>\n\n<p>The <code>skip</code> is obvious, so let me illustrate the collect:</p>\n\n<pre><code>let vec = vec![1,2,3,4,5,6,7,8,9,0];\nlet vec: Vec&lt;_&gt; = vec.iter().rev().take(3).collect();\nfor v in vec.iter().rev() {\n    println!(\"{}\", v);\n}\n</code></pre>\n\n<p>Of course, the inefficiency is due to you shooting yourself in the foot by avoiding random access in the first place...</p>\n"}, {"tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": false, "score": 1, "last_activity_date": 1445809164, "creation_date": 1445809164, "answer_id": 33335389, "question_id": 33306844, "link": "https://stackoverflow.com/questions/33306844/using-an-iterator-how-do-i-skip-a-number-of-values-and-then-display-the-rest/33335389#33335389", "title": "Using an iterator, how do I skip a number of values and then display the rest?", "body": "<p>Based on the comments, I guess you want to iterate specifically through the elements of a <code>Vec</code> or slice. If that is the case, you could use range slicing, as shown below:</p>\n\n<pre><code>let vec = vec![1,2,3,4,5,6,7,8,9,0];\nlet n = vec.len() - 3;\nfor v in &amp;vec[n..] {\n    println!(\"{}\", v);\n}\n</code></pre>\n\n<p>The big advantage of this approach is that it doesn't require to skip through elements you are not interested in (which may have a big cost if not optimized away). It will just make a new slice and then iterate through it. In other words, you have the guarantee that it will be fast.</p>\n"}], "owner": {"reputation": 21, "user_id": 5480811, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db037fb50de27605dd2fd1701b0efe1e?s=128&d=identicon&r=PG&f=1", "display_name": "vigu", "link": "https://stackoverflow.com/users/5480811/vigu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1981, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1445809164, "creation_date": 1445616194, "last_edit_date": 1445616881, "question_id": 33306844, "link": "https://stackoverflow.com/questions/33306844/using-an-iterator-how-do-i-skip-a-number-of-values-and-then-display-the-rest", "title": "Using an iterator, how do I skip a number of values and then display the rest?", "body": "<p>Random access to the elements is not allowed.</p>\n\n<pre><code>let vec = vec![1,2,3,4,5,6,7,8,9,0];\nlet n = 3;\nfor v in vec.iter().rev().take(n) {\n    println!(\"{}\", v);\n}\n// this printed: 0, 9, 8\n// need: 8, 9, 0\n</code></pre>\n\n<p><code>for v in vec.iter().rev().skip(n).rev()</code> does not work.</p>\n"}, {"tags": ["rust", "ffi", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445613689, "post_id": 33305573, "comment_id": 54410736, "body": "Is use-after-free not enough of a danger? Many security bugs happen because of such."}, {"owner": {"reputation": 485, "user_id": 5350761, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-0vaJdsJ7fXw/AAAAAAAAAAI/AAAAAAAAD9s/pdF45XCQLN4/photo.jpg?sz=128", "display_name": "Jackson Loper", "link": "https://stackoverflow.com/users/5350761/jackson-loper"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445631185, "post_id": 33305573, "comment_id": 54420233, "body": "(thanks; I fixed typo).  It&#39;s plenty of danger :).  I was just worried there was something <i>else</i> I had to be afraid of."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 1, "creation_date": 1445776531, "post_id": 33305573, "comment_id": 54456327, "body": "It&#39;s worth noting that use-after-free can lead to essentially any other memory safety problem, since it can cause arbitrary heap corruption (e.g. a UAF may change the memory representing the length of some array, and then subsequent accesses to that array could be out-of-bounds). (This is in fact true of most memory safety problems: each one of them can have knock-on effects that cause any other memory safety problem you can imagine.)"}], "answers": [{"tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": false, "score": 0, "last_activity_date": 1445772761, "last_edit_date": 1445772761, "creation_date": 1445633327, "answer_id": 33311161, "question_id": 33305573, "link": "https://stackoverflow.com/questions/33305573/why-is-the-lifetime-important-for-slicefrom-raw-parts/33311161#33311161", "title": "Why is the lifetime important for slice::from_raw_parts?", "body": "<p><strong>UPDATE:</strong> as delnan stated, mutable aliasing is a real problem that may arise from setting an incorrect lifetime. See his/her answer for more details.</p>\n\n<h3>Old answer</h3>\n\n<p>Use-after-free is indeed the only danger to fear when setting the slice lifetime. The compiler will trust you and assume the data pointed by the slice lives as long as the lifetime you specify. In case your annotated lifetime is longer than the real lifetime of the underlying data, you may end up with use-after-free bugs (you will be able to use the slice while the data has already been deallocated).</p>\n\n<p>Regarding your assumptions, they are correct. Lifetime annotations don't have any effect on the memory management of the data.</p>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 10, "last_activity_date": 1502291617, "last_edit_date": 1502291617, "creation_date": 1445698185, "answer_id": 33319505, "question_id": 33305573, "link": "https://stackoverflow.com/questions/33305573/why-is-the-lifetime-important-for-slicefrom-raw-parts/33319505#33319505", "title": "Why is the lifetime important for slice::from_raw_parts?", "body": "<p>Use-after-free is <strong>not</strong> the only danger. With the wrong lifetime, one can cause mutable aliasing. Let's take this (contrived) function as an example:</p>\n\n<pre><code>fn duplicate_mut_slice&lt;'a, T&gt;(xs: &amp;mut [T]) -&gt; &amp;'a mut [T] {\n    let ptr = xs.as_mut_ptr(); // btw, this part is safe!\n    unsafe { std::slice::from_raw_parts_mut(ptr, xs.len()) }\n}\n</code></pre>\n\n<p>Because of how the lifetimes line up, calls like this will succeed:</p>\n\n<pre><code>fn alias_first_element&lt;T&gt;(xs: &amp;mut [T]) -&gt; (&amp;mut T, &amp;mut T) {\n    let a = duplicate_mut_slice(xs);\n    let b = duplicate_mut_slice(xs);\n    (&amp;mut a[0], &amp;mut b[0])\n}\n</code></pre>\n\n<p>Note that in this second function's signature, the lifetimes are correct and use-after-free is not an (immediate) danger. But mutable aliasing is very insidious. Basically everything relies on the guaranteed absence of mutable aliasing to prevent problems like race conditions, iterator invalidation, logic errors and indeed use-after-free (of something <em>managed by</em> the <code>T</code>). You can cause almost any problem imaginable with mutable aliasing.</p>\n"}], "owner": {"reputation": 485, "user_id": 5350761, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-0vaJdsJ7fXw/AAAAAAAAAAI/AAAAAAAAD9s/pdF45XCQLN4/photo.jpg?sz=128", "display_name": "Jackson Loper", "link": "https://stackoverflow.com/users/5350761/jackson-loper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 813, "favorite_count": 1, "accepted_answer_id": 33319505, "answer_count": 2, "score": 9, "last_activity_date": 1502291617, "creation_date": 1445612541, "last_edit_date": 1502291535, "question_id": 33305573, "link": "https://stackoverflow.com/questions/33305573/why-is-the-lifetime-important-for-slicefrom-raw-parts", "title": "Why is the lifetime important for slice::from_raw_parts?", "body": "<p>The docs for <code>slice::from_raw_parts</code> warn the programmer to annotate the slice with the correct lifetime.  I assume that, given some lifetime <code>'a</code>, I can perform this annotation with </p>\n\n<pre><code>let myslice: &amp;'a mut [i32] = std::slice::from_raw_parts_mut(ptr, sz)\n</code></pre>\n\n<p>I also assume that</p>\n\n<ul>\n<li>Since <code>myslice</code> is a reference, it has nothing to do with the allocation/deallocation of the underlying data pointed to by ptr. The lifetime annotation doesn't affect the memory management of the data.</li>\n<li>There's nothing tricky about memory management for <code>myslice</code> itself (i.e. a struct containing a pointer and a size).  It's just like any other struct or <code>i32</code>.  If I put it in a <code>Box</code>, then the <code>std::raw::slice</code> struct will get deallocated when the <code>Box</code> dies. The data referred to by the slice will not get deallocated, of course.  The lifetime doesn't affect the memory management for the slice.</li>\n</ul>\n\n<p>Why is it important that I get the lifetime correct?  Is use-after-free the only danger to fear when setting the slice lifetime?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445577824, "post_id": 33295193, "comment_id": 54390120, "body": "The code as presented has problems and does not have an error as described. Instead, after making the code compile, the errors I get are &quot;the trait <code>core::marker::Sized</code> is not implemented for the type <code>Self</code>&quot; and &quot;no method named <code>map</code>&quot;. Please create an <a href=\"/help/mcve\">MCVE</a>, ideally one that compiles on the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playground</a>."}, {"owner": {"reputation": 1180, "user_id": 1496062, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/baea31fd59646da8ecf93b5fa519b67a?s=128&d=identicon&r=PG", "display_name": "user1496062", "link": "https://stackoverflow.com/users/1496062/user1496062"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445595756, "post_id": 33295193, "comment_id": 54398965, "body": "The where clause gets you to that error but it doesn&#39;t look right second error is fixed with iter() . FIrst error is how do you do it .. I don&#39;t know what to do to get it to compile.   This is my current attempt"}], "answers": [{"comments": [{"owner": {"reputation": 1180, "user_id": 1496062, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/baea31fd59646da8ecf93b5fa519b67a?s=128&d=identicon&r=PG", "display_name": "user1496062", "link": "https://stackoverflow.com/users/1496062/user1496062"}, "edited": false, "score": 0, "creation_date": 1445671702, "post_id": 33304728, "comment_id": 54429669, "body": "Is there a way to constrain the concrete types of the Aggregateroot  to Aggregates so mark changes can be called ? The apply was what i was looking for.. When learning a new language you try many things. This says &quot;for any possible AggregateRoot, create a new one&quot;.    The purpose of this is so external objects can create the concrete implementation and populate it via events ( normally a repository)  , which the concrete impl will handle..   The caller can mark it as complete but it leads to bad bugs if not done."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1180, "user_id": 1496062, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/baea31fd59646da8ecf93b5fa519b67a?s=128&d=identicon&r=PG", "display_name": "user1496062", "link": "https://stackoverflow.com/users/1496062/user1496062"}, "edited": false, "score": 0, "creation_date": 1445703051, "post_id": 33304728, "comment_id": 54438539, "body": "@user1496062 I answered your question inline. I wasn&#39;t clear if there were more question hidden in your comment :-)"}, {"owner": {"reputation": 1180, "user_id": 1496062, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/baea31fd59646da8ecf93b5fa519b67a?s=128&d=identicon&r=PG", "display_name": "user1496062", "link": "https://stackoverflow.com/users/1496062/user1496062"}, "edited": false, "score": 0, "creation_date": 1445770869, "post_id": 33304728, "comment_id": 54454767, "body": "Thanks.   markchanges relates specifically to the data , it clears the underlying collection ..  You can see from the C# / F# examples what I&#39;m trying to do. As they have some concrete implementations which I haven&#39;t got to yet.  Note all impl will use the struct Aggregate and extend it  , they are very closely linked."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1445703013, "last_edit_date": 1445703013, "creation_date": 1445610212, "answer_id": 33304728, "question_id": 33295193, "link": "https://stackoverflow.com/questions/33295193/static-method-in-trait-dynamic-dispatch/33304728#33304728", "title": "Static method in trait dynamic dispatch", "body": "<p>Let's start with issues in how you asked the question, in the hopes that you will be able to ask better questions in the future. The complete error you are getting is:</p>\n\n<pre><code>&lt;anon&gt;:27:37: 27:52 error: the type of this value must be known in this context\n&lt;anon&gt;:27             changes.iter().map( |e| newAgg.Apply(e) );\n                                              ^~~~~~~~~~~~~~~\n</code></pre>\n\n<p>Note that the compiler error message shows you exactly which bit of code is at fault. It's useful to include that error when asking a question.</p>\n\n<p>You've also included extraneous detail. For example, <code>GetUncomittedChanges</code>, <code>id</code> and <code>GetId</code> are all unused in your example. When solving a problem, you should produce an <a href=\"/help/mcve\">MCVE</a>. This helps you understand the problem better and also allows people helping you to look at less code which usually results in faster turnaround.</p>\n\n<hr>\n\n<p>Your code has a number of problems, but let's start at the first error:</p>\n\n<pre><code>let newAgg  = AggregateRoot::new2 ();\n</code></pre>\n\n<p>This says \"for any possible <code>AggregateRoot</code>, create a new one\". Many concrete types can implement a trait (which is the point of traits), but the compiler needs to know how much space to allocate for a given instance. There might be a struct that takes 1 byte or 200 bytes; how much space needs to be allocated on the stack in <em>this</em> case?</p>\n\n<p>To progress, you can use <code>Self::new2</code> instead. That means to create a new instance <strong>of the current implementor</strong>.</p>\n\n<p>The next error is</p>\n\n<pre><code>&lt;anon&gt;:20:16: 20:40 error: no method named `MarkChangesAsCommitted` found for type `Self` in the current scope\n&lt;anon&gt;:20         newAgg.MarkChangesAsCommitted();\n                         ^~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>You are calling a method on a concrete type from a trait implementation; this simply doesn't make any sense. What would happen if a <code>bool</code> implements this trait? It doesn't have a <code>MarkChangesAsCommitted</code> method. I don't know what you intended in this case, so I'll just delete it.</p>\n\n<p>Now you get this error:</p>\n\n<pre><code>&lt;anon&gt;:19:9: 19:16 error: `changes` does not live long enough\n&lt;anon&gt;:19         changes.iter().map( |e| newAgg.Apply(e) );\n                  ^~~~~~~\n\nnote: reference must be valid for the static lifetime...\n&lt;anon&gt;:17:5: 21:6 note: ...but borrowed value is only valid for the scope of parameters for function at 17:4\n</code></pre>\n\n<p>That's because your method <code>Apply</code> expects to be given a type that implements <code>Any</code>. However, you are passing a <code>&amp;Box&lt;Any&gt;</code>. <code>Any</code> has a lifetime bound of <code>'static</code>, and that reference is not static. A straightforward change is to accept a reference to a type that implements <code>Any</code>:</p>\n\n<pre><code>fn Apply&lt;U: Any&gt;(&amp;self, arg: &amp;U);\n</code></pre>\n\n<hr>\n\n<p>Now that the code compiles, there's a number of stylistic issues to fix:</p>\n\n<ol>\n<li>no space before <code>:</code></li>\n<li>no space after <code>&gt;</code></li>\n<li>no space before <code>(</code></li>\n<li>no space inside <code>()</code></li>\n<li><code>map</code> should not be used for side effects</li>\n<li>function and variable names are <code>camel_case</code></li>\n<li>most of the time, accept a <code>&amp;[T]</code> instead of a <code>Vec&lt;T&gt;</code> as a function argument.</li>\n<li>use \"Egyptian\" braces, except when you are using a <code>where</code> clause.</li>\n</ol>\n\n<p>All together, your code looks like:</p>\n\n<pre><code>use std::any::Any;\n\nstruct Aggregate&lt;T: AggregateRoot&gt; {\n    agg: T,\n    changes: Vec&lt;Box&lt;Any&gt;&gt;\n}\n\nimpl&lt;T: AggregateRoot&gt; Aggregate&lt;T&gt; {\n    fn mark_changes_as_committed(&amp;self) { }\n}\n\ntrait AggregateRoot {\n    fn new() -&gt; Self;\n\n    fn load_from_history(changes: &amp;[Box&lt;Any&gt;]) -&gt; Self\n         where Self: Sized\n    {\n        let new_agg = Self::new();\n        for change in changes { new_agg.apply(change) }\n        new_agg\n    }\n\n    fn apply&lt;U: Any&gt;(&amp;self, arg: &amp;U);\n}\n\nfn main() {}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>Is there a way to constrain the concrete types of the <code>AggregateRoot</code> to <code>Aggregates</code> so <code>mark_changes</code> can be called?</p>\n</blockquote>\n\n<p>Not that I'm aware of. It sounds like you want to move <code>mark_changes</code> to the trait and force all implementors of the trait to implement it:</p>\n\n<pre><code>trait AggregateRoot {\n    fn load_from_history(changes: &amp;[Box&lt;Any&gt;]) -&gt; Self\n         where Self: Sized\n    {\n        let new_agg = Self::new();\n        for change in changes { new_agg.apply(change) }\n        new_agg.mark_changes_as_committed();\n        new_agg\n    }\n\n    fn mark_changes_as_committed(&amp;self);\n\n    // ...\n}\n</code></pre>\n"}], "owner": {"reputation": 1180, "user_id": 1496062, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/baea31fd59646da8ecf93b5fa519b67a?s=128&d=identicon&r=PG", "display_name": "user1496062", "link": "https://stackoverflow.com/users/1496062/user1496062"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1321, "favorite_count": 0, "accepted_answer_id": 33304728, "answer_count": 1, "score": 0, "last_activity_date": 1445703013, "creation_date": 1445576610, "last_edit_date": 1445671811, "question_id": 33295193, "link": "https://stackoverflow.com/questions/33295193/static-method-in-trait-dynamic-dispatch", "title": "Static method in trait dynamic dispatch", "body": "<p>Trying to get dynamic dispatch working in a trait static method but get a type must be known error. </p>\n\n<p>I'm trying to achieve something like </p>\n\n<ul>\n<li>F#\n<a href=\"https://github.com/Thorium/SimpleCQRS-FSharp/blob/master/CommandSide/Domain.fs\" rel=\"nofollow\">https://github.com/Thorium/SimpleCQRS-FSharp/blob/master/CommandSide/Domain.fs</a></li>\n<li>C#<br>\n<a href=\"https://github.com/gregoryyoung/m-r/blob/master/SimpleCQRS/Domain.cs\" rel=\"nofollow\">https://github.com/gregoryyoung/m-r/blob/master/SimpleCQRS/Domain.cs</a>..</li>\n</ul>\n\n<p>Is the only way to make the trait generic?  </p>\n\n<pre><code>pub struct Aggregate&lt;T: AggregateRoot&gt;\n{\n    pub id: Uuid,\n    agg: T,\n    changes:  Vec&lt;Box&lt;Any&gt;&gt;\n}\n\nimpl &lt;T :AggregateRoot &gt; Aggregate&lt;T&gt;\n{\n    fn GetUncomittedChanges(&amp;self) -&gt; Vec&lt;Box&lt;Any&gt;&gt; { self.changes}\n    fn MarkChangesAsCommitted(&amp;self)  { self.changes.drain(..);}\n}\n\n\ntrait AggregateRoot\n{\n    fn new2() -&gt; Self;  //should be private\n    fn new(id: Uuid) -&gt; Self;\n\n    fn LoadsFromHistory(changes : Vec&lt;Box&lt;Any&gt;&gt; ) -&gt; Self\n         where Self: Sized\n    {\n        let newAgg  = AggregateRoot::new2 ();\n        changes.iter().map( |e| newAgg.Apply(e) );\n        newAgg.MarkChangesAsCommitted();\n        newAgg\n    }\n\n    fn Apply&lt;U: Any&gt;(&amp;self, arg: U) ;\n    fn GetId(&amp;self) -&gt; Uuid;\n}\n</code></pre>\n\n<p>currently trying  but gives 2 params expected 1 supplied.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 809, "user_id": 4562090, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/49c1bc24e5ba1f2f49155650e7902a3c?s=128&d=identicon&r=PG&f=1", "display_name": "Raynal Gobel", "link": "https://stackoverflow.com/users/4562090/raynal-gobel"}, "edited": false, "score": 0, "creation_date": 1445578275, "post_id": 33295303, "comment_id": 54390245, "body": "got it. Thank you very much."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1445578700, "last_edit_date": 1445578700, "creation_date": 1445577353, "answer_id": 33295303, "question_id": 33294932, "link": "https://stackoverflow.com/questions/33294932/parsing-variable-from-delimited-file/33295303#33295303", "title": "Parsing variable from delimited file", "body": "<p>Since your data is line-based, you can use <a href=\"http://doc.rust-lang.org/std/io/trait.BufRead.html#method.lines\" rel=\"nofollow\"><code>BufRead::lines</code></a>:</p>\n\n<pre><code>use std::io::{BufReader, BufRead};\n\nfn main() {\n    let input = r#\"1|130|80|120|110|E\n2|290|420|90|70|B\n3|100|220|30|80|C\n\"#;\n\n    let reader = BufReader::new(input.as_bytes());\n\n    for line in reader.lines() {\n        for value in line.unwrap().split('|') {\n            println!(\"{}\", value);\n        }\n    }\n}\n</code></pre>\n\n<p>This gives you an iterator over <code>Strings</code> for each line in the input. You then use <a href=\"http://doc.rust-lang.org/std/primitive.str.html#method.split\" rel=\"nofollow\"><code>str::split</code></a> to get the pieces.</p>\n\n<p>Alternatively, you can take the <code>&amp;[u8]</code> you already have and make a string from it with <a href=\"http://doc.rust-lang.org/std/str/fn.from_utf8.html\" rel=\"nofollow\"><code>str::from_utf8</code></a>:</p>\n\n<pre><code>use std::io::{BufReader, BufRead};\nuse std::str;\n\nfn main() {\n    let input = r#\"1|130|80|120|110|E\n2|290|420|90|70|B\n3|100|220|30|80|C\n\"#;\n\n    let reader = BufReader::new(input.as_bytes());\n\n    for vars in reader.split(b'|') {\n        let bytes = vars.unwrap();\n        let s = str::from_utf8(&amp;bytes).unwrap();\n        println!(\"{}\", s);\n    }\n}\n</code></pre>\n\n<p>You may also want to look into the <a href=\"http://burntsushi.net/rustdoc/csv/\" rel=\"nofollow\">csv</a> crate if you are reading structured data like a CSV that just happens to be pipe-delimited.</p>\n"}], "owner": {"reputation": 809, "user_id": 4562090, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/49c1bc24e5ba1f2f49155650e7902a3c?s=128&d=identicon&r=PG&f=1", "display_name": "Raynal Gobel", "link": "https://stackoverflow.com/users/4562090/raynal-gobel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 664, "favorite_count": 0, "accepted_answer_id": 33295303, "answer_count": 1, "score": 2, "last_activity_date": 1445578700, "creation_date": 1445574755, "last_edit_date": 1445576795, "question_id": 33294932, "link": "https://stackoverflow.com/questions/33294932/parsing-variable-from-delimited-file", "title": "Parsing variable from delimited file", "body": "<p>I have some file content which delimited by pipe <code>|</code> symbol. Named, <code>important.txt</code>.</p>\n\n<pre><code>1|130|80|120|110|E\n2|290|420|90|70|B\n3|100|220|30|80|C\n</code></pre>\n\n<p>Then, I use Rust <code>BufReader::split</code> to read its content.</p>\n\n<pre><code>use std::error::Error;\nuse std::fs::File;\nuse std::io::BufReader;\nuse std::io::Prelude::*;\nuse std::path::Path;\n\nfn main() {\n    let path = Path::new(\"important.txt\");\n    let display = path.display();\n\n    //Open read-only\n    let file = match File::open(&amp;path) {\n        Err(why) =&gt; panic!(\"can't open {}: {}\", display,\n                           Error::description(why)),\n        Ok(file) =&gt; file,\n    }\n\n    //Read each line\n    let reader = BufReader::new(&amp;file);\n    for vars in reader.split(b'|') {\n        println!(\"{:?}\\n\", vars.unwrap());\n    }\n}\n</code></pre>\n\n<p>The problem is, <code>vars.unwrap()</code> would return bytes instead of string.</p>\n\n<pre><code>[49]\n[49, 51, 48]\n[56, 48]\n[49, 50, 48]\n[49, 49, 48]\n[69, 10, 50]\n[50, 57, 48]\n[52, 50, 48]\n[57, 48]\n[55, 48]\n[66, 10, 51]\n[49, 48, 48]\n[50, 50, 48]\n[51, 48]\n[56, 48]\n[67, 10]\n</code></pre>\n\n<p>Do you have any ideas how to parse this delimited file into variable in Rust?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "edited": false, "score": 0, "creation_date": 1445537750, "post_id": 33286481, "comment_id": 54375762, "body": "Thanks, I knew it would be something trivial. I guess you have to change the Vec type to String in the last line as well."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "reply_to_user": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "edited": false, "score": 0, "creation_date": 1445546880, "post_id": 33286481, "comment_id": 54381080, "body": "@ehsisthatsweird You&#39;re right, I missed that. Incidentally, the type annotation should not be necessary here, type inference can handle this case."}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": true, "score": 5, "last_activity_date": 1445546808, "last_edit_date": 1445546808, "creation_date": 1445533004, "answer_id": 33286481, "question_id": 33286213, "link": "https://stackoverflow.com/questions/33286213/why-does-my-variable-not-live-long-enough/33286481#33286481", "title": "Why does my variable not live long enough?", "body": "<p>The problem is that <code>string</code> is created in your function and will be destroyed when the function returns. The vector you want to return contains slices of <code>string</code>, but those will not be valid outside of your function.</p>\n\n<p>If you're not terribly worried about performance, you can return a <code>Vec&lt;String&gt;</code> from your function. You just have to return type to <code>Result&lt;Vec&lt;String&gt;, io::Error&gt;</code> and change the line</p>\n\n<pre><code>let data: Vec&lt;&amp;str&gt; = string.split('\\n').collect();\n</code></pre>\n\n<p>to</p>\n\n<pre><code>let data: Vec&lt;String&gt; = string.split('\\n').map(String::from).collect();\n</code></pre>\n"}], "owner": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1795, "favorite_count": 0, "accepted_answer_id": 33286481, "answer_count": 1, "score": 0, "last_activity_date": 1502479648, "creation_date": 1445532086, "last_edit_date": 1502479648, "question_id": 33286213, "link": "https://stackoverflow.com/questions/33286213/why-does-my-variable-not-live-long-enough", "title": "Why does my variable not live long enough?", "body": "<p>I have a simple piece of code that is supposed to read a file into a vector by lines</p>\n\n<pre><code>use std::io::{self, Read};\nuse std::fs::File;\n\nfn file_to_vec(filename: &amp;str) -&gt; Result&lt;Vec&lt;&amp;str&gt;, io::Error&gt; {\n    let mut file = try!(File::open(filename));\n    let mut string = String::new();\n    try!(file.read_to_string(&amp;mut string));\n    string.replace(\"\\r\", \"\");\n\n    let data: Vec&lt;&amp;str&gt; = string.split('\\n').collect();\n\n    Ok(data)\n}\n\nfn main() {}\n</code></pre>\n\n<p>I am getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `string` does not live long enough\n  --&gt; src/main.rs:10:27\n   |\n10 |     let data: Vec&lt;&amp;str&gt; = string.split('\\n').collect();\n   |                           ^^^^^^ does not live long enough\n...\n13 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 4:1...\n  --&gt; src/main.rs:4:1\n   |\n4  | / fn file_to_vec(filename: &amp;str) -&gt; Result&lt;Vec&lt;&amp;str&gt;, io::Error&gt; {\n5  | |     let mut file = try!(File::open(filename));\n6  | |     let mut string = String::new();\n7  | |     try!(file.read_to_string(&amp;mut string));\n...  |\n12 | |     Ok(data)\n13 | | }\n   | |_^\n</code></pre>\n\n<p>Why do I keep getting this error? How do I fix this? I imagine that it has something to do with the <code>split</code> method. </p>\n\n<p>I could return the string and then split it into a <code>Vec</code> in the main function, but I really want to return a vector.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445527333, "post_id": 33283763, "comment_id": 54369522, "body": "<i>if I convert a <code>String</code> into an <code>&amp;str</code> inside the macro</i> \u2014 have you tried it outside of a macro? Do you get any error messages? Have you tried searching for those error messages? Saying something is &quot;weird&quot; or that it &quot;doesn&#39;t work&quot; is the least useful kind of request for help."}, {"owner": {"reputation": 861, "user_id": 1681590, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/42686c3aa6908ce6a7b320d2ba1f2dd2?s=128&d=identicon&r=PG", "display_name": "bge0", "link": "https://stackoverflow.com/users/1681590/bge0"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1445541219, "post_id": 33283763, "comment_id": 54377610, "body": "I did try it outside. It is described <b>exactly</b> in the <code>works()</code> method."}], "answers": [{"comments": [{"owner": {"reputation": 861, "user_id": 1681590, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/42686c3aa6908ce6a7b320d2ba1f2dd2?s=128&d=identicon&r=PG", "display_name": "bge0", "link": "https://stackoverflow.com/users/1681590/bge0"}, "edited": false, "score": 0, "creation_date": 1445541761, "post_id": 33285394, "comment_id": 54377934, "body": "Thank you for the clear, concise &amp; constructive explanation!"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 4, "last_activity_date": 1445530568, "last_edit_date": 1445530568, "creation_date": 1445529531, "answer_id": 33285394, "question_id": 33283763, "link": "https://stackoverflow.com/questions/33283763/weird-macro-behavior-for-type-inference/33285394#33285394", "title": "Weird macro behavior for type inference", "body": "<p>This is the effective body of your <code>works()</code> function:</p>\n\n<pre><code>fn works(){\n    let value1 = 5;\n    let value1str: &amp;str = &amp;value1.to_string();\n    let h = {\n        let mut map = HashMap::new();\n        map.insert(\"key0\".clone(), \"value0\".clone());\n        map.insert(\"key1\".clone(), value1str.clone());\n        map\n    };\n    println!(\"{:?}\", h);\n}\n</code></pre>\n\n<p>And this one of <code>does_not_work()</code>:</p>\n\n<pre><code>fn does_not_work(){\n    let value1 = 5;\n    let h = {\n        let mut map = HashMap::new();\n        map.insert(\"key0\".clone(), \"value0\".clone());\n        map.insert(\"key1\".clone(), (&amp;value1.to_string()).clone());\n        map\n    };\n    println!(\"{:?}\", h);\n}\n</code></pre>\n\n<p>When <code>clone()</code> is called on an <code>&amp;str</code>, it is just a simple byte-wise copy of a fat pointer (two pointer-sized numbers): shared references are always <code>Copy</code>; the cloned reference also has the same lifetime as the original one, naturally. This is okay in <code>works()</code> because three of string slices used there point to static memory as they are string literals, and the fourth one points to a temporary local variable which lives until the end of the function:</p>\n\n<pre><code>let value1str: &amp;str = &amp;value1.to_string();\n// is in fact equivalent to\nlet temporary = value1.to_string();\nlet value1str: &amp;str = &amp;temporary;\n</code></pre>\n\n<p>Because this <code>temporary</code> lives longer than the hash map, a reference to it can be stored inside this hash map: the map gets destroyed first and never gets a chance to hold a dangling reference.</p>\n\n<p>In the second case, however, <code>clone()</code> is called on a value of type <code>&amp;String</code>, because <code>&amp;s</code> if <code>s: String</code> will give you <code>&amp;str</code> only if the compiler knows that <code>&amp;str</code> should be the target type, and this is not the case because <code>&amp;value1.to_string()</code> is passed to <code>clone()</code> afterwards. When <code>clone()</code> is called on <code>&amp;String</code>, it naturally delegates to <code>impl Clone for String</code> which just makes another owned copy of a string, giving you <code>String</code>. This in turn gives you a type mismatch error:</p>\n\n<pre><code>&lt;anon&gt;:20:34: 4:50 error: mismatched types:\n expected `&amp;str`,\n    found `collections::string::String`\n(expected &amp;-ptr,\n    found struct `collections::string::String`) [E0308]\n</code></pre>\n\n<p>There is a way to work around it - you can ask <code>&amp;str</code> out of a <code>&amp;String</code> directly, e.g. with explicit reborrowing:</p>\n\n<pre><code>&amp;*value1.to_string()\n</code></pre>\n\n<p>However, another problem will now arise. Whatever temporary value <code>value1.to_string()</code> returns is only valid during the expression inside which it is used:</p>\n\n<pre><code>map.insert(\"key1\".clone(), (&amp;*value1.to_string()).clone());\n// is roughly equivalent to\n{\n    let temporary = value1.to_string();\n    map.insert(\"key1\".clone(), (&amp;*temporary).clone());\n}  // these braces are important!\n</code></pre>\n\n<p>You can see that <code>temporary</code> will be immediately destroyed when the call to <code>insert()</code> completes, and the inserted reference would become dangling. Rust prevents that with a compiler error.</p>\n"}], "owner": {"reputation": 861, "user_id": 1681590, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/42686c3aa6908ce6a7b320d2ba1f2dd2?s=128&d=identicon&r=PG", "display_name": "bge0", "link": "https://stackoverflow.com/users/1681590/bge0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 33285394, "answer_count": 1, "score": -2, "last_activity_date": 1445530568, "creation_date": 1445524835, "last_edit_date": 1445527248, "question_id": 33283763, "link": "https://stackoverflow.com/questions/33283763/weird-macro-behavior-for-type-inference", "title": "Weird macro behavior for type inference", "body": "<p>I'm trying to understand macros &amp; utilizing a simple macro to create a hashmap similar to <code>vec!</code>. For some reason if I convert a <code>String</code> into an <code>&amp;str</code> inside the macro it doesn't seem to work.</p>\n\n<pre><code>macro_rules! hashmap {\n    ($( $key: expr =&gt; $val: expr ),*) =&gt; {{\n         let mut map = ::std::collections::HashMap::new();\n         $( map.insert($key.clone(), $val.clone()); )*\n         map\n    }}\n}\n\nfn works(){\n    let value1 = 5;\n    let value1str: &amp;str = &amp;value1.to_string();\n    let h = hashmap![\"key0\"   =&gt; \"value0\"\n                     , \"key1\" =&gt; value1str];\n    println!(\"{:?}\", h);\n}\n\n// fn does_not_work(){\n//     let value1 = 5;\n//     let h = hashmap![\"key0\"   =&gt; \"value0\"\n//                      , \"key1\" =&gt; &amp;value1.to_string()];\n//     println!(\"{:?}\", h);\n// }\n\nfn main(){\n    works();\n    //does_not_work();\n}\n</code></pre>\n\n<p><a href=\"http://is.gd/ny2nvC\" rel=\"nofollow\">Example on playpen</a></p>\n"}]