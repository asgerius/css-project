[{"tags": ["rust", "language-lawyer", "dynamic-dispatch"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1530136826, "post_id": 51071925, "comment_id": 89133807, "body": "This is currently reproducible in the <a href=\"http://play.rust-lang.org/?gist=2c51a1d4aaa645661bed78a37f130589&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a> as well!"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530137207, "post_id": 51072034, "comment_id": 89133942, "body": "@Tim not as of the current 2018 implementation. Seems deliberate."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1530138079, "post_id": 51072034, "comment_id": 89134180, "body": "The way I see it, a safe &quot;fix&quot; for this would involve deprecating <code>dyn</code> as a module name in one edition and prohibiting it in the next one. That might take a while."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1530170013, "post_id": 51072034, "comment_id": 89142409, "body": "@E_net4 Since 2018 is a preview at the moment, I don&#39;t see, why this shouldn&#39;t be possible for 2018."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1530170223, "post_id": 51072034, "comment_id": 89142534, "body": "On the other hand... that would lead to inconsistency with <a href=\"https://rust-lang-nursery.github.io/edition-guide/2018/transitioning/modules/path-clarity.html\" rel=\"nofollow noreferrer\">Path Clarity</a>. The <code>::</code> should no longer be required at all."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530218940, "post_id": 51072034, "comment_id": 89170278, "body": "@Tim Rust code in one edition must compile and have the same behaviour in the next. So no, we would need at least two editions for such a change to happen."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1530971705, "last_edit_date": 1530971705, "creation_date": 1530136844, "answer_id": 51072034, "question_id": 51071925, "link": "https://stackoverflow.com/questions/51071925/error-e0433-when-dyn-used-with-absolute-path/51072034#51072034", "title": "Error [E0433] when `dyn` used with absolute path", "body": "<p>This is a backwards compatibility \"gotcha\" of the fact that <code>dyn</code> is a contextual keyword. Before the new syntax was added, you can write this code which uses <code>dyn</code> as a module name:</p>\n\n<pre><code>mod dyn {\n    pub trait Error {}\n}\n\nfn example() -&gt; Box&lt;dyn ::Error&gt; {\n//                     ^ space doesn't matter\n    unimplemented!()\n}\n</code></pre>\n\n<p>This <em>cannot</em> stop compiling, so it must be parsed as a path component.</p>\n\n<p>You can add parenthesis to be explicit:</p>\n\n<pre><code>fn example() -&gt; Box&lt;dyn (::dyn::Error)&gt; { /* ... */ }\n</code></pre>\n\n<p>In the 2018 edition, you can use <code>crate</code> at the beginning of a path:</p>\n\n<pre><code>fn example() -&gt; Box&lt;dyn crate::dyn::Error&gt; { /* ... */ }\n</code></pre>\n"}], "owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 276, "favorite_count": 0, "accepted_answer_id": 51072034, "answer_count": 1, "score": 6, "last_activity_date": 1530971705, "creation_date": 1530136278, "last_edit_date": 1530952333, "question_id": 51071925, "link": "https://stackoverflow.com/questions/51071925/error-e0433-when-dyn-used-with-absolute-path", "title": "Error [E0433] when `dyn` used with absolute path", "body": "<p>I was playing with a <code>dyn</code> traits introduced in Rust 1.27 and stumbled into this compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0433]: failed to resolve. Use of undeclared type or module `dyn`\n --&gt; src\\main.rs:1:30\n  |\n1 | fn _run0() -&gt; Result&lt;(), Box&lt;dyn ::std::error::Error&gt;&gt; { Ok(()) }\n  |                              ^^^ Use of undeclared type or module `dyn`\n</code></pre>\n\n<p>All other variants compile fine:</p>\n\n<pre><code>fn _run0() -&gt; Result&lt;(), Box&lt;dyn ::std::error::Error&gt;&gt; { Ok(()) } // Error\n\nfn _run1() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; { Ok(()) } // Ok\n\nfn _run2() -&gt; Result&lt;(), Box&lt;::std::error::Error&gt;&gt; { Ok(()) } // Ok\n</code></pre>\n\n<p>Is it intended behavior?</p>\n\n<hr>\n\n<p>rustc 1.27.0 (3eda71b00 2018-06-19)</p>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530134394, "post_id": 51071562, "comment_id": 89132889, "body": "Why does the OP get this error? Why does the example that they copied from use this syntax that you suggest they should not use?"}], "tags": [], "owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "is_accepted": false, "score": 0, "last_activity_date": 1530134291, "creation_date": 1530134291, "answer_id": 51071562, "question_id": 51070789, "link": "https://stackoverflow.com/questions/51070789/associated-type-context-not-found-when-implementing-actix-webs-handler/51071562#51071562", "title": "associated type `Context` not found when implementing actix-web&#39;s Handler", "body": "<p>You can replace <code>Self::Context</code> with <code>SyncContext&lt;Self&gt;</code></p>\n"}, {"comments": [{"owner": {"reputation": 2690, "user_id": 2137, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6f08c1532c3f3f099e940d6d3866cb5b?s=128&d=identicon&r=PG", "display_name": "Satish", "link": "https://stackoverflow.com/users/2137/satish"}, "edited": false, "score": 0, "creation_date": 1530195351, "post_id": 51074487, "comment_id": 89158703, "body": "No this is the only error I get. The error does go away when I specify <code>&lt;Self as Actor&gt;::Context</code>"}], "tags": [], "owner": {"reputation": 81, "user_id": 9019683, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-tGWKzAXOeJk/AAAAAAAAAAI/AAAAAAAAACI/BWchNiKVQo0/photo.jpg?sz=128", "display_name": "Douman Ashiya", "link": "https://stackoverflow.com/users/9019683/douman-ashiya"}, "is_accepted": false, "score": 0, "last_activity_date": 1530158210, "creation_date": 1530158210, "answer_id": 51074487, "question_id": 51070789, "link": "https://stackoverflow.com/questions/51070789/associated-type-context-not-found-when-implementing-actix-webs-handler/51074487#51074487", "title": "associated type `Context` not found when implementing actix-web&#39;s Handler", "body": "<p>This is actually strange since there is only single associated type <code>Context</code> but for some reason Rust wants you to specify specifically associated type: <code>&lt;Self as Actor&gt;::Context</code> which should not be required since you have single <code>Context</code> type</p>\n\n<p>Are there any other errors that prevent your struct from compiling?</p>\n"}, {"comments": [{"owner": {"reputation": 2690, "user_id": 2137, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6f08c1532c3f3f099e940d6d3866cb5b?s=128&d=identicon&r=PG", "display_name": "Satish", "link": "https://stackoverflow.com/users/2137/satish"}, "edited": false, "score": 0, "creation_date": 1530204670, "post_id": 51086491, "comment_id": 89164435, "body": "Thanks, I&#39;m pretty new to rust fixing the version and the trait has gotten me past this error"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1530199266, "creation_date": 1530199266, "answer_id": 51086491, "question_id": 51070789, "link": "https://stackoverflow.com/questions/51070789/associated-type-context-not-found-when-implementing-actix-webs-handler/51086491#51086491", "title": "associated type `Context` not found when implementing actix-web&#39;s Handler", "body": "<p>Creating a <strong>minimal</strong> <a href=\"/help/mcve\">MCVE</a> almost always makes the problem easier to see:</p>\n\n<pre><code>extern crate actix;\nextern crate actix_web;\n\nuse actix::prelude::*;\nuse actix_web::dev::Handler;\nuse std::io;\n\npub struct MysqlConnection;\n\nimpl Actor for MysqlConnection {\n    type Context = SyncContext&lt;Self&gt;;\n}\n\npub struct DummyMessage;\nimpl Message for DummyMessage {\n    type Result = io::Result&lt;String&gt;;\n}\n\nimpl Handler&lt;DummyMessage&gt; for MysqlConnection {\n    type Result = io::Result&lt;String&gt;;\n\n    fn handle(&amp;mut self, _: DummyMessage, _: &amp;mut Self::Context) -&gt; Self::Result {\n        unimplemented!();\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0220]: associated type `Context` not found for `Self`\n  --&gt; src/main.rs:22:53\n   |\n22 |     fn handle(&amp;mut self, _: DummyMessage, _: &amp;mut Self::Context) -&gt; Self::Result {\n   |                                                   ^^^^^^^^^^^^^ associated type `Context` not found\n</code></pre>\n\n<h3>Problem 1 \u2014 multiple versions</h3>\n\n<pre><code>actix-web = \"0.6.14\"\nactix = \"0.6.1\"\n</code></pre>\n\n<p>This brings in two different versions of actix:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo tree -d\n\nactix v0.5.8\n\u2514\u2500\u2500 actix-web v0.6.14\n    \u2514\u2500\u2500 repro v0.1.0 (file:///private/tmp/repro)\n\nactix v0.6.1\n\u2514\u2500\u2500 repro v0.1.0 (file:///private/tmp/repro)\n</code></pre>\n\n<p>Pick a single one, actix 0.5.8. </p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a></li>\n</ul>\n\n<h3>Problem 2 \u2014 wrong trait</h3>\n\n<p>You bring in <a href=\"https://docs.rs/actix-web/0.6.11/actix_web/dev/trait.Handler.html\" rel=\"nofollow noreferrer\"><code>actix_web::dev::Handler</code></a>:</p>\n\n<pre><code>pub trait Handler&lt;S&gt;: 'static {\n    type Result: Responder;\n    fn handle(&amp;mut self, req: HttpRequest&lt;S&gt;) -&gt; Self::Result;\n}\n</code></pre>\n\n<p>You are implementing <a href=\"https://docs.rs/actix/0.5.8/actix/trait.Handler.html\" rel=\"nofollow noreferrer\"><code>actix::Handler</code></a>:</p>\n\n<pre><code>pub trait Handler&lt;M&gt; \nwhere\n    Self: Actor,\n    M: Message, \n{\n    type Result: MessageResponse&lt;Self, M&gt;;\n    fn handle(&amp;mut self, msg: M, ctx: &amp;mut Self::Context) -&gt; Self::Result;\n}\n</code></pre>\n\n<p><code>actix::Handler</code> has <code>Actor</code> as its supertrait, which means that it can access the associated type <code>Context</code>. <code>actix_web::dev::Handler</code> does not have the supertrait, so it doesn't know about <code>Self::Context</code>. </p>\n\n<p>Pick the appropriate trait and implement it correctly.</p>\n"}], "owner": {"reputation": 2690, "user_id": 2137, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6f08c1532c3f3f099e940d6d3866cb5b?s=128&d=identicon&r=PG", "display_name": "Satish", "link": "https://stackoverflow.com/users/2137/satish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 389, "favorite_count": 0, "accepted_answer_id": 51086491, "answer_count": 3, "score": 0, "last_activity_date": 1530199266, "creation_date": 1530130772, "last_edit_date": 1530197050, "question_id": 51070789, "link": "https://stackoverflow.com/questions/51070789/associated-type-context-not-found-when-implementing-actix-webs-handler", "title": "associated type `Context` not found when implementing actix-web&#39;s Handler", "body": "<p>I have the following code based on the <a href=\"https://actix.rs/book/actix-web/sec-13-db-integration.html\" rel=\"nofollow noreferrer\">actix-web Database Integration sample</a>. </p>\n\n<pre><code>extern crate actix;\nextern crate actix_web;\nextern crate serde_json;\n#[macro_use]\nextern crate serde_derive;\nextern crate r2d2;\nextern crate r2d2_mysql;\n\nuse actix::prelude::*;\nuse actix_web::{middleware::Logger, server, App, FutureResponse, HttpRequest, HttpResponse};\n\nmod dbservices {\n\n    use actix::prelude::*;\n    use actix_web::dev::Handler;\n    use model::DataDictionary;\n    use r2d2::Pool;\n    use r2d2_mysql::*;\n    use std::io;\n\n    pub struct MysqlConnection {\n        db_pool: mysql::PooledConn,\n    }\n\n    impl Actor for MysqlConnection {\n        type Context = SyncContext&lt;Self&gt;;\n    }\n\n    impl MysqlConnection {\n        pub fn new(db_url: &amp;str) -&gt; MysqlConnection {\n            unimplemented!();\n        }\n    }\n\n    pub struct GetDD;\n    impl Message for GetDD {\n        type Result = io::Result&lt;Vec&lt;DataDictionary&gt;&gt;;\n    }\n\n    impl Handler&lt;GetDD&gt; for MysqlConnection {\n        type Result = io::Result&lt;Vec&lt;DataDictionary&gt;&gt;;\n\n        fn handle(&amp;mut self, msg: GetDD, _: &amp;mut Self::Context) -&gt; Self::Result {\n            unimplemented!();\n        }\n    }\n}\n\nmod model {\n    #[derive(Debug, Clone, Serialize, Deserialize)]\n    pub struct DataDictionary {\n        id: i32,\n        name: String,\n    }\n}\n\nstruct State {\n    db: Addr&lt;MysqlConnection&gt;,\n}\n\nfn get_dd(req: HttpRequest&lt;State&gt;) -&gt; FutureResponse&lt;HttpResponse&gt; {\n    req.clone()\n        .state()\n        .db\n        .send(GetDD)\n        .from_err()\n        .and_then(|result| Ok.json(result))\n        .responder()\n}\n\nfn main() {\n    std::env::set_var(\"RUST_LOG\", \"actix_web=debug,info\");\n    const db_url: str = \"mysql://connstring\";\n    let addr = SyncArbiter::start(3, move || dbservices::MysqlConnection::new(db_url));\n\n    server::new(|| {\n        App::new()\n            .middleware(Logger::default())\n            .middleware(Logger::new(\"%a %{User-Agent}i\"))\n            .prefix(\"/api\")\n            .scope(\"/dd\", |dp_scope| {\n                dp_scope.resource(\"/\", |r| r.h(dbservices::GetDD()))\n            })\n    }).bind(\"127.0.0.1:8088\")\n        .unwrap()\n        .run();\n}\n</code></pre>\n\n<p>I'm getting the following error when compiling. I'm not sure what I'm doing wrong:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0220]: associated type `Context` not found for `Self`\n  --&gt; src/main.rs:43:50\n   |\n43 |         fn handle(&amp;mut self, msg: GetDD, _: &amp;mut Self::Context) -&gt; Self::Result {\n   |                                                  ^^^^^^^^^^^^^ associated type `Context` not found\n</code></pre>\n\n<p>Here are my dependencies from Cargo.toml:</p>\n\n<pre><code>[dependencies]\nactix-web = \"0.6.14\"\nactix = \"0.6.1\"\nchrono = { version = \"0.4.2\", features = [\"serde\"] }\nserde = \"1.0.60\"\nserde_derive = \"1.0.60\"\nserde_json = \"1.0.17\"\nlog = \"0.4.1\"\nenv_logger =\"0.5.10\"\nfutures = \"0.2.1\"\nr2d2 = \"*\"\n\n[dependencies.r2d2_mysql]\ngit = \"https://github.com/outersky/r2d2-mysql\"\nversion=\"*\"\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 4, "creation_date": 1530127897, "post_id": 51070125, "comment_id": 89130178, "body": "You can put <code>int p = ...</code> inside the loop in C as well."}, {"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1530128165, "post_id": 51070125, "comment_id": 89130292, "body": "Since I am quite new to programming and only coded in ANSI C so far, I didn&#39;t know that. My question still stands though, since in C you have a way to be more explicit."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1530128344, "post_id": 51070125, "comment_id": 89130362, "body": "<i>it&#39;s straightforward to reason about how assignments will look like after compilation</i> \u2014 hahahaha, no it&#39;s <i>not</i>. Maybe in a world without optimizing compilers, sure, but not for any modern C."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1530128399, "post_id": 51070125, "comment_id": 89130387, "body": "The answer to your question is <b>Yes, you can think of \u201clet\u201d and other Rust idioms in terms of assembly</b>. Now that you know this, how does it help you?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1530128516, "post_id": 51070125, "comment_id": 89130440, "body": "FWIW, I&#39;d write the Rust code as <code>let max = a[..5].windows(3).map(|w| w.iter().product()).max().unwrap_or(0);</code> which should be equally as efficient (potentially more or less so)."}, {"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 0, "creation_date": 1530129644, "post_id": 51070125, "comment_id": 89130907, "body": "You can always get the assembly output of a trivial Rust program to find out <i>exactly</i> how it gets translated."}, {"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "edited": false, "score": 0, "creation_date": 1530129849, "post_id": 51070125, "comment_id": 89130991, "body": "Thanks for the comments, I guess it&#39;s a matter of practicing and getting used to the language."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530135811, "post_id": 51070125, "comment_id": 89133432, "body": "<code>0..7</code> is still wrong, as it doesn&#39;t include <code>7</code>. You either mean <code>0..8</code> or <code>0..=7</code>. If you meant the whole array, my example is even easier to write: <code>let max = a.windows(3).map(|w| w.iter().product()).max().unwrap_or(0);</code>"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1530207133, "post_id": 51070125, "comment_id": 89165599, "body": "You can put <code>int p = ...</code> inside the loop even in ANSI C, since it is at the beginning of a block."}], "answers": [{"tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 3, "last_activity_date": 1530132260, "last_edit_date": 1530132260, "creation_date": 1530131634, "answer_id": 51070997, "question_id": 51070125, "link": "https://stackoverflow.com/questions/51070125/can-one-think-of-let-and-other-rust-idioms-in-terms-of-assembly/51070997#51070997", "title": "Can one think of &quot;let&quot; and other Rust idioms in terms of assembly?", "body": "<p>TL;DR: It is perfectly possible to reason about Rust code in terms of assembly. However, you need to be familiar with the safety features and high-level abstractions that it offers which C does not.</p>\n\n<hr>\n\n<p>If you want to think about C and Rust in terms of assembly the first point to consider is <em>which C compiler do you use?</em></p>\n\n<p>GCC and Clang/LLVM emit vastly different assembly. While the assembly generated by GCC is <a href=\"https://godbolt.org/g/9SxLsP\" rel=\"nofollow noreferrer\">pretty close to the C code</a>, Clang/LLVM seems to <a href=\"https://godbolt.org/g/Dj2PKa\" rel=\"nofollow noreferrer\">unroll the loop in the original example</a>. (This opens the question: \"which is closer to assembly - C or C?\")</p>\n\n<p>Rust uses LLVM too, so let's compare it to Clang. This is part of the Clang assembly: </p>\n\n<pre><code>  imul esi, eax\n  mov edx, dword ptr [rdi + 20]\n  imul esi, edx\n  cmp esi, ecx\n  cmovbe esi, ecx\n</code></pre>\n\n<p>I'm not an expert on assembly, but this should be one iteration of the unrolled loop. There is access to the indexed array, a multiplication, and a check that replaces the current maximum value.</p>\n\n<p>The corresponding snippet of <a href=\"https://godbolt.org/g/Fwi8XZ\" rel=\"nofollow noreferrer\">Rust assembly</a> looks like this:</p>\n\n<pre><code>  cmp r8, 5\n  je .LBB0_16\n  imul eax, edx\n  mov esi, dword ptr [rdi + 20]\n  imul eax, esi\n  cmp eax, ecx\n  cmovbe eax, ecx\n</code></pre>\n\n<p>The only difference is that some registers are used differently and that there is a comparison and conditional jump in the beginning. This is the bounds check performed by Rust when indexing into <code>a</code>. You don't have that in C - if the array is too small, anything can happen. In Rust you get a clear panic, but it comes at a small cost (runtime check = more instructions).</p>\n\n<p>If this is additional cost is a problem, there is an escape hatch: unsafe code.</p>\n\n<pre><code>p = unsafe {*a.as_ptr().offset(i) * *a.as_ptr().offset(i+1) * *a.as_ptr().offset(i+2)};\n</code></pre>\n\n<p>With this change we <a href=\"https://godbolt.org/g/aoUXsa\" rel=\"nofollow noreferrer\">get assembly</a> that is mostly similar to the C assembly, but we lose part of Rust's safety.</p>\n\n<hr>\n\n<p>All that said, there is not really an assembly equivalent to Rust's <code>let x =</code> or C's <code>int x =</code>. These idioms are higher level abstractions that are saying \"I want to have a new local variable\". It is up to the compiler to decide what to make of that. It can use a memory location or an available register, whichever is more suitable, but the CPU does not care about variables.</p>\n"}], "owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 1, "accepted_answer_id": 51070997, "answer_count": 1, "score": 1, "last_activity_date": 1530140271, "creation_date": 1530127738, "last_edit_date": 1530140271, "question_id": 51070125, "link": "https://stackoverflow.com/questions/51070125/can-one-think-of-let-and-other-rust-idioms-in-terms-of-assembly", "title": "Can one think of &quot;let&quot; and other Rust idioms in terms of assembly?", "body": "<p>When writing in C, it's straightforward to reason about how assignments will look like after compilation. I know Rust is a higher level language that uses functional features, but since it's referred to as a \"system language\" I wonder if that's possible in Rust too.</p>\n\n<p>For example, I want to loop through an array of integers and calculate the biggest product of 3 adjacent numbers:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>unsigned int a[10] = {4, 2, 3, 8, 1, 0, 7, 4, 9, 2};\nunsigned int i, p=1, max=0;\nfor(i=0; i&lt;8; i++, p=1) {\n    p = a[i] * a[i+1] * a[i+2];\n    if(p&gt;max) max = p;\n}\n</code></pre>\n\n<p>The equivalent Rust code could look like this (not sure if this is the idiomatic way):</p>\n\n<pre><code>let a = [4, 2, 3, 8, 1, 0, 7, 4, 9, 2];\nlet mut max = 0;\nfor i in 0..8 {\n    let p = a[i] * a[i + 1] * a[i + 2];\n    if p &gt; max {\n        max = p;\n    }\n}\n</code></pre>\n\n<p>In C, <code>p</code> is a variable that is defined before the loop and is assigned a new value every time; in Rust on the other hand, <code>let p</code> is used within the loop, which is confusing to think about in a procedural way.</p>\n\n<p>Is C <em>closer</em> to assembly code? Or is it possible to reason about Rust just as well?</p>\n"}, {"tags": ["winapi", "rust", "output", "buffer", "handle"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1530128080, "post_id": 51070011, "comment_id": 89130253, "body": "Escapes like <code>\\n</code> and <code>\\t</code> in strings are replaced at compile time. What, exactly, is the problem you&#39;re having with them?"}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1530128174, "post_id": 51070011, "comment_id": 89130297, "body": "If I use them I get some weird symbols in my console. Maybe because I encoded it to utf16 (which needs to be done) before writing it to the console using  <code>WriteConsoleOutputCharacterA</code>. Plus that it adds some complexity on my side of handling all the writing to the console using WinAPI."}, {"owner": {"reputation": 23944, "user_id": 1305969, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlo8z.png?s=128&g=1", "display_name": "zx485", "link": "https://stackoverflow.com/users/1305969/zx485"}, "edited": false, "score": 1, "creation_date": 1530129999, "post_id": 51070011, "comment_id": 89131049, "body": "IIRC <code>WriteConsoleOutputCharacterA</code> is for ANSI strings. If you encoded the string in UTF-16 (UniCode) the correct function would be <a href=\"https://docs.microsoft.com/en-us/windows/console/writeconsoleoutputcharacter\" rel=\"nofollow noreferrer\"><code>WriteConsoleOutputCharacterW</code></a>."}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "edited": false, "score": 0, "creation_date": 1530132884, "post_id": 51070011, "comment_id": 89132320, "body": "Still the same result the <a href=\"https://play.rust-lang.org/?gist=b934c26597860b7d421f302360612a7e&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">code</a> The backslashes are still shown as the symbols."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1530150764, "post_id": 51070011, "comment_id": 89136729, "body": "Does it do the same if you replace the body of <code>win32_string</code> with <code>value.encode_utf16().collect()</code>? I don&#39;t think <code>encode_wide</code> actually transcodes from UTF-8 to UTF-16; <code>OsStr</code> can be arbitrary bytes."}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1530208179, "post_id": 51070011, "comment_id": 89166066, "body": "@trentcl If I do it like you are saying I get text like S o m e t e x t in the console. And also the escape sequence characters are shown like weird symbols."}], "owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 550, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1530128713, "creation_date": 1530127242, "last_edit_date": 1530128713, "question_id": 51070011, "link": "https://stackoverflow.com/questions/51070011/how-to-write-to-the-alternate-screen-buffer-on-windows-using-only-the-standard-l", "title": "How to write to the alternate screen buffer on Windows using only the standard libary?", "body": "<p>I am working on an alternate screen feature for my cross-platform terminal manipulating crate. </p>\n\n<p><strong>Situation</strong></p>\n\n<p>When I want to write something to console I can use the following code to write to the current <a href=\"https://doc.rust-lang.org/std/io/fn.stdout.html\" rel=\"nofollow noreferrer\">standard output</a>. This works on both UNIX and Windows systems:</p>\n\n<pre><code>write!(::std::fmt::io::stdout(), \"Some text\").\n</code></pre>\n\n<p>When I switch to the alternate screen, I don't want to write to the current <a href=\"https://doc.rust-lang.org/std/io/fn.stdout.html\" rel=\"nofollow noreferrer\">standard output</a> but to the alternate screen. This works differently depending on which platform you are on. The basics are the same: I need to store the handle somewhere globally so that I could put the stored <code>output handle</code> in alternate screen mode and write all my output, commands and actions to that stored <code>output handle</code>. </p>\n\n<p>When I am in alternate mode, my code writes to the alternate screen and when in main screen modes my code writes to the main screen. </p>\n\n<ul>\n<li><p><em>Unix</em></p>\n\n<p>For UNIX systems, I can use <a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code\" rel=\"nofollow noreferrer\">ANSI escape codes</a> to switch to the <a href=\"https://unix.stackexchange.com/questions/288962/what-does-1049h-and-1h-ansi-escape-sequences-do\">alternate screen and back</a>. I store the <code>::std::io::stdout()</code> somewhere and all my UNIX code uses that handle for access to the terminal <code>output</code>. When in alternate screen mode, all the <code>write</code>s I do are done on the alternate screen and when on the main screen all the <code>write</code>s are done on the main screen. </p></li>\n<li><p><em>Windows</em></p>\n\n<p>For Windows systems, I can use <a href=\"https://crates.io/crates/winapi\" rel=\"nofollow noreferrer\">WinAPI</a> to <a href=\"https://docs.microsoft.com/en-us/windows/console/reading-and-writing-blocks-of-characters-and-attributes\" rel=\"nofollow noreferrer\">switch to the alternate screen buffer</a>. I'll create a new screen buffer with <a href=\"https://docs.microsoft.com/en-us/windows/console/createconsolescreenbuffer\" rel=\"nofollow noreferrer\"><code>CreateConsoleScreenBuffer</code></a> then I'll use <a href=\"https://docs.microsoft.com/en-us/windows/console/setconsoleactivescreenbuffer\" rel=\"nofollow noreferrer\"><code>SetConsoleActiveScreenBuffer</code></a> to change the active buffer. At last, I need to store the handle gotten from <code>CreateConsoleScreenBuffer</code>. Through this output handle, I can write output to the alternate screen buffer. </p></li>\n</ul>\n\n<p>If I would not have used the above-described way and switched to alternate screen and just called this <code>write!(::std::fmt::io::stdout(), \"Some text\")</code>, I would write to the main screen instead of the alternate screen on both Windows and Unix systems because <code>stdout()</code> is a handle to the <a href=\"https://doc.rust-lang.org/std/io/fn.stdout.html\" rel=\"nofollow noreferrer\">standard output</a>.</p>\n\n<p><strong>The Question</strong></p>\n\n<p>The way described above works to a certain point; when I want to write to the stored handle.</p>\n\n<p>For Unix I can do the following:</p>\n\n<pre><code>// (...) some logic to get the handle to the current screen.\nlet stored_handle: Write = ...;\nwrite!(stored_handle, \"Some text);\n</code></pre>\n\n<p>But for Windows I could <strong>not</strong> do this:</p>\n\n<pre><code>// (...) some logic to get the handle to the current screen for windows.\nlet stored_handle: HANDLE = ...;\nwrite!(stored_handle, \"Some text);\n</code></pre>\n\n<p>I could implement <code>std::io::Write</code> for the struct where I store the <code>stdout</code> so that for Windows I create my own logic for writing to the console with WinAPI. If I would do that I would be able to write to that struct like the following:</p>\n\n<pre><code>#[cfg(target_os = \"windows\")]\nlet storage = WindowsScreenManager::new();\n#[cfg(not(target_os = \"windows\"))]\nlet storage = UnixScreenManager::new();\n\nwrite!(storage, \"Some text\");\n</code></pre>\n\n<p>This is not ideal for my situation because I can not use the Rust string escape characters like <code>\\n \\t</code> my string will not contain any newlines or tabs when doing it this way. Think because WinAPI does not know these formatting options.  Also I don't want to manage all the writing to the console for Windows manually on my side. </p>\n\n<p>I really want to use the WinAPI <code>HANDLE</code> as <code>std::io::Write</code> so that it can be used in the <code>write!</code> macro, just like I do in UNIX. Just store the <code>stdout()</code> and write to that <code>stdout()</code> using the <code>write!</code> macro, but storing the <code>HANDLE</code> and writing to that.  </p>\n\n<p>I suppose that this should work since when calling <code>println!()</code> or <code>write!(stdout())</code> on Windows it will write the to the standard output handle of the current process. But now I want to write to the alternate handle and not only to the default handle. Or am I wrong with this?</p>\n\n<p>If the above cannot be done, how would I write to the alternate screen <code>HANDLE</code> without using my own implementation for writing to the Console using WinAPI?</p>\n"}, {"tags": ["struct", "rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1530109896, "post_id": 51065294, "comment_id": 89120702, "body": "<a href=\"https://stackoverflow.com/a/31625653/3650362\">This answer</a> to <a href=\"https://stackoverflow.com/q/31609137/3650362\">Why are explicit lifetimes needed in Rust?</a> has an example of using the same struct where the lifetime parameter is used by the compiler to forbid an illegal piece of code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530110162, "post_id": 51065294, "comment_id": 89120876, "body": "Note that you are linking to the documentation for Rust 1.9. Rust 1.27 is the newest version, so that documentation is approximately <b>2 years old</b> at this point."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1530110970, "post_id": 51065294, "comment_id": 89121417, "body": "When I linked that, claiming it didn&#39;t work, in fact it did work because the compiler can now promote the lifetime of references to constants to <code>&#39;static</code>. I have updated the example in the answer."}], "owner": {"reputation": 5656, "user_id": 692168, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/31b911c42785d51ca73b172d3a38b06f?s=128&d=identicon&r=PG", "display_name": "AxiomaticNexus", "link": "https://stackoverflow.com/users/692168/axiomaticnexus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 172, "favorite_count": 1, "closed_date": 1530109529, "answer_count": 0, "score": 2, "last_activity_date": 1530109700, "creation_date": 1530109422, "last_edit_date": 1530109700, "question_id": 51065294, "link": "https://stackoverflow.com/questions/51065294/why-doesnt-rust-have-lifetime-elision-rules-for-structs", "closed_reason": "Duplicate", "title": "Why doesn&#39;t Rust have lifetime elision rules for structs?", "body": "<p>In the <a href=\"https://doc.rust-lang.org/1.9.0/book/lifetimes.html#in-structs\" rel=\"nofollow noreferrer\">Rust documentation</a> they give this example of how structs need lifetimes when they contain references:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    x: &amp;'a i32,\n}\n</code></pre>\n\n<p>because</p>\n\n<blockquote>\n  <p>We need to ensure that any reference to a <code>Foo</code> cannot outlive the reference to an <code>i32</code> it contains.</p>\n</blockquote>\n\n<p>My question is: shouldn't that be implicit? When would we ever not care about an instance of our struct outliving a reference it contains?</p>\n\n<p>Rust already has lifetime elision rules for functions and methods so that we don't have to explicitly declare lifetime constraints. Why don't they have similar elision rules for structs?</p>\n"}, {"tags": ["mongodb", "rust", "serde"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1530106469, "post_id": 51063517, "comment_id": 89118287, "body": "How do you expect rust guess you want to transform <code>doc</code> to a <code>Thing</code> ? <a href=\"https://docs.rs/bson/0.11.1/bson/type.DecoderResult.html\" rel=\"nofollow noreferrer\">docs.rs/bson/0.11.1/bson/type.DecoderResult.html</a>, you need to give rust a hint for <code>T</code>, something like <code>bson::from_bson::&lt;Thing&gt;(bson::Bson::Document(doc))</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530109386, "post_id": 51063517, "comment_id": 89120349, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/50841088/155423\">How do I specify a type that cannot be inferred when using if let?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51063517/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "edited": false, "score": 0, "creation_date": 1530115932, "post_id": 51063517, "comment_id": 89124340, "body": "I&#39;m guessing you need to say <code>let item: Thing = cursor.next();</code> or <code>let item = cursor.next::&lt;Thing&gt;();</code>"}, {"owner": {"reputation": 1423, "user_id": 2801759, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/60332adf416c3269c3eb9929db5512a8?s=128&d=identicon&r=PG&f=1", "display_name": "Martimatix", "link": "https://stackoverflow.com/users/2801759/martimatix"}, "edited": false, "score": 0, "creation_date": 1530137728, "post_id": 51063517, "comment_id": 89134089, "body": "Stargateur&#39;s solution worked! Shepmaster: we can mark it as a duplicate."}, {"owner": {"reputation": 442, "user_id": 10357591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70fc4f478127a18ed0f3c6be00fe4bb3?s=128&d=identicon&r=PG&f=1", "display_name": "\ub108\ub97c \uc18d\uc600\ub2e4", "link": "https://stackoverflow.com/users/10357591/%eb%84%88%eb%a5%bc-%ec%86%8d%ec%98%80%eb%8b%a4"}, "edited": false, "score": 0, "creation_date": 1597177372, "post_id": 51063517, "comment_id": 112047757, "body": "<code>bson::from_bson(Bson::Document(doc));</code> <a href=\"https://github.com/mongodb/bson-rust/issues/145\" rel=\"nofollow noreferrer\">github.com/mongodb/bson-rust/issues/145</a>"}], "owner": {"reputation": 1423, "user_id": 2801759, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/60332adf416c3269c3eb9929db5512a8?s=128&d=identicon&r=PG&f=1", "display_name": "Martimatix", "link": "https://stackoverflow.com/users/2801759/martimatix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 883, "favorite_count": 1, "closed_date": 1530250953, "answer_count": 0, "score": 4, "last_activity_date": 1538858002, "creation_date": 1530104600, "last_edit_date": 1538858002, "question_id": 51063517, "link": "https://stackoverflow.com/questions/51063517/how-can-i-deserialize-a-document-from-mongodb-into-a-rust-struct", "closed_reason": "Duplicate", "title": "How can I deserialize a document from MongoDB into a Rust struct?", "body": "<p>This is my attempt so far. I don't understand how I can tell Rust to deserialize the MongoDB result into a struct.</p>\n\n<p>I have defined the struct called <code>Thing</code> that I would like the data mapped to.</p>\n\n<pre><code>#[macro_use(bson, doc)]\nextern crate bson;\nextern crate mongodb;\n#[macro_use]\nextern crate serde_derive;\n\nuse mongodb::db::ThreadedDatabase;\nuse mongodb::{Client, ThreadedClient};\n\nfn main() {\n    let client =\n        Client::connect(\"localhost\", 27017).expect(\"Failed to initialize standalone client.\");\n\n    let coll = client.db(\"bestestDB\").collection(\"things\");\n\n    let doc = doc! {\n        \"$text\": { \"$search\": \"Love\" },\n    };\n\n    #[derive(Serialize, Deserialize, Debug)]\n    pub struct Thing {\n        #[serde(rename = \"_id\")] // Use MongoDB's special primary key field name when serializing\n        pub id: String,\n        pub name: String,\n        pub image: String,\n    }\n\n    let mut cursor = coll\n        .find(Some(doc.clone()), None)\n        .ok()\n        .expect(\"Failed to execute find.\");\n\n    let item = cursor.next();\n\n    // cursor.next() returns an Option&lt;Result&lt;Document&gt;&gt;\n    match item {\n        Some(Ok(doc)) =&gt; match bson::from_bson(bson::Bson::Document(doc)) {\n            Ok(thing) =&gt; println!(\"{:?}\", thing),\n            Err(_) =&gt; panic!(\"Deserializing failed!\"),\n        },\n        Some(Err(_)) =&gt; panic!(\"Failed to get next from server!\"),\n        None =&gt; panic!(\"Server returned no results!\"),\n    }\n}\n</code></pre>\n\n<p>Then I get the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   |\n37 | Ok(thing) =&gt; println!(\"{:?}\", thing),\n   |    ^^^^^ cannot infer type for `_`\n</code></pre>\n"}, {"tags": ["rust", "mutability", "function-signature"], "answers": [{"comments": [{"owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 0, "creation_date": 1530092611, "post_id": 51059166, "comment_id": 89109001, "body": "Just to confirm, in the case of <code>BufReader</code>, this is not needed due to the fact that no <code>mutable</code> function of the inner <code>Read</code> object is called inside the <code>new</code> function. If such a call is made later but wrapped in another <code>BufRead</code> <code>&amp;mut self</code> function, we assume we acquired mutability for all the field the <code>BufRead</code> struct has acquired?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 0, "creation_date": 1530092694, "post_id": 51059166, "comment_id": 89109053, "body": "@yageek If I get your comment right, this is true, yes."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 2, "last_activity_date": 1530092601, "last_edit_date": 1530092601, "creation_date": 1530091752, "answer_id": 51059166, "question_id": 51058998, "link": "https://stackoverflow.com/questions/51058998/does-the-documentation-mention-the-possibility-of-adding-the-mut-keyword-in-fr/51059166#51059166", "title": "Does the documentation mention the possibility of adding the `mut` keyword in front of functions&#39; arguments?", "body": "<p>I think the compiler is very precise in saying where to add the <code>mut</code>. Generally the compiler tries to underline the specific places:</p>\n\n<pre><code>pub fn new(mut reader: R) -&gt; Result&lt;Reader&lt;R&gt;&gt;\n</code></pre>\n\n<p>It's now possible to mutate the reader in the function. This behaves like:</p>\n\n<pre><code>pub fn new(reader: R) -&gt; Result&lt;Reader&lt;R&gt;, Error&gt; {\n    let mut reader = reader;\n    // ...\n</code></pre>\n\n<p>As far as I know, it's only <a href=\"https://doc.rust-lang.org/book/first-edition/mutability.html#mutability\" rel=\"nofollow noreferrer\">mentioned once</a> in the book but more or less in sense of <em>It's a pattern, you may use it in functions too</em>.</p>\n\n<p><a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"nofollow noreferrer\"><code>unsafe</code> does not fix it, it's UB</a>:</p>\n\n<blockquote>\n  <p>Mutating non-mutable data \u2014 that is, data reached through a shared reference or data owned by a <code>let</code> binding), unless that data is contained within an <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\"><code>UnsafeCell&lt;U&gt;</code></a>.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 0, "creation_date": 1530092818, "post_id": 51059185, "comment_id": 89109127, "body": "Just to confirm, in the case of <code>BufReader</code>, this is not needed due to the fact that no <code>&amp;mut ref</code> function of the inner <code>Read</code> object is called inside the <code>new</code> function. If such a call is made later but wrapped in another <code>BufRead</code> <code>&amp;mut self</code> function, we assume we acquired mutability for all the field the BufRead struct has acquired?"}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 2, "last_activity_date": 1530093853, "last_edit_date": 1530093853, "creation_date": 1530091803, "answer_id": 51059185, "question_id": 51058998, "link": "https://stackoverflow.com/questions/51058998/does-the-documentation-mention-the-possibility-of-adding-the-mut-keyword-in-fr/51059185#51059185", "title": "Does the documentation mention the possibility of adding the `mut` keyword in front of functions&#39; arguments?", "body": "<p>It\u2019s implied but not directly mentioned in the book. Both <code>let</code> and function arguments are patterns, so just like you can use <code>mut</code> in <code>let</code>, you can use it in arguments.</p>\n"}], "owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 51059166, "answer_count": 2, "score": 0, "last_activity_date": 1530111031, "creation_date": 1530091285, "last_edit_date": 1530111031, "question_id": 51058998, "link": "https://stackoverflow.com/questions/51058998/does-the-documentation-mention-the-possibility-of-adding-the-mut-keyword-in-fr", "title": "Does the documentation mention the possibility of adding the `mut` keyword in front of functions&#39; arguments?", "body": "<p>I have a basic <code>Reader</code> encapsulating some generic elements:</p>\n\n<pre><code>pub struct Reader&lt;R&gt; {\n    inner: R,\n    order: Endian,\n    first_ifd_offset: usize,\n}\n\nimpl&lt;R: Read + Seek&gt; Reader&lt;R&gt; {\n    pub fn new(reader: R) -&gt; Result&lt;Reader&lt;R&gt;&gt; {\n        let mut order_raw = [0, 0];\n        reader.read_exact(&amp;mut order_raw)?;\n        let magic_number = u16::to_be(u16::from_bytes(order_raw));\n        /* ... */\n   }\n}\n</code></pre>\n\n<p>This does not compile and produces the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable argument `reader` as mutable\n  --&gt; src/reader.rs:17:9\n   |\n15 |     pub fn new(reader: R) -&gt; Result&lt;Reader&lt;R&gt;&gt; {\n   |                ------ consider changing this to `mut reader`\n16 |         let mut order_raw = [0, 0];\n17 |         reader.read_exact(&amp;mut order_raw)?;\n   |         ^^^^^^ cannot borrow mutably\n</code></pre>\n\n<p>As I am getting the argument by value, the <code>new</code> function should be the new owner of the <code>reader</code> element. The compiler advises me to to add a <code>mut</code> keyword in front of the function argument.</p>\n\n<p>Does the documentation mention the possibility of adding the <code>mut</code> keyword in front of functions' arguments? I was not able to find resources mentioning it.</p>\n\n<p>The <code>BufReader</code> struct of the standard library has a\nsimilar <code>new</code> function and does not use a <code>mut</code> keyword but an <code>unsafe</code>\nblock code in the body. Does <code>unsafe</code> prevent the usage of <code>mut</code> inside the function's signature?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 9, "creation_date": 1530081292, "post_id": 51055299, "comment_id": 89102537, "body": "Praise Rust! The compiler is preventing you from writing very problematic code :) You cannot keep references into <code>self.objects</code> while at the same time the owning container is mutated. If the hashmap reallocated during <code>or_insert</code> all the references in <code>collected</code> would get invalidated."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1530081495, "post_id": 51055299, "comment_id": 89102615, "body": "<a href=\"https://stackoverflow.com/questions/48395370/adding-entries-to-a-hashmap-and-getting-references-to-them-in-a-for-loop/48397140\">Adding entries to a HashMap and getting references to them in a for loop</a> seems to be very similar. Does it answer your question?"}, {"owner": {"reputation": 1712, "user_id": 1580195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1e6776cfbd877dfd97a6eeffd080c9b?s=128&d=identicon&r=PG&f=1", "display_name": "simpel01", "link": "https://stackoverflow.com/users/1580195/simpel01"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1530085277, "post_id": 51055299, "comment_id": 89104634, "body": "That makes lot of sense actually :) Long live the compiler!"}, {"owner": {"reputation": 1712, "user_id": 1580195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1e6776cfbd877dfd97a6eeffd080c9b?s=128&d=identicon&r=PG&f=1", "display_name": "simpel01", "link": "https://stackoverflow.com/users/1580195/simpel01"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1530119922, "post_id": 51055299, "comment_id": 89126367, "body": "However, I am not sure what is the rust way of resolving the problem! Should I use a <code>HashMap&lt;String, Box&lt;SomeObject&gt;&gt;</code> instead? In that case I will be taking a references to the boxed object and if things gets reallocated my pointer should still be valid isn&#39;t it? Spoiler alert: get the same error message! :)"}], "owner": {"reputation": 1712, "user_id": 1580195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1e6776cfbd877dfd97a6eeffd080c9b?s=128&d=identicon&r=PG&f=1", "display_name": "simpel01", "link": "https://stackoverflow.com/users/1580195/simpel01"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 87, "favorite_count": 0, "closed_date": 1530110528, "answer_count": 0, "score": 0, "last_activity_date": 1530110461, "creation_date": 1530078298, "last_edit_date": 1530110461, "question_id": 51055299, "link": "https://stackoverflow.com/questions/51055299/cannot-borrow-self-objects-as-mutable-more-than-once-at-a-time", "closed_reason": "Duplicate", "title": "Cannot borrow `self.objects` as mutable more than once at a time", "body": "<p>I have a problem with the following piece of code:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct SomeObject {}\n\nenum SomeObjectWrapper&lt;'a&gt; {\n    Wrap(&amp;'a SomeObject),\n}\n\nstruct SomeContainer {\n    objects: HashMap&lt;String, SomeObject&gt;,\n}\n\nimpl SomeContainer {\n    fn new() -&gt; SomeContainer {\n        SomeContainer {\n            objects: HashMap::new(),\n        }\n    }\n\n    fn init(&amp;mut self) -&gt; () {\n        let mut collected: Vec&lt;SomeObjectWrapper&gt; = Vec::new();\n\n        for &amp;string in vec![\"this\", \"is\", \"a\", \"string\"].iter() {\n            // search for the artifact in the map\n            let obj = self\n                .objects\n                .entry(string.to_owned())\n                .or_insert(SomeObject {});\n\n            let wrap = SomeObjectWrapper::Wrap(obj);\n            collected.push(wrap);\n        }\n\n        // do something else with collected\n    }\n}\n\nfn main() {\n    let mut container = SomeContainer::new();\n    container.init();\n}\n</code></pre>\n\n<p>Which produces the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `self.objects` as mutable more than once at a time\n  --&gt; src/main.rs:25:23\n   |\n25 |               let obj = self\n   |  _______________________^\n26 | |                 .objects\n   | |________________________^ mutable borrow starts here in previous iteration of loop\n...\n35 |       }\n   |       - mutable borrow ends here\n</code></pre>\n\n<p>I have looked at similar posts about this issues and tried adding a new scope inside the loop to drop the mutable reference, or use <code>&amp;*</code> to convert to immutable but nothing works. </p>\n\n<p>The only way I can get this code to compile is by commenting out the line:</p>\n\n<pre><code>collected.push(wrap);\n</code></pre>\n\n<p>I understand the problem is that the <code>.or_insert</code> method returns a mutable borrow which I actually do not need and I should probably stop using the <code>entry</code> method, but it is so damn convenient and I won't give up until someone tells me this code cannot be fixed!</p>\n"}, {"tags": ["rust", "sum", "tuples"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1530072067, "post_id": 51054225, "comment_id": 89099453, "body": "<code>let mut values = pair.iter().filter_map(|opt| opt.as_ref().map(|x| x.0)).collect::&lt;Vec&lt;_&gt;&gt;();</code>"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1530090385, "post_id": 51054225, "comment_id": 89107597, "body": "You can use <code>into_iter()</code> instead of <code>iter()</code> if consuming the input is OK. Else use the solution from the linked question: <code>opt.as_ref().unwrap()</code>."}], "owner": {"reputation": 133, "user_id": 3134725, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/53d7db90cbd53dd396396d148593b067?s=128&d=identicon&r=PG&f=1", "display_name": "user3134725", "link": "https://stackoverflow.com/users/3134725/user3134725"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "closed_date": 1530097730, "answer_count": 0, "score": 0, "last_activity_date": 1530091090, "creation_date": 1530070858, "last_edit_date": 1530091090, "question_id": 51054225, "link": "https://stackoverflow.com/questions/51054225/in-rust-how-does-one-sum-the-distinct-first-components-of-some-ordered-pairs", "closed_reason": "Duplicate", "title": "In Rust, how does one sum the distinct first components of `Some` ordered pairs?", "body": "<p>In the Rust program below, <code>pair</code> is a vector of <code>Option</code> values, where each <code>Option</code> value is <code>Some</code> ordered pair.  My <strong><em>goal</em></strong> is to: (1) extract the first components of these ordered pairs, then (2) sum the <strong><em>distinct</em></strong> values that result from step (1).  My attempt at this is shown below:</p>\n\n<pre><code>fn main() {\n    let pair: Vec&lt;Option&lt;(u32, Vec&lt;u32&gt;)&gt;&gt; = vec![\n        Some((2, vec![1, 0])),\n        Some((7, vec![0, 1])),\n        Some((7, vec![])),\n        Some((3, vec![1, 1])),\n        Some((2, vec![0, 1, 0])),\n    ];\n\n    let mut values = pair.iter().map(|opt| opt.unwrap().0).collect::&lt;Vec&lt;_&gt;&gt;();\n    values.sort();\n    values.dedup();\n    let distinct_sum: u32 = values.iter().sum();\n\n    println!(\"The sum of the distinct values should be 2+7+3=12.\");\n    println!(\"The sum actually is {}\", distinct_sum);\n} // end main\n</code></pre>\n\n<p>But the Rust compiler tells me (regarding <code>opt</code>) that I <code>cannot move out of borrowed content</code>.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:10:44\n   |\n10 |     let mut values = pair.iter().map(|opt| opt.unwrap().0).collect::&lt;Vec&lt;_&gt;&gt;();\n   |                                            ^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Could someone please point me in the right direction in order to achieve the above goal?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530047440, "post_id": 51051195, "comment_id": 89093857, "body": "<i>but looks like a kludge</i> \u2014 it won&#39;t even compile if you try to implement the body, so this isn&#39;t even a solution."}, {"owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530054636, "post_id": 51051195, "comment_id": 89096035, "body": "No errors related to lifetimes, I meant. <code>fn next</code>&#39;s argument must be <code>&amp;mut self</code>, not <code>&amp;self</code>, and if I just return None it compiles. Apart from some warnings."}, {"owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530055351, "post_id": 51051195, "comment_id": 89096200, "body": "And <code>fn next</code>&#39;s return type must be <code>Option&lt;&amp;&#39;a [usize]&gt;</code> of course"}, {"owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530119321, "post_id": 51051195, "comment_id": 89126101, "body": "Yes, @Shepmaster, you&#39;re right, it doesn&#39;t compile when I try to return <code>Some(&amp;self.comb)</code>. I need StreamingIterator or something else."}], "owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "closed_date": 1530047404, "answer_count": 0, "score": 0, "last_activity_date": 1530047414, "creation_date": 1530046299, "last_edit_date": 1530047414, "question_id": 51051195, "link": "https://stackoverflow.com/questions/51051195/how-to-implement-an-iterator-where-the-associated-type-item-is-a-slice", "closed_reason": "Duplicate", "title": "How to implement an Iterator where the associated type Item is a slice?", "body": "<p>I have a <code>Combination</code> struct and I need to implement <code>Iterator</code> for it. The trait requires defining the associated type <code>Item</code> and I need to define it as slice <code>&amp;[usize]</code>. </p>\n\n<p>If I write this:</p>\n\n<pre><code>pub struct Combination {\n    n: usize,\n    k: usize,\n    comb: Vec&lt;usize&gt;,\n}\n\nimpl Iterator for Combination {\n    type Item = &amp;[usize];\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;[usize]&gt; {\n        // TODO\n    }\n}\n</code></pre>\n\n<p>The compiler says:</p>\n\n<pre><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:9:17\n  |\n9 |     type Item = &amp;[usize];\n  |                 ^ expected lifetime parameter\n</code></pre>\n\n<p>If I specify a lifetime:</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for Combination {\n    type Item = &amp;'a [usize];\n</code></pre>\n\n<p>This makes me add a lifetime specifier to <code>Combination</code> even if it doesn't need any lifetimes:</p>\n\n<pre><code>pub struct Combination&lt;'a&gt; {\n</code></pre>\n\n<p>Next, compiler gives the error that lifetime <code>'a</code> is never used, and I have to add a <code>PhantomData</code> field:</p>\n\n<pre><code>pub struct Combination&lt;'a&gt; {\n    n: usize,\n    k: usize,\n    comb: Vec&lt;usize&gt;,\n    pd: std::marker::PhantomData&lt;&amp;'a [usize]&gt;,\n}\n\nimpl&lt;'a&gt; Iterator for Combination&lt;'a&gt; {\n    type Item = &amp;'a [usize];\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;[usize]&gt; {\n        // TODO\n    }\n}\n</code></pre>\n\n<p>It compiles, but looks like a kludge. Is there better solution?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1530046217, "post_id": 51051130, "comment_id": 89093305, "body": "The standard library documentation on <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html\" rel=\"nofollow noreferrer\"><code>Box</code></a>, or its corresponding <a href=\"https://doc.rust-lang.org/std/boxed/index.html\" rel=\"nofollow noreferrer\">module-level documentation</a>, should answer the second part of the question. All boxes are allocated in the heap."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1530047510, "post_id": 51051130, "comment_id": 89093878, "body": "Strongly related: <a href=\"https://stackoverflow.com/q/48179328/3650362\">What does it mean to be uniformly allocated in Rust?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 2, "last_activity_date": 1530046376, "creation_date": 1530046376, "answer_id": 51051209, "question_id": 51051130, "link": "https://stackoverflow.com/questions/51051130/is-the-first-cons-of-a-boxed-list-on-the-stack/51051209#51051209", "title": "Is the first Cons of a boxed List on the stack?", "body": "<p>Yes. The first <code>Cons</code> can be created on the stack, but subsequent linked <code>Cons</code> would be allocated on the heap because they're indirected through <code>Box</code> which represents a type allocated on the heap. This is assuming you create the first <code>Cons</code> naturally/normally, on the stack, but you can of course also create it on the heap through <code>Box</code> as well, in which case they would all be on the heap even the first <code>Cons</code>.</p>\n"}], "owner": {"reputation": 379, "user_id": 818006, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Vt77B.jpg?s=128&g=1", "display_name": "Boss Man", "link": "https://stackoverflow.com/users/818006/boss-man"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 51051209, "answer_count": 1, "score": 2, "last_activity_date": 1530047151, "creation_date": 1530045988, "last_edit_date": 1530047151, "question_id": 51051130, "link": "https://stackoverflow.com/questions/51051130/is-the-first-cons-of-a-boxed-list-on-the-stack", "title": "Is the first Cons of a boxed List on the stack?", "body": "<p>I was <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-01-box.html\" rel=\"nofollow noreferrer\">reading about the <code>Box</code> type</a> and the <code>Cons</code> list provided in that chapter:</p>\n\n<pre><code>enum List {\n    Cons(i32, Box&lt;List&gt;),\n    Nil,\n}\n</code></pre>\n\n<p>I get why Rust doesn't allow to put another <code>List</code> inside <code>List</code> (refer to listing 15-2) and I also get how <code>Box&lt;List&gt;</code> fixes the problem (refer to listing 15-5).  </p>\n\n<p>Since <code>List</code> is put in a <code>Box</code>, does that mean only the FIRST <code>Cons</code> will be on the stack with a pointer to <code>List</code> in the heap? What about remaining <code>Cons</code>? Will they be on the stack? How can they be on the stack when the <code>List</code> is in heap? Or are they in the heap (that doesn't sound nice)?</p>\n"}, {"tags": ["if-statement", "rust", "return"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530039885, "post_id": 51049717, "comment_id": 89090679, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/43335193/155423\">Why does an if without an else always result in () as the value?</a> and <a href=\"https://stackoverflow.com/q/37646475/155423\">Why does the compiler assume that the value of if let should be <code>()</code>?</a> and <a href=\"https://stackoverflow.com/q/30812469/155423\">return a value from within an if statement in a match statement</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51049717/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 5, "last_activity_date": 1530040243, "creation_date": 1530040243, "answer_id": 51049939, "question_id": 51049717, "link": "https://stackoverflow.com/questions/51049717/result-and-if-else-return-statements-e0308-error/51049939#51049939", "title": "Result and if/else/return statements E0308 error", "body": "<p>Imagine this simplified code:</p>\n\n<pre><code>fn test() -&gt; i32{\n    { 1 }\n    2\n}\n</code></pre>\n\n<p>This fails with the following error:</p>\n\n<pre><code>error[E0308]: mismatched types\n --&gt; src/main.rs:2:11\n  |\n2 |         { 1 }\n  |           ^ expected (), found integral variable\n  |\n  = note: expected type `()`\n             found type `{integer}`\n</code></pre>\n\n<p>That is because in Rust a full statement must have type <code>()</code>. If you want to ignore a value, just adding a <code>;</code> converts a value into a statement, and changes the type to <code>()</code> discarding the value.</p>\n\n<p>This code compiles:</p>\n\n<pre><code>fn test() -&gt; i32{\n    { 1; }\n    2\n}\n</code></pre>\n\n<p>Your example is similar, but the <code>if</code> makes things more interesting. If you write:</p>\n\n<pre><code>fn test(c: bool) -&gt; i32{\n    if c { 1 }\n    2\n}\n</code></pre>\n\n<p>It will fail, just as before, because the first statement has a type different from <code>()</code>. Adding a <code>;</code> solves the issue:</p>\n\n<pre><code>fn test(c: bool) -&gt; i32{\n    if c { 1; }\n    2\n}\n</code></pre>\n\n<p>Writing an <code>else</code> also compiles, because then there is only one statement in the function and its type matches the return type of the function:</p>\n\n<pre><code>fn test(c: bool) -&gt; i32{\n    if c { 1 }\n    else { 2 }\n}\n</code></pre>\n\n<p>Note that both branches must have the same type, and no <code>;</code> in either.</p>\n\n<p>Adding a <code>return</code> will also work, because a return statement has <code>()</code> by definition, so any of these will compile:</p>\n\n<pre><code>fn test1(c: bool) -&gt; i32{\n    if c { return 1; }\n    2\n}\nfn test2(c: bool) -&gt; i32{\n    if c { return 1 }\n    2\n}\nfn test3(c: bool) -&gt; i32{\n    if c { return 1; }\n    else { 2 }\n}\nfn test4(c: bool) -&gt; i32{\n    if c { return 1; }\n    else { return 2; }\n}\n</code></pre>\n\n<p>Note how the <code>;</code> is actually optional in these <code>return</code> statements, because it is already of type <code>()</code>.</p>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 473, "favorite_count": 0, "closed_date": 1530040272, "accepted_answer_id": 51049939, "answer_count": 1, "score": 1, "last_activity_date": 1530040303, "creation_date": 1530039289, "last_edit_date": 1530040202, "question_id": 51049717, "link": "https://stackoverflow.com/questions/51049717/result-and-if-else-return-statements-e0308-error", "closed_reason": "Duplicate", "title": "Result and if/else/return statements E0308 error", "body": "<p>Why does the following code raise an error when compiled?</p>\n\n<pre><code>fn test(n: i32) -&gt; Result&lt;i32, &amp;'static str&gt; {\n    if n == 0 {\n        Err(\"error\")\n    }\n    Ok(n + 1)\n}\n</code></pre>\n\n<p>Following is the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:41:9\n   |\n41 |         Err(\"error\")\n   |         ^^^^^^^^^^^^- help: try adding a semicolon: `;`\n   |         |\n   |         expected (), found enum `std::result::Result`\n   |\n   = note: expected type `()`\n              found type `std::result::Result&lt;_, &amp;str&gt;`\n</code></pre>\n\n<p>The following two versions compile without any problem.</p>\n\n<ol>\n<li><p>With <code>else</code> statement:</p>\n\n<pre><code>fn test(n: i32) -&gt; Result&lt;i32, &amp;'static str&gt; {\n    if n == 0 {\n        Err(\"error\")\n    }\n    else {\n        Ok(n + 1)\n    }\n}\n</code></pre></li>\n<li><p>With <code>return</code> statement:</p>\n\n<pre><code>fn test(n: i32) -&gt; Result&lt;i32, &amp;'static str&gt; {\n    if n == 0 {\n        return Err(\"error\");\n    }\n    Ok(n + 1)\n}\n</code></pre></li>\n</ol>\n\n<p>I'm using Rust 1.27.0.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "edited": false, "score": 0, "creation_date": 1530033487, "post_id": 51048264, "comment_id": 89087753, "body": "Aha, sure, makes sense. I&#39;ve somehow overlooked that the Key in HashMap&#39;s signature also takes a lifetime parameter and the error message has mislead me down the wrong path... Thanks"}, {"owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "edited": false, "score": 0, "creation_date": 1530037180, "post_id": 51048264, "comment_id": 89089552, "body": "OK, I&#39;ve removed my Update section again, it was not relevant to the original question."}, {"owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "edited": false, "score": 0, "creation_date": 1530039812, "post_id": 51048264, "comment_id": 89090649, "body": "Thank you for the excellent updated answer. The Borrow obstruction has explained the need for &#39;k2 : &#39;k1 that was unclear to me. It is interesting to see that while the way <code>get</code> uses <code>Borrow</code> gives us additional power, it also puts additional restrictions on the map&#39;s and key&#39;s lifetime relationship.  In your last paragraph, do you suggest I should file an issue about the error message to the Rust team? Is this a legitimate case? I&#39;ve never done that before.."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1530035185, "last_edit_date": 1530035185, "creation_date": 1530033161, "answer_id": 51048264, "question_id": 51048144, "link": "https://stackoverflow.com/questions/51048144/confused-by-this-parameter-and-the-return-type-are-declared-with-different-lifet/51048264#51048264", "title": "Confused by this parameter and the return type are declared with different lifetimes but data from `key` is returned here", "body": "<p>You have two <code>Key</code>s in your signature that should be related, but you aren't relating them. The simplest solution is to give them both the same lifetime:</p>\n\n<pre><code>fn get&lt;'m, 'k&gt;(map: &amp;'m HashMap&lt;Key&lt;'k&gt;, usize&gt;, key: &amp;Key&lt;'k&gt;) -&gt; Option&lt;&amp;'m usize&gt;\n//         ^^                      ^^^^                   ^^^^\n</code></pre>\n\n<hr>\n\n<p>Your original code is closer to this, after lifetime elision:</p>\n\n<pre><code>fn get&lt;'m, 'k, 'kr, 'x&gt;(map: &amp;'m HashMap&lt;Key&lt;'x&gt;, usize&gt;, key: &amp;'k Key&lt;'kr&gt;) -&gt; Option&lt;&amp;'m usize&gt;\n</code></pre>\n\n<p>But I'm going to use this form instead:</p>\n\n<pre><code>fn get&lt;'m, 'k1, 'k2&gt;(map: &amp;'m HashMap&lt;Key&lt;'k1&gt;, usize&gt;, key: &amp;Key&lt;'k2&gt;) -&gt; Option&lt;&amp;'m usize&gt;\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow noreferrer\"><code>HashMap::get</code></a> has a non-trivial signature:</p>\n\n<pre><code>pub fn get&lt;Q: ?Sized&gt;(&amp;self, k: &amp;Q) -&gt; Option&lt;&amp;V&gt;\nwhere\n    K: Borrow&lt;Q&gt;,\n    Q: Hash + Eq, \n</code></pre>\n\n<p>For example, this allows you to lookup in a <code>HashMap&lt;String, V&gt;</code> with either a <code>&amp;String</code> or a <code>&amp;str</code>.</p>\n\n<p>Let's transplant that into our code and perform some substitution of generic types:</p>\n\n<pre><code>fn get&lt;'m, 'k1, 'k2&gt;(map: &amp;'m HashMap&lt;Key&lt;'k1&gt;, usize&gt;, key: &amp;Key&lt;'k2&gt;) -&gt; Option&lt;&amp;'m usize&gt; {\n    fake_get(map, key)\n}\n\nfn fake_get&lt;'m, 'k1, 'k2&gt;(_: &amp;'m HashMap&lt;Key&lt;'k1&gt;, usize&gt;, k: &amp;Key&lt;'k2&gt;) -&gt; Option&lt;&amp;'m usize&gt;\nwhere\n    Key&lt;'k1&gt;: Borrow&lt;Key&lt;'k2&gt;&gt;,\n    Key&lt;'k2&gt;: Hash + Eq,\n{\n    None\n}\n</code></pre>\n\n<p>We can remove the <code>Hash + Eq</code> bound because we know it's trivially true. We can also remove the <code>HashMap</code> wrapper:</p>\n\n<pre><code>fn get&lt;'m, 'k1, 'k2&gt;(map: &amp;'m Key&lt;'k1&gt;, key: &amp;Key&lt;'k2&gt;) -&gt; Option&lt;&amp;'m usize&gt; {\n    fake_get(map, key)\n}\n\nfn fake_get&lt;'m, 'k1, 'k2&gt;(_m: &amp;'m Key&lt;'k1&gt;, _k: &amp;Key&lt;'k2&gt;) -&gt; Option&lt;&amp;'m usize&gt;\nwhere\n    Key&lt;'k1&gt;: Borrow&lt;Key&lt;'k2&gt;&gt;,\n{\n    None\n}\n</code></pre>\n\n<p>The error comes down to the <code>Borrow</code> trait bound \u2014 can we borrow a <code>Key</code> with an arbitrary lifetime from another <code>Key</code> with another arbitrary lifetime?</p>\n\n<p>The only way for that to be true is if one lifetime is known to outlive another. This can be expressed:</p>\n\n<pre><code>fn get&lt;'m, 'k1, 'k2: 'k1&gt;(map: &amp;'m HashMap&lt;Key&lt;'k1&gt;, usize&gt;, key: &amp;Key&lt;'k2&gt;) -&gt; Option&lt;&amp;'m usize&gt;\n</code></pre>\n\n<blockquote>\n<pre><code>but data from `key` is returned here\n</code></pre>\n</blockquote>\n\n<p>I don't think this is a great error message in this case. I think it's likely that this is an uncommon case that hasn't been polished with this error message. The good news is you now have a small reproduction to file an issue with:</p>\n\n<pre><code>use std::borrow::Borrow;\n\nstruct Key&lt;'a&gt;(&amp;'a str);\n\nfn get&lt;'a, 'k1, 'k2&gt;(k1: &amp;'a Key&lt;'k1&gt;, k2: &amp;Key&lt;'k2&gt;) -&gt; &amp;'a i32 {\n    fake_get(k1, k2)\n}\n\nfn fake_get&lt;'a, 'k1, 'k2&gt;(_k1: &amp;'a Key&lt;'k1&gt;, _k2: &amp;Key&lt;'k2&gt;) -&gt; &amp;'a i32\nwhere\n    Key&lt;'k1&gt;: Borrow&lt;Key&lt;'k2&gt;&gt;,\n{\n    &amp;42\n}\n\nfn main() {}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45786717/155423\">How to implement HashMap with two keys?</a></li>\n</ul>\n"}], "owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1493, "favorite_count": 0, "accepted_answer_id": 51048264, "answer_count": 1, "score": 3, "last_activity_date": 1530037137, "creation_date": 1530032651, "last_edit_date": 1530037137, "question_id": 51048144, "link": "https://stackoverflow.com/questions/51048144/confused-by-this-parameter-and-the-return-type-are-declared-with-different-lifet", "title": "Confused by this parameter and the return type are declared with different lifetimes but data from `key` is returned here", "body": "<pre><code>use std::collections::HashMap;\n\n#[derive(Eq, Hash, PartialEq)]\nstruct Key&lt;'a&gt; {\n    key: &amp;'a str,\n}\n\nfn get&lt;'m, 'k, 'kr&gt;(map: &amp;'m HashMap&lt;Key, usize&gt;, key: &amp;'k Key&lt;'kr&gt;) -&gt; Option&lt;&amp;'m usize&gt; {\n    map.get(key)\n}\n\nfn main() {\n    let map: HashMap&lt;Key, usize&gt; = HashMap::new();\n    get(&amp;map, &amp;Key { key: \"foo\" });\n}\n</code></pre>\n\n<p>gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0623]: lifetime mismatch\n --&gt; src/main.rs:9:5\n  |\n8 | fn get&lt;'m, 'k, 'kr&gt;(map: &amp;'m HashMap&lt;Key, usize&gt;, key: &amp;'k Key&lt;'kr&gt;) -&gt; Option&lt;&amp;'m usize&gt; {\n  |                                                            --------     -----------------\n  |                                                            |\n  |                                                            this parameter and the return type are declared with different lifetimes...\n9 |     map.get(key)\n  |     ^^^^^^^^^^^^ ...but data from `key` is returned here\n</code></pre>\n\n<p>Yeah, <code>key</code>'s lifetimes are different from the return type's lifetime, but I don't see how \"<strong>data from <code>key</code></strong> is returned here\" ... I see <strong>data from <code>map</code></strong> returned using the key as.. well, just a key that is no longer needed after the value has been returned.</p>\n\n<p>IMO, <code>get</code> should work for just any <code>'k</code> and <code>'kr</code> passed in. Returned value lifetime should be the same as <code>map</code>'s lifetime. That is what I was trying to express, but clearly my thinking is wrong somewhere..</p>\n"}, {"tags": ["javascript", "rust", "webassembly"], "comments": [{"owner": {"reputation": 1813, "user_id": 1514010, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BLtSx.png?s=128&g=1", "display_name": "zakki", "link": "https://stackoverflow.com/users/1514010/zakki"}, "edited": false, "score": 1, "creation_date": 1530672423, "post_id": 51047146, "comment_id": 89313483, "body": "Maybe stdweb doesn&#39;t have clean way to access <code>InputElement.files</code> now. <a href=\"https://github.com/koute/stdweb/commit/3b85c941db00b8e3c942624afd50c5929085fb08\" rel=\"nofollow noreferrer\">github.com/koute/stdweb/commit/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 6767, "user_id": 376138, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2ff45dcc3874524bc53094d03fbb1f2c?s=128&d=identicon&r=PG", "display_name": "pixelistik", "link": "https://stackoverflow.com/users/376138/pixelistik"}, "is_accepted": false, "score": 1, "last_activity_date": 1530694069, "creation_date": 1530694069, "answer_id": 51169485, "question_id": 51047146, "link": "https://stackoverflow.com/questions/51047146/how-to-read-a-file-with-javascript-to-webassembly-using-rust/51169485#51169485", "title": "How to read a file with JavaScript to WebAssembly using Rust?", "body": "<p>I managed to access the file object and pass it to the <code>FileReader</code>in the following way:</p>\n\n<pre><code>let reader = FileReader::new();\nlet file_input_element: InputElement = document()\n    .query_selector(\".file-selector\")\n    .unwrap()\n    .unwrap()\n    .try_into()\n    .unwrap();\n\nfile_input_element.add_event_listener(\n    enclose!( (reader, file_input_element) move |event: InputEvent| {\n        let file = js!{return @{&amp;file_input_element}.files[0]};\n        let real_file: stdweb::web::Blob = file.try_into().unwrap();\n\n        reader.read_as_text(&amp;real_file);\n    }\n</code></pre>\n\n<p>This code compiles. However, the data never gets available via <code>reader.result()</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 2114, "user_id": 3698894, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/p6iFK.jpg?s=128&g=1", "display_name": "Journeycorner", "link": "https://stackoverflow.com/users/3698894/journeycorner"}, "is_accepted": true, "score": 8, "last_activity_date": 1552116501, "last_edit_date": 1552116501, "creation_date": 1531052155, "answer_id": 51231915, "question_id": 51047146, "link": "https://stackoverflow.com/questions/51047146/how-to-read-a-file-with-javascript-to-webassembly-using-rust/51231915#51231915", "title": "How to read a file with JavaScript to WebAssembly using Rust?", "body": "<p>It works when the <code>FileReader</code> itself is passed from JavaScript to WebAssembly. It also seems like a clean approach because the data has to be read by the JavaScript API anyway - no need to call JS from WASM.</p>\n\n<p><strong>index.html</strong></p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;Read to wasm&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input type=\"file\" id=\"file-input\"/&gt;\n&lt;script src=\"reader.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    var fileReader = new FileReader();\n    fileReader.onloadend = e =&gt; Rust.reader\n            .then(reader=&gt; {\n                window.alert(reader.print_result(fileReader));\n            });\n\n    var fileInputElement = document.getElementById(\"file-input\");\n    fileInputElement.addEventListener(\"change\", e =&gt; fileReader.readAsText(fileInputElement.files[0]));\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>#![feature(proc_macro)]\n\n#[macro_use]\nextern crate stdweb;\n\nuse stdweb::js_export;\nuse stdweb::web::FileReader;\nuse stdweb::web::FileReaderResult;\n\n#[js_export]\nfn print_result(file_reader: FileReader) -&gt; String {\n    match file_reader.result() {\n        Some(value) =&gt; match value {\n            FileReaderResult::String(value) =&gt; value,\n            _ =&gt; String::from(\"not a text\"),\n        }\n        None =&gt; String::from(\"empty\")\n    }\n}\n\nfn main() {\n    stdweb::initialize();\n\n    stdweb::event_loop();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 445, "user_id": 2188655, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cCV6m.jpg?s=128&g=1", "display_name": "Vince Pike", "link": "https://stackoverflow.com/users/2188655/vince-pike"}, "is_accepted": false, "score": 1, "last_activity_date": 1613675075, "last_edit_date": 1613675075, "creation_date": 1611666664, "answer_id": 65902005, "question_id": 51047146, "link": "https://stackoverflow.com/questions/51047146/how-to-read-a-file-with-javascript-to-webassembly-using-rust/65902005#65902005", "title": "How to read a file with JavaScript to WebAssembly using Rust?", "body": "<p>The following code is what I use to interact with another javascript library to read a sql file all without using javascript. This is based on the wasm-bindgen library, and I believe may be helpful to newer folks stumbling onto this answer.</p>\n<pre><code>[wasm_bindgen]\npub fn load_accounts_from_file_with_balances(file_input : web_sys::HtmlInputElement) {\n    //Check the file list from the input\n    let filelist = file_input.files().expect(&quot;Failed to get filelist from File Input!&quot;);\n    //Do not allow blank inputs\n    if filelist.length() &lt; 1 {\n        alert(&quot;Please select at least one file.&quot;);\n        return;\n    }\n    if filelist.get(0) == None {\n        alert(&quot;Please select a valid file&quot;);\n        return;\n    }\n    \n    let file = filelist.get(0).expect(&quot;Failed to get File from filelist!&quot;);\n\n    let file_reader : web_sys::FileReader = match web_sys::FileReader::new() {\n        Ok(f) =&gt; f,\n        Err(e) =&gt; {\n            alert(&quot;There was an error creating a file reader&quot;);\n            log(&amp;JsValue::as_string(&amp;e).expect(&quot;error converting jsvalue to string.&quot;));\n            web_sys::FileReader::new().expect(&quot;&quot;)\n        }\n    };\n\n    let fr_c = file_reader.clone();\n    // create onLoadEnd callback\n    let onloadend_cb = Closure::wrap(Box::new(move |_e: web_sys::ProgressEvent| {\n        let array = js_sys::Uint8Array::new(&amp;fr_c.result().unwrap());\n        let len = array.byte_length() as usize;\n        log(&amp;format!(&quot;Blob received {}bytes: {:?}&quot;, len, array.to_vec()));\n        // here you can for example use the received image/png data\n        \n        let db : Database = Database::new(array);\n\n        //Prepare a statement\n        let stmt : Statement = db.prepare(&amp;sql_helper_utility::sql_load_accounts_with_balances());\n        stmt.getAsObject();\n\n        // Bind new values\n        stmt.bind();\n\n        while stmt.step() { //\n            let row = stmt.getAsObject();\n            log(&amp;(&quot;Here is a row: &quot;.to_owned() + &amp;stringify(row).to_owned()));\n        }\n\n    }) as Box&lt;dyn Fn(web_sys::ProgressEvent)&gt;);\n\n    file_reader.set_onloadend(Some(onloadend_cb.as_ref().unchecked_ref()));\n    file_reader.read_as_array_buffer(&amp;file).expect(&quot;blob not readable&quot;);\n    onloadend_cb.forget();\n\n}\n</code></pre>\n"}], "owner": {"reputation": 2114, "user_id": 3698894, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/p6iFK.jpg?s=128&g=1", "display_name": "Journeycorner", "link": "https://stackoverflow.com/users/3698894/journeycorner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3405, "favorite_count": 6, "accepted_answer_id": 51231915, "answer_count": 3, "score": 14, "last_activity_date": 1613675075, "creation_date": 1530028907, "last_edit_date": 1530029340, "question_id": 51047146, "link": "https://stackoverflow.com/questions/51047146/how-to-read-a-file-with-javascript-to-webassembly-using-rust", "title": "How to read a file with JavaScript to WebAssembly using Rust?", "body": "<p>How can I pass a <code>File</code> to be read within the WebAssembly memory context?</p>\n\n<p>Reading a file in the browser with JavaScript is easy:</p>\n\n<pre><code>&lt;input class=\"file-selector\" type=\"file\" id=\"files\" name=\"files[]\" /&gt;\n</code></pre>\n\n<p>I was able to bootstrap WebAssembly code written in Rust with the crate <a href=\"https://github.com/koute/stdweb\" rel=\"noreferrer\">stdweb</a>, add an event listener to the DOM element and fire up a <a href=\"https://developer.mozilla.org/de/docs/Web/API/FileReader/readAsText\" rel=\"noreferrer\"><code>FileReader</code></a>:</p>\n\n<pre><code>let reader = FileReader::new();\nlet file_input_element: InputElement = document().query_selector(\".file-selector\").unwrap().unwrap().try_into().unwrap();\nfile_input_element.add_event_listener(enclose!( (reader, file_input_element) move |event: InputEvent| {\n    // mystery part\n}));\n</code></pre>\n\n<p>In JavaScript, I would get the file from the element and pass it to the reader, however, the API of stdweb needs the following signature:</p>\n\n<pre><code>pub fn read_as_array_buffer&lt;T: IBlob&gt;(&amp;self, blob: &amp;T) -&gt; Result&lt;(), TODO&gt;\n</code></pre>\n\n<p>I have no idea how to implement <code>IBlob</code> and I am sure that I am missing something obvious either with the stdweb API or in my understanding of WebAssembly/Rust. I was hoping that there is something less verbose than <a href=\"https://stackoverflow.com/questions/49014610/passing-a-javascript-string-to-a-rust-function-compiled-to-webassembly\">converting stuff to UTF-8</a>.</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1530029063, "answer_count": 0, "score": 2, "last_activity_date": 1530029027, "creation_date": 1530028587, "last_edit_date": 1530029027, "question_id": 51047048, "link": "https://stackoverflow.com/questions/51047048/assign-new-value-via-tuple-destructuring", "closed_reason": "Duplicate", "title": "Assign new value via tuple destructuring", "body": "<p>My simplified code:</p>\n\n<pre><code>fn f() -&gt; (u32, u32) {\n    (5, 5)\n}\n\nfn main() {\n    let mut i = 6_u32;\n    let mut j = 6_u32;\n\n    // some condition\n    if true {\n        let (new_i, new_j) = f();\n        i = new_i;\n        j = new_j;\n    }\n\n    // code that use i and j\n}\n</code></pre>\n\n<p>Is it possible to simplify the code:</p>\n\n<pre><code>let (new_i, new_j) = f();\ni = new_i;\nj = new_j;\n</code></pre>\n\n<p>In my real code, I pass 4 values in the tuple.</p>\n"}, {"tags": ["rust", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 0, "last_activity_date": 1530028146, "last_edit_date": 1530028146, "creation_date": 1530022154, "answer_id": 51044950, "question_id": 51044568, "link": "https://stackoverflow.com/questions/51044568/what-is-the-difference-between-somea-a-and-somea-a-when-matching/51044950#51044950", "title": "What is the difference between `Some(&amp;a) =&gt; a` and `Some(a) =&gt; *a` when matching an Option?", "body": "<p>In the first snippet, when you type <code>Some(&amp;a)</code>, you do not borrow <code>v</code> because <code>a</code> is copied.</p>\n\n<p>In the second case, <code>Some(a)</code> is of type <code>Option&lt;&amp;isize&gt;</code> so it holds a reference to <code>v</code>. When you try to move it, it triggers an error. If you copy it first, and then you return the pair, it works (you need the <a href=\"https://github.com/rust-lang/rust-roadmap/issues/16\" rel=\"nofollow noreferrer\">NLL feature</a> however):</p>\n\n<pre><code>#![feature(nll)]\n\nfn main() {\n    println!(\"{:?}\", f(vec![1]))\n}\n\nfn f(v: Vec&lt;isize&gt;) -&gt; (Vec&lt;isize&gt;, isize) {\n    match v.get(0) {\n        Some(a) =&gt; {\n            let a = *a; // v is no more borrowed\n            (v, a)\n        },\n        _ =&gt; (v, 0)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=73be9cea8e1d1d947b5e694bc23f62d9&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The borrow checker cannot be perfect, so you will often encounter some slightly inconsistent stuff.</p>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 1, "last_activity_date": 1530022972, "last_edit_date": 1530022972, "creation_date": 1530022552, "answer_id": 51045106, "question_id": 51044568, "link": "https://stackoverflow.com/questions/51044568/what-is-the-difference-between-somea-a-and-somea-a-when-matching/51045106#51045106", "title": "What is the difference between `Some(&amp;a) =&gt; a` and `Some(a) =&gt; *a` when matching an Option?", "body": "<p><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.get\" rel=\"nofollow noreferrer\"><code>v.get(0)</code></a> returns a reference to the element in the vector, so you are matching <code>&amp;isize</code>. The <code>Vec</code> is now borrowed in the match arm.</p>\n\n<p>In the first code snippet, you copy the <code>isize</code>, so the <code>Vec</code> isn't borrowed here. In the second snippet, the <code>Vec</code> is still borrowed, so you cannot move it out of scope.</p>\n\n<p>However, you should consider to use <code>if let</code> or <code>unwrap_or</code>:</p>\n\n<pre><code>fn f(v: Vec&lt;isize&gt;) -&gt; (Vec&lt;isize&gt;, isize) {\n    let a = v.get(0).cloned();\n    (v, a.unwrap_or(0))\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=7afbee2a24f78dfcacb08f17fcce897e&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>fn f(v: Vec&lt;isize&gt;) -&gt; (Vec&lt;isize&gt;, isize) {\n    if let Some(&amp;a) = v.get(0) {\n        (v, a)\n    } else {\n        (v, 0)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=dbd1b4231eaf2323590fdc7c900ba8e7&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/50752778/how-do-i-not-borrow-an-option-when-matching\">How do I not borrow an Option when matching?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/22282117/how-do-i-borrow-a-reference-to-what-is-inside-an-optiont\">How do I borrow a reference to what is inside an Option&lt;T&gt;?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/28158738/cannot-move-out-of-borrowed-content\">Cannot move out of borrowed content</a></li>\n</ul>\n"}], "owner": {"reputation": 132, "user_id": 8182174, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-iQlnR3_9N6M/AAAAAAAAAAI/AAAAAAAAQiQ/ZM0EfkRuhUo/photo.jpg?sz=128", "display_name": "Yuki Ito", "link": "https://stackoverflow.com/users/8182174/yuki-ito"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 51045106, "answer_count": 2, "score": 4, "last_activity_date": 1530028146, "creation_date": 1530021090, "last_edit_date": 1530022233, "question_id": 51044568, "link": "https://stackoverflow.com/questions/51044568/what-is-the-difference-between-somea-a-and-somea-a-when-matching", "title": "What is the difference between `Some(&amp;a) =&gt; a` and `Some(a) =&gt; *a` when matching an Option?", "body": "<p>Why does this pass:</p>\n\n<pre><code>fn f(v: Vec&lt;isize&gt;) -&gt; (Vec&lt;isize&gt;, isize) {\n    match v.get(0) {\n        Some(&amp;a) =&gt; (v, a),\n        _ =&gt; (v, 0)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=5e4b4cfd5dad133e15dec9017400303d&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>but this doesn't?:</p>\n\n<pre><code>fn f(v: Vec&lt;isize&gt;) -&gt; (Vec&lt;isize&gt;, isize) {\n    match v.get(0) {\n        Some(a) =&gt; (v, *a),\n        _ =&gt; (v, 0)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=2bd2672afffe4df5c7b063c10f69356f&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0505]: cannot move out of `v` because it is borrowed\n --&gt; src/main.rs:7:21\n  |\n6 |     match v.get(0) {\n  |           - borrow of `v` occurs here\n7 |         Some(a) =&gt; (v, *a),\n  |                     ^ move out of `v` occurs here\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio", "reqwest"], "answers": [{"comments": [{"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1576692452, "post_id": 51047786, "comment_id": 104984745, "body": "Why did you use ` stream::iter_ok(urls).map(..)` ? The closure passed to <code>.map()</code> returns a future? We should be using <code>and_then</code>?"}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1576692496, "post_id": 51047786, "comment_id": 104984761, "body": "Or alternatively, when to use <code>.map()</code> and when to use <code>.and_then()</code> .. both for stream? and for future?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1576692768, "post_id": 51047786, "comment_id": 104984881, "body": "@Nawaz See the documentation for <a href=\"https://docs.rs/futures/0.1.21/futures/stream/trait.Stream.html#method.buffer_unordered\" rel=\"nofollow noreferrer\"><code>Stream::buffer_unordered</code></a>: <i>If this stream&#39;s item can be converted into a future</i>. See also <a href=\"https://stackoverflow.com/q/55552413/155423\">What is the difference between <code>then</code>, <code>and_then</code> and <code>or_else</code> in Rust futures?</a>"}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1576692946, "post_id": 51047786, "comment_id": 104984962, "body": "Thanks. I read that. I understand that. The <code>.map()</code> part is missing though.. Also, how does that translate to <code>stream</code> (not <code>future</code>).  In case of <code>stream</code>, <code>and_then</code> is invoked for each <i>successful</i> item in the stream."}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1576693130, "post_id": 51047786, "comment_id": 104985046, "body": "<i>Convert a stream of futures into a stream of those future&#39;s values, executing the futures in parallel.</i>..What if I want <code>stream of stream of futures</code>? I&#39;ve <code>HaspMap&lt;K, Vec&lt;Url&gt;&gt;</code> and I want to fetch each <code>Url</code>.. and eventually want <code>HashMap&lt;K, Vec&lt;SomeObject&gt;&gt;</code>"}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1576693367, "post_id": 51047786, "comment_id": 104985159, "body": "I&#39;m trying something like this: <code>iter_ok(url_map).map(|k, urls| (k, iter_ok(urls).map(..))).buffered_unordered(N).... &lt;lost here&gt;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1576695812, "post_id": 51047786, "comment_id": 104986198, "body": "@Nawaz please produce a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> then post a new question, linking to this one and describing why it&#39;s different. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then include all of that information to reproduce it in your question, such as versions. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 186, "user_id": 4257100, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62cf6b45aa2daabc840151f312944c6d?s=128&d=identicon&r=PG&f=1", "display_name": "jpsalm", "link": "https://stackoverflow.com/users/4257100/jpsalm"}, "edited": false, "score": 0, "creation_date": 1581713827, "post_id": 51047786, "comment_id": 106541716, "body": "Is there a reason a stream is used rather than joining a list of futures?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 186, "user_id": 4257100, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62cf6b45aa2daabc840151f312944c6d?s=128&d=identicon&r=PG&f=1", "display_name": "jpsalm", "link": "https://stackoverflow.com/users/4257100/jpsalm"}, "edited": false, "score": 0, "creation_date": 1581715356, "post_id": 51047786, "comment_id": 106542321, "body": "@jpsalm <code>StreamExt</code> has the <code>buffer</code> and <code>buffer_unordered</code> methods, which you&#39;ll almost always want to use to prevent completely unbounded requests from taking up all of your system resources (e.g. open sockets). <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2a3dcc64380f21e51b063f1c5ed82c2b\" rel=\"nofollow noreferrer\">You don&#39;t need it though</a>"}, {"owner": {"reputation": 1618, "user_id": 1791856, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f123ff5b9de91e4b6a2fc52f2e28daa5?s=128&d=identicon&r=PG", "display_name": "Alex Moore-Niemi", "link": "https://stackoverflow.com/users/1791856/alex-moore-niemi"}, "edited": false, "score": 0, "creation_date": 1598497088, "post_id": 51047786, "comment_id": 112479886, "body": "I think this example won&#39;t run parallel but only concurrent, based on <a href=\"https://gist.github.com/lu4nm3/b8bca9431cdcf19d73040ada13387e58\" rel=\"nofollow noreferrer\">this gist</a> which I found in <a href=\"http://patshaughnessy.net/2020/1/20/downloading-100000-files-using-async-rust\" rel=\"nofollow noreferrer\">this post</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1618, "user_id": 1791856, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f123ff5b9de91e4b6a2fc52f2e28daa5?s=128&d=identicon&r=PG", "display_name": "Alex Moore-Niemi", "link": "https://stackoverflow.com/users/1791856/alex-moore-niemi"}, "edited": false, "score": 1, "creation_date": 1598884294, "post_id": 51047786, "comment_id": 112594482, "body": "@AlexMoore-Niemi fair enough. Updated."}, {"owner": {"reputation": 316, "user_id": 2891835, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/766f90a8980908dc76af596de917a905?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Lodato", "link": "https://stackoverflow.com/users/2891835/mark-lodato"}, "edited": false, "score": 0, "creation_date": 1607527256, "post_id": 51047786, "comment_id": 115301350, "body": "Question - can we clone a single client instead of giving each task its own client?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 316, "user_id": 2891835, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/766f90a8980908dc76af596de917a905?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Lodato", "link": "https://stackoverflow.com/users/2891835/mark-lodato"}, "edited": false, "score": 0, "creation_date": 1607528844, "post_id": 51047786, "comment_id": 115302201, "body": "@MarkLodato I not sure I follow. When you clone a client you make another client, which you then give to each task as it&#39;s own. The only difference is how the unique client is created. So I think the answer is &quot;yes&quot;."}, {"owner": {"reputation": 316, "user_id": 2891835, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/766f90a8980908dc76af596de917a905?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Lodato", "link": "https://stackoverflow.com/users/2891835/mark-lodato"}, "edited": false, "score": 0, "creation_date": 1607619485, "post_id": 51047786, "comment_id": 115335826, "body": "@Shepmaster I&#39;m probably assuming too much but it looks like Client has an inner Arc. Would that imply that cloning it would clone the Arc and allow you to reuse the connection pool (or some wizardry) from the underlying ClientRef?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 316, "user_id": 2891835, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/766f90a8980908dc76af596de917a905?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Lodato", "link": "https://stackoverflow.com/users/2891835/mark-lodato"}, "edited": false, "score": 0, "creation_date": 1607620910, "post_id": 51047786, "comment_id": 115336368, "body": "@MarkLodato yes, that\u2019s what <a href=\"https://docs.rs/reqwest/0.10.9/reqwest/struct.Client.html\" rel=\"nofollow noreferrer\">the documentation recommends</a>: <i>The Client holds a connection pool internally, so it is advised that you create one and reuse it.  You do not have to wrap the Client it in an Rc or Arc to reuse it, because it already uses an Arc internally.</i>"}, {"owner": {"reputation": 316, "user_id": 2891835, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/766f90a8980908dc76af596de917a905?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Lodato", "link": "https://stackoverflow.com/users/2891835/mark-lodato"}, "edited": false, "score": 0, "creation_date": 1607623551, "post_id": 51047786, "comment_id": 115337503, "body": "@Shepmaster Makes sense! Is there any value in updating this answer to using <code>clone</code> instead of <code>new</code>ing up for improved copy-ability?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 316, "user_id": 2891835, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/766f90a8980908dc76af596de917a905?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Lodato", "link": "https://stackoverflow.com/users/2891835/mark-lodato"}, "edited": false, "score": 0, "creation_date": 1607624604, "post_id": 51047786, "comment_id": 115337991, "body": "@MarkLodato ah, now I see why you were asking! Yes, I&#39;ve addressed that."}, {"owner": {"reputation": 105, "user_id": 3841784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45b8c780ed6859ddb9613528dec27b0?s=128&d=identicon&r=PG&f=1", "display_name": "Dragoon", "link": "https://stackoverflow.com/users/3841784/dragoon"}, "edited": false, "score": 0, "creation_date": 1613788971, "post_id": 51047786, "comment_id": 117192266, "body": "@Shepmaster which of these approaches uses the M:N threading I keep reading so much about? i.e. where the tokio runtime will create concurrent threads but also create parallel threads where necessary"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 105, "user_id": 3841784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45b8c780ed6859ddb9613528dec27b0?s=128&d=identicon&r=PG&f=1", "display_name": "Dragoon", "link": "https://stackoverflow.com/users/3841784/dragoon"}, "edited": false, "score": 0, "creation_date": 1613791264, "post_id": 51047786, "comment_id": 117192578, "body": "@Dragoon the one under <i>Parallel requests</i>. <code>tokio::spawn</code> creates new tasks, and tasks can be moved across threads (when Tokio is using a <a href=\"https://docs.rs/tokio/1.2.0/tokio/runtime/index.html#multi-thread-scheduler\" rel=\"nofollow noreferrer\">multithreaded scheduler</a>)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 57, "last_activity_date": 1607624581, "last_edit_date": 1607624581, "creation_date": 1530031284, "answer_id": 51047786, "question_id": 51044467, "link": "https://stackoverflow.com/questions/51044467/how-can-i-perform-parallel-asynchronous-http-get-requests-with-reqwest/51047786#51047786", "title": "How can I perform parallel asynchronous HTTP GET requests with reqwest?", "body": "<h1>Concurrent requests</h1>\n<p>As of reqwest 0.10:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::{stream, StreamExt}; // 0.3.5\nuse reqwest::Client; // 0.10.6\nuse tokio; // 0.2.21, features = [&quot;macros&quot;]\n\nconst CONCURRENT_REQUESTS: usize = 2;\n\n#[tokio::main]\nasync fn main() {\n    let client = Client::new();\n\n    let urls = vec![&quot;https://api.ipify.org&quot;; 2];\n\n    let bodies = stream::iter(urls)\n        .map(|url| {\n            let client = &amp;client;\n            async move {\n                let resp = client.get(url).send().await?;\n                resp.bytes().await\n            }\n        })\n        .buffer_unordered(CONCURRENT_REQUESTS);\n\n    bodies\n        .for_each(|b| async {\n            match b {\n                Ok(b) =&gt; println!(&quot;Got {} bytes&quot;, b.len()),\n                Err(e) =&gt; eprintln!(&quot;Got an error: {}&quot;, e),\n            }\n        })\n        .await;\n}\n</code></pre>\n<hr />\n<blockquote>\n<pre><code>stream::iter(urls)\n</code></pre>\n</blockquote>\n<p><a href=\"https://docs.rs/futures/0.3.1/futures/stream/fn.iter.html\" rel=\"noreferrer\"><code>stream::iter</code></a></p>\n<p>Take a collection of strings and convert it into a <a href=\"https://docs.rs/futures/0.3.1/futures/stream/trait.Stream.html\" rel=\"noreferrer\"><code>Stream</code></a>.</p>\n<blockquote>\n<pre><code>.map(|url| {\n</code></pre>\n</blockquote>\n<p><a href=\"https://docs.rs/futures/0.3.1/futures/stream/trait.StreamExt.html#method.map\" rel=\"noreferrer\"><code>StreamExt::map</code></a></p>\n<p>Run an asynchronous function on every element in the stream and transform the element to a new type.</p>\n<blockquote>\n<pre><code>let client = &amp;client;\nasync move {\n</code></pre>\n</blockquote>\n<p>Take an explicit reference to the <code>Client</code> and move the reference (not the original <code>Client</code>) into an anonymous asynchronous block.</p>\n<blockquote>\n<pre><code>let resp = client.get(url).send().await?;\n</code></pre>\n</blockquote>\n<p>Start an asynchronous GET request using the <code>Client</code>'s connection pool and wait for the request.</p>\n<blockquote>\n<pre><code>resp.bytes().await\n</code></pre>\n</blockquote>\n<p>Request and wait for the bytes of the response.</p>\n<blockquote>\n<pre><code>.buffer_unordered(N);\n</code></pre>\n</blockquote>\n<p><a href=\"https://docs.rs/futures/0.3.1/futures/stream/trait.StreamExt.html#method.buffer_unordered\" rel=\"noreferrer\"><code>StreamExt::buffer_unordered</code></a></p>\n<p>Convert a stream of futures into a stream of those future's values, executing the futures concurrently.</p>\n<blockquote>\n<pre><code>bodies\n    .for_each(|b| {\n        async {\n            match b {\n                Ok(b) =&gt; println!(&quot;Got {} bytes&quot;, b.len()),\n                Err(e) =&gt; eprintln!(&quot;Got an error: {}&quot;, e),\n            }\n        }\n    })\n    .await;\n</code></pre>\n</blockquote>\n<p><a href=\"https://docs.rs/futures/0.1.29/futures/stream/trait.Stream.html#method.for_each\" rel=\"noreferrer\"><code>StreamExt::for_each</code></a></p>\n<p>Convert the stream back into a single future, printing out the amount of data received along the way, then wait for the future to complete.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43247212/155423\">Join futures with limited concurrency</a></li>\n<li><a href=\"https://stackoverflow.com/q/48785894/155423\">How to merge iterator of streams?</a></li>\n<li><a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/55552413/155423\">What is the difference between `then`, `and_then` and `or_else` in Rust futures?</a></li>\n</ul>\n<h2>Without bounded execution</h2>\n<p>If you wanted to, you could also convert an iterator into an iterator of futures and use <a href=\"https://docs.rs/futures/0.3.4/futures/future/fn.join_all.html\" rel=\"noreferrer\"><code>future::join_all</code></a>:</p>\n<pre><code>use futures::future; // 0.3.4\nuse reqwest::Client; // 0.10.1\nuse tokio; // 0.2.11\n\n#[tokio::main]\nasync fn main() {\n    let client = Client::new();\n\n    let urls = vec![&quot;https://api.ipify.org&quot;; 2];\n\n    let bodies = future::join_all(urls.into_iter().map(|url| {\n        let client = &amp;client;\n        async move {\n            let resp = client.get(url).send().await?;\n            resp.bytes().await\n        }\n    }))\n    .await;\n\n    for b in bodies {\n        match b {\n            Ok(b) =&gt; println!(&quot;Got {} bytes&quot;, b.len()),\n            Err(e) =&gt; eprintln!(&quot;Got an error: {}&quot;, e),\n        }\n    }\n}\n</code></pre>\n<p>I'd encourage using the first example as you usually want to limit the concurrency, which <code>buffer</code> and <code>buffer_unordered</code> help with.</p>\n<h1>Parallel requests</h1>\n<p>Concurrent requests are generally good enough, but there are times where you <strong>need</strong> parallel requests. In that case, you need to spawn a task.</p>\n<pre><code>use futures::{stream, StreamExt}; // 0.3.8\nuse reqwest::Client; // 0.10.9\nuse tokio; // 0.2.24, features = [&quot;macros&quot;]\n\nconst PARALLEL_REQUESTS: usize = 2;\n\n#[tokio::main]\nasync fn main() {\n    let urls = vec![&quot;https://api.ipify.org&quot;; 2];\n\n    let client = Client::new();\n\n    let bodies = stream::iter(urls)\n        .map(|url| {\n            let client = client.clone();\n            tokio::spawn(async move {\n                let resp = client.get(url).send().await?;\n                resp.bytes().await\n            })\n        })\n        .buffer_unordered(PARALLEL_REQUESTS);\n\n    bodies\n        .for_each(|b| async {\n            match b {\n                Ok(Ok(b)) =&gt; println!(&quot;Got {} bytes&quot;, b.len()),\n                Ok(Err(e)) =&gt; eprintln!(&quot;Got a reqwest::Error: {}&quot;, e),\n                Err(e) =&gt; eprintln!(&quot;Got a tokio::JoinError: {}&quot;, e),\n            }\n        })\n        .await;\n}\n</code></pre>\n<p>The primary differences are:</p>\n<ul>\n<li>We use <a href=\"https://docs.rs/tokio/0.2.24/tokio/fn.spawn.html\" rel=\"noreferrer\"><code>tokio::spawn</code></a> to perform work in separate <em>tasks</em>.</li>\n<li>We have to give each task its own <code>reqwest::Client</code>. As <a href=\"https://docs.rs/reqwest/0.10.9/reqwest/struct.Client.html\" rel=\"noreferrer\">recommended</a>, we clone a shared client to make use of the connection pool.</li>\n<li>There's an additional error case when the task cannot be joined.</li>\n</ul>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/1897993/155423\">What is the difference between concurrent programming and parallel programming?</a></li>\n<li><a href=\"https://stackoverflow.com/q/1050222/155423\">What is the difference between concurrency and parallelism?</a></li>\n<li><a href=\"https://stackoverflow.com/q/4844637/155423\">What is the difference between concurrency, parallelism and asynchronous methods?</a></li>\n</ul>\n"}], "owner": {"reputation": 1583, "user_id": 964375, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/38430929bc031983e074dafea21b3d88?s=128&d=identicon&r=PG", "display_name": "user964375", "link": "https://stackoverflow.com/users/964375/user964375"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9517, "favorite_count": 14, "accepted_answer_id": 51047786, "answer_count": 1, "score": 25, "last_activity_date": 1607624581, "creation_date": 1530020780, "last_edit_date": 1530028041, "question_id": 51044467, "link": "https://stackoverflow.com/questions/51044467/how-can-i-perform-parallel-asynchronous-http-get-requests-with-reqwest", "title": "How can I perform parallel asynchronous HTTP GET requests with reqwest?", "body": "<p><a href=\"https://github.com/seanmonstar/reqwest/blob/a4f5c2d3f0a187daa3940d0a249f4748cd38fe0f/examples/async.rs\" rel=\"noreferrer\">The async example</a> is useful, but being new to Rust and Tokio, I am struggling to work out how to do N requests at once, using URLs from a vector, and creating an iterator of the response HTML for each URL as a string. </p>\n\n<p>How could this be done?</p>\n"}, {"tags": ["windows", "winapi", "callback", "rust", "hook"], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 4, "last_activity_date": 1530018434, "last_edit_date": 1530018434, "creation_date": 1529983767, "answer_id": 51034477, "question_id": 51033906, "link": "https://stackoverflow.com/questions/51033906/how-to-use-setwindowshookex-in-rust/51034477#51034477", "title": "How to use SetWindowsHookEx in Rust?", "body": "<blockquote>\n  <p>The compiler complains that it needs a \"system\" <code>fn</code> for the callback function, but is getting a Rust <code>fn</code>, which makes sense, but I still don't know how to make that work.</p>\n</blockquote>\n\n<p>The compiler actually gives you <em>exactly</em> what you need ... if you continue reading the error you'll see:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected type `unsafe extern \"system\" fn(i32, u64, i64) -&gt; i64`\n   found type `fn(i32, u64, i64) -&gt; i64 {hook_callback}`\n</code></pre>\n\n<p>Adding that, gives:</p>\n\n<pre><code>extern \"system\" fn hook_callback(code: i32, wParam: u64, lParam: i64) -&gt; i64 {\n    0\n}\n</code></pre>\n\n<blockquote>\n  <p>From what I gathered from the documentation, the third parameter <code>hMod</code> should point to the same module that has the callback function, and the examples in other languages uses some function that gets the current module handle, but I don't know how to do that in Rust.</p>\n</blockquote>\n\n<p>Again, reading further into the WinAPI documentation shows that <code>NULL</code> should be the value of this parameter if the thread ID (the last argument) specifies that its within the same process. Since you've passed zero - which the documentation states is associated with all threads in the current process ... that's what it should be... <code>NULL</code>. So now we get:</p>\n\n<pre><code>let hook_id =\n    user32::SetWindowsHookExA(WH_KEYBOARD_LL, Some(hook_callback), std::ptr::null_mut(), 0);\n</code></pre>\n\n<p>This compiles.</p>\n\n<p>Accounting for the other errors around <code>unsafe</code> that you'll get ... this gives you (full working code):</p>\n\n<pre><code>extern crate user32;\nextern crate winapi;\n\nconst WH_KEYBOARD_LL: i32 = 13;\n\nfn main() {\n    unsafe {\n        let hook_id =\n            user32::SetWindowsHookExA(WH_KEYBOARD_LL, Some(hook_callback), std::ptr::null_mut(), 0);\n\n        // Don't forget to release the hook eventually\n        user32::UnhookWindowsHookEx(hook_id);\n    }\n}\n\nextern \"system\" fn hook_callback(code: i32, wParam: u64, lParam: i64) -&gt; i64 {\n    0\n}\n</code></pre>\n"}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 625, "favorite_count": 2, "accepted_answer_id": 51034477, "answer_count": 1, "score": 0, "last_activity_date": 1530018434, "creation_date": 1529978408, "last_edit_date": 1530018213, "question_id": 51033906, "link": "https://stackoverflow.com/questions/51033906/how-to-use-setwindowshookex-in-rust", "title": "How to use SetWindowsHookEx in Rust?", "body": "<p>I am trying to figure out how to set global Windows hooks inside of Rust. I can find multiple examples for other languages, but there doesn't seem to be anything for Rust. </p>\n\n<p>What I managed to get so far: </p>\n\n<pre><code>extern crate user32;\nextern crate winapi;\n\nconst WH_KEYBOARD_LL: i32 = 13;\nfn main() {\n    let hook_id = user32::SetWindowsHookExA(\n        WH_KEYBOARD_LL,\n        Some(hook_callback),\n        // No idea what goes here ,\n        0,\n    );\n}\n\nfn hook_callback(code: i32, wParam: u64, lParam: i64) -&gt; i64 {\n    // ...\n}\n</code></pre>\n\n<p>The compiler complains that it needs a \"system\" <code>fn</code> for the callback function, but is getting a Rust <code>fn</code>, which makes sense, but I still don't know how to make that work.</p>\n\n<p>From what I gathered from the documentation, the third parameter <code>hMod</code>  should point to the same module that has the callback function, and the examples in other languages uses some function that gets the current module handle, but I don't know how to do that in Rust.</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1529950072, "answer_count": 0, "score": 2, "last_activity_date": 1529950224, "creation_date": 1529949753, "last_edit_date": 1529950224, "question_id": 51029413, "link": "https://stackoverflow.com/questions/51029413/deriveclone-with-a-weak-generic", "closed_reason": "Duplicate", "title": "#[derive(Clone)] with a Weak generic", "body": "<p>The following code fails to compile with Rust 1.27 and nightly <a href=\"https://play.rust-lang.org/?gist=d73e2ef1b6a08e1a09cccf4a2cfdfca6&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">(playground)</a>:</p>\n\n<pre><code>use std::rc::{Rc, Weak};\n\nstruct Bar;\n\n#[derive(Clone)]\nstruct Foo&lt;T&gt; {\n    w: Weak&lt;T&gt;,\n}\n\nfn main() {\n    let r = Rc::new(Bar);\n    let w = Rc::downgrade(&amp;r);\n\n    let f = Foo { w };\n    let _f2 = f.clone();\n}\n</code></pre>\n\n<p>The resulting error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `clone` found for type `Foo&lt;Bar&gt;` in the current scope\n  --&gt; src/main.rs:15:17\n   |\n6  | struct Foo&lt;T&gt; {\n   | ------------- method `clone` not found for this\n...\n15 |     let _f2 = f.clone();\n   |                 ^^^^^\n   |\n   = note: the method `clone` exists but the following trait bounds were not satisfied:\n           `Foo&lt;Bar&gt; : std::clone::Clone`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `clone`, perhaps you need to implement it:\n           candidate #1: `std::clone::Clone`\n</code></pre>\n\n<p>This is weird because, the <code>Clone</code> type is derived for that type, and I assume that if a <code>derive</code> does not fail, then given trait will be implemented.</p>\n\n<p>Why do I get this error?</p>\n\n<p>I also tried this code:</p>\n\n<pre><code>fn main() {\n    let r = Rc::new(Bar);\n    let w = Rc::downgrade(&amp;r);\n    let f = Foo { w };\n    let _f2 = Clone::clone(&amp;f);\n}\n</code></pre>\n\n<p>The error message is quite curious:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Bar: std::clone::Clone` is not satisfied\n  --&gt; src/main.rs:14:15\n   |\n14 |     let _f2 = Clone::clone(&amp;f);\n   |               ^^^^^^^^^^^^ the trait `std::clone::Clone` is not implemented for `Bar`\n   |\n   = note: required because of the requirements on the impl of `std::clone::Clone` for `Foo&lt;Bar&gt;`\n   = note: required by `std::clone::Clone::clone`\n</code></pre>\n\n<p>Is that a hint that there is a bug in the implementation of <code>derive(Clone)</code>?</p>\n\n<p>Changing the definition to this compiles:</p>\n\n<pre><code>#[derive(Clone)]\nstruct Foo {\n    w: Weak&lt;Bar&gt;,\n}\n</code></pre>\n\n<p>I thought that I might be missing a generic constraint on <code>T</code>, but what could it be (<code>T: ?Clone</code> makes no sense)?</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1529949911, "post_id": 51029315, "comment_id": 89051191, "body": "I found the first one, but didn&#39;t realize it was the same issue as me, and I didn&#39;t quite understand your solution. Reading the second one helped me understand, thank you."}], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1529949941, "answer_count": 0, "score": 1, "last_activity_date": 1529949956, "creation_date": 1529949361, "last_edit_date": 1529949720, "question_id": 51029315, "link": "https://stackoverflow.com/questions/51029315/use-of-collaterally-moved-value", "closed_reason": "Duplicate", "title": "&quot;use of collaterally moved value&quot;", "body": "<p>I have the following code (you can <a href=\"http://play.rust-lang.org/?gist=46f049e8db1859443e8a90025e01ea47&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">try it on play.rust-lang.org</a>):</p>\n\n<pre><code>pub enum InnerStream {\n    Root,\n    Transaction {\n        v: Vec&lt;u32&gt;,\n        parent: Box&lt;InnerStream&gt;,\n    },\n}\n\nimpl InnerStream {\n    pub fn rollback(self) -&gt; InnerStream {\n        match self {\n            InnerStream::Transaction { v: _v, parent } =&gt; match *parent {\n                InnerStream::Root =&gt; InnerStream::Root,\n                InnerStream::Transaction {\n                    v,\n                    parent: parent_parent,\n                } =&gt; InnerStream::Transaction {\n                    v,\n                    parent: parent_parent,\n                },\n            },\n            InnerStream::Root { .. } =&gt; panic!(\"Cannot rollback root stream.\"),\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>(that's an example, not the real one, don't worry if it seems useless)</p>\n\n<p>It looks fine to me, but the borrow-checker gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of collaterally moved value: `(parent as InnerStream::Transaction).parent`\n  --&gt; src/main.rs:16:29\n   |\n15 |                     v,\n   |                     - value moved here\n16 |                     parent: parent_parent,\n   |                             ^^^^^^^^^^^^^ value used here after move\n   |\n   = note: move occurs because the value has type `std::vec::Vec&lt;u32&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>What is the cause of this error and how do I fix it?</p>\n"}, {"tags": ["rust", "match", "lifetime", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 0, "creation_date": 1529943571, "post_id": 51027712, "comment_id": 89048115, "body": "You could also do: <code>self.inner_iter = match &amp;mut self.inner_iter {...};</code>. Pulling the assignment out of the match expression is what satisfies the borrow checker here. Whether to use a local variable or not merely concerns readability in this case."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 3, "last_activity_date": 1529942857, "creation_date": 1529942857, "answer_id": 51027712, "question_id": 51027517, "link": "https://stackoverflow.com/questions/51027517/how-to-assign-to-the-variable-used-in-match-expression-inside-a-match-branch/51027712#51027712", "title": "How to assign to the variable used in match expression inside a match branch?", "body": "<p>In these kind of situations, I find useful to write the code in two pieces: first collect the data, then update the mutable:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n    loop {\n        //collect the change into a local variable\n        let ii = match &amp;mut self.inner_iter {\n            Some(ref mut it) =&gt; {\n                match it.next() {\n                    Some(x) =&gt; { return Some(x); }\n                    None =&gt; self.outer_iter.next().map(|it| it.into_iter())\n                }\n            }\n            None =&gt; { return None; }\n        };\n        //self.inner_iter is no longer borrowed, update\n        self.inner_iter = ii;\n    }\n}\n</code></pre>\n\n<p>The fact that all the branches that do not modify the <code>inner_iter</code> do a <code>return</code> makes the code easier.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1537200190, "last_edit_date": 1537200190, "creation_date": 1529944060, "answer_id": 51028018, "question_id": 51027517, "link": "https://stackoverflow.com/questions/51027517/how-to-assign-to-the-variable-used-in-match-expression-inside-a-match-branch/51028018#51028018", "title": "How to assign to the variable used in match expression inside a match branch?", "body": "<p>Here is a simpler reproduction of the problem:</p>\n\n<pre><code>fn main() {\n    let mut a = (42, true);\n    match a {\n        (ref _i, true) =&gt; a = (99, false),\n        (ref _i, false) =&gt; a = (42, true),\n    }\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `a` because it is borrowed\n --&gt; src/main.rs:4:27\n  |\n4 |         (ref _i, true) =&gt; a = (99, false),\n  |          ------           ^^^^^^^^^^^^^^^ assignment to borrowed `a` occurs here\n  |          |\n  |          borrow of `a` occurs here\n\nerror[E0506]: cannot assign to `a` because it is borrowed\n --&gt; src/main.rs:5:28\n  |\n5 |         (ref _i, false) =&gt; a = (42, true),\n  |          ------            ^^^^^^^^^^^^^^ assignment to borrowed `a` occurs here\n  |          |\n  |          borrow of `a` occurs here\n</code></pre>\n\n<p>This is a weakness of the AST-based borrow checker. When <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">non-lexical lifetimes</a> are enabled, this <a href=\"https://play.rust-lang.org/?gist=6019e70a7cea648868f9c3af47691689&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">works as-is</a>. The enhanced MIR-based borrow checker can see that there's no borrow of the matched-on variable at the point at which you try to replace it.</p>\n\n<hr>\n\n<p>For what it's worth, your <code>join</code> is just a <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>flat_map</code></a>:</p>\n\n<pre><code>input.iter().flat_map(|x| x)\n</code></pre>\n\n<p>Or a <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten\" rel=\"nofollow noreferrer\"><code>flatten</code></a>:</p>\n\n<pre><code>input.iter().flatten()\n</code></pre>\n\n<p>You can see how these <a href=\"https://github.com/rust-lang/rust/blob/1.26.2/src/libcore/iter/mod.rs#L2634-L2644\" rel=\"nofollow noreferrer\">implement <code>next</code></a> for another idea:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n    loop {\n        if let Some(v) = self.inner_iter.as_mut().and_then(|i| i.next()) {\n            return Some(v);\n        }\n        match self.outer_iter.next() {\n            Some(x) =&gt; self.inner_iter = Some(x.into_iter()),\n            None =&gt; return None,\n        }\n    }\n}\n</code></pre>\n\n<p>This clearly delineates that the iterator value doesn't <em>really</em> borrow from <code>inner_iter</code>.</p>\n\n<hr>\n\n<p>Without looking at <code>flatten</code>, I would have chosen to clearly indicate that there's no overlapping borrowing by <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.take\" rel=\"nofollow noreferrer\">taking</a> the <code>Option</code> and restoring it if it is <code>Some</code>, as you've done: </p>\n\n<pre><code>match self.inner_iter.take() {\n    Some(mut it) =&gt; match it.next() {\n        Some(x) =&gt; {\n            self.inner_iter = Some(it);\n            return Some(x);\n        }\n        None =&gt; {\n            self.inner_iter = self.outer_iter.next().map(|it| it.into_iter());\n        }\n    },\n    None =&gt; {\n        return None;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1155, "favorite_count": 0, "accepted_answer_id": 51028018, "answer_count": 2, "score": 1, "last_activity_date": 1537200190, "creation_date": 1529942098, "last_edit_date": 1529944651, "question_id": 51027517, "link": "https://stackoverflow.com/questions/51027517/how-to-assign-to-the-variable-used-in-match-expression-inside-a-match-branch", "title": "How to assign to the variable used in match expression inside a match branch?", "body": "<p>I'm trying to implement a general function <code>join()</code> that can work on any iterator of iterators. I have a problem with the borrow checker in a <code>match</code> expression inside the <code>next()</code> method implementation. Here is a simplified version of my code:</p>\n\n<pre><code>pub struct Join&lt;I&gt;\nwhere\n    I: Iterator,\n    I::Item: IntoIterator,\n{\n    outer_iter: I,\n    inner_iter: Option&lt;&lt;I::Item as IntoIterator&gt;::IntoIter&gt;,\n}\n\nimpl&lt;I&gt; Join&lt;I&gt;\nwhere\n    I: Iterator,\n    I::Item: IntoIterator,\n{\n    pub fn new(mut iter: I) -&gt; Join&lt;I&gt; {\n        let inner_iter = iter.next().map(|it| it.into_iter());\n        Join {\n            outer_iter: iter,\n            inner_iter,\n        }\n    }\n}\n\nimpl&lt;I&gt; Iterator for Join&lt;I&gt;\nwhere\n    I: Iterator,\n    I::Item: IntoIterator,\n{\n    type Item = &lt;I::Item as IntoIterator&gt;::Item;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        loop {\n            match &amp;mut self.inner_iter {\n                Some(ref mut it) =&gt; match it.next() {\n                    Some(x) =&gt; {\n                        return Some(x);\n                    }\n                    None =&gt; {\n                        self.inner_iter = self.outer_iter.next().map(|it| it.into_iter());\n                    }\n                },\n                None =&gt; {\n                    return None;\n                }\n            }\n        }\n    }\n}\n\npub trait MyItertools: Iterator {\n    fn join(self) -&gt; Join&lt;Self&gt;\n    where\n        Self: Sized,\n        Self::Item: IntoIterator,\n    {\n        Join::new(self)\n    }\n}\n\nimpl&lt;I&gt; MyItertools for I where I: Iterator {}\n\n#[cfg(test)]\nmod test {\n    use super::MyItertools;\n\n    #[test]\n    fn it_works() {\n        let input = [[1], [2]];\n        let expected = [&amp;1, &amp;2];\n        assert_eq!(input.iter().join().collect::&lt;Vec&lt;_&gt;&gt;(), expected);\n    }\n}\n</code></pre>\n\n<p>Text of error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `self.inner_iter` because it is borrowed\n  --&gt; src/main.rs:39:25\n   |\n33 |             match &amp;mut self.inner_iter {\n   |                        --------------- borrow of `self.inner_iter` occurs here\n...\n39 |                         self.inner_iter = self.outer_iter.next().map(|it| it.into_iter());\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `self.inner_iter` occurs here\n</code></pre>\n\n<p>I understand why the borrow checker complains about my code, but I did not find a good solution, only an ugly workaround:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n    loop {\n        match self.inner_iter.take() {\n            Some(mut it) =&gt; {\n                match it.next() {\n                    Some(x) =&gt; { self.inner_iter = Some(it); return Some(x); }\n                    None =&gt; { self.inner_iter = self.outer_iter.next().map(|it| it.into_iter()); }\n                }\n            }\n            None =&gt; { return None; }\n        }\n    }\n}\n</code></pre>\n\n<p>I imagine that situations like this occur regularly; how can I rewrite my code to deal with them or avoid them?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 1, "creation_date": 1529946436, "post_id": 51026536, "comment_id": 89049580, "body": "Should this be restricted to <code>Copy</code> types like <code>i32</code>? In this case a <code>remove_ref</code> function could look like this: <code>fn remove_ref&lt;T: Copy&gt;(t : &amp;T) -&gt; T{*t}</code> example usage: <code>let i = remove_ref::&lt;i32&gt;(&amp;mut &amp;&amp;mut 42);</code>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 5, "creation_date": 1529947204, "post_id": 51026536, "comment_id": 89049960, "body": "@Calculator Thanks for your comment! Unfortunately, that&#39;s not quite what I meant. I see now that my pseudo code in the beginning is kind of confusing. A Rust function maps from value to value. I want something that maps from type to type (which I think can only be done with traits). My whole question doesn&#39;t care about actual values."}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1530002183, "post_id": 51032343, "comment_id": 89068218, "body": "Thanks! Very interesting, didn&#39;t think of that solution. Sadly, the <code>Ref&lt;_&gt;</code> implementation does in fact not help in my actual use case. Sad that this probably won&#39;t work with specialization :/"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1535449606, "post_id": 51032343, "comment_id": 91059824, "body": "I think this problem could actually be solved by <a href=\"https://github.com/rust-lang/rfcs/pull/2532\" rel=\"nofollow noreferrer\">RFC 2532</a>. When this get merged, I will revisit this question."}], "tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": false, "score": 5, "last_activity_date": 1529975416, "last_edit_date": 1529975416, "creation_date": 1529963958, "answer_id": 51032343, "question_id": 51026536, "link": "https://stackoverflow.com/questions/51026536/implement-something-similar-to-cs-stdremove-reference-in-rust/51032343#51032343", "title": "Implement something similar to C++&#39;s `std::remove_reference` in Rust?", "body": "<p>Here is a simple approach that works without the specialization feature:</p>\n\n<pre><code>use std::marker::PhantomData;\n\ntrait RemoveRef {\n    type WithoutRef;\n}\n\nstruct Ref&lt;T&gt; {\n    phantom: PhantomData&lt;T&gt;,\n}\n\nimpl&lt;T&gt; RemoveRef for Ref&lt;T&gt; {\n    type WithoutRef = T;\n}\n\nimpl&lt;'a, T: RemoveRef&gt; RemoveRef for &amp;'a T {\n    type WithoutRef = T::WithoutRef;\n}\n\nfn main() {\n    let _: &lt;Ref&lt;i32&gt; as RemoveRef&gt;::WithoutRef = 3;\n    let _: &lt;&amp;Ref&lt;i32&gt; as RemoveRef&gt;::WithoutRef = 3;\n    let _: &lt;&amp;&amp;&amp;&amp;Ref&lt;i32&gt; as RemoveRef&gt;::WithoutRef = 3;\n}\n</code></pre>\n\n<p>Not sure though if it can be made compatible with your actual use case in this form or if it is useful at all. </p>\n\n<p>Alternatively, it is of course also possible to replace your generic exit condition (<code>impl&lt;T&gt; RemoveRef for T</code>) with implementations for concrete types: </p>\n\n<pre><code>impl RemoveRef for i32 {\n    type WithoutRef = Self;\n}\n</code></pre>\n\n<p>This enables your original test code:</p>\n\n<pre><code>let _: &lt;i32 as RemoveRef&gt;::WithoutRef = 3;\nlet _: &lt;&amp;i32 as RemoveRef&gt;::WithoutRef = 3;\nlet _: &lt;&amp;&amp;i32 as RemoveRef&gt;::WithoutRef = 3;\n</code></pre>\n\n<hr>\n\n<p>AFAIK specializations cannot help you to fix overlapping issue like the one between <code>for T</code> and <code>for &amp;'a T</code> at this point. It would require features like negative trait bounds.</p>\n\n<p>All items in a <code>default impl</code> are implicitly default. If you move the <code>default</code> keyword to the associated type in your code you get rid of the evaluation overflow, but you get other errors:</p>\n\n<pre><code>impl&lt;T&gt; RemoveRef for T {\n    default type WithoutRef = T;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:16:45\n   |\n16 |     let _: &lt;i32 as RemoveRef&gt;::WithoutRef = 3;\n   |                                             ^ expected associated type, found integral variable\n   |\n   = note: expected type `&lt;i32 as RemoveRef&gt;::WithoutRef`\n              found type `{integer}`\n</code></pre>\n\n<p>This fails for the same reason as discussed here: <a href=\"https://stackoverflow.com/a/51026699/7274990\">Mismatch between associated type and type parameter only when impl is marked <code>default</code></a> Assigning <code>T</code> to <code>WithoutRef</code> in combination with <code>default</code> does not constrain <code>WithoutRef</code> to type <code>T</code>.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 491, "favorite_count": 4, "answer_count": 1, "score": 11, "last_activity_date": 1529975416, "creation_date": 1529938944, "question_id": 51026536, "link": "https://stackoverflow.com/questions/51026536/implement-something-similar-to-cs-stdremove-reference-in-rust", "title": "Implement something similar to C++&#39;s `std::remove_reference` in Rust?", "body": "<p>I'd like to have a tool to remove the reference from a type if the type is a reference. Something like this (pseudo code):</p>\n\n<pre><code>remove_ref(i32)      == i32\nremove_ref(&amp;i32)     == i32\nremove_ref(&amp;&amp;i32)    == i32\nremove_ref(&amp;mut i32) == i32\n</code></pre>\n\n<p>C++ has <a href=\"http://www.cplusplus.com/reference/type_traits/remove_reference/\" rel=\"noreferrer\"><code>std::remove_reference</code></a> in the standard library which can do exactly what I want. I tried to implement the same in Rust, but I can't get it working. Right now, the only way to \"output\" types in Rust are associated types on traits (I think). I tried something like this (<a href=\"https://play.rust-lang.org/?gist=1d77c235aaefd325612ff742029bbc3b&amp;version=nightly&amp;mode=debug\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>#![feature(specialization)]\n\ntrait RemoveRef {\n    type WithoutRef;\n}\n\ndefault impl&lt;T&gt; RemoveRef for T {\n    type WithoutRef = T;\n}\n\nimpl&lt;'a, T: RemoveRef&gt; RemoveRef for &amp;'a T {\n    type WithoutRef = T::WithoutRef;\n}\n</code></pre>\n\n<p>And in fact this compiles. Promising! (yes, this doesn't account for mutable references yet). However, everything explodes when I try to use it:</p>\n\n<pre><code>let _: &lt;i32 as RemoveRef&gt;::WithoutRef = 3;\nlet _: &lt;&amp;i32 as RemoveRef&gt;::WithoutRef = 3;\nlet _: &lt;&amp;&amp;i32 as RemoveRef&gt;::WithoutRef = 3;\n</code></pre>\n\n<p>The first line leads to \"overflow evaluating the requirement <code>i32: RemoveRef</code>\". The other two lines produce the error \"the trait bound <code>&amp;i32: RemoveRef</code> is not satisfied\". I'm not sure if I just don't understand this or if specialization is broken. (Related: I got another strange error with very similar code <a href=\"https://stackoverflow.com/questions/51022636/mismatch-between-associated-type-and-type-parameter-only-when-impl-is-marked-de\">here</a>)</p>\n\n<p>I was thinking about other possibilities to implement this: maybe put a type parameter on the trait? Maybe GATs could help here? Are there other features in the language that allow mapping from one type to another type?</p>\n\n<p><strong>Is there any way to implement something like this in Rust?</strong></p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1529936268, "post_id": 51022636, "comment_id": 89043704, "body": "The first example runs in the playground. The second one <i>should</i> fail, since you could write <code>impl Foo for String { type Assoc = i32; }</code>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1529936407, "post_id": 51022636, "comment_id": 89043791, "body": "@trentcl I&#39;m sorry, the first playground link was wrong :( I just fixed it. Now it has the same code as in my question and doesn&#39;t compile. Good point about the second example!"}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 1, "creation_date": 1529940647, "post_id": 51022636, "comment_id": 89046498, "body": "In the <a href=\"https://github.com/rust-lang/rust/issues/37653\" rel=\"nofollow noreferrer\">&#39;default impl&#39; tracking issue</a> it says: &quot;all items in a default impl are (implicitly) default and hence specializable&quot; I guess, this means marking an impl as default also turns associated types into specializable default types - regardless of whether the <code>associated_type_defaults</code> feature is enabled. In this case it makes sense that the first example should fail for the same reason as the second example."}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1529939792, "post_id": 51026699, "comment_id": 89045907, "body": "Oh snap, that&#39;s possible? I would have assumed that the compiler would complain about the second impl. Mh so I guess the feature is even less stable than I thought... Thanks!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1554136036, "last_edit_date": 1554136036, "creation_date": 1529939404, "answer_id": 51026699, "question_id": 51022636, "link": "https://stackoverflow.com/questions/51022636/mismatch-between-associated-type-and-type-parameter-only-when-impl-is-marked-de/51026699#51026699", "title": "Mismatch between associated type and type parameter only when impl is marked `default`", "body": "<p>The <code>Specialization</code> feature is showing no signs of stabilising, mostly because of <a href=\"http://aturon.github.io/blog/2017/07/08/lifetime-dispatch/\" rel=\"nofollow noreferrer\">soundness concerns</a>, so you should expect some problems.</p>\n\n<p>You have this:</p>\n\n<pre><code>#![feature(specialization)]\n\ntrait Foo {\n    type Assoc;\n    fn foo(&amp;self) -&gt; &amp;Self::Assoc;\n}\n\ndefault impl&lt;T&gt; Foo for T {\n    type Assoc = T;\n    fn foo(&amp;self) -&gt; &amp;Self::Assoc {\n        self\n    }\n}\n</code></pre>\n\n<p>But imagine that you added another implementation with its own associated type but without implementing <code>foo</code>. This implementation's <code>foo</code> will be \"inherited\" from the other, less specific, implementation:</p>\n\n<pre><code>impl&lt;T: SomeConstraint&gt; Foo for T {\n    type Assoc = NotT;\n}\n</code></pre>\n\n<p>Then there'd be a problem. Your <code>foo</code> would be returning a <code>T</code> but, whenever T is <code>SomeConstraint</code> there'd be a type mismatch because it should be returning a <code>NotT</code>.</p>\n\n<p><a href=\"https://rust-lang.github.io/rfcs/2532-associated-type-defaults.html\" rel=\"nofollow noreferrer\">RFC 2532 \u2014 associated type defaults</a> mentions a possible solution in its <a href=\"https://rust-lang.github.io/rfcs/2532-associated-type-defaults.html#future-possibilities\" rel=\"nofollow noreferrer\">Future Work section</a>. A hypothetical <code>default</code> block could be used to indicate that associated type(s) and method(s) would need to be specialized together. There's no sign of when such a feature would be considered for inclusion, however.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 397, "favorite_count": 0, "accepted_answer_id": 51026699, "answer_count": 1, "score": 10, "last_activity_date": 1593537937, "creation_date": 1529926817, "last_edit_date": 1547895996, "question_id": 51022636, "link": "https://stackoverflow.com/questions/51022636/mismatch-between-associated-type-and-type-parameter-only-when-impl-is-marked-de", "title": "Mismatch between associated type and type parameter only when impl is marked `default`", "body": "<p>The following code results in an error (<a href=\"https://play.rust-lang.org/?gist=3338a33b7629fa3f2a9f001a492b6c55&amp;version=nightly&amp;mode=debug\" rel=\"noreferrer\">Playground</a>)</p>\n\n<pre><code>#![feature(specialization)]\n\ntrait Foo {\n    type Assoc;\n    fn foo(&amp;self) -&gt; &amp;Self::Assoc;\n}\n\ndefault impl&lt;T&gt; Foo for T {\n    type Assoc = T;\n    fn foo(&amp;self) -&gt; &amp;Self::Assoc {\n        self\n    }\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:20:9\n   |\n20 |         self\n   |         ^^^^ expected associated type, found type parameter\n   |\n   = note: expected type `&amp;&lt;T as Foo&gt;::Assoc`\n              found type `&amp;T`\n</code></pre>\n\n<p>This is strange since <code>&lt;T as Foo&gt;::Assoc</code> <em>is</em> <code>T</code>, so it should work. Stranger even: when I remove the <code>default</code> keyword from the impl, it works (but of course, in my real code, I need to mark the impl as <code>default</code>).</p>\n\n<p>The same error happens when providing default values in the trait definition (<a href=\"https://play.rust-lang.org/?gist=003c73d79ba0165c7b9aa6a74e5b7e57&amp;version=nightly&amp;mode=debug\" rel=\"noreferrer\">Playground</a>): </p>\n\n<pre><code>#![feature(specialization)]\n#![feature(associated_type_defaults)]\n\ntrait Foo {\n    type Assoc = Self;\n    fn foo(&amp;self) -&gt; &amp;Self::Assoc {\n        self\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>What's going on here? Is this a compiler bug? Or -- and that's why I'm asking this question -- does this error make sense because there is something special about specialization that I haven't understood yet? In case this is a bug, <code>mem::transmute</code> is surely safe, riiiight?</p>\n"}, {"tags": ["rust", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1529895639, "creation_date": 1529895639, "answer_id": 51015773, "question_id": 51015503, "link": "https://stackoverflow.com/questions/51015503/why-does-re-borrowing-only-work-on-de-referenced-pointers/51015773#51015773", "title": "Why does re-borrowing only work on de-referenced pointers?", "body": "<p>You are only allowed to have a single mutable reference to a value at a time. When you mutably reborrow as an argument, it's <em>trivial</em> for the compiler to see that you aren't going to be using <code>ref_string</code> at the same time and thus the code is safe. </p>\n\n<p>My mental image is that there's a \"chain of custody\" for the mutability. <code>ref_string</code> is the holder and can temporarily give that up to the temporary created by <code>&amp;mut *ref_string</code>. When that goes out of scope, the mutability is returned to it. It's as if the code were:</p>\n\n<pre><code>{\n    let x = &amp;mut *ref_string;\n    test(x);\n}\n</code></pre>\n\n<p>However, when you try to \"go around\" and get the mutable reference, you are ignoring the chain of custody. The compiler stops you because it cannot <em>trivially</em> see that it is safe. </p>\n\n<hr>\n\n<p>Of note is that <a href=\"https://stackoverflow.com/q/50251487/155423\">non-lexical lifetimes</a> improves the original situation. When the MIR-based borrow checker is enabled, the compiler can see that <code>ref_string</code> is no longer in use by the time the second call to <code>test</code> happens, thus it's safe for the exclusive access to be transferred there.</p>\n"}], "owner": {"reputation": 118, "user_id": 2327498, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c864209aa3465b68aa64506bc91739ac?s=128&d=identicon&r=PG", "display_name": "A0A", "link": "https://stackoverflow.com/users/2327498/a0a"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 0, "accepted_answer_id": 51015773, "answer_count": 1, "score": 1, "last_activity_date": 1529895639, "creation_date": 1529892866, "last_edit_date": 1529894633, "question_id": 51015503, "link": "https://stackoverflow.com/questions/51015503/why-does-re-borrowing-only-work-on-de-referenced-pointers", "title": "Why does re-borrowing only work on de-referenced pointers?", "body": "<p>This question and code are adapted from <a href=\"https://stackoverflow.com/questions/45095523/why-does-creating-a-mutable-reference-to-a-dereferenced-mutable-reference-work\">Why does creating a mutable reference to a dereferenced mutable reference work?</a>. The answers there explained re-borrowing but not the reasons for the conventions around it.</p>\n\n<p>The two calls to <code>test</code> below seem equivalent, why does only the first one work?</p>\n\n<pre><code>fn main() {\n    let mut string = String::new();\n    let ref_string = &amp;mut string;\n\n    // Compiles\n    test(&amp;mut *ref_string);\n\n    // Doesn't compile\n    test(&amp;mut string);\n}\n\nfn test(s: &amp;mut String) {\n    s.push('t');\n}\n</code></pre>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1529853657, "creation_date": 1529853657, "answer_id": 51011270, "question_id": 51011173, "link": "https://stackoverflow.com/questions/51011173/is-there-some-way-to-implement-the-add-trait-for-any-type-bounded-by-a-trait/51011270#51011270", "title": "Is there some way to implement the Add trait for any type bounded by a trait?", "body": "<p>Yes, except you've inexplicably put the trait bound in the wrong spot and changed the function signature to references instead of values. Fixing that makes it work:</p>\n\n<pre><code>impl&lt;T: Length&gt; Add&lt;T&gt; for Millimeters {\n    type Output = Meters;\n\n    fn add(self, other: T) -&gt; Meters {\n        let as_meters = other.to_meters();\n        Meters((self.0 / 1000) + (as_meters.0))\n    }\n}\n</code></pre>\n\n<p>I'd use <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>Into</code></a> and a <code>where</code> clause though:</p>\n\n<pre><code>impl&lt;T&gt; Add&lt;T&gt; for Millimeters\nwhere\n    T: Into&lt;Meters&gt;,\n{\n    type Output = Meters;\n\n    fn add(self, other: T) -&gt; Meters {\n        let as_meters = other.into();\n        Meters((self.0 / 1000) + (as_meters.0))\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 22589, "user_id": 1085573, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/VJ6tk.png?s=128&g=1", "display_name": "Yuushi", "link": "https://stackoverflow.com/users/1085573/yuushi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 51011270, "answer_count": 1, "score": 1, "last_activity_date": 1529853727, "creation_date": 1529852929, "last_edit_date": 1529853727, "question_id": 51011173, "link": "https://stackoverflow.com/questions/51011173/is-there-some-way-to-implement-the-add-trait-for-any-type-bounded-by-a-trait", "title": "Is there some way to implement the Add trait for any type bounded by a trait?", "body": "<p>I'm reading through the <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html\" rel=\"nofollow noreferrer\">\"Advanced Traits\" section of the Rust book</a> where there's an example of adding two types that are not the same:</p>\n\n<pre><code>use std::ops::Add;\n\nstruct Millimeters(u32);\nstruct Meters(u32);\n\nimpl Add&lt;Meters&gt; for Millimeters {\n    type Output = Millimeters;\n\n    fn add(self, other: Meters) -&gt; Millimeters {\n        Millimeters(self.0 + (other.0 * 1000))\n    }\n}\n</code></pre>\n\n<p>Suppose that I had a trait that both <code>Millimeters</code> and <code>Meters</code> implemented which specifies how to turn itself into metres (and assuming <code>Millimeters</code> and <code>Meters</code> implement this):</p>\n\n<pre><code>trait Length {\n    fn to_meters(&amp;self) -&gt; Meters;\n}\n</code></pre>\n\n<p>Is there some way to write a more generic <code>Add</code> trait that looks something like this (which is not valid):</p>\n\n<pre><code>impl Add&lt;T: Length&gt; for Millimeters {\n    type Output = Meters;\n\n    fn add(&amp;self, other: &amp;T) -&gt; Meters {\n        let as_meters = other.to_meters();\n        Meters((self.0 / 1000) + (as_meters.0))\n    }\n} \n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 1, "last_activity_date": 1581350845, "last_edit_date": 1581350845, "creation_date": 1529845817, "answer_id": 51010258, "question_id": 51010139, "link": "https://stackoverflow.com/questions/51010139/cannot-use-methods-from-the-byteorder-crate-on-an-u8-array-no-method-found-for/51010258#51010258", "title": "Cannot use methods from the byteorder crate on an u8 array: no method found for type in the current scope", "body": "<p>Neither <code>[u8]</code> nor <code>[u8; 4]</code> implements <a href=\"https://docs.rs/byteorder/1.1.0/byteorder/trait.ReadBytesExt.html\" rel=\"nofollow noreferrer\"><code>ReadBytesExt</code></a>. As shown <a href=\"https://docs.rs/byteorder/1.1.0/byteorder/index.html\" rel=\"nofollow noreferrer\">in the documentation</a>, you may use <code>std::io::Cursor</code>:</p>\n\n<pre><code>let my_array = [0b00000000,0b01010101,0b00100100,0b11011011];\nlet mut cursor = Cursor::new(my_array);\n\nlet result = cursor.read_u32::&lt;LittleEndian&gt;();\n\nprintln!(\"{:?}\", result);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=176001d6e813a50cbc34adf4b9b1e43d&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Any type which implements <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\"><code>Read</code></a> can be used here, since <code>ReadBytesExt</code> <a href=\"https://docs.rs/byteorder/1.1.0/src/byteorder/io.rs.html#888\" rel=\"nofollow noreferrer\">is implemented as</a>:</p>\n\n<pre><code>impl&lt;R: io::Read + ?Sized&gt; ReadBytesExt for R {}\n</code></pre>\n\n<p>Since <code>&amp;[u8]</code> implements <code>Read</code> you can simplify it to</p>\n\n<pre><code>(&amp;my_array[..]).read_u32::&lt;LittleEndian&gt;();\n</code></pre>\n\n<p>or even use the <code>LittleEndian</code> trait directly:</p>\n\n<pre><code>LittleEndian::read_u32(&amp;my_array);\n</code></pre>\n\n<p>Playgrounds: <a href=\"https://play.rust-lang.org/?gist=0bcd0dea1830e630fe7ba1a6143ece25&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\"><code>(&amp;my_array)</code></a>, <a href=\"https://play.rust-lang.org/?gist=5854c268edc866e4d34f92a3be8de882&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\"><code>LittleEndian</code></a></p>\n\n<hr>\n\n<p>You have some other mistakes in your code:</p>\n\n<ul>\n<li><code>[00000000,01010101,00100100,11011011]</code> will wrap. Use the <a href=\"https://doc.rust-lang.org/beta/rust-by-example/primitives/literals.html\" rel=\"nofollow noreferrer\">binary literal instead</a>: <code>[0b0000_0000,0b0101_0101,0b0010_0100,0b1101_1011]</code></li>\n<li>you should use <code>_</code> to make long numbers more readable</li>\n<li>variables should be in <code>snake_case</code>. Use <code>my_array</code> instead of <code>myArray</code></li>\n<li>You do an unnecessary assignment in the code. Use <code>let my_array = [0b0000...</code></li>\n</ul>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/a/50732452/155423\">You don't need a cursor most of the time</a></li>\n</ul>\n"}], "owner": {"reputation": 177, "user_id": 906766, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/bf4263ee8269304506355e854ecfcbd5?s=128&d=identicon&r=PG", "display_name": "Michael Stone", "link": "https://stackoverflow.com/users/906766/michael-stone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 914, "favorite_count": 1, "accepted_answer_id": 51010258, "answer_count": 1, "score": 0, "last_activity_date": 1581350845, "creation_date": 1529844808, "last_edit_date": 1529846247, "question_id": 51010139, "link": "https://stackoverflow.com/questions/51010139/cannot-use-methods-from-the-byteorder-crate-on-an-u8-array-no-method-found-for", "title": "Cannot use methods from the byteorder crate on an u8 array: no method found for type in the current scope", "body": "<p>I'm trying to use a trait provided by the byteorder crate:</p>\n\n<pre><code>extern crate byteorder;\n\nuse byteorder::{LittleEndian, ReadBytesExt};\n\nfn main() {\n    let mut myArray = [0u8; 4];\n    myArray = [00000000, 01010101, 00100100, 11011011];\n\n    let result = myArray.read_u32::&lt;LittleEndian&gt;();\n\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p>I'm getting an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `read_u32` found for type `[u8; 4]` in the current scope\n  --&gt; src/main.rs:10:26\n   |\n10 |     let result = myArray.read_u32::&lt;LittleEndian&gt;();\n   |                          ^^^^^^^^\n   |\n   = note: the method `read_u32` exists but the following trait bounds were not satisfied:\n           `[u8; 4] : byteorder::ReadBytesExt`\n           `[u8] : byteorder::ReadBytesExt`\n</code></pre>\n\n<p>I've read through the book chapter on traits a couple of times and can't understand why the trait bound isn't satisfied here.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1529817969, "post_id": 51006681, "comment_id": 89007537, "body": "Also relevant: <a href=\"https://stackoverflow.com/questions/37125998/boxx-vs-move-semantics-on-x\">Box&lt;X&gt; vs move semantics on X</a>."}], "owner": {"reputation": 517, "user_id": 7312355, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/57ce505140904fd60f4e0d002b9a842e?s=128&d=identicon&r=PG&f=1", "display_name": "599644", "link": "https://stackoverflow.com/users/7312355/599644"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 2, "closed_date": 1529846548, "answer_count": 0, "score": 3, "last_activity_date": 1529812678, "creation_date": 1529810330, "last_edit_date": 1529812678, "question_id": 51006681, "link": "https://stackoverflow.com/questions/51006681/is-it-possible-to-transfer-ownership-other-than-by-using-a-move-or-box", "closed_reason": "Duplicate", "title": "Is it possible to transfer ownership other than by using a move or Box?", "body": "<p>The Rust Book mainly talks about move mechanics, but if I have a large structure I see that the Rust compiler produces code that copies the contents of the structure when I pass it by value to a function:</p>\n\n<pre><code>struct S2 {\n    a: u64,\n    b: u64,\n    c: u64,\n    d: u64,\n    e: u64,\n    f: u64,\n    g: u64,\n    h: u64,\n    i: u64,\n}\n\nstruct S {\n    a: u64,\n    b: u64,\n    c: u64,\n    d: u64,\n    e: u64,\n    f: u64,\n    g: u64,\n    h: u64,\n    i: u64,\n    s: S2,\n}\n\nfn xxx(xs: S) {\n    println!(\"{:p}\", &amp;xs.s.a);\n}\n\nfn main() {\n    let ms = S {\n        a: 1,\n        b: 1,\n        c: 1,\n        d: 1,\n        e: 1,\n        f: 1,\n        g: 1,\n        h: 1,\n        i: 1,\n        s: S2 {\n            a: 1,\n            b: 1,\n            c: 1,\n            d: 1,\n            e: 1,\n            f: 1,\n            g: 1,\n            h: 1,\n            i: 1,\n        },\n    };\n    println!(\"{:p}\", &amp;ms.s.a);\n    xxx(ms);\n}\n</code></pre>\n\n<p>In the output, I see that Rust didn't optimize the move of <code>ms</code> to the function parameter <code>xs</code> to use a pointer, but rather copied the entire thing. I used <code>opt-level=3</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ./test\n0x7ffeea23a8a8\n0x7ffeea23a818\n</code></pre>\n\n<p>Is this something I should worry about? Is it recommended to use <code>Box</code> for large structs?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529804748, "post_id": 51005930, "comment_id": 89006017, "body": "Your <code>consume</code> function exists in the standard library: <a href=\"https://doc.rust-lang.org/std/mem/fn.drop.html\" rel=\"nofollow noreferrer\"><code>drop</code></a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529810581, "post_id": 51005930, "comment_id": 89006677, "body": "For single-armed <code>match</code> statements, use <code>if let</code>."}], "answers": [{"tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": false, "score": 3, "last_activity_date": 1529804995, "last_edit_date": 1529804995, "creation_date": 1529803849, "answer_id": 51006276, "question_id": 51005930, "link": "https://stackoverflow.com/questions/51005930/why-can-i-directly-match-an-array-of-options-but-not-a-variable-containing-an-ar/51006276#51006276", "title": "Why can I directly match an array of Options but not a variable containing an array of Options?", "body": "<p>It is unexpected that the third version does not compile. The same issue occurs when matching boxed values as described <a href=\"https://stackoverflow.com/a/43743641\">here</a>.</p>\n\n<p>Citing the explanation for the error from the linked answer:</p>\n\n<blockquote>\n  <p>My only guess is that the ownership of the <code>Box</code> is moved to the first\n  param, the param is extracted, then the compiler tries to move it\n  again to the next parameter.</p>\n</blockquote>\n\n<p>Replace \"<code>Box</code>\" with \"array\" and you get an explanation for what is going on when matching an array. One of the solutions presented in the linked answer also works for matching arrays - the use of curly braces to force a complete move of the <code>Box</code>/array into the match expression:</p>\n\n<pre><code>fn consume(_: Box&lt;u64&gt;) {}\nlet array = [Some(Box::new(1)), Some(Box::new(2))];\nmatch {array} {\n    [Some(x), Some(y)] =&gt; {\n        consume(x);\n        consume(y);\n    }\n    _ =&gt; (),\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1529847259, "creation_date": 1529847259, "answer_id": 51010420, "question_id": 51005930, "link": "https://stackoverflow.com/questions/51005930/why-can-i-directly-match-an-array-of-options-but-not-a-variable-containing-an-ar/51010420#51010420", "title": "Why can I directly match an array of Options but not a variable containing an array of Options?", "body": "<p>Here's a reduced version of your code:</p>\n\n<pre><code>struct NonCopy;\n\nfn main() {\n    // OK\n    let tuple = (Some(NonCopy), Some(NonCopy));\n    if let (Some(_x), Some(_y)) = tuple {}\n\n    // OK\n    if let [Some(_x), Some(_y)] = [Some(NonCopy), Some(NonCopy)] {}\n\n    // Fails\n    let array = [Some(NonCopy), Some(NonCopy)];\n    if let [Some(_x), Some(_y)] = array {}\n}\n</code></pre>\n\n<h3>The good news</h3>\n\n<p>This code works as-is when <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">non-lexical lifetimes are enabled</a>.</p>\n\n<h3>The bad news</h3>\n\n<p>Non-lexical lifetimes aren't stable yet.</p>\n\n<h3>The workaround</h3>\n\n<p>Explicitly transfer ownership of the array to the <code>match</code> or <code>if let</code> head expression:</p>\n\n<pre><code>let array = [Some(NonCopy), Some(NonCopy)];\nif let [Some(_x), Some(_y)] = { array } {}\n</code></pre>\n\n<h3>The explanation</h3>\n\n<p>The current implementation of the borrow checker is AST-based while a future implementation will be MIR-based. At a high level, you can think of this as \"working on the code as I typed it\" (AST) and \"working on the logical flow of data in my code\" (MIR). </p>\n\n<p>Certain \"hacks\" have been added to the AST borrow checker, which is why you can successfully use an array literal but not the variable. With the MIR borrow checker, bigger hacks like these will disappear and the borrow checker will also become more precise, allowing more code to compile.</p>\n"}], "owner": {"reputation": 345, "user_id": 9634339, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/960b1ba25c33738e16429fb253e1c048?s=128&d=identicon&r=PG&f=1", "display_name": "xardas", "link": "https://stackoverflow.com/users/9634339/xardas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "accepted_answer_id": 51010420, "answer_count": 2, "score": 3, "last_activity_date": 1529847259, "creation_date": 1529798250, "last_edit_date": 1529810558, "question_id": 51005930, "link": "https://stackoverflow.com/questions/51005930/why-can-i-directly-match-an-array-of-options-but-not-a-variable-containing-an-ar", "title": "Why can I directly match an array of Options but not a variable containing an array of Options?", "body": "<p>The following code compiles:</p>\n\n<pre><code>fn consume(_: Box&lt;u64&gt;) {}\nlet tuple = (Some(Box::new(1)), Some(Box::new(2)));\nmatch tuple {\n    (Some(x), Some(y)) =&gt; {\n        consume(x);\n        consume(y);\n    }\n    _ =&gt; (),\n}\n</code></pre>\n\n<p>The following code compiles:</p>\n\n<pre><code>fn consume(_: Box&lt;u64&gt;) {}\nmatch [Some(Box::new(1)), Some(Box::new(2))] {\n    [Some(x), Some(y)] =&gt; {\n        consume(x);\n        consume(y);\n    }\n    _ =&gt; (),\n}\n</code></pre>\n\n<p>But this code does not compile:</p>\n\n<pre><code>fn consume(_: Box&lt;u64&gt;) {}\nlet array = [Some(Box::new(1)), Some(Box::new(2))];\nmatch array {\n    [Some(x), Some(y)] =&gt; {\n        consume(x);\n        consume(y);\n    }\n    _ =&gt; (),\n}\n</code></pre>\n\n<p>The compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `(array[..] as std::prelude::v1::Some).0`\n --&gt; src/main.rs:5:24\n  |\n5 |         [Some(x), Some(y)] =&gt; {\n  |               -        ^ value used here after move\n  |               |\n  |               value moved here\n  |\n  = note: move occurs because the value has type `std::boxed::Box&lt;u64&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>Why do the first and second version compile, but not the third version?</p>\n"}, {"tags": ["struct", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1529795822, "post_id": 51005645, "comment_id": 89004977, "body": "<a href=\"https://users.rust-lang.org/t/emulating-c-flexible-array-members-in-rust/6262\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1529799250, "post_id": 51005645, "comment_id": 89005466, "body": "I think you could achieve this on nightly with the allocator API and a decent amount of <code>unsafe</code>. But I&#39;m not familiar enough with how it works in C. What if the alignment of the <code>data</code> array is bigger than the size of the header -- are padding bytes counted in the <code>sizeof</code>, or do we just rely on <code>malloc</code> allocating more than necessary to satisfy the maximum possible alignment?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1540888417, "post_id": 51005645, "comment_id": 93018924, "body": "@MatthieuM. Probably my fault because you can&#39;t avoid padding bytes like I said, both sizeof and offsetof must produce the same size for FAM."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1567374818, "post_id": 57749670, "comment_id": 101936809, "body": "no it&#39;s wrong, slice contains their len, FAM doesn&#39;t. There is no equivalent of FAM in Rust ATM."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1567374945, "post_id": 57749670, "comment_id": 101936826, "body": "@Stargateur <code>[T]</code> does not contain the length. You are talking about <code>&amp;[T]</code> which is a fat pointer to a slice: that contains the length. But not the unsized <code>[T]</code> itself."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 13760, "user_id": 10795151, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Eazk7.png?s=128&g=1", "display_name": "S.S. Anne", "link": "https://stackoverflow.com/users/10795151/s-s-anne"}, "edited": false, "score": 3, "creation_date": 1567376829, "post_id": 57749670, "comment_id": 101937080, "body": "@JL2210 A fat pointer is a pointer + some extra data, for example <code>&amp;[T]</code> is a fat pointer, as it contains the address to the first element + the size, and <code>&amp;dyn Trait</code> is a fat pointer as it contains a pointer to the data + a pointer to the vtable."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1567377092, "post_id": 57749670, "comment_id": 101937120, "body": "@LukasKalbertodt but this would not make sense in Rust, <code>[T]</code> need to know its size somehow, if you need unsafe this would not be Rust for me. Say [T] is the equivalent of FAM is wrong for me, at least for now."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1567434586, "post_id": 57749670, "comment_id": 101953522, "body": "Hoi! Could <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1861-extern-types.md#detailed-design\" rel=\"nofollow noreferrer\">this</a> be the correct solution to all of this? At least pointers to structs with an extern type as last field are not fat pointers."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 2, "last_activity_date": 1567373791, "creation_date": 1567373791, "answer_id": 57749670, "question_id": 51005645, "link": "https://stackoverflow.com/questions/51005645/how-to-implement-the-c-flexible-array-member-pattern-in-rust/57749670#57749670", "title": "How to implement the C flexible array member pattern in Rust?", "body": "<p>The Rust equivalent of this struct would use a slice:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct test {\n  key: i32,\n  dataSize: i32,\n  data: [i32],\n}\n</code></pre>\n\n<p>however, these types are not really convenient to use at the moment as there is no safe way to construct them.</p>\n\n<p>A more practical way to do this is to use a generic:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct test&lt;T: ?Sized&gt; {\n  key: i32,\n  dataSize: i32,\n  data: T,\n}\n</code></pre>\n\n<p>and then to make sure that you only use <code>test</code> when <code>T</code> is an array or a slice (which you could only create through coercion).</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/nomicon/exotic-sizes.html#dynamically-sized-types-dsts\" rel=\"nofollow noreferrer\">Dynamically Sized Types (DSTs) on the nomicon</a></li>\n</ul>\n"}], "owner": {"reputation": 2138, "user_id": 600641, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c60af2cd46678a4657058110d6488454?s=128&d=identicon&r=PG", "display_name": "kirugan", "link": "https://stackoverflow.com/users/600641/kirugan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 763, "favorite_count": 1, "answer_count": 1, "score": 11, "last_activity_date": 1567373791, "creation_date": 1529794053, "last_edit_date": 1529808784, "question_id": 51005645, "link": "https://stackoverflow.com/questions/51005645/how-to-implement-the-c-flexible-array-member-pattern-in-rust", "title": "How to implement the C flexible array member pattern in Rust?", "body": "<p>I would like to implement this C code which uses a <a href=\"https://en.wikipedia.org/wiki/Flexible_array_member\" rel=\"noreferrer\"><em>flexible array member</em></a> (sometimes called <a href=\"https://www.geeksforgeeks.org/struct-hack/\" rel=\"noreferrer\">the struct hack</a>) in Rust:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct test {\n  int key;\n  int dataSize;\n  int data[];\n};\n</code></pre>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct test* t = malloc(sizeof(struct test) + sizeOfData)\n</code></pre>\n\n<p>The empty array at the end of structure allows you to allocate your meta fields and data all at once. Unfortunately, I can't figure out how to do such thing in Rust.</p>\n"}, {"tags": ["windows", "rust", "llvm", "cross-compiling", "raspberry-pi3"], "answers": [{"tags": [], "owner": {"reputation": 17887, "user_id": 162273, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/430cb584ada70347d6bdaabdcf67390c?s=128&d=identicon&r=PG", "display_name": "Jason Kleban", "link": "https://stackoverflow.com/users/162273/jason-kleban"}, "is_accepted": true, "score": 0, "last_activity_date": 1534848805, "creation_date": 1534848805, "answer_id": 51947098, "question_id": 51005145, "link": "https://stackoverflow.com/questions/51005145/cross-compiling-baremetal-rust-for-raspberry-pi-3-b-from-windows/51947098#51947098", "title": "Cross-compiling baremetal Rust for Raspberry Pi 3 B from Windows", "body": "<p>I think it's working!  Things I learned:</p>\n\n<ul>\n<li><code>xargo</code> is good</li>\n<li>rpi3 is different enough from rpi2 to cause my problems in tool selection</li>\n<li><code>xargo</code> doesn't care what toolchain rustup defaults to because I'm not asking it to link for me and it does its own toolchain selection</li>\n<li>I needed to target aarch64, not arm.  For this I used the linaro aarch64 mingw32 download, unpacked, added its bin folder to my PATH.  Then the aarch64 tools were easy to adapt from the blog.</li>\n</ul>\n\n<p>For people who want to do this themselves, see <a href=\"https://github.com/JasonKleban/rust-rasp\" rel=\"nofollow noreferrer\">https://github.com/JasonKleban/rust-rasp</a> .  Not so complicated!</p>\n\n<p>I aim to blink the onboard activity led as confirmation that we do really have control, but looks like that will be kinda complicated on the rpi3 (see my readme, if still applicable)</p>\n"}], "owner": {"reputation": 17887, "user_id": 162273, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/430cb584ada70347d6bdaabdcf67390c?s=128&d=identicon&r=PG", "display_name": "Jason Kleban", "link": "https://stackoverflow.com/users/162273/jason-kleban"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 897, "favorite_count": 0, "accepted_answer_id": 51947098, "answer_count": 1, "score": 5, "last_activity_date": 1534848805, "creation_date": 1529788851, "last_edit_date": 1534840566, "question_id": 51005145, "link": "https://stackoverflow.com/questions/51005145/cross-compiling-baremetal-rust-for-raspberry-pi-3-b-from-windows", "title": "Cross-compiling baremetal Rust for Raspberry Pi 3 B from Windows", "body": "<p>I'm <a href=\"https://github.com/JasonKleban/rust-rasp\" rel=\"nofollow noreferrer\">trying to follow</a> <a href=\"https://medium.com/@thiagopnts/raspberry-pi-bare-metal-programming-with-rust-a6f145e84024\" rel=\"nofollow noreferrer\">this blog</a> but on Windows and with the latest Rust.  It seems to me that the correct way of doing things like this is changing very frequently with Rust, so I'm hoping for an up-to-date Windows adaptation.</p>\n\n<h1>What I've tried so far:</h1>\n\n<p>I installed <a href=\"https://developer.arm.com/open-source/gnu-toolchain/gnu-rm/downloads\" rel=\"nofollow noreferrer\">gcc-arm-embedded</a>.</p>\n\n<p>I had unverified partial success manually cross-compiling libcore, but then I switched to use the recommended <code>xargo</code>, the functionality of which (I read) is on its way to being included in Cargo eventually.  While I don't understand any of it very well, I'm hoping to get to the part where I can write/run the code and then maybe I can back into understanding the compilation better.</p>\n\n<p>With <a href=\"https://github.com/japaric/xargo/issues/223\" rel=\"nofollow noreferrer\">japaric's awesome help</a>, I was able to get the \"aarch64\" targeted build working to generate the .o file (<a href=\"https://github.com/JasonKleban/rust-rasp/tree/4fcea09bfdb76b6742e4b534f0d0712fb5c7a517\" rel=\"nofollow noreferrer\">as of this particular commit</a>).</p>\n\n<p>And this part seems to verify:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ file target/aarch64-raspi3-none-elf/release/deps/rust_rasp-ed0c2377e0a7df81.o\ntarget/aarch64-raspi3-none-elf/release/deps/rust_rasp-ed0c2377e0a7df81.o: ELF 64-bit LSB relocatable, ARM aarch64, version 1 (SYSV), not stripped\n</code></pre>\n\n<p>When I try to use the <a href=\"https://developer.arm.com/open-source/gnu-toolchain/gnu-rm/downloads\" rel=\"nofollow noreferrer\">GNU Arm Embedded Toolchain</a> linker, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ arm-none-eabi-gcc -O0 -mfpu=vfp -mfloat-abi=hard -march=armv6zk -mtune=arm1176jzf-s -nostartfiles target/aarch64-raspi3-none-elf/release/deps/rust_rasp-ed0c2377e0a7df81.o -o kernel.elf target/aarch64-raspi3-none-elf/release/deps/rust_rasp-ed0c2377e0a7df81.o: file not recognized: File format not recognized\ncollect2.exe: error: ld returned 1 exit status\n</code></pre>\n\n<p>And #rust IRC chatroom helpfuls told me that rpi3 is aarch64, not arm, so I need to find an aarch64 linker ...</p>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1529775292, "post_id": 51002602, "comment_id": 89000662, "body": "Am I correct in assuming that the order of keys/formatting will be completely discarded by this approach? (At the very least, I expect <code>alpha</code> to be serialized first, regardless of the position it originally occupied) If so, a note might be welcome, as using such a &quot;script&quot; on a committed file could result in large changes."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1529780422, "post_id": 51002602, "comment_id": 89001916, "body": "@MatthieuM. an interesting point! It would normally be relevant to my case of editing a Cargo.toml, which is usually a file committed to source control that is human-edited. In my case, it doesn&#39;t matter since it&#39;s for the playground."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1532420785, "post_id": 51002602, "comment_id": 89956186, "body": "When I try this, I get <code>error: unknown serde variant attribute `flatten</code>, even though I have Serde v1.0.70. It would be nice if you could add the necessary <code>use</code> statements to your answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1532436850, "post_id": 51002602, "comment_id": 89966214, "body": "@PhilippLudwig The crate statements and versions are in the question, but I can copy them if that&#39;s not obvious."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1532527548, "post_id": 51002602, "comment_id": 90010646, "body": "@Shepmaster My bad, I thought that this feature could be used during serialization as well (e.g. to flatten JSON structures). In the end I&#39;ve just simplified my data structure."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1532528652, "post_id": 51002602, "comment_id": 90011443, "body": "@PhilippLudwig yes, <a href=\"https://play.rust-lang.org/?gist=2591d19e15336960c4ffedada9558728&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">that&#39;s exactly what I&#39;m doing</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1532436928, "last_edit_date": 1532436928, "creation_date": 1529767792, "answer_id": 51002602, "question_id": 51002462, "link": "https://stackoverflow.com/questions/51002462/how-can-i-use-serdes-custom-deserialization-to-update-a-subset-of-arbitrary-i/51002602#51002602", "title": "How can I use Serde&#39;s custom (de)serialization to update a subset of arbitrary input?", "body": "<p><a href=\"https://github.com/serde-rs/serde/issues/941#issuecomment-375486935\" rel=\"nofollow noreferrer\">As of Serde 1.0.34</a>, you can use <a href=\"https://serde.rs/attr-flatten.html\" rel=\"nofollow noreferrer\"><code>#[serde(flatten)]</code></a> to capture all the unrecognized keys and values you don't care about to create a \"catch-all\" field:</p>\n\n<pre><code>extern crate serde; // 1.0.66\n#[macro_use]\nextern crate serde_derive; // 1.0.66\nextern crate serde_json; // 1.0.21\n\ntype Other = serde_json::Map&lt;String, serde_json::Value&gt;;\n\n#[derive(Debug, Deserialize, Serialize)]\nstruct WhatICareAbout {\n    alpha: Alpha,\n    #[serde(flatten)]\n    other: Other,\n}\n\n#[derive(Debug, Deserialize, Serialize)]\nstruct Alpha {\n    a: i32,\n    #[serde(flatten)]\n    other: Other,\n}\n</code></pre>\n\n<p>For TOML, you can use a parallel definition of <code>Other</code>:</p>\n\n<pre><code>type Other = std::collections::BTreeMap&lt;String, Value&gt;;\n</code></pre>\n\n<blockquote>\n  <p>Am I correct in assuming that the order of keys/formatting will be completely discarded by this approach? (At the very least, I expect <code>alpha</code> to be serialized first, regardless of the position it originally occupied)</p>\n</blockquote>\n\n<p>Yes, the order of the output keys will be based on a combination of the field order in the struct definition and the type of map you choose. Above, a <code>BTreeMap</code> is used, so the \"other\" keys will be alphabetized, but all come after the specific fields.</p>\n\n<p>You could opt into an <code>IndexMap</code> which would preserve the order of the \"other\" keys, although they'd still come relative to the specific fields you've added:</p>\n\n<pre><code>extern crate indexmap; // 0.4.1 + features = [\"serde-1\"]\n\ntype Other = indexmap::IndexMap&lt;String, serde_json::Value&gt;;\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/49717966/155423\">How to (de)serialize a strongly typed JSON dictionary in Serde?</a></li>\n<li><a href=\"https://stackoverflow.com/q/41042767/155423\">Is it possible to flatten sub-object fields while parsing with serde_json?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44302604/155423\">How to deserialize a subfield of a struct from the original struct&#39;s JSON with Serde?</a></li>\n</ul>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1441, "favorite_count": 0, "accepted_answer_id": 51002602, "answer_count": 1, "score": 2, "last_activity_date": 1532436928, "creation_date": 1529766771, "question_id": 51002462, "link": "https://stackoverflow.com/questions/51002462/how-can-i-use-serdes-custom-deserialization-to-update-a-subset-of-arbitrary-i", "title": "How can I use Serde&#39;s custom (de)serialization to update a subset of arbitrary input?", "body": "<p>I need to update specific fields of an arbitrary input file without touching any keys or values that my program does not know about.</p>\n\n<p>Here is an example input file:</p>\n\n<pre><code>{ \n  \"alpha\": {\n    \"a\": 1,\n    \"z\": 2\n  },\n  \"beta\": \"b\"\n}\n</code></pre>\n\n<p>I'd like to update <code>alpha.a</code> by 100:</p>\n\n<pre><code>{ \n  \"alpha\": {\n    \"a\": 101,\n    \"z\": 2\n  },\n  \"beta\": \"b\"\n}\n</code></pre>\n\n<p>It is possible to do this with types like <a href=\"https://docs.rs/serde_json/1.0.21/serde_json/enum.Value.html\" rel=\"nofollow noreferrer\"><code>serde_json::Value</code></a> and <a href=\"https://docs.rs/toml/0.4.6/toml/value/enum.Value.html\" rel=\"nofollow noreferrer\"><code>toml::value::Value</code></a>, but this code is very cumbersome:</p>\n\n<pre><code>extern crate serde; // 1.0.66\nextern crate serde_json; // 1.0.21\n\nuse serde_json::Value;\n\nfn main() {\n    let input = r#\"{ \n      \"alpha\": {\n        \"a\": 1,\n        \"z\": 2\n      },\n      \"beta\": \"b\"\n    }\"#;\n\n    let mut to_change: Value = serde_json::from_str(input).unwrap();\n    {\n        let obj = to_change.as_object_mut().unwrap();\n        let alpha = obj.get_mut(\"alpha\").unwrap();\n\n        let obj = alpha.as_object_mut().unwrap();\n        let num = {\n            let a = obj.get(\"a\").unwrap();\n\n            let mut num = a.as_i64().unwrap();\n            num += 100;\n            num\n        };\n        obj.insert(\"a\".into(), Value::Number(num.into()));\n    }\n    println!(\"{}\", serde_json::to_string_pretty(&amp;to_change).unwrap());\n}\n</code></pre>\n\n<p>I'd much rather use the clean derived syntax:</p>\n\n<pre><code>extern crate serde; // 1.0.66\n#[macro_use]\nextern crate serde_derive; // 1.0.66\nextern crate serde_json; // 1.0.21\n\n#[derive(Debug, Deserialize, Serialize)]\nstruct WhatICareAbout {\n    alpha: Alpha,\n}\n\n#[derive(Debug, Deserialize, Serialize)]\nstruct Alpha {\n    a: i32,\n}\n\nfn main() {\n    let input = r#\"{ \n          \"alpha\": {\n            \"a\": 1,\n            \"z\": 2\n          },\n          \"beta\": \"b\"\n        }\"#;\n\n    let mut subobject: WhatICareAbout = serde_json::from_str(input).unwrap();\n    subobject.alpha.a += 1;\n    println!(\"{}\", serde_json::to_string_pretty(&amp;subobject).unwrap());\n}\n</code></pre>\n\n<p>This runs, but it strips out any unknown keys:</p>\n\n<pre><code>{\n  \"alpha\": {\n    \"a\": 2\n  }\n}\n</code></pre>\n\n<p>Is there a way I can use the pretty <code>Deserialize</code> and <code>Serialize</code> implementations while still preserving keys and values I don't know about?</p>\n\n<p>An ideal answer would:</p>\n\n<ul>\n<li>Work for most Serde formats \u2014 I'm showing JSON here but my real code is TOML.</li>\n<li>Allow adding, updating, and removing fields.</li>\n</ul>\n"}, {"tags": ["networking", "rust", "network-programming", "udp"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1529763107, "post_id": 51001463, "comment_id": 88997706, "body": "<code>192.0.2.*</code> is a range reserved for examples and documentation. You shouldn&#39;t, and might not be able, to use it."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 0, "creation_date": 1529763716, "post_id": 51001463, "comment_id": 88997868, "body": "<code>0.0.0.0</code> is an unspecified address, so <code>bind</code> may not happen on the network interface where the targeted device is attached. Try to bind with the ip assigned at eno1 interface."}, {"owner": {"reputation": 9, "user_id": 9973504, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Ixb2j2LDQLU/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq3YP5Y4Skou6nTd4z3JlvogKDelGg/mo/photo.jpg?sz=128", "display_name": "Urban Avsec", "link": "https://stackoverflow.com/users/9973504/urban-avsec"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1529766142, "post_id": 51001463, "comment_id": 88998507, "body": "@mcarton I have tried to change the ip to the outside of the documentation range to <code>55.55.0.2</code> and bind to it. Saddly the message still goes through the interface  <code>eno0</code> . @attdona I am aware of that. Thank you. I have tried ipconfig ip of the interface and set it to it, but the message keeps going on the wrong interface. Probably I am missing some important step."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1529769785, "post_id": 51001463, "comment_id": 88999319, "body": "@UrbanAvsec this IP doesn&#39;t belong to any reserved ranged, which means it&#39;s available for use on the internet, and it&#39;s probably already routed on the other interface. You can&#39;t just use any range."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1530972550, "creation_date": 1530972550, "answer_id": 51223985, "question_id": 51001463, "link": "https://stackoverflow.com/questions/51001463/how-do-i-use-udpsocket-to-send-using-a-specific-network-interface/51223985#51223985", "title": "How do I use UdpSocket to send using a specific network interface?", "body": "<p>I have started a DHCP server and I am communication over the IP that is given through DHCP. I have no idea why LLA assigned IP doesn't work when DHCP does, but it works for now.</p>\n"}], "owner": {"reputation": 9, "user_id": 9973504, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Ixb2j2LDQLU/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq3YP5Y4Skou6nTd4z3JlvogKDelGg/mo/photo.jpg?sz=128", "display_name": "Urban Avsec", "link": "https://stackoverflow.com/users/9973504/urban-avsec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 484, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1530972786, "creation_date": 1529759280, "last_edit_date": 1530972786, "question_id": 51001463, "link": "https://stackoverflow.com/questions/51001463/how-do-i-use-udpsocket-to-send-using-a-specific-network-interface", "title": "How do I use UdpSocket to send using a specific network interface?", "body": "<p>I have machine with two Ethernet network interfaces. <em>eno0</em> and <em>eno1</em>. <em>eno0</em> is where the internet is plugged in and <em>eno1</em> has a connected Ethernet device. I got its IP through Link-Local Address method and it's <code>168.254.80.23</code>. I would like to send a packet to port 5000.</p>\n\n<p>I would like to use Rust's <code>UdpSocket</code> to connect to this address and given port and send some packet. One such packet is already correctly described in the variable <code>buf_with_message</code>:</p>\n\n<pre><code>let sock = UdpSocket::bind(\"0.0.0.0:0\"); //Let system assign me an ip and port\nsock.connect((\"168.254.80.23\",5000)); // Connect to device ip and pre-designated port 5000\nsock.send(&amp;buf_with_message).unwrap(); //Send the packet\n</code></pre>\n\n<p>That connection occurs as it should, but the packet is send over <em>eno0</em> instead of <em>eno1</em>. I have no idea how to specify the interface it should use. I have found some answers that in C <code>SO_BINDTODEVICE</code> could be used to do this. </p>\n\n<p>I have also tried assigning an IP to the interface through </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sudo ifconfig eno1 192.0.2.10\n</code></pre>\n\n<p>and then changing the <code>0.0.0.0</code> address in <code>UdpSocket::bind</code> to this new address with no positive result. </p>\n\n<p>I see a potential solution to go straight to raw sockets using the <code>pnet</code> crate but I think that would be overkill.</p>\n\n<p>I am aware that RFC 3927 warns against hosts with multiple interfaces, but I didn't find any options for an alternative without ditching LLA and implementing a DHCP server.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1529760636, "post_id": 51001183, "comment_id": 88997025, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a> and <a href=\"https://stackoverflow.com/q/27221504/155423\">How can you make a safe static singleton in Rust?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51001183/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1529763927, "post_id": 51001183, "comment_id": 88997921, "body": "@Shepmaster I tried to remove all unnecessary things, I hope I didn&#39;t throw the baby with the bathwater."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1529768940, "post_id": 51001183, "comment_id": 88999078, "body": "Thank you for minimizing your code. I took another look and I now think this question is a duplicate of <a href=\"https://stackoverflow.com/q/50740632/3650362\">How do I call a function that requires a &#39;static lifetime with a variable created in main?</a> In your case, since <code>lazy_static</code> won&#39;t work, and you don&#39;t want to use <code>Arc</code> because the value will never be dropped until program termination, <code>Box::leak</code> (mentioned in Shepmaster&#39;s answer) is what you&#39;re looking for."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1529769301, "post_id": 51001183, "comment_id": 88999181, "body": "(Although I suggest using <code>Arc</code> anyway; a little reference counting overhead in exchange for knowing the contents will be dropped when no longer needed is usually a good trade.)"}, {"owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1529773257, "post_id": 51001183, "comment_id": 89000156, "body": "@trentcl I tried to use <code>Box::leak</code> but it didn&#39;t work to me (see question without edit to see how exactly it was implemented). Although I&#39;m going to follow your advice, I&#39;d appreciate if you write an example with <code>Box::leak</code>, especially when there is not answer to mark while I&#39;d like to have one (to keep this question searchable)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1529781614, "post_id": 51001183, "comment_id": 89002180, "body": "Questions that are marked as duplicates are not deleted, so it will remain searchable in any case. But I would have written something a lot like <a href=\"https://github.com/Pzixel/boyan_detector_bot/blob/ed0160070bfabe42a2417383399911ff8057586b/src/main.rs\" rel=\"nofollow noreferrer\">this</a>.  What was the error message you got with that version?"}, {"owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1529782349, "post_id": 51001183, "comment_id": 89002341, "body": "@trentcl well, this is why I see that it could be an interesting answer: it doesn&#39;t compile. Here is an error: <a href=\"https://pastebin.com/VbeFUqW7\" rel=\"nofollow noreferrer\">pastebin.com/VbeFUqW7</a> . If I explicitely do <code>move</code> then <a href=\"https://pastebin.com/HnRj4fDr\" rel=\"nofollow noreferrer\">this error</a> occurs instead."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1529787007, "post_id": 51001183, "comment_id": 89003333, "body": "Hm. Okay, I don&#39;t know why the <code>move</code> version doesn&#39;t work; I would have expected it to. So I can&#39;t answer it. But perhaps if you edit your question to focus on this particular problem -- why it doesn&#39;t work when you&#39;re using an actual <code>&#39;static</code> reference -- you will get some real answers."}], "owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 126, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1529764922, "creation_date": 1529757121, "last_edit_date": 1529764922, "question_id": 51001183, "link": "https://stackoverflow.com/questions/51001183/static-variables-that-depends-on-environment", "title": "Static variables that depends on environment", "body": "<p>I have a struct that should be inited once with some value and then it can be freely referenced (or even shared across threads) without problems. The problem is that I want to use it in a handler of <code>hyper</code> callback. Here is my sample code:</p>\n\n<pre><code>extern crate futures; // 0.1.1\nextern crate hyper; // 0.12\n\nuse std::net::SocketAddr;\nuse hyper::service::service_fn;\nuse hyper::{Body, Request, Response, Server};\nuse futures::prelude::*;\n\nfn main() {\n    let token = std::env::args().next().unwrap();\n    run(&amp;token, \"127.0.0.1:8080\");\n}\n\nfn run(bot_token: &amp;str, listening_address: &amp;str) {\n    let addr: SocketAddr = listening_address.parse().unwrap();\n\n    let server = Server::bind(&amp;addr)\n        .serve(move || service_fn(|x| echo(x, bot_token)));\n}\n\nfn echo(\n    req: Request&lt;Body&gt;,\n    bot_token: &amp;str\n) -&gt; impl Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; + Send {\n    futures::future::ok(Response::new(Body::empty()))\n}\n</code></pre>\n\n<p>The problem here is that <code>hyper</code> require callback to be <code>static</code>:</p>\n\n<pre><code>error[E0621]: explicit lifetime required in the type of `bot_token`\n  --&gt; src\\main.rs:18:10\n   |\n14 | fn run(bot_token: &amp;str, listening_address: &amp;str) {\n   |        --------- consider changing the type of `bot_token` to `&amp;'static str`\n...\n18 |         .serve(move || service_fn(|x| echo(x, bot_token)))\n   |          ^^^^^ lifetime `'static` required\n\nerror[E0621]: explicit lifetime required in the type of `bot_token`\n  --&gt; src\\main.rs:19:10\n   |\n14 | fn run(bot_token: &amp;str, listening_address: &amp;str) {\n   |        --------- consider changing the type of `bot_token` to `&amp;'static str`\n...\n19 |         .map_err(|e| eprintln!(\"server error: {}\", e));\n   |          ^^^^^^^ lifetime `'static` required\n</code></pre>\n\n<p>If I follow this advice and change <code>telegram_client</code> lifetime to <code>static</code> I get an error that closure may outlive <code>run</code> function.</p>\n\n<p>How should I avoid it? I found that I may make it working in following manner:</p>\n\n<pre><code>fn run(bot_token: &amp;str, listening_address: &amp;str) {\n    let addr: SocketAddr = listening_address.parse().unwrap();\n\n    let bot_token = Arc::new(bot_token.to_string());\n    let server = Server::bind(&amp;addr)\n        .serve(move || {\n            let bot_token = bot_token.clone();\n            service_fn(move |x| echo(x, bot_token.clone()))\n        });\n}\n\nfn echo(\n    req: Request&lt;Body&gt;,\n    bot_token: Arc&lt;String&gt;\n) -&gt; impl Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; + Send {\n    futures::future::ok(Response::new(Body::empty()))\n}\n</code></pre>\n\n<p>But it looks weird, as well as reference counting for a situation when we know that we won't drop the reference until program exit.</p>\n"}, {"tags": ["rust", "command-line-arguments", "clap"], "comments": [{"owner": {"reputation": 111, "user_id": 3775132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/451a29d6be258b8c07306b49e8ba713b?s=128&d=identicon&r=PG&f=1", "display_name": "DanSnow", "link": "https://stackoverflow.com/users/3775132/dansnow"}, "edited": false, "score": 1, "creation_date": 1529750201, "post_id": 51000302, "comment_id": 88994494, "body": "Why not just use <code>unwrap_or</code>?"}, {"owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "reply_to_user": {"reputation": 111, "user_id": 3775132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/451a29d6be258b8c07306b49e8ba713b?s=128&d=identicon&r=PG&f=1", "display_name": "DanSnow", "link": "https://stackoverflow.com/users/3775132/dansnow"}, "edited": false, "score": 0, "creation_date": 1529751335, "post_id": 51000302, "comment_id": 88994792, "body": "I can, but then I need to use it every time I access value and I need to keep consistent about default value itself (If I ever decide to change it I&#39;ll need to change it in many places)."}], "answers": [{"comments": [{"owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "edited": false, "score": 0, "creation_date": 1529841563, "post_id": 51000926, "comment_id": 89012048, "body": "Oh! I shouldn&#39;t use <code>+</code> sign. <code>default_value(&quot;2.0&quot;)</code> worked for string."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1529755048, "creation_date": 1529755048, "answer_id": 51000926, "question_id": 51000302, "link": "https://stackoverflow.com/questions/51000302/how-to-specify-a-default-value-for-an-argument-for-clap-app-macro/51000926#51000926", "title": "How to specify a default value for an argument for clap_app! macro?", "body": "<p>This is currently impossible with number, <a href=\"https://github.com/kbknapp/clap-rs/issues/1035\" rel=\"nofollow noreferrer\">https://github.com/kbknapp/clap-rs/issues/1035</a>.</p>\n\n<p>But it's should be:</p>\n\n<pre><code>(@arg seconds: -u +takes_value default_value[1.0] \"Update time\")\n</code></pre>\n"}], "owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1187, "favorite_count": 0, "accepted_answer_id": 51000926, "answer_count": 1, "score": 1, "last_activity_date": 1529755048, "creation_date": 1529749962, "question_id": 51000302, "link": "https://stackoverflow.com/questions/51000302/how-to-specify-a-default-value-for-an-argument-for-clap-app-macro", "title": "How to specify a default value for an argument for clap_app! macro?", "body": "<p>I want to use <code>clap_app!</code> macro to define an argument which should have a default value. Unfortunately, there is nothing in the docs, and my naive attempt didn't work:</p>\n\n<pre><code>#[macro_use]\nextern crate clap;\n\nfn main() {\n    let matches = clap_app!(myapp =&gt;\n        (@arg seconds: -u +takes_value +default_value(\"1.0\") \"Update time\")\n    ).get_matches();\n    println!(\"{}\", matches.value_of(\"seconds\").unwrap())\n}\n</code></pre>\n\n<p>How can I specify a default value for an argument within <code>clap_app!</code> macro?</p>\n"}, {"tags": ["rust", "rust-2018"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1529750083, "post_id": 51000304, "comment_id": 88994456, "body": "Sorry, I think, I didn&#39;t point it out enough. Why I should use the cryptic syntax <code>r#type</code> instead of just use <code>ty</code> or something else? Added this to the question"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1529750388, "post_id": 51000304, "comment_id": 88994531, "body": "@Tim: well, I guess sometimes you might just <b>need</b> that specific word for extra clarity :). This could also pave a way for a more liberal keyword policy for the language."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 0, "last_activity_date": 1529750085, "last_edit_date": 1529750085, "creation_date": 1529749990, "answer_id": 51000304, "question_id": 51000263, "link": "https://stackoverflow.com/questions/51000263/what-are-the-use-cases-of-raw-identifiers-besides-new-keywords/51000304#51000304", "title": "What are the use cases of raw identifiers besides new keywords?", "body": "<p>Ineed with <code>raw_identifiers</code> you can use <code>type</code> and other keywords as a variable/struct/etc. identifiers:</p>\n\n<pre><code>#![feature(rust_2018_preview)]\n#![feature(raw_identifiers)]\n\nstruct r#let {} // just warnings: struct is never used: `let` and type `let` should have a camel case name such as `Let`\n\nfn main() {\n    let r#type = 0; // just warning: unused variable: `type`\n}\n</code></pre>\n\n<p>It doesn't work with every keyword, though:</p>\n\n<pre><code>let r#super = 0; // error: `r#super` is not currently supported.\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1529751283, "creation_date": 1529751283, "answer_id": 51000462, "question_id": 51000263, "link": "https://stackoverflow.com/questions/51000263/what-are-the-use-cases-of-raw-identifiers-besides-new-keywords/51000462#51000462", "title": "What are the use cases of raw identifiers besides new keywords?", "body": "<blockquote>\n  <p>Why I should use a cryptic syntax like <code>r#type</code> instead of <code>ty</code> or something else?</p>\n</blockquote>\n\n<p><strong>Sometimes the names of fields are used outside of your Rust program.</strong> For example, when serializing data with Serde, the field name is used in the output (e.g. JSON). So if you need JSON output with this:</p>\n\n<pre><code>\"type\": 27,\n</code></pre>\n\n<p>... then raw identifiers can help you:</p>\n\n<pre><code>#[derive(Serialize)]\nstruct Foo {\n    r#type: u32,\n}\n</code></pre>\n\n<p>On the other hand... Serde already has a way to achieve what you want: <a href=\"https://serde.rs/field-attrs.html#serderename--name\" rel=\"noreferrer\">the <code>#[serde(rename = \"name\")]</code> attribute</a>. Reserved Rust keywords are one of the reasons why this attribute was introduced.</p>\n\n<pre><code>#[derive(Serialize)]\nstruct Foo {\n    #[serde(rename = \"type\")]\n    ty: u32,\n}\n</code></pre>\n\n<hr>\n\n<p>Similarly, the <code>Debug</code> output also uses the field name in its output. So if you want the output <code>Foo { type: 27 }</code>, you can use raw identifiers:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Foo {\n    r#type: u32,\n}\n</code></pre>\n\n<p>On the other hand... if the exact <code>Debug</code> output is that important to you, you can simply implement it yourself:</p>\n\n<pre><code>impl fmt::Debug for Foo {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        f.debug_struct(\"Foo\")\n            .field(\"type\", &amp;self.ty)\n            .finish()\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>So in practice, I don't see why one would use raw identifier for this purpose, since you have to use the strange <code>r#</code> syntax everywhere you use that name. It's probably easier to just fix this particular problem in another way. </p>\n\n<p><strong>So, as far as I see it, the \"using API from another edition\" is the only real use case for raw identifiers.</strong> Having such a syntax \"just for the case\" is a nice thing, though.</p>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 466, "favorite_count": 1, "accepted_answer_id": 51000462, "answer_count": 2, "score": 4, "last_activity_date": 1529751283, "creation_date": 1529749763, "last_edit_date": 1529750131, "question_id": 51000263, "link": "https://stackoverflow.com/questions/51000263/what-are-the-use-cases-of-raw-identifiers-besides-new-keywords", "title": "What are the use cases of raw identifiers besides new keywords?", "body": "<p>As in Rust 2018, we now have <a href=\"https://rust-lang-nursery.github.io/edition-guide/2018/transitioning/raw-identifiers.html\" rel=\"nofollow noreferrer\">raw identifiers</a>: </p>\n\n<blockquote>\n  <p>This feature is useful for a few reasons, but the primary motivation was inter-edition situations. For example, <code>try</code> is not a keyword in the 2015 edition, but is in the 2018 edition. So if you have a library that is written in Rust 2015 and has a <code>try</code> function, to call it in Rust 2018, you'll need to use the raw identifier.</p>\n</blockquote>\n\n<p>Are there any other advantages than stated above? Are there plans to make keywords contextual, e.g. you can use <code>type</code> as identifier for variables? Why I should use a cryptic syntax like <code>r#type</code> instead of <code>ty</code> or something else?</p>\n"}, {"tags": ["rust", "rust-2018"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1540823013, "post_id": 50999749, "comment_id": 92994736, "body": "<i>complicated macros depend on several other macros</i> \u2014 As of Rust 1.30, macros can <a href=\"https://stackoverflow.com/q/53017178/155423\">import the helper macros they need</a>, preventing this root problem."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 7, "last_activity_date": 1540822801, "last_edit_date": 1540822801, "creation_date": 1529748582, "answer_id": 51000106, "question_id": 50999749, "link": "https://stackoverflow.com/questions/50999749/how-to-import-all-macros-derives-and-procedural-macros-in-rust-2018-without-us/51000106#51000106", "title": "How to import all macros, derives, and procedural macros in Rust 2018 without using extern crate?", "body": "<p>I don't see any way of importing <em>only</em> all the macros, but if you are fine with importing all the essential objects a crate provides, you should usually get all the macros by writing:</p>\n\n<pre><code>use the_crate_with_macros::*;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>use the_crate_with_macros::prelude::*; // if available\n</code></pre>\n\n<p>This also works in Rust 2015 starting in version 1.30.</p>\n"}, {"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 4, "last_activity_date": 1540822854, "creation_date": 1540822854, "answer_id": 53047520, "question_id": 50999749, "link": "https://stackoverflow.com/questions/50999749/how-to-import-all-macros-derives-and-procedural-macros-in-rust-2018-without-us/53047520#53047520", "title": "How to import all macros, derives, and procedural macros in Rust 2018 without using extern crate?", "body": "<p>As you already stated you can import a single macro via </p>\n\n<pre><code>use foo::mac1;\n</code></pre>\n\n<p>To import multiple macros at once you can either use <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/module-system/nested-imports-with-use.html\" rel=\"nofollow noreferrer\">nested imports</a></p>\n\n<pre><code>use foo::{mac1, mac2, mac3};\n</code></pre>\n\n<p>or rely on the crate author that they will let you import it via a single glob, e.g. </p>\n\n<pre><code>use foo::macros::*;\n</code></pre>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1262, "favorite_count": 1, "answer_count": 2, "score": 8, "last_activity_date": 1540822932, "creation_date": 1529745692, "last_edit_date": 1540822932, "question_id": 50999749, "link": "https://stackoverflow.com/questions/50999749/how-to-import-all-macros-derives-and-procedural-macros-in-rust-2018-without-us", "title": "How to import all macros, derives, and procedural macros in Rust 2018 without using extern crate?", "body": "<p>I'm experimenting with <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/index.html\" rel=\"noreferrer\">Rust Edition 2018</a>. In Rust 2015 you use</p>\n\n<pre><code>#[macro_use]\nextern crate log;\n</code></pre>\n\n<p>for importing macros. In Rust 2018 <code>extern crate</code> is probably unidiomatic. Is there a way, to import all macros from the crate without <code>extern crate</code>? For simple macros, <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/macros/macro-changes.html\" rel=\"noreferrer\">importing it in the modules</a> is fine, but complicated macros depend on several other macros, which is unhandy.</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-2018"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 7, "last_activity_date": 1544173265, "last_edit_date": 1544173265, "creation_date": 1529745159, "answer_id": 50999681, "question_id": 50999616, "link": "https://stackoverflow.com/questions/50999616/how-to-idiomatically-alias-a-crate-in-rust-2018/50999681#50999681", "title": "How to idiomatically alias a crate in Rust 2018?", "body": "<p>The idiomatic solution is to rename the crate in <code>Cargo.toml</code>. See <a href=\"https://stackoverflow.com/a/51508848/2408867\">the answer by Tim Diekmann</a> for more information about that. </p>\n\n<p>But if you don't want to use <code>Cargo.toml</code> renaming for some reason, you can still use the old syntax. It's soft-deprecated, but not removed. So this still works:</p>\n\n<pre><code>extern crate foo_sys as foo;\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1941b5de4e99863fdaa3f08a4b64be1e\" rel=\"nofollow noreferrer\">Playground example</a>)</p>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 26, "last_activity_date": 1598795049, "last_edit_date": 1598795049, "creation_date": 1532474265, "answer_id": 51508848, "question_id": 50999616, "link": "https://stackoverflow.com/questions/50999616/how-to-idiomatically-alias-a-crate-in-rust-2018/51508848#51508848", "title": "How to idiomatically alias a crate in Rust 2018?", "body": "<p>This can be achieved with the <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html?highlight=rename,depende#renaming-dependencies-in-cargotoml\" rel=\"nofollow noreferrer\"><em>rename-dependency</em></a> Cargo feature, <a href=\"https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html#cargo-features\" rel=\"nofollow noreferrer\">available in Rust 1.31</a>. With this feature, it's possible to provide a package attribute to the dependencies:</p>\n<blockquote>\n<p>The rename-dependency feature allows you to import a dependency with a different name from the source. This can be useful in a few scenarios:</p>\n<ul>\n<li>Depending on crates with the same name from different registries.</li>\n<li>Depending on multiple versions of a crate.</li>\n<li><strong>Avoid needing <code>extern crate foo as bar</code> in Rust source.</strong></li>\n</ul>\n</blockquote>\n<p>Instead of writing</p>\n<pre><code>[dependencies]\nfoo_sys = &quot;0.2&quot;\n</code></pre>\n<p>the <code>package</code> key can be added to the dependency in <code>Cargo.toml</code>:</p>\n<pre><code>[dependencies]\nfoo = { package = &quot;foo_sys&quot;, version = &quot;0.2&quot; }\n</code></pre>\n<p><strong>WARNING</strong>: <a href=\"https://github.com/rust-lang/rust/security/advisories/GHSA-phjm-8x66-qw4r\" rel=\"nofollow noreferrer\">Cargo prior to Rust 1.26.0 may download the wrong dependency</a> when using this feature!</p>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4239, "favorite_count": 2, "accepted_answer_id": 51508848, "answer_count": 2, "score": 14, "last_activity_date": 1598795049, "creation_date": 1529744617, "last_edit_date": 1544743558, "question_id": 50999616, "link": "https://stackoverflow.com/questions/50999616/how-to-idiomatically-alias-a-crate-in-rust-2018", "title": "How to idiomatically alias a crate in Rust 2018?", "body": "<p>I have a crate <code>foo_sys</code>. In Rust 2015 I used <code>extern crate foo_sys as foo</code> for convenience, but in Rust 2018 <code>extern crate</code> isn't needed anymore and I don't want to use it only for aliasing. When dropping <code>extern crate</code>, I get</p>\n\n<blockquote>\n  <p>error<a href=\"https://doc.rust-lang.org/error-index.html#E0463\" rel=\"noreferrer\">[E0463]</a>: can't find crate for <code>foo</code></p>\n</blockquote>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1529739013, "post_id": 50998962, "comment_id": 88991964, "body": "Maybe this should go into bug issue of rocket repository ?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1529739396, "post_id": 50998962, "comment_id": 88992049, "body": "Like for exemple, <a href=\"https://github.com/SergioBenitez/Rocket/issues/671\" rel=\"nofollow noreferrer\">github.com/SergioBenitez/Rocket/issues/671</a>"}, {"owner": {"reputation": 946, "user_id": 1950242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ae7359d0432aaa0dbb7a521b728e8fb?s=128&d=identicon&r=PG&f=1", "display_name": "azwar_akbar", "link": "https://stackoverflow.com/users/1950242/azwar-akbar"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1529743029, "post_id": 50998962, "comment_id": 88992836, "body": "Thank you, it was fixed. Sorry for reposting this."}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 3, "last_activity_date": 1529741606, "last_edit_date": 1529741606, "creation_date": 1529740971, "answer_id": 50999231, "question_id": 50998962, "link": "https://stackoverflow.com/questions/50998962/rocket-framework-sample-does-not-compile/50999231#50999231", "title": "Rocket Framework sample does not compile", "body": "<p>Your issue is <a href=\"https://github.com/SergioBenitez/Rocket/issues/671#issuecomment-399640910\" rel=\"nofollow noreferrer\">fixed in v0.3.14</a>.</p>\n\n<p>Update your <code>Cargo.toml</code> to <code>\"0.3.14\"</code>. Then update your crates with <code>cargo update</code> or specify the packages directly:</p>\n\n<pre><code>cargo update -p rocket_codegen\ncargo update -p rocket\n</code></pre>\n"}], "owner": {"reputation": 946, "user_id": 1950242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ae7359d0432aaa0dbb7a521b728e8fb?s=128&d=identicon&r=PG&f=1", "display_name": "azwar_akbar", "link": "https://stackoverflow.com/users/1950242/azwar-akbar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 0, "accepted_answer_id": 50999231, "answer_count": 1, "score": 0, "last_activity_date": 1547955365, "creation_date": 1529738764, "last_edit_date": 1547955365, "question_id": 50998962, "link": "https://stackoverflow.com/questions/50998962/rocket-framework-sample-does-not-compile", "title": "Rocket Framework sample does not compile", "body": "<p>I tried to install Rust nightly and compile Rocket's hello_world sample project. I got this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no associated item named `Lifetime`\n\nerror[E0599]: no associated item named `Lifetime` found for type `syntax::ast::GenericParam` in the current scope\n  --&gt; /Users/azwar/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket_codegen-0.3.13/src/decorators/derive_form.rs:30:25\n   |\n30 |                         GenericParam::Lifetime(ref def) =&gt; Some(def),\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated item not found in `syntax::ast::GenericParam`\n</code></pre>\n\n<p>I searched this error, but there are no thread or article that explain how to fix that error.</p>\n\n<p>These are my dependencies:</p>\n\n<pre><code>[dependencies]\nrocket = \"0.3.13\"\nrocket_codegen = \"0.3.13\"\n</code></pre>\n\n<p>I'm using Rust <code>rust version 1.28.0-nightly (cbc4c8380 2018-06-22)</code></p>\n"}, {"tags": ["regex", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1546740023, "last_edit_date": 1546740023, "creation_date": 1529723969, "answer_id": 50997655, "question_id": 50997309, "link": "https://stackoverflow.com/questions/50997309/how-can-i-convert-the-captured-pattern-in-a-regex-replace-to-uppercase/50997655#50997655", "title": "How can I convert the captured pattern in a regex replace to uppercase?", "body": "<p><a href=\"https://docs.rs/regex/1.1.0/regex/struct.Regex.html#method.replace\" rel=\"nofollow noreferrer\"><code>Regex::replace</code></a> has the signature</p>\n\n<pre><code>pub fn replace&lt;'t, R: Replacer&gt;(&amp;self, text: &amp;'t str, rep: R) -&gt; Cow&lt;'t, str&gt;\n</code></pre>\n\n<p><a href=\"https://docs.rs/regex/1.1.0/regex/trait.Replacer.html\" rel=\"nofollow noreferrer\"><code>Replacer</code></a> is implemented by:</p>\n\n<ul>\n<li><code>&amp;'a str</code></li>\n<li><code>ReplacerRef&lt;'a, R&gt; where R: Replacer</code></li>\n<li><code>F where F: FnMut(&amp;Captures) -&gt; T, T: AsRef&lt;str&gt;</code></li>\n<li><code>NoExpand&lt;'t&gt;</code></li>\n</ul>\n\n<p>There is no implementation for <code>String</code>, which is the direct cause of your error message. You could \"fix\" the error by converting your <code>String</code> into a string slice:</p>\n\n<pre><code>replace_all(&amp;input, &amp;*\"$1:\".to_uppercase()\n</code></pre>\n\n<p>Since the uppercase version is the same as the lowercase version, nothing will usefully change.</p>\n\n<p>However, the implementation of <code>Replacer</code> by a closure <em>is</em> useful:</p>\n\n<pre><code>let result = regex_path_without_dot.replace_all(&amp;input, |captures: &amp;regex::Captures| {\n    captures[1].to_uppercase() + \":\"\n});\n</code></pre>\n\n<hr>\n\n<blockquote>\n<pre><code>replace_all(&amp;input, \"$1:\".to_uppercase())\n</code></pre>\n</blockquote>\n\n<p>This shows a fundamental error in understanding how this functionality works or in function precedence. This is the same as saying:</p>\n\n<pre><code>let x = \"$1:\".to_uppercase();\nreplace_all(&amp;input, x)\n</code></pre>\n\n<p>Or, equivalently, since <code>1</code> is the uppercase <code>1</code> and <code>$</code> is the uppercase <code>$</code>:</p>\n\n<pre><code>let x = String::from(\"$1:\");\nreplace_all(&amp;input, x)\n</code></pre>\n\n<p>Calling a function like <code>to_uppercase</code> isn't magically deferred until \"some later point\".</p>\n"}], "owner": {"reputation": 917, "user_id": 3014263, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rFh51.jpg?s=128&g=1", "display_name": "AbhiNickz", "link": "https://stackoverflow.com/users/3014263/abhinickz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 564, "favorite_count": 0, "accepted_answer_id": 50997655, "answer_count": 1, "score": 3, "last_activity_date": 1546740023, "creation_date": 1529718880, "last_edit_date": 1529723342, "question_id": 50997309, "link": "https://stackoverflow.com/questions/50997309/how-can-i-convert-the-captured-pattern-in-a-regex-replace-to-uppercase", "title": "How can I convert the captured pattern in a regex replace to uppercase?", "body": "<p>I want to replace <code>/test/test1</code> with <code>TEST1:</code>. This is what I started with:</p>\n\n<pre><code>extern crate regex; // 1.0.1\n\nuse regex::Regex;\n\nfn main() {\n    let regex_path_without_dot = Regex::new(r#\"/test/(\\w+)/\"#).unwrap();\n\n    let input = \"/test/test1/test2/\";\n\n    // Results in \"test1:test2/\"\n    let result = regex_path_without_dot.replace_all(input, \"$1:\");\n}\n</code></pre>\n\n<p>I have tried using </p>\n\n<pre><code>let result = regex_path_without_dot.replace_all(&amp;input, \"$1:\".to_uppercase());\n</code></pre>\n\n<p>but I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `for&lt;'r, 's&gt; std::string::String: std::ops::FnMut&lt;(&amp;'r regex::Captures&lt;'s&gt;,)&gt;` is not satisfied\n  --&gt; src/main.rs:10:41\n   |\n10 |     let result = regex_path_without_dot.replace_all(&amp;input, \"$1:\".to_uppercase());\n   |                                         ^^^^^^^^^^^ the trait `for&lt;'r, 's&gt; std::ops::FnMut&lt;(&amp;'r regex::Captures&lt;'s&gt;,)&gt;` is not implemented for `std::string::String`\n   |\n   = note: required because of the requirements on the impl of `regex::Replacer` for `std::string::String`\n</code></pre>\n\n<p>How do I implement this required trait? Is there a simple way to do this?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1529714259, "creation_date": 1529714259, "answer_id": 50997013, "question_id": 50996631, "link": "https://stackoverflow.com/questions/50996631/is-there-any-way-i-can-allow-a-generic-function-to-use-specialized-functions/50997013#50997013", "title": "Is there any way I can allow a generic function to use specialized functions?", "body": "<p>Note that this has nothing to do with the programming / Rust concept of <em>specialization</em>, which usually means having a <em>more specific</em> implementation of a trait in certain cases for performance or when multiple implementations may be valid.</p>\n\n<hr>\n\n<p>Go back and re-read <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, specifically the the chapter <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-02-traits.html\" rel=\"nofollow noreferrer\">\"Traits: Defining Shared Behavior\"</a>.</p>\n\n<p>Common functionality is expressed through traits; introduce one and use it and the <em>compiler</em> asserts that any type you use can do what you need. There's no need to rely on the extremely fallible \"I am confident\".</p>\n\n<pre><code>trait Value {\n    fn value() -&gt; i32;\n}\n\nimpl Value for Magic&lt;A&gt; {\n    fn value() -&gt; i32 {\n        5\n    }\n}\n\nimpl Value for Magic&lt;B&gt; {\n    fn value() -&gt; i32 {\n        10\n    }\n}\n\nimpl&lt;T&gt; Magic&lt;T&gt;\nwhere\n    Self: Value,\n{\n    fn extra() -&gt; i32 {\n        Magic::&lt;T&gt;::value() + 5\n    }\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9816780"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 784, "favorite_count": 0, "accepted_answer_id": 50997013, "answer_count": 1, "score": 0, "last_activity_date": 1529714259, "creation_date": 1529709789, "last_edit_date": 1529713844, "question_id": 50996631, "link": "https://stackoverflow.com/questions/50996631/is-there-any-way-i-can-allow-a-generic-function-to-use-specialized-functions", "title": "Is there any way I can allow a generic function to use specialized functions?", "body": "<p>I have the following code:</p>\n\n<pre><code>use std::marker::PhantomData;\n\nstruct Magic&lt;T&gt; {\n    phantom: PhantomData&lt;T&gt;,\n}\n\nstruct A;\nstruct B;\n\nimpl Magic&lt;A&gt; {\n    fn value() -&gt; i32 {\n        5\n    }\n}\n\nimpl Magic&lt;B&gt; {\n    fn value() -&gt; i32 {\n        10\n    }\n}\n\nimpl&lt;T&gt; Magic&lt;T&gt; {\n    fn extra() -&gt; i32 {\n        Magic::&lt;T&gt;::value() + 5\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>It fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no function or associated item named `value` found for type `Magic&lt;T&gt;` in the current scope\n  --&gt; src/main.rs:25:9\n   |\n3  | struct Magic&lt;T&gt; {\n   | --------------- function or associated item `value` not found for this\n...\n25 |         Magic::&lt;T&gt;::value() + 5\n   |         ^^^^^^^^^^^^^^^^^ function or associated item not found in `Magic&lt;T&gt;`\n</code></pre>\n\n<p>This makes sense because <code>T</code> isn't necessarily <code>A</code> or <code>B</code>. However, when I call this function, I am confident that it will always be either <code>A</code> or <code>B</code>. </p>\n\n<p>Knowing this, is there any way I can allow this generic function to use these specialized functions?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 78, "user_id": 6324903, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e81197322e2383bf41dbd84e20e7de03?s=128&d=identicon&r=PG&f=1", "display_name": "Reirep", "link": "https://stackoverflow.com/users/6324903/reirep"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529701647, "post_id": 50995241, "comment_id": 88985674, "body": "@Shepmaster is it better now ? I really want to make this the right way :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529702189, "post_id": 50995241, "comment_id": 88985813, "body": "Additionally, why are there so many enum variants; are all of them needed? Are the calls to various functions needed? Is <code>TOKEN</code> used? And so on..."}, {"owner": {"reputation": 78, "user_id": 6324903, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e81197322e2383bf41dbd84e20e7de03?s=128&d=identicon&r=PG&f=1", "display_name": "Reirep", "link": "https://stackoverflow.com/users/6324903/reirep"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529702504, "post_id": 50995241, "comment_id": 88985908, "body": "Now it compile, i will simplify it more. You&#39;re right, it&#39;s still bloated."}, {"owner": {"reputation": 78, "user_id": 6324903, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e81197322e2383bf41dbd84e20e7de03?s=128&d=identicon&r=PG&f=1", "display_name": "Reirep", "link": "https://stackoverflow.com/users/6324903/reirep"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529704343, "post_id": 50995241, "comment_id": 88986452, "body": "Just found a solution, I will continue to simplify this code later and post the solution as soon as I find out exactly why my &quot;solution&quot; works."}], "answers": [{"comments": [{"owner": {"reputation": 78, "user_id": 6324903, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e81197322e2383bf41dbd84e20e7de03?s=128&d=identicon&r=PG&f=1", "display_name": "Reirep", "link": "https://stackoverflow.com/users/6324903/reirep"}, "edited": false, "score": 0, "creation_date": 1529705081, "post_id": 50996026, "comment_id": 88986603, "body": "Thanks a lot, It seems that I still have a lot to learn in rust. Great response , with a lot of details; cannot have dreamed of better :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1529704367, "creation_date": 1529704367, "answer_id": 50996026, "question_id": 50995241, "link": "https://stackoverflow.com/questions/50995241/variable-does-not-live-long-enough-when-returning-a-result-containing-a-refere/50996026#50996026", "title": "&quot;Variable does not live long enough&quot; when returning a Result containing a reference but it does live long enough", "body": "<p>Your problem can be reduced to this:</p>\n\n<pre><code>struct Reader;\nstruct Data;\nstruct Errors&lt;'a&gt;(&amp;'a str);\n\nfn handle_array(stream: &amp;mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n    for _ in 0..0 {\n        handle_request(&amp;mut stream)?;\n    }\n\n    unimplemented!();\n}\n\nfn handle_request(_stream: &amp;mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n    unimplemented!()\n}\n\nfn main() {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `stream` does not live long enough\n  --&gt; src/main.rs:7:29\n   |\n7  |         handle_request(&amp;mut stream)?;\n   |                             ^^^^^^ borrowed value does not live long enough\n...\n11 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 5:1...\n  --&gt; src/main.rs:5:1\n   |\n5  | / fn handle_array(stream: &amp;mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n6  | |     for _ in 0..0 {\n7  | |         handle_request(&amp;mut stream)?;\n8  | |     }\n9  | |\n10 | |     unimplemented!();\n11 | | }\n   | |_^\n</code></pre>\n\n<p>In the body of <code>handle_array</code>, <code>stream</code> is of type <code>&amp;mut Reader</code>. However, when calling <code>handle_request</code>, you <em>take another reference to it</em>, creating a <code>&amp;mut &amp;mut Reader</code>.</p>\n\n<p>Adding some explicit lifetimes to the code (for educational purposes, this doesn't compile), the code would look kind of like this:</p>\n\n<pre><code>fn handle_array&lt;'stream&gt;(stream: &amp;'stream mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n    let tmp: &amp;'tmp mut &amp;'stream mut Reader = &amp;mut stream;\n    if let Err(x) = handle_request(tmp)\n</code></pre>\n\n<p><code>handle_request</code> requires a <code>&amp;mut Reader</code>, so the compiler inserts some code to align these two types for you. The compiler has to be conservative about how it performs this conversion, so it picks the shorter lifetime:</p>\n\n<pre><code>fn handle_array&lt;'stream&gt;(stream: &amp;'stream mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n    let tmp: &amp;'tmp mut &amp;'stream mut Reader = &amp;mut stream;\n    let tmp2: &amp;'tmp mut Reader = tmp;\n    if let Err(x) = handle_request(tmp2)\n</code></pre>\n\n<p>The next aspect of the problem is that <em>lifetime elision</em> has kicked in for both functions. Their expanded forms look like:</p>\n\n<pre><code>fn handle_array&lt;'stream&gt;(stream: &amp;'stream mut Reader) -&gt; Result&lt;Data, Errors&lt;'stream&gt;&gt;\n\nfn handle_request&lt;'_stream&gt;(_stream: &amp;_stream mut Reader) -&gt; Result&lt;Data, Errors&lt;'_stream&gt;&gt;\n</code></pre>\n\n<p>This means that the lifetime of the returned <code>Errors</code> is tied to the lifetime of the argument, but in your case, the argument to <code>handle_request</code> has the shorter <code>'tmp</code> lifetime, <em>not</em> the lifetime of <code>'stream</code>. This shows why you get the compiler error: You are trying to return an <code>Errors</code> that can only live <em>inside the function</em> (the lifetime of the variable <code>stream</code> itself), but you are trying to return a reference that needs to live longer.</p>\n\n<p>We can solve this by only passing <code>stream</code> to <code>handle_request</code>:</p>\n\n<pre><code>handle_request(stream)?;\n</code></pre>\n\n<p>Unfortunately, this only changes the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*stream` as mutable more than once at a time\n  --&gt; src/main.rs:9:40\n   |\n9  |         if let Err(x) = handle_request(stream) {\n   |                                        ^^^^^^ mutable borrow starts here in previous iteration of loop\n...\n15 | }\n   | - mutable borrow ends here\n</code></pre>\n\n<p>This part is <em>much</em> harder to explain. See:</p>\n\n<ul>\n<li>\"Problem Case #3\" of the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md\" rel=\"nofollow noreferrer\">Non-Lexical Lifetimes RFC (RFC 2094)</a></li>\n<li><a href=\"https://stackoverflow.com/q/31281155/155423\">Cannot borrow `x` as mutable more than once at a time</a></li>\n<li><a href=\"https://stackoverflow.com/q/38043377/155423\">Cannot borrow node as mutable more than once while implementing a binary search tree</a></li>\n</ul>\n\n<p>This is a really rough edge of Rust's right now, but it's getting closer and closer to being fixed! Right now, however, you have two main choices:</p>\n\n<h3>Call the function twice</h3>\n\n<p>This probably won't work because you can't read from the stream twice, but in other cases it might be useful:</p>\n\n<pre><code>fn handle_array(stream: &amp;mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n    let mut array = vec![];\n    for _ in 0..0 {\n        if handle_request(stream).is_err() {\n            return handle_request(stream);\n        }\n        if let Ok(r) = handle_request(stream) {\n            array.push(r);\n        };\n    }\n\n    unimplemented!();\n}\n</code></pre>\n\n<h3>Remove the references</h3>\n\n<p>Give up on trying to have references in this case <em>for now</em>.</p>\n\n<pre><code>struct Errors(String);\n\nfn handle_array(stream: &amp;mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n    let mut array = vec![];\n    for _ in 0..0 {\n        array.push(handle_request(stream)?);\n    }\n\n    unimplemented!();\n}\n</code></pre>\n\n<p>Which I'd write using iterators for efficiency:</p>\n\n<pre><code>fn handle_array(stream: &amp;mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n    let array = (0..0)\n        .map(|_| handle_request(stream))\n        .collect::&lt;Result&lt;Vec&lt;_&gt;, _&gt;&gt;()?;\n\n    unimplemented!();\n}\n</code></pre>\n\n<h3>The future?</h3>\n\n<p>With the <em>unstable</em> NLL feature and the <em>experimental</em> \"Polonius\" implementation, this code works:</p>\n\n<pre><code>struct Errors&lt;'a&gt;(&amp;'a str);\n\nfn handle_array(stream: &amp;mut Reader) -&gt; Result&lt;Data, Errors&gt; {\n    let mut array = vec![];\n    for _ in (0..0) {\n        array.push(handle_request(stream)?);\n    }\n\n    unimplemented!();\n}\n</code></pre>\n\n<p>It will just be a while before this is generally available...</p>\n"}], "owner": {"reputation": 78, "user_id": 6324903, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e81197322e2383bf41dbd84e20e7de03?s=128&d=identicon&r=PG&f=1", "display_name": "Reirep", "link": "https://stackoverflow.com/users/6324903/reirep"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 298, "favorite_count": 0, "accepted_answer_id": 50996026, "answer_count": 1, "score": 2, "last_activity_date": 1529704631, "creation_date": 1529699706, "last_edit_date": 1529704631, "question_id": 50995241, "link": "https://stackoverflow.com/questions/50995241/variable-does-not-live-long-enough-when-returning-a-result-containing-a-refere", "title": "&quot;Variable does not live long enough&quot; when returning a Result containing a reference but it does live long enough", "body": "<p>I'm implementing a small utility and the compiler is telling me that a variable (a <code>TcpStream</code>) does not live long enough and is advising me to find a way to make it live exactly as long as it is currently living.</p>\n\n<h1>Error message</h1>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `stream` does not live long enough\n  --&gt; src/main.rs:47:35\n   |\n47 |         match handle_request(&amp;mut stream){\n   |                                   ^^^^^^ borrowed value does not live long enough\n...\n54 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 43:1...\n  --&gt; src/main.rs:43:1\n   |\n43 | / fn handle_array(stream: &amp;mut BufReader&lt;TcpStream&gt;) -&gt; Result&lt;Data,Errors&gt;\n44 | | {\n45 | |     let mut array: Vec&lt;Data&gt; = Vec::with_capacity(50);//arbitrary size, picked differently in the complete program\n46 | |     for _x in 0..50 {\n...  |\n53 | |     Ok(Data::Array(array))\n54 | | }\n   | |_^\n</code></pre>\n\n<h1>Code</h1>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a82bf136f9dce9fc829dc9694417e3d5&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\" title=\"The rust playground version with the exact problem\">Rust playground snippet with the exact problem</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\nuse std::io::BufReader;\nuse std::io::Read;\nuse std::net::TcpStream;\n\nstatic TOKEN: &amp;[u8; 2] = b\"\\r\\n\";\n\nfn main() {}\n\n#[derive(Debug, Clone)]\npub enum Data {\n    String(Vec&lt;u8&gt;),\n    Error(Vec&lt;u8&gt;),\n    Integer(i64),\n    Binary(Vec&lt;u8&gt;),\n    Array(Vec&lt;Data&gt;),\n    Dictionary(HashMap&lt;String, Data&gt;),\n}\n\n#[derive(Debug, Clone)]\npub enum Errors&lt;'a&gt; {\n    CommandError(&amp;'a str),\n    EndOfConnection,\n    NotImplemented,\n}\n\npub fn handle_request(stream: &amp;mut BufReader&lt;TcpStream&gt;) -&gt; Result&lt;Data, Errors&gt; {\n    //TODO handle the empty stream\n    let mut buff: [u8; 1] = *b\"0\";\n    stream.read_exact(&amp;mut buff); //TODO: handle error here\n    match &amp;buff {\n        /* part skipped, not relevant */\n        b\"*\" =&gt; handle_array(stream),\n        &amp;[_] =&gt; Err(Errors::CommandError(\"Bad request\")),\n    }\n}\n\n/*part skipped, not relevant  */\n\nfn handle_array(stream: &amp;mut BufReader&lt;TcpStream&gt;) -&gt; Result&lt;Data, Errors&gt; {\n    let mut array: Vec&lt;Data&gt; = Vec::with_capacity(50); //arbitrary size, picked differently in the complete program\n    for _x in 0..50 {\n        match handle_request(&amp;mut stream) {\n            Ok(x) =&gt; array.push(x.clone()),\n            Err(x) =&gt; return Err(x.clone()),\n        }\n    }\n\n    Ok(Data::Array(array))\n}\n</code></pre>\n\n<p>I'm really stuck on this one.</p>\n\n<p>It seems that I can't use the value of the Err. If I replace</p>\n\n<pre><code>match handle_request(&amp;mut stream){\n    Ok(x) =&gt; array.push(x.clone()),\n    Err(x) =&gt; return Err(x.clone()),\n}\n</code></pre>\n\n<p>with</p>\n\n<pre><code>match handle_request(&amp;mut stream){\n    Ok(x) =&gt; array.push(x.clone()),\n    Err(_) =&gt; return Err(Errors::NotImplemented),\n}\n</code></pre>\n\n<p>the problem is solved, but I don't know why. </p>\n"}, {"tags": ["winapi", "console", "rust", "ffi"], "comments": [{"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529694668, "post_id": 50993911, "comment_id": 88983094, "body": "I have read that, but I see that unwrap should be called on the same line when CString is created. I will take a look."}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529696671, "post_id": 50993911, "comment_id": 88983895, "body": "Okay, I have bound it to a local variable. This does not seem to work. The pointer has an value withs is <code>&quot;0x1c57fa2c0a0&quot;</code>. Also, the cstring is not <code>ERR</code>. I don&#39;t see characters in the console but a colored cel for each character.  The links you send are not applying to my situation. I can explain why my question is not duplicate:   1: I am not trying to convert the cstring back.  2: the pointer is  not null  3: this is not the case, I have fixed the code and it still results in an error.  4: Also the last link does not apply to my problem, unfortunately."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529697944, "post_id": 50993911, "comment_id": 88984360, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/25197315/155423\">How to convert Rust strings to UTF-16?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50993911/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529698028, "post_id": 50993911, "comment_id": 88984400, "body": "TL;DR the duplicate: A Rust string is UTF-8. Windows expects UTF-16."}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529702289, "post_id": 50993911, "comment_id": 88985851, "body": "Thanks for the solution, this could be the problem but there is no diffrence in the output. This is how I convert u8 array to String is this right? <code>let utf8 = str::from_utf8(buf).unwrap();     let utf16: Vec&lt;u16&gt; = utf8.encode_utf16().collect();     let utf_string = String::from_utf16(&amp;utf16).unwrap();</code>"}], "answers": [{"comments": [{"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "edited": false, "score": 0, "creation_date": 1529737237, "post_id": 50996568, "comment_id": 88991537, "body": "Thanks that could be the solution. The discription of &#39;WriteConsoleOutputAttribute&#39; is: Copies a number of character attributes to consecutive cells of a console screen buffer, beginning at a specified location.&#39; I didn&#39;t see the word &#39;attribute&#39; I will give it a try."}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "edited": false, "score": 0, "creation_date": 1529742979, "post_id": 50996568, "comment_id": 88992826, "body": "It works now tanks, I use the function <code>WriteConsoleOutputCharacterA</code>."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1529709192, "creation_date": 1529709192, "answer_id": 50996568, "question_id": 50993911, "link": "https://stackoverflow.com/questions/50993911/writing-a-str-to-the-console-using-winapi-goes-wrong-when-using-cstring/50996568#50996568", "title": "Writing a &amp;str to the console using winapi goes wrong when using CString", "body": "<blockquote>\n  <p>I want to write a <code>&amp;str</code> to the console using <code>WriteConsoleOutputAttribute</code></p>\n</blockquote>\n\n<p>That's not what that function does. <code>WriteConsoleOutputAttribute</code> sets <em>character attributes</em>: things like background color, foreground color, underline. <a href=\"https://docs.microsoft.com/en-us/windows/console/console-screen-buffers#span-idwin32characterattributesspanspan-idwin32characterattributesspancharacter-attributes\" rel=\"nofollow noreferrer\">This page</a> has a (more) complete list.</p>\n\n<p>To write text to the console, use <code>WriteConsoleOutputCharacter</code> after converting it to UTF-16.</p>\n"}], "owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 0, "accepted_answer_id": 50996568, "answer_count": 1, "score": 0, "last_activity_date": 1529709192, "creation_date": 1529692726, "last_edit_date": 1529702779, "question_id": 50993911, "link": "https://stackoverflow.com/questions/50993911/writing-a-str-to-the-console-using-winapi-goes-wrong-when-using-cstring", "title": "Writing a &amp;str to the console using winapi goes wrong when using CString", "body": "<p>I want to write a <code>&amp;str</code> to the console using <a href=\"https://docs.microsoft.com/en-us/windows/console/writeconsoleoutputattribute\" rel=\"nofollow noreferrer\"><code>WriteConsoleOutputAttribute</code></a> from <a href=\"https://crates.io/crates/winapi\" rel=\"nofollow noreferrer\">the winapi crate</a>. I only have an u8 array which will be passed from the <code>std::io::Write</code> implementation of a struct to my winapi code.</p>\n\n<p>The following does not work correctly as I see colored cells instead of text.</p>\n\n<pre><code>use std::ffi::CString;\nuse std::str;\nuse winapi::um::wincon::{\n    GetConsoleScreenBufferInfo, WriteConsoleOutputAttribute, CONSOLE_SCREEN_BUFFER_INFO, COORD,\n};\nuse winapi::um::winnt::HANDLE;\n\npub fn write_char_buffer(handle: HANDLE, buf: &amp;[u8]) {\n    // get buffer info\n    let csbi = get_console_screen_buffer_info();\n\n    // get string from u8[] and parse it to an c_str\n    let data = str::from_utf8(buf).unwrap();\n    let c_str = CString::new(data).unwrap();\n    let ptr: *const u16 = (c_str.as_ptr() as *const u16);\n\n    // get current position\n    let current_pos = COORD {\n        X: csbi.dwCursorPosition.X,\n        Y: csbi.dwCursorPosition.Y,\n    };\n\n    let mut cells_written: u32 = 0;\n\n    // write to console\n    unsafe {\n        WriteConsoleOutputAttribute(\n            handle,\n            ptr,\n            data.len() as u32,\n            current_pos,\n            &amp;mut cells_written,\n        );\n    }\n}\n\npub fn get_console_screen_buffer_info() -&gt; CONSOLE_SCREEN_BUFFER_INFO {\n    let output_handle = get_output_handle();\n    let mut csbi = CONSOLE_SCREEN_BUFFER_INFO::empty();\n    let success;\n\n    unsafe { success = GetConsoleScreenBufferInfo(output_handle, &amp;mut csbi) }\n\n    if success == 0 {\n        panic!(\"Cannot get console screen buffer info\");\n    }\n\n    csbi\n}\n</code></pre>\n\n<p>I think that it is going wrong with the <code>CString</code> and the pointer. See this <a href=\"https://play.rust-lang.org/?gist=4c71216a8e24ecf86ff39beeca013848&amp;version=undefined&amp;mode=undefined\" rel=\"nofollow noreferrer\">link</a> for the code. </p>\n\n<p><strong><a href=\"https://play.rust-lang.org/?gist=b15c1ca663f7bfaaa552370829b1b00e&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Update</a></strong></p>\n\n<p>Rust strings are utf8 while winapi strings are utf16. So I convert the utf8 array to utf16 String but the same output is shown, just collored cells in the console without text:</p>\n\n<pre><code>let utf8 = str::from_utf8(buf).unwrap();\nlet utf16: Vec&lt;u16&gt; = utf8.encode_utf16().collect();\nlet utf_string = String::from_utf16(&amp;utf16).unwrap();\nlet c_str = CString::new(utf_string).unwrap();\n</code></pre>\n"}, {"tags": ["types", "macros", "rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1529678761, "post_id": 50990082, "comment_id": 88975522, "body": "In this case doing <code>let x = (read_u8!(r) as Result&lt;u8&gt;)?;</code> works, but i have no idea if that&#39;s recommended."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1529678863, "post_id": 50990082, "comment_id": 88975582, "body": "<a href=\"https://play.rust-lang.org/?gist=537ee276a05983132521ad2789b4171b&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">The fact it&#39;s in a macro doesn&#39;t seem related.</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": true, "score": 4, "last_activity_date": 1529693390, "last_edit_date": 1529693390, "creation_date": 1529678755, "answer_id": 50990480, "question_id": 50990082, "link": "https://stackoverflow.com/questions/50990082/how-to-type-annotate-the-return-value-of-a-macro/50990480#50990480", "title": "How to type annotate the return value of a macro?", "body": "<p>You can explicitly indicate the block's return type with an inner variable declaration:</p>\n\n<pre><code>macro_rules! read_u8 {\n    ($r:expr) =&gt; {{\n        let mut buf = [0u8; 1];\n        $r.read_exact(&amp;mut buf)?;\n        let ret: Result&lt;u8&gt; = Ok(buf[0]);\n        ret\n    }};\n}\n</code></pre>\n\n<p>Or by casting:</p>\n\n<pre><code>macro_rules! read_u8 {\n    ($r:expr) =&gt; {{\n        let mut buf = [0; 1];\n        $r.read_exact(&amp;mut buf)?;\n        Ok(buf[0])\n    } as Result&lt;u8&gt;};\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 659, "favorite_count": 0, "accepted_answer_id": 50990480, "answer_count": 1, "score": 5, "last_activity_date": 1529697216, "creation_date": 1529677409, "last_edit_date": 1529697216, "question_id": 50990082, "link": "https://stackoverflow.com/questions/50990082/how-to-type-annotate-the-return-value-of-a-macro", "title": "How to type annotate the return value of a macro?", "body": "<p>Please have a look at this slightly contrived example:</p>\n\n<pre><code>use std::io::{Read, Result};\n\nmacro_rules! read_u8 {\n    ($r:expr) =&gt; {{\n        let mut buf = [0; 1];\n        $r.read_exact(&amp;mut buf)?;\n        Ok(buf[0])\n    }};\n}\n\nfn t&lt;R: Read&gt;(r: &amp;mut R) -&gt; Result&lt;u8&gt; {\n    let x = read_u8!(r)?;\n    Ok(x)\n}\n\nfn main() {\n    use std::io::Cursor;\n    let mut x: Cursor&lt;Vec&lt;u8&gt;&gt; = Cursor::new(vec![1, 2, 3]);\n\n    match t(&amp;mut x) {\n        _ =&gt; println!(\"Done\"),\n    }\n}\n</code></pre>\n\n<p>If you try to <a href=\"https://play.rust-lang.org/?gist=53fb0e2a89acad3a4d4e6ebdf53243d9&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">run this example</a>, you get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:12:13\n   |\n12 |     let x = read_u8!(r)?;\n   |             ^^^^^^^^^^^^ cannot infer type for `_`\n</code></pre>\n\n<p>How do I annotate the macro or the call site to get it to figure out I want to return the <code>Result</code> that is in scope?</p>\n"}, {"tags": ["iterator", "rust", "b-tree"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 2, "creation_date": 1529677517, "post_id": 50988420, "comment_id": 88974783, "body": "I think you need to make a wrapper type that adds an <code>Ord</code> overload that matches what you want. Sorting by <code>x</code> then <code>y</code> means sorting by the tuple <code>(x, y)</code>."}], "owner": {"reputation": 2114, "user_id": 3698894, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/p6iFK.jpg?s=128&g=1", "display_name": "Journeycorner", "link": "https://stackoverflow.com/users/3698894/journeycorner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 546, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1529672099, "creation_date": 1529672099, "question_id": 50988420, "link": "https://stackoverflow.com/questions/50988420/generate-a-sorted-map-in-rust", "title": "Generate a sorted map in Rust", "body": "<p>I am looking for a way to generate a sorted map, having the keys sorted by multiple values. </p>\n\n<p>Something like this: </p>\n\n<pre><code>let mut f = File::open(\"storing_data_like_a_pro.csv\")?;\nlet mut buffer = String::new();\nf.read_to_string(&amp;mut buffer)?;\nlet sorted_cache_map: BTreeMap&lt;String, FancyParsedData&gt; = buffer.lines()\n   .map(|line| FancyParsedData::new(line)\n   .map(|data| (data.key, data))\n   // .sortBy(|key, value| value.foo, ASCENDING)\n   // .thenSortBy(|key, value| value.bar, DESCENDING)...\n   .collect();\n</code></pre>\n\n<p>When I know the key I would get a snappy response. If I would search like one or multiple values, I want them to be ordered (useful for pagination).</p>\n"}, {"tags": ["syntax", "rust", "keyword"], "answers": [{"comments": [{"owner": {"reputation": 5760, "user_id": 1863564, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/XU4XS.png?s=128&g=1", "display_name": "Fund Monica&#39;s Lawsuit", "link": "https://stackoverflow.com/users/1863564/fund-monicas-lawsuit"}, "edited": false, "score": 1, "creation_date": 1550942293, "post_id": 50987296, "comment_id": 96461279, "body": "Are there any cases where traits shouldn&#39;t gain the <code>dyn</code>?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 5760, "user_id": 1863564, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/XU4XS.png?s=128&g=1", "display_name": "Fund Monica&#39;s Lawsuit", "link": "https://stackoverflow.com/users/1863564/fund-monicas-lawsuit"}, "edited": false, "score": 1, "creation_date": 1551001445, "post_id": 50987296, "comment_id": 96473358, "body": "@NicHartley only if they are not used as trait objects; otherwise, no."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 46, "last_activity_date": 1529668131, "creation_date": 1529668131, "answer_id": 50987296, "question_id": 50987084, "link": "https://stackoverflow.com/questions/50987084/why-was-the-dyn-syntax-introduced/50987296#50987296", "title": "Why was the dyn syntax introduced?", "body": "<p>This helps differentiate between traits/trait objects and structs; <code>&amp;Foo</code>, <code>Box&lt;Foo&gt;</code> and <code>impl Bar for Foo</code> were ambiguous, because in all of them <code>Foo</code> could have been a trait or a struct.</p>\n\n<p>With the addition of <code>dyn</code> this is no longer ambiguous, as traits are distinguished by the <code>dyn</code> keyword:</p>\n\n<pre><code>// trait objects (new dyn syntax)\n&amp;Foo     =&gt; &amp;dyn Foo\n&amp;mut Foo =&gt; &amp;mut dyn Foo\nBox&lt;Foo&gt; =&gt; Box&lt;dyn Foo&gt;\n\n// structs (no change)\n&amp;Bar\n&amp;mut Bar\nBox&lt;Bar&gt;\n</code></pre>\n"}], "owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8274, "favorite_count": 4, "closed_date": 1529668509, "answer_count": 1, "score": 27, "last_activity_date": 1529668526, "creation_date": 1529667424, "last_edit_date": 1529668526, "question_id": 50987084, "link": "https://stackoverflow.com/questions/50987084/why-was-the-dyn-syntax-introduced", "closed_reason": "Duplicate", "title": "Why was the dyn syntax introduced?", "body": "<p>In <a href=\"https://blog.rust-lang.org/2018/06/21/Rust-1.27.html\" rel=\"noreferrer\">Rust 1.27.0</a> a new syntax is introduced - the <code>dyn</code> keyword was added.</p>\n\n<pre><code>  // old =&gt; new\n  Box&lt;Foo&gt; =&gt; Box&lt;dyn Foo&gt;\n  &amp;Foo =&gt; &amp;dyn Foo\n  &amp;mut Foo =&gt; &amp;mut dyn Foo\n</code></pre>\n\n<p>What does it actually do and why was it added?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "edited": false, "score": 0, "creation_date": 1529667467, "post_id": 50986964, "comment_id": 88968717, "body": "Does this still give random access though? Wouldn&#39;t I need to <code>elements.into_iter().collect()</code> to get random access (which at that point I also have the length)?"}, {"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "edited": false, "score": 0, "creation_date": 1529667633, "post_id": 50986964, "comment_id": 88968809, "body": "That&#39;ll do it. Thanks!"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1529667910, "last_edit_date": 1529667910, "creation_date": 1529666938, "answer_id": 50986964, "question_id": 50986865, "link": "https://stackoverflow.com/questions/50986865/what-is-the-most-general-trait-i-can-use-to-allow-for-accessing-the-middle-eleme/50986964#50986964", "title": "What is the most general trait I can use to allow for accessing the middle element of a collection?", "body": "<p>You want <a href=\"https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html\" rel=\"nofollow noreferrer\"><code>ExactSizeIterator</code></a> with <code>IntoIterator</code>:</p>\n\n<pre><code>fn get_middle&lt;T, U&gt;(elements: U) -&gt; Option&lt;T&gt;\nwhere\n    U: IntoIterator&lt;Item = T&gt;,\n    U::IntoIter: ExactSizeIterator,\n{\n    let mut it = elements.into_iter();\n    let len = it.len();\n\n    it.nth(len / 2)\n}\n\nfn main() {\n    assert_eq!(get_middle(vec![1, 2, 3]), Some(2));\n    assert_eq!(get_middle(0..3), Some(1));\n}\n</code></pre>\n\n<p>Note that the <code>nth</code> is implemented as a random access if the source of the iterator supports it (for example, a slice or a range).</p>\n"}], "owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 50986964, "answer_count": 1, "score": 3, "last_activity_date": 1529693762, "creation_date": 1529666580, "last_edit_date": 1529693762, "question_id": 50986865, "link": "https://stackoverflow.com/questions/50986865/what-is-the-most-general-trait-i-can-use-to-allow-for-accessing-the-middle-eleme", "title": "What is the most general trait I can use to allow for accessing the middle element of a collection?", "body": "<p>I have a helper function that finds the middle element in a vector:</p>\n\n<pre><code>fn get_middle&lt;T&gt;(elements: Vec&lt;T&gt;) -&gt; T {\n    elements[elements.len() / 2]\n}\n</code></pre>\n\n<p>This allows us to use our helper like so:</p>\n\n<pre><code>get_middle(vec![1, 2, 3])\n</code></pre>\n\n<p>There are other structs which are also indexable and have a length. We've really narrowed the usefulness of this helper by only working with <code>Vec&lt;T&gt;</code>. For example, <code>Range</code>s can't be passed in. Nor can custom datatypes that behave like a vector.</p>\n\n<p>What is the most general trait I can use to constrain <code>elements</code> such that it allows for things like:</p>\n\n<pre><code>get_middle(vec![1, 2, 3])\n// as well as...\nget_middle(0..3)\n</code></pre>\n\n<p>I recall reading that ranges can be cast to slices, but that doesn't seem to be the case. Changing the type to <code>&amp;[T]</code> gives an error, and attempting to follow its suggestion by casting with <code>&lt;&amp;[T]&gt;::from(0..3)</code> doesn't seem to work. Looking at the docs for <code>Range</code> and <code>Vec</code>, it seems like the <code>Index</code> trait is half of what I want, but there doesn't seem to be a trait for <code>len()</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5397, "user_id": 1178806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f0734a3d7563e5504433dbef483472?s=128&d=identicon&r=PG", "display_name": "Vlad Frolov", "link": "https://stackoverflow.com/users/1178806/vlad-frolov"}, "edited": false, "score": 0, "creation_date": 1529685617, "post_id": 50988630, "comment_id": 88979232, "body": "Thank you for the suggestion! It is unfortunate, that to make the API look nicer I have to go from mildly tricky <code>mem::*</code> calls to <code>unsafe</code> implementation :("}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5397, "user_id": 1178806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f0734a3d7563e5504433dbef483472?s=128&d=identicon&r=PG", "display_name": "Vlad Frolov", "link": "https://stackoverflow.com/users/1178806/vlad-frolov"}, "edited": false, "score": 1, "creation_date": 1529691930, "post_id": 50988630, "comment_id": 88981968, "body": "Yes, it&#39;s ugly. I&#39;d have hoped the <code>drop</code> in <code>new_right_node = right_node;</code> would be optimized away when <code>new_right_node</code> is initialized to <code>None</code>."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1529694820, "last_edit_date": 1529694820, "creation_date": 1529672807, "answer_id": 50988630, "question_id": 50985651, "link": "https://stackoverflow.com/questions/50985651/how-to-hint-that-a-fnonce-closure-will-be-executed-exactly-once-to-avoid-a-capt/50988630#50988630", "title": "How to hint that a FnOnce closure will be executed exactly once to avoid a &quot;capture of possibly uninitialized variable&quot; warning?", "body": "<p>You can use <code>unsafe</code> since you know the value will always be initialized. Two <code>unsafe</code> functions come into play: <a href=\"https://doc.rust-lang.org/std/mem/fn.uninitialized.html\" rel=\"nofollow noreferrer\"><code>mem::uninitialized</code></a>, which disables the \"possibly uninitialized\" error, and <a href=\"https://doc.rust-lang.org/std/ptr/fn.write.html\" rel=\"nofollow noreferrer\"><code>ptr::write</code></a>, which lets you write to <code>new_right_node</code> without dropping the previous (uninitialized) value.</p>\n\n<pre><code>unsafe {\n    let mut new_right_node = std::mem::uninitialized();\n    orig_node.right.replace_with(|node| {\n        let (left_node, right_node) = split_binary(node, value);\n        std::ptr::write(&amp;mut new_right_node, right_node);\n        left_node\n    });\n}\n</code></pre>\n\n<p>I believe this is safe in the absence of panics because <code>new_right_node</code> is always initialized and <code>right_node</code> is moved into it without either one being dropped. However, to make it panic safe, you must also guarantee there's no way to observe <code>new_right_node</code> in its uninitialized state if <code>split_binary</code> panics.</p>\n"}], "owner": {"reputation": 5397, "user_id": 1178806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f0734a3d7563e5504433dbef483472?s=128&d=identicon&r=PG", "display_name": "Vlad Frolov", "link": "https://stackoverflow.com/users/1178806/vlad-frolov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1529694820, "creation_date": 1529662206, "last_edit_date": 1529694662, "question_id": 50985651, "link": "https://stackoverflow.com/questions/50985651/how-to-hint-that-a-fnonce-closure-will-be-executed-exactly-once-to-avoid-a-capt", "title": "How to hint that a FnOnce closure will be executed exactly once to avoid a &quot;capture of possibly uninitialized variable&quot; warning?", "body": "<p>I am trying to implement and apply <a href=\"https://github.com/rust-lang/rfcs/pull/2296#issuecomment-398723548\" rel=\"nofollow noreferrer\">an optimized <code>replace_with</code> helper for <code>Option</code></a>. I have implemented it like this:</p>\n\n<pre><code>trait OptionExt&lt;T&gt; {\n    #[inline]\n    fn replace_with&lt;F&gt;(&amp;mut self, f: F)\n    where\n        F: FnOnce(Option&lt;T&gt;) -&gt; Option&lt;T&gt;;\n}\n\nimpl&lt;T&gt; OptionExt&lt;T&gt; for Option&lt;T&gt; {\n    #[inline]\n    fn replace_with&lt;F&gt;(&amp;mut self, f: F)\n    where\n        F: FnOnce(Option&lt;T&gt;) -&gt; Option&lt;T&gt;,\n    {\n        let mut x = f(self.take());\n        mem::swap(self, &amp;mut x);\n        debug_assert!(x.is_none());\n        mem::forget(x);\n    }\n}\n</code></pre>\n\n<p>It works fine for a simple use-case.</p>\n\n<p>Naive implementation:</p>\n\n<pre><code>let merged = merge(lower_node.right.take(), Some(greater_node));\nlower_node.right = merged;\n</code></pre>\n\n<p>Optimized implementation (<a href=\"https://barrielle.cedeela.fr/research_page/dropping-drops.html\" rel=\"nofollow noreferrer\">details about the trick</a>):</p>\n\n<pre><code>let mut merged = merge(lower_node.right.take(), Some(greater_node));\nmem::swap(&amp;mut lower_node.right, &amp;mut merged);\ndebug_assert!(merged.is_none());\nmem::forget(merged);\n</code></pre>\n\n<p>Optimized implementation with a nicer interface:</p>\n\n<pre><code>lower_node.right.replace_with(|node| merge(node, Some(greater_node));\n</code></pre>\n\n<hr>\n\n<p>This doesn't play nicely when I want to implement a <code>split_binary</code> function that would return a pair of nodes:</p>\n\n<p>Naive implementation:</p>\n\n<pre><code>let (left_node, right_node) = split_binary(orig_node.right.take(), value);\norig_node.right = left_node;\n(Some(orig_node), right_node)\n</code></pre>\n\n<p>Optimized implementation:</p>\n\n<pre><code>let (mut left_node, right_node) = split_binary(orig_node.right.take(), value);\nmem::swap(&amp;mut orig_node.right, &amp;mut left_node);\ndebug_assert!(left_node.is_none());\nmem::forget(left_node);\n(Some(orig_node), right_node)\n</code></pre>\n\n<p>Optimized implementation with a nicer interface (does not compile since <code>right_node</code> is now inside closure):</p>\n\n<pre><code>orig_node.right.replace_with(|node| {\n    let (left_node, right_node) = split_binary(node, value);\n    left_node\n});\n(Some(orig_node), right_node)\n</code></pre>\n\n<p>I can make it compile by defining a helper <code>new_right_node</code> outside of the closure:</p>\n\n<pre><code>let mut new_right_node = None;\norig_node.right.replace_with(|node| {\n    let (left_node, right_node) = split_binary(node, value);\n    new_right_node = right_node;\n    left_node\n});\n(Some(orig_node), new_right_node)\n</code></pre>\n\n<p>I have to initialize <code>new_right_node</code> with <code>None</code> as otherwise Rust has an error \"use of possibly uninitialized <code>new_right_node</code>\". Yet doing this initialization results in an unnecessary <code>core::ptr::drop_in_place</code> call for the initial <code>None</code> value of <code>new_right_node</code>. Manually inlining the <code>replace_with</code>, I can get away without a need to initialize <code>new_right_node</code> upfront:</p>\n\n<pre><code>let new_right_node;\n{\n    let (mut left_node, right_node) = split_binary(orig_node.right.take(), value);\n    new_right_node = right_node;\n    mem::swap(&amp;mut orig_node.right, &amp;mut left_node);\n    debug_assert!(left_node.is_none());\n    mem::forget(left_node);\n}\n(Some(orig_node), new_right_node)\n</code></pre>\n\n<p>Thus, it seems that I can solve this efficiently if I can convince Rust that the closure will be executed and thus <code>new_right_node</code> will be initialized.</p>\n\n<p>How can I solve this efficiently?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 0, "last_activity_date": 1529660785, "creation_date": 1529660785, "answer_id": 50985241, "question_id": 50985010, "link": "https://stackoverflow.com/questions/50985010/how-to-pass-compiler-flags-to-a-sub-crate-in-rust/50985241#50985241", "title": "How to pass compiler flags to a sub crate in Rust?", "body": "<p>You just need to configure the manifest, it's as simple as the <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"nofollow noreferrer\">doc</a> say:</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>[dependencies.awesome]\nversion = \"1.3.5\"\ndefault-features = false # do not include the default features, and optionally\n                         # cherry-pick individual features\nfeatures = [\"secure-password\", \"civet\"]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 4, "last_activity_date": 1529664365, "creation_date": 1529664365, "answer_id": 50986237, "question_id": 50985010, "link": "https://stackoverflow.com/questions/50985010/how-to-pass-compiler-flags-to-a-sub-crate-in-rust/50986237#50986237", "title": "How to pass compiler flags to a sub crate in Rust?", "body": "<p>You can simply forward the feature specified in <code>A</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code># A/Cargo.toml\n\n[features]\nsome-feature = [\"B/some-feature\"]\n\n[dependencies]\nB = \"*\"\n</code></pre>\n\n<p>This will compile <code>B</code> with <code>--features=some_feature</code> if you pass <code>--features=some_feature</code> to <code>A</code>.</p>\n"}], "owner": {"reputation": 291, "user_id": 9143626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43746df168c59ad554c770f60b805fa3?s=128&d=identicon&r=PG&f=1", "display_name": "Allen Lee", "link": "https://stackoverflow.com/users/9143626/allen-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 649, "favorite_count": 1, "closed_date": 1529693595, "accepted_answer_id": 50986237, "answer_count": 2, "score": 4, "last_activity_date": 1529693550, "creation_date": 1529660098, "last_edit_date": 1529693550, "question_id": 50985010, "link": "https://stackoverflow.com/questions/50985010/how-to-pass-compiler-flags-to-a-sub-crate-in-rust", "closed_reason": "Duplicate", "title": "How to pass compiler flags to a sub crate in Rust?", "body": "<p>I have the crates <code>A</code> and <code>B</code>. <code>A</code> depends on <code>B</code> and <code>B</code> has a feature named <code>some_feature</code>. </p>\n\n<p>I can build <code>B</code> using cargo by running <code>cargo build --features=some_feature</code>, but how can I set the same features for <code>A</code> that I can choose to enable or disable <code>some_feature</code> for underlying crate <code>B</code> when compiling <code>A</code>?</p>\n"}, {"tags": ["arrays", "rust", "slice"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1529660428, "post_id": 50985003, "comment_id": 88964928, "body": "You can&#39;t as these values are not in the same array."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1529660721, "creation_date": 1529660721, "answer_id": 50985208, "question_id": 50985003, "link": "https://stackoverflow.com/questions/50985003/is-there-a-short-notation-for-slicing-columns-from-a-2d-array-in-rust-using-onl/50985208#50985208", "title": "Is there a short notation for slicing columns from a 2D-array in Rust, using only the standard library?", "body": "<p>You cannot do that as in, but you can use map to iterate over subslices:</p>\n\n<pre><code>fn main() {\n    let arr = [[1, 2, 3, 4]; 3];\n\n    let iter = arr[0..2].iter().map(|s| &amp;s[1..4]);\n\n    for slice in iter {\n        for x in slice {\n            print!(\"{} \", x);\n        }\n        println!();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 591, "favorite_count": 0, "accepted_answer_id": 50985208, "answer_count": 1, "score": 0, "last_activity_date": 1529693982, "creation_date": 1529660076, "last_edit_date": 1529693982, "question_id": 50985003, "link": "https://stackoverflow.com/questions/50985003/is-there-a-short-notation-for-slicing-columns-from-a-2d-array-in-rust-using-onl", "title": "Is there a short notation for slicing columns from a 2D-array in Rust, using only the standard library?", "body": "<p>Is there any notation similar to <code>arr[1..3][3..5]</code> where the first slice <code>1..3</code> selects rows, and the second slice <code>3..5</code> selects columns?</p>\n\n<p>Example code</p>\n\n<pre><code>fn main() {\n    let arr = [[1, 2, 3, 4]; 3];\n\n    let x = arr[0][1];        // first row, second column\n    println!(\"{}\", x);        // 2\n\n    let row2d = &amp;arr[0..2];   // slice of two first row, as 2d-array\n    println!(\"{:?}\", row2d);  // [[1, 2, 3, 4], [1, 2, 3, 4]]\n\n    let row = &amp;arr[0..2][0];  // slice of first row, as 1d-array, [0] operates on the [0..2] slice\n    println!(\"{:?}\", row);    // [1, 2, 3, 4]\n                              // wanted first column of two first rows: [[1], [1]]\n\n                              // I can pick a row, then do a slice on the row\n    let cols = &amp;arr[0][1..3]; // first row, as 1d-array\n    println!(\"{:?}\", cols);   // [2, 3]\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=ea52d48dd189b70c2f1e8614f1bd3a29&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Link to Rust playground</a></p>\n"}, {"tags": ["rust", "conditional-compilation"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1529645457, "creation_date": 1529645457, "answer_id": 50981221, "question_id": 50981122, "link": "https://stackoverflow.com/questions/50981122/how-to-make-type-aliases-based-on-compile-flags-in-rust/50981221#50981221", "title": "How to make type aliases based on compile flags in Rust?", "body": "<p>The feature you want doesn't exist.  There are a few ways to fake it.</p>\n\n<p>First, you can use features:</p>\n\n<pre><code>#[cfg(all(feature=\"uint-is-u16\", not(any(feature=\"uint-is-u32\", feature=\"uint-is-u64\"))))]\ntype uint = u16;\n#[cfg(not(any(feature=\"uint-is-u16\", feature=\"uint-is-u64\")))]\ntype uint = u32;\n#[cfg(all(feature=\"uint-is-u64\", not(any(feature=\"uint-is-u16\"))))]\ntype uint = u64;\n</code></pre>\n\n<p>These are specified using <code>cargo build --features=uint-is-u64</code>.  Note that features are <em>strictly</em> additive, and you <em>cannot</em> make \"exclusive\" features: <em>i.e.</em> you can't make it impossible to specify both <code>u64</code> and <code>u32</code>.  As such, you need to structure the code such that it works even if multiple features are enabled.</p>\n\n<p>Alternately, you could put the setting in a configuration file somewhere, and write a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"noreferrer\">build script</a> that emits the type alias as code (see the <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#case-study-code-generation\" rel=\"noreferrer\">code generation example</a>).</p>\n"}], "owner": {"reputation": 291, "user_id": 9143626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43746df168c59ad554c770f60b805fa3?s=128&d=identicon&r=PG&f=1", "display_name": "Allen Lee", "link": "https://stackoverflow.com/users/9143626/allen-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 50981221, "answer_count": 1, "score": 2, "last_activity_date": 1529693473, "creation_date": 1529644816, "last_edit_date": 1529693473, "question_id": 50981122, "link": "https://stackoverflow.com/questions/50981122/how-to-make-type-aliases-based-on-compile-flags-in-rust", "title": "How to make type aliases based on compile flags in Rust?", "body": "<p>I want to alias the type <code>uint</code> to <code>u32</code> by default, but a flag can be set during compilation to change it to <code>usize</code>. The code should be something like this:</p>\n\n<pre><code>#[cfg(uint='u32') || default]\ntype uint = u32;\n#[cfg(uint='usize')]\ntype uint = u64;\n</code></pre>\n\n<p>And when I compile, I can use <code>cargo build --uint=usize</code>. What should I do to make this work?</p>\n"}, {"tags": ["vector", "rust", "move"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1552402851, "last_edit_date": 1552402851, "creation_date": 1529638438, "answer_id": 50980277, "question_id": 50980100, "link": "https://stackoverflow.com/questions/50980100/how-can-a-function-append-a-value-to-a-vector-and-also-return-that-value/50980277#50980277", "title": "How can a function append a value to a vector and also return that value?", "body": "<blockquote>\n  <p>How do I work around</p>\n</blockquote>\n\n<p>You don't \"work around\" this type of problem. Ownership is a fundamental concept in Rust and you have to understand it.</p>\n\n<h2>Solutions</h2>\n\n<h3>Make your <code>Card</code> implicitly copyable via <code>Copy</code></h3>\n\n<pre><code>#[derive(Debug, Copy, Clone)]\nenum Card { /* ... */ }\n</code></pre>\n\n<h3>Make your <code>Card</code> explicitly copyable via <code>Clone</code></h3>\n\n<pre><code>#[derive(Debug, Clone)]\nenum Card { /* ... */ }\n\nfn rotate_card(deck: &amp;mut Deck) -&gt; Card {\n    let top_card = deck.remove(0);\n    deck.push(top_card.clone());\n    top_card\n}\n</code></pre>\n\n<h3>Return a reference to the card</h3>\n\n<p>You can return a reference to the last card instead of the card as a value:</p>\n\n<pre><code>fn rotate_card(deck: &amp;mut Deck) -&gt; &amp;mut Card {\n    let top_card = deck.remove(0);\n    deck.push(top_card);\n    deck.last_mut().unwrap()\n}\n</code></pre>\n\n<h3>Use reference-counting</h3>\n\n<p>A type like <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> or <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a> can allow shared ownership of a value:</p>\n\n<pre><code>use std::rc::Rc;\n\ntype Deck = Vec&lt;Rc&lt;Card&gt;&gt;;\n\nfn rotate_card(deck: &amp;mut Deck) -&gt; Rc&lt;Card&gt; {\n    let top_card = deck.remove(0);\n    deck.push(top_card.clone());\n    top_card\n}\n</code></pre>\n\n<h2>Other notes</h2>\n\n<p>This is a useless function signature:</p>\n\n<pre><code>fn rotate_card(deck: &amp;mut Deck) -&gt; (Card, &amp;mut Deck) \n</code></pre>\n\n<p>There's no reason to return the <code>Deck</code> back to the caller; they <em>already</em> have that reference. Remove that.</p>\n\n<p>Slices (and <code>Vec</code>s via <code>DerefMut</code>) have the <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.rotate_left\" rel=\"nofollow noreferrer\"><code>rotate_left</code></a> method; you don't need to reimplement it.</p>\n"}], "owner": {"reputation": 133, "user_id": 3134725, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/53d7db90cbd53dd396396d148593b067?s=128&d=identicon&r=PG&f=1", "display_name": "user3134725", "link": "https://stackoverflow.com/users/3134725/user3134725"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 686, "favorite_count": 1, "accepted_answer_id": 50980277, "answer_count": 1, "score": 2, "last_activity_date": 1552402851, "creation_date": 1529636898, "last_edit_date": 1529637103, "question_id": 50980100, "link": "https://stackoverflow.com/questions/50980100/how-can-a-function-append-a-value-to-a-vector-and-also-return-that-value", "title": "How can a function append a value to a vector and also return that value?", "body": "<p>I'm trying to write a function <code>rotate_card</code> that accepts a vector as input, rotates the vector's front element to the rear, and returns a pair containing both the rotated element and the vector resulting from the rotation.</p>\n\n<pre><code>#[derive(Debug)]\nenum Card {\n    Ace,\n    King,\n    Queen,\n    Jack,\n}\n\ntype Deck = Vec&lt;Card&gt;;\n\nfn rotate_card(deck: &amp;mut Deck) -&gt; (Card, &amp;mut Deck) {\n    let top_card = deck.remove(0);\n    deck.push(top_card);\n    (top_card, deck)\n} // end rotate_card\n\nfn main() {\n    let mut my_deck: Deck = vec![Card::Ace, Card::King, Card::Queen, Card::Jack];\n    let z: (Card, &amp;mut Deck) = rotate_card(&amp;mut my_deck);\n    println!(\"The value of z is: {:?}.\", z);\n} // end main\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `top_card`\n  --&gt; src/main.rs:14:6\n   |\n13 |     deck.push(top_card);\n   |               -------- value moved here\n14 |     (top_card, deck)\n   |      ^^^^^^^^ value used here after move\n   |\n   = note: move occurs because `top_card` has type `Card`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>How do I work around the <code>value used after move</code> error?</p>\n"}, {"tags": ["rust", "reqwest"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529635875, "post_id": 50979797, "comment_id": 88955675, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/30292752/155423\">How do I parse a JSON File?</a> (specifically the answer using Serde. If you disagree, please <a href=\"https://stackoverflow.com/posts/50979797/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "owner": {"reputation": 59, "user_id": 4029085, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "jie zhang", "link": "https://stackoverflow.com/users/4029085/jie-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 400, "favorite_count": 1, "closed_date": 1547605511, "answer_count": 0, "score": 2, "last_activity_date": 1547604423, "creation_date": 1529634122, "last_edit_date": 1547604423, "question_id": 50979797, "link": "https://stackoverflow.com/questions/50979797/how-can-i-get-an-apis-json-data-from-a-reqwest-response", "closed_reason": "Duplicate", "title": "How can I get an API&#39;s JSON data from a Reqwest response?", "body": "<p>I want to get the data from an API:</p>\n\n<pre><code>extern crate reqwest;\n\nuse std::io::Read;\n\npub fn main() {\n    let mut response = reqwest::get(\"https://api.fcoin.com/v2/market/ticker/ftbtc\")\n        .expect(\"Failed to send request\");\n    let mut buf = String::new();\n    response\n        .read_to_string(&amp;mut buf)\n        .expect(\"Failed to read response\");\n    println!(\"{}\", buf);\n}\n</code></pre>\n\n<p>The output is </p>\n\n<pre><code>{\n  \"status\": 0,\n  \"data\": {\n    \"ticker\": [\n      0.00006173,\n      500,\n      0.00006173,\n      44411.28,\n      0.00006174,\n      917.98,\n      0.00008033,\n      0.00008654,\n      0.00006026,\n      7144217252.9,\n      554239.7346328925\n    ],\n    \"type\": \"ticker.ftbtc\",\n    \"seq\": 2995173\n  }\n}\n</code></pre>\n\n<p>Can I transfer the <code>buf</code> or response into a key => value style <code>Vec</code> or array? </p>\n"}, {"tags": ["testing", "rust", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "is_accepted": false, "score": 1, "last_activity_date": 1529622578, "creation_date": 1529622578, "answer_id": 50978607, "question_id": 50976938, "link": "https://stackoverflow.com/questions/50976938/timeout-on-tests-using-working-post-route-with-actix-web/50978607#50978607", "title": "Timeout on tests using working POST route with actix-web", "body": "<p>The solution is a simple one. Turns out, the request does really time out on <code>cargo test</code>. A potential solution would be to get in the <code>timeout</code> method into the chain, or much simpler in my case, turn on the same optimization that I use when running the application by passing in the <code>--release</code> flag.</p>\n"}], "owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 442, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1529622578, "creation_date": 1529612764, "last_edit_date": 1529613577, "question_id": 50976938, "link": "https://stackoverflow.com/questions/50976938/timeout-on-tests-using-working-post-route-with-actix-web", "title": "Timeout on tests using working POST route with actix-web", "body": "<p>I've successfully migrated a web application from <a href=\"https://rocket.rs/\" rel=\"nofollow noreferrer\">Rocket</a> to <a href=\"https://actix.rs/\" rel=\"nofollow noreferrer\">actix-web</a>. By utilizing postman, I've verified that the same requests yield the same responses. Migrating the tests however has been proven to be a little bit more tricky. </p>\n\n<p>My POST requests time out when running <code>cargo test</code>, even though the application just accepts and returns the expected response just fine when running <code>cargo run</code>. </p>\n\n<pre><code>#[cfg(test)]\nmod test {\n    use actix_web::{client, http, test, App};\n\n    #[test]\n    fn main() {\n        let mut ts = TestSuite::new();\n\n        assert!(ts.get_request(\"/health\").status().is_success()); // works\n\n        let filter_test_body =\n            r#\"{\"key_1\":[{\"id\":\"a string\"},{\"id\":\"another string\"}],\"int_1\":100}\"#;\n        assert!(\n            ts.post_request(\"/post_route\", filter_test_body)\n                .status()\n                .is_success()\n        ); // times out while actual app returns success with same payload within a few ms\n    }\n\n    fn create_app() -&gt; App&lt;project_name::AppState&gt; {\n        // {...} some initialization and defining app_state\n\n        return App::with_state(&amp;app_state)\n            .resource(\"/health\", |r| {\n                r.method(http::Method::GET).f(project_name::health)\n            })\n            .resource(\"/post_route\", |r| {\n                r.method(http::Method::POST)\n                    .with(project_name::post_route_handler)\n            });\n    }\n\n    struct TestSuite {\n        server: test::TestServer,\n    }\n\n    impl TestSuite {\n        pub fn new() -&gt; TestSuite {\n            TestSuite {\n                server: test::TestServer::with_factory(create_app),\n            }\n        }\n        pub fn get_request(&amp;mut self, endpoint: &amp;str) -&gt; client::ClientResponse {\n            let request = self.server\n                .client(http::Method::GET, endpoint)\n                .finish()\n                .unwrap();\n\n            self.server.execute(request.send()).unwrap()\n        }\n        pub fn post_request(&amp;mut self, endpoint: &amp;str, body: &amp;str) -&gt; client::ClientResponse {\n            let request_payload: other_lib::request::RequestPayload =\n                serde_json::from_str(body).unwrap();\n            let request = self.server\n                .client(http::Method::POST, endpoint)\n                .header(http::header::CONTENT_TYPE, \"application/json\")\n                .json(request_payload)\n                //.body(body.to_string())\n                .unwrap();\n\n            self.server.execute(request.send()).unwrap() // thread 'test::main' panicked at 'called `Result::unwrap()` on an `Err` value: Timeout'\n        }\n    }\n}\n</code></pre>\n\n<p>In contrast, here's the POST test from the codebase utilizing Rocket.</p>\n\n<pre><code>#[test]\nfn test_filters() {\n    let client = mount_test_rocket(); // getting access to the test server (rocket::local::Client)\n    let mut response = client.post(\"/post_route\").header(ContentType::JSON)\n        .body(r#\"{\"key_1\":[{\"id\":\"a string\"},{\"id\":\"another string\"}],\"int_1\":100}\"#).dispatch();\n    assert_eq!(response.status(), Status::Ok);\n    // + more assertions looking into the actual response body\n}\n</code></pre>\n"}, {"tags": ["https", "rust"], "answers": [{"tags": [], "owner": {"reputation": 575, "user_id": 1408421, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1b26a9d9a04980f0f366addb50cec23a?s=128&d=identicon&r=PG", "display_name": "ScienceSE", "link": "https://stackoverflow.com/users/1408421/sciencese"}, "is_accepted": false, "score": 1, "last_activity_date": 1541163713, "last_edit_date": 1541163713, "creation_date": 1541158115, "answer_id": 53117760, "question_id": 50975825, "link": "https://stackoverflow.com/questions/50975825/is-there-any-way-to-run-tungstenite-on-the-same-port-as-hyper/53117760#53117760", "title": "Is there any way to run Tungstenite on the same port as hyper?", "body": "<p>I think it should be possible to do that, the <code>tungstenite</code> and <code>tokio-tungstenite</code> allow you to specify custom headers (there are helpers functions for that, prefixed with <code>hdr</code>), so depending on the <code>hyper</code> version you use, if you can convert a request to some form, when the headers can be extracted, you can pass them to <code>tungstenite</code>.</p>\n\n<p>You might also want to try <code>warp</code> crate, it's built on top of <code>hyper</code> and it uses <code>tungstenite</code> under the hood for the websocket support, so if you want to write your own version of <code>warp</code>, you can take a look at the source code (the source code may contain hints on how to use <code>hyper</code> and <code>tungstenite</code> together).</p>\n"}, {"tags": [], "owner": {"reputation": 992, "user_id": 2221217, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4fd7b569b6ff5ecb0df3b710ef0e06d3?s=128&d=identicon&r=PG", "display_name": "Rub&#233;n Dur&#225; Tar&#237;", "link": "https://stackoverflow.com/users/2221217/rub%c3%a9n-dur%c3%a1-tar%c3%ad"}, "is_accepted": true, "score": 1, "last_activity_date": 1555109224, "creation_date": 1555109224, "answer_id": 55660312, "question_id": 50975825, "link": "https://stackoverflow.com/questions/50975825/is-there-any-way-to-run-tungstenite-on-the-same-port-as-hyper/55660312#55660312", "title": "Is there any way to run Tungstenite on the same port as hyper?", "body": "<p>You can do it, but it's quite fiddly. You'll have to use <code>tokio-tungstenite</code>, do the handshake yourself (check header, set response headers) and spawn a new future on the runtime that will handle the websockets connection. The new future can be created by calling <code>on_upgrade()</code> on the request body with the latest version of hyper, and the connection can then be passed to <code>tokio_tungstenite::WebSocketStream::from_raw_socket</code> to turn it into a websockets connection.</p>\n\n<p>Example handler (note that this doesn't fully check the request headers and assumes we want an upgrade):</p>\n\n<pre><code>fn websocket(req: Request&lt;Body&gt;) -&gt; Result&lt;Response&lt;Body&gt;, &amp;'static str&gt; {\n    // TODO check other header\n    let key = match req.headers().typed_get::&lt;headers::SecWebsocketKey&gt;() {\n        Some(key) =&gt; key,\n        None =&gt; return Err(\"failed to read ws key from headers\"),\n    };\n    let websocket_future = req\n        .into_body()\n        .on_upgrade()\n        .map_err(|err| eprintln!(\"Error on upgrade: {}\", err))\n        .and_then(|upgraded| {\n            let ws_stream = tokio_tungstenite::WebSocketStream::from_raw_socket(\n                upgraded,\n                tokio_tungstenite::tungstenite::protocol::Role::Server,\n                None,\n            );\n            let (sink, stream) = ws_stream.split();\n            sink.send_all(stream)\n                .map(|_| ())\n                .map_err(|err| error!(\"{}\", err))\n        });\n    hyper::rt::spawn(websocket_future);\n    let mut upgrade_rsp = Response::builder()\n        .status(StatusCode::SWITCHING_PROTOCOLS)\n        .body(Body::empty())\n        .unwrap();\n    upgrade_rsp\n        .headers_mut()\n        .typed_insert(headers::Upgrade::websocket());\n    upgrade_rsp\n        .headers_mut()\n        .typed_insert(headers::Connection::upgrade());\n    upgrade_rsp\n        .headers_mut()\n        .typed_insert(headers::SecWebsocketAccept::from(key));\n    Ok(upgrade_rsp)\n}\n</code></pre>\n"}], "owner": {"reputation": 474, "user_id": 1753929, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/nXwCf.png?s=128&g=1", "display_name": "Loovjo", "link": "https://stackoverflow.com/users/1753929/loovjo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 585, "favorite_count": 0, "accepted_answer_id": 55660312, "answer_count": 2, "score": 2, "last_activity_date": 1555109224, "creation_date": 1529607640, "last_edit_date": 1529610264, "question_id": 50975825, "link": "https://stackoverflow.com/questions/50975825/is-there-any-way-to-run-tungstenite-on-the-same-port-as-hyper", "title": "Is there any way to run Tungstenite on the same port as hyper?", "body": "<p>I'm trying to make a web server in Rust for a simple browser game. I want the server to be able to deliver pages through HTTPS, but also be able to communicate through WebSockets. I'm planning to put this server on Heroku, but since they only allow one port per application I have to make the WebSocket server operate on the same port as the other HTTPS code.</p>\n\n<p>It seems like <a href=\"https://stackoverflow.com/q/45806359/1753929\">this is possible with crates like <code>rust-websocket</code></a>, but that crate uses an outdated version of <code>hyper</code> and seems to be no longer maintained. The crate <code>tokio_tungstenite</code> is much more up to date.</p>\n\n<p>The problem is that both <code>hyper</code> and <code>tungstenite</code> have their own implementation of the HTTP protocol that WebSockets operate over with no way to convert between the two. This means that once an HTTPS request has been parsed by either <code>hyper</code> or <code>tungstenite</code> there is no way to continue the processing by the other part, so you can't really try to connect the WebSocket and match on an error in <code>tungstenite</code> and process it by <code>hyper</code>, nor can you parse the request by <code>hyper</code> and check if it's a WebSocket request and send it over to <code>tungstenite</code>. Is there any way to resolve this problem?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1529610245, "post_id": 50975387, "comment_id": 88948789, "body": "Note that Rust differentiate between a duration (&quot;This action took 3 hours and 27 minutes to execute&quot;) and a moment in time (&quot;This action was executed on the 3rd of June 2004, at 14:56&quot;). <code>Duration</code> represents the former, <code>Instant</code> and <code>SystemTime</code> the later."}], "answers": [{"tags": [], "owner": {"reputation": 471, "user_id": 5065400, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PD5k4jwEt9M/AAAAAAAAAAI/AAAAAAAABaA/zOdqGlINULo/photo.jpg?sz=128", "display_name": "Randomness Slayer", "link": "https://stackoverflow.com/users/5065400/randomness-slayer"}, "is_accepted": false, "score": 1, "last_activity_date": 1529608424, "creation_date": 1529608424, "answer_id": 50976030, "question_id": 50975387, "link": "https://stackoverflow.com/questions/50975387/what-is-the-rust-time-type-that-is-the-best-fit-for-a-distributed-environment/50976030#50976030", "title": "What is the Rust time type that is the best fit for a distributed environment?", "body": "<p>Of the three, <code>Instant</code> seems like it would give you the closest approximation of a RTC, at least within the context of the system.</p>\n\n<p>In a distributed sense, you'd probably want to have only one instance across one machine and query it on the others to get relative time, that way you are guaranteed at least consistency in event times.</p>\n\n<p>After a cursory glance, I was unable to find an out of the box solution if you want accurate time.</p>\n"}, {"comments": [{"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1529858669, "post_id": 51001413, "comment_id": 89016616, "body": "How to make use of PTP? Any examples in Rust?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1529862816, "post_id": 51001413, "comment_id": 89017753, "body": "@RajeevRanjan: You generally do not have to use PTP from any language; PTP is a service running on the computer which synchronize the computer time. For example, see this project for <a href=\"http://linuxptp.sourceforge.net/\" rel=\"nofollow noreferrer\">PTP in Linux</a>."}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1529925121, "post_id": 51001413, "comment_id": 89036612, "body": "What if I were to run my distributed system on Dockers,AWS,etc ? Would it still be possible? Would I need to install a driver in that environment if at all possible?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1529925514, "post_id": 51001413, "comment_id": 89036834, "body": "@RajeevRanjan: I am sorry, I have no experience with Docker (or AWS) so I do not know. You would have to ask on the relevant venues."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1529758929, "creation_date": 1529758929, "answer_id": 51001413, "question_id": 50975387, "link": "https://stackoverflow.com/questions/50975387/what-is-the-rust-time-type-that-is-the-best-fit-for-a-distributed-environment/51001413#51001413", "title": "What is the Rust time type that is the best fit for a distributed environment?", "body": "<p>There are essentially two approaches for distributed communication of time points:</p>\n\n<ol>\n<li>Use <a href=\"https://en.wikipedia.org/wiki/Precision_Time_Protocol\" rel=\"nofollow noreferrer\">PTP</a> to synchronize time across your various machines and assume that the precision is sufficient for your application; you should be able to reach micro-second precision which is generally good enough.</li>\n<li>Do not use a global time, instead:\n\n<ul>\n<li>Mark each different machine as a different time-source (or even, each different <em>core</em>),</li>\n<li>Tag each event with its time-source and its instant,</li>\n<li>Never attempt to compare instants from different time-sources.</li>\n</ul></li>\n</ol>\n\n<p>In either case, <code>Instant</code> is better (monotonic) than <code>SystemTime</code>. <code>SystemTime</code> is weird since the time can be rewind, which is generally unexpected.</p>\n"}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 387, "favorite_count": 1, "accepted_answer_id": 51001413, "answer_count": 2, "score": 3, "last_activity_date": 1529758929, "creation_date": 1529605811, "last_edit_date": 1529606113, "question_id": 50975387, "link": "https://stackoverflow.com/questions/50975387/what-is-the-rust-time-type-that-is-the-best-fit-for-a-distributed-environment", "title": "What is the Rust time type that is the best fit for a distributed environment?", "body": "<p>I read the documentation of <a href=\"https://doc.rust-lang.org/std/time/index.html\" rel=\"nofollow noreferrer\"><code>std::time</code></a> and discovered that there are 3 types of time available:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html\" rel=\"nofollow noreferrer\"><code>Duration</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/time/struct.Instant.html\" rel=\"nofollow noreferrer\"><code>Instant</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/time/struct.SystemTime.html\" rel=\"nofollow noreferrer\"><code>SystemTime</code></a></li>\n</ul>\n\n<p>I need the implementation which is closest to <a href=\"https://en.wikipedia.org/wiki/Real-time_clock\" rel=\"nofollow noreferrer\">RTC</a> with almost no clock drift. I need to use the times across machines in a distributed system.</p>\n\n<p>I thought of going with <code>Instant</code>, but then I also <a href=\"https://doc.rust-lang.org/std/time/struct.Instant.html\" rel=\"nofollow noreferrer\">read this</a>:</p>\n\n<blockquote>\n  <p>Note, however, that instants are not guaranteed to be steady. In other\n  words, each tick of the underlying clock may not be the same length\n  (e.g. some seconds may be longer than others).</p>\n</blockquote>\n\n<p>Which one is the best fit for a distributed environment?</p>\n"}, {"tags": ["rust", "polymorphism", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529593331, "post_id": 50971724, "comment_id": 88939968, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/28897297/155423\">Can I get a borrow of a multi-trait instance as function parameter without using a generic type?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50971724/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529596338, "post_id": 50971724, "comment_id": 88941882, "body": "I wrote an answer but @Shepmaster pointed out that it only works on the MCVE and not for <code>connect</code>. I suspect the answer you want is something like <code>-&gt; Result&lt;Box&lt;Stream&gt;&gt;</code> where <code>trait Stream</code> has <code>Read</code> and <code>Write</code> as supertraits."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1529596370, "post_id": 50971724, "comment_id": 88941918, "body": "(And <code>Read</code> and <code>Write</code> are implemented for <code>Box&lt;Stream&gt;</code>)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529597090, "post_id": 50971724, "comment_id": 88942328, "body": "I&#39;d add in <a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a> as a duplicate to address the <code>Box</code> aspect (and maybe <a href=\"https://stackoverflow.com/q/29760668/155423\">Conditionally iterate over one of several possible iterators</a>)."}], "owner": {"reputation": 243, "user_id": 4011767, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba41c86519ceb89402d502b53d4ae9c2?s=128&d=identicon&r=PG&f=1", "display_name": "Jan", "link": "https://stackoverflow.com/users/4011767/jan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 704, "favorite_count": 0, "closed_date": 1529642717, "answer_count": 0, "score": 2, "last_activity_date": 1529595243, "creation_date": 1529593225, "last_edit_date": 1529593484, "question_id": 50971724, "link": "https://stackoverflow.com/questions/50971724/how-do-i-create-a-trait-object-with-multiple-trait-bounds", "closed_reason": "Duplicate", "title": "How do I create a trait object with multiple trait bounds?", "body": "<p>I have a function that returns some object. The caller of this function should not care about the actual type but the traits the type implements:</p>\n\n<pre><code>trait CanWalk {\n    fn walk(&amp;self) {}\n}\n\ntrait CanFly {\n    fn fly(&amp;self) {}\n}\n\nstruct Woodpecker {}\n\nimpl CanWalk for Woodpecker {}\nimpl CanFly for Woodpecker {}\n\nfn make_woodpecker() -&gt; CanWalk + CanFly {\n    Woodpecker {}\n}\n\nfn main() {}\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0225]: only auto traits can be used as additional traits in a trait object\n  --&gt; src/main.rs:14:35\n   |\n14 | fn make_woodpecker() -&gt; CanWalk + CanFly {\n   |                                   ^^^^^^ non-auto additional trait\n</code></pre>\n\n<p>Why is that? What could I do instead?</p>\n\n<p>In my actual project, I have a few functions that do I/O on streams (or basically anything that supports <code>Read + Write</code>). Therefore, the signature looks like this:</p>\n\n<pre><code>fn do_some_io&lt;T: Read + Write&gt;(io_thing: T)\n</code></pre>\n\n<p>Usually, that would be a <code>native_tls::TlsStream</code> but I would also want to be able to pass a <code>std::net::TcpStream</code> if the user says so (during runtime). Something along these lines:</p>\n\n<pre><code>fn connect_tcp(host: &amp;str, ...) -&gt; Result&lt;Read + Write&gt; {...}\nfn connect_tls(host: &amp;str, ...) -&gt; Result&lt;Read + Write&gt; {...}\n\nfn connect(insecure: bool, host: &amp;str, ...) -&gt; Result&lt;Read + Write&gt; {\n    if insecure {\n        connect_tcp(...)\n    } else {\n        connect_tls(...)\n    }\n}\n</code></pre>\n\n<p>If trait objects with two bounds do not work (yet?), how could I implement this functionality in Rust?</p>\n"}, {"tags": ["mongodb", "rust", "bulkinsert"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1529588877, "post_id": 50970102, "comment_id": 88936594, "body": "Does <a href=\"https://stackoverflow.com/a/27098807/3005167\">this answer</a> solve your problem? If not, can you explain why?"}, {"owner": {"reputation": 73, "user_id": 2655800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42bea47e0da1af52f054aedaa04a80ed?s=128&d=identicon&r=PG", "display_name": "user2655800", "link": "https://stackoverflow.com/users/2655800/user2655800"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1529592015, "post_id": 50970102, "comment_id": 88939000, "body": "Thanks, the <code>mem::swap()</code> solved my issue."}], "answers": [{"tags": [], "owner": {"reputation": 73, "user_id": 2655800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42bea47e0da1af52f054aedaa04a80ed?s=128&d=identicon&r=PG", "display_name": "user2655800", "link": "https://stackoverflow.com/users/2655800/user2655800"}, "is_accepted": false, "score": 0, "last_activity_date": 1529593453, "last_edit_date": 1529593453, "creation_date": 1529592274, "answer_id": 50971368, "question_id": 50970102, "link": "https://stackoverflow.com/questions/50970102/is-there-a-way-to-fill-up-a-vector-for-bulk-inserts-with-the-mongodb-driver-and/50971368#50971368", "title": "Is there a way to fill up a vector for bulk inserts with the MongoDB driver and then use it again without cloning?", "body": "<p>Thanks to kazemakase, I could solve my own issue by creating a new empty vector, swap both vectors and send the full one. Here's the new working code:</p>\n\n<pre><code>// Cargo.toml extract:\n//\n// [dependencies]\n// bson = \"0.10\"\n// mongodb = \"0.3.7\"\n\n#[macro_use(bson, doc)] extern crate bson;\nextern crate mongodb;\nuse mongodb::coll::options::WriteModel;\nuse mongodb::{Client, ThreadedClient};\nuse mongodb::db::ThreadedDatabase;\nuse std::mem;\n\nfn main() {\n\n    // Connect to MongoDB and select collection\n    let client = Client::connect(\"localhost\", 27017).ok().expect(\"Failed to initialize client.\");\n    let coll = client.db(\"test\").collection(\"mycol\");\n\n    // Make the bulk vector\n    let mut bulk = Vec::new();\n    for i in 0..1000 {\n\n        // Append a item to the bulk\n        bulk.push(WriteModel::UpdateOne { filter: doc!{\"_id\": i},\n                                          update: doc!{\"$set\" =&gt; {\"hello\" =&gt; \"world\"}},\n                                          upsert: Some(true) });\n\n        // Each 11 items, flush bulk\n        if bulk.len() &gt; 10 {\n            println!(\"Upsert {} docs into collection...\",bulk.len());\n\n            let mut bulk2 = Vec::new(); // create new empty bulk\n            mem::swap(&amp;mut bulk, &amp;mut bulk2); // bulk &lt;-&gt; bulk2\n            let result = coll.bulk_write(bulk2, true);  // send full bulk\n\n            //let result = coll.bulk_write(bulk.clone(), true); // Unoptimal: bulk cloned\n            //let result = coll.bulk_write(bulk, true); // E0382: use after move\n            //let result = coll.bulk_write(&amp;bulk, true); // E0308: expected struct `std::vec::Vec`, found reference \n\n            // Check result\n            match result.bulk_write_exception {\n                Some(exception) =&gt; {\n                    if exception.message.len()&gt;0 {\n                        println!(\"ERROR: {}\",exception.message);\n                    }\n                }\n                None =&gt; ()\n            }\n            //bulk.clear(); // bulk is now a new empty bulk, clear is unecessary\n        } // Compiler will drop bulk2 (the full bulk) at this point\n    }\n\n    // Final flush\n    if bulk.len() &gt; 0 {\n        println!(\"Upsert {} docs into collection...\",bulk.len());\n        let result = coll.bulk_write(bulk, true); // No clone nor swap needed here\n        match result.bulk_write_exception {\n            Some(exception) =&gt; {\n                if exception.message.len()&gt;0 {\n                    println!(\"ERROR: {}\",exception.message);\n                }\n            }\n            None =&gt; ()\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1529599708, "post_id": 50971930, "comment_id": 88943733, "body": "Also <a href=\"https://docs.rs/itertools/0.7.4/itertools/trait.Itertools.html#method.chunks\" rel=\"nofollow noreferrer\">docs.rs/itertools/0.7.4/itertools/&hellip;</a>"}, {"owner": {"reputation": 73, "user_id": 2655800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42bea47e0da1af52f054aedaa04a80ed?s=128&d=identicon&r=PG", "display_name": "user2655800", "link": "https://stackoverflow.com/users/2655800/user2655800"}, "edited": false, "score": 0, "creation_date": 1529790985, "post_id": 50971930, "comment_id": 89004257, "body": "Thanks! Issue of the slice::chunk() [<a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.chunks]\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.slice.html#method.chunks]</a> solution is the first collect(), for example if the documents to insert are generated by parsing a 3Gb file, it could be memory costly to get them all before starting to insert. That&#39;s why I would prefer the itertools::chunks() proposed above by Shepmaster because it applies to an iterator instead of slices."}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": false, "score": 1, "last_activity_date": 1529600740, "last_edit_date": 1529600740, "creation_date": 1529593850, "answer_id": 50971930, "question_id": 50970102, "link": "https://stackoverflow.com/questions/50970102/is-there-a-way-to-fill-up-a-vector-for-bulk-inserts-with-the-mongodb-driver-and/50971930#50971930", "title": "Is there a way to fill up a vector for bulk inserts with the MongoDB driver and then use it again without cloning?", "body": "<p>As @kazemakase pointed out in the comments, the <a href=\"https://stackoverflow.com/a/27098807/3005167\">general solution to these kinds of problems</a> is <code>mem::replace()</code>. However, in this case, the reason we need to hang onto <code>bulk</code> is for the final case when <code>bulk.len() &lt;= 10</code>. If we restructure the original code, we can avoid the <strong>Use after move error</strong> entirely:</p>\n\n<pre><code>// Connect to MongoDB and select collection\nlet client = Client::connect(\"localhost\", 27017).ok().expect(\"Failed to initialize client.\");\nlet coll = client.db(\"test\").collection(\"mycol\");\n\nlet ranges: Vec&lt;_&gt; = (0..1000).into_iter().collect();\nfor range in ranges[..].chunks(11) {\n    let bulk: Vec&lt;_&gt; = \n        range.map(|i| WriteModel::UpdateOne { filter: doc!{\"_id\": i},\n                                              update: doc!{\"$set\" =&gt; {\"hello\" =&gt; \"world\"}},\n                                              upsert: Some(true) })\n        .collect();\n\n    println!(\"Upsert {} docs into collection...\", bulk.len());\n\n    let result = coll.bulk_write(bulk);\n    if let Some(exception) = result.bulk_write_exception {\n        if exception.message.len() &gt; 0 {\n            println!(\"ERROR: {}\", exception.message);\n        }\n    }\n}\n</code></pre>\n\n<p>The main change here is to use <code>slice::chunks()</code> instead of manually building the chunks into <code>bulk</code> in the main iteration loop. The other nice thing is that this removes the duplicated error handling and is more idiomatic Rust.</p>\n"}], "owner": {"reputation": 73, "user_id": 2655800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42bea47e0da1af52f054aedaa04a80ed?s=128&d=identicon&r=PG", "display_name": "user2655800", "link": "https://stackoverflow.com/users/2655800/user2655800"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 400, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1529600740, "creation_date": 1529588645, "last_edit_date": 1529589767, "question_id": 50970102, "link": "https://stackoverflow.com/questions/50970102/is-there-a-way-to-fill-up-a-vector-for-bulk-inserts-with-the-mongodb-driver-and", "title": "Is there a way to fill up a vector for bulk inserts with the MongoDB driver and then use it again without cloning?", "body": "<p>I want to use the <a href=\"https://crates.io/crates/mongodb\" rel=\"nofollow noreferrer\">MongoDB Rust Driver</a> to bulk-insert documents into a collection. I have a <code>bulk</code> vector that I fill and flush when reaching a given size.</p>\n\n<p>My issue is that I must <code>.clone()</code> the vector when giving it to driver's API <code>bulk_write()</code>.</p>\n\n<p>If I don't clone, I have a <strong><em>E0382: use after move</em></strong> error, and it seems that the API don't accept reference (<strong><em>E0308: expected struct <code>std::vec::Vec</code>, found reference</em></strong>).</p>\n\n<p>I'm new to Rust. Is there a way to do it without cloning this big structure? (structure is not big in my sample, but is in my actual code)</p>\n\n<p>There's my code:</p>\n\n<pre><code>// Cargo.toml extract:\n//\n// [dependencies]\n// bson = \"0.10\"\n// mongodb = \"0.3.7\"\n\n#[macro_use(bson, doc)] extern crate bson;\nextern crate mongodb;\nuse mongodb::coll::options::WriteModel;\nuse mongodb::{Client, ThreadedClient};\nuse mongodb::db::ThreadedDatabase;\n\nfn main() {\n\n    // Connect to MongoDB and select collection\n    let client = Client::connect(\"localhost\", 27017).ok().expect(\"Failed to initialize client.\");\n    let coll = client.db(\"test\").collection(\"mycol\");\n\n    // Make the bulk vector\n    let mut bulk = Vec::new();\n    for i in 0..1000 {\n\n        // Append a item to the bulk\n        bulk.push(WriteModel::UpdateOne { filter: doc!{\"_id\": i},\n                                          update: doc!{\"$set\" =&gt; {\"hello\" =&gt; \"world\"}},\n                                          upsert: Some(true) });\n\n        // Each 11 items, flush bulk\n        if bulk.len() &gt; 10 {\n            println!(\"Upsert {} docs into collection...\",bulk.len());\n\n            // `bulk` have to be cloned here\n            let result = coll.bulk_write(bulk.clone(), true); // Unoptimal: bulk cloned\n            //let result = coll.bulk_write(bulk, true); // E0382: use after move\n            //let result = coll.bulk_write(&amp;bulk, true); // E0308: expected struct `std::vec::Vec`, found reference \n\n            // Check result\n            match result.bulk_write_exception {\n                Some(exception) =&gt; {\n                    if exception.message.len()&gt;0 {\n                        println!(\"ERROR: {}\",exception.message);\n                    }\n                }\n                None =&gt; ()\n            }\n            bulk.clear();\n        }\n    }\n\n    // Final flush\n    if bulk.len() &gt; 0 {\n        println!(\"Upsert {} docs into collection...\",bulk.len());\n        let result = coll.bulk_write(bulk.clone(), true);\n        match result.bulk_write_exception {\n            Some(exception) =&gt; {\n                if exception.message.len()&gt;0 {\n                    println!(\"ERROR: {}\",exception.message);\n                }\n            }\n            None =&gt; ()\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["syntax", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1529580004, "post_id": 50967200, "comment_id": 88930749, "body": "Please give some context: where does this line come from? What is <code>ReadPool</code>?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 5, "creation_date": 1529580117, "post_id": 50967200, "comment_id": 88930837, "body": "Very useful for looking up unknown syntax in Rust: <a href=\"https://doc.rust-lang.org/book/first-edition/syntax-index.html\" rel=\"nofollow noreferrer\">the Rust Syntax Index</a>."}], "answers": [{"comments": [{"owner": {"reputation": 10336, "user_id": 10990737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lYeEB.jpg?s=128&g=1", "display_name": "Ifaruki", "link": "https://stackoverflow.com/users/10990737/ifaruki"}, "edited": false, "score": 0, "creation_date": 1607676016, "post_id": 50967315, "comment_id": 115352134, "body": "Finally i found the answer. <code>||</code> is kinda weird for an lambda tbh"}], "tags": [], "owner": {"reputation": 2295, "user_id": 1216956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb3ad7aa63b5b003fb9a8935c739023c?s=128&d=identicon&r=PG", "display_name": "FauxFaux", "link": "https://stackoverflow.com/users/1216956/fauxfaux"}, "is_accepted": false, "score": 10, "last_activity_date": 1529580063, "creation_date": 1529580063, "answer_id": 50967315, "question_id": 50967200, "link": "https://stackoverflow.com/questions/50967200/what-do-four-consecutive-vertical-lines-mean/50967315#50967315", "title": "What do four consecutive vertical lines mean?", "body": "<p><code>||</code> represents a lambda taking no arguments.</p>\n\n<pre><code>fn main() {\n    let a = || println!(\"hello\");\n    let b = || { println!(\"world\") };\n\n    a(); // hello\n    b(); // world\n}\n</code></pre>\n\n<p>Two together is a lambda returning another lambda:</p>\n\n<pre><code>fn main() {\n    let a = || || println!(\"hello world\");\n\n    let c = a();\n    c(); // hello world\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1529580263, "creation_date": 1529580263, "answer_id": 50967382, "question_id": 50967200, "link": "https://stackoverflow.com/questions/50967200/what-do-four-consecutive-vertical-lines-mean/50967382#50967382", "title": "What do four consecutive vertical lines mean?", "body": "<p>In Rust, <code>||</code> introduces a lambda (an unnamed function).</p>\n\n<p>The arguments of the lambda are specified in between the two:</p>\n\n<ul>\n<li><code>|a, b| a + b</code>: a lambda taking 2 arguments <code>a</code> and <code>b</code> and returning their sum,</li>\n<li><code>|| println!(\"Hello, World\")</code>: a lambda taking no argument and printing \"Hello, World!\".</li>\n</ul>\n\n<p>Since the body of a lambda is just an expression, it can be another lambda:</p>\n\n<ul>\n<li><code>|| || println!(\"Hello, World\")</code>: a lambda taking no argument and returning a lambda taking no argument and printing \"Hello, World!\".</li>\n</ul>\n\n<p>Therefore, <code>|| || Context {}</code> is simply:</p>\n\n<ul>\n<li>a lambda taking no argument and returning <code>|| Context {}</code>,</li>\n<li>which is a lambda taking no argument and returning an instance of <code>Context</code>.</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 3, "last_activity_date": 1529585827, "last_edit_date": 1529585827, "creation_date": 1529580293, "answer_id": 50967392, "question_id": 50967200, "link": "https://stackoverflow.com/questions/50967200/what-do-four-consecutive-vertical-lines-mean/50967392#50967392", "title": "What do four consecutive vertical lines mean?", "body": "<p>According to <a href=\"https://github.com/pingcap/tikv/blob/1a3f1badd17c50730132249a4408bb97970dfbfe/src/server/readpool/mod.rs#L56\" rel=\"nofollow noreferrer\">that function's source</a> this pattern is called a closure builder:</p>\n\n<blockquote>\n  <p>// Rust does not support copying closures (RFC 2132) so that we need a\n  <strong>closure builder</strong>. </p>\n  \n  <p>// TODO: Use a single closure once RFC 2132 is\n  implemented.</p>\n</blockquote>\n\n<p>The related code fragments reveal that this argument is <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow noreferrer\">a function or closure</a> returning another one, both without arguments (which <code>|| || Context {}</code> adheres to):</p>\n\n<pre><code>// src/server/readpool/mod.rs\n\npub fn new&lt;F, CF&gt;(name_prefix: &amp;str, \n                  config: &amp;Config, \n                  context_factory_builder: F // this is the argument in question\n) -&gt; Self where\n    F: futurepool::Factory&lt;CF&gt;,\n    CF: futurepool::Factory&lt;T&gt;\n\n// src/util/futurepool.rs:\n\npub trait Factory&lt;T&gt; {\n    fn build(&amp;self) -&gt; T;\n}\n\nimpl&lt;T, F&gt; Factory&lt;T&gt; for F\n    where F: Fn() -&gt; T // a function taking no arguments\n{\n    fn build(&amp;self) -&gt; T {\n        self()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 8995563, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-TTjS4P2m0P8/AAAAAAAAAAI/AAAAAAAAACY/1aPlWWmFUb4/photo.jpg?sz=128", "display_name": "Lion Li", "link": "https://stackoverflow.com/users/8995563/lion-li"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 415, "favorite_count": 0, "answer_count": 3, "score": 6, "last_activity_date": 1529585827, "creation_date": 1529579762, "last_edit_date": 1529580043, "question_id": 50967200, "link": "https://stackoverflow.com/questions/50967200/what-do-four-consecutive-vertical-lines-mean", "title": "What do four consecutive vertical lines mean?", "body": "<p>In the following code snippet:</p>\n\n<pre><code>let read_pool = ReadPool::new(\n    \"readpool\",\n    &amp;Config::default_for_test(),\n    || || Context {}\n);\n</code></pre>\n\n<p>What are the four vertical lines <code>|| ||</code>?</p>\n"}, {"tags": ["macros", "rust", "warnings", "static-analysis"], "answers": [{"comments": [{"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1529577013, "post_id": 50964330, "comment_id": 88928845, "body": "That disables all deprecated warnings in the file though right? So there&#39;s no way to control warnings for macros?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1529577113, "post_id": 50964330, "comment_id": 88928907, "body": "@Timmmm not outside of the macros&#39; definitions, at least none that I know of."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 1, "last_activity_date": 1529571164, "creation_date": 1529571164, "answer_id": 50964330, "question_id": 50963140, "link": "https://stackoverflow.com/questions/50963140/how-can-i-silence-rust-warnings-in-macros-from-external-crates/50964330#50964330", "title": "How can I silence Rust warnings in macros from external crates?", "body": "<p>It appears that this had <a href=\"https://github.com/kbknapp/clap-rs/commit/b04a3b9ac97925a64c1dce6981359f7796cd9fc2#diff-e1576943a5907b15388ab726037ebdb3\" rel=\"nofollow noreferrer\">already</a> been <a href=\"https://github.com/kbknapp/clap-rs/issues/1274\" rel=\"nofollow noreferrer\">fixed</a> and should not be an issue in the next release of <code>clap</code>. Until then you can silence the warning with <code>#![allow(deprecated)]</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1529587306, "creation_date": 1529587306, "answer_id": 50969644, "question_id": 50963140, "link": "https://stackoverflow.com/questions/50963140/how-can-i-silence-rust-warnings-in-macros-from-external-crates/50969644#50969644", "title": "How can I silence Rust warnings in macros from external crates?", "body": "<p>No, this is not possible yet. <a href=\"https://github.com/rust-lang/rust/issues/48855\" rel=\"nofollow noreferrer\">Add macro checks to lints (issue #48855)</a> is open to add such functionality.</p>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 505, "favorite_count": 0, "accepted_answer_id": 50969644, "answer_count": 2, "score": 2, "last_activity_date": 1529587381, "creation_date": 1529567369, "last_edit_date": 1529587381, "question_id": 50963140, "link": "https://stackoverflow.com/questions/50963140/how-can-i-silence-rust-warnings-in-macros-from-external-crates", "title": "How can I silence Rust warnings in macros from external crates?", "body": "<p>Using <code>clap</code>'s <code>arg_enum</code> macro I get this warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: use of deprecated item 'std::ascii::AsciiExt': use inherent methods instead\n  --&gt; src/main.rs:37:1\n   |\n37 | / arg_enum!{\n38 | |     #[derive(Debug)]\n39 | |     pub enum Operation {\n40 | |         Add,\n...  |\n47 | |     }\n48 | | }\n   | |_^\n   |\n   = note: #[warn(deprecated)] on by default\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>How can I silence it? I've tried putting <code>#[allow(deprecated)]</code> before the <code>arg_enum!</code> and before the <code>extern crate clap;</code> but neither had any effect.</p>\n"}, {"tags": ["syntax", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2295, "user_id": 1216956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb3ad7aa63b5b003fb9a8935c739023c?s=128&d=identicon&r=PG", "display_name": "FauxFaux", "link": "https://stackoverflow.com/users/1216956/fauxfaux"}, "edited": false, "score": 2, "creation_date": 1529590940, "post_id": 50969412, "comment_id": 88938203, "body": "I&#39;m glad this is only a duplicate of every <i>other</i> Rust forum, and not StackOverflow&#39;s. Thanks for the links, and the destructure suggestion."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2295, "user_id": 1216956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb3ad7aa63b5b003fb9a8935c739023c?s=128&d=identicon&r=PG", "display_name": "FauxFaux", "link": "https://stackoverflow.com/users/1216956/fauxfaux"}, "edited": false, "score": 0, "creation_date": 1529596104, "post_id": 50969412, "comment_id": 88941745, "body": "@FauxFaux: I&#39;ve had similar murderous thoughts with match statements, like <code>match optionT { Some(t) =&gt; Some(makeItU(t)), other =&gt; other }</code> which complains that <code>other</code> is not of type <code>Option&lt;U&gt;</code> even though &quot;None&quot; is the same atom in both cases; or similarly with differing lifetimes... when the remaining variants are all <code>&#39;static</code>. Hopefully it&#39;s the kind of papercuts which will get better in time :)"}, {"owner": {"reputation": 2295, "user_id": 1216956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb3ad7aa63b5b003fb9a8935c739023c?s=128&d=identicon&r=PG", "display_name": "FauxFaux", "link": "https://stackoverflow.com/users/1216956/fauxfaux"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1529665873, "post_id": 50969412, "comment_id": 88967878, "body": "@MatthieuM. That doesn&#39;t look like it would be covered by any of those existing RFCs, might be worth raising at a higher level, if you want it fixed? For the <code>Option</code> case, I suspect people will tell you to use <code>map</code>, or explicitly <code>None =&gt; None</code>, both of which would work."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2295, "user_id": 1216956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb3ad7aa63b5b003fb9a8935c739023c?s=128&d=identicon&r=PG", "display_name": "FauxFaux", "link": "https://stackoverflow.com/users/1216956/fauxfaux"}, "edited": false, "score": 0, "creation_date": 1529668610, "post_id": 50969412, "comment_id": 88969315, "body": "@FauxFaux: I am not sure if there is any desire to &quot;solve&quot; the issue. It basically requires path-dependent typing which is a non-trivial addition to any language. As for Option, I merely used it for demonstration as it is familiar; on custom enums there is no <code>map</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1605128485, "last_edit_date": 1605128485, "creation_date": 1529586589, "answer_id": 50969412, "question_id": 50962279, "link": "https://stackoverflow.com/questions/50962279/is-there-syntax-for-moving-fields-between-similar-structs/50969412#50969412", "title": "Is there syntax for moving fields between similar structs?", "body": "<blockquote>\n<p>Is there syntax for moving fields between similar structs?</p>\n</blockquote>\n<p>No. There is no such syntax. The current implementation of &quot;struct update&quot; (previously called &quot;functional record update&quot;) syntax only allows the exact same type.</p>\n<blockquote>\n<p>Is there better syntax for this somewhere, or a better way to implement these map-like methods for non-trivial structs?</p>\n</blockquote>\n<p>No. The only suggestion I have is to destructure your original struct and then recreate it. You also don't need the <code>::&lt;R&gt;</code> as it's inferred.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let Foo { a, b, c, d, e, t } = q;\nlet r = Foo {\n    a,\n    b,\n    c,\n    d,\n    e,\n    t: fixup(t),\n};\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/2528\" rel=\"nofollow noreferrer\">RFC 2528 \u2014 Type-changing struct update syntax</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/47741\" rel=\"nofollow noreferrer\">Issue #47741 \u2014 Struct initializer <code>..x</code> syntax should work for other structs with structurally equal subset of fields</a></li>\n<li>Similar issue: <a href=\"https://users.rust-lang.org/t/struct-update-syntax-for-different-types/15636\" rel=\"nofollow noreferrer\">Struct update syntax for different types</a></li>\n</ul>\n"}], "owner": {"reputation": 2295, "user_id": 1216956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb3ad7aa63b5b003fb9a8935c739023c?s=128&d=identicon&r=PG", "display_name": "FauxFaux", "link": "https://stackoverflow.com/users/1216956/fauxfaux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "accepted_answer_id": 50969412, "answer_count": 1, "score": 6, "last_activity_date": 1605128485, "creation_date": 1529564415, "last_edit_date": 1529586679, "question_id": 50962279, "link": "https://stackoverflow.com/questions/50962279/is-there-syntax-for-moving-fields-between-similar-structs", "title": "Is there syntax for moving fields between similar structs?", "body": "<p>I have a big struct <code>Foo&lt;Q&gt;</code>, and want to <code>map</code> it into a <code>Foo&lt;R&gt;</code> where most of the fields don't need updating. I was hoping to use the <code>..</code> operator for this, but it is a type error, as they are technically different types.</p>\n\n<p>That is, given:</p>\n\n<pre><code>struct Foo&lt;T&gt; {\n    a: usize,\n    b: usize,\n    t: T,\n}\n\nlet q: Foo&lt;Q&gt;;\n</code></pre>\n\n<p>I would like to write:</p>\n\n<pre><code>let r = Foo::&lt;R&gt; {\n    t: fixup(q.t),\n    ..q\n};\n</code></pre>\n\n<p>But, this gives me a type error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n   |\n 3 |         ..q\n   |           ^ expected struct `R`, found struct `Q`\n   |\n   = note: expected type `Foo&lt;R&gt;`\n              found type `Foo&lt;Q&gt;`\n</code></pre>\n\n<p>The type error is reasonable, as the types can be thought of as templates in this case.</p>\n\n<p>The only workaround I have is to write out the transformation in full, which gets ugly quite quickly:</p>\n\n<pre><code>let r = Foo::&lt;R&gt; {\n    a: q.a,\n    b: q.b,\n    t: fixup(q.t),\n};\n</code></pre>\n\n<p>Here's <a href=\"http://play.rust-lang.org/?gist=31e08cf60d480dee87beb61f818d1167&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">a playground with a full test-case</a>, including the compile error and the long-form.</p>\n\n<hr>\n\n<p>Is there better syntax for this somewhere, or a better way to implement these <code>map</code>-like methods for non-trivial structs?</p>\n"}, {"tags": ["linked-list", "rust", "time-complexity"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1529579573, "post_id": 50960345, "comment_id": 88930459, "body": "Can someone explain the downvotes please (two downvotes at the time I wrote this comment)? This question seems absolutely fine to me."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1529585606, "post_id": 50960345, "comment_id": 88934366, "body": "<i>but I haven&#39;t got the chance</i> \u2014 so you haven&#39;t put <i>any</i> effort of your own into figuring out the answer on your own?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1529589835, "post_id": 50960345, "comment_id": 88937320, "body": "@LukasKalbertodt Not a downvoter, but I think there are two main reasons: first, the OP does not say why they believe it to be possible to implement <code>split_off</code> in O(1) time, so it&#39;s not possible to guess at the source of the confusion; and second, the question is worded as if it&#39;s blaming Rust&#39;s standard library for an inefficient implementation when in reality this is just how all linked lists work."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1529589974, "post_id": 50960345, "comment_id": 88937426, "body": "I think if the question had been phrased &quot;I have heard that splitting a linked list is an O(1) operation; why is <code>split_off</code> O(n)?&quot; it would probably not have been downvoted. (And it could have been tagged <a href=\"https://stackoverflow.com/questions/tagged/language-agnostic\">language-agnostic</a> to boot)"}], "answers": [{"tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": false, "score": 8, "last_activity_date": 1529624883, "last_edit_date": 1529624883, "creation_date": 1529555935, "answer_id": 50960489, "question_id": 50960345, "link": "https://stackoverflow.com/questions/50960345/why-is-splitting-a-rusts-stdcollectionslinkedlist-on/50960489#50960489", "title": "Why is splitting a Rust&#39;s std::collections::LinkedList O(n)?", "body": "<p>Maybe I'm misunderstanding your question, but in a linked list, the links of each node have to be followed to proceed to the next node. If you want to get to the third node, you start at the first, follow its link to the second, then finally arrive at the third. </p>\n\n<p>This traversal's complexity is proportional to the target node index <em>n</em> because <em>n</em> nodes are processed/traversed, so it's a linear O(<em>n</em>) operation, not a constant time O(1) operation. The part where the list is \"split off\" is of course constant time, but the overall split operation's complexity is dominated by the dominant term O(<em>n</em>) incurred by getting to the split-off point node before the split can even be made.</p>\n\n<p>One way in which it could be O(1) would be if a pointer existed to the node after which the list is split off, but that is different from specifying a target node index. Alternatively, an index could be kept mapping the node index to the corresponding node pointer, but it would be extra space and processing overhead in keeping the index updated in sync with list operations.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1529588006, "post_id": 50962409, "comment_id": 88935980, "body": "The <a href=\"https://doc.rust-lang.org/std/collections/index.html#sequences\" rel=\"nofollow noreferrer\">documentation for <code>std::collections</code></a> does have the more precise O(min(i, n-i))."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1529564888, "creation_date": 1529564888, "answer_id": 50962409, "question_id": 50960345, "link": "https://stackoverflow.com/questions/50960345/why-is-splitting-a-rusts-stdcollectionslinkedlist-on/50962409#50962409", "title": "Why is splitting a Rust&#39;s std::collections::LinkedList O(n)?", "body": "<blockquote>\n<pre><code>pub fn split_off(&amp;mut self, at: usize) -&gt; LinkedList&lt;T&gt;\n</code></pre>\n  \n  <p>Splits the list into two at the given index. Returns everything after the given index, including the index.</p>\n  \n  <p>This operation should compute in O(n) time.</p>\n</blockquote>\n\n<p>The documentation is either:</p>\n\n<ul>\n<li>unclear, if <code>n</code> is supposed to be the index,</li>\n<li>pessimistic, if <code>n</code> is supposed to be the length of the list (the usual meaning).</li>\n</ul>\n\n<p>The proper complexity, as can be seen in the implementation, is O(min(at, n - at)) (whichever is smaller). Since <code>at</code> must be smaller than <code>n</code>, the documentation is correct that O(n) is a bound on the complexity (reached for <code>at = n / 2</code>), however such a large bound is unhelpful.</p>\n\n<p>That is, the fact that <code>list.split_off(5)</code> takes the same time if <code>list.len()</code> is 10 or 1,000,000 is quite important!</p>\n\n<p>As to why this complexity, this is an inherent consequence of the structure of doubly-linked list. There is no O(1) indexing operation in a linked-list, after all. The operation implemented in C, C++, C#, D, F#, ... would have the exact same complexity.</p>\n\n<p><em>Note: I encourage you to write a pseudo-code implementation of a linked-list with the <code>split_off</code> operation; you'll realize this is the best you can get without altering the data-structure to be something else.</em></p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1550704941, "last_edit_date": 1550704941, "creation_date": 1529579478, "answer_id": 50967094, "question_id": 50960345, "link": "https://stackoverflow.com/questions/50960345/why-is-splitting-a-rusts-stdcollectionslinkedlist-on/50967094#50967094", "title": "Why is splitting a Rust&#39;s std::collections::LinkedList O(n)?", "body": "<p>The method <code>LinkedList::split_off(&amp;mut self, at: usize)</code> first has to traverse the list from the start (or the end) to the position <code>at</code>, which takes O(min(<code>at</code>, n - <code>at</code>)) time. The actual split off is a constant time operation (as you said).  And since this <em>min()</em> expression is confusing, we just replace it by <code>n</code> which is legal. Thus: O(n).</p>\n\n<hr>\n\n<p>Why was the method designed like that? The problem goes deeper than this particular method: <strong>most of the <code>LinkedList</code> API in the standard library is not really useful.</strong> </p>\n\n<p>Due to its cache unfriendliness, a linked list is often a bad choice to store sequential data. But linked lists have a few nice properties which make them the best data structure for a few, rare situations. These nice properties include:</p>\n\n<ul>\n<li>Inserting an element in the middle in O(1), <em>if you already have a pointer to that position</em></li>\n<li>Removing an element from the middle in O(1), <em>if you already have a pointer to that position</em></li>\n<li>Splitting the list into two lists at an arbitrary position in O(1), <em>if you already have a pointer to that position</em></li>\n</ul>\n\n<p>Notice anything? The linked list is designed for situations where you already have a pointer to the position that you want to do stuff at. </p>\n\n<p>Rust's <code>LinkedList</code>, like many others, just store a pointer to the start and end. To have a pointer to an element inside the linked list, you need something like an <code>Iterator</code>. In our case, that's <a href=\"https://doc.rust-lang.org/stable/std/collections/linked_list/struct.IterMut.html\" rel=\"nofollow noreferrer\"><code>IterMut</code></a>. An iterator over a collection can function like a pointer to a specific element and can be advanced carefully (i.e. not with a <code>for</code> loop). And in fact, there is <code>IterMut::insert_next</code> which allows you to insert an element in the middle of the list in O(1). Hurray!</p>\n\n<p>But this method is unstable. And methods to remove the current element or to split the list off at that position are missing. Why? Because of the vicious circle that is:</p>\n\n<ul>\n<li><code>LinkedList</code> lacks almost all features that make linked lists useful at all</li>\n<li>Thus (nearly) everyone recommends not to use it </li>\n<li><strong>Thus (nearly) no one uses <code>LinkedList</code></strong></li>\n<li><strong>Thus (nearly) no one cares about improving it</strong></li>\n<li>Goto 1</li>\n</ul>\n\n<p>Please note that are a few brave souls occasionally trying to improve the situations. There is <a href=\"https://github.com/rust-lang/rust/issues/27794\" rel=\"nofollow noreferrer\">the tracking issue about <code>insert_next</code></a>, where people argue that <code>Iterator</code> might be the wrong concept to perform these O(1) operations and that we want something like a \"cursor\" instead. And <a href=\"https://github.com/rust-lang/rust/issues/39148#issuecomment-273612068\" rel=\"nofollow noreferrer\">here</a> someone suggested a bunch of methods to be added to <code>IterMut</code> (including <code>cut</code>!).</p>\n\n<p>Now someone just has to write a nice RFC and someone needs to implement it. Maybe then <code>LinkedList</code> won't be nearly useless anymore.</p>\n\n<p><strong>Edit 2018-10-25</strong>: someone <a href=\"https://github.com/rust-lang/rfcs/pull/2570\" rel=\"nofollow noreferrer\">did write an RFC</a>. Let's hope for the best! </p>\n\n<p><strong>Edit 2019-02-21</strong>: the RFC was accepted! <a href=\"https://github.com/rust-lang/rust/issues/58533\" rel=\"nofollow noreferrer\">Tracking issue</a>.</p>\n"}], "owner": {"reputation": 141, "user_id": 2687651, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YMBDF.png?s=128&g=1", "display_name": "Jos&#233;", "link": "https://stackoverflow.com/users/2687651/jos%c3%a9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 641, "favorite_count": 0, "accepted_answer_id": 50967094, "answer_count": 3, "score": 3, "last_activity_date": 1550704941, "creation_date": 1529554964, "last_edit_date": 1529585574, "question_id": 50960345, "link": "https://stackoverflow.com/questions/50960345/why-is-splitting-a-rusts-stdcollectionslinkedlist-on", "title": "Why is splitting a Rust&#39;s std::collections::LinkedList O(n)?", "body": "<p>The <code>.split_off</code> method on <code>std::collections::LinkedList</code> is described as having a O(n) time complexity. From the (<a href=\"https://doc.rust-lang.org/std/collections/struct.LinkedList.html#method.split_off\" rel=\"noreferrer\">docs</a>):</p>\n\n<blockquote>\n<pre><code>pub fn split_off(&amp;mut self, at: usize) -&gt; LinkedList&lt;T&gt;\n</code></pre>\n  \n  <p>Splits the list into two at the given index. Returns everything after the given index, including the index.</p>\n  \n  <p>This operation should compute in O(n) time.</p>\n</blockquote>\n\n<p>Why not O(1)?</p>\n\n<p>I know that linked lists are not trivial in Rust. There are several resources going into the how's and why's like <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"noreferrer\">this book</a> and <a href=\"https://rcoh.me/posts/rust-linked-list-basically-impossible/\" rel=\"noreferrer\">this article</a> among several others, but I haven't got the chance to dive into those or the standard library's source code yet.</p>\n\n<p>Is there a concise explanation about the extra work needed when splitting a linked list in (safe) Rust?</p>\n\n<p>Is this the only way? And if not why was this implementation chosen?</p>\n"}]