[{"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547680239, "post_id": 54225766, "comment_id": 95279574, "body": "why don&#39;t you like static dispatch ????"}, {"owner": {"reputation": 302, "user_id": 7618662, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FRMsr.jpg?s=128&g=1", "display_name": "ThatOneDeveloper", "link": "https://stackoverflow.com/users/7618662/thatonedeveloper"}, "edited": false, "score": 3, "creation_date": 1547680377, "post_id": 54225766, "comment_id": 95279624, "body": "Static dispatch means that you can&#39;t use it as a trait object."}], "answers": [{"comments": [{"owner": {"reputation": 4311, "user_id": 98528, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/835b9fab8784c5dca07b2165ac8b3df4?s=128&d=identicon&r=PG", "display_name": "akavel", "link": "https://stackoverflow.com/users/98528/akavel"}, "edited": false, "score": 0, "creation_date": 1547712759, "post_id": 54227198, "comment_id": 95287908, "body": "Thanks! The 2nd method also still doesn&#39;t seem to really improve anything on my 1st criterion, a.k.a. &quot;ugliness&quot;, anyway \u2014 i.e. still doesn&#39;t seem to allow to pass a simple <code>Vec&lt;String&gt;</code> or <code>[&amp;str]</code> as <code>paths</code> without some ornate and convoluted conversions... (although arguably maybe slightly easier to invent than the <code>.map(|s| &amp;**s)</code>?)"}, {"owner": {"reputation": 302, "user_id": 7618662, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FRMsr.jpg?s=128&g=1", "display_name": "ThatOneDeveloper", "link": "https://stackoverflow.com/users/7618662/thatonedeveloper"}, "reply_to_user": {"reputation": 4311, "user_id": 98528, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/835b9fab8784c5dca07b2165ac8b3df4?s=128&d=identicon&r=PG", "display_name": "akavel", "link": "https://stackoverflow.com/users/98528/akavel"}, "edited": false, "score": 0, "creation_date": 1547739001, "post_id": 54227198, "comment_id": 95303007, "body": "You&#39;re right, unfortunately this is the only way to pass a dynamic <code>AsRef</code> trait object. It has to be represented by a trait object behind a box pointer. Otherwise, you&#39;d have to use generics."}, {"owner": {"reputation": 1798, "user_id": 105403, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77fec2b94c481ad3d2b2135b1f07ef5f?s=128&d=identicon&r=PG", "display_name": "Marco Lazzeri", "link": "https://stackoverflow.com/users/105403/marco-lazzeri"}, "edited": false, "score": 0, "creation_date": 1607448915, "post_id": 54227198, "comment_id": 115273897, "body": "Thanks! (1) worked for me. Although I&#39;m not sure yet why I was not able to replace &quot;Iterator&quot; with &quot;IntoIter&quot;."}], "tags": [], "owner": {"reputation": 302, "user_id": 7618662, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FRMsr.jpg?s=128&g=1", "display_name": "ThatOneDeveloper", "link": "https://stackoverflow.com/users/7618662/thatonedeveloper"}, "is_accepted": false, "score": 4, "last_activity_date": 1547683358, "creation_date": 1547683358, "answer_id": 54227198, "question_id": 54225766, "link": "https://stackoverflow.com/questions/54225766/how-to-write-a-trait-method-taking-an-iterator-of-strings-avoiding-monomorphiza/54227198#54227198", "title": "How to write a trait method taking an iterator of strings, avoiding monomorphization (static dispatch)?", "body": "<p>I recommend you read <a href=\"https://stackoverflow.com/questions/42620022/why-does-a-generic-method-inside-a-trait-require-trait-object-to-be-sized/42620873\">this question</a>, which has lots of good information about why you can't use generics with trait methods if you want to use them as objects.</p>\n\n<p>The short answer is that you can't do what you're trying to do: have a function that takes in an iterator of any type (which is an associated generic function) and still have the trait be object safe.</p>\n\n<p>There are a few tricks you <em>can</em> use, though, that will let you manipulate string iterators with a trait object. I'll go over each method.</p>\n\n<h2>1. Use multiple methods in your trait</h2>\n\n<p>Rust only has two kinds of strings: <code>String</code> and <code>&amp;str</code>. As you've stated in your answer, you want to work with both. In this case, all you need to do is make two different methods:</p>\n\n<pre><code>pub trait Store {\n    fn query_valid_paths_str(&amp;mut self, paths: &amp;mut dyn Iterator&lt;Item = &amp;str&gt;) -&gt; Vec&lt;String&gt;;\n    fn query_valid_paths_string(&amp;mut self, paths: &amp;mut dyn Iterator&lt;Item = String&gt;) -&gt; Vec&lt;String&gt;;\n}\n</code></pre>\n\n<p>Now, this gets counter-intuitive at a certain point, if you have too many types you're dealing with. But if there's only two, this is the most straightforward option.</p>\n\n<p>If you're wanting to use <code>IntoIterator</code> instead, the function signatures will look like this:</p>\n\n<pre><code>pub trait Store {\n    fn query_valid_paths_str(&amp;mut self, paths: &amp;mut dyn IntoIterator&lt;IntoIter = IntoIter&lt;&amp;str&gt;, Item = &amp;str&gt;) -&gt; Vec&lt;String&gt;;\n    fn query_valid_paths_string(&amp;mut self, paths: &amp;mut dyn IntoIterator&lt;IntoIter = IntoIter&lt;String&gt;, Item = String&gt;) -&gt; Vec&lt;String&gt;;\n}\n\n</code></pre>\n\n<h2>2. Use <code>Box</code> and dynamic dispatch</h2>\n\n<p>This approach is much more involved, and probably not worth the effort, but I'll put it here as a proof of concept.</p>\n\n<pre><code>pub trait Store {\n    fn query_valid_paths(&amp;mut self, paths: &amp;mut dyn Iterator&lt;Item = &amp;Box&lt;dyn AsRef&lt;str&gt;&gt;) -&gt; Vec&lt;String&gt;;\n}\n</code></pre>\n\n<p>Here, <code>paths</code> is an iterator over a box which owns an <code>AsRef&lt;str&gt;</code> trait object.</p>\n\n<p>This is (as far as I know) the only way to create a truly polymorphic solution. But at what cost? For this to work, you not only need to explicitly declare the list you passed in as a <code>Vec&lt;Box&lt;AsRef&lt;str&gt;&gt;&gt;</code>, it adds a lot of overhead with dynamic dispatch from the box pointers. Just to show how cumbersome this can be:</p>\n\n<pre><code>let mut str_vec: Vec&lt;Box&lt;AsRef&lt;str&gt;&gt;&gt; = vec!(Box::new(\"string one\"), Box::new(\"string two\".to_string()));\nsome_store_object.query_valid_paths(&amp;mut str_vec.iter());\n</code></pre>\n\n<p>I do not recommend this method unless you absolutely need this functionality. Use the first method instead.</p>\n\n<p>If you do use this method, but want to use it with <code>IntoIterator</code>, it would look like this:</p>\n\n<pre><code>pub trait Store {\n    fn query_valid_paths(&amp;mut self, paths: &amp;mut dyn IntoIterator&lt;IntoIter = IntoIter&lt;Box&lt;dyn AsRef&lt;str&gt;&gt;&gt;, Item = Box&lt;dyn AsRef&lt;str&gt;&gt;&gt;) -&gt; Vec&lt;String&gt;;\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 302, "user_id": 7618662, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FRMsr.jpg?s=128&g=1", "display_name": "ThatOneDeveloper", "link": "https://stackoverflow.com/users/7618662/thatonedeveloper"}, "edited": false, "score": 0, "creation_date": 1547742032, "post_id": 54227262, "comment_id": 95304772, "body": "I had no idea that you could use methods that only worked for sized traits on a boxed trait object. That&#39;s very interesting!"}], "tags": [], "owner": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "is_accepted": false, "score": 2, "last_activity_date": 1547737306, "last_edit_date": 1547737306, "creation_date": 1547683847, "answer_id": 54227262, "question_id": 54225766, "link": "https://stackoverflow.com/questions/54225766/how-to-write-a-trait-method-taking-an-iterator-of-strings-avoiding-monomorphiza/54227262#54227262", "title": "How to write a trait method taking an iterator of strings, avoiding monomorphization (static dispatch)?", "body": "<p>I don't think there is a nice solution without static dispatch. But the docs for <a href=\"https://doc.rust-lang.org/error-index.html#method-references-the-self-type-in-its-arguments-or-return-type\" rel=\"nofollow noreferrer\">the error about trait objects with methods with generic parameters</a> actually provide a solution for this situation: </p>\n\n<p>First, you mark your method with <code>where Self: Sized</code> \u2013 this makes it unavailable in trait objects. Maybe you don't need that method in trait object context \u2013 then you're done here.</p>\n\n<p>If you need the method in trait object context, you can make it usable again via a sized type that contains your trait object e.g. <code>Box</code>:</p>\n\n<pre><code>struct MyStruct(i32);\n\npub trait Store {\n    fn len_of_first_str(&amp;self, paths: impl IntoIterator&lt;Item = impl AsRef&lt;str&gt;&gt;) -&gt; usize\n    where Self: Sized{\n        paths.into_iter().next().unwrap().as_ref().len()\n    }\n}\n\nimpl Store for Box&lt;dyn Store&gt;{}\n\nfn myfun(arg: Box&lt;dyn Store&gt;) -&gt; usize {\n    arg.len_of_first_str(vec![\"string\"])\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 0, "last_activity_date": 1547686706, "last_edit_date": 1547686706, "creation_date": 1547685588, "answer_id": 54227459, "question_id": 54225766, "link": "https://stackoverflow.com/questions/54225766/how-to-write-a-trait-method-taking-an-iterator-of-strings-avoiding-monomorphiza/54227459#54227459", "title": "How to write a trait method taking an iterator of strings, avoiding monomorphization (static dispatch)?", "body": "<p>Besides the <code>Box</code> approach, it is possible to define the generic in the trait definition. This method is limited by the type being implemented and uses static dispatch but your trait won't break the rules of object safety.</p>\n\n<pre><code>trait Store&lt;'a, I&gt;\nwhere\n    I: IntoIterator&lt;Item = &amp;'a str&gt;,\n{\n    fn query_valid_paths(&amp;mut self, iter: I) -&gt; Vec&lt;String&gt;;\n}\n\nimpl&lt;'a, I&gt; Store&lt;'a, I&gt; for ()\nwhere\n    I: IntoIterator&lt;Item = &amp;'a str&gt;,\n{\n    fn query_valid_paths(&amp;mut self, iter: I) -&gt; Vec&lt;String&gt; {\n        iter.into_iter().map(|x| x.to_string()).collect()\n    }\n}\n\n// Store is object safe\nstruct _Bar&lt;'a, I&gt; {\n    vec: Vec&lt;Box&lt;dyn Store&lt;'a, I&gt;&gt;&gt;,\n}\n\nfn main() {\n    let vec_of_strings = vec![\"one\", \"two\", \"three\"];\n    println!(\"{:?}\", ().query_valid_paths(vec_of_strings));\n}\n</code></pre>\n\n<p>To avoid taking ownership, you can use <code>vec_of_strings.iter().cloned()</code> instead.</p>\n"}], "owner": {"reputation": 4311, "user_id": 98528, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/835b9fab8784c5dca07b2165ac8b3df4?s=128&d=identicon&r=PG", "display_name": "akavel", "link": "https://stackoverflow.com/users/98528/akavel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 357, "favorite_count": 0, "answer_count": 3, "score": 8, "last_activity_date": 1547737306, "creation_date": 1547674589, "last_edit_date": 1547685655, "question_id": 54225766, "link": "https://stackoverflow.com/questions/54225766/how-to-write-a-trait-method-taking-an-iterator-of-strings-avoiding-monomorphiza", "title": "How to write a trait method taking an iterator of strings, avoiding monomorphization (static dispatch)?", "body": "<p>I want to define a trait that has a method operating on sequences of strings. At the same time, I want to avoid having generic methods, a.k.a. static dispatch, in the trait, so that I can use this trait as a trait object. The best solution I was given till now was to do it like below:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Store {\n    fn query_valid_paths(&amp;mut self, paths: &amp;mut dyn Iterator&lt;Item = &amp;str&gt;) -&gt; Vec&lt;String&gt;;\n}\n</code></pre>\n\n<p>Unfortunately, it's not perfect:</p>\n\n<ol>\n<li><p>It works out of the box only for iterators of <code>&amp;str</code>; for iterators of <code>String</code>, e.g. <code>Vec&lt;String&gt;</code>, I have to call it with the following magic <code>map</code> incantation, which is really ugly, and I'd never invent it as a newbie without help:</p>\n\n<pre><code>// `vec` is a std::vec::Vec&lt;String&gt;\nstore.query_valid_paths(&amp;mut vec.iter().map(|s| &amp;**s));\n</code></pre></li>\n<li><p>It takes an <code>Iterator</code>, but I'd love if I could take an <code>IntoIterator</code>. In other words, I'd like to be able to call it just like this:</p>\n\n<pre><code>store.query_valid_paths(&amp;vec);\n</code></pre></li>\n</ol>\n\n<p><strong>Is it possible?</strong></p>\n\n<h2>Failed Attempt 1</h2>\n\n<p>Based on a simpler <a href=\"https://stackoverflow.com/a/51758645/98528\">question about functions taking string iterators</a>, I'd imagine something like this could work:</p>\n\n<pre><code>pub trait Store {\n    fn query_valid_paths&lt;S&gt;(&amp;mut self, paths: impl IntoIterator&lt;Item = S&gt;) -&gt; Vec&lt;String&gt;\n    where\n        S: AsRef&lt;str&gt;;\n}\n</code></pre>\n\n<p>but this seems to make it a \"generic method\", triggering static dispatch...</p>\n\n<h2>Failed Attempt 2</h2>\n\n<p>I was suggested another idea on Rust discord, specifically:</p>\n\n<pre><code>pub trait Store {\n    fn query_valid_paths_inner(&amp;mut self, paths: &amp;mut dyn Iterator&lt;Item = &amp;str&gt;) -&gt; Vec&lt;String&gt;;\n}\n\nimpl dyn Store {\n    pub fn query_valid_paths&lt;'a&gt;(&amp;mut self, paths: impl IntoIterator&lt;Item = &amp;'a str&gt;) -&gt; Vec&lt;String&gt; {\n        let mut it = paths.into_iter();\n        self.query_valid_paths_inner(&amp;mut it)\n    }\n}\n</code></pre>\n\n<p>\u2014 but when I try to add <code>AsRef&lt;str&gt;</code> to it, I'm getting lifetime errors, and  cannot seem to make it work for both <code>String</code> and <code>&amp;str</code> iterators...</p>\n"}, {"tags": ["linux", "unix", "process", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547675596, "post_id": 54225763, "comment_id": 95277816, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/8665642/155423\">Why do I have to <code>wait()</code> for child processes?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/54225763/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547675630, "post_id": 54225763, "comment_id": 95277830, "body": "TL;DR: <code>nix::sys::wait::WaitPidFlag::WNOHANG</code>"}, {"owner": {"reputation": 801, "user_id": 1544053, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f48d3b9d83ec936e5167d76c5f211596?s=128&d=identicon&r=PG", "display_name": "Xk0nSid", "link": "https://stackoverflow.com/users/1544053/xk0nsid"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547676480, "post_id": 54225763, "comment_id": 95278194, "body": "@Shepmaster You&#39;re right the answer does solve my problem. I need to install a <code>SIGCHLD</code> handler and do a <code>waitpid</code> with <code>WNOHANG</code> option. Thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547676933, "post_id": 54225763, "comment_id": 95278365, "body": "do you really need the signal handler if you are just going to check some later time?"}, {"owner": {"reputation": 801, "user_id": 1544053, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f48d3b9d83ec936e5167d76c5f211596?s=128&d=identicon&r=PG", "display_name": "Xk0nSid", "link": "https://stackoverflow.com/users/1544053/xk0nsid"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547678062, "post_id": 54225763, "comment_id": 95278850, "body": "I&#39;m trying to reap zombie processes as soon as possible. Because it&#39;s possible that my server will spawing a descent amount of processes and I also need to keep a log of which processes exited with which exit status. I think signal handler would be good choice for this. Is there an alternative way to do the same?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547678320, "post_id": 54225763, "comment_id": 95278935, "body": "Nah, if you need to be notified immediately, a signal handler makes sense, they are just pains to do safely. I\u2019d probably be lazy and spin up a separate thread and poll for children every time period."}, {"owner": {"reputation": 801, "user_id": 1544053, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f48d3b9d83ec936e5167d76c5f211596?s=128&d=identicon&r=PG", "display_name": "Xk0nSid", "link": "https://stackoverflow.com/users/1544053/xk0nsid"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547795136, "post_id": 54225763, "comment_id": 95322376, "body": "@Shepmaster You were right. Spawning a separate thread and reaping zombies every time period is much easier and cleaner than implementing signal handlers. I&#39;ve implemented it and it works great. Thanks for the support."}], "owner": {"reputation": 801, "user_id": 1544053, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f48d3b9d83ec936e5167d76c5f211596?s=128&d=identicon&r=PG", "display_name": "Xk0nSid", "link": "https://stackoverflow.com/users/1544053/xk0nsid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "closed_date": 1547687177, "answer_count": 0, "score": 0, "last_activity_date": 1547675477, "creation_date": 1547674576, "last_edit_date": 1547675477, "question_id": 54225763, "link": "https://stackoverflow.com/questions/54225763/how-do-i-asynchronously-wait-for-child-processes-after-forking-them", "closed_reason": "Duplicate", "title": "How do I asynchronously wait for child processes after forking them?", "body": "<p>I'm writing a server in Rust which forks multiple processes in a loop and runs <code>execv</code>. The forked processes exit properly, but I'm seeing <code>&lt;defunct&gt;</code> entries in the process table for all child processes.</p>\n\n<p>I want to get exit statuses of those child processes without blocking my main loop. If I fork and do a <code>wait</code> the loop will block. Is there a way to handle this in an asynchronous manner?</p>\n\n<p>I'm using the <a href=\"https://docs.rs/nix/0.13.0/nix/\" rel=\"nofollow noreferrer\">nix crate</a> for forking and execv:</p>\n\n<pre><code>loop {\n    match fork() {\n        Ok(ForkResult::Child) =&gt; {\n            // run execv here\n        }\n        Ok(ForkResult::Parent { child_pid }) =&gt; {\n            // delegate task for wait\n            // and continue with loop\n        }\n        Err(_) =&gt; {\n            // do some error reporting here\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1547670262, "post_id": 54224706, "comment_id": 95275443, "body": "Please produce a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Specifically &quot;fails&quot; is a very poor diagnostic; a copy/paste of the output you get and how it differs from what you&#39;d like would be a big improvement."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1547670972, "post_id": 54224706, "comment_id": 95275771, "body": "@loganfsmyth it&#39;s not a native Rust library, but a binding over a C library, it hasn&#39;t been updated for 3 years, and its website&#39;s domain is for sale. I&#39;d say this crate should be avoided now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547671062, "post_id": 54224706, "comment_id": 95275816, "body": "May I suggest my own crate <a href=\"https://docs.rs/cupid/0.6.1/cupid/\" rel=\"nofollow noreferrer\">cupid</a> then? ^_^"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547671153, "post_id": 54224706, "comment_id": 95275848, "body": "Welcome to Stack Overflow! Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54224706/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1547674563, "post_id": 54224706, "comment_id": 95277365, "body": "@mcarton Ha, I copied the link without looking close enough, meant to link to Shepmaster&#39;s"}, {"owner": {"reputation": 3573, "user_id": 3142971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GvXzQ.png?s=128&g=1", "display_name": "Steampunkery", "link": "https://stackoverflow.com/users/3142971/steampunkery"}, "edited": false, "score": 1, "creation_date": 1547696343, "post_id": 54224706, "comment_id": 95282813, "body": "Hey, I&#39;m trying to fix your code up. What error type are you using? Seems like a custom error because <code>std::error::Error</code> is not working and neither is <code>std::io::Error</code>."}, {"owner": {"reputation": 49, "user_id": 10922157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e04e1786a93c727df1eb3fe66a5ad755?s=128&d=identicon&r=PG&f=1", "display_name": "Rusty_Wolf", "link": "https://stackoverflow.com/users/10922157/rusty-wolf"}, "edited": false, "score": 0, "creation_date": 1547731224, "post_id": 54224706, "comment_id": 95298162, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ff88e7d7a331f1c57c10498359a4222f\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 49, "user_id": 10922157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e04e1786a93c727df1eb3fe66a5ad755?s=128&d=identicon&r=PG&f=1", "display_name": "Rusty_Wolf", "link": "https://stackoverflow.com/users/10922157/rusty-wolf"}, "edited": false, "score": 0, "creation_date": 1547731363, "post_id": 54224706, "comment_id": 95298246, "body": "I Apologize for my poor form everyone! This is my first post on stack overflow and I really appreciate how helpful you all have been. Cupid is a really cool crate, I had not heard of it before now. I see how I can get the name of the CPU but is there a way to get the number of physical and logical cores as well?"}], "answers": [{"comments": [{"owner": {"reputation": 49, "user_id": 10922157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e04e1786a93c727df1eb3fe66a5ad755?s=128&d=identicon&r=PG&f=1", "display_name": "Rusty_Wolf", "link": "https://stackoverflow.com/users/10922157/rusty-wolf"}, "edited": false, "score": 0, "creation_date": 1547732509, "post_id": 54229117, "comment_id": 95298862, "body": "Thank you so much for your help! I see where I messed up. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ff88e7d7a331f1c57c10498359a4222f\" rel=\"nofollow noreferrer\">This is what I was working with earlier btw.</a> Apologies for lack of specificity. This is my first time using stackoverflow."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547737359, "post_id": 54229117, "comment_id": 95301868, "body": "Why go out of your way to use hashbrown? I doubt that the performance is going to matter in this case, it complicates understanding, and hashbrown is likely to be made into the standard library hashmap implementation anyway."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547737492, "post_id": 54229117, "comment_id": 95301950, "body": "This code has its own small issues. Calling <code>next</code> multiple times without checking for <code>None</code> (and not fusing the iterator); needless <code>unwrap</code>s; maybe more."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547738039, "post_id": 54229117, "comment_id": 95302343, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=81fb60d7019db39198f0368ea9613d1c\" rel=\"nofollow noreferrer\">Some changes</a>."}, {"owner": {"reputation": 49, "user_id": 10922157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e04e1786a93c727df1eb3fe66a5ad755?s=128&d=identicon&r=PG&f=1", "display_name": "Rusty_Wolf", "link": "https://stackoverflow.com/users/10922157/rusty-wolf"}, "edited": false, "score": 0, "creation_date": 1547744399, "post_id": 54229117, "comment_id": 95306066, "body": "So this is my first attempt trying to parse a file like this. Do you have any recommendation on how you personally would go about trying to parse this kind of file?"}, {"owner": {"reputation": 49, "user_id": 10922157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e04e1786a93c727df1eb3fe66a5ad755?s=128&d=identicon&r=PG&f=1", "display_name": "Rusty_Wolf", "link": "https://stackoverflow.com/users/10922157/rusty-wolf"}, "edited": false, "score": 0, "creation_date": 1547744667, "post_id": 54229117, "comment_id": 95306210, "body": "Some background on my goal here, I am trying to eventually make a program that does what neofetch does but in pure rust."}, {"owner": {"reputation": 3573, "user_id": 3142971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GvXzQ.png?s=128&g=1", "display_name": "Steampunkery", "link": "https://stackoverflow.com/users/3142971/steampunkery"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547747474, "post_id": 54229117, "comment_id": 95307611, "body": "@Shepmaster my usual way of answering questions on here is to change as little of their code as possible when making it work, to help them learn. I used hasbrown because it appeared that that&#39;s what he was using. Also the same with the multiple <code>next</code> calls"}, {"owner": {"reputation": 3573, "user_id": 3142971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GvXzQ.png?s=128&g=1", "display_name": "Steampunkery", "link": "https://stackoverflow.com/users/3142971/steampunkery"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547747563, "post_id": 54229117, "comment_id": 95307646, "body": "@Shepmaster your changes are the way I would have implemented it, but his way works and it&#39;s a learning process :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547747816, "post_id": 54229117, "comment_id": 95307752, "body": "The multiple next calls is <b>incorrect</b> by the definition of the iterator trait though. What is returned after next return a none is not defined."}], "tags": [], "owner": {"reputation": 3573, "user_id": 3142971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GvXzQ.png?s=128&g=1", "display_name": "Steampunkery", "link": "https://stackoverflow.com/users/3142971/steampunkery"}, "is_accepted": false, "score": 2, "last_activity_date": 1547737297, "last_edit_date": 1547737297, "creation_date": 1547699754, "answer_id": 54229117, "question_id": 54224706, "link": "https://stackoverflow.com/questions/54224706/parsing-proc-cpuinfo-fails/54229117#54229117", "title": "Parsing /proc/cpuinfo fails", "body": "<p>Your code had a few problems with it. I hate to just rewrite a person's code for them, but some of the stuff you had going was just not going to work even after compilation succeeded. There are some pointers for you in the code below.</p>\n\n<p>Here is code that builds the struct you expect, prints to a <code>HashMap</code> for debugging, and then prints the information in the struct for easy viewing: </p>\n\n<pre><code>use std::{\n    fs::File,\n    io::{BufRead, BufReader, Error, ErrorKind},\n};\n\nuse hashbrown::HashMap;\n\nfn main() {\n    let cpu = get_cpu().unwrap();\n    println!(\"{}{}\", cpu.model_name, cpu.cores);\n}\n\npub struct CPUInfo {\n    pub model_name: String,\n    pub cores: u16,\n}\n\npub fn get_cpu() -&gt; Result&lt;CPUInfo, Error&gt; {\n    if cfg!(target_os = \"linux\") {\n        let f = File::open(\"/proc/cpuinfo\")?;\n        let reader = BufReader::new(f);\n        let mut cpuinfo_hashmap: HashMap&lt;String, String&gt; = HashMap::new();\n\n        for line in reader.lines().take(20) {\n            let line = line.unwrap();\n            let mut split_line = line.split(':');\n            let label = split_line.next();\n            let value = split_line.next();\n            if value.is_some() &amp;&amp; label.is_some() {\n                let label = label.unwrap().trim().to_string();\n                let value = value.unwrap().trim().to_string();\n                cpuinfo_hashmap.insert(label, value);\n            }\n        }\n\n        println!(\"{:?}\", cpuinfo_hashmap);\n\n        Ok(CPUInfo {\n            model_name: {\n                let m = cpuinfo_hashmap\n                    .get(\"model name\")\n                    .ok_or(Error::from(ErrorKind::InvalidData))?;\n                m.clone()\n            },\n            cores: {\n                let c = cpuinfo_hashmap\n                    .get(\"siblings\")\n                    .ok_or(Error::from(ErrorKind::InvalidData))?;\n                let cores: u16 = c.parse::&lt;u16&gt;().unwrap_or(0);\n                cores\n            },\n        })\n    } else {\n        Err(Error::from(ErrorKind::Other))\n    }\n}\n</code></pre>\n\n<p>Problems with your code: </p>\n\n<ol>\n<li>You didn't post your imports, which made it really hard for me</li>\n<li>You can't <code>BufRead</code> a <code>String</code>, you need to <code>BufRead</code> the <code>File</code> directly</li>\n<li>Your <code>line</code> variable needs to be unwrapped before use</li>\n<li>Line needs to be unwrapped AND bound to a variable to prevent borrow-checking errors</li>\n<li>You split the line on whitespace first, then again on the <code>\":\"</code> character, which gives you a <code>HashMap</code> with 20 entries that look like <code>\"processor\" : \":\"</code></li>\n</ol>\n"}], "owner": {"reputation": 49, "user_id": 10922157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e04e1786a93c727df1eb3fe66a5ad755?s=128&d=identicon&r=PG&f=1", "display_name": "Rusty_Wolf", "link": "https://stackoverflow.com/users/10922157/rusty-wolf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1547737297, "creation_date": 1547669836, "last_edit_date": 1547737142, "question_id": 54224706, "link": "https://stackoverflow.com/questions/54224706/parsing-proc-cpuinfo-fails", "title": "Parsing /proc/cpuinfo fails", "body": "<p>I am attempting to parse <code>/proc/cpuinfo</code> on Linux and am running into some trouble.</p>\n\n<p>I'd like to return:</p>\n\n<ul>\n<li>model name </li>\n<li>cores</li>\n<li>siblings</li>\n</ul>\n\n<p>I was wanting to return them as a struct but I'd be happy with anything that returned them all.</p>\n\n<pre><code>use std::{\n    collections::HashMap,\n    fmt,\n    fs::File,\n    io::{self, Read},\n};\n\npub struct CPUInfo {\n    pub model_name: String,\n    pub cores: u16,\n}\n\n#[derive(Debug)]\npub enum Error {\n    UnsupportedSystem,\n    //ExecFailed(io::Error),\n    IO(io::Error),\n    Unknown,\n}\n\nimpl fmt::Display for Error {\n    fn fmt(&amp;self, fmt: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        use self::Error::*;\n        match *self {\n            UnsupportedSystem =&gt; write!(fmt, \"System is not supported\"),\n            //ExecFailed(ref e) =&gt; write!(fmt, \"Execution failed: {}\", e),\n            IO(ref e) =&gt; write!(fmt, \"IO error: {}\", e),\n            Unknown =&gt; write!(fmt, \"An unknown error occurred\"),\n        }\n    }\n}\n\nimpl std::error::Error for Error {\n    fn description(&amp;self) -&gt; &amp;str {\n        use self::Error::*;\n        match *self {\n            UnsupportedSystem =&gt; \"unsupported system\",\n            //ExecFailed(_) =&gt; \"execution failed\",\n            IO(_) =&gt; \"io error\",\n            Unknown =&gt; \"unknown error\",\n        }\n    }\n\n    fn cause(&amp;self) -&gt; Option&lt;&amp;std::error::Error&gt; {\n        use self::Error::*;\n        match *self {\n            UnsupportedSystem =&gt; None,\n            //ExecFailed(ref e) =&gt; Some(e),\n            IO(ref e) =&gt; Some(e),\n            Unknown =&gt; None,\n        }\n    }\n}\n\nimpl From&lt;io::Error&gt; for Error {\n    fn from(e: io::Error) -&gt; Error {\n        Error::IO(e)\n    }\n}\n\npub fn get_cpu() -&gt; Result&lt;CPUInfo, Error&gt; {\n    if cfg!(target_os = \"linux\") {\n        let mut s = String::new();\n        File::open(\"/proc/cpuinfo\")?.read_to_string(&amp;mut s)?;\n        let mut cpuinfo_hashmap = HashMap::new();\n        for line in s.lines() {\n            let mut split_line = line.split_whitespace();\n            let label = split_line.next();\n            let value = split_line.next();\n            if value.is_some() &amp;&amp; label.is_some() {\n                let label = label.unwrap().split(':').nth(0).ok_or(Error::Unknown)?;\n                let value = value.unwrap().to_string();\n                cpuinfo_hashmap.insert(label, value.to_string());\n            }\n        }\n\n        Ok(CPUInfo {\n            model_name: {\n                let m = cpuinfo_hashmap.get(\"model name\").ok_or(Error::Unknown)?;\n                m.to_string()\n            },\n            cores: {\n                let c = cpuinfo_hashmap.get(\"siblings\").ok_or(Error::Unknown)?;\n                let cores: u16 = c.parse::&lt;u16&gt;().unwrap();\n                cores\n            },\n        })\n    } else {\n        Err(Error::UnsupportedSystem)\n    }\n}\n\nfn main() {\n    let cpu = get_cpu().expect(\"error getting cpu\");\n    println!(\"CPU: {} {}\", cpu.model_name, cpu.cores)\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ff88e7d7a331f1c57c10498359a4222f\" rel=\"nofollow noreferrer\">Rust Playground</a>)</p>\n\n<p>This code fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'error getting cpu: Unknown', libcore/result.rs:1009:5\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>Then someone on Reddit suggested using <a href=\"https://crates.io/crates/derive_builder\" rel=\"nofollow noreferrer\">derive_builder</a> so I tried:</p>\n\n<pre><code>pub fn cpu_info() -&gt; Result&lt;CPUInfo, Error&gt; {\n    let file = File::open(\"/proc/cpuinfo\")?;\n    let buf_reader = BufReader::new(file);\n    let mut builder = &amp;mut CPUInfoBuilder::default();\n\n    for line in buf_reader.lines() {\n        let line = line.unwrap();\n        let kv: Vec&lt;_&gt; = line.splitn(2, ':').map(|s| s.trim()).collect();\n\n        builder = match kv.as_slice() {\n            [\"model name\", v] =&gt; builder.model_name(v.to_string()),\n            [\"cpu cores\", v] =&gt; builder.cores(v.parse::&lt;u16&gt;().ok().ok_or(Error::Unknown)?),\n            [_, _] =&gt; builder,\n            [_] =&gt; builder,\n            _ =&gt; unreachable!(),\n        }\n    }\n    Ok(builder.build().expect(\"failed\"))\n}\n</code></pre>\n\n<p>Which also compiles and fails.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 1, "creation_date": 1547706356, "post_id": 54223713, "comment_id": 95285222, "body": "You could have just used <code>Add&lt;Output = Self::InnerType&gt; + Shl&lt;usize, Output = Self::InnerType&gt;</code> and skipped the <code>From</code> entirely, right?"}, {"owner": {"reputation": 2848, "user_id": 87791, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/ZXsMw.jpg?s=128&g=1", "display_name": "weston", "link": "https://stackoverflow.com/users/87791/weston"}, "reply_to_user": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 0, "creation_date": 1547718128, "post_id": 54223713, "comment_id": 95290770, "body": "Wow, thank you. Now I feel silly for littering my code with needless trait bounds and <code>from</code> calls. I&#39;m a noob and didn&#39;t know you could treat associated types as type parameters. So far I&#39;ve only considered them as outputs of trait implementations.   I know you didn&#39;t answer the question as posed, but this is a much better solution to my problem anyway. If you submit an answer I&#39;ll gladly award it to you. Either way, thanks a bunch."}, {"owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "edited": false, "score": 0, "creation_date": 1558958532, "post_id": 54223713, "comment_id": 99258927, "body": "This looks very much like an inference bug. You can have some fun with it by adding just one of the <code>From</code> bounds to the <code>impl</code> block, which will cause the <code>from</code> call that uses the other bound to fail with a bad inferred type. Could you open an issue on the <a href=\"https://github.com/rust-lang/rust\" rel=\"nofollow noreferrer\">language repo</a>?"}], "owner": {"reputation": 2848, "user_id": 87791, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/ZXsMw.jpg?s=128&g=1", "display_name": "weston", "link": "https://stackoverflow.com/users/87791/weston"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1547676309, "creation_date": 1547665593, "last_edit_date": 1547676309, "question_id": 54223713, "link": "https://stackoverflow.com/questions/54223713/why-wont-trait-bounds-work-when-placed-on-an-associated-type", "title": "Why won&#39;t trait bounds work when placed on an associated type?", "body": "<p>I'm writing a generic <code>Iterator</code> which uses an internal value to compute a numeric sequence. At each step, several operations are applied to the internal value to compute the next value in the sequence. I can put the trait bounds for these operations on the <code>Iterator</code> implementation itself and everything is dandy, but if I move them to the associated type, the compiler is unable to infer the correct trait implementation.</p>\n\n<p>Here is a contrived example which demonstrates the problem. This iterator adds one to the internal value and doubles it. Starting with an internal value of 1 it will produce the sequence 4, 10, 22, 46...</p>\n\n<p>This requires <code>Add</code> and <code>Shl&lt;usize&gt;</code> trait bounds on <code>MyType::InnerType</code>, as wells as <code>From</code> bounds for converting the results of these operations back to <code>InnerType</code>.</p>\n\n<pre><code>use std::ops::*;\n\nfn main() {\n    let iter: MyIterator&lt;f32&gt; = MyIterator::new();\n    for (i, val) in iter.take(10).enumerate() {\n        println!(\"{} =&gt; {}\", i, val);\n    }\n}\n\nstruct MyIterator&lt;T: MyType&gt; {\n    previous: T::InnerType,\n}\n\nimpl&lt;T: MyType&gt; MyIterator&lt;T&gt; {\n    pub fn new() -&gt; Self {\n        MyIterator {\n            previous: T::InnerType::ONE,\n        }\n    }\n}\n\n// `Add`, `Shl`, and `From` trait bounds only work when put here...\nimpl&lt;T: MyType&gt; Iterator for MyIterator&lt;T&gt; {\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        // Add one\n        let plus_one = T::InnerType::from(self.previous + T::InnerType::ONE);\n\n        // Multiply by two\n        let times_two = T::InnerType::from(plus_one &lt;&lt; 1);\n\n        // Save state\n        self.previous = times_two;\n\n        // Return value\n        Some(T::from_inner(times_two))\n    }\n}\n\ntrait MyType {\n    // Want to put `Add`, `Shl`, and `From` trait bounds on InnerType here...\n    type InnerType: One\n        + Copy\n        + Add\n        + Shl&lt;usize&gt;\n        + From&lt;&lt;Self::InnerType as Add&gt;::Output&gt;\n        + From&lt;&lt;Self::InnerType as Shl&lt;usize&gt;&gt;::Output&gt;;\n\n    fn from_inner(val: Self::InnerType) -&gt; Self;\n}\n\nimpl MyType for f32 {\n    type InnerType = u32;\n\n    fn from_inner(val: u32) -&gt; f32 {\n        val as f32\n    }\n}\n\ntrait One {\n    const ONE: Self;\n}\n\nimpl One for u32 {\n    const ONE: u32 = 1;\n}\n</code></pre>\n\n<p>The compiler is unable to determine which <code>MyType::InnerType::from</code> method to call:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:28:43\n   |\n28 |         let plus_one = T::InnerType::from(self.previous + T::InnerType::ONE);\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected std::ops::Shl::Output, found std::ops::Add::Output\n   |\n   = note: expected type `&lt;&lt;T as MyType&gt;::InnerType as std::ops::Shl&lt;usize&gt;&gt;::Output`\n              found type `&lt;&lt;T as MyType&gt;::InnerType as std::ops::Add&gt;::Output`\n</code></pre>\n\n<p>However, if I put these bounds on the <code>impl&lt;T: MyType&gt; Iterator&lt;T&gt;</code> using a <code>where</code> clause, everything compiles as expected.</p>\n\n<p>Why can the compiler infer which <code>From</code> implementation to use when the trait bounds are placed on the <code>Iterator</code> impl, but not when they're placed directly on the associated type?</p>\n\n<p>Playgrounds with both working and non-working versions:</p>\n\n<ul>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=30675dbae682a5c9ea9d481e6dfc01c5\" rel=\"nofollow noreferrer\">Working</a> (trait bounds for <code>MyType::InnerType</code> placed on <code>Iterator</code>)</li>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=f5a6dce3756d0643b5af8ac5e6319088\" rel=\"nofollow noreferrer\">Not Working</a> (trait\nbounds for <code>MyType::InnerType</code> placed on associated type directly)</li>\n</ul>\n"}, {"tags": ["rust", "embedded"], "owner": {"reputation": 13936, "user_id": 3598119, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/6c9c7dfa28a57e8011d12208a7c86d20?s=128&d=identicon&r=PG", "display_name": "Chris Beck", "link": "https://stackoverflow.com/users/3598119/chris-beck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 571, "favorite_count": 0, "closed_date": 1547663792, "answer_count": 0, "score": 3, "last_activity_date": 1547664258, "creation_date": 1547663160, "last_edit_date": 1547663724, "question_id": 54223174, "link": "https://stackoverflow.com/questions/54223174/how-to-use-corefmt-to-format-to-a-fixed-size-buffer-on-the-stack", "closed_reason": "Duplicate", "title": "How to use `core::fmt` to format to a fixed size buffer on the stack?", "body": "<p>I'm using Rust for an embedded environment where we don't have an OS and we are building are target as <code>no_std</code>.</p>\n\n<p>We have implemented a special pathway for the device to log error messages in case of panic -- I'm trying to implement a <code>panic_handler</code> lang item.</p>\n\n<p>Our initial version (working) looks like this:</p>\n\n<pre><code>#[panic_handler]\nfn panic(info: &amp;PanicInfo) -&gt; ! {\n    let mut buf = String::new();\n    write!(&amp;mut buf, \"{}\", info).unwrap();\n    unsafe { report_panic_message(buf.as_ptr(), buf.len()) };\n    unsafe { abort() }\n}\n</code></pre>\n\n<p>Here we are using <code>alloc::string::String</code> to act as the buffer into which we format the panic message.</p>\n\n<p>However, this implementation is bad because allocating the string could fail, potentially leading to a panic, and then the panic handler will likely fail.</p>\n\n<p>Instead, we would like to format into a fixed-size buffer on the stack, and drop the dependency on <code>alloc</code> crate.</p>\n\n<p>The attempted fix is like this:</p>\n\n<pre><code>// Maximum supported message length\nconst MAX_MSG_SIZE: usize = 4096;\n\n#[panic_handler]\nfn panic(info: &amp;PanicInfo) -&gt; ! {\n    let mut buf = [0u8; MAX_MSG_SIZE];\n\n    match write!(&amp;mut buf, \"{}\", info) {\n        Ok(n) =&gt; {\n            unsafe { report_panic_message(buf.as_ptr(), n) };\n        }\n        Err(_) =&gt; {\n            let err_msg = \"panic: The panic message exceeded MAX_MSG_SIZE bytes\";\n            unsafe { report_panic_message(err_msg.as_ptr(), err_msg.len()) };\n        }\n    };\n\n    unsafe { abort() }\n}\n</code></pre>\n\n<p>However this fails with an error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `write_fmt` found for type `&amp;mut [u8; 4096]` in the current scope\n  --&gt; /src/lib.rs:36:11\n   |\n36 |     match write!(&amp; mut buf, \"{}\", info) {\n   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: the method `write_fmt` exists but the following trait bounds were not satisfied:\n           `&amp;mut [u8; 4096] : core::fmt::Write`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>It appears that the trait <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html\" rel=\"nofollow noreferrer\"><code>std::io::Write</code></a> is implemented for <code>&amp;mut[u8]</code>, c.f. but it isn't implemented for <code>core::fmt::Write</code>. I cannot implement <code>core::fmt::Write</code> for a built-in type, due to the orphan rules.</p>\n\n<p>What is the most idiomatic way to do this?</p>\n"}, {"tags": ["string", "scope", "rust", "lifetime", "temporary"], "answers": [{"comments": [{"owner": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "edited": false, "score": 0, "creation_date": 1612270486, "post_id": 54223487, "comment_id": 116709299, "body": "The solution only works if the match arm is a literal, otherwise rust doesn&#39;t compile since <code>tmp</code> can be assigned twice."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "edited": false, "score": 0, "creation_date": 1612270657, "post_id": 54223487, "comment_id": 116709390, "body": "@PawanKumar please provide a playground example showing what you mean. The first match arm in this example does not require a string literal; that\u2019s literally the point of the answer."}, {"owner": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "edited": false, "score": 0, "creation_date": 1612272064, "post_id": 54223487, "comment_id": 116710005, "body": "<a href=\"https://play.rust-lang.org/?https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8b235475ee2cd1713e5d72e922a0352c\" rel=\"nofollow noreferrer\">play.rust-lang.org/?https://play.rust-lang.org/&hellip;</a> Matching against a fixed number works, but if it is dynamic, then the better solution would be Own the string or use a Rc."}, {"owner": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "edited": false, "score": 0, "creation_date": 1612272142, "post_id": 54223487, "comment_id": 116710045, "body": "This specific example the solution works I just wanted to point out the other solutions as well"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "edited": false, "score": 0, "creation_date": 1612274228, "post_id": 54223487, "comment_id": 116711113, "body": "@PawanKumar that has nothing to do with a number, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c69bed6ff892492df0d07b6f3806c649\" rel=\"nofollow noreferrer\">it has to do with the loop</a>. The &quot;other solutions&quot; are already mentioned in the first line of this answer. However, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=67c0a041d424fd720db61a11695c2b1d\" rel=\"nofollow noreferrer\">the <code>Cow</code> solution</a> , as mentioned in this answer, involves less memory allocation than a required <code>String</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1613497762, "last_edit_date": 1613497762, "creation_date": 1547664650, "answer_id": 54223487, "question_id": 54222905, "link": "https://stackoverflow.com/questions/54222905/how-do-i-make-format-return-a-str-from-a-conditional-expression/54223487#54223487", "title": "How do I make format! return a &amp;str from a conditional expression?", "body": "<p>This is 90% a duplicate of <a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a>, see that for multiple other solutions.</p>\n<p>There's one extra possibility since this is all in one function: You can declare a variable for the <code>String</code> and only set it when you need to allocate. The compiler (obliquely) suggests this:</p>\n<blockquote>\n<p>consider using a <code>let</code> binding to create a longer lived value</p>\n</blockquote>\n<pre><code>fn main() {\n    let x = 42;\n    let tmp;\n\n    let category = match x {\n        0...9 =&gt; &quot;Between 0 and 9&quot;,\n        number @ 10 =&gt; {\n            tmp = format!(&quot;It's a {}!&quot;, number);\n            &amp;tmp\n        }\n        _ if x &lt; 0 =&gt; &quot;Negative&quot;,\n        _ =&gt; &quot;Something else&quot;,\n    };\n\n    println!(&quot;{}&quot;, category);\n}\n</code></pre>\n<p>This is mostly the same as using a <code>Cow</code>, just handled by the compiler instead of a specific type.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/58559969/155423\">How can I conditionally provide a default reference without performing unnecessary computation when it isn&#39;t used?</a></li>\n<li><a href=\"https://stackoverflow.com/a/28220053/155423\">Are polymorphic variables allowed?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1547671255, "post_id": 54224365, "comment_id": 95275890, "body": "You can use <code>write!(&amp;mut buffer, &quot;{}&quot;, number)</code> to save an allocation + copy in the first snippet, and I think it will also work under <code>no_std</code> with a fixed buffer (untested)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1547671950, "post_id": 54224365, "comment_id": 95276206, "body": "<a href=\"https://stackoverflow.com/q/39488327/155423\">How to write an integer as a string to a byte array with no_std?</a>"}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 1, "last_activity_date": 1547673133, "last_edit_date": 1547673133, "creation_date": 1547668346, "answer_id": 54224365, "question_id": 54222905, "link": "https://stackoverflow.com/questions/54222905/how-do-i-make-format-return-a-str-from-a-conditional-expression/54224365#54224365", "title": "How do I make format! return a &amp;str from a conditional expression?", "body": "<p><code>format!</code> can't return <code>&amp;str</code> because it will always allocate <code>String</code>. What is possible to do is to return a <code>&amp;str</code> from a <code>String</code>, which is what you did in your code.</p>\n\n<p>As the compiler hinted, the created <code>String</code> is immediately dropped after its creation because it went out of the current scope and one way around could be an external variable that is not bounded to the <code>match</code> scope. E.g.:</p>\n\n<pre><code>use std::fmt::Write;\n\nfn main() {\n    let mut buffer = String::with_capacity(20);\n    buffer.push_str(\"It's a \");\n\n    let x = 10;\n    let category = match x {\n        0...9 =&gt; \"Between 0 and 9\",\n        number @ 10 =&gt; {\n            write!(&amp;mut buffer, \"{}\", number).unwrap();\n            buffer.as_str()\n        }\n        _ if x &lt; 0 =&gt; \"Negative\",\n        _ =&gt; \"Something else\",\n    };\n\n    println!(\"{}\", category);\n}\n</code></pre>\n\n<p>If you want an <code>[no_std]</code> environment or don't want to do any dynamic allocation, you can take a look at this limited code snippet:</p>\n\n<pre><code>use core::str;\n\nfn each_digit&lt;F&gt;(mut number: u32, mut f: F)\nwhere\n    F: FnMut(u8),\n{\n    while number &gt; 0 {\n        f((number % 10) as u8);\n        number /= 10;\n    }\n}\n\nfn main() {\n    const BUFFER_LEN: usize = 20;\n    let mut buffer = [0u8; BUFFER_LEN];\n\n    let x = 12344329;\n    let category = match x {\n        0...9 =&gt; \"Between 0 and 9\",\n        number @ 123443219 =&gt; {\n            let mut idx = BUFFER_LEN;\n            each_digit(number, |digit| {\n                let ascii = digit + 48;\n                idx -= 1;\n                buffer[idx] = ascii;\n            });\n            str::from_utf8(&amp;buffer[idx..BUFFER_LEN]).unwrap()\n        },\n        _ =&gt; \"Something else\",\n    };\n\n    assert_eq!(\"123443219\", category);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 483726, "user_id": 217408, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/IlnZm.jpg?s=128&g=1", "display_name": "G&#252;nter Z&#246;chbauer", "link": "https://stackoverflow.com/users/217408/g%c3%bcnter-z%c3%b6chbauer"}, "is_accepted": false, "score": 0, "last_activity_date": 1571935466, "last_edit_date": 1571935466, "creation_date": 1571935152, "answer_id": 58545699, "question_id": 54222905, "link": "https://stackoverflow.com/questions/54222905/how-do-i-make-format-return-a-str-from-a-conditional-expression/58545699#58545699", "title": "How do I make format! return a &amp;str from a conditional expression?", "body": "<p>In my case <a href=\"https://stackoverflow.com/questions/58490555/how-to-overcome-temporary-value-dropped-while-borrowed-when-converting-an-i32\">How to overcome &quot;temporary value dropped while borrowed&quot; when converting an i32 to &amp;str</a><br>\nI could solve it by moving the call inside the branches</p>\n\n<pre><code>pub fn uidl(&amp;mut self, message_number: Option&lt;i32&gt;) -&gt; POP3Result {\n    let command = match message_number {\n        Some(_) =&gt; POP3Command::UidlOne,\n        None =&gt; POP3Command::UidlAll,\n    };\n\n    match message_number {\n        Some(i) =&gt; {\n            // Here the value is not dropped because it is not leaving the scope\n            self.execute_command(command, Some(arg.to_string().as_str()))\n        }\n        // Here I had to duplicate the call\n        None =&gt; self.execute_command(command, None),\n    }\n}\n</code></pre>\n\n<p>Kind of what is suggested in the error message <a href=\"https://doc.rust-lang.org/error-index.html#E0597\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/error-index.html#E0597</a></p>\n"}], "owner": {"reputation": 73, "user_id": 7747519, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-i3zXcgajqow/AAAAAAAAAAI/AAAAAAAAAD4/D5aZx-NTwEc/photo.jpg?sz=128", "display_name": "Bjarke Pedersen", "link": "https://stackoverflow.com/users/7747519/bjarke-pedersen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1696, "favorite_count": 0, "accepted_answer_id": 54223487, "answer_count": 3, "score": 7, "last_activity_date": 1613497762, "creation_date": 1547662064, "last_edit_date": 1552521594, "question_id": 54222905, "link": "https://stackoverflow.com/questions/54222905/how-do-i-make-format-return-a-str-from-a-conditional-expression", "title": "How do I make format! return a &amp;str from a conditional expression?", "body": "<p>I happened upon this problem where <code>format!</code> creates a temporary value in a pattern that is not anchored to anything, as far as I understand it.</p>\n\n<pre><code>let x = 42;\nlet category = match x {\n    0...9 =&gt; \"Between 0 and 9\",\n    number @ 10 =&gt; format!(\"It's a {}!\", number).as_str(),\n    _ if x &lt; 0 =&gt; \"Negative\",\n    _ =&gt; \"Something else\",\n};\n\nprintln!(\"{}\", category);\n</code></pre>\n\n<p>In this code, the type of <code>category</code> is a <code>&amp;str</code>, which is satisfied by returning a literal like <code>\"Between 0 and 9\"</code>. If I want to format the matched value to a slice using <code>as_str()</code>, then I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n --&gt; src/main.rs:5:24\n  |\n3 |     let category = match x {\n  |         -------- borrow later stored here\n4 |         0...9 =&gt; \"Between 0 and 9\",\n5 |         number @ 10 =&gt; format!(\"It's a {}!\", number).as_str(),\n  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        - temporary value is freed at the end of this statement\n  |                        |\n  |                        creates a temporary which is freed while still in use\n  |\n  = note: consider using a `let` binding to create a longer lived value\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>I have done some reading, and found people with similar problems, but I couldn't seem to find any solution.</p>\n\n<p>A simple workaround would be to have <code>category</code> be a <code>String</code> instead of a <code>&amp;str</code>, but I don't like the idea of having to put <code>.to_string()</code> on the end of every literal in the pattern, as it's not as clean.</p>\n\n<p>Is there a way to solve the problem, or do I just need to work around it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1547665307, "post_id": 54222831, "comment_id": 95273175, "body": "You are encourage to use <a href=\"https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type\">the <code>dyn</code> syntax</a> to be clear that you are using a trait object."}], "answers": [{"comments": [{"owner": {"reputation": 49, "user_id": 5794697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57c7b4bf7981f7a178efa7af03944014?s=128&d=identicon&r=PG", "display_name": "Laurence Tratt", "link": "https://stackoverflow.com/users/5794697/laurence-tratt"}, "edited": false, "score": 0, "creation_date": 1547678261, "post_id": 54223817, "comment_id": 95278915, "body": "Thanks for your comment, which was very interesting. I also struggled a bit to interpret all of <code>-Z print-type-sizes</code>. I think I&#39;ve now realised that the key to my original question is that the <code>RefCell</code> is storing a fat pointer, so when <code>Box::into_raw</code> is used in <code>Rc</code>, the fat pointer is passed through (so to speak)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1547667285, "last_edit_date": 1547667285, "creation_date": 1547666044, "answer_id": 54223817, "question_id": 54222831, "link": "https://stackoverflow.com/questions/54222831/why-do-fat-pointers-sometimes-percolate-outwards/54223817#54223817", "title": "Why do fat pointers sometimes percolate outwards?", "body": "<p>Ultimately, <code>Rc&lt;RefCell&lt;Debug&gt;&gt;</code> <em>is</em> the trait object and trait objects are fat pointers. The types inside and outside of it are not fat pointers.</p>\n\n<hr>\n\n<p>There are no fat pointers in the <code>Vec&lt;u8&gt;</code> set, whatsoever. A <code>Vec&lt;T&gt;</code> is a <code>(*mut T, usize, usize)</code>, a <code>RefCell&lt;T&gt;</code> is a <code>(T, usize)</code>, and an <code>Rc&lt;T&gt;</code> is a <code>(*mut T)</code>. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>size_of              | is\n---------------------+---\n           Vec&lt;u8&gt;   | 24\n   RefCell&lt;Vec&lt;u8&gt;&gt;  | 32\nRc&lt;RefCell&lt;Vec&lt;u8&gt;&gt;&gt; |  8\n</code></pre>\n\n<p>Your second and third cases do involve a fat pointer for a trait object: <code>Rc&lt;RefCell&lt;dyn Debug&gt;&gt;</code>. Putting a trait object behind <em>another</em> pointer (the <code>Rc</code>) creates a <strong>thin pointer</strong> to the concrete type: <code>*mut RefCell&lt;dyn Debug&gt;</code>.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>size_of                     | is\n----------------------------+---\n    Rc&lt;RefCell&lt;dyn Debug&gt;&gt;  | 16\nBox&lt;Rc&lt;RefCell&lt;dyn Debug&gt;&gt;&gt; |  8\n</code></pre>\n\n<p>Notably, it's impossible to create a <code>RefCell&lt;dyn Debug&gt;</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `dyn std::fmt::Debug` cannot be known at compilation time\n --&gt; src/main.rs:4:20\n  |\n4 |     println!(\"{}\", mem::size_of::&lt;RefCell&lt;dyn Debug&gt;&gt;());\n  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: within `std::cell::RefCell&lt;dyn std::fmt::Debug&gt;`, the trait `std::marker::Sized` is not implemented for `dyn std::fmt::Debug`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = note: required because it appears within the type `std::cell::RefCell&lt;dyn std::fmt::Debug&gt;`\n  = note: required by `std::mem::size_of`\n</code></pre>\n\n<p>The trait object requires some indirection; when you add some, you've finally constructed some type of fat pointer.</p>\n\n<hr>\n\n<p>You can use the unstable option <code>-Z print-type-sizes</code> to explore the layout of structs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>type: `std::rc::RcBox&lt;std::cell::RefCell&lt;dyn std::fmt::Debug&gt;&gt;`: 24 bytes, alignment: 8 bytes\n    field `.strong`: 8 bytes\n    field `.weak`: 8 bytes\n    field `.value`: 8 bytes\n\ntype: `core::nonzero::NonZero&lt;*const std::rc::RcBox&lt;std::cell::RefCell&lt;dyn std::fmt::Debug&gt;&gt;&gt;`: 16 bytes, alignment: 8 bytes\n    field `.0`: 16 bytes\n\ntype: `std::ptr::NonNull&lt;std::rc::RcBox&lt;std::cell::RefCell&lt;dyn std::fmt::Debug&gt;&gt;&gt;`: 16 bytes, alignment: 8 bytes\n    field `.pointer`: 16 bytes\n\ntype: `std::rc::Rc&lt;std::cell::RefCell&lt;dyn std::fmt::Debug&gt;&gt;`: 16 bytes, alignment: 8 bytes\n    field `.ptr`: 16 bytes\n    field `.phantom`: 0 bytes, offset: 0 bytes, alignment: 1 bytes\n\ntype: `std::cell::RefCell&lt;dyn std::fmt::Debug&gt;`: 8 bytes, alignment: 8 bytes\n    field `.borrow`: 8 bytes\n    field `.value`: 0 bytes\n</code></pre>\n\n<p>I'm not 100% about parsing this output, as I expect <code>RefCell&lt;dyn Debug&gt;</code> to be an unsized type (as shown by the error above). I assume the meaning of \"0 bytes\" is overloaded.</p>\n"}], "owner": {"reputation": 49, "user_id": 5794697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57c7b4bf7981f7a178efa7af03944014?s=128&d=identicon&r=PG", "display_name": "Laurence Tratt", "link": "https://stackoverflow.com/users/5794697/laurence-tratt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1547667285, "creation_date": 1547661758, "question_id": 54222831, "link": "https://stackoverflow.com/questions/54222831/why-do-fat-pointers-sometimes-percolate-outwards", "title": "Why do fat pointers sometimes percolate outwards?", "body": "<p>I thought that I had understood fat pointers in Rust, but I have a case where I can't understand why they seem to percolate outwards from an inner type. Presumably my mental model is off, but I'm struggling to come up with a satisfactory explanation for this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::RefCell;\nuse std::fmt::Debug;\nuse std::mem::size_of;\nuse std::rc::Rc;\n\nfn main() {\n    println!(\"{}\", size_of::&lt;Rc&lt;RefCell&lt;Vec&lt;u8&gt;&gt;&gt;&gt;());\n    println!(\"{}\", size_of::&lt;Rc&lt;RefCell&lt;Debug&gt;&gt;&gt;());\n    println!(\"{}\", size_of::&lt;Box&lt;Rc&lt;RefCell&lt;Debug&gt;&gt;&gt;&gt;());\n}\n</code></pre>\n\n<p>which, on a 64-bit machine, prints <code>8, 16, 8</code>. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c7eb26309ea99a8d1a3171771a4f1908\" rel=\"nofollow noreferrer\">Playground link</a>.</p>\n\n<p>Since <code>Rc</code> makes a <code>Box</code> internally (using <code>into_raw_non_null</code>), I expected this to print <code>8, 8, 8</code>. Is there a reason why, at least from <code>size_of</code>'s perspective, the fat pointer seems to percolate outwards from <code>Debug</code>, even past <code>Rc</code>'s <code>Box</code>? Is it because it's stored as a raw pointer perhaps?</p>\n"}, {"tags": ["http", "rust", "client"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547658404, "post_id": 54221596, "comment_id": 95269788, "body": "<i>the overhead nor the added binary weight</i> \u2014 what are you basing this statement on? What does &quot;overhead&quot; mean? What is the &quot;added binary weight&quot; compared to, code that doesn&#39;t have HTTP at all?"}, {"owner": {"reputation": 1834, "user_id": 293650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/434c9d1c4a072e0107e382a6a2b53715?s=128&d=identicon&r=PG", "display_name": "MindTailor", "link": "https://stackoverflow.com/users/293650/mindtailor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547659005, "post_id": 54221596, "comment_id": 95270104, "body": "I mean that by adding the whole hyper/tokio dependencies the generated binary grows by a few Mb. The way rust runtime is deployed on AWS lambda mean these few Mb are stored for each function. Regarding the overhead, each AWS lambda container processes only 1 request a time (correct me if I&#39;m wrong on this one), so the whole async system seems overkill..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547659038, "post_id": 54221596, "comment_id": 95270125, "body": "and that\u2019s for a release build?"}, {"owner": {"reputation": 1834, "user_id": 293650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/434c9d1c4a072e0107e382a6a2b53715?s=128&d=identicon&r=PG", "display_name": "MindTailor", "link": "https://stackoverflow.com/users/293650/mindtailor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547659114, "post_id": 54221596, "comment_id": 95270180, "body": "Yes, for a release. The base binary is already 5Mb with the musl standard library, and it grows to around 8Mb with the dependencies."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547752553, "post_id": 54221596, "comment_id": 95309981, "body": "Since this question in its current form appears off-topic, you may wish to look at other resources. More open-ended questions and discussions are welcome on <a href=\"https://chat.mibbit.com/?server=irc.mozilla.org&amp;channel=%23rust-beginners\" rel=\"nofollow noreferrer\">the Rust-Beginners IRC channel</a>, <a href=\"https://www.reddit.com/r/rust/\" rel=\"nofollow noreferrer\">the Rust subreddit</a>, or <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">the Rust users forum</a>. There is also a list of Rust IRC channels on <a href=\"https://www.rust-lang.org/en-US/community.html#irc-channels\" rel=\"nofollow noreferrer\">the community page</a>."}, {"owner": {"reputation": 1834, "user_id": 293650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/434c9d1c4a072e0107e382a6a2b53715?s=128&d=identicon&r=PG", "display_name": "MindTailor", "link": "https://stackoverflow.com/users/293650/mindtailor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547767529, "post_id": 54221596, "comment_id": 95315975, "body": "I felt the question was still valid as I asked for the existence of software meeting a specific criteria, not for a recommendation. Semantics, I guess... Thanks for the interest anyway !"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1547801494, "post_id": 54221596, "comment_id": 95325016, "body": "I&#39;m afraid that still counts as a request for an off-site resource. Since these questions are harder to stay updated and tend to attract options and spam, they are not suitable for Stack Overflow. Fortunately, there are many other places to ask this, as Shepmaster said."}], "answers": [{"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547751058, "post_id": 54242097, "comment_id": 95309268, "body": "The question seems like not closed as off-topic? I just wanted to make some suggestions and tried to help if I can."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547752241, "post_id": 54242097, "comment_id": 95309848, "body": "Please re-acquaint yourself with the guidelines of Stack Overflow. <a href=\"https://stackoverflow.com/help/on-topic\"><i>Questions asking us to recommend or find a book, tool, software library, tutorial or other off-site resource are off-topic for Stack Overflow as they tend to attract opinionated answers and spam</i></a>. The question is not <b>yet</b> closed; you should vote to close the question."}, {"owner": {"reputation": 1834, "user_id": 293650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/434c9d1c4a072e0107e382a6a2b53715?s=128&d=identicon&r=PG", "display_name": "MindTailor", "link": "https://stackoverflow.com/users/293650/mindtailor"}, "edited": false, "score": 0, "creation_date": 1547767269, "post_id": 54242097, "comment_id": 95315896, "body": "Thank you very much for taking the time to answer my question. I&#39;ll start from there !"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1547801769, "post_id": 54242097, "comment_id": 95325175, "body": "You may also wish to read <a href=\"https://meta.stackoverflow.com/q/276572/1233251\">Should one advise on off-topic questions?</a>. We do not prohibit assisting the OP with comments, but answering is counter to the goals of the site."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1547801906, "post_id": 54242097, "comment_id": 95325246, "body": "Well, okay then. I may try to help from comment section next time"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 3, "last_activity_date": 1547749576, "creation_date": 1547749576, "answer_id": 54242097, "question_id": 54221596, "link": "https://stackoverflow.com/questions/54221596/a-synchronous-http-client-for-rust/54242097#54242097", "title": "A synchronous http client for rust?", "body": "<blockquote>\n  <p>Is there a reason all frameworks are based on tokio ?</p>\n</blockquote>\n\n<p><code>Tokio</code> crate is contributed by many people and maintained by them as well. Since it is developed and maintained well, It is a wise idea to put new crates on top of this base.\nThis is why many libraries are depending <code>Tokio</code> and it's variant/relevant crates.</p>\n\n<p>Since <code>Tokio</code> is based on minimal sub crates like <code>tokio-tcp</code>, <code>tokio-codec</code> , <code>tokio-io</code>, <code>tokio-executor</code> etc. these crates can be imported seperately so your release size will be considerably small.</p>\n\n<p>If you insist on not using any <code>tokio</code> dependency, there are still some options but they will be developed and maintained by relatively less contributor.</p>\n\n<p>Here are some HTTP Client options which are not using Tokio:</p>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ureq\" rel=\"nofollow noreferrer\">Ureq</a></li>\n<li><a href=\"https://crates.rs/crates/minreq\" rel=\"nofollow noreferrer\">Minreq</a></li>\n<li><a href=\"https://crates.rs/crates/chttp\" rel=\"nofollow noreferrer\">cHttp</a></li>\n<li><a href=\"https://crates.rs/crates/easy-http-request\" rel=\"nofollow noreferrer\">easy-http-request</a> (You can try to build http client on top of that)</li>\n<li><a href=\"https://crates.rs/crates/cabot\" rel=\"nofollow noreferrer\">cabot</a></li>\n</ul>\n\n<p>There are plenty options apart from these alternatives, but in my opinion I import the minimal tokio relevant crates and implement my application on top of them.</p>\n"}], "owner": {"reputation": 1834, "user_id": 293650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/434c9d1c4a072e0107e382a6a2b53715?s=128&d=identicon&r=PG", "display_name": "MindTailor", "link": "https://stackoverflow.com/users/293650/mindtailor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1358, "favorite_count": 0, "closed_date": 1547801298, "accepted_answer_id": 54242097, "answer_count": 1, "score": 4, "last_activity_date": 1547749576, "creation_date": 1547656938, "question_id": 54221596, "link": "https://stackoverflow.com/questions/54221596/a-synchronous-http-client-for-rust", "closed_reason": "Not suitable for this site", "title": "A synchronous http client for rust?", "body": "<p>I'm looking for a low overhead HTTP client in Rust to create a custom runtime for AWS lambda. All the implementations that I find (including the official runtime from AWS) are based on hyper/tokio and I don't want the overhead nor the added binary weight.</p>\n\n<p>Do you know one ? Is there a reason <strong><em>all</em></strong> frameworks are based on tokio ?</p>\n\n<p>Thanks,</p>\n"}, {"tags": ["functional-programming", "rust", "currying"], "comments": [{"owner": {"reputation": 3467, "user_id": 3393308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a3f30f7c191e8d556c70c951fe3d9af?s=128&d=identicon&r=PG", "display_name": "yorodm", "link": "https://stackoverflow.com/users/3393308/yorodm"}, "edited": false, "score": 0, "creation_date": 1547656181, "post_id": 54221200, "comment_id": 95268540, "body": "Your f1 and f2 are to all accounts two different types, can you make their type signature similar?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547657123, "post_id": 54221200, "comment_id": 95269086, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/9271924/155423\">How do I emulate Lisp (apply) or (curry) in Rust?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/54221200/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 45, "user_id": 4178922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a21b0cdee20494040d14956cb5fec6f0?s=128&d=identicon&r=PG&f=1", "display_name": "z.f.s", "link": "https://stackoverflow.com/users/4178922/z-f-s"}, "reply_to_user": {"reputation": 3467, "user_id": 3393308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a3f30f7c191e8d556c70c951fe3d9af?s=128&d=identicon&r=PG", "display_name": "yorodm", "link": "https://stackoverflow.com/users/3393308/yorodm"}, "edited": false, "score": 0, "creation_date": 1547658869, "post_id": 54221200, "comment_id": 95270026, "body": "@yorodm The idea is that f1 and f2 will have different type signatures, the only similarity between them is that the first argument&#39;s will be identical."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1547662702, "creation_date": 1547662702, "answer_id": 54223067, "question_id": 54221200, "link": "https://stackoverflow.com/questions/54221200/how-do-i-create-a-macro-that-takes-a-function-with-multiple-parameters-and-suppl/54223067#54223067", "title": "How do I create a macro that takes a function with multiple parameters and supplies the first argument for that function?", "body": "<blockquote>\n  <p>The specific question I'm having is how do I create a macro that takes in as an argument a function with a more than 1 parameter, where first parameter is of a certain type, supplies that argument for that first function.</p>\n</blockquote>\n\n<p>Macros (even procedural macros) operate on syntax trees, so they can't change their behaviour based on semantics, including types and function arity. That means you'd have to have a different macro for each possible number of arguments. For example:</p>\n\n<pre><code>macro_rules! curry1 {\n    ($func: ident, $($arg: expr),*) =&gt; {\n        |a| $func($($arg),*, a)\n    }\n}\n\nmacro_rules! curry2 {\n    ($func: ident, $($arg: expr),*) =&gt; {\n        |a, b| $func($($arg),*, a, b)\n    }\n}\n\nmacro_rules! curry3 {\n    ($func: ident, $($arg: expr),*) =&gt; {\n        |a, b, c| $func($($arg),*, a, b, c)\n    }\n}\n</code></pre>\n\n<p>Which would be used like this:</p>\n\n<pre><code>fn f(a: i32, b: i32, c: i32) -&gt; i32 {\n    a + b + c\n}\n\nfn main() {\n    // requires 2 extra args\n    let f_2 = curry2!(f, 2);\n    // requires 1 extra arg\n    let f_2_1 = curry1!(f, 2, 1);\n\n    println!(\"{}\", f(2, 1, 3)); // 6\n    println!(\"{}\", f_2(1, 3));  // 6\n    println!(\"{}\", f_2_1(3));   // 6\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 4178922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a21b0cdee20494040d14956cb5fec6f0?s=128&d=identicon&r=PG&f=1", "display_name": "z.f.s", "link": "https://stackoverflow.com/users/4178922/z-f-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 585, "favorite_count": 0, "accepted_answer_id": 54223067, "answer_count": 1, "score": 2, "last_activity_date": 1547727922, "creation_date": 1547655576, "last_edit_date": 1547727922, "question_id": 54221200, "link": "https://stackoverflow.com/questions/54221200/how-do-i-create-a-macro-that-takes-a-function-with-multiple-parameters-and-suppl", "title": "How do I create a macro that takes a function with multiple parameters and supplies the first argument for that function?", "body": "<p>I want to be able to create a higher-order function (called <code>g</code>) that takes in a function (called <code>f</code>). <code>g</code> should pass in the first parameter to <code>f</code> and return a new function.</p>\n\n<p>The use case is that I want to initiate a database connection in <code>g</code> and pass it functions that accept a database connection. </p>\n\n<pre><code>fn f1(a: i32, b: String) -&gt; String {\n    b\n}\n\nfn f2(a: i32, c: i64, d: i16) -&gt; i32 {\n    1000\n}\n\nfn g&lt;T&gt;(f: fn(a: i32, arbitrary_arguments_type) -&gt; T) -&gt; fn(arbitrary_arguments_type) -&gt; T {\n    move |arbitrary_arguments| f(1, arbitrary_arguments)\n}\n\nfn main() {\n    g(f1)(\"hello\".to_string());\n    g(f2)(10, 11);\n}\n</code></pre>\n\n<p>How do I create a macro that takes in as an argument a function with a more than 1 parameter, where first parameter is of a certain type, and supplies that argument for that first function?</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "is_accepted": false, "score": 5, "last_activity_date": 1547644426, "creation_date": 1547644426, "answer_id": 54217846, "question_id": 54217705, "link": "https://stackoverflow.com/questions/54217705/errore0106-missing-lifetime-specifier-despite-it-being-set/54217846#54217846", "title": "error[E0106]: missing lifetime specifier (despite it being set)", "body": "<p>I got an answer on #rust-beginners IRC channel:</p>\n\n<blockquote>\n  <p>13:10:17         drager | d33tah: I suspect that ArgMatches actually\n  wants the lifetime, so ArgMatches&lt;'static> in this case</p>\n</blockquote>\n\n<p>So, the solution was to change the function signature to:</p>\n\n<pre><code>fn parse_argv() -&gt; clap::ArgMatches&lt;'static&gt; {\n</code></pre>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 315, "favorite_count": 0, "closed_date": 1547649442, "answer_count": 1, "score": 1, "last_activity_date": 1547649472, "creation_date": 1547643929, "last_edit_date": 1547645264, "question_id": 54217705, "link": "https://stackoverflow.com/questions/54217705/errore0106-missing-lifetime-specifier-despite-it-being-set", "closed_reason": "Duplicate", "title": "error[E0106]: missing lifetime specifier (despite it being set)", "body": "<p>Consider the following code:</p>\n\n<pre><code>extern crate clap;\nuse clap::{App};\n\nuse std::io;\n\nfn parse_argv() -&gt; &amp;'static clap::ArgMatches {\n    return App::new(\"example\")\n    .get_matches()\n}\n\nfn main() -&gt; io::Result&lt;()&gt; {\n\n    let matches = parse_argv();\n\n    Ok(())\n}\n</code></pre>\n\n<p>This is the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier                                                                                                                                                                                                                                                                                                                                   \n --&gt; src/main.rs:6:29                                                                                                                                                                                                                                                                                                                                                      \n  |                                                                                                                                                                                                                                                                                                                                                                        \n6 | fn parse_argv() -&gt; &amp;'static clap::ArgMatches {                                                                                                                                                                                                                                                                                                                         \n  |                             ^^^^^^^^^^^^^^^^ help: consider giving it a 'static lifetime: `clap::ArgMatches + 'static`                                                                                                                                                                                                                                                 \n  |                                                                                                                                                                                                                                                                                                                                                                        \n  = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n</code></pre>\n\n<p>What is the problem here and how do I solve it? I think I did what compiler asked for, but the error won't disappear.</p>\n"}, {"tags": ["javascript", "node.js", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1547643663, "post_id": 54217067, "comment_id": 95260837, "body": "If you don&#39;t know much about Rust, and especially if you didn&#39;t write the Rust code in question, the backtrace is very unlikely to be helpful."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547644284, "post_id": 54217067, "comment_id": 95261179, "body": "You aren&#39;t using Rust directly, and I couldn&#39;t find where Rust is used in the project you linked. I would have to guess that one of the project dependencies itself has a dependency on a module that uses Rust. You&#39;d probably have to change code in <i>that</i> module to change how the Rust executable is run."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547644448, "post_id": 54217067, "comment_id": 95261260, "body": "You could try adding <code>RUST_BACKTRACE=1</code> as a system environment variable on the pi, and just remember to remove it after?"}, {"owner": {"reputation": 75, "user_id": 1386258, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5a2cf01434a982d795801ec242ab7b7?s=128&d=identicon&r=PG", "display_name": "Decagrog", "link": "https://stackoverflow.com/users/1386258/decagrog"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547648526, "post_id": 54217067, "comment_id": 95263793, "body": "Added RUST_BACKTRACE=1 as env variable to ~/.profile, ~/.bashrc, /etc/profile  (checked with env command) and did a reboot but the error output is still the same...not sure if I&#39;m missing something about setting system variables on the pi"}, {"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 0, "creation_date": 1547656800, "post_id": 54217067, "comment_id": 95268887, "body": "Another hypothesis: the rust code might be in an executable spawned by JS code, in which caes the parent environment could be incorrectly passed to the child process (see <a href=\"https://github.com/nodejs/node/issues/12986\" rel=\"nofollow noreferrer\">github.com/nodejs/node/issues/12986</a> for example)"}], "owner": {"reputation": 75, "user_id": 1386258, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5a2cf01434a982d795801ec242ab7b7?s=128&d=identicon&r=PG", "display_name": "Decagrog", "link": "https://stackoverflow.com/users/1386258/decagrog"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 320, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1547649693, "creation_date": 1547641597, "last_edit_date": 1547649693, "question_id": 54217067, "link": "https://stackoverflow.com/questions/54217067/how-to-run-a-nodejs-script-with-rust-backtrace-1", "title": "How to run a NodeJS script with RUST_BACKTRACE=1?", "body": "<p>I'm trying to run <a href=\"https://github.com/xdk2mam/xdk2mam/tree/master/ble-sdcard/xdk2mam-nodejs\" rel=\"nofollow noreferrer\">this Node script</a> on a couple of Raspberry Pis. It runs smoothly on the Pi3 but on a Pi Zero I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread '&lt;unnamed&gt;' panicked at 'destination and source slices have different lengths', libcore/slice/mod.rs:695:9\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>I  tried to run with <code>RUST_BACKTRACE=1 node script.js</code> but the error output is the same.</p>\n\n<p>I've searched for hours how to run with <code>RUST_BACKTRACE=1</code> to get some debug information but I find only discussions where is not specified how to use the command.</p>\n\n<p>Both Raspberry boards have the last Raspbian Lite version installed and on the Pi Zero I have a fresh installation.</p>\n"}, {"tags": ["xml", "xpath", "rust", "xml-namespaces"], "answers": [{"tags": [], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "is_accepted": false, "score": 1, "last_activity_date": 1547651199, "last_edit_date": 1547651199, "creation_date": 1547632542, "answer_id": 54214438, "question_id": 54213894, "link": "https://stackoverflow.com/questions/54213894/sxd-document-sxd-xpath-failing-to-parse-xml/54214438#54214438", "title": "sxd-document / sxd-xpath failing to parse XML", "body": "<p>Given the error message I would expect that you need to declare the <code>rdf</code> namespace before you using it on the <code>rdf:resource</code> attribute name.</p>\n\n<p>(Your problem doesn't have anything to do with XPath -- it fails while trying to parse the XML, before any XPath code is being run.)</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547648394, "post_id": 54214572, "comment_id": 95263702, "body": "Author of sxd_xpath and sxd_document here: this answer is correct. I&#39;d welcome an issue filed against sxd_document to somehow add the ability to parse this type of XML."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1547648309, "last_edit_date": 1547648309, "creation_date": 1547632901, "answer_id": 54214572, "question_id": 54213894, "link": "https://stackoverflow.com/questions/54213894/sxd-document-sxd-xpath-failing-to-parse-xml/54214572#54214572", "title": "sxd-document / sxd-xpath failing to parse XML", "body": "<p>Your XML file uses the non-standard <code>rdf</code> namespace but does not define it. You need to define the namespace in the XML:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;organisation xml:id=\"a17649\"\n              xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"&gt;\n</code></pre>\n\n<p>Some XML parsers allow you to declare namespaces in your code, outside of the XML document, but I haven't found anything like that after a quick look in the <code>sxd_document</code> <a href=\"https://docs.rs/sxd-xpath/0.4.2/sxd_xpath/\" rel=\"nofollow noreferrer\">docs</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547648580, "post_id": 54214812, "comment_id": 95263827, "body": "Author of sxd_xpath and sxd_document here: this answer is correct. I&#39;d welcome an issue filed against sxd_document to somehow add the ability to parse this type of XML."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 3, "last_activity_date": 1547648568, "last_edit_date": 1547648568, "creation_date": 1547633744, "answer_id": 54214812, "question_id": 54213894, "link": "https://stackoverflow.com/questions/54213894/sxd-document-sxd-xpath-failing-to-parse-xml/54214812#54214812", "title": "sxd-document / sxd-xpath failing to parse XML", "body": "<p>Your XML parsing code should work in the happy path, when the XML content is correct.</p>\n\n<p>Although it works with no problem in the happy path, since you use <code>expect</code> in the code instead of error handling, the program panics in the error scenario.</p>\n\n<p>You can change the code to the following to print the error better:</p>\n\n<pre><code>let package = parser::parse(&amp;contents);\n\nmatch package {\n    Ok(package) =&gt; {\n        let document = package.as_document();\n        let value = evaluate_xpath(&amp;document, \"/root\").expect(\"XPath evaluation failed\");\n        println!(\"value: {:?}\", value);\n    }\n    Err(err) =&gt; {\n        println!(\"{:?}\", err);\n    }\n}\n</code></pre>\n\n<p>After that fix, you will notice that the code prints an <code>UnknownNamespacePrefix</code> error.</p>\n\n<p>This error occurs when the XML content has namespaces that are not declared in the XML file itself.</p>\n\n<p>In your XML file, you need to specify your namespaces, which you did not for the following:</p>\n\n<pre><code>&lt;organisation xml:id=\"a17649\"&gt;\n</code></pre>\n\n<p>You need to add the namespace:</p>\n\n<pre><code>&lt;organisation xml:id=\"a17649\" xmlns:rdf=\"http://www.w3.org/1999/xhtml\"&gt;\n</code></pre>\n\n<p>Even once you have declared <code>rdf</code> namespace like this, you are also using the <code>dbk</code> namespace which probably depends on your project itself. You will need to specify this namespace as well:</p>\n\n<pre><code>&lt;organisation xml:id=\"a17649\" xmlns:rdf=\"http://www.w3.org/1999/xhtml\" xmlns:dbk=\"/path/to/dbk\"&gt;\n</code></pre>\n\n<p>After these changes, your problem should be solved</p>\n"}], "owner": {"reputation": 891, "user_id": 1301342, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/uQfOt.jpg?s=128&g=1", "display_name": "Eish", "link": "https://stackoverflow.com/users/1301342/eish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 54214812, "answer_count": 3, "score": 1, "last_activity_date": 1547651199, "creation_date": 1547630779, "last_edit_date": 1547648895, "question_id": 54213894, "link": "https://stackoverflow.com/questions/54213894/sxd-document-sxd-xpath-failing-to-parse-xml", "title": "sxd-document / sxd-xpath failing to parse XML", "body": "<p>I'm can't seem to figure out why this isn't working. I have an external XML file that I'm trying to traverse via XPath.</p>\n\n<p>My code is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate sxd_document;\nextern crate sxd_xpath;\n\nuse std::fs;\nuse sxd_document::parser;\nuse sxd_xpath::{evaluate_xpath, Value};\n\nfn main() {\n    let contents = fs::read_to_string(\"./spec/organisation.xml\")\n        .expect(\"Something went wrong reading the file\");\n\n    // let package = parser::parse(\"&lt;root&gt;hello&lt;/root&gt;\").expect(\"failed to parse XML\");\n    let package = parser::parse(&amp;contents).expect(\"failed to parse XML\");\n    let document = package.as_document();\n    let value = evaluate_xpath(&amp;document, \"/root\").expect(\"XPath evaluation failed\");\n    assert_eq!(\"hello\", value.string());\n}\n</code></pre>\n\n<p>The XML is:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;organisation xml:id=\"a17649\"&gt;\n    &lt;code rdf:resource=\"http://pbs.gov.au/code/manufacturer\"&gt;CU&lt;/code&gt;\n    &lt;title&gt;Care Pharmaceuticals Pty Limited&lt;/title&gt;\n    &lt;address&gt;\n        &lt;dbk:street&gt;Suite 303, Level 3, 59-75 Grafton Street&lt;/dbk:street&gt;\n        &lt;dbk:city&gt;Bondi Junction&lt;/dbk:city&gt;\n        &lt;dbk:state&gt;NSW&lt;/dbk:state&gt;\n        &lt;dbk:postcode&gt;2022&lt;/dbk:postcode&gt;\n        &lt;effective&gt;\n            &lt;date&gt;2018-12-01&lt;/date&gt;\n        &lt;/effective&gt;\n    &lt;/address&gt;\n    &lt;contact&gt;\n        &lt;dbk:phone&gt;1800 788 870&lt;/dbk:phone&gt;\n        &lt;effective&gt;\n            &lt;date&gt;2018-12-01&lt;/date&gt;\n        &lt;/effective&gt;\n    &lt;/contact&gt;\n    &lt;effective&gt;\n        &lt;date&gt;2012-08-27&lt;/date&gt;\n    &lt;/effective&gt;\n&lt;/organisation&gt;\n</code></pre>\n\n<p>The stack trace looks like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>     Running `target/debug/pbs`\nthread 'main' panicked at 'failed to parse XML: Error { location: 50, errors: {UnknownNamespacePrefix} }', libcore/result.rs:1009:5\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::print\n             at libstd/sys_common/backtrace.rs:71\n             at libstd/sys_common/backtrace.rs:59\n   2: std::panicking::default_hook::{{closure}}\n             at libstd/panicking.rs:211\n   3: std::panicking::default_hook\n             at libstd/panicking.rs:227\n   4: std::panicking::rust_panic_with_hook\n             at libstd/panicking.rs:476\n   5: std::panicking::continue_panic_fmt\n             at libstd/panicking.rs:390\n   6: rust_begin_unwind\n             at libstd/panicking.rs:325\n   7: core::panicking::panic_fmt\n             at libcore/panicking.rs:77\n   8: core::result::unwrap_failed\n             at libcore/macros.rs:26\n   9: &lt;core::result::Result&lt;T, E&gt;&gt;::expect\n             at libcore/result.rs:835\n  10: pbs::main\n             at src/main.rs:14\n  11: std::rt::lang_start::{{closure}}\n             at libstd/rt.rs:74\n  12: std::panicking::try::do_call\n             at libstd/rt.rs:59\n             at libstd/panicking.rs:310\n  13: __rust_maybe_catch_panic\n             at libpanic_unwind/lib.rs:102\n  14: std::rt::lang_start_internal\n             at libstd/panicking.rs:289\n             at libstd/panic.rs:392\n             at libstd/rt.rs:58\n  15: std::rt::lang_start\n             at libstd/rt.rs:74\n  16: main\n  17: __libc_start_main\n  18: _start\n</code></pre>\n"}, {"tags": ["python", "rust", "pyo3"], "comments": [{"owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "edited": false, "score": 1, "creation_date": 1547657366, "post_id": 54213443, "comment_id": 95269216, "body": "Sorry to confuse everyone. @Caio intuitively figured out that the offending function has the reverse signature. I&#39;ve updated the question as a result."}], "answers": [{"tags": [], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "is_accepted": false, "score": 1, "last_activity_date": 1547632833, "creation_date": 1547632833, "answer_id": 54214543, "question_id": 54213443, "link": "https://stackoverflow.com/questions/54213443/vector-of-custom-struct-in-pyo3/54214543#54214543", "title": "Vector of custom struct in PyO3", "body": "<p>It looks like the <code>pyfunction</code> attribute generates code that requires that the return type implements the <code>FromPyObject</code> trait. While there's a blanket implementation of <code>FromPyObject for Vec&lt;T&gt; where T: FromPyObject</code>, it looks like the code generated for <code>pyclass</code> attribute does not include an implementation of <code>FromPyObject</code> for your <code>Block</code> type.</p>\n\n<p>Since I am unfamiliar with PyO3 other than the few minutes I just looked at its API documentation to validate this answer, I'm not sure how you'd best get a <code>FromPyObject</code> implementation -- perhaps there's a <code>derive</code> for it?</p>\n"}, {"comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1547647621, "post_id": 54218634, "comment_id": 95263180, "body": "Why would a function named <code>to_blocks</code> take a vector of blocks as input and return a vector of integers?"}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1547650443, "post_id": 54218634, "comment_id": 95265047, "body": "Despite the name, <code>fn to_blocks(list: Vec&lt;i32&gt;) -&gt; Vec&lt;Block&gt;</code> compiles without issues and even if it didn&#39;t compile, the error would be different."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1547653507, "post_id": 54218634, "comment_id": 95266932, "body": "I don&#39;t understand your comment. If it compiles without issues then why fix it? In any case, it doesn&#39;t make sense to suggest swapping the function&#39;s inputs and outputs as that wouldn&#39;t give OP what they need."}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1547656246, "post_id": 54218634, "comment_id": 95268578, "body": "The compile error he gave in this question simply relates to the fact that custom derives aren&#39;t enough to enable a local owned type to be used in a function parameter. That is why I <b>suggested</b> that he <b>could</b> have written the wrong code and <b>if</b> that were the case, the above measures of this answer would be necessary. If I wasn&#39;t clear enough I can edit my post in a proper way."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1547656488, "post_id": 54218634, "comment_id": 95268717, "body": "Are you saying that the code he actually compiled is not the code shown in the question? If so, saying &quot;your code should be&quot; is confusing because it sounds like you&#39;re suggesting this would fix the problem."}, {"owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1547657568, "post_id": 54218634, "comment_id": 95269323, "body": "@interjay, @caio apologies for the confusion. I think @caio figured out that I since I have a <code>fn to_blocks</code> then there&#39;s an opposite doing the reverse and that&#39;s what&#39;s giving the error."}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1547658147, "post_id": 54218634, "comment_id": 95269660, "body": "Thank you kentwait. @interjay made some important statements that are now fixed."}, {"owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "edited": false, "score": 0, "creation_date": 1576277884, "post_id": 54218634, "comment_id": 104860863, "body": "pyo3 documentation still thin on this. It took quite a lot of googling to find this thread. Thanks"}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": true, "score": 5, "last_activity_date": 1547657834, "last_edit_date": 1547657834, "creation_date": 1547646937, "answer_id": 54218634, "question_id": 54213443, "link": "https://stackoverflow.com/questions/54213443/vector-of-custom-struct-in-pyo3/54218634#54218634", "title": "Vector of custom struct in PyO3", "body": "<p><code>FromPyObject</code> is intended to be used by types that can be extracted from the Python world. That is why I think that you were trying to write <code>fn to_blocks(list: Vec&lt;Block&gt;) -&gt; Vec&lt;i32&gt;</code> instead of <code>fn to_blocks(list: Vec&lt;i32&gt;) -&gt; Vec&lt;Block&gt;</code>. If that is the case , lets go down to the implementation chain.</p>\n\n<p><code>FromPyObject</code> has a default implementation for <a href=\"https://pyo3.rs/master/doc/pyo3/trait.FromPyObject.html#impl-FromPyObject%3C%27a%3E\" rel=\"nofollow noreferrer\">any &amp;T that implements PyTryFrom</a> and <code>PyTryFrom</code> has a default implementation for <a href=\"https://pyo3.rs/master/doc/pyo3/prelude/trait.PyTryFrom.html#impl-PyTryFrom-1\" rel=\"nofollow noreferrer\">any T that implements PyTypeInfo</a>. <code>[pyclass]</code> implements <code>PyObjectAlloc</code> or <code>PyObjectWithFreeList</code> according to the <a href=\"https://github.com/PyO3/pyo3/blob/531f9db99e243678d7d4f48a1ff0a83e9695ea8b/pyo3-derive-backend/src/py_class.rs#L63\" rel=\"nofollow noreferrer\"><code>impl_class</code></a> method and both traits have the <code>PyTypeInfo</code> trait bound. Therefore, your class/struct will work just fine with references, e.g.:</p>\n\n<pre><code>#[pyfunction]\nfn to_blocks(list: Vec&lt;&amp;Block&gt;) -&gt; Vec&lt;i32&gt;\n</code></pre>\n\n<p>You can see in the official documentation this explanation in a summarized way.</p>\n\n<blockquote>\n  <p><code>FromPyObject</code> is implemented by various types that can be extracted\n  from a Python object <strong>reference</strong>.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 1, "creation_date": 1547652527, "post_id": 54220101, "comment_id": 95266348, "body": "<code>#[pyclass]</code> implements <code>IntoPyObject</code>/<code>ToPyObject</code>  for <code>Block</code>, that is why it works. OP code should probably be <code>fn to_blocks(list: Vec&lt;Block&gt;) -&gt; Vec&lt;i32&gt;</code>."}, {"owner": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "reply_to_user": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1547653410, "post_id": 54220101, "comment_id": 95266871, "body": "@Caio I&#39;m confused \u2013 since OP&#39;s code works, why should it be something else?"}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1547654370, "post_id": 54220101, "comment_id": 95267462, "body": "Because the error message he gave is the same error message one gets when <code>Block</code> is used as an input parameter. To be sure, I think it is best to wait his response about this matter."}, {"owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "reply_to_user": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 1, "creation_date": 1547657256, "post_id": 54220101, "comment_id": 95269164, "body": "@Caio you are right, I traced the error back to the wrong function. The error stems from <code>fn from_blocks(block_list: Vec&lt;Block&gt;) -&gt; Vec&lt;i32&gt;</code>"}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "reply_to_user": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "edited": false, "score": 0, "creation_date": 1547657603, "post_id": 54220101, "comment_id": 95269337, "body": "@kentwait Thank you =)"}], "tags": [], "owner": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "is_accepted": false, "score": 0, "last_activity_date": 1547653425, "last_edit_date": 1547653425, "creation_date": 1547651730, "answer_id": 54220101, "question_id": 54213443, "link": "https://stackoverflow.com/questions/54213443/vector-of-custom-struct-in-pyo3/54220101#54220101", "title": "Vector of custom struct in PyO3", "body": "<p>Which version of PyO3 are you on?\nYour code is working for me on <code>0.5.3</code> and <code>0.6.0-alpha.1</code>.</p>\n\n<p>Due to that I can't test this, but I would guess that you need to return a <code>PyResult</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[pyfunction]\nfn to_blocks(list: Vec&lt;i32&gt;) -&gt; PyResult&lt;Vec&lt;Block&gt;&gt;\n</code></pre>\n"}], "owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 873, "favorite_count": 2, "accepted_answer_id": 54218634, "answer_count": 3, "score": 5, "last_activity_date": 1547657872, "creation_date": 1547629174, "last_edit_date": 1547657872, "question_id": 54213443, "link": "https://stackoverflow.com/questions/54213443/vector-of-custom-struct-in-pyo3", "title": "Vector of custom struct in PyO3", "body": "<p>I'm new to Rust and PyO3 (coming from Python) so this might be obvious to more experienced people.</p>\n\n<p>I declared a pyclass struct in PyO3.</p>\n\n<pre><code>#[pyclass]\nstruct Block {\n    start: i32,\n    stop: i32,\n}\n</code></pre>\n\n<p>Then I use <code>Block</code> in a rust function that takes a vector of <code>Block</code> and outputs a vector of int (signature below)</p>\n\n<pre><code>#[pyfunction]\nfn from_blocks(block_list: Vec&lt;Block&gt;) -&gt; Vec&lt;i32&gt;\n</code></pre>\n\n<p>When I compile using <code>nightly-x86_64-apple-darwin</code> I get the following error:</p>\n\n<pre><code>#[pyfunction]\n^^^^^^^^^^^^^ the trait `pyo3::FromPyObject&lt;'_&gt;` is not implemented for `std::vec::Vec&lt;Block&gt;`\n</code></pre>\n\n<p>How do I solve this?</p>\n\n<p><strong>EDIT:</strong>\nCaio is right. I made a mistake in tracing back the error.\nPreviously I wrote</p>\n\n<blockquote>\n  <p>Then I use Block in a rust function that takes a vector of int and outputs a vector of Block (signature below)</p>\n</blockquote>\n\n<pre><code>#[pyfunction]\nfn to_blocks(list: Vec&lt;i32&gt;) -&gt; Vec&lt;Block&gt;\n</code></pre>\n\n<p>But the actual offending function is:</p>\n\n<pre><code>#[pyfunction]\nfn from_blocks(block_list: Vec&lt;Block&gt;) -&gt; Vec&lt;i32&gt;\n</code></pre>\n\n<p>I've updated the question to make it clearer.</p>\n"}, {"tags": ["rust", "rust-actix"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547602200, "post_id": 54208702, "comment_id": 95244799, "body": "What is your <i>question</i>? There&#39;s nothing here that stands out to me."}], "answers": [{"comments": [{"owner": {"reputation": 1192, "user_id": 1213186, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d9eabf15c471c4eb5158034e943711ce?s=128&d=identicon&r=PG", "display_name": "ddibiase", "link": "https://stackoverflow.com/users/1213186/ddibiase"}, "edited": false, "score": 0, "creation_date": 1547665376, "post_id": 54211120, "comment_id": 95273203, "body": "Ahhhhh. I ended up going with the generic struct in case I want to have more flexibility. Thank you very much, I was definitely overthinking this. :-("}, {"owner": {"reputation": 1192, "user_id": 1213186, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d9eabf15c471c4eb5158034e943711ce?s=128&d=identicon&r=PG", "display_name": "ddibiase", "link": "https://stackoverflow.com/users/1213186/ddibiase"}, "edited": false, "score": 0, "creation_date": 1547665764, "post_id": 54211120, "comment_id": 95273387, "body": "Hmmm strange...when I attempt initializing the struct I&#39;m getting: server expected fn pointer, found closure: let server = server::new(         || App::new()           .middleware(middleware::Logger::default())           .default_resource(|r| r.f(index))       );       Ok(CustomServer {         address: address.value(),         port: port.value() as i32,         server: server       }). Why would it complain about the closure, it&#39;s following the same structure."}, {"owner": {"reputation": 1192, "user_id": 1213186, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d9eabf15c471c4eb5158034e943711ce?s=128&d=identicon&r=PG", "display_name": "ddibiase", "link": "https://stackoverflow.com/users/1213186/ddibiase"}, "edited": false, "score": 0, "creation_date": 1547667452, "post_id": 54211120, "comment_id": 95274147, "body": "Sorry the above includes the error, then exactly what I&#39;m feeding into the struct."}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 1192, "user_id": 1213186, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d9eabf15c471c4eb5158034e943711ce?s=128&d=identicon&r=PG", "display_name": "ddibiase", "link": "https://stackoverflow.com/users/1213186/ddibiase"}, "edited": false, "score": 0, "creation_date": 1547672261, "post_id": 54211120, "comment_id": 95276321, "body": "@ddibiase The difference between a function and a closure is that a closure brings in variables from the surrounding scope: in this case, <code>index</code>. This would be a case where you need to make the struct generic in <code>F</code> and use impl trait to represent the closure in the return type (<code>fn new() -&gt; CustomServer&lt;impl Fn() -&gt; App&gt;</code>)."}, {"owner": {"reputation": 1192, "user_id": 1213186, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d9eabf15c471c4eb5158034e943711ce?s=128&d=identicon&r=PG", "display_name": "ddibiase", "link": "https://stackoverflow.com/users/1213186/ddibiase"}, "edited": false, "score": 0, "creation_date": 1547677497, "post_id": 54211120, "comment_id": 95278626, "body": "I see. I forget that closures bring in scope like that. I decided to go with the concrete struct so now I&#39;m thinking through what you mentioned. Sorry just really confused and grasping at comprehending a few things happening here. :-p"}, {"owner": {"reputation": 1192, "user_id": 1213186, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d9eabf15c471c4eb5158034e943711ce?s=128&d=identicon&r=PG", "display_name": "ddibiase", "link": "https://stackoverflow.com/users/1213186/ddibiase"}, "edited": false, "score": 0, "creation_date": 1547955216, "post_id": 54211120, "comment_id": 95369328, "body": "sorry I&#39;m still stumped by this. I&#39;ve posted a pastebin with some pseudo code that roughly describes what I&#39;m doing: <a href=\"https://pastebin.com/aUreUhH6\" rel=\"nofollow noreferrer\">pastebin.com/aUreUhH6</a>  I&#39;m still getting &quot;expected fn pointer, found closure&quot; and I feel like I&#39;m just not grasping this entirely."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 1, "last_activity_date": 1547618285, "last_edit_date": 1547618285, "creation_date": 1547617974, "answer_id": 54211120, "question_id": 54208702, "link": "https://stackoverflow.com/questions/54208702/embedding-actix-web-into-a-struct-so-that-i-can-start-stop-server/54211120#54211120", "title": "Embedding actix-web into a struct so that I can start/stop server", "body": "<p><code>HttpServer</code> is a <a href=\"https://doc.rust-lang.org/book/ch10-01-syntax.html#in-struct-definitions\" rel=\"nofollow noreferrer\">generic struct</a>, not a <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html\" rel=\"nofollow noreferrer\">trait</a> (so \u201c<code>T: HttpServer</code>\u201d doesn\u2019t make sense).</p>\n\n<p>You can either make a generic struct that contains a totally arbitrary instantiation of <code>HttpServer</code> (this is likely not very useful to you):</p>\n\n<pre><code>struct CustomServer&lt;H: IntoHttpHandler + 'static, F: Fn() -&gt; H + Send + Clone + 'static&gt; {\n    srv: HttpServer&lt;H, F&gt;,\n}\n\nimpl&lt;H: IntoHttpHandler + 'static, F: Fn() -&gt; H + Send + Clone + 'static&gt; CustomServer&lt;H, F&gt; {\n    fn new(factory: F) -&gt; CustomServer&lt;H, F&gt; {\n        CustomServer {\n            srv: HttpServer::new(factory),\n        }\n    }\n}\n</code></pre>\n\n<p>or a concrete struct that contains a particular kind of <code>HttpServer</code> (I\u2019m guessing this is what you\u2019ll want, though it\u2019s hard to say without details of your use case):</p>\n\n<pre><code>struct CustomServer {\n    srv: HttpServer&lt;App, fn() -&gt; App&gt;,\n}\n\nimpl CustomServer {\n    fn new() -&gt; CustomServer {\n        CustomServer {\n            srv: HttpServer::new(|| App),\n        }\n    }\n}\n</code></pre>\n\n<p>There are also many points in between (e.g. specialize <code>H</code> but not <code>F</code>, or specialize slightly based on other generic parameters), depending on what you\u2019re trying to do.</p>\n"}], "owner": {"reputation": 1192, "user_id": 1213186, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d9eabf15c471c4eb5158034e943711ce?s=128&d=identicon&r=PG", "display_name": "ddibiase", "link": "https://stackoverflow.com/users/1213186/ddibiase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 320, "favorite_count": 0, "accepted_answer_id": 54211120, "answer_count": 1, "score": 0, "last_activity_date": 1547618285, "creation_date": 1547597902, "last_edit_date": 1547608694, "question_id": 54208702, "link": "https://stackoverflow.com/questions/54208702/embedding-actix-web-into-a-struct-so-that-i-can-start-stop-server", "title": "Embedding actix-web into a struct so that I can start/stop server", "body": "<p>I'm working on embedding actix-web into a binding library. I would like to declare a <code>HttpServer</code> within a struct so that I can easily call <code>.start()</code> and <code>.system_exit()</code>. From my very basic reading of <a href=\"https://github.com/actix/actix-web/blob/3431fff4d7f2c39576f8c6070df09f169abf12a8/src/server/http.rs#L57-L445\" rel=\"nofollow noreferrer\">the source code</a> it's already implemented as a struct with two dependencies: <code>&lt;H, F&gt;</code>. It also comes with a factory to instantiate itself.</p>\n\n<p>If I'm understanding this correctly, then I would have to implement the <code>HttpServer</code> as a dependency in my new struct and add my own characteristics within it. My previous thought was to create a new struct and just declare <code>HttpServer</code> as a property within it. That seemed troublesome with the generics that needed to be declared within it.</p>\n\n<p>What I've come up with so far is:</p>\n\n<pre><code>struct CustomServer&lt;T&gt; {\n    srv: T,\n}\n\nimpl&lt;T&gt; CustomServer&lt;T&gt;\nwhere\n    T: HttpServer,\n{\n    fn init() {\n        self.srv = HttpServer::new(|| App /* etc. */)\n    }\n}\n</code></pre>\n\n<p>I'm not sure if I'm grasping at straws or in the right direction.</p>\n\n<p>The question is: how should/can I go about defining a struct that has HttpServer and it's functions accessible in my struct?</p>\n"}, {"tags": ["rust", "reference-counting"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1547599739, "post_id": 54208397, "comment_id": 95244282, "body": "What would you get if the inner <code>Option&lt;T&gt;</code> is <code>None</code>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547604220, "post_id": 54208397, "comment_id": 95245140, "body": "&quot; It seems like something that should make sense&quot;, not at all. Also, if you end having <code>Option&lt;T&gt;</code> there is a reason, so why want to remove <code>Option</code> ? If you don&#39;t need it just don&#39;t use <code>Option</code>"}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1547632257, "post_id": 54208397, "comment_id": 95254364, "body": "Re: option, it&#39;s just an example, imagine it try to get a field in a struct that always exists instead."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1547634428, "post_id": 54208397, "comment_id": 95255655, "body": "@Stargateur: It&#39;s possible with C++ <code>shared_ptr</code> to get a <code>shared_ptr</code> to a field, or element of an array, and share the same &quot;counter&quot;."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547661064, "post_id": 54208397, "comment_id": 95271148, "body": "@MatthieuM. I don&#39;t see the rational, this seem very unsafe, basically how do you free the <code>ptr</code> if the last <code>shared_ptr</code> don&#39;t contain the good <code>ptr</code> ? This seem just to break the api of <code>shared_ptr</code>. Possible != should"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547662605, "post_id": 54208397, "comment_id": 95271908, "body": "@Stargateur: C++ supports <code>shared_ptr&lt;void&gt;</code>. It just requires type-erase when the first <code>shared_ptr</code> is created, where it captures a destructor for the type."}], "answers": [{"comments": [{"owner": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "edited": false, "score": 1, "creation_date": 1547607495, "post_id": 54209238, "comment_id": 95245791, "body": "It should be noted that the new Rc&lt;&amp;T&gt; will have its lifetime bound to the original Rc&lt;T&gt; (i.e. it can&#39;t outlive it), which is probably not what you want."}, {"owner": {"reputation": 302, "user_id": 7618662, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FRMsr.jpg?s=128&g=1", "display_name": "ThatOneDeveloper", "link": "https://stackoverflow.com/users/7618662/thatonedeveloper"}, "reply_to_user": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "edited": false, "score": 0, "creation_date": 1547613887, "post_id": 54209238, "comment_id": 95247142, "body": "You&#39;re right. I&#39;ll update my answer to mention this."}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1547632342, "post_id": 54209238, "comment_id": 95254424, "body": "Thanks, this has helped my understanding."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1547643383, "post_id": 54209238, "comment_id": 95260671, "body": "<code>&amp;T</code> is <code>Copy</code>, so there&#39;s really no point in stuffing it in a new <code>Rc</code> because it can&#39;t prolong the lifetime of the original <code>T</code>. You might as well just use <code>t</code> inside the <code>match</code>"}, {"owner": {"reputation": 302, "user_id": 7618662, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FRMsr.jpg?s=128&g=1", "display_name": "ThatOneDeveloper", "link": "https://stackoverflow.com/users/7618662/thatonedeveloper"}, "edited": false, "score": 0, "creation_date": 1547650158, "post_id": 54209238, "comment_id": 95264873, "body": "I only put <code>&amp;T</code> inside the <code>Rc</code>(in this example)  because they were looking to map the value into an <code>Rc</code>. I was showing how you can generate an <code>Rc</code> that contains the value of the original without consuming it, but also being constricted by lifetime of the original value."}], "tags": [], "owner": {"reputation": 302, "user_id": 7618662, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FRMsr.jpg?s=128&g=1", "display_name": "ThatOneDeveloper", "link": "https://stackoverflow.com/users/7618662/thatonedeveloper"}, "is_accepted": true, "score": 7, "last_activity_date": 1547614105, "last_edit_date": 1547614105, "creation_date": 1547602216, "answer_id": 54209238, "question_id": 54208397, "link": "https://stackoverflow.com/questions/54208397/is-it-possible-to-map-an-rct-to-get-an-rcsubpart-of-t/54209238#54209238", "title": "Is it possible to map an Rc&lt;T&gt; to get an Rc&lt;Subpart-of-T&gt;?", "body": "<h2>Short Answer</h2>\n\n<p>No, it's not possible to create a <code>Rc&lt;T&gt;</code> from an <code>Rc&lt;Option&lt;T&gt;&gt;</code> that leaves the latter still existing. It is possible to create an <code>Rc&lt;&amp;T&gt;</code> however, from a <code>Rc&lt;Option&lt;T&gt;&gt;</code>, while still leaving the latter variable existing.</p>\n\n<h2>Long Answer</h2>\n\n<p>If you're trying to create a new <code>Rc&lt;T&gt;</code> that owns the <code>T</code> inside the <code>Rc&lt;Option&lt;T&gt;&gt;</code>, you will have to consume the original <code>Rc&lt;Option&lt;T&gt;&gt;</code>. You also can't have multiple instances of the <code>Rc&lt;Option&lt;T&gt;&gt;</code>, because then you're moving the shared value while pointers still exist, which is very unsafe.</p>\n\n<p>But there is a way to do this safely! Using <code>Rc::try_unwrap</code>, you can attempt to move the value out, but this will return an error if multiple instances of the original <code>Rc</code> exist.\nKeep in mind you also have to handle the scenario where <code>Option&lt;T&gt;</code> ends up being <code>None</code>. </p>\n\n<p>Here's an example of this:</p>\n\n<pre><code>let rc_option: Rc&lt;Option&lt;T&gt;&gt; = Rc::new(Some(value));\n\nmatch Rc::try_unwrap(rc_option) {\n    Ok(option) =&gt; {\n        match option {\n            Some(t) =&gt; {\n                let ok_value: Rc&lt;T&gt; = Rc::new(t);\n                // Do something with ok_value\n            }\n            None =&gt; {\n                // Do something else here\n            }\n        }\n    }\n    Err(rc_option) =&gt; {\n        // There are multiple owners, do something else here\n    }\n}\n</code></pre>\n\n<p>If you wanted to preserve the original, you could do this:</p>\n\n<pre><code>match &amp;*rc_option {\n    Some(ref t) =&gt; {\n        let ok_ref: Rc&lt;&amp;T&gt; = Rc::new(t);\n    }\n    None =&gt; { /* Do something else, there's no internal value */ }\n}\n</code></pre>\n\n<hr>\n\n<p>EDIT: As Chronial mentioned, do note that the <code>ok_ref</code> cannot outlive <code>rc_option</code> (because it's a reference to <code>rc_option</code>), which may not be what you want to happen.</p>\n"}, {"tags": [], "owner": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "is_accepted": false, "score": 1, "last_activity_date": 1547649043, "last_edit_date": 1547649043, "creation_date": 1547609772, "answer_id": 54210060, "question_id": 54208397, "link": "https://stackoverflow.com/questions/54208397/is-it-possible-to-map-an-rct-to-get-an-rcsubpart-of-t/54210060#54210060", "title": "Is it possible to map an Rc&lt;T&gt; to get an Rc&lt;Subpart-of-T&gt;?", "body": "<p>As ThatOneDeveloper stated in <a href=\"https://stackoverflow.com/a/54209238/758345\">their answer</a>, that is not supported by the standard library. You could implement such a feature yourself:</p>\n\n<pre><code>use std::ops::Deref;\n\n#[derive(Clone)]\nstruct RcSome&lt;T&gt;(Rc&lt;Option&lt;T&gt;&gt;);\n\nimpl&lt;T&gt; RcSome&lt;T&gt; {\n    fn from(rc: &amp;Rc&lt;Option&lt;T&gt;&gt;) -&gt; RcSome&lt;T&gt; {\n        RcSome(rc.clone())\n    }\n}\n\nimpl&lt;T&gt; Deref for RcSome&lt;T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt;  &amp;T {\n        self.0.as_ref().as_ref().unwrap()\n    }\n}\n</code></pre>\n\n<p>Then you can do this</p>\n\n<pre><code>let rc_option: Rc&lt;Option&lt;T&gt;&gt; = Rc::new(Some(value));\nlet ok_value: RcSome&lt;T&gt; = RcSome::from(&amp;rc_option);\n</code></pre>\n\n<p>Note that this will panic if <code>rc_option</code> contains <code>None</code>. But <code>ok_value</code> will now behave like a <code>Rc&lt;T&gt;</code> \u2013 i.e. you can <code>clone()</code> it and do <code>ok_value.some_method_of_T()</code>. <code>ok_value</code> does also not share a lifetime with <code>rc_option</code>, so it can outlive it.</p>\n"}, {"comments": [{"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1547647897, "post_id": 54218614, "comment_id": 95263368, "body": "Hmm yes, if you could enforce returning on a sub part of the value in the Rc would this be safe? Like ensuring it&#39;s only a field of the value, if it were a struct? No idea how you would do that though."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1547655623, "post_id": 54218614, "comment_id": 95268190, "body": "@CallumRogers: It would be safe... though I just realized it&#39;d be leaking :) Counters need to know the original pointer and have a function to run its destructors. I&#39;ve got no idea how to enforce the lifetime relationship properly, though."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1547655901, "post_id": 54218614, "comment_id": 95268367, "body": "@CallumRogers: So, added destructor to <code>Counters</code>, since it&#39;s the actual owner of the data. For lifetime relationship, I think we can constrain the lifetime accepted by the lambda: <code>FnOnce(&amp;&#39;a T) -&gt; &amp;&#39;a U</code>... but it&#39;s not clear it&#39;s sufficient."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1547655763, "last_edit_date": 1547655763, "creation_date": 1547646864, "answer_id": 54218614, "question_id": 54208397, "link": "https://stackoverflow.com/questions/54208397/is-it-possible-to-map-an-rct-to-get-an-rcsubpart-of-t/54218614#54218614", "title": "Is it possible to map an Rc&lt;T&gt; to get an Rc&lt;Subpart-of-T&gt;?", "body": "<h3>Not with Rc.</h3>\n\n<p>This is not possible with <code>Rc</code> simply because of its memory layout:</p>\n\n<pre><code>//  Equivalence:\nstruct RcBox&lt;T&gt; {\n    strong: AtomicUsize,\n    weak: AtomicUsize,\n    data: T,\n};\n\nstruct Rc&lt;T&gt; {\n    ptr: *const RcBox&lt;T&gt;,\n};\n</code></pre>\n\n<p>Therefore, the counters are expected to be right next to <code>T</code>, and so you cannot share counters between two distinct elements.</p>\n\n<hr>\n\n<h3>Alternatives are likely possible.</h3>\n\n<p>From a memory-layout point of view, it is perfectly acceptable to create an alternative <code>FlexRc</code>:</p>\n\n<pre><code>struct Counters {\n    strong: AtomicUsize,\n    weak: AtomicUsize, // if support for FlexWeak is desired.\n    ptr: *mut (),\n    drop: fn(*mut ()),\n}\n\nstruct FlexRc&lt;T&gt; {\n    counters: *mut Counters,\n    ptr: *const T,\n}\n</code></pre>\n\n<p>And this one could in theory allow mapping... however creating a safe interface over it may not be easy.</p>\n\n<p>How do you prevent the user from returning an unrelated lifetime in <code>map</code>? Is guaranteeing the lifetime of the return reference exceeds that of <code>flex</code> sufficient to be safe?</p>\n\n<pre><code>fn fool(flex: FlexRc&lt;Option&lt;i32&gt;&gt;) -&gt; FlexRc&lt;i32&gt; {\n    let i = 3;\n    flex.map(|_| &amp;i)\n}\n</code></pre>\n"}], "owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 54209238, "answer_count": 3, "score": 3, "last_activity_date": 1547655763, "creation_date": 1547595526, "last_edit_date": 1547602402, "question_id": 54208397, "link": "https://stackoverflow.com/questions/54208397/is-it-possible-to-map-an-rct-to-get-an-rcsubpart-of-t", "title": "Is it possible to map an Rc&lt;T&gt; to get an Rc&lt;Subpart-of-T&gt;?", "body": "<p>I have an <code>Rc&lt;Option&lt;T&gt;&gt;</code> but need to get an <code>Rc&lt;T&gt;</code> from it. Something like:</p>\n\n<pre><code>let rc_option: Rc&lt;Option&lt;T&gt;&gt; = Rc::new(Ok(value));\nlet ok_value: Rc&lt;T&gt; = rc_option.map(|option| option.unwrap());\n</code></pre>\n\n<p>Is this even remotely possible? It seems like something that should make sense, as the <code>Rc</code> could just increment the counter it has internally for the new mapped value, but I can't find any docs for it.</p>\n"}, {"tags": ["rust", "fluent", "assertion"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 2, "creation_date": 1547592698, "post_id": 54207898, "comment_id": 95242662, "body": "I&#39;m kind of astonished that version with the filler is seen as more ergonomic or friendly than <code>expect(value).equal_to(4)</code> or even <code>expect_equal(value, 4)</code>"}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1547593431, "post_id": 54207898, "comment_id": 95242884, "body": "That&#39;s just one (hasty, small) example - not really here to debate the ergonomics of it (although I will say it does make a difference for larger assertions, especially with many composed together - see hamcrest or assertj for similar in Java). Also makes a nice brain teaser/is helping me learn rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1547603240, "post_id": 54207898, "comment_id": 95244974, "body": "I like the syntax, but <i>only in languages where it&#39;s normal</i>. Write code that goes with the aesthetic of the ecosystem, not just what you&#39;ve used before. More pithily, <b>when in Rome, do as the Romans do</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547603364, "post_id": 54207898, "comment_id": 95244999, "body": "See also: <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "is_accepted": false, "score": 2, "last_activity_date": 1547603411, "last_edit_date": 1547603411, "creation_date": 1547594438, "answer_id": 54208259, "question_id": 54207898, "link": "https://stackoverflow.com/questions/54207898/how-can-i-create-a-type-that-uses-fluent-chaining-syntax-without-requiring-paren/54208259#54208259", "title": "How can I create a type that uses fluent chaining syntax without requiring parenthesis?", "body": "<p>I've had some success with lazily generating the <code>to</code> and <code>be</code> using the <a href=\"https://github.com/sdleffler/thunk-rs\" rel=\"nofollow noreferrer\"><code>thunk</code></a> crate:</p>\n\n<pre><code>struct Expectation&lt;V: Debug&gt; {\n    value: Rc&lt;V&gt;,\n    to: Thunk&lt;Box&lt;Expectation&lt;V&gt;&gt;&gt;,\n    be: Thunk&lt;Box&lt;Expectation&lt;V&gt;&gt;&gt;,\n}\n\nfn expect&lt;V: Debug&gt;(value: V) -&gt; Expectation&lt;V&gt; {\n    expect_rc(Rc::new(value))\n}\n\nfn expect_rc&lt;V: Debug&gt;(value: Rc&lt;V&gt;) -&gt; Expectation&lt;V&gt; {\n    let to_cloned = value.clone();\n    let be_cloned = value.clone();\n    Expectation {\n        value,\n        to: Thunk::defer(|| Box::new(expect_rc(to_cloned))),\n        be: Thunk::defer(|| Box::new(expect_rc(be_cloned))),\n    }\n}\n\nimpl&lt;V: PartialEq + Debug&gt; Expectation&lt;V&gt; {\n    fn equals&lt;R: Debug&gt;(&amp;self, expected: R)\n    where\n        V: PartialEq&lt;R&gt; + Clone,\n    {\n        assert_eq!(self.value.deref().clone(), expected);\n    }\n}\n</code></pre>\n\n<p>This works as I'd expect, thanks to magic of <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code></a> + <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#more-on-deref-coercion\" rel=\"nofollow noreferrer\"><code>Deref</code> conversion</a>:</p>\n\n<pre><code>expect(4).to.be.equal_to(3);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1547632736, "post_id": 54208844, "comment_id": 95254669, "body": "Yeah, with macros you can do anything. I&#39;m actually trying to avoid macros in this library as it&#39;s main raison d&#39;etre in order to get good IDE autocompletion/support and better extensibility and composability."}], "tags": [], "owner": {"reputation": 600, "user_id": 3754495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65fff37f6d10b64ca1676adcc33f5ffb?s=128&d=identicon&r=PG", "display_name": "notriddle", "link": "https://stackoverflow.com/users/3754495/notriddle"}, "is_accepted": false, "score": 1, "last_activity_date": 1547600146, "last_edit_date": 1547600146, "creation_date": 1547599015, "answer_id": 54208844, "question_id": 54207898, "link": "https://stackoverflow.com/questions/54207898/how-can-i-create-a-type-that-uses-fluent-chaining-syntax-without-requiring-paren/54208844#54208844", "title": "How can I create a type that uses fluent chaining syntax without requiring parenthesis?", "body": "<p>For designing a custom syntax, I'd just use a macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! expect {\n    ($subject:expr, to, $($attr:tt)*) =&gt; {\n        expect!($subject, $($attr)*)\n    };\n    ($subject:expr, be, $($attr:tt)*) =&gt; {\n        expect!($subject, $($attr)*)\n    };\n    ($subject:expr, equal_to $object:expr) =&gt; {\n        assert_eq!($subject, $object)\n    };\n}\n\nexpect!(1, to, be, equal_to 1);\n</code></pre>\n\n<p>Deploying boxes and self-referential structs just to get a particular syntax is overkill.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d95520951b91009a4d4c064eefedccdd\" rel=\"nofollow noreferrer\">Link to playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1547632606, "post_id": 54209417, "comment_id": 95254599, "body": "Ah, this works nicely for the case where you always have to use <code>to</code> and <code>be</code> but not even you optionally want to skip them out. (which I realise I didn&#39;t state as a requirement above). Nice idea though!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1547651871, "last_edit_date": 1547651871, "creation_date": 1547604007, "answer_id": 54209417, "question_id": 54207898, "link": "https://stackoverflow.com/questions/54207898/how-can-i-create-a-type-that-uses-fluent-chaining-syntax-without-requiring-paren/54209417#54209417", "title": "How can I create a type that uses fluent chaining syntax without requiring parenthesis?", "body": "<blockquote>\n  <p>I'm looking for any solution to allow the <code>expect(value).to.be</code> syntax above.</p>\n</blockquote>\n\n<p>Keep it simple then:</p>\n\n<pre><code>fn main() {\n    expect(4).to.be.equal_to(3);\n}\n\nfn expect&lt;T&gt;(actual: T) -&gt; To&lt;T&gt; {\n    let be = Be {\n        be: Expectation(actual),\n    };\n    To { to: be }\n}\n\nstruct To&lt;T&gt; {\n    pub to: Be&lt;T&gt;,\n}\n\nstruct Be&lt;T&gt; {\n    pub be: Expectation&lt;T&gt;,\n}\n\nstruct Expectation&lt;T&gt;(T);\n\nimpl&lt;T&gt; Expectation&lt;T&gt; {\n    fn equal_to&lt;U&gt;(&amp;self, expected: U)\n    where\n        U: PartialEq&lt;T&gt;,\n    {\n        if expected != self.0 {\n            panic!(\"Report error\")\n        }\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>optionally want to skip [<code>to</code> and <code>be</code>]</p>\n</blockquote>\n\n<pre><code>use std::{ops::Deref, rc::Rc};\n\nfn main() {\n    expect(4).to.be.equal_to(3);\n    expect(4).to.equal_to(3);\n    expect(4).equal_to(3);\n}\n\nfn expect&lt;T&gt;(actual: T) -&gt; Expectation&lt;T&gt; {\n    let core = Core(Rc::new(actual));\n\n    let be = Be { core: core.clone() };\n\n    let to = To {\n        be,\n        core: core.clone(),\n    };\n\n    Expectation {\n        to,\n        core: core.clone(),\n    }\n}\n\nstruct Expectation&lt;T&gt; {\n    pub to: To&lt;T&gt;,\n    core: Core&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Deref for Expectation&lt;T&gt; {\n    type Target = Core&lt;T&gt;;\n    fn deref(&amp;self) -&gt; &amp;Core&lt;T&gt; {\n        &amp;self.core\n    }\n}\n\nstruct To&lt;T&gt; {\n    pub be: Be&lt;T&gt;,\n    core: Core&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Deref for To&lt;T&gt; {\n    type Target = Core&lt;T&gt;;\n    fn deref(&amp;self) -&gt; &amp;Core&lt;T&gt; {\n        &amp;self.core\n    }\n}\n\nstruct Be&lt;T&gt; {\n    core: Core&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Deref for Be&lt;T&gt; {\n    type Target = Core&lt;T&gt;;\n    fn deref(&amp;self) -&gt; &amp;Core&lt;T&gt; {\n        &amp;self.core\n    }\n}\n\nstruct Core&lt;T&gt;(Rc&lt;T&gt;);\n\nimpl&lt;T&gt; Clone for Core&lt;T&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        Core(self.0.clone())\n    }\n}\n\nimpl&lt;T&gt; Core&lt;T&gt; {\n    fn equal_to&lt;U&gt;(&amp;self, expected: U)\n    where\n        U: PartialEq&lt;T&gt;,\n    {\n        if expected != *self.0 {\n            panic!(\"Report error\")\n        }\n    }\n}\n</code></pre>\n\n<p>Some macros would reduce duplication, but I was too lazy to actually show that ;-)</p>\n\n<h1>When in Rome...</h1>\n\n<p>I would try to play to Rust's strengths when designing a test assertions library. To me, this means using traits to allow people to easily add custom assertions.</p>\n\n<pre><code>use crate::testlib::prelude::*;\n\nfn main() {\n    expect(4).to(be.equal_to(3));\n    expect(4).to(equal_to(3));\n}\n\nmod testlib {\n    // Shorthand variants that will always be imported.\n    // Minimize what's in here to avoid name collisions\n    pub mod prelude {\n        use super::*;\n\n        pub fn expect&lt;A&gt;(actual: A) -&gt; Expectation&lt;A&gt; {\n            Expectation::new(actual)\n        }\n\n        #[allow(non_upper_case_globals)]\n        pub static be: Be = Be;\n\n        pub fn equal_to&lt;E&gt;(expected: E) -&gt; EqualTo&lt;E&gt; {\n            EqualTo::new(expected)\n        }\n\n    }\n\n    // All the meat of the implementation. Can be divided up nicely.\n\n    pub trait Assertion&lt;A&gt; {\n        fn assert(&amp;self, actual: &amp;A);\n    }\n\n    pub struct Expectation&lt;A&gt;(A);\n    impl&lt;A&gt; Expectation&lt;A&gt; {\n        pub fn new(actual: A) -&gt; Self {\n            Expectation(actual)\n        }\n\n        pub fn to(&amp;self, a: impl Assertion&lt;A&gt;) {\n            a.assert(&amp;self.0)\n        }\n    }\n\n    pub struct Be;\n\n    impl Be {\n        pub fn equal_to&lt;E&gt;(&amp;self, expected: E) -&gt; EqualTo&lt;E&gt; {\n            EqualTo::new(expected)\n        }\n    }\n\n    pub struct EqualTo&lt;E&gt;(E);\n\n    impl&lt;E&gt; EqualTo&lt;E&gt; {\n        pub fn new(expected: E) -&gt; Self {\n            EqualTo(expected)\n        }\n    }\n\n    impl&lt;A, E&gt; Assertion&lt;A&gt; for EqualTo&lt;E&gt;\n    where\n        A: PartialEq&lt;E&gt;,\n    {\n        fn assert(&amp;self, actual: &amp;A) {\n            if *actual != self.0 {\n                panic!(\"report an error\")\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Next steps I'd look into:</p>\n\n<ul>\n<li>An assertion should probably report failures to some passed-in struct, not panic.</li>\n<li>Add a <code>to_not</code> and/or <code>not_to</code> negative matcher.</li>\n<li>Add composition of assertions.</li>\n</ul>\n"}], "owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1547651871, "creation_date": 1547592048, "last_edit_date": 1547602998, "question_id": 54207898, "link": "https://stackoverflow.com/questions/54207898/how-can-i-create-a-type-that-uses-fluent-chaining-syntax-without-requiring-paren", "title": "How can I create a type that uses fluent chaining syntax without requiring parenthesis?", "body": "<p>I'm trying to make an assertions library for testing in Rust. Currently, I have statements like:</p>\n\n<pre><code>expect(value).to().be().equal_to(4);\n</code></pre>\n\n<p>It would be really nice to drop the parens on filler <code>to</code> and <code>be</code> functions to make it something like:</p>\n\n<pre><code>expect(value).to.be.equal_to(4);\n</code></pre>\n\n<p>I think this requires the <code>to</code> and <code>be</code> to be fields on struct returned by <code>expect</code> (<code>Expectation</code>). It currently looks like this:</p>\n\n<pre><code>struct Expectation&lt;V: Debug&gt; {\n    value: V,\n}\n</code></pre>\n\n<p>Is it possible to make it something like this:</p>\n\n<pre><code>struct Expectation&lt;V: Debug&gt; {\n    value: V,\n    to: Box&lt;Expectation&lt;V&gt;&gt;,\n    be: Box&lt;Expectation&lt;V&gt;&gt;,\n}\n</code></pre>\n\n<p>where <code>to</code> and <code>be</code> point to the struct they're in?</p>\n\n<p>I've tried, but it's a tricky one to construct. I'm not even sure it is safe if the object is moved (maybe that can be prevented via <code>Pin</code>?).</p>\n\n<p>I'm looking for any solution to allow the <code>expect(value).to.be</code> syntax above.</p>\n"}, {"tags": ["rust", "match"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547563981, "post_id": 54199125, "comment_id": 95229418, "body": "See also: <a href=\"https://stackoverflow.com/questions/49886160/why-can-i-compare-a-string-to-a-str-using-if-but-not-when-using-match/49889545#49889545\">Why can I compare a String to a &amp;str using if, but not when using match?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547569971, "post_id": 54199125, "comment_id": 95233038, "body": "That not the purpose of matching."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547559785, "post_id": 54199323, "comment_id": 95226709, "body": "Going to the grammar is nice, however I think we could go slightly higher level: a pattern is first and foremost <b>structural</b>. Apart from the exception of literal patterns, a pattern never matches a <i>value</i>, it matches a <i>shape</i>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547560360, "post_id": 54199323, "comment_id": 95227052, "body": "@MatthieuM. the &quot;exception of literal patterns&quot; is why it would make some kind of sense, though. This being said, I&#39;m not against a more high level explanation."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547562051, "post_id": 54199323, "comment_id": 95228125, "body": "I wonder whether <code>match ()</code> would be cleaner than <code>match x</code>. It would make obvious the <code>match</code> here is just hiding a if/else bag"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547562285, "post_id": 54199323, "comment_id": 95228283, "body": "The big question, though, is what use a <code>match</code> then? An <code>if&#47;else</code> cascade would work as well. Unrelated: you should not need parenthesis around the condition of <code>if</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547585705, "post_id": 54199323, "comment_id": 95239977, "body": "@MatthieuM Literals are not the only values that can occur in patterns. Constants are allowed as well, and so are dataless enum variants."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1547624608, "post_id": 54199323, "comment_id": 95250636, "body": "@SvenMarnach: A dataless enum variant is just a special case of pattern-matching on an enum, though. Good point about constants, with the advent of const fns, this means non-builtin values."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 10, "last_activity_date": 1547589295, "last_edit_date": 1547589295, "creation_date": 1547556985, "answer_id": 54199323, "question_id": 54199125, "link": "https://stackoverflow.com/questions/54199125/how-to-match-with-vector-element-in-rust/54199323#54199323", "title": "How to match with vector element in Rust?", "body": "<p>The pattern of a match arm is <a href=\"https://doc.rust-lang.org/reference/patterns.html\" rel=\"nofollow noreferrer\">defined</a> as</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Syntax\nPattern :\n     LiteralPattern\n   | IdentifierPattern\n   | WildcardPattern\n   | RangePattern\n   | ReferencePattern\n   | StructPattern\n   | TupleStructPattern\n   | TuplePattern\n   | GroupedPattern\n   | SlicePattern\n   | PathPattern\n   | MacroInvocation\n</code></pre>\n\n<p>It's either constant (including literal) or structural, not computed. A value defined as <code>list[0]</code> matches none of those definitions.</p>\n\n<p>Fortunately, a match arm may also contain a <a href=\"https://doc.rust-lang.org/1.5.0/book/patterns.html#guards\" rel=\"nofollow noreferrer\">guard expression</a>, which allows for this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x = 1;\nlet list = vec![1, 2];\n\nmatch x {\n    _ if x == list[0] =&gt; println!(\"one\"),\n    _ if x == list[1] =&gt; println!(\"two\"),\n    _ =&gt; println!(\"something else\")\n}\n</code></pre>\n\n<p>Using <code>if else</code> would be cleaner, though (or a different structure if you have more cases, like a map, or the index).</p>\n"}], "owner": {"reputation": 310, "user_id": 308123, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lxL5P.jpg?s=128&g=1", "display_name": "Ananth Pattabiraman", "link": "https://stackoverflow.com/users/308123/ananth-pattabiraman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2905, "favorite_count": 0, "accepted_answer_id": 54199323, "answer_count": 1, "score": 5, "last_activity_date": 1547589295, "creation_date": 1547556200, "last_edit_date": 1547563663, "question_id": 54199125, "link": "https://stackoverflow.com/questions/54199125/how-to-match-with-vector-element-in-rust", "title": "How to match with vector element in Rust?", "body": "<p>In Rust, matching a value like this works.</p>\n\n<pre><code>let x = 1;\n\nmatch x {\n    1 =&gt; println!(\"one\"),\n    2 =&gt; println!(\"two\"),\n    _ =&gt; println!(\"something else\")\n}\n</code></pre>\n\n<p>But using values from a vector instead of hard-coded numbers in <code>match</code> doesn't work.</p>\n\n<pre><code>let x = 1;\nlet list = vec![1, 2];\n\nmatch x {\n    list[0] =&gt; println!(\"one\"),\n    list[1] =&gt; println!(\"two\"),\n    _ =&gt; println!(\"something else\")\n}\n</code></pre>\n\n<p>This fails with the message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `=&gt;`, `@`, `if`, or `|`, found `[`\n --&gt; src/main.rs:6:9\n  |\n6 |     list[0] =&gt; println!(\"one\"),\n  |         ^ expected one of `=&gt;`, `@`, `if`, or `|` here\n</code></pre>\n\n<p>Why doesn't it work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1547550509, "post_id": 54197180, "comment_id": 95221940, "body": "Or you can swap memory: <code>let tmp = std::mem::replace(&amp;mut a[1], Vec::new())</code>: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5801bfb3cefe43a13ef6dc774d2daf84\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. Either way, that&#39;s a duplicate."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1547550871, "post_id": 54197180, "comment_id": 95222120, "body": "@Boiethios, I don&#39;t think it is what OP&#39;s need. The need was checking the containing vectors were need to be trailed so there needs to be element matching with the last and first elements. I am not sure the edit and the playground link is appropriate for the OP&#39;s need since the vectors are replaced  with mem::replace index as hardcoded"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1547551500, "post_id": 54197180, "comment_id": 95222445, "body": "@AkinerAlkan Well, I&#39;m not here to guess. If the OP wants to do this, let he update the question."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1547551705, "post_id": 54197180, "comment_id": 95222563, "body": "@Boiethios, you are right, So I am leaving my answer as it is, and let&#39;s say if the OP really have the needs as asked in the beginning then he can use my answer, If it&#39;s not, your playground link will be the more simple and reasonable solution"}, {"owner": {"reputation": 73, "user_id": 2655800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42bea47e0da1af52f054aedaa04a80ed?s=128&d=identicon&r=PG", "display_name": "user2655800", "link": "https://stackoverflow.com/users/2655800/user2655800"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1547562294, "post_id": 54197180, "comment_id": 95228288, "body": "@Boiethios @AkinerAlkan Sorry, I changed my question to a simpler one while you were writing your response. To both simplified and full question the <code>std::mem::replace</code> function solves my issue."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 4, "creation_date": 1547550284, "post_id": 54197601, "comment_id": 95221819, "body": "That&#39;s <b>way</b> much too complicated."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1547551817, "post_id": 54197601, "comment_id": 95222603, "body": "It <b>does</b> answer the question as originally asked though\u2026"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1547551888, "post_id": 54197601, "comment_id": 95222643, "body": "@Jmb Oh, my bad, I didn&#39;t see the first version of the question..."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 2, "last_activity_date": 1547550239, "creation_date": 1547550239, "answer_id": 54197601, "question_id": 54197180, "link": "https://stackoverflow.com/questions/54197180/in-rust-how-to-merge-two-sub-vectors-within-a-vector-of-vectors/54197601#54197601", "title": "In Rust how to merge two sub vectors within a vector of vectors?", "body": "<p>You can implement it in a one loop with using fold</p>\n\n<pre><code>fn main() {\n    let mut a = vec![vec![1, 2, 3], vec![3, 4, 5, 6], vec![8, 9]];\n\n    a.iter_mut()\n        .fold(&amp;mut Vec::new(), |previous_vec, current_vec| {\n            if previous_vec.len() &gt; 0\n                &amp;&amp; current_vec.len() &gt; 0\n                &amp;&amp; previous_vec.last() == current_vec.first()\n            {\n                previous_vec.append(current_vec);\n                return previous_vec;\n            }\n            current_vec\n        });\n\n    assert_eq!(a, vec![vec![1, 2, 3, 3, 4, 5, 6], vec![], vec![8, 9]]);\n}\n</code></pre>\n\n<p>You can test it in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=264f152901d815d2533b2df29e14f249\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 438, "user_id": 1856291, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/fdea86c71c725c1932114ed5db6723b3?s=128&d=identicon&r=PG", "display_name": "Sugar", "link": "https://stackoverflow.com/users/1856291/sugar"}, "is_accepted": false, "score": 0, "last_activity_date": 1547552969, "last_edit_date": 1547552969, "creation_date": 1547551443, "answer_id": 54197890, "question_id": 54197180, "link": "https://stackoverflow.com/questions/54197180/in-rust-how-to-merge-two-sub-vectors-within-a-vector-of-vectors/54197890#54197890", "title": "In Rust how to merge two sub vectors within a vector of vectors?", "body": "<p>I think best solution to use <code>extend</code> with <code>iter</code> or <code>drain</code> iterators</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let mut v1 = vec![1,2,3];\n    let mut v2 = vec![3,4,5];\n\n    if v1[v1.len()-1] == v2[0] {\n        v1.extend(v2[1..].iter()); // clones elemts\n        println!(\"{:?}\", v1);\n        v1.extend(v2.drain(1..)); // drained from second vector this time\n        println!(\"{:?}\", v2);\n    }\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6dbd9e0d5acad8e6916852e04601d68c\" rel=\"nofollow noreferrer\">Live example</a></p>\n\n<p>you pass slice to <code>extend</code> and if you want them to be moved use <code>drain</code> or <code>iter</code> for cloning. Not drained elements will be left in second vector.</p>\n\n<p>Upd: with changes you made to the question you probably should just move inner vec to some temporary vec after checking and then merge it with extend </p>\n"}], "owner": {"reputation": 73, "user_id": 2655800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42bea47e0da1af52f054aedaa04a80ed?s=128&d=identicon&r=PG", "display_name": "user2655800", "link": "https://stackoverflow.com/users/2655800/user2655800"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 664, "favorite_count": 0, "closed_date": 1547562314, "answer_count": 2, "score": 0, "last_activity_date": 1547552969, "creation_date": 1547548714, "last_edit_date": 1547550461, "question_id": 54197180, "link": "https://stackoverflow.com/questions/54197180/in-rust-how-to-merge-two-sub-vectors-within-a-vector-of-vectors", "closed_reason": "Duplicate", "title": "In Rust how to merge two sub vectors within a vector of vectors?", "body": "<p>In Rust, I have a <code>Vec</code> of <code>Vec</code>. I want to merge the content of one sub <code>Vec</code> with another one.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>let mut a = vec![vec![1, 2, 3], vec![3, 4, 5, 6], vec![8, 9]];\na[0].append(&amp;mut a[1]);\nassert_eq!(&amp;a, &amp;[vec![1, 2, 3, 3, 4, 5, 6], vec![], vec![8, 9]])\n</code></pre>\n\n<p>The issue is that I cannot borrow twice <code>a</code> as mutable.\nWhat is the most efficient and idiomatic way to solve it?</p>\n"}, {"tags": ["github", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 7, "last_activity_date": 1547548144, "creation_date": 1547548144, "answer_id": 54197011, "question_id": 54196846, "link": "https://stackoverflow.com/questions/54196846/how-to-specify-a-certain-commit-in-dependencies-in-cargo-toml/54197011#54197011", "title": "How to specify a certain commit in dependencies in Cargo.toml?", "body": "<p>You can use the <strong><code>rev</code></strong> key to specify a commit hash. For example:</p>\n\n<pre><code>thelib = { git = \"https://github.com/someguys/thelib\", rev = \"9f35b8e\" }\n</code></pre>\n\n<p>It's briefly mentioned in <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html\" rel=\"noreferrer\">this section of the Cargo book</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 31, "last_activity_date": 1575891102, "last_edit_date": 1575891102, "creation_date": 1547548156, "answer_id": 54197014, "question_id": 54196846, "link": "https://stackoverflow.com/questions/54196846/how-to-specify-a-certain-commit-in-dependencies-in-cargo-toml/54197014#54197014", "title": "How to specify a certain commit in dependencies in Cargo.toml?", "body": "<p>As hinted in the <a href=\"https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html#cargotoml-vs-cargolock\" rel=\"noreferrer\">Cargo.toml vs Cargo.lock</a> section of the Cargo guide, you can use the <code>rev</code> property to specify a commit hash:</p>\n\n<blockquote>\n  <p>[...] If you build this package today, and then you send a copy to me, and I build this package tomorrow, something bad could happen. There could be more commits to rand in the meantime, and my build would include new commits while yours would not. Therefore, we would get different builds. This would be bad because we want reproducible builds.</p>\n  \n  <p>We could fix this problem by putting a rev line in our Cargo.toml:</p>\n\n<pre><code>[dependencies]\nrand = { git = \"https://github.com/rust-lang-nursery/rand.git\", rev = \"9f35b8e\" }\n</code></pre>\n</blockquote>\n\n<p>It is also mentioned in <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-dependencies-from-git-repositories\" rel=\"noreferrer\">Specifying dependencies</a>, although no example is given (emphasis mine):</p>\n\n<blockquote>\n  <p>Since we haven\u2019t specified any other information, Cargo assumes that we intend to use the latest commit on the <code>master</code> branch to build our package. You can <strong>combine the git key with the <code>rev</code>, <code>tag</code>, or <code>branch</code> keys</strong> to specify something else. [...]</p>\n</blockquote>\n"}], "owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3913, "favorite_count": 0, "accepted_answer_id": 54197014, "answer_count": 2, "score": 21, "last_activity_date": 1575891102, "creation_date": 1547547518, "last_edit_date": 1547547974, "question_id": 54196846, "link": "https://stackoverflow.com/questions/54196846/how-to-specify-a-certain-commit-in-dependencies-in-cargo-toml", "title": "How to specify a certain commit in dependencies in Cargo.toml?", "body": "<p>I am trying to configure my Rust project with an external dependency in GitHub. Unfortunately, some last commits made some changes in interfaces so I am unable to use the latest version. The developers also do not care of tags and separate branches for different versions, so I think the only correct way is to specify a certain commit somehow where the interface fits what I worked with.</p>\n\n<p>What I have now in <code>Cargo.toml</code> is:</p>\n\n<pre><code>[dependencies]\n...\nthelib = { git = 'https://github.com/someguys/thelib' }\n</code></pre>\n\n<p>I saw it is possible to specify a branch like this:</p>\n\n<pre><code>thelib = { git = 'https://github.com/someguys/thelib', branch = 'branch1' }\n</code></pre>\n\n<p>But I have not seen a working example with a commit. Could anybody provide one here?</p>\n"}, {"tags": ["rust", "serde", "rust-rocket"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 7628667, "user_type": "registered", "profile_image": "https://graph.facebook.com/10202996060299586/picture?type=large", "display_name": "Baptiste Vad&#233;", "link": "https://stackoverflow.com/users/7628667/baptiste-vad%c3%a9"}, "edited": false, "score": 0, "creation_date": 1547550279, "post_id": 54197312, "comment_id": 95221817, "body": "Yes this i due to insomnia. But with the curl command I have the same behavior."}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "reply_to_user": {"reputation": 33, "user_id": 7628667, "user_type": "registered", "profile_image": "https://graph.facebook.com/10202996060299586/picture?type=large", "display_name": "Baptiste Vad&#233;", "link": "https://stackoverflow.com/users/7628667/baptiste-vad%c3%a9"}, "edited": false, "score": 1, "creation_date": 1547550808, "post_id": 54197312, "comment_id": 95222090, "body": "Can you check it again? I compiled and executed the same code on my computer without any problems. Take a look: <a href=\"https://i.imgur.com/uLZA5L4.png\" rel=\"nofollow noreferrer\">i.imgur.com/uLZA5L4.png</a>"}, {"owner": {"reputation": 33, "user_id": 7628667, "user_type": "registered", "profile_image": "https://graph.facebook.com/10202996060299586/picture?type=large", "display_name": "Baptiste Vad&#233;", "link": "https://stackoverflow.com/users/7628667/baptiste-vad%c3%a9"}, "edited": false, "score": 1, "creation_date": 1547558133, "post_id": 54197312, "comment_id": 95225827, "body": "I created a new project, copy paste my code.... and it&#39;s working but not on my old one.. wierd. Thank you !"}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": true, "score": 2, "last_activity_date": 1547549164, "creation_date": 1547549164, "answer_id": 54197312, "question_id": 54196607, "link": "https://stackoverflow.com/questions/54196607/how-works-jsont-form-data-does-not-have-form-content-type/54197312#54197312", "title": "How works Json&lt;T&gt; (Form data does not have form content type)", "body": "<p>You are requesting a <code>POST</code> endpoint like a <code>GET</code> endpoint by providing the parameters in the URL. Try the following with <code>curl</code>:</p>\n\n<pre><code>curl -d '{\"id\": 1, \"title\": \"titre\", \"body\": \"corps\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8000/article/new\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 7628667, "user_type": "registered", "profile_image": "https://graph.facebook.com/10202996060299586/picture?type=large", "display_name": "Baptiste Vad&#233;", "link": "https://stackoverflow.com/users/7628667/baptiste-vad%c3%a9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 360, "favorite_count": 0, "accepted_answer_id": 54197312, "answer_count": 1, "score": 3, "last_activity_date": 1547549164, "creation_date": 1547546678, "last_edit_date": 1547546984, "question_id": 54196607, "link": "https://stackoverflow.com/questions/54196607/how-works-jsont-form-data-does-not-have-form-content-type", "title": "How works Json&lt;T&gt; (Form data does not have form content type)", "body": "<p>I'm totaly new to rust. I'm trying to create a very simple API with rocket.\nI have the folowing route that dosn't work and I don't know why.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(proc_macro_hygiene, decl_macro)]\n\n#[macro_use] extern crate rocket;\n\nuse rocket_contrib::json::Json;\nuse serde::{Serialize, Deserialize};\nuse serde_json::Result as JsonResult;\n\n#[derive(Serialize, Deserialize)]\nstruct Article {\n    id: usize,\n    title: String,\n    body: String,\n}\n\n#[post(\"/new\", format = \"application/json\", data = \"&lt;article&gt;\")]\nfn create_article (article: Json&lt;Article&gt;) -&gt; JsonResult&lt;()&gt; {\n    println!(\"Article is: id:{}, title:{}, body:{}\", article.id, article.title, article.body);\n    Ok(())\n}\n\nfn main() {\n    rocket::ignite()\n    .mount(\"/article\", routes![create_article])\n    .launch();\n}\n</code></pre>\n\n<p>When I send the request I have the folowing :</p>\n\n<pre><code>POST /article/new?id=1&amp;title=titre&amp;body=corps application/json:\n    =&gt; Matched: POST /article/new (create_article)\n    =&gt; Warning: Form data does not have form content type.\n    =&gt; Outcome: Forward\n    =&gt; Error: No matching routes for POST /article/new?id=1&amp;title=titre&amp;body=corps application/json.\n    =&gt; Warning: Responding with 404 Not Found catcher.\n    =&gt; Response succeeded.\n\n</code></pre>\n\n<p>Can someone help me ?</p>\n"}, {"tags": ["null", "rust", "idioms"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1547544442, "post_id": 54195517, "comment_id": 95218700, "body": "Are you asking for the difference between using <code>Option&lt;NonNull&lt;T&gt;&gt;</code> and <code>*mut T</code>?"}, {"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1547544810, "post_id": 54195517, "comment_id": 95218922, "body": "@E_net4wisheshappyholidays I mean, what&#39;s the difference between Option and std::ptr::null() to implement nullptr, which way is recommended to implement nullptr?"}], "answers": [{"comments": [{"owner": {"reputation": 8047, "user_id": 565879, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/de9dab7c27809643dc51c5193d58429c?s=128&d=identicon&r=PG", "display_name": "Buttons840", "link": "https://stackoverflow.com/users/565879/buttons840"}, "edited": false, "score": 2, "creation_date": 1572281064, "post_id": 54196298, "comment_id": 103502857, "body": "The NonNull documentation says: &quot;If you&#39;re not sure if you should use NonNull&lt;T&gt;, just use *mut T!&quot;"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1547545563, "creation_date": 1547545563, "answer_id": 54196298, "question_id": 54195517, "link": "https://stackoverflow.com/questions/54195517/should-we-use-option-or-ptrnull-to-represent-a-null-pointer-in-rust/54196298#54196298", "title": "Should we use Option or ptr::null to represent a null pointer in Rust?", "body": "<p>In general, I'd recommend using <code>NonNull&lt;T&gt;</code> over <code>*const T</code> or <code>*mut T</code>, using <code>Option</code> as appropriate to identify when the pointer may be null.</p>\n\n<p>The reason is two-fold:</p>\n\n<ol>\n<li>Whether null is a valid value, or not, is documented and <em>enforced</em> when using <code>NonNull</code>.</li>\n<li><code>*const T</code> and <code>*mut T</code> are essentially interchangeable, and indeed can be cast to one another, so that <code>const</code> or <code>mut</code> may provide a false sense of safety.</li>\n</ol>\n\n<hr>\n\n<p>The implementation of <code>BTree</code> may simply not have been ported over to <code>NonNull</code>, which is relatively recent -- it was stabilized only in 1.25.</p>\n"}], "owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 927, "favorite_count": 2, "accepted_answer_id": 54196298, "answer_count": 1, "score": 10, "last_activity_date": 1547740413, "creation_date": 1547542545, "last_edit_date": 1547740413, "question_id": 54195517, "link": "https://stackoverflow.com/questions/54195517/should-we-use-option-or-ptrnull-to-represent-a-null-pointer-in-rust", "title": "Should we use Option or ptr::null to represent a null pointer in Rust?", "body": "<p>The standard library's linked-list <code>Node</code> <a href=\"https://github.com/rust-lang/rust/blob/1.31.1/src/liballoc/collections/linked_list.rs#L52-L56\" rel=\"noreferrer\">uses the <code>Option</code> type</a>:</p>\n\n<pre><code>struct Node&lt;T&gt; {\n    next: Option&lt;NonNull&lt;Node&lt;T&gt;&gt;&gt;,\n    prev: Option&lt;NonNull&lt;Node&lt;T&gt;&gt;&gt;,\n    element: T,\n}\n</code></pre>\n\n<p>and creates a node with this code:</p>\n\n<pre><code>Node {\n    next: None,\n    prev: None,\n    element,\n}\n</code></pre>\n\n<p>The implementation of <code>LeafNode</code> of <code>BTree</code>, the standard library <a href=\"https://github.com/rust-lang/rust/blob/1.31.1/src/liballoc/collections/btree/node.rs#L65-L85\" rel=\"noreferrer\">uses a raw pointer for the parent node</a>:</p>\n\n<pre><code>struct LeafNode&lt;K, V&gt; {\n    parent: *const InternalNode&lt;K, V&gt;,\n    parent_idx: MaybeUninit&lt;u16&gt;,\n    len: u16,\n    keys: MaybeUninit&lt;[K; CAPACITY]&gt;,\n    vals: MaybeUninit&lt;[V; CAPACITY]&gt;,\n}\n</code></pre>\n\n<p>and creates new leaf nodes <a href=\"https://github.com/rust-lang/rust/blob/1.31.1/src/liballoc/collections/btree/node.rs#L91-L99\" rel=\"noreferrer\">by setting <code>parent</code> to <code>ptr::null</code></a>:</p>\n\n<pre><code>LeafNode {\n    keys: MaybeUninit::uninitialized(),\n    vals: MaybeUninit::uninitialized(),\n    parent: ptr::null(),\n    parent_idx: MaybeUninit::uninitialized(),\n    len: 0\n}\n</code></pre>\n\n<p>We can use <code>nullptr</code> to implement the above code in C++, so what's the difference between <code>Option</code> and <code>std::ptr::null()</code> to represent a null pointer? What's the recommended way to represent a null pointer?</p>\n"}, {"tags": ["string", "rust", "clion"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1547540684, "post_id": 54194916, "comment_id": 95217001, "body": "If I&#39;m not wrong, this IDE has its own code validator. I guess that they did a mistake in it."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1547542662, "post_id": 54194916, "comment_id": 95217831, "body": "Did you really intend to move the <code>String</code> just to print it out once?"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1547543800, "post_id": 54194916, "comment_id": 95218377, "body": "No it is just MCVE. Real code logic is different than println!"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1547545242, "post_id": 54194916, "comment_id": 95219152, "body": "This error is emitted by your IDE, not by the compiler itself. You should compile your program to check if the <b>compiler</b> can do it, the IDE just guides you."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1547546883, "post_id": 54194916, "comment_id": 95220044, "body": "So, if we all sure about that this is a mistake of IDE and implementing such like this code is legit and elegant enough, Then I am closing it as off topic?"}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1547553313, "post_id": 54194916, "comment_id": 95223359, "body": "@AkinerAlkan, it isn&#39;t off-topic. It is a valid question, with answer that it is a CLion Rust Plugin issue."}], "answers": [{"tags": [], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "is_accepted": true, "score": 2, "last_activity_date": 1547553562, "creation_date": 1547553562, "answer_id": 54198396, "question_id": 54194916, "link": "https://stackoverflow.com/questions/54194916/does-string-literal-slice-usage-with-string-references-is-valid/54198396#54198396", "title": "Does String Literal Slice Usage with String references is Valid?", "body": "<p>The code does compile as written, as the playground clearly demonstrates. Therefore it is a bug in the IDEA Rust Plugin.</p>\n\n<p>Unlike most other Rust plugins that use the <a href=\"https://github.com/rust-lang/rls\" rel=\"nofollow noreferrer\">Rust Language Server</a>, which uses code from the compiler, and therefore generally provides diagnostics consistent with what the compiler will, IntelliJ IDEA has its own validator, which might get things wrong.</p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 54198396, "answer_count": 1, "score": 0, "last_activity_date": 1547553562, "creation_date": 1547540061, "last_edit_date": 1547541225, "question_id": 54194916, "link": "https://stackoverflow.com/questions/54194916/does-string-literal-slice-usage-with-string-references-is-valid", "title": "Does String Literal Slice Usage with String references is Valid?", "body": "<p>I have the following code block and it works as intended with no problem:</p>\n\n<pre><code>fn literal_taker(literals_slice: &amp;[&amp;str]){\n    println!(\"{:?}\",literals_slice);\n}\n\nfn string_taker(string_value: String){\n    literal_taker(&amp;[&amp;string_value]);\n}\n\nfn main() {\n    let string_value = String::from(\"Hello\");\n    string_taker(string_value);\n}\n</code></pre>\n\n<p>Here, I pass the reference of <code>String</code> as a slice and it is compiling with no error and no clippy issue.</p>\n\n<p>But the problem is, It is shown as warning in Clion Rust plugin:</p>\n\n<p><a href=\"https://i.stack.imgur.com/EBX6b.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/EBX6b.png\" alt=\"enter image description here\"></a></p>\n\n<p>Is it a bug of an plugin or am I doing something bad practice in Rust?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=eac74822ce586d988761b326b7bf836b\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<blockquote>\n  <p><a href=\"https://intellij-rust.github.io/2018/09/26/changelog-83.html\" rel=\"nofollow noreferrer\">CLion Rust Plugin</a> Version: 0.2.0.2106-182</p>\n</blockquote>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1547538260, "post_id": 54193503, "comment_id": 95216037, "body": "This will be very plateforme-specific. Eg. Linux doesn\u2019t have a concept of terminal window, a program could just as well be running in a tty, or a pipe, or be called from another program with its output captured, etc. Plus, different distributions have different terminal emulators, how would you know which one to start?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547574319, "post_id": 54193503, "comment_id": 95235221, "body": "Your question is off topic because you ask recommandation, and also unclear as you didn&#39;t specify what operating system you are using."}], "answers": [{"tags": [], "owner": {"reputation": 467, "user_id": 2181263, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/7977b535a75d659cf7fdf878d1bed39a?s=128&d=identicon&r=PG&f=1", "display_name": "Brandon Ross Pollack", "link": "https://stackoverflow.com/users/2181263/brandon-ross-pollack"}, "is_accepted": false, "score": 1, "last_activity_date": 1547535073, "creation_date": 1547535073, "answer_id": 54193958, "question_id": 54193503, "link": "https://stackoverflow.com/questions/54193503/crate-that-allows-my-application-to-launch-a-new-console-screen/54193958#54193958", "title": "Crate that allows my application to launch a new console screen", "body": "<p>That's very platform specific.  You could start a new process, use x on Linux in process, use Wayland on Linux in process, use Win32 API on Windows, (list goes on)</p>\n\n<p>You also might consider any ui frameworks etc for rust (of which there are few)</p>\n\n<p>Creating a new process of terminal emulator on the system and writing to it's std in while launching cat in it is probably your best bet <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/process/struct.Command.html</a></p>\n\n<p>I hope this helps</p>\n"}], "owner": {"reputation": 3, "user_id": 10616092, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-RUSIwSBPjYc/AAAAAAAAAAI/AAAAAAAAAEs/s6eyKtem2fY/photo.jpg?sz=128", "display_name": "simwilso", "link": "https://stackoverflow.com/users/10616092/simwilso"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1547536649, "creation_date": 1547532429, "last_edit_date": 1547536649, "question_id": 54193503, "link": "https://stackoverflow.com/questions/54193503/crate-that-allows-my-application-to-launch-a-new-console-screen", "title": "Crate that allows my application to launch a new console screen", "body": "<p>I have a Rust application that runs from a console.  When run I want the application to run a thread that opens a 'new console' window and prints text to that window.</p>\n\n<p>Is there a crate or configuration anyone can suggest for launching a second (and maybe third and fourth) Terminal screen?</p>\n"}, {"tags": ["command-line", "rust", "clap"], "answers": [{"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 4, "last_activity_date": 1547521584, "last_edit_date": 1547521584, "creation_date": 1547521393, "answer_id": 54192171, "question_id": 54191836, "link": "https://stackoverflow.com/questions/54191836/how-can-i-pass-all-command-line-arguments-through-clap-to-another-program/54192171#54192171", "title": "How can I pass all command line arguments through Clap to another program?", "body": "<p>If the value of argument <code>bar</code> may itself start with a hyphen, then you need to set the <a href=\"https://docs.rs/clap/2.32.0/clap/struct.Arg.html#method.allow_hyphen_values\" rel=\"nofollow noreferrer\"><code>allow_hyphen_values</code></a> option:</p>\n\n<pre><code>let _matches = App::new(\"Foo\")\n    .arg(Arg::with_name(\"file\").value_name(\"FILE\").required(true))\n    .arg(\n        Arg::with_name(\"bar\")\n            .value_name(\"[BAR_OPTIONS]\")\n            .allow_hyphen_values(true)\n            .short(\"b\")\n            .long(\"bar\")\n            .multiple(true)\n            .help(\"Invoke bar with these options\"),\n    )\n    .get_matches();\n</code></pre>\n"}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 450, "favorite_count": 0, "accepted_answer_id": 54192171, "answer_count": 1, "score": 1, "last_activity_date": 1547524917, "creation_date": 1547518305, "last_edit_date": 1547521460, "question_id": 54191836, "link": "https://stackoverflow.com/questions/54191836/how-can-i-pass-all-command-line-arguments-through-clap-to-another-program", "title": "How can I pass all command line arguments through Clap to another program?", "body": "<p>I have a program <code>foo</code> that uses <a href=\"https://github.com/clap-rs/clap\" rel=\"nofollow noreferrer\">Clap</a> to handle command argument parsing. <code>foo</code> invokes another program, <code>bar</code>. Recently, I decided that users of <code>foo</code> should be able to pass arguments to <code>bar</code> if they like. I added the <code>bar</code> command to Clap:</p>\n\n<pre><code>let matches = App::new(\"Foo\")\n    .arg(Arg::with_name(\"file\").value_name(\"FILE\").required(true))\n    .arg(\n        Arg::with_name(\"bar\")\n            .value_name(\"[BAR_OPTIONS]\")\n            .short(\"b\")\n            .long(\"bar\")\n            .multiple(true)\n            .help(\"Invoke bar with these options\"),\n    )\n    .get_matches();\n</code></pre>\n\n<p>When I try to pass the command <code>\"-baz=3\"</code> to <code>bar</code> like so:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./foo -b -baz=3 file.txt\n</code></pre>\n\n<p>or</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./foo -b \"-baz=3\" file.txt\n</code></pre>\n\n<p><code>clap</code> returns this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: Found argument '-b' which wasn't expected, or isn't valid in this context\n</code></pre>\n\n<p>How do I tunnel commands through Clap?</p>\n"}, {"tags": ["rust", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547516395, "post_id": 54191566, "comment_id": 95211015, "body": "You cannot. For an <code>i32</code>, I&#39;d recommend just dereferencing the value if it&#39;s present, but you can also use a <code>Cow</code> in other cases."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547517099, "post_id": 54191566, "comment_id": 95211142, "body": "See also <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547517543, "post_id": 54191566, "comment_id": 95211249, "body": "The duplicates <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=db10a2afe154b0002515783c610c12a6\" rel=\"nofollow noreferrer\">applied to your question</a>, plus a healthy smattering of logic bugs fixed."}], "owner": {"reputation": 839, "user_id": 2370606, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/09d27497e14c216effe32f2c28b6691a?s=128&d=identicon&r=PG", "display_name": "Mike Harris", "link": "https://stackoverflow.com/users/2370606/mike-harris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 182, "favorite_count": 0, "closed_date": 1547516225, "answer_count": 0, "score": 1, "last_activity_date": 1547516451, "creation_date": 1547515934, "last_edit_date": 1547516451, "question_id": 54191566, "link": "https://stackoverflow.com/questions/54191566/how-do-you-return-an-option-of-a-reference-to-an-i32", "closed_reason": "Duplicate", "title": "How do you return an Option of a reference to an i32?", "body": "<p>I am working through The Rust Book and I am having problems with the following:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn it_finds_median_for_even_number_of_elements() {\n        let mut v: Vec&lt;i32&gt; = vec![1, 3];\n        assert_eq!(*median(&amp;mut v).unwrap(), 2);\n    }\n}\n\nfn median&lt;'a&gt;(v: &amp;'a mut Vec&lt;i32&gt;) -&gt; Option&lt;&amp;'a i32&gt; {\n    v.sort();\n    let midpoint = v.len() / 2;\n    match midpoint % 2 == 0 {\n        true =&gt; Some(&amp;(v[midpoint] - v[midpoint - 1] / 2)),\n        false =&gt; v.get(midpoint),\n    }\n}\n</code></pre>\n\n<p>When I build this I get the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing temporary value\n  --&gt; src/lib.rs:16:17\n   |\n16 |         true =&gt; Some(&amp;(v[midpoint] - v[midpoint - 1] / 2)),\n   |                 ^^^^^^-----------------------------------^\n   |                 |     |\n   |                 |     temporary value created here\n   |                 returns a value referencing data owned by the current function\n</code></pre>\n\n<p>How do I convert the i32 value from <code>v[midpoint] - v[midpoint - 1] / 2</code> to a reference which the caller can access?</p>\n"}, {"tags": ["rust", "dependency-management", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 865, "user_id": 318902, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bd1abbefb37e6a91831bbc1ac7279456?s=128&d=identicon&r=PG", "display_name": "jhfrontz", "link": "https://stackoverflow.com/users/318902/jhfrontz"}, "edited": false, "score": 0, "creation_date": 1547570441, "post_id": 54191775, "comment_id": 95233283, "body": "It looks like <code>cargo-outdated</code> just automates the manual hack?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 865, "user_id": 318902, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bd1abbefb37e6a91831bbc1ac7279456?s=128&d=identicon&r=PG", "display_name": "jhfrontz", "link": "https://stackoverflow.com/users/318902/jhfrontz"}, "edited": false, "score": 0, "creation_date": 1547572316, "post_id": 54191775, "comment_id": 95234229, "body": "@jhfrontz no, I don&#39;t think so. They are slightly different usecases that might happen to overlap in certain situations. <code>cargo outdated</code> is supposed to tell you when the versions you have aren&#39;t the newest possible. Presumably, there are cases where the Cargo.toml and Cargo.lock are out-of-sync but you already have the newest version."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1547517804, "creation_date": 1547517804, "answer_id": 54191775, "question_id": 54191161, "link": "https://stackoverflow.com/questions/54191161/how-can-i-get-cargo-to-tell-me-what-content-is-out-of-date-when-building-with/54191775#54191775", "title": "How can I get Cargo to tell me what content is out of date when building with --locked?", "body": "<p>I would:</p>\n\n<ol>\n<li>Perform a build without <code>--locked</code></li>\n<li>Diff the changed Cargo.lock to the one saved in source control.</li>\n</ol>\n\n<p>I might also try a tool like <a href=\"https://github.com/kbknapp/cargo-outdated\" rel=\"nofollow noreferrer\">cargo outdated</a>, but this will show all the dependencies that are out of date, not just mismatches between Cargo.toml and Cargo.lock.</p>\n"}], "owner": {"reputation": 865, "user_id": 318902, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bd1abbefb37e6a91831bbc1ac7279456?s=128&d=identicon&r=PG", "display_name": "jhfrontz", "link": "https://stackoverflow.com/users/318902/jhfrontz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 314, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1547517804, "creation_date": 1547512267, "last_edit_date": 1547512714, "question_id": 54191161, "link": "https://stackoverflow.com/questions/54191161/how-can-i-get-cargo-to-tell-me-what-content-is-out-of-date-when-building-with", "title": "How can I get Cargo to tell me what content is out of date when building with --locked?", "body": "<p>When building via <code>cargo --locked test</code>, if the Cargo.lock file is out of date you'll get the message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the lock file /home/.../Cargo.lock needs to be updated but --locked was passed to prevent this\n</code></pre>\n\n<p>Adding <code>--verbose</code> doesn't yield any additional information.</p>\n"}, {"tags": ["rust", "closures", "clone"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1547514195, "creation_date": 1547514195, "answer_id": 54191371, "question_id": 54191007, "link": "https://stackoverflow.com/questions/54191007/how-do-i-make-a-closure-that-avoids-a-redundant-clone-of-captured-variables/54191371#54191371", "title": "How do I make a closure that avoids a redundant clone of captured variables?", "body": "<p>Realistically, you cannot avoid this. You never know if the closure will be called another time; you will need to keep the value in case it is. I wouldn't worry about performing the clone until profiling has identified that this is a bottleneck.</p>\n\n<hr>\n\n<p>In certain cases, you might be able to change your closure type to <code>FnOnce</code>, which enforces that it can only be called exactly once:</p>\n\n<pre><code>fn make_adder&lt;T&gt;(x: T) -&gt; impl FnOnce(T) -&gt; T::Output\nwhere\n    T: Add,\n{\n    move |y| x + y\n}\n</code></pre>\n\n<p>In other cases, you might be able to add some indirection to the problem. For example, instead of passing a <code>T</code>, pass in a closure that generates a <code>T</code> (presumably not by cloning its own captured variable...). This <code>T</code> can always be consumed directly:</p>\n\n<pre><code>fn make_adder&lt;T&gt;(x: impl Fn() -&gt; T) -&gt; impl Fn(T) -&gt; T::Output\nwhere\n    T: Add,\n{\n    move |y| x() + y\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547589050, "post_id": 54207211, "comment_id": 95241310, "body": "The first one doesn&#39;t really solve the problem, AFAICT. The closure is still owning a copy of the value that will never be used by anything but the closure itself."}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547589339, "post_id": 54207211, "comment_id": 95241442, "body": "@Shepmaster It avoids the <code>clone()</code> inside the closure, which was one of the OP\u2019s concerns. I agree that the second one is likely better if you\u2019re willing to have the callers pass a reference."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547589683, "post_id": 54207211, "comment_id": 95241571, "body": "I mean, you could &quot;avoid the <code>clone</code>&quot; by creating another trait with a different name, but as I see OPs question, the underlying issue is the &quot;wasted&quot; object."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 2, "last_activity_date": 1547589742, "last_edit_date": 1547589742, "creation_date": 1547588261, "answer_id": 54207211, "question_id": 54191007, "link": "https://stackoverflow.com/questions/54191007/how-do-i-make-a-closure-that-avoids-a-redundant-clone-of-captured-variables/54207211#54207211", "title": "How do I make a closure that avoids a redundant clone of captured variables?", "body": "<p>Perhaps you can use a reference, if you\u2019re using types that support addition on references (probably all the useful ones do, including the built-in numeric types).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn make_adder&lt;T, U&gt;(x: T) -&gt; impl Fn(T) -&gt; U\nwhere\n    for&lt;'a&gt; &amp;'a T: Add&lt;T, Output = U&gt;,\n{\n    move |y| &amp;x + y\n}\n</code></pre>\n\n<p>or</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn make_adder&lt;'a, T&gt;(x: &amp;'a T) -&gt; impl Fn(T) -&gt; &lt;&amp;'a T as Add&lt;T&gt;&gt;::Output\nwhere\n    &amp;'a T: Add&lt;T&gt;,\n{\n    move |y| x + y\n}\n</code></pre>\n"}], "owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 54191371, "answer_count": 2, "score": 2, "last_activity_date": 1547589742, "creation_date": 1547510849, "last_edit_date": 1547518430, "question_id": 54191007, "link": "https://stackoverflow.com/questions/54191007/how-do-i-make-a-closure-that-avoids-a-redundant-clone-of-captured-variables", "title": "How do I make a closure that avoids a redundant clone of captured variables?", "body": "<p>I'm trying to implement the classic <code>make_adder</code> function which takes an addable thing and returns a closure which takes another addable thing and returns the sum. Here is my attempt:</p>\n\n<pre><code>use std::ops::Add;\n\nfn make_adder&lt;T: Add + Clone&gt;(x: T) -&gt; impl Fn(T) -&gt; T::Output {\n    move |y| x.clone() + y\n}\n</code></pre>\n\n<p>Because I don't want to restrict <code>T</code> to be <code>Copy</code>, I'm calling <code>clone()</code> inside the closure. I think this also means there will always be one redundant <code>x</code> captured by the closure as the \"prototype\". Can I somehow do this better?</p>\n"}, {"tags": ["rust", "real-time"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1547507673, "post_id": 54190152, "comment_id": 95209179, "body": "I fear that this is harder than one might think, because what <code>rtfm</code> provides with <a href=\"https://japaric.github.io/cortex-m-rtfm/api/rtfm/struct.Instant.html\" rel=\"nofollow noreferrer\"><code>Instant</code></a> and <a href=\"https://japaric.github.io/cortex-m-rtfm/api/rtfm/struct.Duration.html\" rel=\"nofollow noreferrer\"><code>Duration</code></a> is only an opaque monotonically nondecreasing clock, without a trivial translation to real-world time."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547513338, "post_id": 54190152, "comment_id": 95210402, "body": "Do you know your processor&#39;s clock speed? Depending on how complex the processor is, the problem might be as simple as some division."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547516084, "post_id": 54191402, "comment_id": 95210953, "body": "Idiomatic Rust would just be <code>(sysclock.0 &#47; hertz.0).cycles()</code> \u2014 no <code>return</code>, no <code>;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547516138, "post_id": 54191402, "comment_id": 95210969, "body": "<i>for a serious answer</i> \u2014 why do you believe this isn&#39;t a serious answer? Seems reasonable, assuming that your processor architecture always runs one operation per clock cycle."}, {"owner": {"reputation": 4384, "user_id": 72637, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/Snqby.jpg?s=128&g=1", "display_name": "nraynaud", "link": "https://stackoverflow.com/users/72637/nraynaud"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547518956, "post_id": 54191402, "comment_id": 95211528, "body": "My extensive 2 days career in embedded rust tells me that they like to have a continuous connection by the static types between the moving parts of the system. here there is absolutely no explicit connection. In particular, there is no reason why the task scheduling system would have the same clock as the core, it&#39;s an implementation detail. Thanks for the syntax."}], "tags": [], "owner": {"reputation": 4384, "user_id": 72637, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/Snqby.jpg?s=128&g=1", "display_name": "nraynaud", "link": "https://stackoverflow.com/users/72637/nraynaud"}, "is_accepted": false, "score": 0, "last_activity_date": 1547516032, "last_edit_date": 1547516032, "creation_date": 1547514427, "answer_id": 54191402, "question_id": 54190152, "link": "https://stackoverflow.com/questions/54190152/how-to-use-seconds-to-schedule-a-task-in-real-time-for-the-masses-instead-of-cyc/54191402#54191402", "title": "How to use seconds to schedule a task in Real Time For the Masses instead of cycles?", "body": "<p>I found something: </p>\n\n<pre><code>fn hertz_to_cycles(sysclock: Hertz, hertz: Hertz) -&gt; Duration {\n    return (sysclock.0 / hertz.0).cycles();\n}\n\n#[init(schedule = [toggle])]\nunsafe fn init() {\n    let mut rcc = device.RCC.constrain();\n    let mut flash = device.FLASH.constrain();\n    let clocks = rcc.cfgr.freeze(&amp;mut flash.acr);\n    let sysclock = clocks.sysclk();\n    let period = hertz_to_cycles(sysclock, 2.hz());\n    schedule.toggle(Instant::now() + period).unwrap();\n}\n</code></pre>\n\n<p>I hope it gets the ball rolling for a serious answer.</p>\n\n<p>Basically the scheduler is based on DWT (data watchpoint trigger), and that thing <em>has</em> to be clocked at the core speed, so I went to get it there.</p>\n"}], "owner": {"reputation": 4384, "user_id": 72637, "user_type": "registered", "accept_rate": 54, "profile_image": "https://i.stack.imgur.com/Snqby.jpg?s=128&g=1", "display_name": "nraynaud", "link": "https://stackoverflow.com/users/72637/nraynaud"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1547516032, "creation_date": 1547505028, "last_edit_date": 1547513282, "question_id": 54190152, "link": "https://stackoverflow.com/questions/54190152/how-to-use-seconds-to-schedule-a-task-in-real-time-for-the-masses-instead-of-cyc", "title": "How to use seconds to schedule a task in Real Time For the Masses instead of cycles?", "body": "<p>I can only see examples using cycles of clock to schedule tasks in Real Time for the Masses (RTFM):</p>\n\n<pre><code>#[init(schedule = [foo])]\nfn init() {\n    schedule.foo(Instant::now() + PERIOD.cycles()).unwrap();\n}\n</code></pre>\n\n<p>I can't find a variable containing the clock speed, the source code of RTFM is mostly syntax tree manipulation inaccessible to a beginner, I struggle to find uses of this API on GitHub. How do I relate cycles to seconds?</p>\n"}, {"tags": ["android-ndk", "rust", "java-native-interface", "cross-compiling"], "answers": [{"tags": [], "owner": {"reputation": 340, "user_id": 8635494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5943c3419e244bae74cdab4cc218156b?s=128&d=identicon&r=PG", "display_name": "kubastick", "link": "https://stackoverflow.com/users/8635494/kubastick"}, "is_accepted": true, "score": 1, "last_activity_date": 1547513495, "last_edit_date": 1547513495, "creation_date": 1547500924, "answer_id": 54189381, "question_id": 54189024, "link": "https://stackoverflow.com/questions/54189024/failed-to-cross-compile-library-from-windows-to-android/54189381#54189381", "title": "Failed to cross-compile library from Windows to Android", "body": "<p>I have to use <code>.bat</code> instead of <code>.exe</code> file</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[target.aarch64-linux-android]\nar = \"C:/NDK/arm64/bin/aarch64-linux-android-ar\"\nlinker = \"C:/NDK/arm64/bin/aarch64-linux-android-clang.cmd\"\n</code></pre>\n\n<p>also env variables: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>SET CC=C:\\NDK\\arm64\\bin\\aarch64-linux-android-clang.cmd\nSET AR=C:\\NDK\\arm64\\bin\\aarch64-linux-android-ar\n</code></pre>\n"}], "owner": {"reputation": 340, "user_id": 8635494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5943c3419e244bae74cdab4cc218156b?s=128&d=identicon&r=PG", "display_name": "kubastick", "link": "https://stackoverflow.com/users/8635494/kubastick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1082, "favorite_count": 0, "accepted_answer_id": 54189381, "answer_count": 1, "score": 1, "last_activity_date": 1547513495, "creation_date": 1547499178, "last_edit_date": 1547513466, "question_id": 54189024, "link": "https://stackoverflow.com/questions/54189024/failed-to-cross-compile-library-from-windows-to-android", "title": "Failed to cross-compile library from Windows to Android", "body": "<p>I'm trying to cross-compile a Rust library to 4 Android targets (i386, x86_64, armv7, and aarch64) from Windows.</p>\n\n<p>I have set up Android NDK toolchain for these targets and tried to compile my library with help of <a href=\"https://mozilla.github.io/firefox-browser-architecture/experiments/2017-09-21-rust-on-android.html\" rel=\"nofollow noreferrer\">this tutorial</a>.</p>\n\n<p>I think I've set up the toolchain correctly, and I'm able to successfully execute <code>aarch64-linux-android-clang</code> in the terminal.  </p>\n\n<p>Build log:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo build --target aarch64-linux-android --release --verbose\n       Fresh cc v1.0.28\n       Fresh autocfg v0.1.1\n       Fresh version_check v0.1.5\n       Fresh void v1.0.2\n       Fresh cfg-if v0.1.6\n       Fresh rustc-demangle v0.1.13\n       Fresh byteorder v1.2.7\n       Fresh either v1.5.0\n       Fresh ascii v0.9.1\n       Fresh jni-sys v0.3.0\n       Fresh cesu8 v1.1.0\n       Fresh unreachable v1.0.0\n       Fresh log v0.4.6\n       Fresh winapi v0.3.6\n   Compiling backtrace-sys v0.1.28\n       Fresh libc v0.2.46\n     Running `C:\\Users\\My Username\\CLionProjects\\my_project\\target\\release\\build\\backtrace-sys-3bfde344967f80f2\\build-script-build`\n       Fresh winapi-util v0.1.1\n       Fresh memchr v2.1.2\n       Fresh same-file v1.0.4\n       Fresh combine v3.6.6\n       Fresh walkdir v2.2.7\nerror: failed to run custom build command for `backtrace-sys v0.1.28`\nprocess didn't exit successfully: `C:\\Users\\My Username\\CLionProjects\\my_project\\target\\release\\build\\backtrace-sys-3bfde344967f80f2\\build-script-build` (exit code: 101)\n--- stdout\ncargo:rustc-cfg=rbt\nTARGET = Some(\"aarch64-linux-android\")\nOPT_LEVEL = Some(\"3\")\nHOST = Some(\"x86_64-pc-windows-msvc\")\nCC_aarch64-linux-android = None\nCC_aarch64_linux_android = None\nTARGET_CC = None\nCC = None\nCFLAGS_aarch64-linux-android = None\nCFLAGS_aarch64_linux_android = None\nTARGET_CFLAGS = None\nCFLAGS = None\nrunning: \"aarch64-linux-android-clang\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"--target=aarch64-linux-android\" \"-I\" \"src/libbacktrace\" \"-I\" \"C:\\\\Users\\\\My Username\\\\CLionProjects\\\\my_project\\\\target\\\\aarch64-linux-android\\\\release\\\\build\\\\backtrace-sys-5aff8725b1b77839\\\\out\" \"-fvisibility=hidden\" \"-DBACKTRACE_ELF_SIZE=64\" \"-DBACKTRACE_SUPPORTED=1\" \"-DBACKTRACE_USES_MALLOC=1\" \"-DBACKTRACE_SUPPORTS_THREADS=0\" \"-DBACKTRACE_SUPPORTS_DATA=0\" \"-D_GNU_SOURCE=1\" \"-D_LARGE_FILES=1\" \"-Dbacktrace_full=__rbt_backtrace_full\" \"-Dbacktrace_dwarf_add=__rbt_backtrace_dwarf_add\" \"-Dbacktrace_initialize=__rbt_backtrace_initialize\" \"-Dbacktrace_pcinfo=__rbt_backtrace_pcinfo\" \"-Dbacktrace_syminfo=__rbt_backtrace_syminfo\" \"-Dbacktrace_get_view=__rbt_backtrace_get_view\" \"-Dbacktrace_release_view=__rbt_backtrace_release_view\" \"-Dbacktrace_alloc=__rbt_backtrace_alloc\" \"-Dbacktrace_free=__rbt_backtrace_free\" \"-Dbacktrace_vector_finish=__rbt_backtrace_vector_finish\" \"-Dbacktrace_vector_grow=__rbt_backtrace_vector_grow\" \"-Dbacktrace_vector_release=__rbt_backtrace_vector_release\" \"-Dbacktrace_close=__rbt_backtrace_close\" \"-Dbacktrace_open=__rbt_backtrace_open\" \"-Dbacktrace_print=__rbt_backtrace_print\" \"-Dbacktrace_simple=__rbt_backtrace_simple\" \"-Dbacktrace_qsort=__rbt_backtrace_qsort\" \"-Dbacktrace_create_state=__rbt_backtrace_create_state\" \"-Dbacktrace_uncompress_zdebug=__rbt_backtrace_uncompress_zdebug\" \"-o\" \"C:\\\\Users\\\\My Username\\\\CLionProjects\\\\my_project\\\\target\\\\aarch64-linux-android\\\\release\\\\build\\\\backtrace-sys-5aff8725b1b77839\\\\out\\\\src/libbacktrace\\\\alloc.o\" \"-c\" \"src/libbacktrace/alloc.c\"\n\n--- stderr\nthread 'main' panicked at '\n\nInternal error occurred: Failed to find tool. Is `aarch64-linux-android-clang` installed? (see https://github.com/alexcrichton/cc-rs#compile-time-requirements for help)\n\n', C:\\Users\\My Username\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cc-1.0.28\\src\\lib.rs:2314:5\nstack backtrace:\n   0: std::sys::windows::backtrace::set_frames\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\sys\\windows\\backtrace\\mod.rs:104\n   1: std::sys::windows::backtrace::set_frames\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\sys\\windows\\backtrace\\mod.rs:104\n   2: std::sys_common::backtrace::_print\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\sys_common\\backtrace.rs:71\n   3: std::sys_common::backtrace::_print\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\sys_common\\backtrace.rs:71\n   4: std::panicking::default_hook::{{closure}}\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\panicking.rs:211\n   5: std::panicking::default_hook\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\panicking.rs:227\n   6: std::panicking::rust_panic_with_hook\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\panicking.rs:476\n   7: std::panicking::continue_panic_fmt\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\panicking.rs:390\n   8: std::panicking::begin_panic_fmt\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\panicking.rs:345\n   9: cc::Tool::to_command\n  10: cc::Build::compile\n  11: core::ptr::drop_in_place\n  12: std::fs::File::create\n  13: std::rt::lang_start_internal::{{closure}}\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\rt.rs:59\n  14: std::rt::lang_start_internal::{{closure}}\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\rt.rs:59\n  15: panic_unwind::__rust_maybe_catch_panic\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libpanic_unwind\\lib.rs:102\n  16: std::panicking::try\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\panicking.rs:289\n  17: std::panicking::try\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\panicking.rs:289\n  18: std::panicking::try\n             at /rustc/b6c32da9b0481e3e9d737153286b3ff8aa39a22c\\src/libstd\\panicking.rs:289\n  19: main\n  20: invoke_main\n             at d:\\agent\\_work\\1\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl:78\n  21: invoke_main\n             at d:\\agent\\_work\\1\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl:78\n  22: BaseThreadInitThunk\n  23: RtlUserThreadStart\n</code></pre>\n\n<p>My <code>.cargo/config</code> file:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[target.aarch64-linux-android]\nar = \"C:/NDK/arm64/bin/aarch64-linux-android-ar\"\nlinker = \"C:/NDK/arm64/bin/aarch64-linux-android-clang\"\n\n[target.armv7-linux-androideabi]\nar = \"C:/NDK/arm/bin/arm-linux-androideabi-ar\"\nlinker = \"C:/NDK/arm/bin/arm-linux-androideabi-clang\"\n\n[target.i686-linux-android]\nar = \"C:/NDK/x86/bin/i686-linux-android-ar\"\nlinker = \"C:/NDK/x86/bin/i686-linux-android-clang\"\n\n[target.x86_64-linux-android]\nar = \"C:/NDK/x86_64/bin/x86_64-linux-android-ar\"\nlinker = \"C:/NDK/x86_64/bin/x86_64-linux-android-clang\"\n</code></pre>\n"}, {"tags": ["rust", "unsafe"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547488972, "post_id": 54185667, "comment_id": 95201961, "body": "<code>f64</code> is not a complex in C"}], "answers": [{"comments": [{"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 1, "creation_date": 1547515557, "post_id": 54188098, "comment_id": 95210823, "body": "Wish I could give another +1 for the codes comment."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1547558469, "post_id": 54188098, "comment_id": 95225988, "body": "What makes me slightly nervous is the <code>assert!(cap % 2 == 0);</code> because the capacity is not usually managed by the user, and it could inadvertently be odd and crash the program. I would prefer a function such as <code>as_complex_unsafe(buffer: &amp;[f64] -&gt; &amp;[Complex&lt;f64&gt;]</code> so that no capacity is involved."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1547561797, "post_id": 54188098, "comment_id": 95227968, "body": "@rodrigo great points. I skipped the slice answer because OP specifically requested about <code>Vec</code>, but you are right that it should be included. Updated to handle odd capacities as well."}, {"owner": {"reputation": 560, "user_id": 2520171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7dea54aa4d218a6d8fc0263dc5a06caa?s=128&d=identicon&r=PG", "display_name": "jv-dev", "link": "https://stackoverflow.com/users/2520171/jv-dev"}, "edited": false, "score": 0, "creation_date": 1555687702, "post_id": 54188098, "comment_id": 98202801, "body": "Good points all on odd capacity - I did built parallel implementations for <code>&amp;[f64]</code> and <code>&amp;mut [f64]</code>, perhaps it&#39;s better to make these the only conversions allowed."}, {"owner": {"reputation": 560, "user_id": 2520171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7dea54aa4d218a6d8fc0263dc5a06caa?s=128&d=identicon&r=PG", "display_name": "jv-dev", "link": "https://stackoverflow.com/users/2520171/jv-dev"}, "edited": false, "score": 0, "creation_date": 1565377786, "post_id": 54188098, "comment_id": 101349467, "body": "Say @Shepmaster, is the reason why you don&#39;t want two <code>Vec</code>s pointing to the same memory because if a terminate/panic happens elsewhere, there&#39;s a chance that unwinding from this thread if the execution is before the <code>std::mem::forget()</code> will cause a double-free?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 560, "user_id": 2520171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7dea54aa4d218a6d8fc0263dc5a06caa?s=128&d=identicon&r=PG", "display_name": "jv-dev", "link": "https://stackoverflow.com/users/2520171/jv-dev"}, "edited": false, "score": 0, "creation_date": 1565613792, "post_id": 54188098, "comment_id": 101396146, "body": "@jv-dev in this specific case, yes. The original code can&#39;t have this problem as there&#39;s no code between the creation and the <code>forget</code>, but it could easily happen with a bit of refactoring over time."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 13, "last_activity_date": 1547561758, "last_edit_date": 1547561758, "creation_date": 1547494881, "answer_id": 54188098, "question_id": 54185667, "link": "https://stackoverflow.com/questions/54185667/how-to-safely-reinterpret-vecf64-as-vecnum-complexcomplexf64-with-half-t/54188098#54188098", "title": "How to safely reinterpret Vec&lt;f64&gt; as Vec&lt;num_complex::Complex&lt;f64&gt;&gt; with half the size?", "body": "<blockquote>\n  <p>Is there a \"safe\" way to do this kind of data re-interpretation?</p>\n</blockquote>\n\n<p>No. At the very least, this is because the information you need to know is not expressed in the Rust type system but is expressed via prose (a.k.a. the docs):</p>\n\n<blockquote>\n  <p><code>Complex&lt;T&gt;</code> is memory layout compatible with an array <code>[T; 2]</code>.</p>\n  \n  <p>\u2014 <a href=\"https://rust-num.github.io/num/num_complex/struct.Complex.html\" rel=\"nofollow noreferrer\"><code>Complex</code> docs</a></p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>If a <code>Vec</code> has allocated memory, then [...] its pointer points to <code>len</code> initialized, contiguous elements in order (what you would see if you coerced it to a slice),</p>\n  \n  <p>\u2014 <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#guarantees\" rel=\"nofollow noreferrer\"><code>Vec</code> docs</a></p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>Arrays coerce to slices (<code>[T]</code>)</p>\n  \n  <p>\u2014 <a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"nofollow noreferrer\">Array docs</a></p>\n</blockquote>\n\n<p>Since a <code>Complex</code> is memory-compatible with an array, an array's data is memory-compatible with a slice, and a <code>Vec</code>'s data is memory-compatible with a slice, this transformation should be safe, even though the compiler cannot tell this. </p>\n\n<p>This information should be attached (via a comment) to your unsafe block.</p>\n\n<p>I <em>would</em> make some small tweaks to your function:</p>\n\n<ul>\n<li><p>Having two <code>Vec</code>s at the same time pointing to the same data makes me <em>very</em> nervous. This can be trivially avoided by introducing some variables and forgetting one before creating the other. </p></li>\n<li><p>Remove the <code>return</code> keyword to be more idiomatic</p></li>\n<li><p>Add some asserts that the starting length of the data is a multiple of two.</p></li>\n<li><p>As <a href=\"https://stackoverflow.com/questions/54185667/how-to-safely-reinterpret-vecf64-as-vecnum-complexcomplexf64-with-half-t/54188098?noredirect=1#comment95225988_54188098\">rodrigo points out</a>, the capacity could easily be an odd number. To attempt to avoid this, we call <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.shrink_to_fit\" rel=\"nofollow noreferrer\"><code>shrink_to_fit</code></a>. This has the downside that the <code>Vec</code> <em>may</em> need to reallocate and copy the memory, depending on the implementation.</p></li>\n<li><p>Expand the <code>unsafe</code> block to cover all of the related code that is required to ensure that the safety invariants are upheld.</p></li>\n</ul>\n\n<pre><code>pub fn convert_to_complex(mut buffer: Vec&lt;f64&gt;) -&gt; Vec&lt;num_complex::Complex&lt;f64&gt;&gt; {\n    // This is where I'd put the rationale for why this `unsafe` block\n    // upholds the guarantees that I must ensure. Too bad I\n    // copy-and-pasted from Stack Overflow without reading this comment!\n    unsafe {\n        buffer.shrink_to_fit();\n\n        let ptr = buffer.as_mut_ptr() as *mut num_complex::Complex&lt;f64&gt;;\n        let len = buffer.len();\n        let cap = buffer.capacity();\n\n        assert!(len % 2 == 0);\n        assert!(cap % 2 == 0);\n\n        std::mem::forget(buffer);\n\n        Vec::from_raw_parts(ptr, len / 2, cap / 2)\n    }\n}\n</code></pre>\n\n<p>To avoid all the worrying about the capacity, you could just convert a slice into the <code>Vec</code>. This also doesn't have any extra memory allocation. It's simpler because we can \"lose\" any odd trailing values because the <code>Vec</code> still maintains them.</p>\n\n<pre><code>pub fn convert_to_complex(buffer: &amp;[f64]) -&gt; &amp;[num_complex::Complex&lt;f64&gt;] {\n    // This is where I'd put the rationale for why this `unsafe` block\n    // upholds the guarantees that I must ensure. Too bad I\n    // copy-and-pasted from Stack Overflow without reading this comment!\n    unsafe {\n        let ptr = buffer.as_ptr() as *mut num_complex::Complex&lt;f64&gt;;\n        let len = buffer.len();\n\n        std::slice::from_raw_parts(ptr, len / 2)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 560, "user_id": 2520171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7dea54aa4d218a6d8fc0263dc5a06caa?s=128&d=identicon&r=PG", "display_name": "jv-dev", "link": "https://stackoverflow.com/users/2520171/jv-dev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 426, "favorite_count": 1, "accepted_answer_id": 54188098, "answer_count": 1, "score": 7, "last_activity_date": 1547561758, "creation_date": 1547484057, "last_edit_date": 1547515909, "question_id": 54185667, "link": "https://stackoverflow.com/questions/54185667/how-to-safely-reinterpret-vecf64-as-vecnum-complexcomplexf64-with-half-t", "title": "How to safely reinterpret Vec&lt;f64&gt; as Vec&lt;num_complex::Complex&lt;f64&gt;&gt; with half the size?", "body": "<p>I have complex number data filled into a <code>Vec&lt;f64&gt;</code> by an external C library (prefer not to change) in the form <code>[i_0_real, i_0_imag, i_1_real, i_1_imag, ...]</code> and it appears that this <code>Vec&lt;f64&gt;</code> has the same memory layout as a <code>Vec&lt;num_complex::Complex&lt;f64&gt;&gt;</code> of half the length would be, given that <code>num_complex::Complex&lt;f64&gt;</code>'s data structure is memory-layout compatible with <code>[f64; 2]</code> as documented <a href=\"https://rust-num.github.io/num/num_complex/struct.Complex.html\" rel=\"nofollow noreferrer\">here</a>. I'd like to use it as such without needing a re-allocation of a potentially large buffer.</p>\n\n<p>I'm assuming that it's valid to use <code>from_raw_parts()</code> in <code>std::vec::Vec</code> to fake a new <code>Vec</code> that takes ownership of the old <code>Vec</code>'s memory (by forgetting the old <code>Vec</code>) and use <code>size / 2</code> and <code>capacity / 2</code>, but that requires unsafe code. Is there a \"safe\" way to do this kind of data re-interpretation?</p>\n\n<p>The <code>Vec</code> is allocated in Rust as a <code>Vec&lt;f64&gt;</code> and is populated by a C function using <code>.as_mut_ptr()</code> that fills in the <code>Vec&lt;f64&gt;</code>.</p>\n\n<p>My current compiling unsafe implementation:</p>\n\n<pre><code>extern crate num_complex;\n\npub fn convert_to_complex_unsafe(mut buffer: Vec&lt;f64&gt;) -&gt; Vec&lt;num_complex::Complex&lt;f64&gt;&gt; {\n    let new_vec = unsafe {\n        Vec::from_raw_parts(\n            buffer.as_mut_ptr() as *mut num_complex::Complex&lt;f64&gt;,\n            buffer.len() / 2,\n            buffer.capacity() / 2,\n        )\n    };\n    std::mem::forget(buffer);\n    return new_vec;\n}\n\nfn main() {\n    println!(\n        \"Converted vector: {:?}\",\n        convert_to_complex_unsafe(vec![3.0, 4.0, 5.0, 6.0])\n    );\n}\n</code></pre>\n"}, {"tags": ["function", "rust", "closures", "traits", "trait-objects"], "comments": [{"owner": {"reputation": 83, "user_id": 8966628, "user_type": "registered", "profile_image": "https://graph.facebook.com/1577487662330497/picture?type=large", "display_name": "Akshay Mariyanna", "link": "https://stackoverflow.com/users/8966628/akshay-mariyanna"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547470837, "post_id": 54181816, "comment_id": 95192238, "body": "Thanks that did clarify my query. fn type parameters can only accept closures that do not capture environment So, should use trait object when no such constraint is intended"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1547474880, "post_id": 54181816, "comment_id": 95194444, "body": "For reference (in addition to the answers): <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1558-closure-to-fn-coercion.md\" rel=\"nofollow noreferrer\">RFC 1558</a> proposed to automatically coerce closures that don&#39;t capture their environment to fn pointers. Thanks to this RFC, your example works (maybe unexpectedly)."}], "answers": [{"tags": [], "owner": {"reputation": 1872, "user_id": 4091324, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/razpB.jpg?s=128&g=1", "display_name": "Darth Kotik", "link": "https://stackoverflow.com/users/4091324/darth-kotik"}, "is_accepted": true, "score": 6, "last_activity_date": 1547471001, "creation_date": 1547471001, "answer_id": 54182081, "question_id": 54181816, "link": "https://stackoverflow.com/questions/54181816/function-pointer-vs-fn-trait-object/54182081#54182081", "title": "function pointer vs Fn trait object", "body": "<p><code>fn</code> type is a bare function pointer (<a href=\"https://doc.rust-lang.org/std/primitive.fn.html\" rel=\"noreferrer\">https://doc.rust-lang.org/std/primitive.fn.html</a>). </p>\n\n<p>It won't work with the closure that captures environment and it cannot be implemented manually for your fancy type (like <code>impl Fn for MySuperType</code>)</p>\n\n<p>So the only reason why your examples working is the fact that it's oversimplified!</p>\n\n<p>if you make it just a bit more complicated, it will fail <a href=\"https://gist.github.com/rust-play/2167e73325daa1e2a179505209405917\" rel=\"noreferrer\">https://gist.github.com/rust-play/2167e73325daa1e2a179505209405917</a></p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 9, "last_activity_date": 1547471418, "creation_date": 1547471418, "answer_id": 54182204, "question_id": 54181816, "link": "https://stackoverflow.com/questions/54181816/function-pointer-vs-fn-trait-object/54182204#54182204", "title": "function pointer vs Fn trait object", "body": "<blockquote>\n  <p>When should I prefer this over using a trait object</p>\n</blockquote>\n\n<p>Trait objects are not the only other option. As @DarthKotik pointed out, accepting a <code>fn</code> pointer will not permit closures that capture their environment, but you can just use a normal type parameter, bounded by <code>Fn</code> to accept both functions and closures, without needing to box anything:</p>\n\n<pre><code>fn do_twice&lt;F&gt;(f: F, arg: i32) -&gt; i32 \nwhere\n    F: Fn(i32) -&gt; i32\n{\n    f(arg) + f(arg)\n}\n</code></pre>\n\n<p>Or, equivalently, but avoiding an extra type variable:</p>\n\n<pre><code>fn do_twice(f: impl Fn(i32) -&gt; i32, arg: i32) -&gt; i32 {\n    f(arg) + f(arg)\n}\n</code></pre>\n"}], "owner": {"reputation": 83, "user_id": 8966628, "user_type": "registered", "profile_image": "https://graph.facebook.com/1577487662330497/picture?type=large", "display_name": "Akshay Mariyanna", "link": "https://stackoverflow.com/users/8966628/akshay-mariyanna"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2108, "favorite_count": 0, "closed_date": 1547473277, "accepted_answer_id": 54182081, "answer_count": 2, "score": 8, "last_activity_date": 1547471573, "creation_date": 1547469913, "last_edit_date": 1547471573, "question_id": 54181816, "link": "https://stackoverflow.com/questions/54181816/function-pointer-vs-fn-trait-object", "closed_reason": "Duplicate", "title": "function pointer vs Fn trait object", "body": "<pre><code>fn do_twice(f: fn(i32) -&gt; i32, arg: i32) -&gt; i32 { // definition\n    f(arg) + f(arg)\n}\n\ndo_twice(|x| x + 1, 5) // call\n</code></pre>\n\n<p>This function accepts both, closures and function pointers. It takes a function pointer as parameter type.</p>\n\n<p>When should I prefer this over using a trait object, like <code>&amp;dyn Fn(i32) -&gt; i32</code> or <code>Box&lt;dyn Fn(i32)-&gt; i32&gt;</code> instead of <code>fn</code></p>\n\n<pre><code>fn do_twice(f: &amp;dyn Fn(i32) -&gt; i32, arg: i32) -&gt; i32 { // definition\n    f(arg) + f(arg)\n}\n\ndo_twice(&amp;|x| x + 1, 5) // call\n</code></pre>\n\n<p>or </p>\n\n<pre><code>fn do_twice(f: Box&lt;dyn Fn(i32) -&gt; i32&gt;, arg: i32) -&gt; i32 { // definition\n    f(arg) + f(arg)\n}\n</code></pre>\n"}, {"tags": ["struct", "rust", "rust-macros", "rust-proc-macros"], "comments": [{"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1547454337, "post_id": 54177438, "comment_id": 95184181, "body": "What is the <i>purpose</i> of doing this? The language is statically typed, so the function would be constant, that is you&#39;d always get the same answer and there is no useful decision to be made based on that."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1547454986, "post_id": 54177438, "comment_id": 95184472, "body": "@Jan Hudec, Let&#39;s say you have written statically the count on some different blocks of the program and at some time you change the struct and added a new field. Then, I do not want to edit the count on everywhere else which can be automaticlly handled"}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1547458943, "post_id": 54177438, "comment_id": 95186258, "body": "That still does not say what is a use for this information at all in the first place. Any code that depends on the number of fields will depend on it at compile-time, and will probably depend on the types and names of the fields too. When the fields change, it will either fail to compile, or it is generated, in which case the generator needs the information-and custom derive is the right tool for that."}], "answers": [{"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": false, "score": 7, "last_activity_date": 1547454288, "creation_date": 1547454288, "answer_id": 54177889, "question_id": 54177438, "link": "https://stackoverflow.com/questions/54177438/how-to-programmatically-get-the-number-of-fields-of-a-struct/54177889#54177889", "title": "How to programmatically get the number of fields of a struct?", "body": "<p>It's possible when the struct itself is generated by the macros - in this case you can just count tokens passed into macros, as shown <a href=\"https://danielkeep.github.io/tlborm/book/blk-counting.html\" rel=\"noreferrer\">here</a>. That's what I've come up with:</p>\n\n<pre><code>macro_rules! gen {\n    ($name:ident {$($field:ident : $t:ty),+}) =&gt; {\n        struct $name { $($field: $t),+ }\n        impl $name {\n            fn field_count(&amp;self) -&gt; usize {\n                gen!(@count $($field),+)\n            }\n        }\n    };\n    (@count $t1:tt, $($t:tt),+) =&gt; { 1 + gen!(@count $($t),+) };\n    (@count $t:tt) =&gt; { 1 };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9049a5cb9d7316c14c424c2f1b798638\" rel=\"noreferrer\">Playground</a> (with some test cases)</p>\n\n<p>The downside for this approach (one - there could be more) is that it's not trivial to add an attribute to this function - for example, to <code>#[derive(...)]</code> something on it. Another approach would be to write the custom derive macros, but this is something that I can't speak about for now.</p>\n"}, {"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1547455053, "post_id": 54177920, "comment_id": 95184498, "body": "Instead of a derive, you can also make it a custom attribute, see <a href=\"https://doc.rust-lang.org/reference/procedural-macros.html#attribute-macros\" rel=\"nofollow noreferrer\">the reference</a> for details"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1547461582, "post_id": 54177920, "comment_id": 95187628, "body": "Note: run-time reflection is not necessary, run-time introspection or even compile-time introspection would be sufficient. And indeed, it turns out that using a derive/attribute/proc-macro is compile-time introspection."}, {"owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "edited": false, "score": 0, "creation_date": 1600802117, "post_id": 54177920, "comment_id": 113201551, "body": "I couldn&#39;t find similar functionality on crates.io. So, I packaged this answer into the following crate: <a href=\"https://github.com/discosultan/field-count\" rel=\"nofollow noreferrer\">github.com/discosultan/field-count</a>. Hope it&#39;s useful to someone as it&#39;s impossible to add a new proc_macro definition to a library which exports stuff other than macros. Thank you @lukas-kalbertodt."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 22, "last_activity_date": 1547461754, "last_edit_date": 1547461754, "creation_date": 1547454519, "answer_id": 54177920, "question_id": 54177438, "link": "https://stackoverflow.com/questions/54177438/how-to-programmatically-get-the-number-of-fields-of-a-struct/54177920#54177920", "title": "How to programmatically get the number of fields of a struct?", "body": "<blockquote>\n  <p>Are there any possible API like <code>field_count()</code> or is it only possible to get that via macros?</p>\n</blockquote>\n\n<p>There is no such built-in API that would allow you to get this information at runtime. Rust does not have runtime reflection (see <a href=\"https://stackoverflow.com/questions/36416773/how-does-rust-implement-reflection\">this question</a> for more information). But it is indeed possible via proc-macros!</p>\n\n<p>Note: proc-macros are different from \"macro by example\" (which is declared via <code>macro_rules!</code>). The latter is not as powerful as proc-macros.</p>\n\n<blockquote>\n  <p>If this is achievable with macros, how should it be implemented?</p>\n</blockquote>\n\n<p>(<em>This is not an introduction into proc-macros; if the topic is completely new to you, first read an introduction elsewhere.</em>)</p>\n\n<p>In the proc-macro (for example a custom derive), you would somehow need to get the struct definition as <code>TokenStream</code>. The de-facto solution to use a <code>TokenStream</code> with Rust syntax is to parse it via <a href=\"https://crates.io/crates/syn\" rel=\"noreferrer\"><code>syn</code></a>:</p>\n\n<pre><code>#[proc_macro_derive(FieldCount)]\npub fn derive_field_count(input: TokenStream) -&gt; TokenStream {\n    let input = parse_macro_input!(input as ItemStruct);\n\n    // ...\n}\n</code></pre>\n\n<p>The type of <code>input</code> is <a href=\"https://docs.rs/syn/0.15.24/syn/struct.ItemStruct.html\" rel=\"noreferrer\"><code>ItemStruct</code></a>. As you can see, it has the field <code>fields</code> of the type <a href=\"https://docs.rs/syn/0.15.24/syn/enum.Fields.html\" rel=\"noreferrer\"><code>Fields</code></a>. On that field you can call <code>iter()</code> to get an iterator over all fields of the struct, on which in turn you could call <code>count()</code>:</p>\n\n<pre><code>let field_count = input.fields.iter().count();\n</code></pre>\n\n<p>Now you have what you want.</p>\n\n<p>Maybe you want to add this <code>field_count()</code> method to your type. You can do that via the custom derive (by using the <code>quote</code> crate here):</p>\n\n<pre><code>let name = &amp;input.ident;\n\nlet output = quote! {\n    impl #name {\n        pub fn field_count() -&gt; usize {\n            #field_count\n        }\n    }\n};\n\n// Return output tokenstream\nTokenStream::from(output)\n</code></pre>\n\n<p>Then, in your application, you can write:</p>\n\n<pre><code>#[derive(FieldCount)]\nstruct MyStruct {\n    first_field: i32,\n    second_field: String,\n    third_field: u16,\n}\n\nMyStruct::field_count(); // returns 3\n</code></pre>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3124, "favorite_count": 3, "accepted_answer_id": 54177920, "answer_count": 2, "score": 22, "last_activity_date": 1547475654, "creation_date": 1547451866, "last_edit_date": 1547475654, "question_id": 54177438, "link": "https://stackoverflow.com/questions/54177438/how-to-programmatically-get-the-number-of-fields-of-a-struct", "title": "How to programmatically get the number of fields of a struct?", "body": "<p>I have a custom struct like the following:</p>\n\n<pre><code>struct MyStruct {\n    first_field: i32,\n    second_field: String,\n    third_field: u16,\n}\n</code></pre>\n\n<p>Is it possible to get the number of struct fields programmatically (like, for example, via a method call <code>field_count()</code>):</p>\n\n<pre><code>let my_struct = MyStruct::new(10, \"second_field\", 4);\nlet field_count = my_struct.field_count(); // Expecting to get 3\n</code></pre>\n\n<p>For this struct:</p>\n\n<pre><code>struct MyStruct2 {\n    first_field: i32,\n}\n</code></pre>\n\n<p>... the following call should return <code>1</code>:</p>\n\n<pre><code>let my_struct_2 = MyStruct2::new(7);\nlet field_count = my_struct2.field_count(); // Expecting to get count 1\n</code></pre>\n\n<p>Is there any API like <code>field_count()</code> or is it only possible to get that via macros?</p>\n\n<p>If this is achievable with macros, how should it be implemented?</p>\n"}, {"tags": ["windows", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1547438601, "post_id": 54175594, "comment_id": 95179960, "body": "<a href=\"https://crates.io/crates/winrt\" rel=\"nofollow noreferrer\">crates.io/crates/winrt</a> <a href=\"https://crates.io/crates/winapi\" rel=\"nofollow noreferrer\">crates.io/crates/winapi</a> <a href=\"https://crates.io/crates/windows-acl\" rel=\"nofollow noreferrer\">crates.io/crates/windows-acl</a> ? You will not find anything like that in the std."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1547463757, "creation_date": 1547463757, "answer_id": 54180250, "question_id": 54175594, "link": "https://stackoverflow.com/questions/54175594/is-there-a-rust-function-or-module-for-iterating-over-all-the-removable-drives-a/54180250#54180250", "title": "Is there a Rust function or module for iterating over all the removable drives attached to a Windows machine?", "body": "<p>There are some crates available that helps you to achieve this issue and mentioned in comments like followings:</p>\n\n<ul>\n<li><a href=\"https://crates.io/crates/winrt\" rel=\"nofollow noreferrer\">winrt</a></li>\n<li><a href=\"https://crates.io/crates/winapi\" rel=\"nofollow noreferrer\">winapi</a></li>\n<li><a href=\"https://crates.io/crates/windows-acl\" rel=\"nofollow noreferrer\">windows-acl</a></li>\n</ul>\n\n<p>If you do not want to depend on third party crates, you can make a call to windows itself and run the following call and get the output of it:</p>\n\n<pre><code>wmic logicaldisk where drivetype=2 get deviceid, volumename, description\n</code></pre>\n\n<p>You can make a windows command call via this <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\">reference</a></p>\n\n<p>Also this <a href=\"https://stackoverflow.com/questions/21011330/how-do-i-invoke-a-system-command-in-rust-and-capture-its-output\">Question</a> can be helpful.</p>\n"}], "owner": {"reputation": 147, "user_id": 2492585, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/79b5c9eb893bc81c7e2f747d4974edf3?s=128&d=identicon&r=PG", "display_name": "James Hurst", "link": "https://stackoverflow.com/users/2492585/james-hurst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "closed_date": 1547478188, "answer_count": 1, "score": 2, "last_activity_date": 1547463757, "creation_date": 1547438047, "last_edit_date": 1547439324, "question_id": 54175594, "link": "https://stackoverflow.com/questions/54175594/is-there-a-rust-function-or-module-for-iterating-over-all-the-removable-drives-a", "closed_reason": "Not suitable for this site", "title": "Is there a Rust function or module for iterating over all the removable drives attached to a Windows machine?", "body": "<p>Is there a Rust module or crate that provides a way to iterate over the removable drives that are attached to a Windows machine?\nI am running an embedded version of Windows 7 x64. The drives I want to detect are USB-connected flash-drives.</p>\n\n<p>I am primarily a C# developer with C/C++ experience in the distant past, and am new to Rust and it is still seeming a bit opaque to me, so sorry for the newbie question. I am not seeing this in the Crates.io nor in the std::fs module.</p>\n\n<p>I need something such as a vector of the attached removable drives (or a vector of objects each of which represents a drive plus some way to get the properties of that drive, specifically it's drive-letter and whether it is removable).</p>\n\n<p>Thank you in advance for your time and help!</p>\n"}, {"tags": ["rust", "rust-macros", "rust-proc-macros"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547449764, "post_id": 54174361, "comment_id": 95182523, "body": "Quick question: Why do you develop for <code>i686</code>? No one should do that anymore... It is superseded by <code>x86_64</code>."}, {"owner": {"reputation": 5417, "user_id": 1823524, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/uScxd.jpg?s=128&g=1", "display_name": "Amomum", "link": "https://stackoverflow.com/users/1823524/amomum"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547460147, "post_id": 54174361, "comment_id": 95186861, "body": "@hellow because there is no 64-bit gcc compiler for windows and so there is no x86_64-pc-windows-gnu target (that I&#39;m aware of) and I had difficulties debugging with x86_64-windows-msvc."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547461957, "post_id": 54174361, "comment_id": 95187826, "body": "<code>rustup target list</code> will give you <code>x86_64-pc-windows-gnu</code> and <code>x86_64-pc-windows-msvc</code> :) <a href=\"https://stackoverflow.com/questions/50707118/how-to-debug-rust-unit-tests-on-windows\">Here&#39;s</a> a good question about visual debugging rust"}, {"owner": {"reputation": 5417, "user_id": 1823524, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/uScxd.jpg?s=128&g=1", "display_name": "Amomum", "link": "https://stackoverflow.com/users/1823524/amomum"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547465413, "post_id": 54174361, "comment_id": 95189548, "body": "@hellow hmm, I guess you&#39;re right, my knowledge is outdated :) I&#39;ll look into that."}], "answers": [{"comments": [{"owner": {"reputation": 5417, "user_id": 1823524, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/uScxd.jpg?s=128&g=1", "display_name": "Amomum", "link": "https://stackoverflow.com/users/1823524/amomum"}, "edited": false, "score": 1, "creation_date": 1547460481, "post_id": 54174704, "comment_id": 95187020, "body": "Oh, that&#39;s unfortunate. Thank you!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1547427997, "creation_date": 1547427997, "answer_id": 54174704, "question_id": 54174361, "link": "https://stackoverflow.com/questions/54174361/cannot-call-a-function-like-procedural-macro-cannot-be-expanded-to-statements/54174704#54174704", "title": "Cannot call a function-like procedural macro: cannot be expanded to statements", "body": "<blockquote>\n  <p>What is happening?</p>\n</blockquote>\n\n<p>While it's possible to <em>define</em> a function-like procedural macro in stable Rust, it's not yet possible to <em>call</em> one as an expression / statement. This is because there are <a href=\"https://github.com/rust-lang/rust/pull/52121#issuecomment-422311424\" rel=\"nofollow noreferrer\">concerns about how <em>hygiene</em> should be applied</a>. There are other locations, such as in item position, where it is available:</p>\n\n<pre><code>extern crate rust_procmacro_test;\n\nrust_procmacro_test::my_macro!( aaa );\n\nfn main() {}\n</code></pre>\n\n<blockquote>\n  <p>but <code>println</code> inside the macro works</p>\n</blockquote>\n\n<p>This is probably just some laziness in the implementation \u2014 the macro is eagerly evaluated and then the feature gate is checked later. While this might be inefficient at the moment, once the feature is fully stabilized it won't matter.</p>\n"}], "owner": {"reputation": 5417, "user_id": 1823524, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/uScxd.jpg?s=128&g=1", "display_name": "Amomum", "link": "https://stackoverflow.com/users/1823524/amomum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1079, "favorite_count": 1, "accepted_answer_id": 54174704, "answer_count": 1, "score": 2, "last_activity_date": 1547427997, "creation_date": 1547424232, "last_edit_date": 1547427028, "question_id": 54174361, "link": "https://stackoverflow.com/questions/54174361/cannot-call-a-function-like-procedural-macro-cannot-be-expanded-to-statements", "title": "Cannot call a function-like procedural macro: cannot be expanded to statements", "body": "<p>I'm trying to get my head around function-like procedural macros and struggling with the basics.</p>\n\n<p>For a starter, I tried to create a macro that just prints all the tokens and does nothing:</p>\n\n<pre><code>extern crate proc_macro;\nextern crate syn;\nuse proc_macro::TokenStream;\n\n#[proc_macro]\npub fn my_macro(input: TokenStream) -&gt; TokenStream {\n    println!( \"{:?}\", input );\n\n    TokenStream::new()\n}\n</code></pre>\n\n<p>I then tried to use it in another binary:</p>\n\n<pre><code>extern crate rust_procmacro_test;\n\nfn main() {\n    rust_procmacro_test::my_macro!( aaa );\n}\n</code></pre>\n\n<p>When I do <code>cargo build</code> I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling rust_procmacro_test v0.1.0 \nCompiling procmacro_user v0.1.0 \nerror[E0658]: procedural macros cannot be expanded to statements (see issue #54727)\n --&gt; src\\main.rs:5:5\n  |\n5 |     rust_procmacro_test::my_macro!( aaa );\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTokenStream [Ident { ident: \"aaa\", span: #0 bytes(114..117) }]\nerror: aborting due to previous error\n</code></pre>\n\n<p>It tells me that this cannot be compiled, but <code>println</code> inside the macro works. What is happening?</p>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/54727\" rel=\"nofollow noreferrer\">Issue #54727</a> is very broad and I'm not sure how it relates to this.</p>\n\n<p>I'm using stable-i686-pc-windows-gnu, rustc 1.31.1 (b6c32da9b 2018-12-18).</p>\n"}, {"tags": ["rust", "lifetime", "ownership"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1547421415, "post_id": 54174086, "comment_id": 95177167, "body": "Hi there! I closed your answer as duplicate. In case the linked q&amp;a does <i>not</i> answer your question, please let us know so that we can reopen this question! In short: no, it&#39;s not possible to return a reference to a local variable (or a temporary, like in your case). It doesn&#39;t matter if the reference is returned directly or inside another struct (like in your case)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1547423884, "post_id": 54174086, "comment_id": 95177596, "body": "See also <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1547424426, "post_id": 54174086, "comment_id": 95177681, "body": "Applying that and <a href=\"https://stackoverflow.com/q/31230585/155423\">How does the lifetime work on constant strings / string literals?</a>, your code should probably <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c0776adf8cbec013f5a288cb0b92e7c3\" rel=\"nofollow noreferrer\">look like this</a>."}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 4734, "favorite_count": 0, "closed_date": 1547421348, "answer_count": 0, "score": 5, "last_activity_date": 1547423749, "creation_date": 1547421190, "last_edit_date": 1547423718, "question_id": 54174086, "link": "https://stackoverflow.com/questions/54174086/method-that-returns-reference-to-value-created-in-the-method", "closed_reason": "Duplicate", "title": "Method that returns reference to value created in the method?", "body": "<p>I have a struct that contains references to two different values. There's two constructors - one that takes a reference for each value, and one that only takes a reference to one of the values while assigning a default to the other.</p>\n\n<p>My problem is assigning that default. See the code below:</p>\n\n<pre><code>struct Foo&lt;'t&gt; {\n    a: &amp;'t String,\n    b: &amp;'t String,\n}\n\nimpl&lt;'t&gt; Foo&lt;'t&gt; {\n    fn new(a: &amp;'t String, b: &amp;'t String) -&gt; Foo&lt;'t&gt; {\n        Foo { a, b }\n    }\n\n    fn new_with_default_b(a: &amp;'t String) -&gt; Foo&lt;'t&gt; {\n        Foo {\n            a,\n            b: &amp;String::from(\"default\"),\n        }\n    }\n}\n</code></pre>\n\n<p>This does not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing temporary value\n  --&gt; src/lib.rs:12:9\n   |\n12 | /         Foo {\n13 | |             a,\n14 | |             b: &amp;String::from(\"default\"),\n   | |                 ----------------------- temporary value created here\n15 | |         }\n   | |_________^ returns a value referencing data owned by the current function\n</code></pre>\n\n<p>Is it possible to fix this?</p>\n"}, {"tags": ["rust", "iterator", "side-effects"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547404164, "post_id": 54171609, "comment_id": 95172727, "body": "i don&#39;t think it is different from this code   <code>let sum = it.map(|x| {count += 1; x}).sum::&lt;u64&gt;();</code>"}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547415626, "post_id": 54171916, "comment_id": 95175839, "body": "I&#39;d agree with that. It seems like bad style to rely on side-effects like that, except for perhaps debugging or a quick fix before restructuring the code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547416011, "post_id": 54171916, "comment_id": 95175960, "body": "@PeterHall Putting <code>count += 1</code> inside of a for loop is still a side-effect, so ultimately it&#39;s &quot;all the same&quot;. Rust even added <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.for_each\" rel=\"nofollow noreferrer\"><code>Iterator::for_each</code></a> which feels incorrect to <i>me</i>, but it is a pragmatic option."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547416918, "post_id": 54171916, "comment_id": 95176206, "body": "It&#39;s really not the same. In a <code>for</code> loop, you build an iterator as an expression and then consume it, possibly with side effects. Using <code>inspect</code> gives you side effects from arbitrary points within the expression that builds the iterator. The loop is idiomatic but most would not consider <code>inspect</code> to be so."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1547404228, "creation_date": 1547404228, "answer_id": 54171916, "question_id": 54171609, "link": "https://stackoverflow.com/questions/54171609/are-side-effects-of-the-closure-in-iteratorinspect-well-defined-so-it-can-be/54171916#54171916", "title": "Are side-effects of the closure in `Iterator::inspect` well defined so it can be used for e.g. counting?", "body": "<p>I'd say it's guaranteed, but you'll never find it explicitly stated as such. As you mention, <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.inspect\" rel=\"nofollow noreferrer\">the documentation states</a>:</p>\n\n<blockquote>\n  <p>Do something with each element of an iterator, passing the value on.</p>\n</blockquote>\n\n<p>Since the function guarantees to run the closure for each element, and the language guarantees what happens when a closure is run (by definition of a closure), the behavior is safe to rely on.</p>\n\n<p>That being said, once you have one or more side-effects, it might be better to eschew heavy chaining and move to a boring <code>for</code> loop for readability, but that will depend on the exact case.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 54171916, "answer_count": 1, "score": 3, "last_activity_date": 1547404228, "creation_date": 1547402056, "last_edit_date": 1547403954, "question_id": 54171609, "link": "https://stackoverflow.com/questions/54171609/are-side-effects-of-the-closure-in-iteratorinspect-well-defined-so-it-can-be", "title": "Are side-effects of the closure in `Iterator::inspect` well defined so it can be used for e.g. counting?", "body": "<p>I have an iterator and I would like to fold it with a nice method (say <code>Iterator::sum</code>):</p>\n\n<pre><code>let it = ...;\nlet sum = it.sum::&lt;u64&gt;();\n</code></pre>\n\n<p>Then I notice that I also need to know the number of elements in the iterator. I could write a <code>for</code> loop and do the counting and summing up manually, but that's not nice since I have to change a potentially long iterator adapter chain and all of that. Additionally, in my real code I'm not using <code>sum</code>, but a more complex \"folding method\" which logic I don't want to replicate. </p>\n\n<p>I had the idea to (ab)use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.inspect\" rel=\"nofollow noreferrer\"><code>Iterator::inspect</code></a>:</p>\n\n<pre><code>let it = ...;\nlet mut count = 0;\nlet sum = it.inspect(|_| count += 1).sum::&lt;u64&gt;();\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fdd1a9e6436bb597612c679be92737d6\" rel=\"nofollow noreferrer\">This works</a>, but <strong>does it work by coincidence or is this behavior guaranteed?</strong> The documentation of <code>inspect</code> mentions that the closure is called for each element, but also states that it's mostly used as debugging tool. I'm not sure if using it this way in production code is a good idea.</p>\n"}, {"tags": ["module", "rust", "access-modifiers"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 3, "creation_date": 1547380450, "post_id": 54168394, "comment_id": 95166151, "body": "use pub before struct and trait, not impl"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1547381236, "post_id": 54168394, "comment_id": 95166335, "body": "<i>intellisense does not pick up create_ar_x_matrix</i> -- Is this just an IDE issue, or do you get an actual compile error?"}, {"owner": {"reputation": 61601, "user_id": 1203556, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/aca772bc8ed79a86894211c7efd920aa?s=128&d=identicon&r=PG", "display_name": "Tampa", "link": "https://stackoverflow.com/users/1203556/tampa"}, "edited": false, "score": 0, "creation_date": 1547381464, "post_id": 54168394, "comment_id": 95166366, "body": "See updated....still not working"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547382018, "post_id": 54168394, "comment_id": 95166511, "body": "make your trait pub and include  <code>use crate::TsProperties;</code> too"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 1, "creation_date": 1547384633, "post_id": 54168394, "comment_id": 95167105, "body": "Could you paste the <i>exact</i> contents of <code>main.rs</code> and <code>test.rs</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1547407314, "post_id": 54169202, "comment_id": 95173702, "body": "<a href=\"https://stackoverflow.com/q/25273816/155423\">Why do I need to import a trait to use the methods it defines for a type?</a>."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1547385160, "creation_date": 1547385160, "answer_id": 54169202, "question_id": 54168394, "link": "https://stackoverflow.com/questions/54168394/i-cant-have-every-trait-and-impl-in-the-same-file-how-to-place-in-seperate-fil/54169202#54169202", "title": "I can&#39;t have every trait and impl in the same file; how to place in seperate file?", "body": "<p>You need to import the trait.</p>\n\n<p>In <code>test.rs</code>:</p>\n\n<pre><code>use crate::Model;\n\npub trait TsProperties {\n    fn create_ar_x_matrix(&amp;self);\n}\n\nimpl TsProperties for Model {\n    fn create_ar_x_matrix(&amp;self){}\n}\n</code></pre>\n\n<p>In <code>main.rs</code>:</p>\n\n<pre><code>mod test;\nuse self::test::TsProperties;\n\nstruct Model {}\n\nfn main() {\n    let model = Model {};\n    model.create_ar_x_matrix();\n}\n</code></pre>\n\n<p>Note that <code>Model</code> doesn't need to be public, but the trait does. That's because anything in a parent module is automatically visible in child modules.</p>\n"}], "owner": {"reputation": 61601, "user_id": 1203556, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/aca772bc8ed79a86894211c7efd920aa?s=128&d=identicon&r=PG", "display_name": "Tampa", "link": "https://stackoverflow.com/users/1203556/tampa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1030, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1547407263, "creation_date": 1547378961, "last_edit_date": 1547407263, "question_id": 54168394, "link": "https://stackoverflow.com/questions/54168394/i-cant-have-every-trait-and-impl-in-the-same-file-how-to-place-in-seperate-fil", "title": "I can&#39;t have every trait and impl in the same file; how to place in seperate file?", "body": "<p>I have a struct, a trait, and impl in the top level file.</p>\n\n<pre><code>struct Model {}\n\ntrait TsProperties {\n    fn create_ar_x_matrix(&amp;self);\n}\n\nimpl TsProperties for Model {\n    fn create_ar_x_matrix(&amp;self){}\n}\n</code></pre>\n\n<p>I want to move the trait and impl to a separate file called <code>test.rs</code>.  In the main file I have:</p>\n\n<pre><code>mod test\n</code></pre>\n\n<p>In test I have:</p>\n\n<pre><code>use crate::Model;\n</code></pre>\n\n<p>When I instantiate the struct, Intellisense does not pick up <code>create_ar_x_matrix</code>. If the code is in <code>main.rs</code> it does.</p>\n\n<p>How do I resolve this?</p>\n\n<p>If I add <code>pub</code> I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>25 | pub impl TsProperties for Model {                                                                                                                        \n   | ^^^ `pub` not permitted here because it's implied \n</code></pre>\n\n<p>if I use <code>pub</code> on the struct in main file and put the trait in a separate file:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `create_ar_x_matrix` found for type `Model` in the current scope                                                                         \n   --&gt; src/main.rs:353:12                                                                                                                                                   \n    |                                                                                                                                                                       \n64  | pub struct Model {                                                                                                                                               \n    | --------------------- method `create_ar_x_matrix` not found for this    \n</code></pre>\n"}, {"tags": ["generics", "math", "syntax", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1547382108, "post_id": 54168352, "comment_id": 95166531, "body": "The question you linked does not suggest writing <code>sum: ()</code>. That&#39;s not valid syntax in Rust today and I can only assume it was a typo"}, {"owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "edited": false, "score": 0, "creation_date": 1547383914, "post_id": 54168352, "comment_id": 95166924, "body": "Try to infer type of <code>length</code> and <code>sum</code> yourself. And you&#39;ll realize why compiler can&#39;t do this. Spoiler: there may be many types that implement <code>num::FromPrimitive</code>. And  there may be many types that implement <code>std::iter::Sum&lt;&amp;T&gt;</code>. Just like there may be many types that implement <code>std::ops::Div&lt;_, Output = f64&gt;</code> (_ here is because type of <code>length</code> can&#39;t be infered)."}, {"owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "edited": false, "score": 0, "creation_date": 1547383995, "post_id": 54168352, "comment_id": 95166949, "body": "And for inference to work you must ensure that there&#39;s no ambiguities."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1547393769, "post_id": 54168352, "comment_id": 95169713, "body": "Heavily related: <a href=\"https://stackoverflow.com/q/41017140/1233251\">stackoverflow.com/q/41017140/1233251</a>"}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1547381055, "post_id": 54168645, "comment_id": 95166295, "body": "if i can&#39;t use integer types as input why would i make generic mean method ?"}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547382183, "post_id": 54168645, "comment_id": 95166547, "body": "In this particular use-case, it is possible to use an array of integers (<code>u8</code>, <code>i32</code>, or <code>u64</code>) as input. The only downside would be the division truncation, i.e., <code>println!(&quot;{:.3}&quot;, _)</code> won&#39;t never display floating numbers."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1547382344, "post_id": 54168645, "comment_id": 95166581, "body": "Sure, but unfortunately this kills the purpose(quality) of the mean function."}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547383284, "post_id": 54168645, "comment_id": 95166793, "body": "You are right, @&#214;merErden. I updated the answer in a properly way. Thanks!"}, {"owner": {"reputation": 5930, "user_id": 268075, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/72583f4dd226bdd1c5089f9c414d728a?s=128&d=identicon&r=PG", "display_name": "blokeley", "link": "https://stackoverflow.com/users/268075/blokeley"}, "edited": false, "score": 0, "creation_date": 1547544264, "post_id": 54168645, "comment_id": 95218611, "body": "@Caio Thanks for the tips.  I thought it best to return <code>Option&lt;f64&gt;</code> because the mean of an array of integers is fairly likely to be a floating point number and I didn&#39;t want to truncate the answer."}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 0, "last_activity_date": 1547383208, "last_edit_date": 1547383208, "creation_date": 1547380840, "answer_id": 54168645, "question_id": 54168352, "link": "https://stackoverflow.com/questions/54168352/rust-generics-syntax-for-mean-function/54168645#54168645", "title": "Rust generics syntax for mean function", "body": "<ul>\n<li><p>When the compiler can't figure out the type <code>S</code> of <code>fn sum&lt;S&gt;(self) -&gt; S</code>, you either need to write <code>let foo: Bar = baz.sum();</code> or <code>let foo = baz.sum::&lt;Bar&gt;();</code></p></li>\n<li><p>If you are sure that <code>T</code> will always be some type of number primitive, you ought to collect a owned type from <code>sum()</code> with <code>let sum: T = numbers.iter().cloned().sum();</code> and add the <code>core::iter::Sum</code> bound to <code>T</code>. Otherwise, you may want to work with references.  </p></li>\n<li><p>You can make your function a little more generic be returning <code>Option&lt;T&gt;</code> but if you really want to return <code>Option&lt;f64&gt;</code>, you should cast <code>T</code> to <code>f64</code> using the <code>ToPrimitive</code> trait. Like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e722fe4458a688cfd19bee839d9e30c5\" rel=\"nofollow noreferrer\">this</a>.</p></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 5930, "user_id": 268075, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/72583f4dd226bdd1c5089f9c414d728a?s=128&d=identicon&r=PG", "display_name": "blokeley", "link": "https://stackoverflow.com/users/268075/blokeley"}, "edited": false, "score": 1, "creation_date": 1547482143, "post_id": 54168952, "comment_id": 95198647, "body": "Thanks ever so much.  Coming from years of Python, I&#39;m astonished at how complicated the traits can get so quickly.  I would have never worked out I need traits like Zero and ToPrimitive from a third party library to do something as simple (seemingly) as taking the mean of some numbers."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5930, "user_id": 268075, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/72583f4dd226bdd1c5089f9c414d728a?s=128&d=identicon&r=PG", "display_name": "blokeley", "link": "https://stackoverflow.com/users/268075/blokeley"}, "edited": false, "score": 2, "creation_date": 1547513000, "post_id": 54168952, "comment_id": 95210344, "body": "@blokeley <i>as taking the mean of some numbers</i> \u2014 that&#39;s the &quot;problem&quot;: you aren&#39;t taking the mean of &quot;some numbers&quot;. You are taking the mean of any generic type that can express some set of properties. In Python, you can pass in a collections of strings to the equivalent function and get a runtime error. The equivalent Rust code enforces that whatever you do is valid when the code is compiled. You could make your <i>own</i> trait and implement it just for numbers to reduce the apparent complexity of this function."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 7, "last_activity_date": 1571837089, "last_edit_date": 1571837089, "creation_date": 1547383165, "answer_id": 54168952, "question_id": 54168352, "link": "https://stackoverflow.com/questions/54168352/rust-generics-syntax-for-mean-function/54168952#54168952", "title": "Rust generics syntax for mean function", "body": "<p>You are doing 2 different operations in your generic function:</p>\n\n<ul>\n<li><strong>Summing the all values in slice :</strong> You need to tell that your elements are summable by adding <code>Sum&lt;T&gt;</code> boundary to your generic type parameter.</li>\n<li><strong>Division operation with 2 elements :</strong> Your generic type needs to be converted to <code>f64</code> or any float type that you want to limit. Since you are using num crate i added <code>ToPrimitive</code> as boundary which tells that your generic type can be converted to a primitive type. </li>\n</ul>\n\n<p>Here is the implementation : </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn mean&lt;'a, T: 'a&gt;(numbers: &amp;'a [T]) -&gt; Option&lt;f64&gt;\nwhere\n    T: ToPrimitive + Sum&lt;&amp;'a T&gt;,\n{\n    match numbers.len() {\n        0 =&gt; None,\n        _ =&gt; {\n            let sum = numbers.iter().sum::&lt;T&gt;();\n            let length = f64::from_usize(numbers.len())?;\n\n            T::to_f64(&amp;sum).map(|sum| sum / length)\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=36d074bb3c99139e4c6743c934f3fb27\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1547387700, "last_edit_date": 1547387700, "creation_date": 1547387373, "answer_id": 54169522, "question_id": 54168352, "link": "https://stackoverflow.com/questions/54168352/rust-generics-syntax-for-mean-function/54169522#54169522", "title": "Rust generics syntax for mean function", "body": "<p>The other answers will likely help you with your <em>real</em> problem of writing this function generically.</p>\n\n<hr>\n\n<p>The <strong>actual error</strong> you've asked about though is just a syntax mistake. You wrote this:</p>\n\n<pre><code>let sum = numbers.iter().sum: ();\n</code></pre>\n\n<p>But almost certainly intended to write:</p>\n\n<pre><code>let sum = numbers.iter().sum();\n</code></pre>\n\n<p>The compiler has seen the <code>:</code> that you have accidentally included, and thinks that you are trying to use type ascription. Type ascription is syntax to use type annotations inline within an expression, instead of just in variable declarations.</p>\n\n<p>What you wrote is very similar to:</p>\n\n<pre><code>let sum: () = numbers.iter().sum;\n</code></pre>\n\n<p>If you were to enable type ascription in a nightly rustc build, the error would change because now the compiler will tell you that <code>sum</code> is a function and definitely does <em>not</em> have type <code>()</code>. </p>\n"}, {"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1571837073, "post_id": 54195880, "comment_id": 103372798, "body": "This solution doesn&#39;t  work for <code>isize</code>  or <code>usize</code> values"}], "tags": [], "owner": {"reputation": 5930, "user_id": 268075, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/72583f4dd226bdd1c5089f9c414d728a?s=128&d=identicon&r=PG", "display_name": "blokeley", "link": "https://stackoverflow.com/users/268075/blokeley"}, "is_accepted": true, "score": 1, "last_activity_date": 1548000292, "last_edit_date": 1548000292, "creation_date": 1547544140, "answer_id": 54195880, "question_id": 54168352, "link": "https://stackoverflow.com/questions/54168352/rust-generics-syntax-for-mean-function/54195880#54195880", "title": "Rust generics syntax for mean function", "body": "<p>How about this:</p>\n\n<pre><code>use std::iter::Sum;\n\nfn main() {\n    let err = \"Slice is empty.\";\n\n    // Test vector of integers\n    let numbers = vec![10i32, -21, 15, 20, 18, 14, 18];\n    println!(\"Mean is {:.3}\", mean(numbers.into_iter()).expect(err));\n\n    // Test vector of floating point numbers\n    let numbers = vec![10f64, -21f64, 15f64, 20f64, 18f64, 14f64, 18f64];\n    println!(\"Mean is {:.3}\", mean(numbers.into_iter()).expect(err));\n\n    // Test empty vector\n    let numbers: Vec&lt;i32&gt; = Vec::new();    \n    println!(\"Mean is {:.3}\", mean(numbers.into_iter()).expect(err));\n}\n\nfn mean&lt;T, I: Iterator&lt;Item = T&gt;&gt;(iter: I) -&gt; Option&lt;f64&gt;\nwhere\n    T: Into&lt;f64&gt; + Sum&lt;T&gt;,\n{\n    let mut len = 0;\n    let sum = iter\n        .map(|t| {\n            len += 1;\n            t\n        })\n        .sum::&lt;T&gt;();\n\n    match len {\n        0 =&gt; None,\n        _ =&gt; Some(sum.into() / len as f64)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=adc28c01a7a7cae6aae31c29564d8e94\" rel=\"nofollow noreferrer\">Same code in the Rust Playground</a></p>\n\n<p>It seems to have the following advantages over the answers posted so far:</p>\n\n<ol>\n<li>Much simpler generic type definition.</li>\n<li>No reliance on external <code>num</code> crate.</li>\n<li>No need for difficult-to-guess traits like <code>FromPrimitive</code> and <code>Zero</code>.</li>\n<li>No manual lifetimes declarations.</li>\n</ol>\n\n<p>Or this version which has the following differences to the one above:</p>\n\n<ol>\n<li>Can take arrays rather than vectors.</li>\n<li>Does not consume the array (or vector).</li>\n<li>Needs manual lifetime declarations.</li>\n</ol>\n\n<pre><code>use std::iter::Sum;\n\nfn main() {\n    let err = \"Slice is empty.\";\n\n    // Test aray of integers\n    let numbers = [10, -21, 15, 20, 18, 14, 18];\n    println!(\"Mean is {:.3}\", mean(numbers.iter()).expect(err));\n\n    // Test array of floating point numbers\n    let numbers = [10f64, -21f64, 15f64, 20f64, 18f64, 14f64, 18f64];\n    println!(\"Mean is {:.3}\", mean(numbers.iter()).expect(err));\n\n    // Test empty array\n    let numbers: [i32; 0] = [];\n    match mean(numbers.iter()) {\n        Some(mean_) =&gt; println!(\"Mean is {:.3}\", mean_),\n        None =&gt; println!(\"Empty array\"),\n    }\n}\n\nfn mean&lt;'a, T, I&gt;(iter: I) -&gt; Option&lt;f64&gt;\nwhere\n    T: Into&lt;f64&gt; + Sum&lt;&amp;'a T&gt; + 'a,\n    I: Iterator&lt;Item = &amp;'a T&gt;,\n{\n    let mut len = 0;\n    let sum = iter\n        .map(|t| {\n            len += 1;\n            t\n        })\n        .sum::&lt;T&gt;();\n\n    match len {\n        0 =&gt; None,\n        _ =&gt; Some(sum.into() / len as f64),\n    }\n}\n</code></pre>\n\n<p>Thanks to my friend Sven for code contribution.</p>\n"}], "owner": {"reputation": 5930, "user_id": 268075, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/72583f4dd226bdd1c5089f9c414d728a?s=128&d=identicon&r=PG", "display_name": "blokeley", "link": "https://stackoverflow.com/users/268075/blokeley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 914, "favorite_count": 1, "accepted_answer_id": 54195880, "answer_count": 4, "score": 1, "last_activity_date": 1571837089, "creation_date": 1547378625, "last_edit_date": 1547407451, "question_id": 54168352, "link": "https://stackoverflow.com/questions/54168352/rust-generics-syntax-for-mean-function", "title": "Rust generics syntax for mean function", "body": "<p>I'm trying to write a function which takes a slice of numbers and calculates the mean.</p>\n\n<p>I tried using the ideas from <a href=\"https://stackoverflow.com/questions/34247038/implementing-mean-function-for-generic-types\">Implementing mean function for generic types</a> but get an error.</p>\n\n<p>My code is:</p>\n\n<pre><code>extern crate num;\n\nuse num::{FromPrimitive, Zero};\nuse std::ops::{Add, Div};\n\nfn main() {\n    let mut numbers = [10, -21, 15, 20, 18, 14, 18];\n    let err = \"Slice is empty.\";\n\n    println!(\"Mean is {:.3}\", mean(&amp;numbers).expect(err));\n}\n\nfn mean&lt;T&gt;(numbers: &amp;[T]) -&gt; Option&lt;f64&gt;\nwhere\n    T: Copy + Zero + Add&lt;T, Output = T&gt; + Div&lt;T, Output = T&gt; + FromPrimitive,\n{\n    match numbers.len() {\n        0 =&gt; None,\n        _ =&gt; {\n            let sum = numbers.iter().sum: ();\n            let length = FromPrimitive::from_usize(numbers.len()).unwrap();\n            Some(sum / length)\n        }\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0658]: type ascription is experimental (see issue #23416)\n  --&gt; src/main.rs:20:23\n   |\n20 |             let sum = numbers.iter().sum: ();\n   |                       ^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Is there any way of writing a generic mean function without using experimental features?</p>\n"}, {"tags": ["struct", "rust", "move-semantics", "pass-by-value"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1547377221, "post_id": 54167993, "comment_id": 95165411, "body": "<code>Vec</code> does not implement <code>Copy</code>. As such, you&#39;ll have to use an array or pass a reference."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1547385795, "post_id": 54167993, "comment_id": 95167375, "body": "<i>&quot;I am trying to pass my struct to multiple functions&quot;</i> \u2014 Please could you post the code where you do that."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547398871, "post_id": 54167993, "comment_id": 95171191, "body": "I found the linked question by searching for [how to implement copy for a type [rust]](<a href=\"https://stackoverflow.com/search?q=how+to+implement+copy+for+a+type+%5Brust%5D\">stackoverflow.com/&hellip;</a>). <code>String</code> is this way because it contains a <code>Vec</code>, so the answers apply just as well."}], "answers": [{"comments": [{"owner": {"reputation": 720, "user_id": 4705242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a9a7dd812330d5c4d545011135880f1c?s=128&d=identicon&r=PG&f=1", "display_name": "nickeb96", "link": "https://stackoverflow.com/users/4705242/nickeb96"}, "edited": false, "score": 2, "creation_date": 1547392549, "post_id": 54168335, "comment_id": 95169335, "body": "You can&#39;t implement copy for just any type.  It only works on things like primitives and references, and structs/enums consisting of copyable types.  Op&#39;s struct is not one of those.  Copy does a byte for byte copy of the value which won&#39;t work for something with heap allocations like <code>Vec</code>.  Op&#39;s only recourse is to clone his struct every time he passes it to a function, or preferably make his functions take a reference.  He/she could also have his struct contain something other than <code>Vec</code>s."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 3, "last_activity_date": 1547398587, "last_edit_date": 1547398587, "creation_date": 1547378443, "answer_id": 54168335, "question_id": 54167993, "link": "https://stackoverflow.com/questions/54167993/copy-a-struct-to-pass-to-a-function-this-field-does-not-implement-copy/54168335#54168335", "title": "Copy a struct to pass to a function - this field does not implement `Copy`", "body": "<p>If a type implements <code>Copy</code>, <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html#whats-the-difference-between-copy-and-clone\" rel=\"nofollow noreferrer\">\"copies happen implicitly\"</a>, i.e. you do not have to explicitly state that you want to copy the value. Because <code>Vec</code> implements <code>Drop</code>, it can not implement <code>Copy</code>, preventing you from accidentally copying values around without noticing it.</p>\n\n<p>Thus, <code>Vec</code> only implements <code>Clone</code> (if the contained type implements <code>Clone</code>), so that you can explicitly copy a vector by calling <code>Clone</code>.</p>\n\n<p>Similarly, you should think twice if <code>ArimaModel</code> should really derive <code>Copy</code> or if you actually want to derive <code>Clone</code> so that you have to explicitly state that you want a copy.</p>\n\n<p>But if you just want to pass <code>ArimaModel</code> into different functions, you might want to borrow them (i.e. pass <code>&amp;ArimaModel</code> or <code>&amp;mut ArimaModel</code> instead of  <code>ArimaModel</code>).</p>\n"}], "owner": {"reputation": 61601, "user_id": 1203556, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/aca772bc8ed79a86894211c7efd920aa?s=128&d=identicon&r=PG", "display_name": "Tampa", "link": "https://stackoverflow.com/users/1203556/tampa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3863, "favorite_count": 0, "closed_date": 1547432830, "accepted_answer_id": 54168335, "answer_count": 1, "score": 2, "last_activity_date": 1547432817, "creation_date": 1547375538, "last_edit_date": 1547432817, "question_id": 54167993, "link": "https://stackoverflow.com/questions/54167993/copy-a-struct-to-pass-to-a-function-this-field-does-not-implement-copy", "closed_reason": "Duplicate", "title": "Copy a struct to pass to a function - this field does not implement `Copy`", "body": "<p>Here is my struct:</p>\n\n<pre><code>#[derive(Copy, Clone)]\npub struct ArimaModel {\n    p: u8,\n    d: u8,\n    q: u8,\n    holdout_length: u16,\n    max_ar_lag: u8,\n    max_ma_lag: u8,\n    df_lags: u8,\n    time_series: Vec&lt;f64&gt;,\n    ar_lags: Vec&lt;usize&gt;,\n}\n</code></pre>\n\n<p>I am trying to pass my struct to multiple functions.</p>\n\n<p>Here is my error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0204]: the trait `Copy` may not be implemented for this type\n  --&gt; src/lib.rs:1:10\n   |\n1  | #[derive(Copy, Clone)]\n   |          ^^^^\n...\n10 |     time_series: Vec&lt;f64&gt;,\n   |     --------------------- this field does not implement `Copy`\n11 |     ar_lags: Vec&lt;usize&gt;,\n   |     ------------------- this field does not implement `Copy`\n</code></pre>\n"}, {"tags": ["reference", "rust", "dereference", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 3461311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9032796bee398ed078b2f568f5b1dc3e?s=128&d=identicon&r=PG&f=1", "display_name": "user3461311", "link": "https://stackoverflow.com/users/3461311/user3461311"}, "edited": false, "score": 0, "creation_date": 1547414983, "post_id": 54168000, "comment_id": 95175688, "body": "Thanks! I didn&#39;t realized this is related to auto-dereference."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 1, "last_activity_date": 1547407177, "last_edit_date": 1547407177, "creation_date": 1547375590, "answer_id": 54168000, "question_id": 54167114, "link": "https://stackoverflow.com/questions/54167114/what-allows-the-implicit-conversion-from-a-struct-to-its-reference-when-calling/54168000#54168000", "title": "What allows the implicit conversion from a struct to its reference when calling a method?", "body": "<p>From the <a href=\"https://doc.rust-lang.org/reference/expressions/method-call-expr.html\" rel=\"nofollow noreferrer\">reference</a> :</p>\n\n<blockquote>\n  <p>A method call consists of an expression (the receiver) followed by a\n  single dot, an expression path segment, and a parenthesized\n  expression-list</p>\n  \n  <p>When looking up a method call, the receiver may be automatically\n  dereferenced or borrowed in order to call a method.</p>\n</blockquote>\n\n<hr>\n\n<h2>Note:</h2>\n\n<p>Automatic dereference or borrow is only valid for <strong>the receiver</strong>. If there is no expression as receiver it will not work. Compiler will expect the borrowed type.</p>\n\n<p>Example: </p>\n\n<pre><code>fn main() {\n    let d = Dummy(1);\n\n    let borrowed = Dummy::borrow(d);\n}\n</code></pre>\n\n<p>Compiler will show an error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:12:34\n   |\n12 |     let borrowed = Dummy::borrow(d);\n   |                                  ^\n   |                                  |\n   |                                  expected &amp;Dummy, found struct `Dummy`\n   |                                  help: consider borrowing here: `&amp;d`\n   |\n   = note: expected type `&amp;Dummy`\n              found type `Dummy`\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 3461311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9032796bee398ed078b2f568f5b1dc3e?s=128&d=identicon&r=PG&f=1", "display_name": "user3461311", "link": "https://stackoverflow.com/users/3461311/user3461311"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 193, "favorite_count": 0, "closed_date": 1547407154, "answer_count": 1, "score": 0, "last_activity_date": 1547414936, "creation_date": 1547366659, "last_edit_date": 1547414936, "question_id": 54167114, "link": "https://stackoverflow.com/questions/54167114/what-allows-the-implicit-conversion-from-a-struct-to-its-reference-when-calling", "closed_reason": "Duplicate", "title": "What allows the implicit conversion from a struct to its reference when calling a method?", "body": "<p>Which rule makes the following code work?</p>\n\n<pre><code>struct Dummy(i32);\nimpl Dummy {\n    pub fn borrow(&amp;self) {\n        println!(\"{}\", self.0);\n    }\n}\n\nfn main() {\n    let d = Dummy(1);\n    (&amp;d).borrow();\n    d.borrow();\n}\n</code></pre>\n\n<p>I expect <code>d.borrow()</code> won't work as it passes in <code>self</code> which doesn't match the method signature <code>borrow(&amp;self)</code>.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1547351121, "post_id": 54165876, "comment_id": 95161463, "body": "I don&#39;t have a full answer to your question, but the error you&#39;re getting suggests using <code>PhantomData</code>, which would at least get rid of your syntax problem."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547381797, "post_id": 54165876, "comment_id": 95166449, "body": "You may find <a href=\"https://stackoverflow.com/q/32059370/3650362\">When is it appropriate to use an associated type versus a generic type?</a> to have some useful answers."}], "answers": [{"comments": [{"owner": {"reputation": 2341, "user_id": 2225444, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1d5a3f96e4d79bac13f2349c70f75aa0?s=128&d=identicon&r=PG", "display_name": "Turtles Are Cute", "link": "https://stackoverflow.com/users/2225444/turtles-are-cute"}, "edited": false, "score": 0, "creation_date": 1547351950, "post_id": 54165917, "comment_id": 95161554, "body": "Thank you very much; this solved it. In addition to the pub/private errors, the other thing that needed to be changed was this: <code>impl crate::general::MyTrait&lt;crate::specific::Aval&gt; for crate::specific::MyS {     fn val(self) -&gt; crate::specific::Aval {         self.val     } }</code>"}, {"owner": {"reputation": 2341, "user_id": 2225444, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1d5a3f96e4d79bac13f2349c70f75aa0?s=128&d=identicon&r=PG", "display_name": "Turtles Are Cute", "link": "https://stackoverflow.com/users/2225444/turtles-are-cute"}, "edited": false, "score": 0, "creation_date": 1547393641, "post_id": 54165917, "comment_id": 95169669, "body": "The answer to my follow-on question of reducing verbosity: <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#specifying-placeholder-types-in-trait-definitions-with-associated-types\" rel=\"nofollow noreferrer\">Associated types</a>"}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 1, "last_activity_date": 1547351157, "creation_date": 1547351157, "answer_id": 54165917, "question_id": 54165876, "link": "https://stackoverflow.com/questions/54165876/generic-apis-with-traits/54165917#54165917", "title": "Generic APIs with traits", "body": "<p>Just remove the trait bound from your <code>struct</code>.</p>\n\n<pre><code>struct Data&lt;T&gt; {\n    mys: T\n}\n</code></pre>\n\n<p>You can still add methods and trait implementations for <code>Data&lt;T&gt;</code> requiring more specific bounds on <code>T</code>, but you don\u2019t need them to define the layout of <code>Data&lt;T&gt;</code>, so you shouldn\u2019t specify them there (and in this case, you can\u2019t, unless you add a <code>PhantomData</code> member referring to <code>A</code>).</p>\n\n<p>Your code has a number of other errors, but I trust you\u2019ll figure them out.  Feel free to comment if you get stuck again.</p>\n"}], "owner": {"reputation": 2341, "user_id": 2225444, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1d5a3f96e4d79bac13f2349c70f75aa0?s=128&d=identicon&r=PG", "display_name": "Turtles Are Cute", "link": "https://stackoverflow.com/users/2225444/turtles-are-cute"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 54165917, "answer_count": 1, "score": 1, "last_activity_date": 1547351171, "creation_date": 1547350337, "last_edit_date": 1547351171, "question_id": 54165876, "link": "https://stackoverflow.com/questions/54165876/generic-apis-with-traits", "title": "Generic APIs with traits", "body": "<p>I'm attempting to generalize/decouple an API, so that alternative structs that satisfy a Trait can be used. Struggling on Syntax regarding nested traits. This is a stripped down example of what I'm attempting to do. Note that in the real one, there are multiple sub-traits, which potentially makes a follow-on question of \"how to reduce verbosity, if I'm on the right track\".</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub mod general {\n    /// A trait to make the API generic\n    pub trait MyTrait&lt;A: PartialEq&gt; {\n        // type A: Partial\n        fn val(self) -&gt; A;\n    }\n\n    /// Part of the generic API\n    pub struct Data&lt;A: PartialEq, T: MyTrait&lt;A&gt;&gt; {\n        mys: T\n    }\n\n    /// Another part of the generic API\n    fn doit&lt;A: PartialEq&gt;(s: impl MyTrait&lt;A&gt;) -&gt; impl MyTrait {\n        s\n    }\n}\n\npub mod specific {\n    /// Api-specific substruct\n    #[derive(PartialEq)]\n    pub struct Aval {\n        val: u32\n    }\n\n    /// My top-level custom struct\n    pub struct MyS {\n        val: Aval\n    }\n}\n\nimpl&lt;A: PartialEq&gt; crate::general::MyTrait&lt;A&gt; for crate::specific::MyS {\n    fn val(self) -&gt; crate::specific::Aval {\n        self.val\n    }\n}\n\n/// Example of how we'd use this\nfn main() {\n    let mys = crate::specific::MyS{ val: crate::specific::Aval{ val: 0 } };\n    let S = crate::general::Data{mys};\n    crate::general::doit(mys);  // Eg pretend we cloned or didn't create S.\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=67610a13d4e6451b4814913f39154ab3\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>In this specific example, we have a chicken+egg: Error on the Data struct of <code>error[E0392]: parameter `A` is never used</code>. Where if we remove A: <code>error[E0412]: cannot find type `A` in this scope</code></p>\n\n<p>I suspect this is a syntax problem related to associated types.</p>\n"}, {"tags": ["rust", "rust-macros", "rust-proc-macros"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1547339531, "post_id": 54165117, "comment_id": 95159879, "body": "Your question doesn&#39;t make sense. In the title you want to know, how to convert a String into a TokenStream, but in your text, you are complaining, that <code>str</code> is not an <code>i32</code>, which is a complet different question."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1547339641, "post_id": 54165117, "comment_id": 95159897, "body": "Not just that, what else would it be? You define it as a string literal by quoting it. try <code>let str = 4 as i32</code> and watch it turn into an <code>i32</code> literal in <code>quote!</code>."}, {"owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "edited": false, "score": 0, "creation_date": 1547339790, "post_id": 54165117, "comment_id": 95159911, "body": "This certainly might not be possible. I&#39;ll update the question with more details to clarify."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547340131, "post_id": 54165117, "comment_id": 95159956, "body": "Your title still does not match your question."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1547341040, "post_id": 54165117, "comment_id": 95160081, "body": "I honestly feel like you&#39;re both using the wrong tool, and trying to solve a problem different to the one you have. Why are you trying to get a <code>TokenStream</code> from code you already know the structure of, and where does the additional data on types come from (even in your example, the type of <code>thing</code> could very well be an <code>u8</code>, or an <code>i16</code>, or anything else that <code>4</code> conforms to). What are you <i>actually</i> trying to parse?"}, {"owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547341141, "post_id": 54165117, "comment_id": 95160090, "body": "@hellow I disagree. I\u2019d like to know how to convert strings such as \u201c(1,2)\u201d, \u201cfunc(1)\u201d, \u201c4\u201d to TokenStreams."}, {"owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "edited": false, "score": 0, "creation_date": 1547341253, "post_id": 54165117, "comment_id": 95160118, "body": "I do think I\u2019m going about this the wrong way though. I\u2019m writing a macro and I\u2019ve been managing the attributes to the macro by using regexes. I then want to go back to code during the generation step. It\u2019s seeming like I should just work with the attributes I\u2019m the TokenSteam that is provided to me."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1547343786, "post_id": 54165117, "comment_id": 95160474, "body": "What is the actual purpose of the macro? From this and your other question, it feels like the examples you give have very little to do with what you&#39;re actually attempting to do."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547414296, "post_id": 54165117, "comment_id": 95175503, "body": "You haven&#39;t even specified where this <code>TokenStream</code> comes from. Do you mean <a href=\"https://doc.rust-lang.org/proc_macro/struct.TokenStream.html\" rel=\"nofollow noreferrer\"><code>proc_macro::TokenStream</code></a> or <a href=\"https://docs.rs/proc-macro2/0.4.24/proc_macro2/struct.TokenStream.html\" rel=\"nofollow noreferrer\"><code>proc_macro2::TokenStream</code></a>, or some other one?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1565188877, "last_edit_date": 1565188877, "creation_date": 1547414905, "answer_id": 54173392, "question_id": 54165117, "link": "https://stackoverflow.com/questions/54165117/convert-string-into-tokenstream/54173392#54173392", "title": "Convert string into TokenStream", "body": "<blockquote>\n  <p>how can one convert [a string] into a <code>TokenStream</code></p>\n</blockquote>\n\n<p>Rust has a common trait for converting strings into values when that conversion might fail: <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" rel=\"noreferrer\"><code>FromStr</code></a>. This is usually accessed via the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.parse\" rel=\"noreferrer\"><code>parse</code></a> method on <code>&amp;str</code>.</p>\n\n<h1><a href=\"https://docs.rs/proc-macro2/0.4.24/proc_macro2/struct.TokenStream.html\" rel=\"noreferrer\"><code>proc_macro2::TokenStream</code></a></h1>\n\n<pre><code>use proc_macro2; // 0.4.24\n\nfn example(s: &amp;str) {\n    let stream: proc_macro2::TokenStream = s.parse().unwrap();\n}\n</code></pre>\n\n<h1><a href=\"https://doc.rust-lang.org/proc_macro/struct.TokenStream.html\" rel=\"noreferrer\"><code>proc_macro::TokenStream</code></a></h1>\n\n<pre><code>extern crate proc_macro;\n\nfn example(s: &amp;str) {\n    let stream: proc_macro::TokenStream = s.parse().unwrap();\n}\n</code></pre>\n\n<p>You should be aware that this code cannot be run outside of the invocation of an actual procedural macro.</p>\n"}], "owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1840, "favorite_count": 0, "accepted_answer_id": 54173392, "answer_count": 1, "score": 3, "last_activity_date": 1565188877, "creation_date": 1547339334, "last_edit_date": 1547388757, "question_id": 54165117, "link": "https://stackoverflow.com/questions/54165117/convert-string-into-tokenstream", "title": "Convert string into TokenStream", "body": "<p>Given a string (<code>str</code>), how can one convert that into a <code>TokenStream</code> in Rust?</p>\n\n<p>I've tried using the <code>quote!</code> macro.</p>\n\n<pre><code>let str = \"4\";\nlet tokens = quote! { let num = #str; }; // #str is a str not i32\n</code></pre>\n\n<p>The goal here is to generate tokens for some unknown string of code.</p>\n\n<pre><code>let thing = \"4\";\nlet tokens = quote! { let thing = #thing }; // i32\n</code></pre>\n\n<p>or</p>\n\n<pre><code>let thing = \"\"4\"\";\nlet tokens = quote! { let thing = #thing }; // str\n</code></pre>\n"}, {"tags": ["recursion", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1547339607, "post_id": 54164839, "comment_id": 95159890, "body": "Short answer: no :)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1547341666, "post_id": 54164839, "comment_id": 95160181, "body": "You could use interior mutability, <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3286942e9da4c9914d66ffb84406fef2\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>, but I don&#39;t like that."}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 2, "creation_date": 1547346056, "post_id": 54164839, "comment_id": 95160809, "body": "In this simple example, one strategy to address the issue would be to build a separate output structure so that the input doesn\u2019t need to be mutated: <code>fn try_find_subset_with_sum(values: &amp;[u32], goal: u32) -&gt; Option&lt;Vec&lt;bool&gt;&gt;</code>. Would that strategy apply in your more complex context?"}, {"owner": {"reputation": 972, "user_id": 1578458, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2RWBA.gif?s=128&g=1", "display_name": "Jesko H&#252;ttenhain", "link": "https://stackoverflow.com/users/1578458/jesko-h%c3%bcttenhain"}, "reply_to_user": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 0, "creation_date": 1547508822, "post_id": 54164839, "comment_id": 95209485, "body": "@AndersKaseorg I would have to think about that for a bit, it is quite possible, I see where you&#39;re going with it. @Stargateur I don&#39;t hate  those <code>Cell</code> types in fact ... why don&#39;t you like them? Thanks everyone for the helpful comments! I feel my question is answered, and I will pretty much accept any answer that summarizes these comments ;)"}], "owner": {"reputation": 972, "user_id": 1578458, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2RWBA.gif?s=128&g=1", "display_name": "Jesko H&#252;ttenhain", "link": "https://stackoverflow.com/users/1578458/jesko-h%c3%bcttenhain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1547406713, "creation_date": 1547335836, "last_edit_date": 1547406713, "question_id": 54164839, "link": "https://stackoverflow.com/questions/54164839/how-to-use-iterators-in-recursive-calls-mutating-a-sequence-of-data", "title": "How to use iterators in recursive calls mutating a sequence of data?", "body": "<h3>TL/DR</h3>\n\n<p>I have a recursive algorithm where every call wants to modify entries in an iterable data structure (a <code>Vec</code>). How do I properly model this in Rust using iterators? </p>\n\n<h3>Disclaimer</h3>\n\n<p>The problem arose in a different, more complex context and I tried to build a rather minimal example which highlights the issue. I am mentioning this to explain that it won't help me if you recommend an entirely different solution to the particular problem I am solving in the below code, which is subset sum.</p>\n\n<h3>Example</h3>\n\n<p>Consider the following code, and remove a single slash in front of either option to comment it out. Now, option 1 compiles and works as expected, but option 2 does not compile.</p>\n\n<pre><code>#[derive(Clone, Copy)]\nstruct Item {\n    in_subset: bool,\n    value: u32,\n}\n\nfn try_find_subset_with_sum(items: &amp;mut Vec&lt;Item&gt;, goal: u32) -&gt; bool {\n    let current = items\n        .iter()\n        .filter(|x| x.in_subset)\n        .fold(0, |sum, x| sum + x.value);\n    if current == goal {\n        true\n    } else {\n        if current &gt; goal {\n            false\n        } else {\n            //* OPTION 1: ********************************\n            for k in 0..items.len() {\n                if !items[k].in_subset {\n                    items[k].in_subset = true;\n                    if try_find_subset_with_sum(items, goal) {\n                        return true;\n                    }\n                    items[k].in_subset = false;\n                }\n            }\n            // *******************************************/\n            //* OPTION 2: ********************************\n            for x in items.iter_mut() {\n                if !x.in_subset {\n                    x.in_subset = true;\n                    if try_find_subset_with_sum(items, goal) {\n                        return true;\n                    } else {\n                        x.in_subset = false\n                    }\n                }\n            }\n            // *******************************************/\n            false\n        }\n    }\n}\n\nfn main() {\n    let tmp = vec![12, 9, 2, 1, 13, 46, 5, 5, 9];\n    let mut set: Vec&lt;Item&gt; = tmp\n        .into_iter()\n        .map(|x| Item {\n            in_subset: false,\n            value: x,\n        })\n        .collect();\n    if try_find_subset_with_sum(&amp;mut set, 16) {\n        println!(\"found the following subset:\");\n        for x in set {\n            if x.in_subset {\n                println!(\"{}\", x.value);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The error message for option 2 states:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*items` as mutable more than once at a time\n  --&gt; src/main.rs:33:49\n   |\n30 |             for x in items.iter_mut() {\n   |                      ----------------\n   |                      |\n   |                      first mutable borrow occurs here\n   |                      first borrow used here, in later iteration of loop\n...\n33 |                     if try_find_subset_with_sum(items, goal) {\n   |                                                 ^^^^^ second mutable borrow occurs here\n</code></pre>\n\n<p>I understand what the compiler is telling me. If it were human, I would yell back at it to <em>\"just borrow the darn iterable whenever I modify the data and get it back before the recursive call for crying out loud!\"</em> -- but I do understand that it probably can't do that.</p>\n\n<h3>The Question</h3>\n\n<p>Is there a more elegant way to solve this than option 1? Is there any way to do this with iterators?</p>\n"}, {"tags": ["rust", "rust-diesel", "rust-actix"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547432720, "post_id": 54164682, "comment_id": 95179045, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54164682/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 1067, "user_id": 108542, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/c4a295916a95dcda3522fb98701c51bd?s=128&d=identicon&r=PG", "display_name": "trolle3000", "link": "https://stackoverflow.com/users/108542/trolle3000"}, "edited": false, "score": 0, "creation_date": 1547338983, "post_id": 54164917, "comment_id": 95159798, "body": "Thanks for your reply @s&#233;bastien-renauld! It seems it will take a bit of extra work to get either example to work, I&#39;ll keep you posted :-)"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1067, "user_id": 108542, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/c4a295916a95dcda3522fb98701c51bd?s=128&d=identicon&r=PG", "display_name": "trolle3000", "link": "https://stackoverflow.com/users/108542/trolle3000"}, "edited": false, "score": 0, "creation_date": 1547339151, "post_id": 54164917, "comment_id": 95159822, "body": "@trolle3000 Can you give me the return type of your <code>send()</code> function? That is the detail that&#39;s missing from your question, that prevents me from being able to give you a direct answer."}, {"owner": {"reputation": 1067, "user_id": 108542, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/c4a295916a95dcda3522fb98701c51bd?s=128&d=identicon&r=PG", "display_name": "trolle3000", "link": "https://stackoverflow.com/users/108542/trolle3000"}, "edited": false, "score": 0, "creation_date": 1547409271, "post_id": 54164917, "comment_id": 95174222, "body": "Hi @S&#233;bastien Renauld, the return type is <code>Result&lt;models::Gpio, Error&gt;</code> where <code>Error</code> is an <code>actix_web::Error</code> and <code>models::Gpio</code> is a struct (defined here: <a href=\"https://gitlab.com/bogeholm/raspberry-web/blob/master/src/models.rs\" rel=\"nofollow noreferrer\">gitlab.com/bogeholm/raspberry-web/blob/master/src/models.rs</a>)"}, {"owner": {"reputation": 1067, "user_id": 108542, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/c4a295916a95dcda3522fb98701c51bd?s=128&d=identicon&r=PG", "display_name": "trolle3000", "link": "https://stackoverflow.com/users/108542/trolle3000"}, "edited": false, "score": 0, "creation_date": 1547409517, "post_id": 54164917, "comment_id": 95174292, "body": "With the appropriate type annotations it works perfectly! Thanks :-)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1547336773, "creation_date": 1547336773, "answer_id": 54164917, "question_id": 54164682, "link": "https://stackoverflow.com/questions/54164682/actix-web-send-message-to-db-handler-conditionally-send-message-to-second-hand/54164917#54164917", "title": "Actix-web: send message to db handler, conditionally send message to second handler", "body": "<p>You were almost there.</p>\n\n<p>When using a <code>match</code>, all arms must yield the same type. In your case, one is a future combined with <code>and_then</code>, on the other arm, you have a <code>result</code>.</p>\n\n<p>Furthermore, unless your <code>send()</code> function returns a type <code>impl Future&lt;Item = Result&lt;R, E&gt;, Error = E&gt;</code>, the <code>match</code> is completely superfluous. <code>and_then</code> takes as parameter <code>Item</code>, not <code>Result&lt;Item, Error&gt;</code>.</p>\n\n<p>So, the entire thing can just be reduced to:</p>\n\n<pre><code>state\n  .db\n  .send(...)\n  .from_err()\n  .and_then(|res| state.db.send(...).from_err())\n  .then(|res| match res {\n     Ok(response) =&gt; Ok(HttpResponse::Ok().json(response)),\n     Err(err) =&gt; Ok(HttpResponse::InternalServerError().body(err.to_string()))\n   })\n   .responder()\n</code></pre>\n\n<p>Let's assume your types are correct, though. You can easily convert that <code>Result</code> into a <code>future</code> with <code>future::result</code> like so:</p>\n\n<pre><code>state\n    .db\n    .send(...)\n    .from_err()\n    .and_then(|res| future::result(res).from_err())\n    .and_then(|res| \n        // Do some additional logic here\n          state\n          .db\n          .send(...)\n          .from_err()\n     )\n     .and_then(|res| future::result(res).from_err())\n     .then(|res| match res {\n       Ok(response) =&gt; Ok(HttpResponse::Ok().json(response)),\n       Err(err) =&gt; Ok(HttpResponse::InternalServerError().body(err.to_string()))\n      })\n     .responder()\n</code></pre>\n\n<p>An example is on the sandbox there: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6801886b02081160e268f395bcc1ad6c\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6801886b02081160e268f395bcc1ad6c</a></p>\n"}], "owner": {"reputation": 1067, "user_id": 108542, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/c4a295916a95dcda3522fb98701c51bd?s=128&d=identicon&r=PG", "display_name": "trolle3000", "link": "https://stackoverflow.com/users/108542/trolle3000"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 392, "favorite_count": 0, "accepted_answer_id": 54164917, "answer_count": 1, "score": 1, "last_activity_date": 1547336773, "creation_date": 1547334269, "question_id": 54164682, "link": "https://stackoverflow.com/questions/54164682/actix-web-send-message-to-db-handler-conditionally-send-message-to-second-hand", "title": "Actix-web: send message to db handler, conditionally send message to second handler", "body": "<p>I am trying to send a message to one db handler, and based on the result send a message to a second handler, or return an error from the first.</p>\n\n<p>What I've come up with so far doesn't work; rustc says <code>match arms have incompatible types</code></p>\n\n<p><code>expected struct 'futures::future::and_then::AndThen', found enum 'std::result::Result'</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>state\n    .db\n    .send(...)\n    .from_err()\n    .and_then(|res| match res {\n        Ok(response) =&gt; {\n        // Do some additional logic here\n        state\n        .db\n        .send(...)\n        .from_err()\n        .and_then(|res| match res {\n            Ok(response) =&gt; Ok(HttpResponse::Ok().json(response)),\n            Err(err) =&gt; Ok(HttpResponse::InternalServerError().body(err.to_string()))\n            }) \n        },\n        Err(err) =&gt; Ok(HttpResponse::InternalServerError().body(err.to_string()))\n    })\n    .responder()\n</code></pre>\n\n<p><em>Question</em> how to accomplish this in actix-web?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1547406609, "last_edit_date": 1547406609, "creation_date": 1547323199, "answer_id": 54163363, "question_id": 54162832, "link": "https://stackoverflow.com/questions/54162832/is-there-a-way-to-create-a-copy-of-an-enum-with-some-field-values-updated/54163363#54163363", "title": "Is there a way to create a copy of an enum with some field values updated?", "body": "<p>I'm afraid you're hitting one of the restrictions on Rust based on its design and your only real solution is mutation in-place and writing a mutator function or four.</p>\n\n<p>The problem with enums is that you <strong>need</strong> to <code>match</code> to be able to do anything on them. Until that point, Rust knows or infers very little about what the struct actually is. An additional problem is the lack of any kind of reflection-like ability to allow for the ability to query a type and figure out if it has a field, and the inability to do anything but exhaustively match all contents.</p>\n\n<p>Honestly, the cleanest way may actually depend on the purpose of your mutations. Are they a defined set of changes to an <code>enum</code> based on a business concern of some sort? If so, you may actually want to wrap your logic into a trait extension and use that to encapsulate the logic.</p>\n\n<p>Consider, for instance, a very contrived example. We're building an application that has to deal with different items and apply taxes to them. Said taxes depend on the type of products, and for some reason, all our products are represented by variants of an <code>enum</code>, like so:\n    #[derive(Debug)]\n    enum Item {\n        Food { price: u8, calories: u8 },\n        Technology { price: u8 },\n    }</p>\n\n<pre><code>trait TaxExt {\n    fn apply_tax(&amp;mut self);\n}\nimpl TaxExt for Item {\n    fn apply_tax(&amp;mut self) {\n        match self {\n            &amp;mut Item::Food {\n                ref mut price,\n                calories: _,\n            } =&gt; {\n                // Our food costs double, for tax reasons\n                *price *= 2;\n            }\n            &amp;mut Item::Technology { ref mut price } =&gt; {\n                // Technology has a 1 unit tax\n                *price += 1;\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut obj = Item::Food {\n        price: 3,\n        calories: 200,\n    };\n    obj.apply_tax();\n    println!(\"{:?}\", obj);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d03f835d981a7a7a74eabf3836f1eb8d\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Assuming you <strong>can</strong> split your logic like so, it is probably the cleanest way to structure this. </p>\n"}, {"tags": [], "owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "is_accepted": true, "score": 4, "last_activity_date": 1547964645, "last_edit_date": 1547964645, "creation_date": 1547323646, "answer_id": 54163418, "question_id": 54162832, "link": "https://stackoverflow.com/questions/54162832/is-there-a-way-to-create-a-copy-of-an-enum-with-some-field-values-updated/54163418#54163418", "title": "Is there a way to create a copy of an enum with some field values updated?", "body": "<p>Not exactly.\nThere's \"functional record update syntax\", but it's only for <code>struct</code>s:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo {\n    bar: u8,\n    baz: u8,\n    quux: u8,\n}\n\nfn foo() {\n    let foobar = Foo {\n        bar: 1,\n        baz: 2,\n        quux: 3,\n    };\n    let bazquux = Foo { baz: 4, ..foobar };\n}\n</code></pre>\n\n<p>Best you can do without creating structs for each variant is something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut altered = x.clone();\nmatch &amp;mut altered {\n    A::Var1 { a, .. } =&gt; *a = new_a,\n    A::Var2 { d, .. } =&gt; *d = new_d,\n};\naltered\n</code></pre>\n"}], "owner": {"reputation": 181, "user_id": 3650667, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c82fe3a269cf3d0794c1656c8329898?s=128&d=identicon&r=PG&f=1", "display_name": "vtl", "link": "https://stackoverflow.com/users/3650667/vtl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 0, "accepted_answer_id": 54163418, "answer_count": 2, "score": 0, "last_activity_date": 1547964645, "creation_date": 1547319067, "last_edit_date": 1547406544, "question_id": 54162832, "link": "https://stackoverflow.com/questions/54162832/is-there-a-way-to-create-a-copy-of-an-enum-with-some-field-values-updated", "title": "Is there a way to create a copy of an enum with some field values updated?", "body": "<p>I have an enum with several record variants:</p>\n\n<pre><code>enum A {\n    Var1 { a: i64, b: i64 },\n    Var2 { c: i32, d: i32 },\n}\n</code></pre>\n\n<p>I want to create a modified copy of such an enum (with different behavior for each variant). I know I can do this:</p>\n\n<pre><code>match a {\n    A::Var1 { a, b } =&gt; A::Var1 { a: new_a, b },\n    A::Var2 { c, d } =&gt; A::Var2 { c, d: new_d },\n}\n</code></pre>\n\n<p>However each variant has quite a few fields, and I'd prefer not to explicitly pass them all. Is there any way to say \"clone this enum, <em>except</em> use this value for field <code>x</code> instead of the cloned value\"?</p>\n"}, {"tags": ["rust", "cryptography"], "comments": [{"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1547316362, "post_id": 54162294, "comment_id": 95154665, "body": "You should provide a complete working example of your code so people can understand better what you are trying to do. Anyway, it is possible to get a slice of bytes from a <code>String</code> or <code>str</code> using the <code>as_bytes</code> method."}], "answers": [{"tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 2, "last_activity_date": 1547318424, "last_edit_date": 1547318424, "creation_date": 1547317658, "answer_id": 54162618, "question_id": 54162294, "link": "https://stackoverflow.com/questions/54162294/how-do-i-construct-a-public-key-from-a-modulus-and-exponent-given-as-a-hex-encod/54162618#54162618", "title": "How do I construct a public key from a modulus and exponent given as a hex-encoded string?", "body": "<p>First of all, I don't recommend passing a <code>String</code>, rather a <code>&amp;str</code> reference, because the former would move the string into the function, which is not necessary in this case.\nWith this, you do not need to clone the string anymore, simply because your two variables are <code>&amp;'static str</code> to begin with.</p>\n\n<p>The <code>hex_to_bytes</code> function could be built like this:</p>\n\n<pre><code>fn hex_to_bytes(hex: &amp;str) -&gt; Vec&lt;u8&gt; {\n    hex.as_bytes()\n        .chunks(2)\n        .filter_map(|b| std::str::from_utf8(b).ok())\n        .filter_map(|s| u8::from_str_radix(s, 16).ok())\n        .collect()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a735645f5ff0a2d5ec0c166f7824fb29\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>It iterates on pair of bytes in the string, converts each pair to a &amp;str which is then converted into an u8.</p>\n\n<p>Invalid conversions are simply discarded.</p>\n\n<p>It can be called like this:</p>\n\n<pre><code>let modnum = BigNum::from_slice(hex_to_bytes(publickey_mod).as_slice())?;\nlet expnum = BigNum::from_slice(hex_to_bytes(publickey_exp).as_slice())?;\n</code></pre>\n\n<p>Finally, assuming you are using the openssl crate, there is an even simpler solution, using <a href=\"https://docs.rs/openssl/0.9.11/openssl/bn/struct.BigNum.html#method.from_hex_str\" rel=\"nofollow noreferrer\">openssl::bn::from_hex_str</a>:</p>\n\n<pre><code>let modnum = BigNum::from_hex_str(publickey_mod)?;\nlet expnum = BigNum::from_hex_str(publickey_exp)?;\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 9638077, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "uninvited", "link": "https://stackoverflow.com/users/9638077/uninvited"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 54162618, "answer_count": 1, "score": 0, "last_activity_date": 1547414023, "creation_date": 1547315243, "last_edit_date": 1547414023, "question_id": 54162294, "link": "https://stackoverflow.com/questions/54162294/how-do-i-construct-a-public-key-from-a-modulus-and-exponent-given-as-a-hex-encod", "title": "How do I construct a public key from a modulus and exponent given as a hex-encoded string?", "body": "<p>I am trying to encrypt a password with the following modulus:</p>\n\n<pre><code>cc7e2fe78c235b7eff9beb63696dbbf565b04b26902d7b1133813821e614da7b0a694a17a564192de3389adc1ab705642f966a120ef74ace060f8eeb53a91d1bbc98a3ed9f53f5a40d3cc814da56ad5ba8581b7e96b6827bf323706d1836985ac9783d6dcd5c7291a4f84ca9f04a0194fab8bde7b97d15153eb3f5034eb12ef7e2e696beb7d2570e42f3bf5494622f05c0499c47eb8c23f324eac763a924e6ad540906788d571cc6b2536d2e039cf280e6e21616bf26b82e79b28079127a9f92cf04dc9d18f418c637039be6ee4ba9fdee3cbaf3381cce5409277aa18821e61a9ef14c21028f31ae7b2eadd7be4e298d37a47acc0b7c8af3c48ec7aeca8b6111\n</code></pre>\n\n<p>And the exponent:</p>\n\n<pre><code>010001\n</code></pre>\n\n<p>I have to convert them somehow into an array of bytes, I am very new to this so I haven't had much success as far.</p>\n\n<p>I have tried using <code>hex::decode()</code> to no avail.</p>\n\n<pre><code>let publickey_mod = \"cc7e2fe78c235b7eff9beb63696dbbf565b04b26902d7b1133813821e614da7b0a694a17a564192de3389adc1ab705642f966a120ef74ace060f8eeb53a91d1bbc98a3ed9f53f5a40d3cc814da56ad5ba8581b7e96b6827bf323706d1836985ac9783d6dcd5c7291a4f84ca9f04a0194fab8bde7b97d15153eb3f5034eb12ef7e2e696beb7d2570e42f3bf5494622f05c0499c47eb8c23f324eac763a924e6ad540906788d571cc6b2536d2e039cf280e6e21616bf26b82e79b28079127a9f92cf04dc9d18f418c637039be6ee4ba9fdee3cbaf3381cce5409277aa18821e61a9ef14c21028f31ae7b2eadd7be4e298d37a47acc0b7c8af3c48ec7aeca8b6111\";\nlet publickey_exp = \"010001\"; \nlet pass = \"TestPass120\";\nlet modnum = BigNum::from_slice(hex_to_bytes(publickey_mod.clone()).as_slice())?;\nlet expnum = BigNum::from_slice(hex_to_bytes(publickey_exp.clone()).as_slice())?;\nlet key = Rsa::from_public_components(modnum, expnum)?;\nlet mut encrypted = vec![0; key.size() as usize];\nkey.public_encrypt(pass.as_bytes(), &amp;mut encrypted, openssl::rsa::Padding::PKCS1)?;\nlet encoded = base64::encode(&amp;encrypted);\n\nfn hex_to_bytes(hex: String) -&gt; Vec&lt;u8&gt; {\n    // some code that translates hex string to bytes and returns it\n}\n</code></pre>\n\n<p>The expected results would be a <code>Vec&lt;u8&gt;</code> with bytes that I can supply to <code>BigNum::from_slice</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 1, "creation_date": 1547310949, "post_id": 54161565, "comment_id": 95152956, "body": "I guess you are looking for singletons. If so, you can use lazy_static crate. Take a look at <a href=\"https://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\" title=\"how do i create a global mutable singleton\">stackoverflow.com/questions/27791532/&hellip;</a>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1547314558, "post_id": 54161565, "comment_id": 95154112, "body": "The proposed duplicate target also works for immutable global singletons."}, {"owner": {"reputation": 495, "user_id": 4253785, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7RjG.jpg?s=128&g=1", "display_name": "Cl&#233;ment Joly", "link": "https://stackoverflow.com/users/4253785/cl%c3%a9ment-joly"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1547315413, "post_id": 54161565, "comment_id": 95154391, "body": "That&#39;s right @E_net4. I was just wondering if the Non-answer answer applied."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1547315904, "post_id": 54161565, "comment_id": 95154532, "body": "Both the <b>non-answer answer</b> and the <b><code>lazy_static</code></b> sections apply. Being built only once and frozen afterwards makes things even easier, since you won&#39;t need to wrap it around an exclusive lock."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1547318339, "post_id": 54161565, "comment_id": 95155289, "body": "<i>It might be interesting to keep this question around since I didn\u2019t searched with the keyword singleton and I may not be alone to miss this way to consider the problem.</i> -- This is exactly why duplicates exist! Questions marked as duplicates are not deleted, only closed to new answers."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1547318721, "post_id": 54161565, "comment_id": 95155423, "body": "I notice that <code>Currency</code> only needs <code>lazy_static</code> because it contains a <code>Vec</code>, but if the contents of the <code>Vec</code> are known at compile time and never changed, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d70485d4addb03ddde9c392b46c219af\" rel=\"nofollow noreferrer\">you could just use <code>&amp;&#39;static [&amp;&#39;static str]</code> instead</a>. This works with either a <code>const</code> or a <code>static</code>."}, {"owner": {"reputation": 495, "user_id": 4253785, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7RjG.jpg?s=128&g=1", "display_name": "Cl&#233;ment Joly", "link": "https://stackoverflow.com/users/4253785/cl%c3%a9ment-joly"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547320877, "post_id": 54161565, "comment_id": 95155956, "body": "@trentcl Thanks for the idea with &amp;&#39;static [&amp;&#39;static str]. Am I supposed to do something to mark the question as duplicated?"}, {"owner": {"reputation": 495, "user_id": 4253785, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7RjG.jpg?s=128&g=1", "display_name": "Cl&#233;ment Joly", "link": "https://stackoverflow.com/users/4253785/cl%c3%a9ment-joly"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1547321023, "post_id": 54161565, "comment_id": 95155995, "body": "@E_net4wisheshappyholidays Would you say this global state is to be avoided too, as the <b>non-answer</b> section?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547321544, "post_id": 54161565, "comment_id": 95156133, "body": "There should be a link you can click to agree to the duplicate, but I don&#39;t know which it is for you, maybe &quot;close&quot;?"}, {"owner": {"reputation": 495, "user_id": 4253785, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7RjG.jpg?s=128&g=1", "display_name": "Cl&#233;ment Joly", "link": "https://stackoverflow.com/users/4253785/cl%c3%a9ment-joly"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547322151, "post_id": 54161565, "comment_id": 95156293, "body": "@trentcl I first clicked to edit my question, to explain how it was different from the duplicate, so now, I\u2019m stuck. By the way, why didn\u2019t you put the solution with &amp;&#39;static [\u2026] as an answer?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547381132, "post_id": 54161565, "comment_id": 95166310, "body": "Because wanting to put a <code>Vec</code> in a global static is a valid thing to do, even if it would be rare, so &quot;just don&#39;t use <code>Vec</code>&quot; would have been another non-answer :)"}, {"owner": {"reputation": 495, "user_id": 4253785, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7RjG.jpg?s=128&g=1", "display_name": "Cl&#233;ment Joly", "link": "https://stackoverflow.com/users/4253785/cl%c3%a9ment-joly"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547396255, "post_id": 54161565, "comment_id": 95170411, "body": "@trentcl I undestand ;-)"}], "answers": [{"tags": [], "owner": {"reputation": 495, "user_id": 4253785, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7RjG.jpg?s=128&g=1", "display_name": "Cl&#233;ment Joly", "link": "https://stackoverflow.com/users/4253785/cl%c3%a9ment-joly"}, "is_accepted": false, "score": 3, "last_activity_date": 1547313128, "creation_date": 1547313128, "answer_id": 54161967, "question_id": 54161565, "link": "https://stackoverflow.com/questions/54161565/store-immutable-instances-of-rust-struct-but-where/54161967#54161967", "title": "Store immutable instances of Rust struct, but where?", "body": "<p>As pointed out in the comments, the <code>lazy_static</code> crate works well.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Currency {\n    name: &amp;'static str,\n    iso_symbols: Vec&lt;&amp;'static str&gt;,\n}\n\nlazy_static! {\n    pub static ref BTC: Currency = Currency {\n        name: \"Bitcoin\",\n        iso_symbols: vec![\"BTC\", \"XBT\"]\n    };\n}\n\nfn main() {\n    println!(\"{} {:?}\", BTC.name, BTC.iso_symbols);\n}\n</code></pre>\n\n<p>We have this global (with <code>pub</code>) variable BTC I was looking for.</p>\n"}], "owner": {"reputation": 495, "user_id": 4253785, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7RjG.jpg?s=128&g=1", "display_name": "Cl&#233;ment Joly", "link": "https://stackoverflow.com/users/4253785/cl%c3%a9ment-joly"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "closed_date": 1547394800, "answer_count": 1, "score": 1, "last_activity_date": 1547394839, "creation_date": 1547310560, "last_edit_date": 1547312878, "question_id": 54161565, "link": "https://stackoverflow.com/questions/54161565/store-immutable-instances-of-rust-struct-but-where", "closed_reason": "Duplicate", "title": "Store immutable instances of Rust struct, but where?", "body": "<p>Sometimes, it\u2019s handy to have a few instances of a <code>struct</code> stored and accessible everywhere.</p>\n\n<p>For instance, if I want to store some meta-data about a currency in a struct like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Currency {\n    name: &amp;'static str,\n    iso_symbols: Vec&lt;&amp;'static str&gt;\n}\n</code></pre>\n\n<p>I would then create an instance of <code>Currency</code> for every major currency. As these property don\u2019t change, it could be hard-coded, at least for some currencies.</p>\n\n<p>I tried to use <code>const</code>, which would work without a Vec (the <code>vec!</code> macro does an allocation, which is not allowed in <code>const</code>).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const BTC: Currency = Currency {\n    name: \"Bitcoin\",\n    iso_symbols: vec![\"BTC\", \"XBT\"]\n};\n</code></pre>\n\n<p>So what workaround would you suggest to store a bunch of instance of <code>Currency</code> (for EUR, USD, BTC\u2026)?</p>\n\n<p>Here, in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d87c5a184b095499b3ff174ee0538b86\" rel=\"nofollow noreferrer\">Rust Playground</a>.</p>\n\n<hr>\n\n<p>EDIT: My question is quite similar to <a href=\"https://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\">this one</a>. The only difference is that I don\u2019t need a mutable singleton, so the \u201cNon-answer answer\u201d doesn\u2019t apply, right? The <code>lazy_static</code> idea is great though!</p>\n\n<p>It might be interesting to keep this question around since I didn\u2019t searched with the keyword <code>singleton</code> and I may not be alone to miss this way to consider the problem.</p>\n"}, {"tags": ["generics", "rust", "associated-types"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 6, "creation_date": 1547310425, "post_id": 54161441, "comment_id": 95152783, "body": "For the record, the name currently used for associated type constructors in Rust is generic associated types (GATs). Tracking issue <a href=\"https://github.com/rust-lang/rust/issues/44265\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 2, "creation_date": 1547349360, "post_id": 54161441, "comment_id": 95161235, "body": "Did you mean to have <code>self</code> parameters on those methods?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547432447, "post_id": 54161441, "comment_id": 95178986, "body": "I think that <a href=\"https://crates.io/crates/petgraph\" rel=\"nofollow noreferrer\">petgraph</a> already does what you are trying to do."}, {"owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547479694, "post_id": 54161441, "comment_id": 95197182, "body": "@Shepmaster Yes I did see it, however, petgraph is not as generic as I want, moreover what I&#39;m trying to do is a proof of concept for a school project."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547438364, "post_id": 54165795, "comment_id": 95179919, "body": "Another way to iterate over references with different iterator types without GATs is to box it up and use dynamic dispatch: <code>-&gt; Box&lt;dyn Iterator&lt;Item = &amp;&#39;_ V&gt; + &#39;_&gt;</code>"}, {"owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "edited": false, "score": 0, "creation_date": 1547480058, "post_id": 54165795, "comment_id": 95197385, "body": "@Anders Kaseorg That&#39;s the point I&#39;m getting at, if I don&#39;t want any clone in my code, I would need to declare a lifetime parameter to Nodes, however, the compiler will complain about a lifetime not in scope as described in the blogpost I linked in my premise."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 5, "last_activity_date": 1547436365, "last_edit_date": 1547436365, "creation_date": 1547349047, "answer_id": 54165795, "question_id": 54161441, "link": "https://stackoverflow.com/questions/54161441/is-there-any-way-to-simulate-generic-associated-types-associated-type-construc/54165795#54165795", "title": "Is there any way to simulate Generic Associated Types / Associated Type Constructors in Rust?", "body": "\n\n<p>The problem you\u2019ve described is solved with plain <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#specifying-placeholder-types-in-trait-definitions-with-associated-types\" rel=\"nofollow noreferrer\">associated types</a>.  It does not require <a href=\"https://github.com/rust-lang/rust/issues/44265\" rel=\"nofollow noreferrer\">generic associated types</a>, a.k.a. associated type constructors.  This already works in stable Rust.</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>trait GraphData&lt;V&gt; {\n    type Nodes: Iterator&lt;Item = V&gt;;\n    fn has_edge(&amp;self, v: &amp;V, u: &amp;V) -&gt; bool;\n    fn nodes(&amp;self) -&gt; Self::Nodes;\n}\n\nstruct Graph&lt;V&gt; {\n    nodes: Vec&lt;V&gt;,\n    edges: Vec&lt;(V, V)&gt;,\n}\n\nimpl&lt;V: Clone + Eq&gt; GraphData&lt;V&gt; for Graph&lt;V&gt; {\n    type Nodes = vec::IntoIter&lt;V&gt;;\n    fn has_edge(&amp;self, u: &amp;V, v: &amp;V) -&gt; bool {\n        self.edges.iter().any(|(u1, v1)| u == u1 &amp;&amp; v == v1)\n    }\n    fn nodes(&amp;self) -&gt; Self::Nodes {\n        self.nodes.clone().into_iter()\n    }\n}\n</code></pre>\n\n<p><code>Nodes</code> has no type or lifetime parameters (it\u2019s not <code>Nodes&lt;T&gt;</code> or <code>Nodes&lt;'a&gt;</code>), so it\u2019s not generic.</p>\n\n<p>If you wanted the <code>Nodes</code> type to be able hold a reference to <code>Self</code> (to avoid the <code>clone()</code>), <em>then</em> <code>Nodes</code> would need to be generic with a lifetime parameter.  That\u2019s not the only way to avoid the <code>clone()</code>, though: you could use <code>Rc</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1549486514, "last_edit_date": 1549486514, "creation_date": 1549485892, "answer_id": 54562277, "question_id": 54161441, "link": "https://stackoverflow.com/questions/54161441/is-there-any-way-to-simulate-generic-associated-types-associated-type-construc/54562277#54562277", "title": "Is there any way to simulate Generic Associated Types / Associated Type Constructors in Rust?", "body": "<p>As <a href=\"https://stackoverflow.com/a/54165795/2408867\">the answer by Anders Kaseorg</a> already explains: you might not need GATs here, if you can live with cloning your <code>Vec</code> containing the vertices. However, that's probably not what you want. Instead, you usually want to have an iterator that references the original data. </p>\n\n<p>To achieve that, you in fact ideally want to use GATs. But since they are not part of the language yet, let's tackle your main question: <strong>Is there any way to simulate Generic Associated Types?</strong> I actually wrote a very extensive blog post about this topic: <a href=\"http://lukaskalbertodt.github.io/2018/08/03/solving-the-generalized-streaming-iterator-problem-without-gats.html\" rel=\"nofollow noreferrer\"><strong>\u201cSolving the Generalized Streaming Iterator Problem without GATs\u201d</strong></a>. </p>\n\n<p>Summarizing the article:</p>\n\n<ul>\n<li><p>The easiest way for you is to box the iterator and return it as trait object:</p>\n\n<pre><code>fn nodes(&amp;self) -&gt; Box&lt;dyn Iterator&lt;&amp;'_ V&gt; + '_&gt;\n</code></pre>\n\n<p>As you said, you don't want that, so that's out.</p></li>\n<li><p>You can add a lifetime parameter to your trait and use that lifetime in your associated type and the <code>&amp;self</code> receiver: </p>\n\n<pre><code>trait GraphData&lt;'s, V: 's&gt; {\n    type NodesIter: Iterator&lt;Item = &amp;'s V&gt;;\n    fn nodes(&amp;'s self) -&gt; Self::NodesIter;\n}\n\nstruct MyGraph&lt;V&gt; {\n    nodes: Vec&lt;V&gt;,\n}\n\nimpl&lt;'s, V: 's&gt; GraphData&lt;'s, V&gt; for MyGraph&lt;V&gt; {\n    type NodesIter = std::slice::Iter&lt;'s, V&gt;;\n    fn nodes(&amp;'s self) -&gt; Self::NodesIter {\n        self.nodes.iter()\n    }\n}\n</code></pre>\n\n<p>This works! However, now you have an annoying lifetime parameter in your trait. That might be fine (apart from annoyance) in your case, but it can actually be a critical problem in some situations, so this might or might not work for you.</p></li>\n<li><p>You can push the lifetime parameter a level deeper by having a helper trait which works as type level function from lifetime to type. This makes the situation a little less annoying, because the lifetime parameter is not in your main trait anymore, but it suffers from the same limitation as the prior workaround. </p></li>\n<li><p>You can also go a completely different path and write an iterator wrapper that contains a reference to your graph. </p>\n\n<p>This is just a rough sketch, but the basic idea works: your actual inner iterator doesn't contain any reference to the graph (so its type does not need the <code>self</code> lifetime). The graph reference is instead stored in a specific type <code>Wrap</code> and passed to the inner iterator for each <code>next</code> call.</p>\n\n<p>Like this:</p>\n\n<pre><code>trait InnerNodesIter { /* ... */ }\n\nstruct Wrap&lt;'graph, G: GraphData, I: InnerNodesIter&gt; {\n    graph: &amp;'graph G,\n    iter: I,\n}\n\ntype NodesIterInner: InnerNodesIter;\nfn nodes(&amp;self) -&gt; Wrap&lt;'_, Self, Self::NodesIterInner&gt;;\n</code></pre>\n\n<p>Then you can implement <code>Iterator</code> for <code>Wrap</code>. You just need some interface to the inner iterator, which you can pass the reference to the graph. Something like <code>fn next(&amp;mut self, graph: &amp;Graph) -&gt; Option&lt;...&gt;</code>. You need to define the interface in <code>InnerNodesIter</code>.</p>\n\n<p>This of course suffers from being very verbose. And it also might be a bit slower, depending on how your iterator works.</p></li>\n</ul>\n\n<p>The short and sad summary is: <strong>there is no satisfying workaround that works in every situation.</strong> </p>\n\n<hr>\n\n<p>My opinion in this case: I work on a project where this exact situation occurred multiple times. In my case, I just used the <code>Box</code> solution as it's very easy and works fine. The only downside is speed (allocation and dynamic dispatch), but the allocation doesn't happen in a tight loop (except if you have a large number of graphs, each with only very few nodes -- unlikely) and the optimizer is probably capable of devirtualizing the dynamic calls in most cases (after all, the real type information is only one function boundary away).</p>\n"}], "owner": {"reputation": 312, "user_id": 4698744, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/312aff37c23ffb8d89050337b8c6f4fb?s=128&d=identicon&r=PG&f=1", "display_name": "LVB", "link": "https://stackoverflow.com/users/4698744/lvb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1213, "favorite_count": 0, "accepted_answer_id": 54562277, "answer_count": 2, "score": 3, "last_activity_date": 1549486514, "creation_date": 1547309835, "last_edit_date": 1549486196, "question_id": 54161441, "link": "https://stackoverflow.com/questions/54161441/is-there-any-way-to-simulate-generic-associated-types-associated-type-construc", "title": "Is there any way to simulate Generic Associated Types / Associated Type Constructors in Rust?", "body": "<p>I'm making a graph processing module in Rust. The core of the module models the idea of having multiple containers which hold the data in the graph. For example, I may have a graph whose inner structure is an <code>HashMap</code> or maybe <code>AdjacencyMatrix</code> etc. </p>\n\n<p>These containers must implement a trait:</p>\n\n<pre><code>trait GraphData&lt;V&gt; {\n    fn has_edge(&amp;self, v: &amp;V, u: &amp;V) -&gt; bool;\n    fn nodes(&amp;self) -&gt; Iterator&lt;V&gt;; // Here's the problem...\n}\n</code></pre>\n\n<p>I can't just return a trait in my trait definition. I know I must use trait object, but I don't want to <code>Box</code> it. I would like to make the container provide its own <code>NodeIter</code> struct. However, I would be stuck with the same problem explained in <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/11/02/associated-type-constructors-part-1-basic-concepts-and-introduction/\" rel=\"nofollow noreferrer\">Associated type constructors, part 1: basic concepts and introduction</a>. The post explains about associated type constructors (ATC) which do not exist in Rust now.  My <code>GraphData</code> resembles the generic <code>Collection</code> described.</p>\n\n<p>Is there any workaround I could use to \"simulate\" ATC or any pattern specific to Rust I could use for this situation?</p>\n\n<p>I don't want to depend on dynamic dispatch and resort to using <code>Box</code> or the <code>dyn</code> keyword.</p>\n\n<p>I thought to define a struct <code>NodeIter</code> for each type of graph container\nI created in my module and add \"nodes\" inside the implementation of the container itself. However, I find this to be poor code reuse.</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1547304622, "post_id": 54160140, "comment_id": 95151238, "body": "To apply the duplicate here: use either <code>where T: for&lt;&#39;a&gt; AddAssign&lt;&amp;&#39;a T&gt;</code> or <code>where Wrapper&lt;T&gt;: for&lt;&#39;a&gt; AddAssign&lt;&amp;&#39;a Wrapper&lt;T&gt;&gt;</code> (what I would write). <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e37a241f43aaa5b9f3b7c75f39015a34\" rel=\"nofollow noreferrer\">Example</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547304746, "post_id": 54160140, "comment_id": 95151278, "body": "<a href=\"https://stackoverflow.com/q/53485574/3650362\">Borrowed value does not live long enough when iterating over a generic value with a lifetime on the function body</a> has the same error for the same reason. <a href=\"https://stackoverflow.com/q/35592750/3650362\">How does for&lt;&gt; syntax differ from a regular lifetime bound?</a> is another related question."}, {"owner": {"reputation": 131, "user_id": 10904648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/832056b60ddff9ebdf6581a9540e2274?s=128&d=identicon&r=PG&f=1", "display_name": "colt_browning", "link": "https://stackoverflow.com/users/10904648/colt-browning"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547304804, "post_id": 54160140, "comment_id": 95151289, "body": "Oh my rusty god. Thanks!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1547305258, "post_id": 54160140, "comment_id": 95151383, "body": "You&#39;re welcome! You&#39;re not wrong that there are lots of similar questions, but HRTBs are a thing that don&#39;t make much sense until you find you need them, and hard to search for unless you already know what they are. Hopefully marking this question as a duplicate will help others find the same answers."}], "owner": {"reputation": 131, "user_id": 10904648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/832056b60ddff9ebdf6581a9540e2274?s=128&d=identicon&r=PG&f=1", "display_name": "colt_browning", "link": "https://stackoverflow.com/users/10904648/colt-browning"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 75, "favorite_count": 0, "closed_date": 1547304877, "answer_count": 0, "score": 3, "last_activity_date": 1547413898, "creation_date": 1547300521, "question_id": 54160140, "link": "https://stackoverflow.com/questions/54160140/borrowed-value-does-not-live-long-enough-but-why-do-we-need-it-to-live-so-lon", "closed_reason": "Duplicate", "title": "&quot;borrowed value does not live long enough&quot;, but why do we need it to live so long?", "body": "<p>There are lots of similar questions, but I couldn't find the answer to my exact question.</p>\n\n<p>In my Rust code, I have a generic type and want to implement a method that takes a reference to another instance of the that type, and then another method that consumes its argument but does exactly the same thing as the first one:</p>\n\n<pre><code>#[derive(Debug, PartialEq, Clone)]\npub struct Wrapper&lt;T&gt; {\n    v: T,\n}\n\nimpl&lt;T&gt; Wrapper&lt;T&gt; {\n    pub fn f_ref(&amp;self, _other: &amp;Wrapper&lt;T&gt;) { /* ... */ }\n    pub fn f_consume(&amp;self, other: Wrapper&lt;T&gt;) {\n        self.f_ref(&amp;other)\n    }\n}\n</code></pre>\n\n<p>It compiles just fine.</p>\n\n<p>Now I want to do basically the same, but while implementing a trait. First, the function that takes a reference:</p>\n\n<pre><code>use std::ops::AddAssign;\n\nimpl&lt;'a, T&gt; AddAssign&lt;&amp;'a Wrapper&lt;T&gt;&gt; for Wrapper&lt;T&gt; where T: AddAssign&lt;&amp;'a T&gt; {\n    fn add_assign(&amp;mut self, other: &amp;'a Wrapper&lt;T&gt;) {\n        self.v += &amp;other.v;\n    }\n}\n\n#[test]\nfn test() {\n    let mut a = Wrapper { v: 1_i32 };\n    let b = Wrapper { v: 2 };\n    a += &amp;b;\n    drop(b);\n    assert_eq!(a, Wrapper { v: 3 });\n}\n</code></pre>\n\n<p>It works, too.</p>\n\n<p>Now I want to implement <code>AddAssign</code> for <code>Wrapper&lt;T&gt;</code> based on the implementation of <code>AddAssign&lt;&amp;Wrapper&lt;T&gt;&gt;</code> that I already have. I understand that if <code>T</code> has references in it, it will cause trouble, so I <strong>make sure it has <code>'static</code> lifetime</strong>. I'm OK with it: in my program, I expect <code>T</code> to be something like an owned matrix of numbers wrapped in some custom struct.</p>\n\n<pre><code>impl&lt;'a, T&gt; AddAssign for Wrapper&lt;T&gt; where T: 'static + AddAssign&lt;&amp;'a T&gt;, Wrapper&lt;T&gt;: 'static {\n    fn add_assign(&amp;mut self, other: Wrapper&lt;T&gt;) {\n        *self += &amp;other;\n    }\n}\n</code></pre>\n\n<p>And it fails. The compiler says that <code>other</code> must stay valid after we used a reference to it to in a <code>+=</code> expression. But when we used such a reference in the <code>test()</code> function above and dropped <code>b</code> there (which played the role of <code>other</code> here) and used the result later, the compiler agreed it's OK. Why?</p>\n\n<p>I suspect that I need to specify some additional trait bounds for <code>T</code> or <code>Wrapper&lt;T&gt;</code> but don't understand what these bound should be.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a9a8ecfa68f39543822b9e84d0df0a2e\" rel=\"nofollow noreferrer\">Code in playground.</a></p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1547299570, "post_id": 54159970, "comment_id": 95150078, "body": "Note that it does work with edition 2018, because non-linear lifetimes are enabled."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547299611, "post_id": 54159970, "comment_id": 95150088, "body": "Your code <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=30026ae288696da58657408804bebddd\" rel=\"nofollow noreferrer\">compiles</a> fine with the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md\" rel=\"nofollow noreferrer\">Non-lexical lifetimes</a> feature, you may consider to upgrade rust version."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1547306958, "post_id": 54159970, "comment_id": 95151801, "body": "This was a limitation of a borrow checker before the Rust 2018. If you really limited with the old Rust version you can by-pass the issue with scoping the if-else blocks(get block inside to curly brackets) explicitly."}, {"owner": {"reputation": 4662, "user_id": 2004857, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/pQqNS.jpg?s=128&g=1", "display_name": "Vituel", "link": "https://stackoverflow.com/users/2004857/vituel"}, "edited": false, "score": 0, "creation_date": 1547315561, "post_id": 54159970, "comment_id": 95154435, "body": "I&#39;m on <code>rustc 1.31.1 (b6c32da9b 2018-12-18)</code> and it doesn&#39;t compile. It does compile if I switch to nightly and add <code>#![feature(nll)]</code>. Is that what you mean?"}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "edited": false, "score": 1, "creation_date": 1547352511, "post_id": 54159970, "comment_id": 95161604, "body": "To use Rust 2018, you need to be in a Cargo project <a href=\"https://rust-lang-nursery.github.io/edition-guide/print.html#creating-a-new-project\" rel=\"nofollow noreferrer\">configured for Rust 2018</a>, or use <code>rustc --edition=2018</code> if you\u2019re not in a Cargo project."}, {"owner": {"reputation": 4662, "user_id": 2004857, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/pQqNS.jpg?s=128&g=1", "display_name": "Vituel", "link": "https://stackoverflow.com/users/2004857/vituel"}, "edited": false, "score": 0, "creation_date": 1547399583, "post_id": 54159970, "comment_id": 95171394, "body": "Yes, it works now after enabling Rust 2018!"}], "owner": {"reputation": 4662, "user_id": 2004857, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/pQqNS.jpg?s=128&g=1", "display_name": "Vituel", "link": "https://stackoverflow.com/users/2004857/vituel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1547406400, "answer_count": 0, "score": 1, "last_activity_date": 1547299114, "creation_date": 1547299114, "question_id": 54159970, "link": "https://stackoverflow.com/questions/54159970/cant-mutably-borrow-in-else-block-of-if-let-statement", "closed_reason": "Duplicate", "title": "Can&#39;t mutably borrow in else block of if-let statement", "body": "<p>Why is mutable borrowing not allowed in both the assignment and the else block of an if-let statement in Rust?</p>\n\n<pre><code>struct Parent {\n    a: Option&lt;()&gt;,\n    b: (),\n}\nimpl Parent {\n    fn mutate(&amp;mut self) {}\n}\n\nfn main() {\n    let mut parent = Parent { a: Some(()), b: () };\n\n    if let Some(value) = &amp;mut parent.a {\n        //some mutation on value\n    } else {\n        parent.mutate(); //error: cannot borrow `parent` as mutable more than once at a time\n    }\n}\n</code></pre>\n\n<p>Replacing if-else with the equivalent code below compiles but is not as nice.</p>\n\n<pre><code>if let Some(value) = &amp;mut parent.a {\n    //some mutation on value\n}\nif let None = &amp;mut parent.a { //or parent.a.is_none()\n    parent.mutate();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1547295243, "post_id": 54159232, "comment_id": 95149024, "body": "I don&#39;t know why you think that <code>&amp;str</code> as the error type is good design. Have you read <a href=\"https://doc.rust-lang.org/stable/book/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">the relevant section of the book</a>? See also the <a href=\"https://rust-lang-nursery.github.io/api-guidelines/interoperability.html#c-good-err\" rel=\"nofollow noreferrer\">C-GOOD-ERR</a> API guideline. The third question might be too subjective. (even when disregarding the syntax error on that 2nd line of code)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547296186, "post_id": 54159232, "comment_id": 95149261, "body": "What do you want, to understand the differences between these things? Or just for someone to tell you it&#39;s OK to use <code>Result&lt;_, &amp;&#39;static str&gt;</code> everywhere? Error handling can be a book in itself (not just in Rust). I don&#39;t think this question is constructively answerable."}, {"owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 0, "creation_date": 1547297367, "post_id": 54159232, "comment_id": 95149538, "body": "I think I got my answer already. That there is no clear answer here. And I am already mostly aware of the tradeoffs between the two methods. Sync error was intentional pseudocode. Will update the question to make that clear"}], "answers": [{"tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 4, "last_activity_date": 1547298681, "last_edit_date": 1547298681, "creation_date": 1547297878, "answer_id": 54159800, "question_id": 54159232, "link": "https://stackoverflow.com/questions/54159232/best-practice-to-return-a-result-impl-error-and-not-a-result-str-in-rus/54159800#54159800", "title": "Best practice to return a Result&lt;_, impl Error&gt; and not a Result&lt;_, &amp;str&gt; in Rust?", "body": "<p>For simple use-cases, a opaque error type like <code>Result&lt;u32, &amp;'static str&gt;</code> or <code>Result&lt;u32, String&gt;</code> is enough but for more complex libraries, it is useful and even encouraged to create your own error type like a <code>struct MyError</code> or <code>enum AnotherLibError</code>, which helps you to define better your intentions. You may also want to read the <a href=\"https://doc.rust-lang.org/rust-by-example/error.html\" rel=\"nofollow noreferrer\"><code>Error Handling</code></a> chapter of the <code>Rust by Example</code> book.</p>\n\n<p>The <code>Error</code> trait, as being part of <code>std</code>, helps developers in a generic and centralized manner to define their own error types to describe what happened and the possible root causes (backtrace). It is currently somewhat limited but there are plans to help to <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2504-fix-error.md\" rel=\"nofollow noreferrer\">improve its usability</a>.</p>\n\n<p>When you use <code>impl Error</code>, you are telling the compiler that you don't care about the type being returned, as long it implements the <code>Error</code> trait. This approach is useful when the error type is too complex or when you want to generalize over the return type. E.g.:</p>\n\n<pre><code>fn example() -&gt; Result&lt;Duration, impl Error&gt; {\n    let sys_time = SystemTime::now();\n    sleep(Duration::from_secs(1));\n    let new_sys_time = SystemTime::now();\n    sys_time.duration_since(new_sys_time)\n}\n</code></pre>\n\n<p>The method <code>duration_since</code> returns a <code>Result&lt;Duration, SystemTimeError&gt;</code> type but in the above method signature, you can see that for the <a href=\"https://doc.rust-lang.org/beta/core/result/enum.Result.html#variant.Err\" rel=\"nofollow noreferrer\"><code>Err</code></a> part of the Result, it is returning anything that implements the <code>Error</code> trait. </p>\n\n<p>Summarizing everything, if you read the Rust book and know what you are doing, you can choose the approach that best fits your needs. Otherwise, it is best to define your own types for your errors or use some third-party utilities like the <code>error-chain</code> or <code>failure</code> crates.</p>\n"}, {"tags": [], "owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "is_accepted": false, "score": 7, "last_activity_date": 1577230315, "last_edit_date": 1577230315, "creation_date": 1547319608, "answer_id": 54162899, "question_id": 54159232, "link": "https://stackoverflow.com/questions/54159232/best-practice-to-return-a-result-impl-error-and-not-a-result-str-in-rus/54162899#54162899", "title": "Best practice to return a Result&lt;_, impl Error&gt; and not a Result&lt;_, &amp;str&gt; in Rust?", "body": "<p>In short: No, it's not okay. String as error throws away information about details and cause, making errors useless for callers as they won't be able to inspect and possibly recover from it.</p>\n\n<p>In case you just need to fill Error parameter with something, create a unit struct. It's not much useful, but it's also not as volative as string. And you can easily distinguish <code>foo::SomeError</code> from <code>bar::SomeError</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\npub struct SomeError; // No fields.\n</code></pre>\n\n<p>In case you can enumerate error variants, use <code>enum</code>.\nIt is also sometimes useful to \"include\" other errors into it.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\npub enum PasswordError {\n    Empty,\n    ToShort,\n    NoDigits,\n    NoLetters,\n    NoSpecials\n}\n\n#[derive(Debug)]\npub enum ConfigLoadError {\n   InvalidValues,\n   DeserializationError(serde::de::Error),\n   IoError(std::io::Error),\n}\n</code></pre>\n\n<p>Nobody stops you from using <code>struct</code>s.\nThey're particularly useful when you intentionaly want to hide some information from caller (In contrast to <code>enum</code>s whose variants always have public visibility). E.g. caller has nothing to do with error message, but can use <code>kind</code> to handle it:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum RegistrationErrorKind {\n    InvalidName { wrong_char_idx: usize },\n    NonUniqueName,\n    WeakPassword,\n    DatabaseError(db::Error),\n}\n\n#[derive(Debug)]\npub struct RegistrationError {\n    message: String, // Private field\n    pub kind: RegistrationErrorKind, // Public field\n}\n</code></pre>\n\n<p><strong>impl Error</strong> - existential type - makes no sense here. You can't return different error types with it in error place, if this was your intent. And opaque errors are not much useful, just like strings.</p>\n\n<p><code>std::error::Error</code> trait ensures that your <code>SomeError</code> type has implementation for <code>std::fmt::{Display, Debug}</code> (For displaying error to user and developer, correspondingly) and provides some useful methods like <code>source</code> (This returns the cause of this error); <code>is</code>, <code>downcast</code>, <code>downcast_ref</code>, <code>downcast_mut</code>. Last 4 are for error type erasure.</p>\n\n<p><strong>Error type erasure</strong></p>\n\n<p>Error type erasure has it's tradeoffs, but it's also worth mentioning.</p>\n\n<p>It's also especially useful when writing somewht high-level application code. But in case of libraries you should think twice before deciding to use this approach, because it will make your library unusable with 'no_std'.</p>\n\n<p>Say you have some function with non-trivial logic that can return values of some error types, not exactly one. In this case you can use (But don't abuse) error type erasure:</p>\n\n<pre><code>use std::error::Error;\nuse std::fmt;\nuse std::fs;\nuse std::io::Error as IoError;\nuse std::net::AddrParseError;\nuse std::net::Ipv4Addr\nuse std::path::Path;\n\n// Error for case where file contains '127.0.0.1'\n#[derive(Debug)]\npub struct AddressIsLocalhostError;\n\n// Display implementation is required for std::error::Error.\nimpl fmt::Display for AddressIsLocalhostError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Address is localhost\")\n    }\n}\n\nimpl Error for AddresIsLocalhostError {} // Defaults are okay here.\n\n// Now we have a function that takes a path and returns \n// non-localhost Ipv4Addr on success.\n// On fail it can return either of IoError, AddrParseError or AddressIsLocalhostError.\nfn non_localhost_ipv4_from_file(path: &amp;Path) -&gt; Result&lt;Ipv4Addr, Box&lt;dyn Error + 'static&gt;&gt; {\n    // Opening and reading file may cause IoError.\n    // ? operator will automatically convert it to Box&lt;dyn Error + 'static&gt;. \n    // (via From trait implementation)\n    // This way concrete type of error is \"erased\": we don't know what's\n    // in a box, in fact it's kind of black box now, but we still can call\n    // methods that Error trait provides.\n    let content = fs::read_to_string(path)?;\n\n    // Parsing Ipv4Addr from string [slice] \n    // may cause another error: AddressParseError.\n    // And ? will convert it to to the same type: Box&lt;dyn Error + 'static&gt;\n    let addr: Ipv4Addr = content.parse()?;\n\n    if addr == Ipv4Add::new(127, 0, 0, 1) {\n        // Here we perform manual conversion \n        // from AddressIsLocalhostError \n        // to Box&lt;dyn Error + 'static&gt; and return error.\n        return Err(AddressIsLocalhostError.into());\n    }\n\n    // Everyhing is okay, returning addr.\n    Ok(Ipv4Addr)\n}\n\n\nfn main() {\n    // Let's try to use our function.\n    let maybe_address = non_localhost_ipv4_from_file(\n        \"sure_it_contains_localhost.conf\"\n    );\n\n    // Let's see what kind of magic Error trait provides!\n    match maybe_address {\n        // Print address on success.\n        Ok(addr) =&gt; println!(\"File was containing address: {}\", addr),\n        Err(err) =&gt; {\n            // We sure can just print this error with.\n            // println!(\"{}\", err.as_ref());\n            // Because Error implementation implies Display implementation.\n            // But let's imagine we want to inspect error.\n\n            // Here deref coercion implicitly converts\n            // `&amp;Box&lt;dyn Error&gt;` to `&amp;dyn Error`.\n            // And downcast_ref tries to convert this &amp;dyn Error\n            // back to &amp;IoError, returning either\n            // Some(&amp;IoError) or none\n            if Some(err) = err.downcast_ref::&lt;IoError&gt;() {\n                println!(\"Unfortunately, IO error occured: {}\", err)\n            }\n\n            // There's also downcast_mut, which does the same, but gives us\n            // mutable reference.\n            if Some(mut err) = err.downcast_mut::&lt;AddressParseError&gt;() {\n                // Here we can mutate err. But we'll only print it.\n                println!(\n                    \"Unfortunately, what file was cantaining, \\\n                     was not in fact an ipv4 address: {}\",\n                    err\n                );\n            }\n\n            // Finally there's 'is' and 'downcast'.\n            // 'is' comapres \"erased\" type with some concrete type.\n            if err.is::&lt;AddressIsLocalhostError&gt;() {\n               // 'downcast' tries to convert Box&lt;dyn Error + 'static&gt;\n               // to box with value of some concrete type.\n               // Here - to Box&lt;AddressIsLocalhostError&gt;.\n               let err: Box&lt;AddressIsLocalhostError&gt; = \n                   Error::downcast(err).unwrap();\n            }\n        }\n    };\n}\n</code></pre>\n\n<p>To summarize: errors should (I'd say - must) provide useful information to caller, besides ability to just display them, thus they should not be strings. And errors must implement Error at least to preserve more-less consistent error handling experience across all crates. All the rest depends on situation.</p>\n\n<p>Caio alredy mentioned The Rust Book.</p>\n\n<p>But these links might be also useful:</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/any/index.html\" rel=\"nofollow noreferrer\">std::any module level API documentation</a></p>\n\n<p><a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\">std::error::Error API documentation</a></p>\n"}], "owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3257, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1577230315, "creation_date": 1547293250, "last_edit_date": 1547346200, "question_id": 54159232, "link": "https://stackoverflow.com/questions/54159232/best-practice-to-return-a-result-impl-error-and-not-a-result-str-in-rus", "title": "Best practice to return a Result&lt;_, impl Error&gt; and not a Result&lt;_, &amp;str&gt; in Rust?", "body": "<p>Is it ok practice to have this style <code>Result</code>? </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn a() -&gt; Result&lt;u32, &amp;'static str&gt;\n</code></pre>\n\n<p>And then what is the purpose of the Error trait? <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/error/trait.Error.html</a></p>\n\n<p>Is an impl Error Result better practice?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Error for MyError {..... }\nfn a() -&gt; Result&lt;u32, MyError&gt;\n</code></pre>\n"}, {"tags": ["c", "rust", "ffi"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1547264172, "post_id": 54156498, "comment_id": 95143754, "body": "<i>Surely this is possible, right?</i> -- I don&#39;t see why it should be; the notion of an object with methods doesn&#39;t really exist in the <code>&quot;C&quot;</code> ABI. I&#39;m kind of surprised you don&#39;t get an error just from putting <code>#[no_mangle]</code> on a method."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547264264, "post_id": 54156498, "comment_id": 95143766, "body": "(Note that <code>extern void print_hellow(MyStruct);</code> and <code>extern &quot;C&quot; fn print_hellow(&amp;self)</code> are at odds, anyway -- they don&#39;t accept the same type.)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1547276325, "post_id": 54156498, "comment_id": 95145201, "body": "I don&#39;t think that this is possible. You have to expose a function, similar like <code>fn print_hellow(*MyStruct)</code> and then you can &quot;map that&quot; to the member function of <code>MyStruct</code>."}, {"owner": {"reputation": 458, "user_id": 4533954, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/HJnaF.png?s=128&g=1", "display_name": "sam", "link": "https://stackoverflow.com/users/4533954/sam"}, "edited": false, "score": 0, "creation_date": 1547355728, "post_id": 54156498, "comment_id": 95162049, "body": "This has been my fall-back work around, but I&#39;ve been hoping for more. Thanks. If this truly is the best answer, make it as an answer and I&#39;ll give you credit."}], "answers": [{"comments": [{"owner": {"reputation": 458, "user_id": 4533954, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/HJnaF.png?s=128&g=1", "display_name": "sam", "link": "https://stackoverflow.com/users/4533954/sam"}, "edited": false, "score": 1, "creation_date": 1547438413, "post_id": 54172223, "comment_id": 95179927, "body": "I like the write-up too"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1547406308, "creation_date": 1547406308, "answer_id": 54172223, "question_id": 54156498, "link": "https://stackoverflow.com/questions/54156498/how-to-call-a-rust-structs-method-from-c-using-ffi/54172223#54172223", "title": "How to call a Rust struct&#39;s method from C using FFI?", "body": "<p>No, this is not possible. You will need to write shim functions for every method you wish to access:</p>\n\n<pre><code>#[no_mangle]\npub unsafe extern \"C\" fn my_struct_print_hellow(me: *const MyStruct) {\n    let me = &amp;*me;\n    me.print_hellow();\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://jakegoulding.com/rust-ffi-omnibus/objects/\" rel=\"noreferrer\">Using Rust objects from other languages</a> (disclaimer: I am the primary maintainer)</li>\n</ul>\n"}], "owner": {"reputation": 458, "user_id": 4533954, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/HJnaF.png?s=128&g=1", "display_name": "sam", "link": "https://stackoverflow.com/users/4533954/sam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 829, "favorite_count": 0, "accepted_answer_id": 54172223, "answer_count": 1, "score": 3, "last_activity_date": 1547406308, "creation_date": 1547263017, "last_edit_date": 1592644375, "question_id": 54156498, "link": "https://stackoverflow.com/questions/54156498/how-to-call-a-rust-structs-method-from-c-using-ffi", "title": "How to call a Rust struct&#39;s method from C using FFI?", "body": "<p>I am trying to call a public function (located inside a Rust struct's impl block) from a C program using the FFI. Calling regular <code>pub fn</code>s has not been too much trouble, but I am trying to call a <code>pub fn</code> from inside a <code>struct</code>'s <code>impl</code> block, and not finding the right syntax to expose/call it. Surely this is possible, right?</p>\n<h3>lib.rs</h3>\n<pre><code>#[repr(C)]\n#[derive(Debug)]\npub struct MyStruct {\n    var: i32,\n}\n\n#[no_mangle]\npub extern &quot;C&quot; fn new() -&gt; MyStruct {\n    MyStruct { var: 99 }\n}\n\n#[no_mangle]\nimpl MyStruct {\n    #[no_mangle]\n    pub extern &quot;C&quot; fn print_hellow(&amp;self) {\n        println!(&quot;{}&quot;, self.var);\n    }\n}\n</code></pre>\n<h3>main.c</h3>\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct MyStruct\n{\n    int var;\n} MyStruct;\nextern MyStruct new (void);\nextern void print_hellow(MyStruct);\n\nint main()\n{\n    MyStruct instance1;\n    MyStruct instance2 = new ();\n\n    printf(&quot;Instance1 var:%d\\n&quot;, instance1.var);\n    /// successfully prints the uninitialized 'var'\n    \n    printf(&quot;Instance2 var:%d\\n&quot;, instance2.var);\n    /// successfully prints the initialized 'var'\n    \n    print_hellow(instance1);\n    /// fails to link during compilation\n\n    return 0;\n}\n</code></pre>\n"}, {"tags": ["windows", "cmd", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547410053, "post_id": 54155214, "comment_id": 95174433, "body": "Do <b>not</b> edit your <i>question</i> to contain an <i>answer</i>. You are encouraged to post your own answer below instead."}], "answers": [{"comments": [{"owner": {"reputation": 452, "user_id": 2403531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a556f4f1e79ff8e4b939ea867264948?s=128&d=identicon&r=PG", "display_name": "user2403531", "link": "https://stackoverflow.com/users/2403531/user2403531"}, "edited": false, "score": 0, "creation_date": 1547251523, "post_id": 54155500, "comment_id": 95142143, "body": "Removing the <code>&quot;</code>&#39;s did fix its execution - but it removed the ability for it to work on directories with spaces in them. If C:\\Test\\Test1 becomes C:\\Test\\Test 1 then it fails to read the whole directory. And pasting the whole thing into a command prompt works with <code>&quot;</code>&#39;s and all.  As for why I don&#39;t call it directly, it errors with <code>thread &#39;main&#39; panicked at &#39;called </code>Result::unwrap()` on an <code>Err</code> value: Os { code: 2, kind: NotFound, message: &quot;The system cannot find the file specified.&quot; }&#39;, libcore\\result.rs:1009:5` if I use <code>let m = Command::new(commandStr).output().unwrap();</code> - so I don&#39;t."}, {"owner": {"reputation": 452, "user_id": 2403531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a556f4f1e79ff8e4b939ea867264948?s=128&d=identicon&r=PG", "display_name": "user2403531", "link": "https://stackoverflow.com/users/2403531/user2403531"}, "edited": false, "score": 0, "creation_date": 1547252595, "post_id": 54155500, "comment_id": 95142291, "body": "Additionally, I just understood you were implying calling <code>Command::new(&quot;robocopy&quot;).arg().arg().arg()...</code> and trying <i>that</i> without <code>&quot;</code>&#39;s did work!   I just can&#39;t call it all in one line, or with cmd.exe starting it! Thanks!"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 452, "user_id": 2403531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a556f4f1e79ff8e4b939ea867264948?s=128&d=identicon&r=PG", "display_name": "user2403531", "link": "https://stackoverflow.com/users/2403531/user2403531"}, "edited": false, "score": 0, "creation_date": 1547296390, "post_id": 54155500, "comment_id": 95149313, "body": "@user2403531: Glad it worked! The thing with pasting that command line is that <code>cmd</code> (the one that reads your command, not the one you are launching) sometimes removes the quotes and split the line into an array of arguments. So the invoked <code>cmd</code> does not actually see the quotes. When you call it as in the OP, it does see the quotes and the program breaks."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1547250506, "creation_date": 1547250506, "answer_id": 54155500, "question_id": 54155214, "link": "https://stackoverflow.com/questions/54155214/how-to-prevent-rusts-stdprocesscommand-from-inserting-exes-relative-path-i/54155500#54155500", "title": "How to prevent Rust&#39;s std::process:Command from inserting .exe&#39;s relative path into arguments?", "body": "<p>I do not have a Windows machine nearby but I'm quite sure that the problem is in the quote characters <code>\"</code>.</p>\n\n<p>Escape rules in CMD.exe are quite weird: sometimes you need quotes, sometimes you do not, and sometime you must not use them.</p>\n\n<p>In your case, the log file, for example is chosen with the following option (removing Rust escapes): <code>/LOG:\"C:\\Test\\Test3\\logfile.log\"</code>. This is a file name that starts and ends with a quote. And since it does not start with a drive letter or a <code>\\</code>, the OS thinks: surely it is a relative path, let's look for <code>C:\\...\\\"C:\\Test...\"</code>!</p>\n\n<p>The solution is easy: just remove all those quote.</p>\n\n<p>What I don't understand is why are you calling <code>cmd.exe /c</code> instead of just calling <code>robocopy</code> directly.  Quotes in the command line are used to guide the command line parser and properly manage filenames with spaces and so on. But if you do <code>Command::new()</code> of <code>robocopy</code> directly, then there is no need for quoting because the arguments are already passed separatedly.</p>\n"}], "owner": {"reputation": 452, "user_id": 2403531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a556f4f1e79ff8e4b939ea867264948?s=128&d=identicon&r=PG", "display_name": "user2403531", "link": "https://stackoverflow.com/users/2403531/user2403531"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 953, "favorite_count": 0, "accepted_answer_id": 54155500, "answer_count": 1, "score": 0, "last_activity_date": 1547273865, "creation_date": 1547248127, "last_edit_date": 1547273865, "question_id": 54155214, "link": "https://stackoverflow.com/questions/54155214/how-to-prevent-rusts-stdprocesscommand-from-inserting-exes-relative-path-i", "title": "How to prevent Rust&#39;s std::process:Command from inserting .exe&#39;s relative path into arguments?", "body": "<p>I'm using Rust's <code>std:process:Command</code> to call <code>robocopy</code> in Windows. Unfortunately, it seems that somewhere along the execution of <code>robocopy</code>, the relative path from the .exe is inserted before each directory.</p>\n\n<p>Additionally, simple calls like <code>net use</code> work with the same method, though I've only tested ones that don't rely on any directories.</p>\n\n<p>Edit: updated the test folders to have spaces in their names.</p>\n\n<p><strong>Edit 2: the code has been updated with the solution. The solution was to call robocopy directly and <code>.arg()</code> in everything individually. Old attempts are still commented in.</strong></p>\n\n<p>Instead of sending</p>\n\n<pre><code>cmd.exe /c robocopy \"C:\\Test\\Test 1\" \"C:\\Test\\Test 2\" /MIR /copy:DAT /MT:32 /Z /R:2 /W:03 /v /LOG:\"C:\\Test\\Test 3\\logfile.log\"\n</code></pre>\n\n<p>and it running successfully, the output has a lot of errors:</p>\n\n<pre><code>ERROR 123 (0x0000007B) Opening Log File C:\\relative\\path\\where\\exe\\is\\located\\\"C:\\Test\\Test 3\\logfile.log\"\nThe filename, directory name, or volume label syntax is incorrect.\n\n-------------------------------------------------------------------------------\n   ROBOCOPY     ::     Robust File Copy for Windows\n-------------------------------------------------------------------------------\n\n   Started : Tuesday, January 8, 2019 7:35:41 AM\n    Source - C:\\relative\\path\\where\\exe\\is\\located\\\"C:\\Test\\Test 1\"\\\n      Dest - C:\\relative\\path\\where\\exe\\is\\located\\\"C:\\Test\\Test 2\"\\\n\n     Files :\n   Options : /V /S /E /DCOPY:DA /COPY:DAT /PURGE /MIR /Z /MT:32 /R:2 /W:3\n\n------------------------------------------------------------------------------\n\nERROR : Invalid Parameter #10 : \"/LOG:\"C:\\Test\\Test 3\\logfile.log\"\"\n</code></pre>\n\n<p>This issue occurs using:</p>\n\n<ul>\n<li><p>Rust version 1.3.1</p></li>\n<li><p>Windows 10</p></li>\n</ul>\n\n<p>Code that causes this for me is shown below. To use it you'll need to put a <strong>Test</strong> folder in your <strong>C:\\</strong> (or change it to wherever) and put inside that directory a <strong>Test 1</strong> folder with some <strong>Testfile.txt</strong> to help show copying took place, as well as a <strong>Test 3</strong> folder for the log to be in (not sure if the log can make its own folder - so just to be safe, premake one for it!). Basically you want:</p>\n\n<pre><code>C:\\Test\\Test 1\\Testfile.txt (name or type of file doesn't matter)\nC:\\Test\\Test 3\\\n</code></pre>\n\n<p><code>robocopy</code> should run and make a <strong>C:\\Test\\Test 2</strong> folder with <strong>Testfile.txt</strong> in it and put a <strong>logfile.log</strong> in <strong>C:\\Test\\Test 3</strong> that details the transaction. In the end, the directories should look like this:</p>\n\n<pre><code>C:\\Test\\Test 1\\Testfile.txt\nC:\\Test\\Test 2\\Testfile.txt\nC:\\Test\\Test 3\\logfile.log\n</code></pre>\n\n<p>The code follows:</p>\n\n<pre><code>//-----Import Built-in Libraries (not called crates)-----\nuse std::process::Command; //use cmd.exe\n\nfn main()\n{\n    let commandOpt1 = \"/MIR\"; //mirror directories\n    let commandOpt2 = \"/copy:DAT\"; //copy attributes\n    let commandOpt3 = \"/MT:32\"; //use 32 I/O threads (low CPU still, but better bandwidth utilization)\n    let commandOpt4 = \"/Z\"; //idr\n    let commandOpt5 = \"/R:2\"; //Retry twice\n    let commandOpt6 = \"/W:03\"; //Wait 3 sec between tries\n    let commandOpt7 = \"/v\"; //verbose logging\n    let commandLogStr = \"/LOG:\\\"C:\\\\Test\\\\Test 3\\\\logfile.log\\\"\"; //record where the log file goes\n    let commandLogNoParenthStr = \"/LOG:C:\\\\Test\\\\Test 3\\\\logfile.log\"; //record where the log file goes\n    let command = format!(\"robocopy \\\"C:\\\\Test\\\\Test 1\\\" \\\"C:\\\\Test\\\\Test 2\\\" {} {} {} {} {} {} {} {}\",\n    commandOpt1,commandOpt2,commandOpt3,commandOpt4,commandOpt5,commandOpt6,\n    commandOpt7,commandLogStr); //build the command\n    let commandStr: &amp;str = &amp;*command; //these two types of strings are\n    println!(\"TEST-Command for robocopy:{}\",command);\n\n    //let m = Command::new(\"cmd.exe\").arg(\"/c\").arg(commandStr).output().unwrap(); //run cmd.exe net use\n    /*let m = Command::new(\"cmd.exe\")\n        .arg(\"/c\")\n        .arg(\"robocopy\")\n        .arg(\"\\\"C:\\\\Test\\\\Test 1\\\"\")\n        .arg(\"\\\"C:\\\\Test\\\\Test 2\\\"\")\n        .arg(commandOpt1)\n        .arg(commandOpt2)\n        .arg(commandOpt3)\n        .arg(commandOpt4)\n        .arg(commandOpt5)\n        .arg(commandOpt6)\n        .arg(commandOpt7)\n        .arg(commandLogStr)\n        .output().unwrap(); //run cmd.exe net use */\n    let m = Command::new(\"robocopy\")\n        .arg(\"C:\\\\Test\\\\Test 1\")\n        .arg(\"C:\\\\Test\\\\Test 2\")\n        .arg(commandOpt1)\n        .arg(commandOpt2)\n        .arg(commandOpt3)\n        .arg(commandOpt4)\n        .arg(commandOpt5)\n        .arg(commandOpt6)\n        .arg(commandOpt7)\n        .arg(commandLogNoParenthStr )\n        .output().unwrap(); //run cmd.exe net use */\n    let mOutput = String::from_utf8_lossy(&amp;m.stdout); //get the output\n    println!(\"TEST-cmd output: {}\",mOutput);\n    println!(\"TEST-cmd status: {}\", m.status.success()); //reports success (true or false) of command\n    println!(\"TEST-cmd stderr: {}\", String::from_utf8_lossy(&amp;m.stderr)); //reports error words of command\n    let _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status(); // wait for user input\n}\n</code></pre>\n\n<p>The code gives two options, one to call <code>robocopy</code> in one <code>.arg()</code> addition and one with the <code>.arg()</code>s split up. For me, they give the same result - but options are good!</p>\n\n<p>Also, as a note, I send everything into <code>Command</code> as a <code>&amp;str</code> but that seems to not be required - <code>Strings</code> can be <code>.arg()</code>s too.</p>\n"}, {"tags": ["vector", "struct", "rust"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 3, "creation_date": 1547247022, "post_id": 54154945, "comment_id": 95141076, "body": "This is append: <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.append\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.appe&zwnj;&#8203;nd</a> -- The function you&#39;re looking for is push."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 2, "creation_date": 1547248035, "post_id": 54154945, "comment_id": 95141370, "body": "@BenjaminLindley Since your comment answers the question, would you mind posting it as an s answer?"}, {"owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "edited": false, "score": 0, "creation_date": 1547250163, "post_id": 54154945, "comment_id": 95141889, "body": "Thank you Benjamin Lindley, if you provide this information as an answer, I will happily accept it."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1547285832, "post_id": 54154945, "comment_id": 95146773, "body": "Note that it&#39;s not a Python array. <code>append</code> has a different meaning for Rust <code>Vec</code>s."}, {"owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "edited": false, "score": 0, "creation_date": 1547325022, "post_id": 54154945, "comment_id": 95156998, "body": "Yes, Andrey Tyukin, I had managed to confuse myself because in another spot of my code I had intentionally chosen <code>append</code> (which is like Python&#39;s <code>extend</code>).  But since I&#39;m new to Rust, I was lead down the wrong path by the compiler messages, and decided to post the question.  I&#39;ll happily accept the answer if Benjamin Lindley writes it up."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1547276432, "post_id": 54155669, "comment_id": 95145214, "body": "Please expand your answer with a working example of code, preferable with a link to the documentation."}, {"owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "edited": false, "score": 0, "creation_date": 1547324878, "post_id": 54155669, "comment_id": 95156965, "body": "Indeed, this is solved.  I was hoping to give @benjamin-lindley the credit for the accepted answer, since they were first."}], "tags": [], "owner": {"reputation": 467, "user_id": 2181263, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/7977b535a75d659cf7fdf878d1bed39a?s=128&d=identicon&r=PG&f=1", "display_name": "Brandon Ross Pollack", "link": "https://stackoverflow.com/users/2181263/brandon-ross-pollack"}, "is_accepted": true, "score": 3, "last_activity_date": 1547252273, "creation_date": 1547252273, "answer_id": 54155669, "question_id": 54154945, "link": "https://stackoverflow.com/questions/54154945/how-can-i-create-and-append-to-a-vecstruct/54155669#54155669", "title": "How can I create and append to a Vec&lt;Struct&gt;?", "body": "<p>I think someone may have said this in the comments, but append appends all the elements of another vector into this one by moving them into Self, I think you're trying to <code>push(a)</code> onto your vec</p>\n"}, {"tags": [], "owner": {"reputation": 401, "user_id": 7460739, "user_type": "registered", "profile_image": "https://graph.facebook.com/949590231739870/picture?type=large", "display_name": "Nathaniel Ruiz", "link": "https://stackoverflow.com/users/7460739/nathaniel-ruiz"}, "is_accepted": false, "score": 0, "last_activity_date": 1610647860, "creation_date": 1610647860, "answer_id": 65724606, "question_id": 54154945, "link": "https://stackoverflow.com/questions/54154945/how-can-i-create-and-append-to-a-vecstruct/65724606#65724606", "title": "How can I create and append to a Vec&lt;Struct&gt;?", "body": "<p>If you're like me and you actually wanted to do the opposite (i.e. stop VSCode from automatically switching to the &quot;Debug Console&quot; Tab instead of just staying on the &quot;Terminal Tab&quot;) then I found that the solution was to add this setting to your <code>launch.json</code> file:</p>\n<pre><code>&quot;avoidWindowsConsoleRedirection&quot;: true\n</code></pre>\n"}], "owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2767, "favorite_count": 0, "accepted_answer_id": 54155669, "answer_count": 2, "score": 0, "last_activity_date": 1610647860, "creation_date": 1547246186, "last_edit_date": 1547405591, "question_id": 54154945, "link": "https://stackoverflow.com/questions/54154945/how-can-i-create-and-append-to-a-vecstruct", "title": "How can I create and append to a Vec&lt;Struct&gt;?", "body": "<p>The following does not compile:</p>\n\n<pre><code>struct A {\n    f: u16,\n}\n\nfn main() {\n    let v: Vec&lt;A&gt; = Vec::new();\n    let a = A { f: 42 };\n    v.append(a);\n}\n</code></pre>\n\n<p>But the compiler message seems to be leading me down the wrong path:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:8:14\n  |\n8 |     v.append(a);\n  |              ^ expected mutable reference, found struct `A`\n  |\n  = note: expected type `&amp;mut std::vec::Vec&lt;A&gt;`\n             found type `A` \n</code></pre>\n\n<p>Editing the code to call <code>append</code> on a reference to <code>a</code>:</p>\n\n<pre><code>v.append(&amp;mut a);\n</code></pre>\n\n<p>Also fails to compile, but with a surprising (to me) message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:8:18\n  |\n8 |         v.append(&amp;mut a);\n  |                  ^^^^^^ expected struct `std::vec::Vec`, found struct `A`\n  |\n  = note: expected type `&amp;mut std::vec::Vec&lt;A&gt;`\n             found type `&amp;mut A`\n</code></pre>\n\n<p>Shouldn't <code>append</code> be looking for an element of the <code>Vec</code>?  It appears to be looking for a <code>Vec</code> itself.  Yet, I believe I'm following the proper creating for a <code>Vec</code> holding elements of type <code>A</code>.  From the Rust book:</p>\n\n<blockquote>\n  <p>To create a new, empty vector, we can call the <code>Vec::new</code> function, as\n  shown in Listing 8-1.</p>\n\n<pre><code>let v: Vec&lt;i32&gt; = Vec::new();\n</code></pre>\n</blockquote>\n\n<p>(<a href=\"https://doc.rust-lang.org/book/ch08-01-vectors.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch08-01-vectors.html</a>)</p>\n\n<p>I have successfully used <code>Vec&lt;String&gt;</code> using the same pattern I'm attempting here, but I'm clearly misunderstanding something quite fundamental.</p>\n"}, {"tags": ["rust", "pattern-matching", "constants"], "answers": [{"comments": [{"owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "edited": false, "score": 0, "creation_date": 1547232674, "post_id": 54152370, "comment_id": 95135790, "body": "But it is not possible to use a <code>const fn</code>-call directly as pattern?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "edited": false, "score": 1, "creation_date": 1547232850, "post_id": 54152370, "comment_id": 95135851, "body": "No, there is no <code>some::path()</code> pattern as there is a <code>some::path()</code> expression."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547233331, "post_id": 54152370, "comment_id": 95136061, "body": "This problem is conceptual. Are you going to create variables for other cases like for example (min value, mid value, or some value, etc...)  ? If i have to use like this there is no point to use matcher."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1547234383, "post_id": 54152370, "comment_id": 95136483, "body": "You already have <code>std::u64::MAX</code>. You don&#39;t need to create your own binding."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 3, "creation_date": 1547234725, "post_id": 54152370, "comment_id": 95136633, "body": "@&#214;merErden For such a simple example, you don&#39;t need a binding sure (especially since one already exist as Boiethios reminded us), but there are more complicated examples where I&#39;d definitely use constant items. Eg. I have a sensor were the raw value has to be scaled differently on 5 different intervals to get the actual value, then I created a constant for the 3 mid values. <code>const</code>s in Rust come at no cost, don&#39;t be afraid to use them."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 7, "last_activity_date": 1584535376, "last_edit_date": 1584535376, "creation_date": 1547232595, "answer_id": 54152370, "question_id": 54152207, "link": "https://stackoverflow.com/questions/54152207/is-it-possible-to-match-against-the-result-of-a-const-fn/54152370#54152370", "title": "Is it possible to match against the result of a `const fn`?", "body": "<p>The left part of <code>=&gt;</code> must be a pattern, and few expressions are also valid patterns. A call-expression is not a valid pattern.</p>\n\n<p>Named constants can be matched so you can do this:</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let num = 0;\n\n    const MAX: u64 = u64::max_value();\n    match num {\n        MAX =&gt; println!(\"Is u64::max_value()\"),\n        _ =&gt; println!(\"Is boring\")\n    }\n    Ok(())\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dc5e6b24f7cc502a440499002512cc5c\" rel=\"nofollow noreferrer\">Link to playground</a></p>\n\n<p>This also has the advantage of letting the compiler check whether your matching is exhaustive (which pattern guards <a href=\"https://gist.github.com/3fb1399288d6f24b3fefdac7dd4969e2\" rel=\"nofollow noreferrer\">don't</a>):</p>\n\n<pre><code>const fn true_fn() -&gt; bool { true }\n\nfn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let num = true;\n\n    const TRUE: bool = true_fn();\n    match num {\n        TRUE =&gt; println!(\"Is u64::max_value()\"),\n        false =&gt; println!(\"Is boring\")\n    }\n    Ok(())\n}\n</code></pre>\n\n<p><a href=\"https://gist.github.com/236ce9187bc35a817ad5b523907ca9b3\" rel=\"nofollow noreferrer\">Link to playground</a></p>\n"}], "owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1202, "favorite_count": 0, "accepted_answer_id": 54152370, "answer_count": 1, "score": 5, "last_activity_date": 1584535376, "creation_date": 1547231696, "last_edit_date": 1547405427, "question_id": 54152207, "link": "https://stackoverflow.com/questions/54152207/is-it-possible-to-match-against-the-result-of-a-const-fn", "title": "Is it possible to match against the result of a `const fn`?", "body": "<p>I've tried the naive approach</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let num = 0;\n    match num {\n        u64::max_value() =&gt; println!(\"Is u64::max_value()\"),\n        _ =&gt; println!(\"Is boring\")\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>but it fails with <code>expected tuple struct/variant, found method &lt;u64&gt;::max_value</code>.</p>\n\n<p>Is there another syntax except <code>n if n == u64::max_value() =&gt; ...</code> which can I use?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1547230633, "post_id": 54151524, "comment_id": 95135025, "body": "It is because there is fat pointers in rust, this might help: <a href=\"http://huonw.github.io/blog/2015/01/the-sized-trait/\" rel=\"nofollow noreferrer\">huonw.github.io/blog/2015/01/the-sized-trait</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547251409, "post_id": 54151524, "comment_id": 95142116, "body": "Because standard tell it."}], "answers": [{"comments": [{"owner": {"reputation": 3647, "user_id": 371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e1caa49eebfe37ffe3ef64e19364b0b3?s=128&d=identicon&r=PG", "display_name": "Silly Freak", "link": "https://stackoverflow.com/users/371191/silly-freak"}, "edited": false, "score": 0, "creation_date": 1547234205, "post_id": 54151911, "comment_id": 95136414, "body": "now that it&#39;s written down in front of me, it seems painfully obvious... I should have thought more carefully what kinds of unsized types there are. Thanks!"}], "tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 5, "last_activity_date": 1547230272, "creation_date": 1547230272, "answer_id": 54151911, "question_id": 54151524, "link": "https://stackoverflow.com/questions/54151524/why-does-size-oft-size-ofusize-depend-on-whether-t-is-sized/54151911#54151911", "title": "Why does size_of::&lt;&amp;T&gt;() == size_of::&lt;usize&gt;() depend on whether T is Sized?", "body": "<p>Unsized object references have extra data in addition to the pointer to the object. In the case of slice references (<code>&amp;[T]</code>), they contain a size in order to indicate how long this slice is. And in the case of references to traits (trait objects), they contain a pointer to a vtable in order to enable dynamic dispatch.</p>\n"}], "owner": {"reputation": 3647, "user_id": 371191, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e1caa49eebfe37ffe3ef64e19364b0b3?s=128&d=identicon&r=PG", "display_name": "Silly Freak", "link": "https://stackoverflow.com/users/371191/silly-freak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 54151911, "answer_count": 1, "score": 3, "last_activity_date": 1547230272, "creation_date": 1547228399, "question_id": 54151524, "link": "https://stackoverflow.com/questions/54151524/why-does-size-oft-size-ofusize-depend-on-whether-t-is-sized", "title": "Why does size_of::&lt;&amp;T&gt;() == size_of::&lt;usize&gt;() depend on whether T is Sized?", "body": "<p><a href=\"https://doc.rust-lang.org/std/mem/fn.size_of.html\" rel=\"nofollow noreferrer\">The docs for <code>size_of</code></a> say the following:</p>\n\n<blockquote>\n  <p>If <code>T</code> is Sized, all of those types [pointer types such as <code>&amp;T</code>] have the same size as <code>usize</code>.</p>\n</blockquote>\n\n<p>Why that qualifier? Would a pointer not have a definitive size regardless of any property of the type being pointed to?</p>\n"}, {"tags": ["replace", "rust", "slice"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1547224153, "post_id": 54150353, "comment_id": 95131993, "body": "Is the replacement slice necessarily the same length as the slice to replace? Or might you have to shrink/grow the <code>Vec</code>?"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1547224641, "post_id": 54150353, "comment_id": 95132261, "body": "I don&#39;t think there is any convenient general routine defined on <code>&amp;[u8]</code> currently that does this for you, similar to the <code>str::replace</code> method. I&#39;d probably just implement it myself, possibly by copying the <a href=\"https://doc.rust-lang.org/src/alloc/str.rs.html#268-278\" rel=\"nofollow noreferrer\">implementation for <code>str::replace</code></a>. (I am working on a byte string library for Rust, which will certainly support operations like this. But it&#39;s not finished yet.)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547227588, "post_id": 54150353, "comment_id": 95133779, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28219231/how-to-idiomatically-copy-a-slice\">How to idiomatically copy a slice?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547227698, "post_id": 54150353, "comment_id": 95133841, "body": "Applying the linked question here suggests <code>buf[0..3].copy_from_slice(&amp;[4, 5, 6]);</code>. If the slices are not the same size, it&#39;s probably a duplicate of <a href=\"https://stackoverflow.com/q/28678615/3650362\">Efficiently insert or replace multiple elements in the middle or at the beginning of a Vec?</a> instead"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547228774, "post_id": 54150353, "comment_id": 95134288, "body": "My mistake, I overlooked the word &quot;every&quot; in the question. But the links above are still good to look at."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547239894, "post_id": 54150353, "comment_id": 95138729, "body": "Another question: if you replace <code>[1, 2, 3]</code> with <code>[5, 1, 2]</code> within <code>[1, 2, 3, 3]</code>, do you expect <code>[5, 1, 2, 3]</code>? Both the existing answers will give you <code>[5, 5, 1, 2]</code>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547242400, "post_id": 54150353, "comment_id": 95139650, "body": "@trentcl title for the question points : <b>&quot;replace a subslice of a byte Vec/slice with another slice?&quot;</b> . This is not valid for your second case because you are not replacing last element( &quot; <b>3</b>  &quot;) with <b>another slice</b> ( just replacing with an element which is from <b>another slice</b>)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547243451, "post_id": 54150353, "comment_id": 95139993, "body": "@&#214;merErden <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=74ed2faa1f9cfd126b0c6bb35ee187f5\" rel=\"nofollow noreferrer\">This is what I mean</a>. I took the <code>replace_slice</code> function straight from your answer. I don&#39;t expect this behavior is what OP wants."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547244417, "post_id": 54150353, "comment_id": 95140293, "body": "@trentcl i see, thanks i updated the code now it works with your case too."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547405374, "post_id": 54150353, "comment_id": 95173091, "body": "See also <a href=\"https://stackoverflow.com/questions/35901547/how-can-i-find-a-subsequence-in-a-u8-slice\">How can I find a subsequence in a &amp;&#91;u8&#93; slice?</a>."}], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 1, "last_activity_date": 1547405289, "last_edit_date": 1547405289, "creation_date": 1547228011, "answer_id": 54151440, "question_id": 54150353, "link": "https://stackoverflow.com/questions/54150353/how-to-find-and-replace-every-matching-slice-of-bytes-with-another-slice/54151440#54151440", "title": "How to find and replace every matching slice of bytes with another slice?", "body": "<p>This function can do the job:</p>\n\n<pre><code>fn replace_slice&lt;T&gt;(source: &amp;mut [T], from: &amp;[T], to: &amp;[T])\nwhere\n    T: Clone + PartialEq,\n{\n    let iteration = if source.starts_with(from) {\n        source[..from.len()].clone_from_slice(to);\n        from.len()\n    } else {\n        1\n    };\n\n    if source.len() &gt; from.len() {\n        replace_slice(&amp;mut source[iteration..], from, to);\n    }\n}\n</code></pre>\n\n<p>This function is recursive but you can rewrite it using loops as well.</p>\n\n<hr>\n\n<p><strong>Example 1:</strong> </p>\n\n<pre><code>fn main() {\n    let mut buf = vec![1, 2, 3, 7, 8, 1, 2, 3];\n\n    replace_slice(&amp;mut buf[..], &amp;[1, 2, 3], &amp;[4, 5, 6]);\n\n    assert_eq!(buf, vec![4, 5, 6, 7, 8, 4, 5, 6]);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b6f00e733222894c3c8fafdbd7aa8f80\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p><strong>Example 2:</strong> \n(From the comment by trentcl)</p>\n\n<pre><code>fn main() {\n    let mut buf = vec![1, 2, 3, 3, 4, 1, 2, 3];\n\n    replace_slice(&amp;mut buf[..], &amp;[1, 2, 3], &amp;[5, 1, 2]);\n\n    assert_eq!(buf, vec![5, 1, 2, 3, 4, 5, 1, 2]);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a9db61e56933fdd44ef3414e785b1123\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1547236315, "post_id": 54152901, "comment_id": 95137331, "body": "You may consider to change your loop into this : <code>for i in 0..=buf.len() - from.len()</code> to skip unnecessary checks."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547239751, "post_id": 54152901, "comment_id": 95138672, "body": "@&#214;merErden <code>source.len() - from.len()</code> will panic when <code>from</code> is larger than <code>source</code>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547242087, "post_id": 54152901, "comment_id": 95139542, "body": "@trentcl thanks for pointing it out,  it will also panic when &quot;from&quot; and &quot;to&quot; are not equally sized, due to assertion in &quot;starts_with&quot;. Adding guards before loop will help."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547243540, "post_id": 54152901, "comment_id": 95140025, "body": "@&#214;merErden <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.starts_with\" rel=\"nofollow noreferrer\"><code>starts_with</code></a> doesn&#39;t panic if <code>self</code> and <code>needle</code> are different sizes; it just returns <code>false</code>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547244501, "post_id": 54152901, "comment_id": 95140319, "body": "@trentcl sorry it should  be  &quot;clone_from_slice&quot;"}], "tags": [], "owner": {"reputation": 371, "user_id": 5921433, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zjNTV.jpg?s=128&g=1", "display_name": "Nate", "link": "https://stackoverflow.com/users/5921433/nate"}, "is_accepted": false, "score": 0, "last_activity_date": 1547405305, "last_edit_date": 1547405305, "creation_date": 1547234951, "answer_id": 54152901, "question_id": 54150353, "link": "https://stackoverflow.com/questions/54150353/how-to-find-and-replace-every-matching-slice-of-bytes-with-another-slice/54152901#54152901", "title": "How to find and replace every matching slice of bytes with another slice?", "body": "<p>Without recursion:</p>\n\n<pre><code>fn replace_slice&lt;T&gt;(buf: &amp;mut [T], from: &amp;[T], to: &amp;[T])\nwhere\n    T: Clone + PartialEq,\n{\n    for i in 0..=buf.len() - from.len() {\n        if buf[i..].starts_with(from) {\n            buf[i..(i + from.len())].clone_from_slice(to);\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 530, "user_id": 4417483, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8dd8fda2725d2a507a3949b2caac85a4?s=128&d=identicon&r=PG&f=1", "display_name": "burubum", "link": "https://stackoverflow.com/users/4417483/burubum"}, "is_accepted": false, "score": 0, "last_activity_date": 1556905311, "creation_date": 1556905311, "answer_id": 55974786, "question_id": 54150353, "link": "https://stackoverflow.com/questions/54150353/how-to-find-and-replace-every-matching-slice-of-bytes-with-another-slice/55974786#55974786", "title": "How to find and replace every matching slice of bytes with another slice?", "body": "<p>This works when the slices have different lengths (similar to <code>replace</code> for <code>str</code>):</p>\n\n<pre><code>fn replace&lt;T&gt;(source: &amp;[T], from: &amp;[T], to: &amp;[T]) -&gt; Vec&lt;T&gt;\nwhere\n    T: Clone + PartialEq\n{\n    let mut result = source.to_vec();\n    let from_len = from.len();\n    let to_len = to.len();\n\n    let mut i = 0;\n    while i + from_len &lt;= result.len() {\n        if result[i..].starts_with(from) {\n            result.splice(i..i + from_len, to.iter().cloned());\n            i += to_len;\n        } else {\n            i += 1;\n        }\n    }\n\n    result\n}\n</code></pre>\n"}], "owner": {"reputation": 301, "user_id": 7335904, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0db88e02f06f535bafc89d9bc9ae90c6?s=128&d=identicon&r=PG&f=1", "display_name": "Uncreative Name", "link": "https://stackoverflow.com/users/7335904/uncreative-name"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1008, "favorite_count": 1, "answer_count": 3, "score": 7, "last_activity_date": 1556905311, "creation_date": 1547223656, "last_edit_date": 1547405180, "question_id": 54150353, "link": "https://stackoverflow.com/questions/54150353/how-to-find-and-replace-every-matching-slice-of-bytes-with-another-slice", "title": "How to find and replace every matching slice of bytes with another slice?", "body": "<p>I have a byte vector and want to replace every <code>[1, 2, 3]</code> with <code>[4, 5, 6]</code>. How is this possible in Rust?</p>\n\n<pre><code>let mut buf = vec![1, 2, 3, 7, 8];\n\n// ?\n\nassert_eq!(buf, vec![4, 5, 6, 7, 8]);\n</code></pre>\n"}, {"tags": ["rust", "serde", "serde-json"], "answers": [{"comments": [{"owner": {"reputation": 3797, "user_id": 720773, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9nOO2.jpg?s=128&g=1", "display_name": "Gary Sheppard", "link": "https://stackoverflow.com/users/720773/gary-sheppard"}, "edited": false, "score": 1, "creation_date": 1580308405, "post_id": 55431993, "comment_id": 106055372, "body": "Thank you for the code sample. I did read the documentation, but it wasn&#39;t clear to me from the documentation how to specify multiple <code>alias</code> values. Your code sample here makes it perfectly clear. \ud83d\udc4d"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1553953117, "creation_date": 1553953117, "answer_id": 55431993, "question_id": 54149943, "link": "https://stackoverflow.com/questions/54149943/how-can-i-accept-multiple-deserialization-names-for-the-same-serde-field/55431993#55431993", "title": "How can I accept multiple deserialization names for the same Serde field?", "body": "<p>I encourage you to read the Serde documentation. The <a href=\"https://serde.rs/field-attrs.html\" rel=\"noreferrer\">field attributes</a> chapter introduces the <a href=\"https://serde.rs/field-attrs.html#alias\" rel=\"noreferrer\"><code>alias</code> attribute</a>, emphasis mine:</p>\n\n<blockquote>\n  <p><code>#[serde(alias = \"name\")]</code></p>\n  \n  <p>Deserialize this field from the given name or from its Rust name. May\n  be repeated to specify <strong>multiple possible names for the same field</strong>.</p>\n</blockquote>\n\n<pre><code>use serde::Deserialize; // 1.0.88\nuse serde_json; // 1.0.38\n\n#[derive(Debug, Deserialize)]\nstruct SchemaConfig {\n    #[serde(alias = \"fancy_square\", alias = \"KUBE\")]\n    cube: [i32; 3],\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let input1 = r#\"{\n        \"fancy_square\": [1, 2, 3]\n    }\"#;\n\n    let input2 = r#\"{\n        \"KUBE\": [4, 5, 6]\n    }\"#;\n\n    let one: SchemaConfig = serde_json::from_str(input1)?;\n    let two: SchemaConfig = serde_json::from_str(input2)?;\n\n    println!(\"{:?}\", one);\n    println!(\"{:?}\", two);\n\n    Ok(())\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>I would like for a JSON file to have a <code>cubes</code> key with a list of cubes, but the equivalent in XML would be multiple <code>&lt;Cube /&gt;</code> elements.</p>\n</blockquote>\n\n<p>This certainly sounds like you want two different <em>structures</em> to your files. In that case, look at something like:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/46753955/155423\">How to transform fields during deserialization using Serde?</a></li>\n<li><a href=\"https://stackoverflow.com/q/52034764/155423\">How do I serialize an enum without including the name of the enum variant?</a></li>\n</ul>\n"}], "owner": {"reputation": 355, "user_id": 4921676, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/67372f85eaa2d9409852f27e152b2599?s=128&d=identicon&r=PG&f=1", "display_name": "MarcioPorto", "link": "https://stackoverflow.com/users/4921676/marcioporto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1784, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1553953117, "creation_date": 1547222219, "last_edit_date": 1553952608, "question_id": 54149943, "link": "https://stackoverflow.com/questions/54149943/how-can-i-accept-multiple-deserialization-names-for-the-same-serde-field", "title": "How can I accept multiple deserialization names for the same Serde field?", "body": "<p>I am trying to use Serde to deserialize JSON (<code>serde-json</code>) and XML (<code>serde-xml-rs</code>) files based on the following struct:</p>\n\n<pre><code>use serde_derive::Deserialize;\n\n#[derive(Debug, Clone, PartialEq, Deserialize)]\npub struct SchemaConfig {\n    pub name: String,\n    #[serde(rename = \"Cube\")]\n    pub cubes: Vec&lt;CubeConfig&gt;,\n}\n</code></pre>\n\n<p>The fields I am deserializing on have different names based on the file type. In this case, I would like for a JSON file to have a <code>cubes</code> key with a list of cubes, but the equivalent in XML would be multiple <code>&lt;Cube /&gt;</code> elements.</p>\n\n<p>I can't figure out how to accept both <code>cubes</code> and <code>Cube</code> as keys for the deserialization. The closest thing I found was the <code>#[serde(rename = \"Cube\")]</code> option but when I use that the JSON deserialization stops working since it only accepts the <code>Cube</code> key. If I remove that option, the XML deserialization stops working as it then only accepts <code>cubes</code> as the key.</p>\n\n<p>Is there a simple way to accomplish this in Serde?</p>\n"}, {"tags": ["rust", "substrate"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1547215888, "post_id": 54147877, "comment_id": 95127345, "body": "The compiler will not know where the associated types <code>Balance</code> and <code>AccountId</code> came from, unless you apply a trait bound on <code>T</code> that provides them. Next time, please see what makes a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, and don&#39;t forget to include relevant crates and modules."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547409987, "post_id": 54147877, "comment_id": 95174411, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54147877/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 3, "last_activity_date": 1547409941, "last_edit_date": 1547409941, "creation_date": 1547215815, "answer_id": 54148183, "question_id": 54147877, "link": "https://stackoverflow.com/questions/54147877/how-to-use-generic-structs-in-the-parity-substrate-custom-runtime/54148183#54148183", "title": "How to use generic structs in the Parity Substrate custom runtime?", "body": "<p>It looks like <code>T::Balance</code> and <code>T::AcountId</code> are assoicated types of some trait, so they can be only used if that trait, say <code>MyTrait</code>, is implemented for <code>T</code>. You can tell the compiler that <code>T</code> implements <code>MyTrait</code> by adding a trait bound:</p>\n\n<pre><code>pub struct CustomDataType&lt;T: MyTrait&gt; {\n    data: Vec&lt;u8&gt;,\n    balance: T::Balance,\n    owner: T::AccountId,\n}\n</code></pre>\n\n<p>In general, you can only assume properties, methods and asscociated types of a generic type if the type is restricted by appropriate type bounds. (The only exception is that type parameters are assumed to be <em>sized</em> by default, so you can make this assumption without an explicit bound.)</p>\n"}, {"tags": [], "owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "is_accepted": true, "score": 6, "last_activity_date": 1547409907, "last_edit_date": 1547409907, "creation_date": 1547216840, "answer_id": 54148467, "question_id": 54147877, "link": "https://stackoverflow.com/questions/54147877/how-to-use-generic-structs-in-the-parity-substrate-custom-runtime/54148467#54148467", "title": "How to use generic structs in the Parity Substrate custom runtime?", "body": "<p>Unfortunately, <a href=\"https://stackoverflow.com/a/54148183/155423\">the answer that Sven Marnach gives</a> does not work in the context of Parity Substrate. There are additional derive macros which are used on top of the struct which cause issues when going down the \"intuitive\" path.</p>\n\n<p>In this case, you should pass the traits needed directly into your custom type and create new generics for the context of the struct.</p>\n\n<p>Something like this:</p>\n\n<pre><code>use srml_support::{StorageMap, dispatch::Result};\n\npub trait Trait: balances::Trait {}\n\n#[derive(Encode, Decode, Default)]\npub struct CustomDataType &lt;Balance, Account&gt; {\n    data: Vec&lt;u8&gt;,\n    balance: Balance,\n    owner: Account,\n}\n\ndecl_module! {\n    // ... removed for brevity\n}\n\ndecl_storage! {\n    trait Store for Module&lt;T: Trait&gt; as RuntimeExampleStorage {\n        Value get(value): CustomDataType&lt;T::Balance, T::AccountId&gt;;\n    }\n}\n</code></pre>\n\n<p>We just created <a href=\"https://substrate.readme.io/v1.0.0/docs/substrate-runtime-recipes#section-storing-structs-with-generics\" rel=\"nofollow noreferrer\">a doc for this exact scenario</a> which I hope helps.</p>\n"}], "owner": {"reputation": 119, "user_id": 2447263, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2310f7a365d4c1cbe75f58089fdc6235?s=128&d=identicon&r=PG", "display_name": "Gautam Dhameja", "link": "https://stackoverflow.com/users/2447263/gautam-dhameja"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 377, "favorite_count": 1, "accepted_answer_id": 54148467, "answer_count": 2, "score": 3, "last_activity_date": 1558450018, "creation_date": 1547214789, "last_edit_date": 1558450018, "question_id": 54147877, "link": "https://stackoverflow.com/questions/54147877/how-to-use-generic-structs-in-the-parity-substrate-custom-runtime", "title": "How to use generic structs in the Parity Substrate custom runtime?", "body": "<p>I want to create a data type using <code>Struct</code> inside a <a href=\"https://github.com/paritytech/substrate\" rel=\"nofollow noreferrer\">Parity Substrate</a> custom runtime. The data type is intended to be generic so that I can use it over different types. </p>\n\n<p>I am trying the following, but it's not compiling. The compiler complains about sub-types not found for <code>T</code>.</p>\n\n<pre><code>pub struct CustomDataType&lt;T&gt; {\n    data: Vec&lt;u8&gt;,\n    balance: T::Balance,\n    owner: T::AccountId,\n}\n</code></pre>\n\n<p>I should be able to compile a generic struct.</p>\n"}, {"tags": ["parsing", "rust", "serde"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1547205895, "post_id": 54145531, "comment_id": 95122278, "body": "Use <code>serde</code> (!)."}, {"owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547210528, "post_id": 54145531, "comment_id": 95124631, "body": "So I have used serde a lot for custom serialization but never for deserialization. I&#39;m not sure where to start. <a href=\"https://serde.rs/impl-deserializer.html\" rel=\"nofollow noreferrer\">serde.rs/impl-deserializer.html</a> is quite a mouthful."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547211235, "post_id": 54145531, "comment_id": 95124979, "body": "Do you really need a new deserializer or can you use one of the <a href=\"https://docs.rs/serde/1.0.84/serde/#data-formats\" rel=\"nofollow noreferrer\">existing ones</a>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547211598, "post_id": 54145531, "comment_id": 95125165, "body": "You might also consider using nom or pest"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1547212851, "post_id": 54145531, "comment_id": 95125737, "body": "Do you have the file in JSON format or the exact like in the example?"}, {"owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "edited": false, "score": 0, "creation_date": 1547213367, "post_id": 54145531, "comment_id": 95125992, "body": "Exactly like the example"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547260700, "post_id": 54145531, "comment_id": 95143383, "body": "@hellow <code>serde</code> is not a parsing library."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547275240, "post_id": 54145531, "comment_id": 95145062, "body": "@Stargateur, never mentioned such \ud83d\ude09"}], "answers": [{"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 2, "last_activity_date": 1547243536, "creation_date": 1547243536, "answer_id": 54154533, "question_id": 54145531, "link": "https://stackoverflow.com/questions/54145531/best-way-to-deserialize-a-key-value-list-of-strings-in-rust/54154533#54154533", "title": "Best way to deserialize a key=value list of strings in Rust", "body": "<p>A way to generalize for multiple target structs may be to use <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">serde</a>. </p>\n\n<p>In case of a custom format a deserializer have to be implemented,\nbut instead of such implementation\nit is worth considering a community supported data format when the custom format is a subset of or it is similar to the standard.</p>\n\n<p>It seems that your format is a subset of <a href=\"https://github.com/toml-lang/toml\" rel=\"nofollow noreferrer\">TOML</a> format: if this is the case use <a href=\"https://github.com/alexcrichton/toml-rs\" rel=\"nofollow noreferrer\">toml</a>.</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Data {\n    field1: Option&lt;String&gt;,\n    field2: Option&lt;u32&gt;,\n    field3: Option&lt;bool&gt;,\n    field4: Option&lt;std::net::Ipv4Addr&gt;\n}\n\nfn main() {\n    let serialized = r#\"\nfield1=\"something\"\nfield2=556\nfield3=true\nfield4=\"10.0.0.1\"\n\"#;\n\n    let deserialized: Data = toml::from_str(&amp;serialized).unwrap();\n    println!(\"{:?}\", deserialized);\n\n}\n</code></pre>\n\n<p>If your format is not exactly \"standard\" compatible look for a way to transform the encoded data before deserializing: for example if <code>field1</code> and <code>field4</code> are not quoted strings a <a href=\"https://docs.rs/regex/1.1.0/regex/\" rel=\"nofollow noreferrer\">regex</a> based pattern substitution may works:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\n\nuse std::borrow::Cow;\nuse regex::{Captures, Regex};\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Data {\n    field1: Option&lt;String&gt;,\n    field2: Option&lt;u32&gt;,\n    field3: Option&lt;bool&gt;,\n    field4: Option&lt;std::net::Ipv4Addr&gt;,\n}\n\nfn reformat_string(before: &amp;str) -&gt; Cow&lt;str&gt; {\n    let matcher : Regex = Regex::new(\n            r\"(?P&lt;f&gt;field1|field4)=(?P&lt;val&gt;[\\w.]+)\"\n            ).unwrap();\n\n    matcher.replace_all(before, |cap: &amp;Captures| {\n        let mut buff = String::new();\n        if &amp;cap[1] == \"field1\" || &amp;cap[1] == \"field4\" {\n            cap.expand(\"$f='$val'\", &amp;mut buff);\n        }\n        Cow::Owned(buff)\n    })\n}\n\n\nfn main() {\n    let serialized = r#\"\n    field1=something\n    field2=556\n    field3=true\n    field4=10.0.0.1\n    \"#;\n\n\n    let transformed = reformat_string(serialized);\n    let deserialized: Data = toml::from_str(&amp;transformed).unwrap();\n    println!(\"{:?}\", deserialized);\n}\n</code></pre>\n"}], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1179, "favorite_count": 0, "accepted_answer_id": 54154533, "answer_count": 1, "score": 3, "last_activity_date": 1547243536, "creation_date": 1547205782, "last_edit_date": 1547214094, "question_id": 54145531, "link": "https://stackoverflow.com/questions/54145531/best-way-to-deserialize-a-key-value-list-of-strings-in-rust", "title": "Best way to deserialize a key=value list of strings in Rust", "body": "<p>I have multiple structs that need to be deserialized from a String that is a bunch of lines with key value pairs which represent the struct's attributes.</p>\n\n<p>Example</p>\n\n<pre><code>field1=something\nfield2=556\nfield3=true\nfield4=10.0.0.1\n</code></pre>\n\n<p>The types for each field will always be the same, but are not always present. The order can also change.</p>\n\n<pre><code>struct Data {\n    field1: Option&lt;String&gt;,\n    field2: Option&lt;u32&gt;,\n    field3: Option&lt;bool&gt;,\n    field4: Option&lt;std::net::Ipv4Addr&gt;\n}\n</code></pre>\n\n<p>What is the best way to do this? Should I be using the <code>serde</code> crate?</p>\n\n<p>I know that I can do it manually like this (see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e16244e50492aa218217cb44d5f27cfe\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e16244e50492aa218217cb44d5f27cfe</a>)</p>\n\n<p>But how do I genericise this for multiple structs?</p>\n\n<pre><code>use std::net::Ipv4Addr;\nuse std::str::FromStr;\n\n#[derive(Debug)]\nstruct Data {\n    field1: Option&lt;String&gt;,\n    field2: Option&lt;u32&gt;,\n    field3: Option&lt;bool&gt;,\n    field4: Option&lt;Ipv4Addr&gt;,\n}\n\nfn main() {\n    let mut s = \"field1=something\nfield2=556\nfield3=true\nfield4=10.0.0.1\"\n        .to_string();\n\n    let mut field1 = None;\n    let mut field2 = None;\n    let mut field3 = None;\n    let mut field4 = None;\n\n    let lines: Vec&lt;_&gt; = s.split(\"\\n\").collect();\n\n    for line in lines {\n        let pair: Vec&lt;_&gt; = line.splitn(2, \"=\").collect();\n        let key = pair[0];\n        let value = pair[1];\n\n        match key {\n            \"field1\" =&gt; {\n                field1 = Some(value.to_owned());\n            }\n            \"field2\" =&gt; {\n                field2 = Some(u32::from_str(value).unwrap());\n            }\n            \"field3\" =&gt; {\n                field3 = match value {\n                    \"true\" =&gt; Some(true),\n                    \"false\" =&gt; Some(false),\n                    _ =&gt; None\n                };\n            }\n            \"field4\" =&gt; {\n                field4 = Some(Ipv4Addr::from_str(value).unwrap());\n            }\n            _ =&gt; {}\n        }\n    }\n\n    println!(\n        \"{:?}\",\n        Data {\n            field1,\n            field2,\n            field3,\n            field4\n        }\n    );\n}\n</code></pre>\n"}, {"tags": ["vector", "rust", "append", "slice"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1547193993, "post_id": 54142528, "comment_id": 95116093, "body": "Can you please explain what your desired output is? What is wrong with the example code you were giving? What do you want to look <code>a</code> and <code>b</code> in the end? Do you want a new vector without modifying the others?"}, {"owner": {"reputation": 55, "user_id": 7760737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JZhQl.jpg?s=128&g=1", "display_name": "wllenyj", "link": "https://stackoverflow.com/users/7760737/wllenyj"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547194141, "post_id": 54142528, "comment_id": 95116136, "body": "@hellow I want var ab and var ba, how can i do??"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547194204, "post_id": 54142528, "comment_id": 95116161, "body": "Can you please answer my question and not asking a new one."}, {"owner": {"reputation": 55, "user_id": 7760737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JZhQl.jpg?s=128&g=1", "display_name": "wllenyj", "link": "https://stackoverflow.com/users/7760737/wllenyj"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547194328, "post_id": 54142528, "comment_id": 95116219, "body": "I want, ab = a + b, not a = a + b"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547194462, "post_id": 54142528, "comment_id": 95116281, "body": "Please answer <b>all</b> of my questions, because it is important on how to solve this problem."}, {"owner": {"reputation": 55, "user_id": 7760737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JZhQl.jpg?s=128&g=1", "display_name": "wllenyj", "link": "https://stackoverflow.com/users/7760737/wllenyj"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547194517, "post_id": 54142528, "comment_id": 95116298, "body": "Do you want a new vector without modifying the others? I think should Yes."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1547194568, "creation_date": 1547194568, "answer_id": 54142666, "question_id": 54142528, "link": "https://stackoverflow.com/questions/54142528/how-can-i-concatenate-two-slices-or-two-vectors-and-still-have-access-to-the-ori/54142666#54142666", "title": "How can I concatenate two slices or two vectors and still have access to the original values?", "body": "<p>There is no constructor of <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\">Vec</a> directly appending two slices.</p>\n\n<p>The functionality is not fundamental, as you can implement it yourself:</p>\n\n<pre><code>let ab = {\n    let mut r = a.clone();\n    r.extend_from_slice(&amp;b);\n    r\n};\n</code></pre>\n\n<p>If you often find yourself performing this operation, you may prefer to write a function to do so:</p>\n\n<pre><code>fn cat&lt;T: Clone&gt;(a: &amp;[T], b: &amp;[T]) -&gt; Vec&lt;T&gt; {\n    let mut v = Vec::with_capacity(a.len() + b.len());\n    v.extend_from_slice(a);\n    v.extend_from_slice(b);\n    v\n}\n</code></pre>\n\n<p>And then you'll be able to do: <code>let ab = cat(&amp;a, &amp;b);</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 7, "last_activity_date": 1547204897, "last_edit_date": 1547204897, "creation_date": 1547194678, "answer_id": 54142687, "question_id": 54142528, "link": "https://stackoverflow.com/questions/54142528/how-can-i-concatenate-two-slices-or-two-vectors-and-still-have-access-to-the-ori/54142687#54142687", "title": "How can I concatenate two slices or two vectors and still have access to the original values?", "body": "<p>You can <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.chain\" rel=\"nofollow noreferrer\"><code>chain</code></a> your iterators:</p>\n\n<pre><code>fn main() {\n    let a = vec![1, 2, 3];\n    let b = vec![4, 5, 6];\n\n    // Don't consume the original vectors and clone the items:\n    let ab: Vec&lt;_&gt; = a.iter().chain(&amp;b).cloned().collect();\n\n    // Consume the original vectors. The items do not need to be cloneable:\n    let ba: Vec&lt;_&gt; = b.into_iter().chain(a).collect();\n\n    assert_eq!(ab, [1, 2, 3, 4, 5, 6]);\n    assert_eq!(ba, [4, 5, 6, 1, 2, 3]);\n}\n</code></pre>\n\n<p>Note that the iterator knows the number of items that it yields, so that <code>collect</code> can allocate directly the right amount of memory:</p>\n\n<pre><code>fn main() {\n    let a = vec![1, 2, 3];\n    let b = vec![4, 5, 6];\n\n    let ba = b.into_iter().chain(a);\n    assert_eq!(ba.size_hint(), (6, Some(6)));\n\n    let ba: Vec&lt;_&gt; = ba.collect();\n    assert_eq!(ba, [4, 5, 6, 1, 2, 3]);\n}\n</code></pre>\n"}], "owner": {"reputation": 55, "user_id": 7760737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JZhQl.jpg?s=128&g=1", "display_name": "wllenyj", "link": "https://stackoverflow.com/users/7760737/wllenyj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2032, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1547404964, "creation_date": 1547193887, "last_edit_date": 1547404964, "question_id": 54142528, "link": "https://stackoverflow.com/questions/54142528/how-can-i-concatenate-two-slices-or-two-vectors-and-still-have-access-to-the-ori", "title": "How can I concatenate two slices or two vectors and still have access to the original values?", "body": "<p>I have two slice or vectors and I want to add them, as demonstrated here in Golang:</p>\n\n<pre class=\"lang-go prettyprint-override\"><code>a := []byte{1, 2, 3}\nb := []byte{4, 5, 6}\nab := append(a, b...)\nba := append(b, a...)\n</code></pre>\n\n<p>How can I do that in Rust? I found some other questions, such as:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/29998515/whats-the-idiomatic-way-to-append-a-slice-to-a-vector\">What&#39;s the idiomatic way to append a slice to a vector?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/40792801/best-way-to-concatenate-vectors-in-rust\">Best way to concatenate vectors in Rust</a></li>\n</ul>\n\n<p>but, all of their best answer is <code>a += b</code>, and not <code>ab = a + b</code>.</p>\n\n<pre><code>let mut a = vec![1, 2, 3];\nlet mut b = vec![4, 5, 6];\n\na.append(&amp;mut b);\n\nassert_eq!(a, [1, 2, 3, 4, 5, 6]);\nassert_eq!(b, []);\n</code></pre>\n\n<p>Or is there maybe a function like <code>Vec::append(a, b)</code> in Rust?  </p>\n"}, {"tags": ["python", "rust", "cpython", "python-cffi"], "answers": [{"tags": [], "owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "is_accepted": true, "score": 4, "last_activity_date": 1547191034, "last_edit_date": 1547191034, "creation_date": 1547188548, "answer_id": 54141486, "question_id": 54140410, "link": "https://stackoverflow.com/questions/54140410/rust-struct-into-pyobject-in-rust-cpython/54141486#54141486", "title": "Rust struct into PyObject in rust-cpython", "body": "<p>My compilation error said I needed to implement the ToPyObject trait on my struct.\nTo represent my struct in one of the PyObject types, I decided to use a PyDict.</p>\n\n<p>I looked at how rust-cpython does it for <a href=\"https://dgrunwald.github.io/rust-cpython/doc/src/cpython/objects/dict.rs.html#129-143\" rel=\"nofollow noreferrer\">HashMap</a> and I just copied it over.</p>\n\n<pre><code>impl ToPyObject for Block {\n    type ObjectType = PyDict;\n\n    fn to_py_object(&amp;self, py: Python) -&gt; PyDict {\n        let dict = PyDict::new(py);\n        dict.set_item(py, \"start\", self.start).unwrap();\n        dict.set_item(py, \"stop\", self.stop).unwrap();\n\n        dict\n    }\n}\n</code></pre>\n\n<p>This is kind of a hack but it allows me to pass data with named fields as keys.</p>\n"}], "owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 380, "favorite_count": 1, "accepted_answer_id": 54141486, "answer_count": 1, "score": 3, "last_activity_date": 1547191034, "creation_date": 1547181178, "question_id": 54140410, "link": "https://stackoverflow.com/questions/54140410/rust-struct-into-pyobject-in-rust-cpython", "title": "Rust struct into PyObject in rust-cpython", "body": "<p>I am using rust-cpython to write functions in Rust that is callable in Python.</p>\n\n<p>I have an existing struct that is used as an output. How to I make this into a PyObject that rust-cpython can understand?</p>\n\n<p>My struct looks like this:</p>\n\n<pre><code>struct Block {\n    start: i32,\n    stop: i32,\n}\n</code></pre>\n"}, {"tags": ["rust", "gfortran"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1547169444, "post_id": 54139004, "comment_id": 95109768, "body": "binary != library"}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 0, "creation_date": 1547169524, "post_id": 54139004, "comment_id": 95109785, "body": "The linker is looking for the libgfortran library, not the gfortran executable."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1547190203, "post_id": 54139004, "comment_id": 95114636, "body": "(I hope this works on mac as well) type <code>ldconfig -p | grep fortran</code> and put it into your question please."}, {"owner": {"reputation": 61601, "user_id": 1203556, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/aca772bc8ed79a86894211c7efd920aa?s=128&d=identicon&r=PG", "display_name": "Tampa", "link": "https://stackoverflow.com/users/1203556/tampa"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547218261, "post_id": 54139004, "comment_id": 95128631, "body": "@hellow I added"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547405905, "post_id": 54139004, "comment_id": 95173259, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/40602708/155423\">Linking Rust application with a dynamic library not in the runtime linker search path</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/54139004/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1548175745, "post_id": 54139004, "comment_id": 95445875, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/40602708/linking-rust-application-with-a-dynamic-library-not-in-the-runtime-linker-search\">Linking Rust application with a dynamic library not in the runtime linker search path</a>"}], "answers": [{"tags": [], "owner": {"reputation": 4254, "user_id": 931738, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/kUCou.jpg?s=128&g=1", "display_name": "patriques", "link": "https://stackoverflow.com/users/931738/patriques"}, "is_accepted": false, "score": 0, "last_activity_date": 1581416355, "creation_date": 1581416355, "answer_id": 60166611, "question_id": 54139004, "link": "https://stackoverflow.com/questions/54139004/how-do-i-resolve-library-not-found-for-lgfortran-when-compiling-a-rust-applic/60166611#60166611", "title": "How do I resolve &quot;library not found for -lgfortran&quot; when compiling a Rust application on macOS?", "body": "<p>Check first if any of the env variables are set</p>\n\n<ul>\n<li><strong>DYLD_LIBRARY_PATH</strong></li>\n<li><strong>DYLD_FALLBACK_LIBRARY_PATH</strong></li>\n</ul>\n\n<p>These variables tell the compiler where to look for libraries installed on the system. Built-in libraries are usually placed in <code>/usr/lib</code>, and <em>homebrew</em> places them in <code>/usr/local/lib</code>. So these should be in your lib path.</p>\n\n<p>If for some reason you cant find your library there you can try </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>export DYLD_LIBARY_PATH=$DYLD_LIBARY_PATH:/usr/local/Cellar/gcc/8.2.0/lib/gcc/8\n</code></pre>\n\n<p>and if that does not work try with the other variables. </p>\n"}], "owner": {"reputation": 61601, "user_id": 1203556, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/aca772bc8ed79a86894211c7efd920aa?s=128&d=identicon&r=PG", "display_name": "Tampa", "link": "https://stackoverflow.com/users/1203556/tampa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2041, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1581416355, "creation_date": 1547168256, "last_edit_date": 1547405848, "question_id": 54139004, "link": "https://stackoverflow.com/questions/54139004/how-do-i-resolve-library-not-found-for-lgfortran-when-compiling-a-rust-applic", "title": "How do I resolve &quot;library not found for -lgfortran&quot; when compiling a Rust application on macOS?", "body": "<p>I am trying to build a Rust app and I get the below when trying to build.  This happened after I installed ndarray-linalg and ndarray.</p>\n\n<p>I installed gcc and openvc.  I am on macOS.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> = note: ld: library not found for -lgfortran\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<p>How do I resolve this?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>which gfortran\n/usr/local/bin/gfortran\n</code></pre>\n\n<p>I found the library here:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ls /usr/local/Cellar/gcc/8.2.0/lib/gcc/8/libgfortran.*\n/usr/local/Cellar/gcc/8.2.0/lib/gcc/8/libgfortran.5.dylib    \n/usr/local/Cellar/gcc/8.2.0/lib/gcc/8/libgfortran.dylib\n/usr/local/Cellar/gcc/8.2.0/lib/gcc/8/libgfortran.a      \n/usr/local/Cellar/gcc/8.2.0/lib/gcc/8/libgfortran.spec\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>ldconfig -p | grep fortran\n-bash: ldconfig: command not found\n</code></pre>\n\n<p>And also ran the below:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>brew reinstall gcc\n</code></pre>\n\n<p>How can I make sure Rust will find it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1547163050, "post_id": 54138370, "comment_id": 95108271, "body": "&quot;Right now this is just single threaded so nothing needs to be thread-safe&quot; \u2192 you can have unsafe programs with multiple mutable references to the same object without needing threads (classical example: you iterate on a vector and try to push some element to it in your loop, common UB in C++), so Rust forbids it."}, {"owner": {"reputation": 371, "user_id": 5921433, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zjNTV.jpg?s=128&g=1", "display_name": "Nate", "link": "https://stackoverflow.com/users/5921433/nate"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1547163878, "post_id": 54138370, "comment_id": 95108498, "body": "Yeah but there&#39;s got to be some way to do this otherwise a lot of applications become very difficult. Thats why rust has wrapper types in the first place."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547190408, "post_id": 54138370, "comment_id": 95114706, "body": "Related: <a href=\"https://stackoverflow.com/questions/51222712/why-is-it-possible-to-have-multiple-mutable-references-with-static-lifetime-in-s\" title=\"why is it possible to have multiple mutable references with static lifetime in s\">stackoverflow.com/questions/51222712/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547190592, "post_id": 54138370, "comment_id": 95114763, "body": "Also related: <a href=\"https://users.rust-lang.org/t/why-cant-we-have-multiple-mut/23853\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/why-cant-we-have-multiple-mut/23853</a>"}], "answers": [{"tags": [], "owner": {"reputation": 12588, "user_id": 1041090, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ad3242d2f9f6330e556cf6f833b41d1?s=128&d=identicon&r=PG", "display_name": "Richard Smith", "link": "https://stackoverflow.com/users/1041090/richard-smith"}, "is_accepted": true, "score": 3, "last_activity_date": 1547409112, "last_edit_date": 1547409112, "creation_date": 1547177916, "answer_id": 54140073, "question_id": 54138370, "link": "https://stackoverflow.com/questions/54138370/how-can-one-array-contain-multiple-mutable-references-to-the-same-object/54140073#54140073", "title": "How can one array contain multiple mutable references to the same object?", "body": "<p>The simplest option would be to use <code>Rc&lt;RefCell&lt;Structure&gt;&gt;</code> instead of <code>Box&lt;Structure&gt;</code>.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"nofollow noreferrer\"><code>Rc&lt;T&gt;</code></a> supports shared ownership of a value of type <code>T</code>, which lets you have multiple pointers to the same object with automatic lifetime management. <code>Rc&lt;T&gt;</code> is not thread-safe; you can change to using <code>Arc</code> instead if you later find you need thread-safety.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/cell/index.html\" rel=\"nofollow noreferrer\"><code>RefCell&lt;T&gt;</code></a> allows you to enforce the Rust borrowing rules (that is, that there can be either one <code>&amp;mut</code> borrow or any number of <code>&amp;</code> borrows) at runtime rather than at compile time: this means it's OK to have multiple paths by which you could potentially mutate the same object, so long as you don't actually do so.</p>\n\n<p>I've put a complete example up on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=28b28f04005a56372c12f3203d300863\" rel=\"nofollow noreferrer\">playground</a>. Note that this uses <code>.borrow()</code> and <code>.borrow_mut()</code>, which will panic if you actually end up violating the borrowing rules (e.g., by mutably borrowing the same <code>Structure</code> multiple times at once).</p>\n"}], "owner": {"reputation": 371, "user_id": 5921433, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zjNTV.jpg?s=128&g=1", "display_name": "Nate", "link": "https://stackoverflow.com/users/5921433/nate"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 387, "favorite_count": 0, "closed_date": 1547410591, "accepted_answer_id": 54140073, "answer_count": 1, "score": 1, "last_activity_date": 1547410608, "creation_date": 1547162726, "last_edit_date": 1547409165, "question_id": 54138370, "link": "https://stackoverflow.com/questions/54138370/how-can-one-array-contain-multiple-mutable-references-to-the-same-object", "closed_reason": "Duplicate", "title": "How can one array contain multiple mutable references to the same object?", "body": "<p>I'm making a tile-based game with structures that span multiple tiles. Every tile under the structure has to have a mutable reference to that structure. For a structure that spans two tiles, the 2D array that represents the map has to simultaneously contain two mutable references to the structure.</p>\n\n<p>I also have a list that mutably owns all my structures (for iteration)</p>\n\n<p>I tried this with <code>&amp;mut</code> and failed:</p>\n\n<pre><code>let mut all_structures: Vec&lt;Box&lt;Structure&gt;&gt; = Vec::new();\nlet mut grid: [[Vec&lt;&amp;mut Box&lt;Structure&gt;&gt;; 4]; 4] = Default::default(); // accessed [y][x]\n\nlet mut house: Box&lt;Structure&gt; = Box::new(House { });\ngrid[1][1].push(&amp;mut house);\ngrid[1][2].push(&amp;mut house);\nall_structures.push(house);\n</code></pre>\n\n<p>with error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `house` as mutable more than once at a time\n  --&gt; src/main.rs:21:21\n   |\n20 |     grid[1][1].push(&amp;mut house);\n   |                     ---------- first mutable borrow occurs here\n21 |     grid[1][2].push(&amp;mut house);\n   |                ---- ^^^^^^^^^^ second mutable borrow occurs here\n   |                |\n   |                first borrow later used by call\n</code></pre>\n\n<p>Right now this is just single threaded so nothing needs to be thread-safe</p>\n\n<p>I put the code on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;code=trait%20Structure%20%7B%0A%20%20%20%20%0A%7D%0A%0Astruct%20House%20%7B%0A%20%20%20%20%0A%7D%0Aimpl%20Structure%20for%20House%20%7B%0A%20%20%20%20%0A%7D%0A%0A%0Afn%20main()%20%7B%0A%20%20%20%20let%20mut%20all_structures%3A%20Vec%3CBox%3CStructure%3E%3E%20%3D%20Vec%3A%3Anew()%3B%0A%20%20%20%20let%20mut%20grid%3A%20%5B%5BVec%3C%26mut%20Box%3CStructure%3E%3E%3B%204%5D%3B%204%5D%20%3D%20Default%3A%3Adefault()%3B%20%2F%2F%20%5By%5D%5Bx%5D%0A%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20let%20mut%20house%3A%20Box%3CStructure%3E%20%3D%20Box%3A%3Anew(House%20%7B%20%7D)%3B%0A%20%20%20%20grid%5B1%5D%5B1%5D.push(%26mut%20house)%3B%0A%20%20%20%20grid%5B1%5D%5B2%5D.push(%26mut%20house)%3B%0A%20%20%20%20all_structures.push(house)%3B%0A%0A%0A%20%20%20%20println!(%22Hello%2C%20world!%22)%3B%0A%7D%0A\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["function", "rust", "prototype", "terminology"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1547139331, "post_id": 54133390, "comment_id": 95098332, "body": "I interpret it to mean a function signature in a trait declaration, without a default body"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547139590, "post_id": 54133390, "comment_id": 95098467, "body": "more like prototype in C but without the inconvenient ;)"}], "answers": [{"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 10, "last_activity_date": 1547139311, "creation_date": 1547139311, "answer_id": 54133472, "question_id": 54133390, "link": "https://stackoverflow.com/questions/54133390/what-is-a-function-prototype-in-rust/54133472#54133472", "title": "What is a function prototype in Rust?", "body": "<blockquote>\n  <p>However, that doesn't seem to match the usage above; every function definition starts with the function's signature, so it wouldn't make sense to say that putting the attribute on the signature does nothing, because that's what you're doing when you're putting the attribute on a function.</p>\n</blockquote>\n\n<p>Yes, every function starts with a signature, but not every signature is part of a function definition. That is, it is possible to have a signature, but no body (in a trait for example) and that's what is meant by \"prototype\" in the documentation you cited. Something like this:</p>\n\n<pre><code>trait Foo {\n    #[inline] // This annotation does nothing\n    fn foo();\n}\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 620, "favorite_count": 0, "accepted_answer_id": 54133472, "answer_count": 1, "score": 7, "last_activity_date": 1547144996, "creation_date": 1547138990, "last_edit_date": 1592644375, "question_id": 54133390, "link": "https://stackoverflow.com/questions/54133390/what-is-a-function-prototype-in-rust", "title": "What is a function prototype in Rust?", "body": "<p>I wanted to understand the behaviour of the <code>#[inline]</code> attribute in Rust, so I was reading through <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"noreferrer\">the Attributes section of The Rust Reference</a>. It was very helpful, but I found this part of the description confusing (emphasis mine):</p>\n<blockquote>\n<p>The <em><code>inline</code></em> attribute suggests to the compiler that it should place a copy of the attributed function in the caller, rather than generating code to call the function where it is defined.</p>\n<p><strong>This attribute can be used on functions and function prototypes, although it does not do anything on function prototypes.</strong></p>\n</blockquote>\n<p>This caveat is repeated for the <code>#[cold]</code> attribute.</p>\n<p>I've never heard the term &quot;function prototype&quot; used with respect to Rust. I know that such a concept exists in JavaScript, but JavaScript's and Rust's object and type systems are very different! What does it mean here?</p>\n<p>Searching further, I found two mentions of function prototypes in <a href=\"https://doc.rust-lang.org/error-index.html\" rel=\"noreferrer\">the Error Index</a>:</p>\n<blockquote>\n<h2>E0034</h2>\n<p>The compiler doesn't know what method to call because more than one method has the same prototype.</p>\n</blockquote>\n\n<blockquote>\n<h2>E0580</h2>\n<p>The <code>main</code> function was incorrectly declared. The <code>main</code> function prototype should never take arguments.</p>\n</blockquote>\n<p>In this case, &quot;function prototype&quot; seems to mean something like &quot;function signature&quot; -- the names, arguments, and types that make up a function's external interface. This also appears to be <a href=\"https://en.wikipedia.org/wiki/Function_prototype\" rel=\"noreferrer\">what it means in the context of C/C++</a>. However, that doesn't seem to match the usage above; every function definition starts with the function's signature, so it wouldn't make sense to say that putting the attribute on the signature does nothing, because that's what you're doing when you're putting the attribute on a function.</p>\n<p>What does the term &quot;function prototype&quot; mean in the context of Rust?</p>\n"}, {"tags": ["rust", "benchmarking", "cpu-cache", "false-sharing"], "comments": [{"owner": {"reputation": 437, "user_id": 4284929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5651b6aefc2999bd4a4ca28c3cd35e6d?s=128&d=identicon&r=PG&f=1", "display_name": "mvlabat", "link": "https://stackoverflow.com/users/4284929/mvlabat"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547140134, "post_id": 54133092, "comment_id": 95098753, "body": "Do I? I thought I cloned only the reference counter (Arc)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547140311, "post_id": 54133092, "comment_id": 95098855, "body": "nvm, I didn&#39;t see <code>let arr = Arc::new(arr);</code>, <code>Arc::clone(&amp;from)</code> is more idiomatic"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547141014, "post_id": 54133092, "comment_id": 95099215, "body": "try something bigger that <code>16</code> and fix your code if I call your function with something bigger that <code>16</code> it&#39;s UB"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1547154398, "post_id": 54133092, "comment_id": 95105339, "body": "The C# code runs 100x more iterations than the Rust version, which runs very quickly compared to the author&#39;s numbers. Is it possible you&#39;re mostly just measuring how long it takes to spawn 4 threads?"}], "answers": [{"comments": [{"owner": {"reputation": 437, "user_id": 4284929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5651b6aefc2999bd4a4ca28c3cd35e6d?s=128&d=identicon&r=PG&f=1", "display_name": "mvlabat", "link": "https://stackoverflow.com/users/4284929/mvlabat"}, "edited": false, "score": 0, "creation_date": 1547200058, "post_id": 54141110, "comment_id": 95119009, "body": "Oh, I just realised I have some inconsistency between my local code and the code I uploaded to github and shared here. In my local code I wrote <code>*p = (*p).wrapping_mul(3)</code>, after I realised I really modified the pointer itself (compiler told me that multiplying them doesn&#39;t make much sense :) ). Anyway thanks for pointing this out. <code>UnsafeCell</code> and volatile operations are some new and interesting details for me, and they indeed did the trick! Until something else comes up, I&#39;m happy to mark your answer as accepted!"}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 6, "last_activity_date": 1547189482, "last_edit_date": 1547189482, "creation_date": 1547186345, "answer_id": 54141110, "question_id": 54133092, "link": "https://stackoverflow.com/questions/54133092/cant-reproduce-false-cache-line-sharing-problem-in-rust/54141110#54141110", "title": "Can&#39;t reproduce false cache line sharing problem in Rust", "body": "\n\n<p>Your first problem is that <code>*p.wrapping_add(3)</code> does arithmetic on the pointer, not on the integer.  The first iteration of the loop was loading the value three spaces after <code>p</code> and storing it at <code>p</code>, and Rust was optimizing away the other 999999 iterations of the loop as redundant.  You meant <code>(*p).wrapping_add(3)</code>.</p>\n\n<p>After that change, Rust optimizes the 1000000 additions by 3 into one addition by 3000000.  You can use <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.read_volatile\" rel=\"noreferrer\"><code>read_volatile</code></a> and <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.write_volatile\" rel=\"noreferrer\"><code>write_volatile</code></a> to avoid that optimization.</p>\n\n<p>Although these two changes are sufficient demonstrate the effect you\u2019re looking for in my test, note that using unsafe operations to mutate an immutably borrowed array is <a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"noreferrer\">undefined behavior</a>.  Rust is allowed to optimize under the assumption that <code>unsafe</code> code upholds certain invariants, which this code does not, so Rust would be entirely <a href=\"https://en.wikipedia.org/wiki/Undefined_behavior\" rel=\"noreferrer\">within its rights</a> to replace your code with anything it feels like.</p>\n\n<p>You presumably used immutable borrows to get around the restriction on copying mutable references and mutable pointers between threads.  Here\u2019s a less undefined way to get around that restriction, I think (although honestly, I won\u2019t be too surprised if someone replies to point out some way in which this is still wrong).</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>pub fn cache_line_sharing(arr: [i32; 128], pos: usize) -&gt; (i32, i32) {\n    struct SyncWrapper(UnsafeCell&lt;[i32; 128]&gt;);\n    unsafe impl Sync for SyncWrapper {}\n\n    assert_ne!(pos, 0);\n    let arr = Arc::new(SyncWrapper(UnsafeCell::new(arr)));\n    let handles: Vec&lt;_&gt; = (0..4)\n        .map(|thread_number| {\n            let arr = arr.clone();\n            let pos = thread_number * pos;\n            thread::spawn(move || unsafe {\n                let p: *mut i32 = &amp;mut (*arr.0.get())[pos];\n                for _ in 0..1_000_000 {\n                    p.write_volatile(p.read_volatile().wrapping_add(3));\n                }\n            })\n        })\n        .collect();\n\n    for handle in handles {\n        handle.join().unwrap();\n    }\n\n    let arr = unsafe { *arr.0.get() };\n    (arr[0], arr[1])\n}\n</code></pre>\n"}], "owner": {"reputation": 437, "user_id": 4284929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5651b6aefc2999bd4a4ca28c3cd35e6d?s=128&d=identicon&r=PG&f=1", "display_name": "mvlabat", "link": "https://stackoverflow.com/users/4284929/mvlabat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 1, "accepted_answer_id": 54141110, "answer_count": 1, "score": 4, "last_activity_date": 1547404794, "creation_date": 1547137999, "last_edit_date": 1547404794, "question_id": 54133092, "link": "https://stackoverflow.com/questions/54133092/cant-reproduce-false-cache-line-sharing-problem-in-rust", "title": "Can&#39;t reproduce false cache line sharing problem in Rust", "body": "<p>I'm trying to reproduce example 6 of the <a href=\"http://igoro.com/archive/gallery-of-processor-cache-effects/\" rel=\"nofollow noreferrer\">Gallery of Processor Cache Effects</a>.</p>\n\n<p>The article gives this function (in C#) as an example how to test false sharing:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>private static int[] s_counter = new int[1024];\nprivate void UpdateCounter(int position)\n{\n    for (int j = 0; j &lt; 100000000; j++)\n    {\n        s_counter[position] = s_counter[position] + 3;\n    }\n}\n</code></pre>\n\n<p>If we create threads passing to this function 0, 1, 2, 3 arguments it will take the computation a long time to finish (author got 4.3 seconds). If we pass, for instance, 16, 32, 48, 64, we'll get much nicer results (0.28 seconds).</p>\n\n<p>I've come up with the following function in Rust:</p>\n\n<pre><code>pub fn cache_line_sharing(arr: [i32; 128], pos: usize) -&gt; (i32, i32) {\n    let arr = Arc::new(arr);\n    let handles: Vec&lt;_&gt; = (0..4).map(|thread_number| {\n        let arr = arr.clone();\n        let pos = thread_number * pos;\n        thread::spawn(move || unsafe {\n            let p = (arr.as_ptr() as *mut i32).offset(pos as isize);\n            for _ in 0..1_000_000 {\n                *p = (*p).wrapping_add(3);\n            }\n        })\n    }).collect();\n\n    for handle in handles {\n        handle.join().unwrap();\n    }\n\n    (arr[0], arr[1])\n}\n</code></pre>\n\n<p>Benchmarking it with two sets of arguments (0, 1, 2, 3 and 0, 16, 32, 48) gives me almost identical results: 108.34 and 105.07 microseconds.</p>\n\n<p>I use the criterion crate for the benchmarks. I have a MacBook Pro 2015 with Intel i5-5257U CPU (2.70GHz). My system reports to have <code>64B</code> cache line size.</p>\n\n<p>If anybody wants to see my full benchmarking code, here are the links:\n- <a href=\"https://github.com/mvlabat/hello_perf/blob/92ebb2f3291d9b71feb17fe2990df70faab43164/src/lib.rs#L36\" rel=\"nofollow noreferrer\">lib.rs</a>\n- <a href=\"https://github.com/mvlabat/hello_perf/blob/92ebb2f3291d9b71feb17fe2990df70faab43164/benches/cache_lines.rs#L38\" rel=\"nofollow noreferrer\">cache_lines.rs</a></p>\n\n<p>I want to understand the problem and find the way to reproduce similar results as in the article.</p>\n"}, {"tags": ["generics", "rust", "constants"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547139887, "post_id": 54133015, "comment_id": 95098629, "body": "It&#39;s pretty difficult to answer this because it&#39;s incomplete, and there is so much wrong with your syntax. It&#39;s very difficult to understand what you are <i>trying</i> to do. I am guessing you didn&#39;t intend <code>impl&lt;T&gt; consts&lt;f32&gt; for T</code>, which means &quot;implement the trait <code>consts&lt;f32&gt;</code> for <i>every possible</i> type that could exist&quot;."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547139941, "post_id": 54133015, "comment_id": 95098653, "body": "At a guess, you may have intended: <code>impl consts&lt;f32&gt; for f32</code> and <code>impl consts&lt;f64&gt; for f64</code>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547140062, "post_id": 54133015, "comment_id": 95098716, "body": "Please consider providing a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. As it stands, I can&#39;t just copy your code to get the same error. For example, where is the line <code>let pr: T = consts::INGA;</code>? Is it in <code>main</code>? Is it in a function with a bound <code>T</code> type variable?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1547141151, "post_id": 54133015, "comment_id": 95099279, "body": "Do you think you could edit your question so that someone can copy the code and get the same error?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547408797, "post_id": 54133015, "comment_id": 95174096, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>Consts</code> instead, please."}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1547144717, "post_id": 54134706, "comment_id": 95101041, "body": "Actually this will not work, because with these trait bounds <code>fn cerf(...</code> will not be present for CMPS32 and CMPS64"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547409056, "post_id": 54134706, "comment_id": 95174165, "body": "Before you did this, how would you have expected the compiler to know that <i>for <b>any</b> type <code>T</code></i>, the trait was implemented for it?"}], "tags": [], "owner": {"reputation": 19, "user_id": 9970279, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/2mlwN.png?s=128&g=1", "display_name": "YakoYakoYokuYoku", "link": "https://stackoverflow.com/users/9970279/yakoyakoyokuyoku"}, "is_accepted": false, "score": 0, "last_activity_date": 1547408976, "last_edit_date": 1547408976, "creation_date": 1547144258, "answer_id": 54134706, "question_id": 54133015, "link": "https://stackoverflow.com/questions/54133015/how-to-select-a-constant-according-to-a-generic-in-rust/54134706#54134706", "title": "How to select a constant according to a generic in Rust?", "body": "<p>I got it by adding <code>+ consts&lt;T&gt;</code> in the <code>CMPS</code> implementation and changing <code>let pr: T = consts::INGA;</code> to <code>let pr = T::INGA</code> resulting in the following: </p>\n\n<pre><code>impl&lt;T: Clone + ntraits::Float + ntraits::FromPrimitive + consts&lt;T&gt;&gt; CMPS&lt;T&gt; {\n    pub fn cerf(a: T, b: T) -&gt; CMPS&lt;T&gt; {\n        let pr = T::INGA;\n        CMPS { a: rtr, b: rti }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 19, "user_id": 9970279, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/2mlwN.png?s=128&g=1", "display_name": "YakoYakoYokuYoku", "link": "https://stackoverflow.com/users/9970279/yakoyakoyokuyoku"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 166, "favorite_count": 1, "answer_count": 1, "score": -1, "last_activity_date": 1547408976, "creation_date": 1547137717, "last_edit_date": 1547408863, "question_id": 54133015, "link": "https://stackoverflow.com/questions/54133015/how-to-select-a-constant-according-to-a-generic-in-rust", "title": "How to select a constant according to a generic in Rust?", "body": "<p>I'm trying to work on a math library that has constants and functions. What I need to do to bind a value to a trait that uses generics?</p>\n\n<p>The functions in my Rust 1.30.0 project that employs generics as parameters and I need the constants to match the same type of <code>T</code> so I can operate with them in a function (here I am also using the num crate):</p>\n\n<pre><code>use num_traits as ntraits; // 0.2.6\nuse std::{f32, f64};\n\npub trait consts&lt;T&gt; {\n    const INGA: T;\n}\n\nimpl&lt;T&gt; consts&lt;f32&gt; for T {\n    const INGA: f32 = f32::consts::FRAC_2_SQRT_PI;\n}\n\nimpl&lt;T&gt; consts&lt;f64&gt; for T {\n    const INGA: f64 = f64::consts::FRAC_2_SQRT_PI;\n}\n\npub struct CMPS&lt;T&gt; {\n    pub a: T,\n    pub b: T,\n}\n\npub type CMPS32 = CMPS&lt;f32&gt;;\npub type CMPS64 = CMPS&lt;f64&gt;;\n\nimpl&lt;T: Clone + ntraits::Float + ntraits::FromPrimitive&gt; CMPS&lt;T&gt; {\n\n    pub fn cerf(a: T, b: T) -&gt; CMPS&lt;T&gt; {\n        let pr: T = consts::INGA;\n        let rtr = a;\n        let rti = b;\n        CMPS { a: rtr, b: rti }\n    }\n}\n</code></pre>\n\n<p>But when I try to perform this binding, expecting <code>pr</code> to be the same type as <code>T</code> and match the value of <code>INGA</code> as this:</p>\n\n<pre><code>let pr: T = consts::INGA;\n</code></pre>\n\n<p>It only outputs errors like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `_: consts&lt;T&gt;`\n  --&gt; src/lib.rs:27:21\n   |\n27 |         let pr: T = consts::INGA;\n   |                     ^^^^^^^^^^^^\n   |\nnote: required by `consts::INGA`\n  --&gt; src/lib.rs:5:5\n   |\n5  |     const INGA: T;\n   |     ^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust", "filesystems", "separator", "os-agnostic"], "comments": [{"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 6, "creation_date": 1547123998, "post_id": 54128836, "comment_id": 95088934, "body": "You also might prefer to use <code>PathBuf</code> and/or <code>Path</code> for these kind of things. Especially <code>Path.join</code> or <code>PathBuf.push</code>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1547131801, "post_id": 54128836, "comment_id": 95093640, "body": "Note that you can use <code>&#47;</code> as a separator on virtually every platform inlcuding Windows."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 12, "last_activity_date": 1547126073, "last_edit_date": 1547126073, "creation_date": 1547125265, "answer_id": 54129284, "question_id": 54128836, "link": "https://stackoverflow.com/questions/54128836/how-to-access-the-file-path-separator-for-the-current-platform/54129284#54129284", "title": "How to access the file path separator for the current platform?", "body": "<p>Instead of using custom operations with separator one should use <code>Pathbuf</code> or <code>Path</code> for this problem. </p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.join\" rel=\"noreferrer\"><code>Path.join</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.push\" rel=\"noreferrer\"><code>Pathbuf.push</code></a></li>\n</ul>\n\n\n\n<p>In case of platform specific separator one should use <a href=\"https://doc.rust-lang.org/std/path/constant.MAIN_SEPARATOR.html\" rel=\"noreferrer\">std::path::MAIN_SEPARATOR</a>.</p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1181, "favorite_count": 0, "accepted_answer_id": 54129284, "answer_count": 1, "score": 5, "last_activity_date": 1547200563, "creation_date": 1547123623, "last_edit_date": 1547200563, "question_id": 54128836, "link": "https://stackoverflow.com/questions/54128836/how-to-access-the-file-path-separator-for-the-current-platform", "title": "How to access the file path separator for the current platform?", "body": "<p>Are there any available option to get platform specific file separator in Rust?</p>\n\n<p>There can be different platform specific separators:</p>\n\n<pre><code>let separator = \"\\\\\" // Could be this.\nlet separator2 = \"/\" // Could be this.\nlet separator3 = \"//\" // Could be this.\n</code></pre>\n\n<p>I am looking like something following:</p>\n\n<pre><code>let env_independent_seperator = env::separator()\n</code></pre>\n\n<p>Then it may be the usage can be follows:</p>\n\n<pre><code>let folder = \"C\\\\Folder\\\\Path\";\nlet env_independent_separator = env::separator() // Looking something like this\nlet file_name = \"File.txt\";\nlet full_path = folder+ env_independent_separator + file_name;\n</code></pre>\n\n<p>Are there any <code>File::separator()</code> in Rust?</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547124229, "post_id": 54128646, "comment_id": 95089069, "body": "<i>&quot;This is currently not possible&quot;</i> Do you know if this will be possible in the future (e.g. there is an RFC ongoing, a unstable feature?)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1547125077, "post_id": 54128646, "comment_id": 95089501, "body": "@hellow With <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"nofollow noreferrer\">specialization</a>, you could do something like that. It is unlikely to be stabilised any time soon though."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1547125701, "post_id": 54128646, "comment_id": 95089879, "body": "@hellow For example, with specialization, you would be able to make a blanket impl of <code>Clipable</code> for all <code>T</code>, with <code>fn closed() { false }</code>, and then a <i>more specialized</i> impl for <code>T: PolygonLike</code> with <code>fn closed() { true }</code>."}, {"owner": {"reputation": 49, "user_id": 10411568, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/008bea691aafb866dcb7e402af4c3b42?s=128&d=identicon&r=PG&f=1", "display_name": "jsadusk", "link": "https://stackoverflow.com/users/10411568/jsadusk"}, "edited": false, "score": 0, "creation_date": 1547163461, "post_id": 54128646, "comment_id": 95108392, "body": "That could work. Maybe it&#39;d be better if the blanket implementation just panicked in closed(), and I had a specialization for both PolygonLike and OpenPathLike. It Is frustrating that the limited blanket implementation doesn&#39;t work, however. It really limits the ability to delegate from one trait to another."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1547122970, "creation_date": 1547122970, "answer_id": 54128646, "question_id": 54127117, "link": "https://stackoverflow.com/questions/54127117/how-to-work-around-conflicts-of-generic-implementations-of-traits-blanket-imple/54128646#54128646", "title": "How to work around conflicts of generic implementations of traits (blanket implementations)?", "body": "<p>This is currently not possible. You will need to implement <code>Clipable</code> for <code>Poly</code>, <code>PointVec</code>, and any others, individually.</p>\n\n<p>You might consider writing macros to make this less repetitive:</p>\n\n<pre><code>macro_rules! clipable_poly {\n    ($($ty: ty),+) =&gt; {\n        $(\n            impl PolygonLike for $ty {}\n\n            impl Clipable for $ty {\n                fn closed() -&gt; bool {\n                    true\n                }\n            }\n        )+\n    }   \n}\n\nmacro_rules! clipable_open {\n    ($($ty: ty),+) =&gt; {\n        $(\n            impl OpenPathLike for $ty {}\n\n            impl Clipable for $ty {\n                fn closed() -&gt; bool {\n                    false\n                }\n            }\n        )+\n    }   \n}\n\nclipable_poly!(Poly, Point);\nclipable_open!(PointVec, Path);\n</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 10411568, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/008bea691aafb866dcb7e402af4c3b42?s=128&d=identicon&r=PG&f=1", "display_name": "jsadusk", "link": "https://stackoverflow.com/users/10411568/jsadusk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 473, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1547410773, "creation_date": 1547117648, "last_edit_date": 1547410773, "question_id": 54127117, "link": "https://stackoverflow.com/questions/54127117/how-to-work-around-conflicts-of-generic-implementations-of-traits-blanket-imple", "title": "How to work around conflicts of generic implementations of traits (blanket implementations)?", "body": "<p>I'm coming from C++ and I'm running into issues with generic trait implemntations. </p>\n\n<p>I'm trying to build a geometry library that does some operation on both polygons and open paths, but behaves slightly different for each case. Ideally I want one implementation of a geometry operation as a method which can query the object it's operating on for a flag.</p>\n\n<p>I also want this library to work on any object that can look like a polygon or open path, not just my data types, so I want traits for <code>PolygonLike</code> and <code>OpenPathLike</code> that can be implemented on any type. I have code that looks like this:</p>\n\n<pre><code>trait Clipable {\n    fn closed() -&gt; bool;\n    fn geom_func(&amp;self) {\n        if Self::closed() {\n            println!(\"closed\");\n        } else {\n            println!(\"open\");\n        }\n    }\n}\n\ntrait PolygonLike {}\ntrait OpenPathLike {}\n\nstruct Point(f64, f64);\ntype PointVec = Vec&lt;Point&gt;;\nstruct Poly(PointVec);\nstruct Path(PointVec);\n\nimpl PolygonLike for Poly {}\nimpl OpenPathLike for PointVec {}\n\nimpl&lt;T&gt; Clipable for T\nwhere\n    T: PolygonLike,\n{\n    fn closed() -&gt; bool {\n        true\n    }\n}\n\nimpl&lt;T&gt; Clipable for T\nwhere\n    T: OpenPathLike,\n{\n    fn closed() -&gt; bool {\n        false\n    }\n}\n\nfn main() {\n    let pg = Poly(PointVec::new());\n    let op = Path(PointVec::new());\n    pg.geom_func();\n    op.geom_func();\n}\n</code></pre>\n\n<p>The code fails to compile with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `Clipable`:\n  --&gt; src/main.rs:28:1\n   |\n24 | impl&lt;T&gt; Clipable for T where T: PolygonLike {\n   | ------------------------------------------- first implementation here\n...\n28 | impl&lt;T&gt; Clipable for T where T: OpenPathLike {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation\n</code></pre>\n\n<p>I have read elsewhere that the <code>where</code> clause isn't used by the conflict checker, even though no type implements both <code>PolygonLike</code> and <code>OpenPathLike</code>. </p>\n\n<p>I get that this is because a consumer could just implement both those traits and break the library. What I don't get is how I can work around this.</p>\n\n<p>I have seen other posts where people have used newtypes to limit generic implementations, but I can't figure out how to make that work for my scenario.</p>\n"}, {"tags": ["rust", "gtk", "glade"], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 3960242, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/749a2f7cc6f70141ae5581bcd68d6c37?s=128&d=identicon&r=PG&f=1", "display_name": "Jan Lukas Gernert", "link": "https://stackoverflow.com/users/3960242/jan-lukas-gernert"}, "edited": false, "score": 0, "creation_date": 1547125499, "post_id": 54128687, "comment_id": 95089760, "body": "Not what I was hoping for, but thank you for explaining everything in such detail :)"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1547123136, "creation_date": 1547123136, "answer_id": 54128687, "question_id": 54125491, "link": "https://stackoverflow.com/questions/54125491/gtkeventbox-connect-signal-to-gaction-in-glade/54128687#54128687", "title": "GtkEventBox connect signal to GAction in Glade", "body": "<p>I don't think you can do that. <a href=\"https://developer.gnome.org/gtk3/stable/GtkActionable.html#GtkActionable.implementations\" rel=\"nofollow noreferrer\"><code>GtkActionable</code></a> is only implemented for widgets that have a clear user-activate action, such as buttons or menu items. In particular <code>GtkEventBox</code> does not implement it.</p>\n\n<p>And even if it did, this interface will only manage one event per class, the <em>activate</em> action, not the <code>enter-notify-event</code> you are interested in.</p>\n\n<p>So, I'm afraid that you'll have to keep manually connecting your event.</p>\n"}], "owner": {"reputation": 75, "user_id": 3960242, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/749a2f7cc6f70141ae5581bcd68d6c37?s=128&d=identicon&r=PG&f=1", "display_name": "Jan Lukas Gernert", "link": "https://stackoverflow.com/users/3960242/jan-lukas-gernert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "accepted_answer_id": 54128687, "answer_count": 1, "score": 2, "last_activity_date": 1547123136, "creation_date": 1547112302, "question_id": 54125491, "link": "https://stackoverflow.com/questions/54125491/gtkeventbox-connect-signal-to-gaction-in-glade", "title": "GtkEventBox connect signal to GAction in Glade", "body": "<p>I am trying to connect the <code>enter-notify-event</code> of an GtkEventBox to an attached GAction via Glade. Checking the running application with GtkInspector shows nothing connected to the <code>enter-notify-event</code> signal.</p>\n\n<p>I'm following <a href=\"https://blogs.gnome.org/jsparber/2018/12/26/i-fell-in-love-with-gaction/\" rel=\"nofollow noreferrer\">this blog post</a> which states:</p>\n\n<blockquote>\n  <p>You could also set the properties via the .ui file. When you replace the event handlers of clicks with actions you can really streamline your code base.</p>\n</blockquote>\n\n<p>So I think this should somehow be possible. It only mentions a click handler of a GtkButton, but I don't see why it should be different with other signals.</p>\n\n<p>Glade:</p>\n\n<p><img src=\"https://files.gitter.im/gtk-rs/gtk/MHwe/Screenshot-from-2019-01-09-20-27-02.png\" alt=\"glade\"></p>\n\n<p>Inspector:</p>\n\n<p><img src=\"https://files.gitter.im/gtk-rs/gtk/Te58/Screenshot-from-2019-01-09-20-44-16.png\" alt=\"inspector\"></p>\n\n<pre><code>&lt;object class=\"GtkEventBox\" id=\"service_row\"&gt;\n    &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n    &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n    &lt;signal name=\"enter-notify-event\" handler=\"test.show-arrow\" swapped=\"no\"/&gt;\n</code></pre>\n\n<p>(<a href=\"https://pastebin.com/3njP04LL\" rel=\"nofollow noreferrer\">complete UI file</a>)</p>\n\n<pre><code>let actions = SimpleActionGroup::new();\nlet show_arrow = SimpleAction::new(\"show-arrow\", None);\nactions.add_action(&amp;show_arrow);\nshow_arrow.connect_activate(move |_action, _data| {\n   println!(\"enter row2\");\n});\nrow.insert_action_group(\"test\", &amp;actions);\n// row.connect_enter_notify_event(move |_widget, _crossing| {\n//     actions.activate_action(\"show-arrow\", None);\n//     Inhibit(false)\n// });\n</code></pre>\n\n<p>Manually activating the GAction via code like in the commended out lines works just fine. And the action also shows up in the Inspector when looking at the EventBox.</p>\n\n<p>Any help is greatly appreciated :)</p>\n"}, {"tags": ["function", "rust", "lifetime"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547108823, "post_id": 54124341, "comment_id": 95080453, "body": "Unrelated to your actual problem, but you should take a look at <a href=\"https://doc.rust-lang.org/1.12.1/book/benchmark-tests.html\" rel=\"nofollow noreferrer\"><code>cargo bench</code></a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547109149, "post_id": 54124341, "comment_id": 95080609, "body": "Please use <code>cargo fmt</code> (for example at the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">playground</a>) to format your code according to the rust standards so it is easier to read for everybody."}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547109667, "post_id": 54124341, "comment_id": 95080874, "body": "@hellow Thanks for your advices too much. But <code>rustup</code> says that <code>rustfmt</code> is not able to use for &#39;x86_64-pc-windows-msvc&#39;...."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547110742, "post_id": 54124341, "comment_id": 95081403, "body": "Have you tried <code>rustup component add rustfmt</code>?"}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547118010, "post_id": 54124341, "comment_id": 95085684, "body": "Yes, it returns the message when I run it on a windows machine."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547120040, "post_id": 54124341, "comment_id": 95086816, "body": "Try <code>rustup self update</code>, <code>rustup update</code> and then <code>rustup component add rustfmt</code>"}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1547428935, "post_id": 54124341, "comment_id": 95178395, "body": "@hellow Sorry for late response. My <code>rustup</code> is <code>rustup 1.16.0 (beab5ac2b 2018-12-06)</code>, and update it. But I still get a message: <code>error: toolchain &#39;stable-x86_64-pc-windows-msvc&#39; does not contain component &#39;rustfmt&#39; for target &#39;x86_64-pc-windows-msvc&#39;</code>."}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1547116178, "post_id": 54125876, "comment_id": 95084576, "body": "Note that in some cases simply removing the lifetimes in the <code>Fn</code> signature is not enough. A trait bound like <code>Fn(&amp;T) -&gt; &amp;U</code> implicitly gets translated into <code>for&lt;&#39;a&gt; Fn(&amp;&#39;a T) -&gt; &amp;&#39;a U</code> by the compiler, using a <i>higher rank trait bound</i> and the rules of lifetime elision. If the function signature is <code>Fn(&amp;T, &amp;T) -&gt; &amp;U</code>, though, lifetime elision is not possible, and you need to specify the HRTB explicitly. See also <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">the HRTB chapter in the Nomicon</a>."}, {"owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "edited": false, "score": 0, "creation_date": 1547119702, "post_id": 54125876, "comment_id": 95086617, "body": "Thanks for your answer, I thought that I have to add all the lifetime identifiers."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1547120296, "post_id": 54125876, "comment_id": 95086962, "body": "@SvenMarnach note that I only said to remove the lifetimes for the function <i>parameters.</i> Return values should keep their explicit lifetimes."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "edited": false, "score": 0, "creation_date": 1547120469, "post_id": 54125876, "comment_id": 95087042, "body": "@QuietJoon it would be possible to add all the lifetime identifiers, but then you need to use different lifetimes as required. E.g. <code>for&lt;&#39;F_a&gt; Fn(&amp;&#39;F_a A&lt;&#39;Alg_a&gt;)</code> so that the compiler will know that <code>&#39;F_a</code> and <code>&#39;Alg_a</code> may be different."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1547123171, "post_id": 54125876, "comment_id": 95088503, "body": "Also please note that, <code>let a_str = &quot;ABC&quot;</code> has a <code>&#39;static</code> lifetime, and <code>&#39;static</code>  in this can case can be shrunk down to <code>&#39;Alg_a</code> (or <code>&#39;L_a</code>). For eg. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=299f223ae42ab4316e48ea7dd77e4b21\" rel=\"nofollow noreferrer\">this</a> would not work.  Rust 2018 allows anonymous lifetimes (<code>&#39;_</code>), especially where elisions could be confusing. We can use it to our advantage to fix this here. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=43a4ebe47a1a2656a160b0d605a5082e\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1547126707, "post_id": 54125876, "comment_id": 95090446, "body": "@VikramFugro thanks for the comments, edited the answer."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1547131587, "post_id": 54125876, "comment_id": 95093490, "body": "@Jmb It rarely makes sense to keep the lifetime for a return value while removing the explicit lifetime for the arguments."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1547192230, "post_id": 54125876, "comment_id": 95115425, "body": "@SvenMarnach ok, so what I meant is: \u201c<i>you should remove lifetimes for the function parameters, unless the return value is a reference that should have the same lifetime as one of the parameters or unless more than one parameter should share the same lifetime between them, in which case you should keep the lifetimes for those parameters and only remove the other parameter lifetimes</i>\u201d. But that&#39;s a bit of a mouthful so I concentrated on what&#39;s relevant for the question."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1547126663, "last_edit_date": 1547126663, "creation_date": 1547113582, "answer_id": 54125876, "question_id": 54124341, "link": "https://stackoverflow.com/questions/54124341/function-refered-from-the-stored-in-struct-does-not-give-the-ownership-up/54125876#54125876", "title": "Function refered from the stored in struct does not give the ownership up", "body": "<h1>Quick solution</h1>\n\n<p>You have too many lifetime specifiers. Remove the lifetimes for references in your function parameters. Eg. replace <code>alg1: &amp;'c Fn(&amp;'a A&lt;'a&gt;, &amp;'b B&lt;'b&gt;) -&gt; usize</code> with <code>alg1: &amp;'c Fn(&amp;A&lt;'a&gt;, &amp;B&lt;'b&gt;) -&gt; usize</code> (and similar changes to all functions (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=84fc5ae01c6b3937d113427d1772621d\" rel=\"nofollow noreferrer\">playground</a>).</p>\n\n<h1>Explanation</h1>\n\n<p>First, let's simplify your code a bit and rename some of the lifetimes so that we know which one we are talking about:</p>\n\n<pre><code>struct Alg&lt;'Alg_a, 'Alg_b&gt; {\n    alg1: &amp;'Alg_b Fn(&amp;'Alg_a A&lt;'Alg_a&gt;) -&gt; usize,\n}\n\nstruct A&lt;'A_a&gt; {\n    a_str: &amp;'A_a str,\n}\n\nfn length&lt;'L_a&gt;(a: &amp;'L_a A&lt;'L_a&gt;) -&gt; usize {\n    a.a_str.len()\n}\n\nfn main() {\n    let f_struct = Alg {\n        alg1: &amp;length,\n    };\n\n    for _i in 0..2 {\n        let a_str = \"ABC\";\n        let a = A { a_str: a_str };\n        println!(\"{}\", length (&amp;a)); // This works\n        println!(\"{}\", (f_struct.alg1) (&amp;a)); // This doesn't\n    }\n}\n</code></pre>\n\n<p>You can check on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dca909084ba6b0c4e45d8696d75dfb8b\" rel=\"nofollow noreferrer\">playground</a> that this exhibits the same error as your code.</p>\n\n<p>When you call <code>(f_struct.alg1)(&amp;a)</code>, the compiler tries to find good values for the lifetimes <code>'Alg_a</code> and <code>'Alg_b</code> associated with <code>f_struct</code>. Since <code>f_struct</code> is defined outside the loop, then those lifetimes must be the same for <strong>all</strong> iterations of the loop. However <code>Alg::alg1</code> is defined as <code>Fn(&amp;'Alg_a \u2026)</code> which means that <code>'Alg_a</code> must be the lifetime of the parameter <code>a</code> which is only valid for <strong>a single</strong> loop iteration. Hence the error.</p>\n\n<p>By not specifying the lifetime of the parameter, I allow the compiler to choose different lifetimes for the parameter <code>a</code> and for <code>'Alg_a</code>, and in particular to choose a different lifetime for the parameter each time the function is called. So the lifetime for the parameter can be limited to a single loop iteration while <code>'Alg_a</code> may be longer:</p>\n\n<pre><code>struct Alg&lt;'Alg_a, 'Alg_b&gt; {\n    alg1: &amp;'Alg_b Fn(&amp;A&lt;'Alg_a&gt;) -&gt; usize,\n}\n\nstruct A&lt;'A_a&gt; {\n    a_str: &amp;'A_a str,\n}\n\nfn length&lt;'L_a&gt;(a: &amp;A&lt;'L_a&gt;) -&gt; usize {\n    a.a_str.len()\n}\n\nfn main() {\n    let f_struct = Alg {\n        alg1: &amp;length,\n    };\n\n    for _i in 0..2 {\n        let a_str = \"ABC\";\n        let a = A { a_str: a_str };\n        println!(\"{}\", length (&amp;a)); // This works\n        println!(\"{}\", (f_struct.alg1) (&amp;a)); // Now this does too\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=524f046b64afde8b2ce11eed74c0cb93\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<h2>Why does calling <code>length</code> directly work?</h2>\n\n<p>When calling <code>length</code> directly, the compiler only needs to determine the lifetime <code>'L_a</code> and there is nothing that requires this lifetime to last for more than a single loop iteration, so there is no conflict.</p>\n\n<h2>Note</h2>\n\n<p>As noted by @VikramFugro, this only work because <code>a_str = \"ABC\"</code> creates a slice with a <code>'static</code> lifetime which can be shrunk down to <code>'Alg_a</code> or <code>'L_a</code> as required. Using a dynamic string (<code>let a_str = String::from(\"ABC\")</code>) <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=299f223ae42ab4316e48ea7dd77e4b21\" rel=\"nofollow noreferrer\">does not work</a>. We need to declare <code>alg1</code> as <code>&amp;'Alg_b for&lt;'F_a&gt; Fn(&amp;A&lt;'F_a&gt;) -&gt; usize</code> instead of using the <code>'Alg_a</code> lifetime on the <code>Alg</code> struct:</p>\n\n<pre><code>struct Alg&lt;'Alg_b&gt; {\n    alg1: &amp;'Alg_b for&lt;'F_a&gt; Fn(&amp;A&lt;'F_a&gt;) -&gt; usize,\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b27f889b484dbe5856a88e9d588b5a56\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Additionally, Rust 2018 allows us to use an anonymous lifetime <code>'_</code> instead of the <code>for&lt;'a&gt; \u2026</code> syntax, for example <code>&amp;'Alg_b Fn(&amp;A&lt;'_&gt;) -&gt; usize</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=43a4ebe47a1a2656a160b0d605a5082e\" rel=\"nofollow noreferrer\">playground</a>).</p>\n"}], "owner": {"reputation": 480, "user_id": 4688042, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/07539504725306ff45b0e9c09e3e2699?s=128&d=identicon&r=PG", "display_name": "QuietJoon", "link": "https://stackoverflow.com/users/4688042/quietjoon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 54125876, "answer_count": 1, "score": 1, "last_activity_date": 1547126663, "creation_date": 1547107975, "last_edit_date": 1547109101, "question_id": 54124341, "link": "https://stackoverflow.com/questions/54124341/function-refered-from-the-stored-in-struct-does-not-give-the-ownership-up", "title": "Function refered from the stored in struct does not give the ownership up", "body": "<p>I'm writing a algorithm testbench to compare performance in Rust.</p>\n\n<p>I want to store a bunch of function for an algorithm in a struct, and apply those functions to some data.\nWhen I call the function by reference, which stored in the struct, I couldn't figure out the lifetime.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Alg&lt;'a, 'b, 'c&gt; {\n    alg1: &amp;'c Fn(&amp;'a A&lt;'a&gt;, &amp;'b B&lt;'b&gt;) -&gt; usize,\n    alg2: &amp;'c Fn(&amp;'a A&lt;'a&gt;, &amp;'b B&lt;'b&gt;) -&gt; String,\n}\n\nstruct A&lt;'a&gt; {\n    a_str: &amp;'a str,\n}\n\nstruct B&lt;'b&gt; {\n    b_str: &amp;'b str,\n}\n\nfn concat&lt;'a, 'b&gt;(_a: &amp;'a A&lt;'a&gt;, _b: &amp;'b B&lt;'b&gt;) -&gt; String {\n    _a.a_str.to_string() + &amp;_b.b_str.to_string()\n}\n\nfn length&lt;'a, 'b&gt;(_a: &amp;'a A&lt;'a&gt;, _b: &amp;'b B&lt;'b&gt;) -&gt; usize {\n    _a.a_str.len() + _b.b_str.len()\n}\n\nfn run1&lt;'a, 'b, 'c&gt;(_a: &amp;'a A&lt;'a&gt;, _b: &amp;'b B&lt;'b&gt;, _f_c: &amp;'c Alg&lt;'a, 'b, 'c&gt;) {\n    println!(\"{}\", &amp;(_f_c.alg1)(_a, _b));\n}\n\nfn run2&lt;'a, 'b, 'c&gt;(_a: &amp;'a A&lt;'a&gt;, _b: &amp;'b B&lt;'b&gt;, _f_c: &amp;'c Alg&lt;'a, 'b, 'c&gt;) {\n    println!(\"{}\", &amp;(_f_c.alg2)(_a, _b));\n}\n\nfn main() {\n    let f_struct = Alg {\n        alg1: &amp;length,\n        alg2: &amp;concat,\n    };\n\n    for _i in 0..2 {\n        let a_str = \"ABC\";\n        let a = A { a_str: a_str };\n        for _j in 0..2 {\n            let b_str = \"BCD\";\n            let b = B { b_str: b_str };\n            println!(\"{}\", concat(&amp;a, &amp;b)); // This works\n            println!(\"{}\", (f_struct.alg1)(&amp;a, &amp;b)); // I expect that `concat` or `length` in `f_struct` may finished borrowing `a` or `b' here, as like as `println!(\"{}\",concat(&amp;a,&amp;b))`\n                                                     //run1(&amp;a,&amp;b,&amp;f_struct);\n                                                     //run2(&amp;a,&amp;b,&amp;f_struct);\n        }\n    }\n}\n</code></pre>\n\n<p>When I run this, I get an error message like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `a` does not live long enough\n  --&gt; src/main.rs:43:44\n   |\n43 |             println!(\"{}\", (f_struct.alg1)(&amp;a, &amp;b)); // I expect that `concat` or `length` in `f_struct` may finished borrowing `a` or `b' here, as like as `println!(\"{}\",concat(&amp;a,&amp;b))`\n   |                            --------------- ^^ borrowed value does not live long enough\n   |                            |\n   |                            borrow used here, in later iteration of loop\n...\n47 |     }\n   |     - `a` dropped here while still borrowed\n\nerror[E0597]: `b` does not live long enough\n  --&gt; src/main.rs:43:48\n   |\n43 |             println!(\"{}\", (f_struct.alg1)(&amp;a, &amp;b)); // I expect that `concat` or `length` in `f_struct` may finished borrowing `a` or `b' here, as like as `println!(\"{}\",concat(&amp;a,&amp;b))`\n   |                            ---------------     ^^ borrowed value does not live long enough\n   |                            |\n   |                            borrow used here, in later iteration of loop\n...\n46 |         }\n   |         - `b` dropped here while still borrowed\n</code></pre>\n\n<p>What is the difference between <code>println!(\"{}\",concat(&amp;a,&amp;b))</code> and <code>println!(\"{}\",(f_struct.alg1)(&amp;a,&amp;b))</code>?</p>\n\n<p>I thought that I have to indicate something that the function no more borrows the value with lifetime <code>'a</code> or <code>'b</code>, but I couldn't find it from rust-by-example or rust-book.</p>\n\n<p>I've tried to apply coercion like <code>'c: 'a + 'b</code>, but this seems not to help.</p>\n\n<p>These questions are related, but not so clear to me.</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/41204134/rust-lifetime-error\">Rust lifetime error</a></li>\n<li><a href=\"https://stackoverflow.com/questions/24847331/rust-lifetime-error-expected-concrete-lifetime-but-found-bound-lifetime\">Rust lifetime error expected concrete lifetime but found bound lifetime</a></li>\n<li><a href=\"https://stackoverflow.com/questions/43223497/questions-about-rust-lifetime\">Questions about Rust lifetime</a></li>\n</ul>\n\n<h3>Point</h3>\n\n<ul>\n<li>I want to store functions in the struct\n\n<ul>\n<li>I could try another way like not to store functions in the struct</li>\n<li>But I want to understand the reason when this approach is impossible</li>\n</ul></li>\n</ul>\n"}, {"tags": ["syntax", "module", "rust", "tuples", "access-modifiers"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547404508, "post_id": 54122686, "comment_id": 95172829, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54122686/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 0, "creation_date": 1547100348, "post_id": 54122731, "comment_id": 95077228, "body": "Does this mean the information in the struct is inaccessible outside the crate? Looks like a bug in the crate. There is no impl for the struct."}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "reply_to_user": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 0, "creation_date": 1547100807, "post_id": 54122731, "comment_id": 95077356, "body": "If you don&#39;t add <code>pub</code> to the fields of the tuple, then they will be inaccessible outside the crate (and/or the module). An <code>impl</code> is only needed if you actually want to add fuctions to a struct. By the sound of it you&#39;re not the author of the crate (which is not clear from your question), the crate author may have intended <code>A</code> to be opaque to the outside world to prevent users relying on its internal representation. For example it might be a &quot;handle&quot; type. In which case there would be functions using / returning <code>A</code>. Without more code that&#39;s all speculation though."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 2, "creation_date": 1547116587, "post_id": 54122731, "comment_id": 95084810, "body": "@Ben The mere fact that there is no <code>impl</code> for the struct does not imply that you can&#39;t access the fields. They could be made accessible by conversion traits, indexing traits, any custom trait or even unrelated data structurs in the respective library."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "edited": false, "score": 0, "creation_date": 1547127567, "post_id": 54122731, "comment_id": 95090948, "body": "@Ben what crate and type is it?"}], "tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": false, "score": 2, "last_activity_date": 1547100111, "creation_date": 1547100111, "answer_id": 54122731, "question_id": 54122686, "link": "https://stackoverflow.com/questions/54122686/field-0-of-struct-is-private-error-on-pub-struct-attribute/54122731#54122731", "title": "&quot;field `0` of struct is private&quot; error on pub struct attribute", "body": "<p>You need to make the pieces of the tuple type <code>A</code> <code>pub</code>. Something like this:</p>\n\n<pre><code>pub struct A(pub String, pub String)\n</code></pre>\n"}], "owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 763, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1547127495, "creation_date": 1547099863, "last_edit_date": 1547127495, "question_id": 54122686, "link": "https://stackoverflow.com/questions/54122686/field-0-of-struct-is-private-error-on-pub-struct-attribute", "title": "&quot;field `0` of struct is private&quot; error on pub struct attribute", "body": "<p>\"field <code>0</code> of struct is private\" error on pub struct attribute</p>\n\n<h3>In crate</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct A(String, String);\n\npub struct C {\n    pub b: Vec&lt;A&gt;,\n}\n</code></pre>\n\n<h3>in main()</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>...iter().map(|my_tuple:&amp;A| (my_tuple.0.parse::&lt;f64&gt;().unwrap()));\n\n\n</code></pre>\n\n<p>Why do I get an \"struct is private\" error when the attribute is pub, the struct is pub and the parent struct is pub?</p>\n"}, {"tags": ["variables", "syntax", "rust", "immutability", "mutable"], "comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1547085386, "post_id": 54120899, "comment_id": 95074095, "body": "You are passing a copy of <code>a</code> to <code>reset</code> (since it is not passed by reference), so <code>reset</code> is free to mutate this new copy."}, {"owner": {"reputation": 523, "user_id": 8617507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9da6733c7db911f11532d8dfdbc576c4?s=128&d=identicon&r=PG&f=1", "display_name": "iDuanYingJie", "link": "https://stackoverflow.com/users/8617507/iduanyingjie"}, "reply_to_user": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1547085772, "post_id": 54120899, "comment_id": 95074167, "body": "so, this is equivalent to let mut b = memcpy(a);  right?"}], "answers": [{"comments": [{"owner": {"reputation": 523, "user_id": 8617507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9da6733c7db911f11532d8dfdbc576c4?s=128&d=identicon&r=PG&f=1", "display_name": "iDuanYingJie", "link": "https://stackoverflow.com/users/8617507/iduanyingjie"}, "edited": false, "score": 0, "creation_date": 1547087322, "post_id": 54121123, "comment_id": 95074509, "body": "So, variables a and b point to different memory addresses, right\uff1f"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 523, "user_id": 8617507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9da6733c7db911f11532d8dfdbc576c4?s=128&d=identicon&r=PG&f=1", "display_name": "iDuanYingJie", "link": "https://stackoverflow.com/users/8617507/iduanyingjie"}, "edited": false, "score": 0, "creation_date": 1547087425, "post_id": 54121123, "comment_id": 95074530, "body": "@iDuanYingJie they might, but they don&#39;t have to. In your example code, the optimizer can see that <code>a</code> isn&#39;t used after it&#39;s passed to <code>reset</code>, so it might as well just use the same memory chunk for <code>b</code>. (It&#39;s tricky to tell because this code is probably optimized to a no-op because it doesn&#39;t do anything)."}, {"owner": {"reputation": 523, "user_id": 8617507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9da6733c7db911f11532d8dfdbc576c4?s=128&d=identicon&r=PG&f=1", "display_name": "iDuanYingJie", "link": "https://stackoverflow.com/users/8617507/iduanyingjie"}, "edited": false, "score": 0, "creation_date": 1547087860, "post_id": 54121123, "comment_id": 95074610, "body": "oh, yes! if a is uesd after it&#39;s passed to reset, i think this is equivalent to let mut b = memcpy(a); right?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 523, "user_id": 8617507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9da6733c7db911f11532d8dfdbc576c4?s=128&d=identicon&r=PG&f=1", "display_name": "iDuanYingJie", "link": "https://stackoverflow.com/users/8617507/iduanyingjie"}, "edited": false, "score": 0, "creation_date": 1547088013, "post_id": 54121123, "comment_id": 95074640, "body": "@iDuanYingJie Yes, <i>if</i> <code>a</code> is used after <code>reset</code>, then a copy of <code>a</code> would be created and one passed to <code>reset</code> the other remaining in <code>main</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1547090068, "last_edit_date": 1547090068, "creation_date": 1547086885, "answer_id": 54121123, "question_id": 54120899, "link": "https://stackoverflow.com/questions/54120899/why-can-immutable-variables-be-passed-as-arguments-to-functions-that-require-mut/54121123#54121123", "title": "Why can immutable variables be passed as arguments to functions that require mutable arguments?", "body": "<p>When you pass by value, you are transferring ownership of the value. No copies of the variable are required \u2014 first <code>main</code> owns it, then <code>reset</code> owns it, then it's gone<sup>1</sup>.</p>\n\n<p>In Rust, when you have ownership of a variable, you can control the mutability of it. For example, you can do this:</p>\n\n<pre><code>let a = [1, 2, 3, 4, 5];\nlet mut b = a;\n</code></pre>\n\n<p>You could also do the same thing inside of <code>reset</code>, although I would <em>not</em> do this, preferring to use the <code>mut</code> in the function signature:</p>\n\n<pre><code>fn reset(b: [u32; 5]) {\n    let mut c = b;\n    c[0] = 5;\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31388644/155423\">What&#39;s the idiomatic way to pass by mutable value?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28587698/155423\">What&#39;s the difference between placing &quot;mut&quot; before a variable name and after the &quot;:&quot;?</a></li>\n</ul>\n\n<hr>\n\n<p><strong>1</strong> \u2014 In <em>this specific case</em>, your type is an <code>[i32; 5]</code>, which implements the <code>Copy</code> trait. If you attempted to use <code>a</code> after giving ownership to <code>reset</code>, then an implicit copy would be made. The value of <code>a</code> would appear unchanged.</p>\n"}], "owner": {"reputation": 523, "user_id": 8617507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9da6733c7db911f11532d8dfdbc576c4?s=128&d=identicon&r=PG&f=1", "display_name": "iDuanYingJie", "link": "https://stackoverflow.com/users/8617507/iduanyingjie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 629, "favorite_count": 0, "accepted_answer_id": 54121123, "answer_count": 1, "score": 4, "last_activity_date": 1547127661, "creation_date": 1547084766, "last_edit_date": 1547127661, "question_id": 54120899, "link": "https://stackoverflow.com/questions/54120899/why-can-immutable-variables-be-passed-as-arguments-to-functions-that-require-mut", "title": "Why can immutable variables be passed as arguments to functions that require mutable arguments?", "body": "<p>Example code\uff1a</p>\n\n<pre><code>fn main() {\n    let a = [1, 2, 3, 4, 5];\n    reset(a);\n}\n\nfn reset(mut b: [u32; 5]) {\n    b[0] = 5;\n}\n</code></pre>\n\n<p>The variable <code>a</code> is an immutable array, and the <code>reset</code> function's parameter <code>b</code> is a mutable array; intuitively I need to modify <code>a</code> to a mutable array before I can call the <code>reset</code> method, but the compiler tells me that I don't need to do this, why is this?</p>\n\n<pre><code>fn main() {\n    let mut a = [1, 2, 3, 4, 5];\n    reset(a);\n}\n\nfn reset(mut b: [u32; 5]) {\n    b[0] = 5;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: variable does not need to be mutable\n --&gt; src/main.rs:2:9\n  |\n2 |     let mut a = [1, 2, 3, 4, 5];\n  |         ----^\n  |         |\n  |         help: remove this `mut`\n  |\n  = note: #[warn(unused_mut)] on by default\n</code></pre>\n"}, {"tags": ["error-handling", "rust", "idioms"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547081431, "post_id": 54120500, "comment_id": 95073315, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/31172451/155423\">Is there a non-messy way to chain the results of functions that return Option values?</a> and <a href=\"https://stackoverflow.com/q/51344951/155423\">How do you unwrap a Result on Ok or return from the function on Err?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/54120500/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547081499, "post_id": 54120500, "comment_id": 95073324, "body": "<a href=\"https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html#a-shortcut-for-propagating-errors-the--operator\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>"}, {"owner": {"reputation": 202, "user_id": 8863755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc3465590b30570df6099878b106922c?s=128&d=identicon&r=PG&f=1", "display_name": "Hugobastas", "link": "https://stackoverflow.com/users/8863755/hugobastas"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547082397, "post_id": 54120500, "comment_id": 95073478, "body": "@Stargateur What you linked to says: &quot;<i>The ? Operator Can Only Be Used in Functions That Return Result&quot;</i>. Perhaps i was unclear but my -&gt; ... signature refers to any arbitrary type."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547082496, "post_id": 54120500, "comment_id": 95073495, "body": "I linked to <a href=\"https://stackoverflow.com/q/51344951/155423\">an answer that applies to any type</a> (yes, it says &quot;Result&quot; in the title, but read the answers). What&#39;s insufficient with that answer?"}, {"owner": {"reputation": 202, "user_id": 8863755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc3465590b30570df6099878b106922c?s=128&d=identicon&r=PG&f=1", "display_name": "Hugobastas", "link": "https://stackoverflow.com/users/8863755/hugobastas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1547082587, "post_id": 54120500, "comment_id": 95073513, "body": "@Shepmaster oh s**t only looked ad the first link then got all busy defending myself. The second link does indeed seam to answer my question"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547082653, "post_id": 54120500, "comment_id": 95073523, "body": "Do you feel like this can be marked as a duplicate then?"}, {"owner": {"reputation": 202, "user_id": 8863755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc3465590b30570df6099878b106922c?s=128&d=identicon&r=PG&f=1", "display_name": "Hugobastas", "link": "https://stackoverflow.com/users/8863755/hugobastas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547082837, "post_id": 54120500, "comment_id": 95073554, "body": "@Shepmaster yeah sure, go ahead."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547083292, "post_id": 54120500, "comment_id": 95073635, "body": "@Hugobastas Rust is <i>comparatively</i> new. The <a href=\"https://data.stackexchange.com/stackoverflow/query/960749/questions-with-most-views\" rel=\"nofollow noreferrer\">top 200 questions</a> have between 57K and 6K views."}, {"owner": {"reputation": 202, "user_id": 8863755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc3465590b30570df6099878b106922c?s=128&d=identicon&r=PG&f=1", "display_name": "Hugobastas", "link": "https://stackoverflow.com/users/8863755/hugobastas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1547083547, "post_id": 54120500, "comment_id": 95073696, "body": "@Shepmaster Yeah, kinda unescesary comment on my part."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1547090027, "post_id": 54120500, "comment_id": 95075002, "body": "@Hugobastas oh nevermind, <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e16a896c1a435af4d4fda5b93c73d085\" rel=\"nofollow noreferrer\">example of how I will do it</a>"}], "owner": {"reputation": 202, "user_id": 8863755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bc3465590b30570df6099878b106922c?s=128&d=identicon&r=PG&f=1", "display_name": "Hugobastas", "link": "https://stackoverflow.com/users/8863755/hugobastas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "closed_date": 1547082857, "answer_count": 0, "score": 0, "last_activity_date": 1547127698, "creation_date": 1547080848, "last_edit_date": 1547127698, "question_id": 54120500, "link": "https://stackoverflow.com/questions/54120500/idiomatic-way-to-return-a-value-other-than-a-result-or-option-from-a-function-wh", "closed_reason": "Duplicate", "title": "Idiomatic way to return a value other than a Result or Option from a function when an option is None?", "body": "<p>I would like to do this:</p>\n\n<pre><code>fn foo(bar: Option&lt;...&gt;) -&gt; ... {\n    if let None = bar { // bar is None. No need to go any further\n        return ...\n    }\n\n    /* Do some complex calculation assuming bar is Some(...) */\n}\n</code></pre>\n\n<p>This kind of approach is fine in untyped languages and even some typed ones like TypeScript and (if memory serves me right) Swift but it won't do for Rust. </p>\n\n<p>What is the idiomatic way to do this that works for return types other than <code>Option</code> and <code>Result</code>? I could do:</p>\n\n<pre><code>if let Some(...) = bar {\n    /* complex calculation */\n} else {\n    return ...\n}\n</code></pre>\n\n<p>It seems akin to a lot of unreadable nested if-else clauses with a lot of indentation in the long run.</p>\n"}]