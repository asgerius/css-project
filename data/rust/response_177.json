[{"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1527721935, "post_id": 50614470, "comment_id": 88238865, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25339603/how-to-test-for-equality-between-trait-objects\">How to test for equality between trait objects?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1527732967, "post_id": 50614470, "comment_id": 88241290, "body": "You&#39;re not doing anything wrong; it&#39;s not possible to implement <code>PartialEq</code> such that <code>true == Marker {}</code> will compile, because <a href=\"https://stackoverflow.com/questions/25413201/how-do-i-implement-a-trait-i-dont-own-for-a-type-i-dont-own\">you can&#39;t implement <code>PartialEq</code> for <code>bool</code></a>. (You <i>can</i> implement <code>PartialEq&lt;bool&gt;</code> for <code>Marker</code>, which would make the reverse (i.e. <code>Marker {} == true</code>) work. But it&#39;s probably better just to stick to trait objects and keep them behind <code>&amp;</code> or <code>Box</code>.)"}, {"owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527742136, "post_id": 50614470, "comment_id": 88243412, "body": "Hi @trentcl, What if I wrap <code>bool</code> in a <code>struct Bool(bool)</code>? I&#39;m getting other errors but I want to check if I&#39;m on the right track.  Also interested in implementing <code>PartialEq&lt;bool&gt;</code> for Marker but I don&#39;t fully understand. Can you elaborate?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1527771024, "post_id": 50614470, "comment_id": 88259361, "body": "Sorry, I was wrong about that; <code>impl PartialEq&lt;Marker&gt; for bool</code> works. What you can&#39;t do is <code>impl&lt;&#39;a, T: Obj&lt;&#39;a&gt;&gt; PartialEq&lt;T&gt; for bool</code>, and you <i>definitely</i> can&#39;t <code>impl&lt;&#39;a, T: Obj&lt;&#39;a&gt;, U: Obj&lt;&#39;a&gt;&gt; PartialEq&lt;U&gt; for T</code> (that&#39;s what you&#39;d need to make any <code>==</code> comparison work between types that implement <code>Obj</code>)."}], "owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 447, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1527734101, "creation_date": 1527721541, "last_edit_date": 1527734101, "question_id": 50614470, "link": "https://stackoverflow.com/questions/50614470/implementing-partialeq-for-comparing-objects-of-different-traits", "title": "Implementing PartialEq for comparing objects of different traits", "body": "<p>I'm trying to implement a set of traits in a way that allows me to test equality between types. I followed <a href=\"https://stackoverflow.com/questions/25339603/how-to-test-for-equality-between-trait-objects\">How to test for equality between trait objects?</a>. I can use the <code>tr_eq</code> method to test between types, but I can't get the <code>==</code> operator to work. What am I doing wrong here?</p>\n\n<pre><code>use std::any::Any;\nuse std::fmt::Debug;\n\npub trait Obj&lt;'a&gt;: Debug + Any {\n    fn as_any(&amp;self) -&gt; &amp;Any;\n\n    fn tr_eq(&amp;self, other: &amp;Obj) -&gt; bool;\n}\n\nimpl&lt;'a&gt; Obj&lt;'a&gt; for bool {\n    fn as_any(&amp;self) -&gt; &amp;Any {\n        self\n    }\n\n    fn tr_eq(&amp;self, other: &amp;Obj) -&gt; bool {\n        other\n            .as_any()\n            .downcast_ref::&lt;bool&gt;()\n            .map_or(false, |a| self == a)\n    }\n}\n\nimpl&lt;'a&gt; PartialEq for Obj&lt;'a&gt; {\n    fn eq(&amp;self, other: &amp;Obj) -&gt; bool {\n        self.tr_eq(other)\n    }\n}\n\n#[derive(Debug, PartialEq)]\npub struct Marker;\n\nimpl&lt;'a&gt; Obj&lt;'a&gt; for Marker {\n    fn as_any(&amp;self) -&gt; &amp;Any {\n        self\n    }\n\n    fn tr_eq(&amp;self, other: &amp;Obj) -&gt; bool {\n        other\n            .as_any()\n            .downcast_ref::&lt;Marker&gt;()\n            .map_or(false, |a| self == a)\n    }\n}\n\nfn main() {\n    println!(\"true == Marker: {:?}\", true == Marker {}); // error\n    println!(\"true == true: {:?}\", true == true);\n    println!(\n        \"&amp;true as &amp;Obj == &amp;Marker as &amp;Obj: {:?}\",\n        &amp;true as &amp;Obj == &amp;Marker {} as &amp;Obj\n    );\n    println!(\"Marker.tr_eq(&amp;true): {:?}\", Marker {}.tr_eq(&amp;true));\n    println!(\n        \"&amp;Marker as &amp;Obj == (&amp;true as &amp;Obj): {:?}\",\n        &amp;Marker {} as &amp;Obj == (&amp;true as &amp;Obj)\n    );\n    println!(\"false.tr_eq(&amp;true): {:?}\", false.tr_eq(&amp;true));\n    println!(\"true.tr_eq(&amp;true): {:?}\", true.tr_eq(&amp;true));\n    println!(\"Marker==Marker: {:?}\", Marker {} == Marker {})\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:47:46\n   |\n47 |     println!(\"true == Marker: {:?}\", true == Marker {});\n   |                                              ^^^^^^^^^ expected bool, found struct `Marker`\n   |\n   = note: expected type `bool`\n              found type `Marker`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 3, "creation_date": 1527712557, "post_id": 50612937, "comment_id": 88235886, "body": "If you want to use shell syntax you need to invoke a shell."}, {"owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1527712887, "post_id": 50612937, "comment_id": 88235998, "body": "@CodesInChaos doh! If you write up an answer I&#39;ll accept it... Otherwise will self-answer and leave this up for reference."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1527713043, "post_id": 50612937, "comment_id": 88236042, "body": "There is probably a better solution not involving a shell. And &quot;in the same process&quot; looks wrong to me, but I&#39;ll leave that to somebody with better unix knowledge than me."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527713333, "post_id": 50612937, "comment_id": 88236153, "body": "It would be better to mark this as a duplicate of an existing question (if one exists). I found <a href=\"https://stackoverflow.com/questions/38551500/execute-any-bash-command-get-the-results-of-stdout-stderr-immediatly-and-use-st\">Execute any bash command, get the results of stdout/stderr immediatly and use stdin</a> and <a href=\"https://stackoverflow.com/questions/31666936/execute-a-shell-command\">Execute a shell command</a> that look like candidates. (One answer to the second one suggests using <code>Result::and_then</code> in Rust to emulate <code>&amp;&amp;</code> in the shell, which strikes me as the best idea.)"}, {"owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527714087, "post_id": 50612937, "comment_id": 88236447, "body": "@trentcl good finds - voting to close this as dupe... It strikes me that the <code>Result::and_then</code> call would occur after the process has exited."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1527714385, "post_id": 50612937, "comment_id": 88236563, "body": "Yes, that&#39;s what a shell would do, too. I don&#39;t know if &quot;reusing&quot; the subprocess is really a thing that you <i>can</i> do. Isn&#39;t it gone when the first command terminates?"}, {"owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527714504, "post_id": 50612937, "comment_id": 88236602, "body": "@trentcl AFAIK that is correct."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1527748491, "post_id": 50612937, "comment_id": 88245786, "body": "Note that all that <code>activate</code> does is to set an environment variables (<code>VIRTUAL_ENV</code>), prepend <code>$VIRTUAL_ENV&#47;bin</code> to the <code>PATH</code> and unset <code>PYTHON_HOME</code>, which you can do yourself before calling your main command (I&#39;d post an answer, except that the question is closed\u2026)"}, {"owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1527869511, "post_id": 50612937, "comment_id": 88305337, "body": "@Jmb Yeah but that doesn&#39;t help with this problem... manually setting the environment variables would still need to be done in the same process (before the other commands are executed)."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1528093994, "post_id": 50612937, "comment_id": 88358776, "body": "@Alex This can be done with <a href=\"https://doc.rust-lang.org/stable/std/process/struct.Command.html#method.env\" rel=\"nofollow noreferrer\">Command::env</a> for a single command or with <a href=\"https://doc.rust-lang.org/stable/std/env/index.html\" rel=\"nofollow noreferrer\">std::env</a> for the current process (and therefore for all its future children)."}], "owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 304, "favorite_count": 0, "closed_date": 1527727123, "answer_count": 0, "score": 1, "last_activity_date": 1527714447, "creation_date": 1527712358, "last_edit_date": 1527714447, "question_id": 50612937, "link": "https://stackoverflow.com/questions/50612937/how-can-i-run-multiple-commands-in-same-subprocess", "closed_reason": "Duplicate", "title": "How can I run multiple commands in same subprocess?", "body": "<p>I am trying to execute a sequence of commands in the same process. E.g.</p>\n\n<pre><code>let v = vec![\"python3 -m venv venv\", \"source venv/bin/activate\"];\n</code></pre>\n\n<p>I have tried joining the vector with \" &amp;&amp; \" and using the <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.args\" rel=\"nofollow noreferrer\"><code>.args</code></a> method to no avail. I.e.</p>\n\n<pre><code>std::process::Command::new(\"python3\")\n    .args(&amp;[\"-m\", \"venv\", \"venv\", \"&amp;&amp;\", \"source\", \"venv/bin/activate\"])\n    .output()\n    .expect(\"failed to execute command\");\n</code></pre>\n\n<p>What is the best way to do this?</p>\n\n<p><strong>Note</strong>: I want to do this all in the same process to use the Python virtual env that is activated.</p>\n"}, {"tags": ["rust", "closures"], "answers": [{"tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": false, "score": 6, "last_activity_date": 1527707090, "creation_date": 1527707090, "answer_id": 50611806, "question_id": 50611728, "link": "https://stackoverflow.com/questions/50611728/how-can-i-use-a-closure-that-has-mutably-captured-a-variable-in-a-loop-that-chec/50611806#50611806", "title": "How can I use a closure that has mutably captured a variable in a loop that checks the same value?", "body": "<p>One option you have is to pass a mutable reference to the closure rather than implicitly borrowing it by environment capture:</p>\n\n<pre><code>fn main() {\n    let mut foo = 1;\n\n    let func = |foo: &amp;mut i32| *foo += 1;\n\n    while foo &lt; 5 {\n       func(&amp;mut foo);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a45fe32d333d12ecd85d2a8b769e379d&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1527708574, "last_edit_date": 1527708574, "creation_date": 1527708100, "answer_id": 50612040, "question_id": 50611728, "link": "https://stackoverflow.com/questions/50611728/how-can-i-use-a-closure-that-has-mutably-captured-a-variable-in-a-loop-that-chec/50612040#50612040", "title": "How can I use a closure that has mutably captured a variable in a loop that checks the same value?", "body": "<p><strong>No</strong>, you cannot do this. While the closure has the mutable borrow, nothing else may access that variable.</p>\n\n<p>Instead...</p>\n\n<h3>Runtime mutability XOR aliasing enforcement</h3>\n\n<p>You can use a <code>Cell</code> or a <code>RefCell</code>:</p>\n\n<pre><code>use std::cell::Cell;\n\nfn main() {\n    let foo = Cell::new(1);\n\n    let func = || foo.set(foo.get() + 1);\n\n    while foo.get() &lt; 5 {\n        func();\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30831037/155423\">Situations where Cell or RefCell is the best choice</a></li>\n<li><a href=\"https://stackoverflow.com/q/41506075/155423\">Right way to share a reference between closures</a></li>\n<li><a href=\"https://stackoverflow.com/q/38027461/155423\">Execute callbacks like as mutable borrowing from cycle</a></li>\n<li><a href=\"https://stackoverflow.com/q/38677736/155423\">Passing a closure that modifies its environment to a function in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/41990175/155423\">Problems with mutability in a closure</a></li>\n<li><a href=\"https://stackoverflow.com/q/30275982/155423\">When I can use either Cell or RefCell, which should I choose?</a></li>\n</ul>\n\n<h3>Let the closure handle everything</h3>\n\n<p>You can bake the comparison into the closure:</p>\n\n<pre><code>fn main() {\n    let mut foo = 1;\n\n    let mut func = || {\n        foo += 1;\n        foo &lt; 5\n    };\n\n    while func() {}\n}\n</code></pre>\n\n<h3>Use a struct</h3>\n\n<pre><code>struct Thing(i32);\n\nimpl Thing {\n    fn do_it(&amp;mut self) {\n        self.0 += 1\n    }\n\n    fn test_it(&amp;self) -&gt; bool {\n        self.0 &lt; 5\n    }\n}\n\nfn main() {\n    let mut foo = Thing(1);\n\n    while foo.test_it() {\n        foo.do_it();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 314, "user_id": 5883049, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L81F9.jpg?s=128&g=1", "display_name": "bertfred", "link": "https://stackoverflow.com/users/5883049/bertfred"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 318, "favorite_count": 2, "answer_count": 2, "score": 2, "last_activity_date": 1527708574, "creation_date": 1527706748, "last_edit_date": 1527707522, "question_id": 50611728, "link": "https://stackoverflow.com/questions/50611728/how-can-i-use-a-closure-that-has-mutably-captured-a-variable-in-a-loop-that-chec", "title": "How can I use a closure that has mutably captured a variable in a loop that checks the same value?", "body": "<pre><code>fn main() {\n    let mut foo = 1;\n\n    let mut func = || foo += 1;\n    while foo &lt; 5 {\n        func();\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0503]: cannot use `foo` because it was mutably borrowed\n --&gt; src/main.rs:5:11\n  |\n4 |     let mut func = || foo += 1;\n  |                    -- borrow of `foo` occurs here\n5 |     while foo &lt; 5 {\n  |           ^^^ use of borrowed `foo`\n</code></pre>\n\n<p>I understand why this isn't working, but I'm looking for a way to bypass the borrow checker somehow. Is there a way to use a closure here? Is there a good alternative besides using a function? I've got a situation where I have to change several variables.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 154, "user_id": 3926412, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/386ec047887b2fbf66561f8f1023379f?s=128&d=identicon&r=PG&f=1", "display_name": "Kolt Penny", "link": "https://stackoverflow.com/users/3926412/kolt-penny"}, "edited": false, "score": 0, "creation_date": 1527699800, "post_id": 50610000, "comment_id": 88229774, "body": "Because the lexer and syntactic analyser is built like that."}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 154, "user_id": 3926412, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/386ec047887b2fbf66561f8f1023379f?s=128&d=identicon&r=PG&f=1", "display_name": "Kolt Penny", "link": "https://stackoverflow.com/users/3926412/kolt-penny"}, "edited": false, "score": 0, "creation_date": 1527699883, "post_id": 50610000, "comment_id": 88229812, "body": "@KoltPenny what do you mean?"}], "answers": [{"comments": [{"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "edited": false, "score": 0, "creation_date": 1527700604, "post_id": 50610126, "comment_id": 88230241, "body": "Thanks for the very comprehensive answer! Just for clarification, the <a href=\"https://stackoverflow.com/a/27423473/9614249\">second answer</a> on the question you linked is now outdated and incorrect, right?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "edited": false, "score": 1, "creation_date": 1527700853, "post_id": 50610126, "comment_id": 88230371, "body": "@IncreasinglyIdiotic yeah. I just edited it to note that."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1527700726, "last_edit_date": 1527700726, "creation_date": 1527700113, "answer_id": 50610126, "question_id": 50610000, "link": "https://stackoverflow.com/questions/50610000/is-there-any-reason-to-put-a-semicolon-after-panic/50610126#50610126", "title": "Is there any reason to put a semicolon after panic?", "body": "<p>In 99% of the cases, there's no meaningful difference. I'd just let rustfmt do whatever it wants to do and not think about it.</p>\n\n<blockquote>\n  <p>Is there any reason to put a semicolon after panic?</p>\n</blockquote>\n\n<p>Yes. If you decide to stick a panic in the middle of some code for some quick-and-dirty debugging, if you don't add the semicolon you get a syntax error:</p>\n\n<pre><code>fn main() {\n    // ... some code ...\n\n    // We add a quick panic for some reason\n    panic!(\"oops\")\n\n    // ... some code ...\n    1;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `.`, `;`, `?`, `}`, or an operator, found `1`\n --&gt; src/main.rs:8:5\n  |\n5 |     panic!(\"oops\")\n  |                   - expected one of `.`, `;`, `?`, `}`, or an operator here\n...\n8 |     1;\n  |     ^ unexpected token\n</code></pre>\n\n<p>With the semicolon, you will be able to compile with some warnings about unreachable code.</p>\n\n<p>There's also the implicit question:</p>\n\n<blockquote>\n  <p>Is there any reason to <strong>not</strong> put a semicolon after panic?</p>\n</blockquote>\n\n<p>The one I can think of is when you are writing your own divergent function:</p>\n\n<pre><code>fn crash_override() -&gt; ! {\n    panic!(\"oops\")\n}\n</code></pre>\n\n<p>It's not needed, but it might appear more obvious to a reader that the never type is being \"returned\" from <code>panic!</code> in this case.</p>\n\n<blockquote>\n  <p>Is there a difference between <code>panic!(\"blah\");</code> and <code>panic(\"blah\")</code>?</p>\n</blockquote>\n\n<p>Yes, the former is a statement, the latter is an expression.</p>\n\n<blockquote>\n  <p>but <code>panic!</code> causes the current thread to terminate. </p>\n</blockquote>\n\n<p>That's the default behavior, yes, but it's not the only one. When <code>panic = abort</code> is not enabled, <a href=\"https://stackoverflow.com/q/27384824/155423\">you can catch panics if you need to</a>.</p>\n"}], "owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 0, "accepted_answer_id": 50610126, "answer_count": 1, "score": 3, "last_activity_date": 1527700726, "creation_date": 1527699669, "question_id": 50610000, "link": "https://stackoverflow.com/questions/50610000/is-there-any-reason-to-put-a-semicolon-after-panic", "title": "Is there any reason to put a semicolon after panic?", "body": "<p>Is there a difference between <code>panic!(\"blah\");</code> and <code>panic(\"blah\")</code>?</p>\n\n<p>As I understand things, semicolons differentiate between statements and expressions<sup><a href=\"https://doc.rust-lang.org/book/second-edition/ch03-03-how-functions-work.html#statements-and-expressions\" rel=\"nofollow noreferrer\">1</a></sup>. Put differently, the lack of a semicolon shows that a value is expected as a result of the expression<sup><a href=\"https://stackoverflow.com/a/26665514/9614249\">2</a></sup>.</p>\n\n<p>This is pretty straight forward in most cases, but <code>panic!</code> causes the current thread to terminate. The program will never return from <code>panic!</code> and so the result of the expression is meaningless, right?</p>\n\n<p>Will the expression <code>panic!(\"blah\")</code> ever behave differently than the statement <code>panic!(\"blah);</code>?</p>\n"}, {"tags": ["rust", "opencl"], "comments": [{"owner": {"reputation": 6006, "user_id": 2368241, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lKVRg.png?s=128&g=1", "display_name": "Bjoern Rennhak", "link": "https://stackoverflow.com/users/2368241/bjoern-rennhak"}, "edited": false, "score": 1, "creation_date": 1527695361, "post_id": 50608802, "comment_id": 88227412, "body": "That is a Linker error. So, your compile phase seems to have passed correctly, but when the linker tried to assemble your binary it couldn&#39;t since some dynamic library is missing. You can try to run eg. <code>nm</code> over your local libs and try to find the .so file with the function in question. Once you have it and added it to your Cargo file then that should compile and link."}], "answers": [{"comments": [{"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1527695751, "post_id": 50608911, "comment_id": 88227633, "body": "The output I get indeed doesn&#39;t contain <code>cl_khr_int64_base_atomics</code>. Isn&#39;t that extension mandatory on OpenCL 1.2? Is there any workaround?"}, {"owner": {"reputation": 8423, "user_id": 463796, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/Yihjq.png?s=128&g=1", "display_name": "w-m", "link": "https://stackoverflow.com/users/463796/w-m"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1527696196, "post_id": 50608911, "comment_id": 88227881, "body": "You could try updating macOS to get a newer GPU driver with more OpenCL support (but I have no idea what the chances of success are. Possibly 0, given the lackluster OpenCL support on macOS). Or maybe try Windows, if the extension is supported on your GPU there."}, {"owner": {"reputation": 8423, "user_id": 463796, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/Yihjq.png?s=128&g=1", "display_name": "w-m", "link": "https://stackoverflow.com/users/463796/w-m"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1527696310, "post_id": 50608911, "comment_id": 88227962, "body": "(Are you sure int 64 atomics are supported by the hardware architecture of your GPU?)"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1527696738, "post_id": 50608911, "comment_id": 88228208, "body": "I do not know, no idea how I could check.  Thanks for the suggestions..."}], "tags": [], "owner": {"reputation": 8423, "user_id": 463796, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/Yihjq.png?s=128&g=1", "display_name": "w-m", "link": "https://stackoverflow.com/users/463796/w-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1527695503, "creation_date": 1527695503, "answer_id": 50608911, "question_id": 50608802, "link": "https://stackoverflow.com/questions/50608802/opencl-error-undefined-reference-to-z12atom-cmpxchgpvu8clglobalmmm/50608911#50608911", "title": "OpenCL error: undefined reference to `_Z12atom_cmpxchgPVU8CLglobalmmm()&#39;", "body": "<p>Check the <code>CL_DEVICE_EXTENSIONS</code> of your device with <code>clGetDeviceInfo()</code>. <code>cl_khr_int64_base_atomics</code> may not be supported with this GPU under macOS.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "accepted_answer_id": 50608911, "answer_count": 1, "score": 1, "last_activity_date": 1527695653, "creation_date": 1527695053, "last_edit_date": 1527695653, "question_id": 50608802, "link": "https://stackoverflow.com/questions/50608802/opencl-error-undefined-reference-to-z12atom-cmpxchgpvu8clglobalmmm", "title": "OpenCL error: undefined reference to `_Z12atom_cmpxchgPVU8CLglobalmmm()&#39;", "body": "<p>When compiling the following OpenCL kernel:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#pragma OPENCL EXTENSION cl_khr_int64_base_atomics : enable\n\n__kernel void kernel(__global ulong* mem) {\n    atom_cmpxchg(&amp;mem[0], 0, 1);\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: undefined reference to `_Z12atom_cmpxchgPVU8CLglobalmmm()'\n</code></pre>\n\n<p>I'm using OpenCL from Rust with the <a href=\"https://github.com/cogciprocate/ocl\" rel=\"nofollow noreferrer\">OCL</a> library. My OpenCL version is 1.2, my GPU is an Intel(R) Iris(TM) Graphics 550, I'm under macOS Sierra 10.12.1. </p>\n"}, {"tags": ["stream", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1527676608, "last_edit_date": 1527676608, "creation_date": 1527676243, "answer_id": 50602409, "question_id": 50602006, "link": "https://stackoverflow.com/questions/50602006/how-can-i-check-if-stdiocursor-has-unconsumed-data/50602409#50602409", "title": "How can I check if std::io::Cursor has unconsumed data?", "body": "<p>Your code can be simplified by using <a href=\"https://doc.rust-lang.org/std/io/struct.Cursor.html#method.get_ref\" rel=\"nofollow noreferrer\"><code>Cursor::get_ref</code></a> to avoid breaking up the input and putting it back together:</p>\n\n<pre><code>fn handle(mut data: Cursor&lt;&amp;[u8]&gt;) {\n    let len = data.get_ref().len();\n\n    while (data.position() as usize) &lt; len - 1 {\n        if let Err(err) = handle_chunk(&amp;mut data) {\n            eprintln!(\"Error while handling data: {}\", err);\n        }\n    }\n}\n</code></pre>\n\n<p>Now, you haven't shown any code that requires a <code>Cursor</code>. Many times, people think it's needed to convert a <code>&amp;[u8]</code> to something that implements <code>Read</code>, but it's not. <code>Read</code> is implemented for <code>&amp;'a [u8]</code>:</p>\n\n<pre><code>use std::io::Read;\n\nfn handle(mut data: &amp;[u8]) {\n    while !data.is_empty() {\n        if let Err(err) = handle_chunk(&amp;mut data) {\n            eprintln!(\"Error while handling data: {}\", err);\n        }\n    }\n}\n\nfn handle_chunk&lt;R: Read&gt;(mut data: R) -&gt; Result&lt;(), String&gt; {\n    let mut b = [0; 10];\n    data.read_exact(&amp;mut b).unwrap();\n    println!(\"Chunk: {:?}\", b);\n    Ok(())\n}\n\nfn main() {\n    let d: Vec&lt;u8&gt; = (0..20).collect();\n    handle(&amp;d)\n}\n</code></pre>\n\n<p>By having <code>mut data: &amp;[u8]</code> and using <code>&amp;mut data</code>, the code will update the slice variable in place to advance it forward. We can't easily go backward though.</p>\n\n<blockquote>\n  <p>an <code>empty()</code> method</p>\n</blockquote>\n\n<p>Rust style indicates that an <code>empty</code> method would be a <em>verb</em> \u2014 this would remove data (if it were possible). The method you want should be called <code>is_empty</code>, as seen on slices.</p>\n"}], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 506, "favorite_count": 1, "accepted_answer_id": 50602409, "answer_count": 1, "score": 3, "last_activity_date": 1527676608, "creation_date": 1527675063, "last_edit_date": 1527676277, "question_id": 50602006, "link": "https://stackoverflow.com/questions/50602006/how-can-i-check-if-stdiocursor-has-unconsumed-data", "title": "How can I check if std::io::Cursor has unconsumed data?", "body": "<p>I am writing a low-level network app that deals with TCP sockets where I often need to process binary data streams. When some data is available, I read it into <code>u8</code> array, then wrap into <code>std::io::Cursor&lt;&amp;[u8]&gt;</code> and then pass it to handlers. In a handler, I often need to know if there is some more data in the <code>Cursor</code> or not.</p>\n\n<p>Imagine that the <code>handle</code> function receives data and then processes it in chunks using the <code>handle_chunk</code> function. For simplicity, assume that chunk size is fixed at 10 bytes; if the data size is not divisible by 10, it's an error. This simple logic can be implemented in the following way:</p>\n\n<pre><code>fn handle(mut data: Cursor&lt;&amp;[u8]&gt;) {\n    while !data.empty() {\n        if let Err(err) = handle_chunk(&amp;mut data) {\n            eprintln!(\"Error while handling data: {}\", err);\n        }\n    }\n}\n\nfn handle_chunk(data: &amp;mut Cursor&lt;&amp;[u8]&gt;) -&gt; Result&lt;(), String&gt; {\n    // Returns Err(\"unexpected EOF\".to_string()) if chunk is incomplete\n    // ...\n}\n</code></pre>\n\n<p>However, <code>Cursor</code> does not have an <code>empty()</code> method or any other method capable of telling if there is more data to process. The working solution that I could come up with is:</p>\n\n<pre><code>fn handle(data: Cursor&lt;&amp;[u8]&gt;) {\n    let data = data.into_inner();\n    let len = data.len();\n    let mut data = Cursor::new(data);\n\n    while (data.position() as usize) &lt; len - 1 {\n        if let Err(err) = handle_chunk(&amp;mut data) {\n            eprintln!(\"Error while handling data: {}\", err);\n        }\n    }\n}\n</code></pre>\n\n<p>This looks hacky and inelegant though. Is there a better solution? Maybe there is a different tool in the Rust standard library that fits here better than <code>Cursor</code>?</p>\n"}, {"tags": ["csv", "rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527674776, "post_id": 50597829, "comment_id": 88212891, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/39383809/155423\">How to transform fields during serialization using Serde?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50597829/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527675448, "post_id": 50597829, "comment_id": 88213306, "body": "@Shepmaster I&#39;ve updated the post to explain why serde attributes do not appear to be a solution."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527676679, "post_id": 50597829, "comment_id": 88214095, "body": "Did you read <b>both</b> parts of the answer? I know it&#39;s a very long answer, but read the part with &quot;to create a separate struct&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527677717, "post_id": 50597829, "comment_id": 88214760, "body": "I&#39;ve reorganized that answer to make it clear that there are two solutions presented."}, {"owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527678846, "post_id": 50597829, "comment_id": 88215568, "body": "@Shepmaster Thanks! It took a while for me to understand how your solution worked however I got it in the end :)"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1527678580, "last_edit_date": 1527678580, "creation_date": 1527675321, "answer_id": 50602107, "question_id": 50597829, "link": "https://stackoverflow.com/questions/50597829/how-to-add-an-additional-data-point-to-an-instance-of-a-struct-when-writing-it-t/50602107#50602107", "title": "How to add an additional data point to an instance of a struct when writing it to a file with Serde?", "body": "<p>If you don't want to add a timestamp column to <code>Person</code>, you can create a separate struct for that and then join them together in a tuple:</p>\n\n<pre><code>#[derive(Debug, Deserialize, Serialize)]\nstruct Timestamp {\n    time: u64,\n}\n\nimpl Timestamp {\n    fn now() -&gt; Timestamp {\n        Timestamp { time: current_ms() }\n    }\n}\n\nfn main() {\n    let person = Person {\n        first_name: \"Craig\".to_string(),\n        last_name: \"David\".to_string(),\n    };\n    let person_and_time = (Timestamp::now(), person);\n    let file_path = std::path::Path::new(\"test.csv\");\n    let mut wtr = csv::Writer::from_path(file_path).unwrap();\n    wtr.serialize(&amp;person_and_time).unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "closed_date": 1527677934, "accepted_answer_id": 50602107, "answer_count": 1, "score": 0, "last_activity_date": 1527678580, "creation_date": 1527662189, "last_edit_date": 1527675413, "question_id": 50597829, "link": "https://stackoverflow.com/questions/50597829/how-to-add-an-additional-data-point-to-an-instance-of-a-struct-when-writing-it-t", "closed_reason": "Duplicate", "title": "How to add an additional data point to an instance of a struct when writing it to a file with Serde?", "body": "<p>A <code>Person</code> has a <code>first_name</code> and a <code>last_name</code>. How do I add a <code>time</code> of export to a CSV when writing an instance of <code>Person</code> to a CSV?</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate csv;\nextern crate serde;\n\nuse std::time::{SystemTime, UNIX_EPOCH};\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Person {\n    first_name: String,\n    last_name: String,\n}\n\nfn current_ms() -&gt; u64 {\n    let since_the_epoch = &amp;SystemTime::now().duration_since(UNIX_EPOCH).unwrap();\n    let ms = since_the_epoch.as_secs() * 1000 + since_the_epoch.subsec_nanos() as u64 / 1_000_000;\n    ms\n}\n\nfn main() {\n    let person = Person {\n        first_name: \"Craig\".to_string(),\n        last_name: \"David\".to_string(),\n    };\n    let file_path = std::path::Path::new(\"test.csv\");\n    let mut wtr = csv::Writer::from_path(file_path).unwrap();\n    wtr.serialize(&amp;person).unwrap();\n    println!(\"{}\", current_ms());\n}\n</code></pre>\n\n<p>The above code results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt;&gt;&gt; cat test.csv\nfirst_name,last_name\nCraig,David\n</code></pre>\n\n<p>My objective is to generate a file which is in the format:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt;&gt;&gt; cat test.csv\ntime,first_name,last_name\n1527661792118,Craig,David\n</code></pre>\n\n<p><a href=\"https://serde.rs/container-attrs.html\" rel=\"nofollow noreferrer\">Serde attributes</a> do not have an option to add an additional field. In the above example the <code>Person</code> struct does not contain a <code>time</code> value. The <code>time</code> value is only required when the data is written to a CSV.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1527660177, "post_id": 50597033, "comment_id": 88203732, "body": "<a href=\"https://play.rust-lang.org/?gist=843baddc91fce15c667dc20ed36f3743&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ?"}, {"owner": {"reputation": 2295, "user_id": 584423, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/cdfd5cadef76ea361532bfb20499a5ba?s=128&d=identicon&r=PG", "display_name": "Boden Garman", "link": "https://stackoverflow.com/users/584423/boden-garman"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527660487, "post_id": 50597033, "comment_id": 88203881, "body": "So simple. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1527673876, "last_edit_date": 1527673876, "creation_date": 1527673215, "answer_id": 50601372, "question_id": 50597033, "link": "https://stackoverflow.com/questions/50597033/how-do-i-pass-a-path-to-commandarg/50601372#50601372", "title": "How do I pass a Path to Command::arg?", "body": "<p>If you read the signature for <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.arg\" rel=\"nofollow noreferrer\"><code>Command::arg</code></a>, you can see what types it accepts. It is any type that can be referenced as an <code>OsStr</code>:</p>\n\n<pre><code>pub fn arg&lt;S: AsRef&lt;OsStr&gt;&gt;(&amp;mut self, arg: S) -&gt; &amp;mut Command\n</code></pre>\n\n<p>If you look at the <a href=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html#implementors\" rel=\"nofollow noreferrer\">implementors of <code>AsRef</code></a>, you will see that <code>Path</code> is one:</p>\n\n<pre><code>impl AsRef&lt;OsStr&gt; for PathBuf {}\nimpl AsRef&lt;OsStr&gt; for Path {}\n</code></pre>\n\n<p>Circling back to your question:</p>\n\n<blockquote>\n  <p>How do I pass a Path to Command::arg?</p>\n</blockquote>\n\n<p>By <em>passing a <code>Path</code> to <code>arg</code></em>:</p>\n\n<pre><code>fn process(path: &amp;Path) {\n    let output = Command::new(\"gunzip\")\n        .arg(\"--stdout\")\n        .arg(path)\n        .output()\n        .expect(\"failed to execute process\");\n}\n</code></pre>\n\n<hr>\n\n<p>Your issue is that you have accepted a generic <code>P</code> that is only guaranteed to have one trait implemented: <code>P: AsRef&lt;Path&gt;</code>. <em>It's not a <code>Path</code></em>. That's why the error message tells you there's no method <code>as_os_str</code></p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `as_os_str` found for type `P` in the current scope\n</code></pre>\n</blockquote>\n\n<p>The only thing you can do for this type is to call <code>as_ref</code>. This will return a <code>&amp;Path</code>:</p>\n\n<pre><code>let output = Command::new(\"gunzip\")\n    .arg(\"--stdout\")\n    .arg(path.as_ref())\n    .output()\n    .expect(\"failed to execute process\");\n</code></pre>\n"}], "owner": {"reputation": 2295, "user_id": 584423, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/cdfd5cadef76ea361532bfb20499a5ba?s=128&d=identicon&r=PG", "display_name": "Boden Garman", "link": "https://stackoverflow.com/users/584423/boden-garman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "accepted_answer_id": 50601372, "answer_count": 1, "score": -1, "last_activity_date": 1527673876, "creation_date": 1527658662, "last_edit_date": 1527659868, "question_id": 50597033, "link": "https://stackoverflow.com/questions/50597033/how-do-i-pass-a-path-to-commandarg", "title": "How do I pass a Path to Command::arg?", "body": "<p>I'm getting back into Rust after a long break. I'm trying to do the following:</p>\n\n<pre><code>use std::fs;\nuse std::path::Path;\nuse std::process::Command;\n\nfn main() {\n    let paths = fs::read_dir(\"SOME_DIRECTORY\").unwrap();\n    for path in paths {\n        let full_path = path.unwrap().path();\n        process(full_path);\n    }\n}\n\nfn process&lt;P: AsRef&lt;Path&gt;&gt;(path: P) {\n    let output = Command::new(\"gunzip\")\n        .arg(\"--stdout\")\n        .arg(path.as_os_str())\n        .output()\n        .expect(\"failed to execute process\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `as_os_str` found for type `P` in the current scope\n  --&gt; src/main.rs:50:23\n   |\n50 |             .arg(path.as_os_str())\n   |                       ^^^^^^^^^\n</code></pre>\n\n<p><code>Command::Arg</code> is expecting an OsStr, but I am not able to convert the Path into an OsStr for some reason (something to do with the AsRef?)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1527657104, "post_id": 50596707, "comment_id": 88202623, "body": "<a href=\"https://play.rust-lang.org/?gist=0adb017cab54fe2094f62ab85edcf888&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527674165, "post_id": 50596707, "comment_id": 88212461, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/47996700/155423\">How do I bound a generic type with a trait that requires a lifetime parameter if I create the reference inside the function?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50596707/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 587, "user_id": 314185, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/24a70cc156a107485b4638c810b31374?s=128&d=identicon&r=PG", "display_name": "Gong-Yi Liao", "link": "https://stackoverflow.com/users/314185/gong-yi-liao"}, "edited": false, "score": 0, "creation_date": 1527684963, "post_id": 50596707, "comment_id": 88219895, "body": "The above error message (about implementation method) is different from the post you pointed (about lifetime)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527685308, "post_id": 50596707, "comment_id": 88220151, "body": "I didn&#39;t ask if the error messages were the same, I asked if <i>the answers solved your problem</i>. You can also choose among <a href=\"https://stackoverflow.com/q/46852367/155423\">How can I require that a reference to a generic type can be compared for equality against the generic type?</a> or <a href=\"https://stackoverflow.com/q/34630695/155423\">How to write a trait bound for adding two references of a generic type?</a>. Note how the answer is the same for all of these, we don&#39;t need to state the same answer again."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527687220, "post_id": 50596707, "comment_id": 88221587, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/47996700/how-do-i-bound-a-generic-type-with-a-trait-that-requires-a-lifetime-parameter-if\">How do I bound a generic type with a trait that requires a lifetime parameter if I create the reference inside the function?</a>"}, {"owner": {"reputation": 587, "user_id": 314185, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/24a70cc156a107485b4638c810b31374?s=128&d=identicon&r=PG", "display_name": "Gong-Yi Liao", "link": "https://stackoverflow.com/users/314185/gong-yi-liao"}, "edited": false, "score": 0, "creation_date": 1527689692, "post_id": 50596707, "comment_id": 88223511, "body": "This is due to the incorrect use of trait, change the code to <code>where T: Clone + AddAssign + Zero,  for &lt;&#39;a&gt; &amp;&#39;a T: Mul&lt;Output=T&gt;</code> solves the problem."}], "owner": {"reputation": 587, "user_id": 314185, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/24a70cc156a107485b4638c810b31374?s=128&d=identicon&r=PG", "display_name": "Gong-Yi Liao", "link": "https://stackoverflow.com/users/314185/gong-yi-liao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 145, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1527690112, "creation_date": 1527656500, "last_edit_date": 1527690112, "question_id": 50596707, "link": "https://stackoverflow.com/questions/50596707/how-can-i-require-that-a-reference-to-a-generic-type-implement-a-trait", "title": "How can I require that a reference to a generic type implement a trait?", "body": "<p>I tried to implement a generic matrix product function which should work for all primitive types and the <code>BigInt</code>/<code>BigUint</code> types from the <code>num_bigint</code> crate: </p>\n\n<pre><code>extern crate num_bigint;\nextern crate num_traits;\n\nuse num_traits::identities::Zero;\nuse std::ops::{AddAssign, Mul};\n\n#[derive(Debug, Clone)]\nstruct Matrix&lt;T&gt; {\n    n: usize,\n    m: usize,\n    data: Vec&lt;Vec&lt;T&gt;&gt;,\n}\n\nfn m_prd&lt;T&gt;(a: &amp;Matrix&lt;T&gt;, b: &amp;Matrix&lt;T&gt;) -&gt; Matrix&lt;T&gt;\nwhere\n    T: Clone + AddAssign + Mul&lt;Output = T&gt; + Zero,\n{\n    let n = a.n;\n    let p = b.n;\n    let m = b.m;\n    let mut c = Matrix {\n        n: n,\n        m: m,\n        data: vec![vec![T::zero(); m]; n],\n    };\n    for i in 0..n {\n        for j in 0..m {\n            for k in 0..p {\n                c.data[i][j] += &amp;a.data[i][k] * &amp;b.data[k][j];\n            }\n        }\n    }\n    c\n}\n\nfn main() {}\n</code></pre>\n\n<p>I got the following error message: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `*` cannot be applied to type `&amp;T`\n  --&gt; src/main.rs:29:33\n   |\n29 |                 c.data[i][j] += &amp;a.data[i][k] * &amp;b.data[k][j];\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: an implementation of `std::ops::Mul` might be missing for `&amp;T`\n</code></pre>\n\n<p>How can I implement the function for <code>&amp;T</code> in this case?</p>\n\n<p>Shepmaster deems this question as <a href=\"https://stackoverflow.com/questions/47996700\">duplicated</a>, but it seems due to operator (<code>AddAssign</code> or <code>Mul</code>) applied on reference (<code>&amp;T</code>) require separate statement after <code>where</code> keyword  </p>\n"}, {"tags": ["rust", "heap-memory", "stack-memory"], "comments": [{"owner": {"reputation": 182, "user_id": 7300944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93fbb8ca03df9c3f15cdb47580a6f7de?s=128&d=identicon&r=PG&f=1", "display_name": "eaniconer", "link": "https://stackoverflow.com/users/7300944/eaniconer"}, "edited": false, "score": 0, "creation_date": 1527656452, "post_id": 50596507, "comment_id": 88202409, "body": "@Stargateur, I added quote to the question"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1527663154, "post_id": 50596507, "comment_id": 88205312, "body": "The book is incorrect: 1) the <code>game</code> variable contains a string slice, i.e. a (pointer, length) pair pointing to the actual string. So the string doesn&#39;t begin at 0x23fb90, the <code>game</code> slice does. (If the book says &quot;string&quot; meaning &quot;string slice&quot;, then it&#39;s true that it starts at location 0x23fb90, but that location is on the stack, just like the one used for <code>health</code>.) 2) The string is not allocated on the heap, it is statically allocated."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1527679195, "post_id": 50596507, "comment_id": 88215810, "body": "@eaniconer Which edition of the book did you read?"}, {"owner": {"reputation": 182, "user_id": 7300944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93fbb8ca03df9c3f15cdb47580a6f7de?s=128&d=identicon&r=PG&f=1", "display_name": "eaniconer", "link": "https://stackoverflow.com/users/7300944/eaniconer"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1531425473, "post_id": 50596507, "comment_id": 89603731, "body": "@kazemakase 2015 Packt Publishing. First published: May 2015"}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1531428102, "post_id": 50596507, "comment_id": 89604920, "body": "@eaniconer Thanks. This means there is a chance that this has been fixed in the 2017 second edition..."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1527676927, "post_id": 50599803, "comment_id": 88214254, "body": "Not outdated. The addresses are too close together for the book to ever have made sense. Also as noted, it&#39;s not only stack vs heap, there&#39;s static memory to add to the mix (neither stack nor heap), so the book is just plain wrong :("}], "tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 11, "last_activity_date": 1538059454, "last_edit_date": 1538059454, "creation_date": 1527668705, "answer_id": 50599803, "question_id": 50596507, "link": "https://stackoverflow.com/questions/50596507/is-the-book-rust-essentials-correct-about-the-location-of-variables-in-the-sta/50599803#50599803", "title": "Is the book &quot;Rust Essentials&quot; correct about the location of variables in the stack or in the heap?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/50596507/rust-location-in-the-stack-or-in-the-heap#comment88205312_50596507\">user4815162342 commented</a>, the book is wrong. The fat pointer that is the variable <code>b</code> is located on the stack just like <code>a</code>. Only the string data it points to can be somewhere else. </p>\n\n<p>In the example <code>let mut b = \"str\";</code> the string data is actually nowhere near the heap. It is statically placed in the <a href=\"https://en.wikipedia.org/wiki/Data_segment\" rel=\"nofollow noreferrer\">data segment</a> of your program. To really place it on the heap we need to use <code>let b = String::from(\"str\");</code>. The resulting memory will look something like in the image below:</p>\n\n<p><a href=\"https://i.stack.imgur.com/FfVtU.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/FfVtU.png\" alt=\"enter image description here\"></a></p>\n\n<p>Let's manually inspect the memory to see what is going on.</p>\n\n<p>Say <code>a</code> and <code>b</code> are located at addresses 0x7ffeda6df61c and 0x7ffeda6df620.</p>\n\n<pre><code>// print part of stack memory starting at &amp;a\nlet m: &amp;[u8] = unsafe {\n    slice::from_raw_parts(&amp;a as *const _ as *const u8, 4 + 16)\n};\nprintln!(\"{:?}\", m);\n</code></pre>\n\n<p>The output will look something like this:</p>\n\n<p><code>[32, 0, 0, 0, 128, 85, 251, 177, 191, 85, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0]</code></p>\n\n<ul>\n<li><code>32, 0, 0, 0</code>: four bytes of <code>a</code></li>\n<li><code>128, 85, 251, 177, 191, 85, 0, 0</code>: first part of <code>b</code>, the 64 bit pointer to the string data</li>\n<li><code>3, 0, 0, 0, 0, 0, 0, 0</code>: second part of <code>b</code>, the length of the string </li>\n</ul>\n\n<p>Now follow the data pointer:</p>\n\n<pre><code>// manually follow the data pointer\nlet address = unsafe {\n    *(&amp;b as *const _ as *const usize)\n};\nlet p = address as *const u8;\nprintln!(\"{:p}\", p);  // 0x55bfb1fb5580\n</code></pre>\n\n<p>While <code>a</code> and <code>b</code> reside in the same memory region (0x7f...), the string data is in a different region (0x7e...).</p>\n\n<pre><code>// print content of pointer\nlet s: &amp;[u8] = unsafe {\n    slice::from_raw_parts(p, 4)\n};\nprintln!(\"{:?}\", s);  // [115, 116, 114, 32]\n</code></pre>\n\n<p>The first three bytes contain the ASCII codes for s, t, and r. The fourth byte is arbitrary garbage.</p>\n\n<p>Below is the complete code.</p>\n\n<pre><code>use std::slice;\n\nfn main() {\n    let a: i32 = 32;\n    let b = String::from(\"str\");\n    println!(\"{:p} {:p}\", &amp;a, &amp;b);\n\n    // print part of stack memory starting at a\n    let m: &amp;[u8] = unsafe {\n        slice::from_raw_parts(&amp;a as *const _ as *const u8, 4 + 16)\n    };\n    println!(\"{:?}\", m);\n\n    // manually follow the str pointer\n    let address = unsafe {\n        *(&amp;b as *const _ as *const usize)\n    };\n    let p = address as *const u8;\n    println!(\"{:p}\", p);\n\n    // print content of pointer\n    let s: &amp;[u8] = unsafe {\n        slice::from_raw_parts(p, 4)\n    };\n    println!(\"{:?}\", s);\n}\n</code></pre>\n\n<p>Note that the code example assumes 64 bit pointers and relies on implementation details of the compiler and may break in the future or on other systems. In particular, the layout of the stack frame or the <code>&amp;str</code> are not guaranteed. Please don't use any of these in real code :)</p>\n"}], "owner": {"reputation": 182, "user_id": 7300944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93fbb8ca03df9c3f15cdb47580a6f7de?s=128&d=identicon&r=PG&f=1", "display_name": "eaniconer", "link": "https://stackoverflow.com/users/7300944/eaniconer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 0, "accepted_answer_id": 50599803, "answer_count": 1, "score": 10, "last_activity_date": 1538059454, "creation_date": 1527655247, "last_edit_date": 1527672713, "question_id": 50596507, "link": "https://stackoverflow.com/questions/50596507/is-the-book-rust-essentials-correct-about-the-location-of-variables-in-the-sta", "title": "Is the book &quot;Rust Essentials&quot; correct about the location of variables in the stack or in the heap?", "body": "<p>I found code to get the memory location for variables in the book <em>Rust Essentials</em> by Ivo Balbaert in chapter 2 about \"Stack and Heap\":</p>\n\n<pre><code>let a = 32;\nlet mut b = \"str\";\nprintln!({:p} {:p}, &amp;a, &amp;b);\n</code></pre>\n\n<p>The book has the output <code>0x23fba4 0x23fb90</code> and it states that the first address is location in the stack, and the second one in the heap.</p>\n\n<p>I have some doubt about this statement because I have heard that the stack address grows toward decreasing memory address. The second address above seems to be a location in the stack.</p>\n\n<p>Am I wrong about it?</p>\n\n<p>Quote:</p>\n\n<blockquote>\n  <p>Now, we will run the following program and try to visualize the program's memory:\n  // see Chapter 2/code/references.rs</p>\n\n<pre><code>let health = 32;\nlet mut game = \"Space Invaders\";\n</code></pre>\n  \n  <p>Values are stored in memory and so they have memory addresses. The\n  health variable contains an integer value 32 that is stored in the\n  stack at location 0x23fba4, while the variable game contains a string,\n  which is stored in the heap starting at location 0x23fb90. (These were\n  the addresses when I executed the program, but they will be different\n  when you run the program.)</p>\n  \n  <p>The variables to which the values are bound are pointers or references\n  to the values. They point to them; game is a reference to Space\n  Invaders. The address of a value is given by the &amp; operator. So,\n  &amp;health is the address where value 32 is stored, and &amp;game is the\n  address where the Space Invaders' value is stored. We can print these\n  addresses by using the format string {:p} for pointers like this:</p>\n\n<pre><code>println!(\"address of health-value: {:p}\", &amp;health); // prints 0x23fba4\nprintln!(\"address of game-value: {:p}\", &amp;game); // prints 0x23fb90\n</code></pre>\n</blockquote>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 297, "user_id": 9178974, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-F1kzUPqVYAs/AAAAAAAAAAI/AAAAAAAAAw4/Na4NaHsc5iY/photo.jpg?sz=128", "display_name": "David Sullivan", "link": "https://stackoverflow.com/users/9178974/david-sullivan"}, "edited": false, "score": 0, "creation_date": 1527655833, "post_id": 50596504, "comment_id": 88202243, "body": "that makes sense, though its kinda a pain. How much of a performance impact would it really have to be implicitly cast? If something is that speed critical, then shouldn&#39;t they be using a different data structure anyway?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527656256, "post_id": 50596504, "comment_id": 88202373, "body": "&quot;Unlike Java, C# or even C++, numeric literals in Rust do not have a fixed type.&quot; <a href=\"http://en.cppreference.com/w/cpp/language/integer_literal\" rel=\"nofollow noreferrer\">???</a> &quot;Thus, the maximum possible length of a vector is the maximum possible value that can be contained in a usize.&quot; =&gt; <a href=\"https://doc.rust-lang.org/reference/types.html#machine-dependent-integer-types\" rel=\"nofollow noreferrer\">&quot;The theoretical upper bound on object and array size is the maximum isize value.</a>"}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 1, "creation_date": 1527656679, "post_id": 50596504, "comment_id": 88202480, "body": "If you mean to ask why implementations of <code>SliceIndex</code> (the trait that allows a type to be used for indexing) aren&#39;t made for other numeric types, <a href=\"https://stackoverflow.com/a/40260098/4038191\">this answer</a> puts it nicely."}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1527658218, "post_id": 50596504, "comment_id": 88202967, "body": "@Stargateur: C++: <code>auto x = 0; &#47;&#47; x: int</code> Rust: <code>let x = 0; &#47;&#47; x: {integer} (to be inferred later)</code>. Thanks for the max object/array size tip! I have edited my answer."}], "tags": [], "owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "is_accepted": true, "score": 5, "last_activity_date": 1527657016, "last_edit_date": 1527657016, "creation_date": 1527655227, "answer_id": 50596504, "question_id": 50596364, "link": "https://stackoverflow.com/questions/50596364/do-i-have-to-use-a-usize-to-access-elements-of-a-vector/50596504#50596504", "title": "Do I have to use a usize to access elements of a vector?", "body": "<p>Unlike Java, C# or even C++, numeric literals in Rust do not have a fixed type. The numeric type of a literal is usually inferred by the compiler, or explicitly stated using a suffix (<code>0usize</code>, <code>0.0f64</code>, and so on). In that regard, the type of the <code>0</code> literal in <code>assert_eq!(vec[0], 1);</code> is <em>inferred</em> to be a <code>usize</code>, since Rust allows <code>Vec</code> indexing by numbers of type <code>usize</code> only.</p>\n\n<p>As for the rationale behind using <code>usize</code> as the indexing type: a <code>usize</code> is equivalent to a <em>word</em> in the target architecture. Thus, a <code>usize</code> can refer to the index/address of all possible memory locations for the computer the program is running on. Thus, the maximum possible length of a vector is the maximum possible value that can be contained in a <code>isize</code> (<code>isize::MAX == usize::MAX / 2</code>). Using <code>usize</code> sizes and indices for a <code>Vec</code> prevents the creation and usage of a vector larger than the available memory itself.</p>\n\n<p>Furthermore, the usage of an unsigned integer just large enough to refer all possible memory locations allows the removal of two dynamic checks, one, the supplied size/index is non-negative (if <code>isize</code> was used, this check would have to be implemented manually), and two, creating a vector or dereferencing a value of a vector will not cause the computer to run out of memory. However, the latter is guaranteed only when the type stored in the vector fits into one word.</p>\n"}], "owner": {"reputation": 297, "user_id": 9178974, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-F1kzUPqVYAs/AAAAAAAAAAI/AAAAAAAAAw4/Na4NaHsc5iY/photo.jpg?sz=128", "display_name": "David Sullivan", "link": "https://stackoverflow.com/users/9178974/david-sullivan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1800, "favorite_count": 1, "accepted_answer_id": 50596504, "answer_count": 1, "score": 2, "last_activity_date": 1527677103, "creation_date": 1527654241, "last_edit_date": 1527677103, "question_id": 50596364, "link": "https://stackoverflow.com/questions/50596364/do-i-have-to-use-a-usize-to-access-elements-of-a-vector", "title": "Do I have to use a usize to access elements of a vector?", "body": "<p>I have a 2D vector that rejects indexing using <code>i32</code> values, but works if I cast those values using <code>as usize</code>:</p>\n\n<pre><code>#[derive(Clone)]\nstruct Color;\n\nstruct Pixel {\n    color: Color,\n}\n\nfn shooting_star(p: &amp;mut Vec&lt;Vec&lt;Pixel&gt;&gt;, x: i32, y: i32, w: i32, h: i32, c: Color) {\n    for i in x..=w {\n        for j in y..=h {\n            p[i][j].color = c.clone();\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>When I compile, I get the error message </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `i32: std::slice::SliceIndex&lt;[std::vec::Vec&lt;Pixel&gt;]&gt;` is not satisfied\n  --&gt; src/main.rs:11:13\n   |\n11 |             p[i][j].color = c.clone();\n   |             ^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `std::slice::SliceIndex&lt;[std::vec::Vec&lt;Pixel&gt;]&gt;` is not implemented for `i32`\n   = note: required because of the requirements on the impl of `std::ops::Index&lt;i32&gt;` for `std::vec::Vec&lt;std::vec::Vec&lt;Pixel&gt;&gt;`\n</code></pre>\n\n<p>If I change the code to have </p>\n\n<pre><code>p[i as usize][j as usize].color = c.clone();\n</code></pre>\n\n<p>Then everything works fine. However, this feels like it would be a really bizarre choice with no reason not to be handled by the <code>Vec</code> type. </p>\n\n<p>In the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">documentation</a>, there are plenty of examples like</p>\n\n<pre><code>assert_eq!(vec[0], 1);\n</code></pre>\n\n<p>By my understanding, if a plain number with no decimal is by default an <code>i32</code>, then there's no reason using an <code>i32</code> to index shouldn't work.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 2, "creation_date": 1527625153, "post_id": 50591935, "comment_id": 88193946, "body": "the compiler help <code>note: values in a scope are dropped in the opposite order they are created</code> seems particularly valuable here. Sure you can &quot;replace the sub-structure instance with another instance&quot;, but not with one that will be dropped while the &#39;parent&#39; still references it."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1527626735, "post_id": 50591935, "comment_id": 88194683, "body": "@turbulencetoo Write it as an answer"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1527639632, "post_id": 50591935, "comment_id": 88198575, "body": "Do the answers to <a href=\"https://stackoverflow.com/q/45713314/3650362\">stackoverflow.com/q/45713314/3650362</a> answer your question? (full disclosure: I wrote one)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527645393, "post_id": 50591935, "comment_id": 88199746, "body": "I agree with trentcl \u2014 I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/45713314/155423\">Is it possible to have a struct which contains a reference to a value which has a shorter lifetime than the struct?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50591935/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1527648211, "post_id": 50591935, "comment_id": 88200408, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/45713314/is-it-possible-to-have-a-struct-which-contains-a-reference-to-a-value-which-has\">Is it possible to have a struct which contains a reference to a value which has a shorter lifetime than the struct?</a>"}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527692478, "post_id": 50591935, "comment_id": 88225544, "body": "None of the answers seem to answer my question.  I tried breaking the structure into two parts, but it falls apart when you start making things mutable."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527693113, "post_id": 50591935, "comment_id": 88225967, "body": "I edited the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527693786, "post_id": 50591935, "comment_id": 88226427, "body": "<i>as soon as I make the <code>core</code> and <code>bar</code> fields mutable, it falls apart</i> \u2014 show how you&#39;ve attempted this, and <i>include</i> the error message you get. &quot;it falls apart&quot; means nothing concrete to anyone but yourself. This is basic information that you <b>have</b> to share because we aren&#39;t mind readers."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527695021, "post_id": 50591935, "comment_id": 88227200, "body": "<a href=\"https://play.rust-lang.org/?gist=ba223661af5e7598c51895e73c5eba76&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ?"}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527695338, "post_id": 50591935, "comment_id": 88227397, "body": "<a href=\"https://play.rust-lang.org/?gist=7c5109baf8c2e81ecfdad407a37aabc5&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527697651, "post_id": 50591935, "comment_id": 88228696, "body": "Your <i>new</i> problem is that <code>&amp;mut core</code> is a mutable reference to a mutable reference -- the error message is unfortunately bad, but it&#39;s not the same problem you started with. If you <a href=\"https://play.rust-lang.org/?gist=1d8a9f6684ffc33ed8a46488e106a7be&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">move <code>bar</code> and <code>core</code> instead of borrowing again</a>, you get yet another error message, still not related to the shortening of lifetimes, which <a href=\"https://play.rust-lang.org/?gist=db8276cd83835ee42425aee7178122cd&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">nevertheless goes away under <code>feature(nll)</code></a>. I still believe this is a duplicate."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527700334, "post_id": 50591935, "comment_id": 88230071, "body": "This question is now specifically asking about mutable sub-structures.  This is such a super-common handling of data.  You want to replace a reference to an instance with another reference to an instance inside the structure, and the structure and instances must be mutable.  I can&#39;t see how to do this common data manipulation easily in Rust."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527705230, "post_id": 50591935, "comment_id": 88232615, "body": "The first error you&#39;re dealing with is a consequence of <a href=\"https://stackoverflow.com/questions/36335342/meaning-of-the-ampersand-and-star-symbols-in-rust\">Rust references not working like C++ ones</a>. Once you fix that you get to <a href=\"https://stackoverflow.com/q/45713314/155423\">a problem that non-lexical lifetimes fixes</a>. Neither of these is really &quot;about mutable sub-structures&quot; so I&#39;m not sure how best to write an answer, and my inclination is to mark it a duplicate of the second one since that&#39;s a closer match to what you&#39;re actually trying to do."}], "answers": [{"comments": [{"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527793430, "post_id": 50611801, "comment_id": 88272234, "body": "Unfortunately delay initialisation won&#39;t work because the number of times the sub-object will be replaced is unbounded."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 1, "creation_date": 1527794867, "post_id": 50611801, "comment_id": 88272872, "body": "@Cthutu: Well, we&#39;ll need to see the C++ equivalent code with those unbounded replacements, to think of a possible workaround."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527795341, "post_id": 50611801, "comment_id": 88273106, "body": "The actual C++ I am trying to recreate is large as I am trying to port an application.  Its an emulator that has a structure called Nx, which has a reference to a Machine structure.  In the emulator you can change to different variations of the machine, so what I want to do is destroy the old machine and recreate a new one with different parameters.  This is a super common data idiom that Rust seems to struggle with.  I understand the reasons why, but it seems that Rust isn&#39;t practical for my purposes.  Shame, since I really wanted to get away from C/C++."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527796283, "post_id": 50611801, "comment_id": 88273571, "body": "I did find this: <a href=\"https://rust-leipzig.github.io/architecture/2016/12/20/idiomatic-trees-in-rust/\" rel=\"nofollow noreferrer\">rust-leipzig.github.io/architecture/2016/12/20/&hellip;</a>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 1, "creation_date": 1527797934, "post_id": 50611801, "comment_id": 88274449, "body": "@Cthutu: Yes, I had a somewhat similar problem when porting code to Rust. I&#39;ve found that for complex structures, a dynamic C++ pointer, <code>std::shared_ptr</code>, kind of maps to <code>Rc&lt;RefCell&lt;T&gt;&gt;</code>, or <code>Weak&lt;RefCell&lt;T&gt;&gt;</code> to break cycles<code>, or </code>Option&lt;Rc&lt;RefCell&lt;T&gt;&gt;&gt;` if nullable."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 2, "last_activity_date": 1527707074, "creation_date": 1527707074, "answer_id": 50611801, "question_id": 50591935, "link": "https://stackoverflow.com/questions/50591935/is-it-possible-to-have-a-structure-that-has-a-reference-to-a-sub-structure-whose/50611801#50611801", "title": "Is it possible to have a structure that has a reference to a sub-structure whose lifetime can be shorter?", "body": "<p>The obvious problem is that you are taking a reference to a reference unnecesarily:</p>\n\n<p>In this code, <code>core</code> and <code>bar</code> are already references, so no need to get its address:</p>\n\n<pre><code>impl&lt;'c, 'a&gt; Foo&lt;'c, 'a&gt; {\n    fn new(core: &amp;'c mut FooCore, bar: &amp;'a mut Bar) -&gt; Foo&lt;'c, 'a&gt; {\n        Foo {\n            core: &amp;mut core,\n            bar: &amp;mut bar,\n        }\n    }\n}\n</code></pre>\n\n<p>Write instead:</p>\n\n<pre><code>impl&lt;'c, 'a&gt; Foo&lt;'c, 'a&gt; {\n    fn new(core: &amp;'c mut FooCore, bar: &amp;'a mut Bar) -&gt; Foo&lt;'c, 'a&gt; {\n        Foo {\n            core: core,\n            bar: bar,\n        }\n    }\n}\n</code></pre>\n\n<p>About the subobject living longer than the main object, the general answer is \"no, you can't\", because the reference could be left dangling and Rust will not allow it. There are workarounds, as the linked answer in the comments above shows.</p>\n\n<p>As an extra workaround to mimic your C code, you could write:</p>\n\n<pre><code>fn main() {\n    // Set up first state\n    let mut core = FooCore { a: 10 };\n    let mut bar = Bar::new(42);\n    let mut bar2; //lifetime of bar2 is greater than foo!\n    let mut foo = Foo::new(&amp;mut core, &amp;mut bar);\n\n    bar2 = Bar::new(50); //delayed initialization\n    // Replace bar object\n    foo.bar = &amp;mut bar2;\n\n    println!(\"{} {}\", foo.core.a, foo.bar.0);\n}\n</code></pre>\n"}], "owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1527707074, "creation_date": 1527623472, "last_edit_date": 1527695204, "question_id": 50591935, "link": "https://stackoverflow.com/questions/50591935/is-it-possible-to-have-a-structure-that-has-a-reference-to-a-sub-structure-whose", "title": "Is it possible to have a structure that has a reference to a sub-structure whose lifetime can be shorter?", "body": "<p>I want to write the equivalent of this C++ in Rust:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>struct Bar { int x; };\nstruct Foo { Bar* bar; };\n\nvoid main() {\n    Bar bar { 42 };\n    Foo foo { &amp;bar };\n\n    Bar bar2 { 50 };\n\n    foo.bar = &amp;bar2;\n    printf(\"%d\\n\", foo.bar-&gt;x);\n}\n</code></pre>\n\n<p>The C++ sets up a structure, then swaps out a <code>Bar</code> object with another <code>Bar</code> object.  This is the code I've tried:</p>\n\n<pre><code>struct Bar(isize);\nimpl Bar {\n    fn new(i: isize) -&gt; Bar { Bar(i) }\n}\n\nstruct Foo&lt;'a&gt; {\n    bar: Option&lt;&amp;'a Bar&gt;,\n}\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn new(bar: &amp;Bar) -&gt; Foo {\n        Foo { bar: Some(&amp;bar) }\n    }\n}\n\nfn main() {\n    // Set up first state\n    let bar = Bar::new(42);\n    let mut foo = Foo::new(&amp;bar);\n\n    // Replace bar object\n    let bar2 = Bar::new(50);\n    foo.bar = Some(&amp;bar2);\n\n    if let Some(e) = foo.bar {\n        println!(\"{}\", e.0);\n    }\n}\n</code></pre>\n\n<p>This code complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `bar2` does not live long enough\n  --&gt; src/main.rs:22:21\n   |\n22 |     foo.bar = Some(&amp;bar2);\n   |                     ^^^^ borrowed value does not live long enough\n...\n27 | }\n   | - `bar2` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>Is it possible in Rust to have a structure that has a reference to a sub-structure whose lifetime can be shorter (i.e. you can replace the sub-structure instance with another instance)?</p>\n\n<p>I looked at some other answers, and tried to split up the structure:</p>\n\n<pre><code>struct Bar(isize);\nimpl Bar {\n    fn new(i: isize) -&gt; Bar {\n        Bar(i)\n    }\n}\n\nstruct FooCore {\n    a: isize,\n}\n\nstruct Foo&lt;'c, 'a&gt; {\n    core: &amp;'c FooCore,\n    bar: &amp;'a Bar,\n}\nimpl&lt;'c, 'a&gt; Foo&lt;'c, 'a&gt; {\n    fn new(core: &amp;'c FooCore, bar: &amp;'a Bar) -&gt; Foo&lt;'c, 'a&gt; {\n        Foo {\n            core: &amp;core,\n            bar: &amp;bar,\n        }\n    }\n}\n\nfn main() {\n    // Set up first state\n    let core = FooCore { a: 10 };\n    let bar = Bar::new(42);\n    let _foo = Foo::new(&amp;core, &amp;bar);\n\n    // Replace bar object\n    let bar2 = Bar::new(50);\n    let foo = Foo::new(&amp;core, &amp;bar2);\n\n    println!(\"{} {}\", foo.core.a, foo.bar.0);\n}\n</code></pre>\n\n<p>This compiles and works, however, as soon as I make the core and bar fields mutable, it falls apart.  Below is code that uses <code>mut</code>:</p>\n\n<pre><code>#![allow(unused_mut)]\n\nstruct Bar(isize);\nimpl Bar {\n    fn new(i: isize) -&gt; Bar {\n        Bar(i)\n    }\n}\n\nstruct FooCore {\n    a: isize,\n}\n\nstruct Foo&lt;'c, 'a&gt; {\n    core: &amp;'c mut FooCore,\n    bar: &amp;'a mut Bar,\n}\nimpl&lt;'c, 'a&gt; Foo&lt;'c, 'a&gt; {\n    fn new(core: &amp;'c mut FooCore, bar: &amp;'a mut Bar) -&gt; Foo&lt;'c, 'a&gt; {\n        Foo {\n            core: &amp;mut core,\n            bar: &amp;mut bar,\n        }\n    }\n}\n\nfn main() {\n    // Set up first state\n    let mut core = FooCore { a: 10 };\n    let mut bar = Bar::new(42);\n    let mut _foo = Foo::new(&amp;mut core, &amp;mut bar);\n\n    // Replace bar object\n    let mut bar2 = Bar::new(50);\n    let mut foo = Foo::new(&amp;mut core, &amp;mut bar2);\n\n    println!(\"{} {}\", foo.core.a, foo.bar.0);\n}\n</code></pre>\n\n<p>This results in the errors: </p>\n\n<pre><code>error[E0597]: `core` does not live long enough\n  --&gt; src/main.rs:21:24\n   |\n21 |             core: &amp;mut core,\n   |                        ^^^^ borrowed value does not live long enough\n...\n24 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'c as defined on the impl at 18:1...\n  --&gt; src/main.rs:18:1\n   |\n18 | impl&lt;'c, 'a&gt; Foo&lt;'c, 'a&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0597]: `bar` does not live long enough\n  --&gt; src/main.rs:22:23\n   |\n22 |             bar: &amp;mut bar,\n   |                       ^^^ borrowed value does not live long enough\n23 |         }\n24 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 18:1...\n  --&gt; src/main.rs:18:1\n   |\n18 | impl&lt;'c, 'a&gt; Foo&lt;'c, 'a&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0499]: cannot borrow `core` as mutable more than once at a time\n  --&gt; src/main.rs:35:33\n   |\n31 |     let mut _foo = Foo::new(&amp;mut core, &amp;mut bar);\n   |                                  ---- first mutable borrow occurs here\n...\n35 |     let mut foo = Foo::new(&amp;mut core, &amp;mut bar2);\n   |                                 ^^^^ second mutable borrow occurs here\n...\n38 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>How do I structure my data to achieve what I want?</p>\n"}, {"tags": ["bash", "rust", "debian", "sudo", "windows-subsystem-for-linux"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527603271, "post_id": 50586535, "comment_id": 88182345, "body": "<i>AFTER running <code>sudo su</code></i> \u2014 why? What happens if you don&#39;t use <code>sudo</code>?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527603390, "post_id": 50586535, "comment_id": 88182433, "body": "Yes, <a href=\"https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path\" title=\"how to correctly add a path to path\">unix.stackexchange.com/questions/26047/&hellip;</a>"}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527603390, "post_id": 50586535, "comment_id": 88182435, "body": "@Shepmaster it says &quot;No such file or directory&quot;. I&#39;ve tried doing <code>chown</code>, it says the same thing. I had to install Rust doing <code>sudo</code> too, it wouldn&#39;t let me do otherwise unless I added a &quot;-y&quot; flag, which I couldn&#39;t figure out how to make work. Is that part of the problem?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1527603437, "post_id": 50586535, "comment_id": 88182471, "body": "Why using sudo at all? Neither rustc, cargo, rustup, nor rustdoc need root. It&#39;s in fact dangerous to use root while compiling. (at least in the C world, not sure about Rust)"}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527603542, "post_id": 50586535, "comment_id": 88182548, "body": "@hellow it gives me this error when I try to install using <code>curl https:&#47;&#47;sh.rustup.rs -sSf | sh</code>: <code>error: $HOME differs from euid-obtained home directory: you may be using sudo error: if this is what you want, restart the installation with </code>-y&#39;`. I set my bash to open in my Windows folders automatically, is that part of the problem?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527603551, "post_id": 50586535, "comment_id": 88182557, "body": "Note, you can always run cargo/rustc by using the full path"}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527603653, "post_id": 50586535, "comment_id": 88182636, "body": "@hellow yes, but to do that every time would be really annoying..."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527603674, "post_id": 50586535, "comment_id": 88182653, "body": "Then please look at my first comment, the link to stackexchange"}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527604193, "post_id": 50586535, "comment_id": 88183001, "body": "@hellow so would I just do <code>PATH=~&#47;.home&#47;env:$PATH</code>? Would it still say &quot;No such file or directory?&quot;"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527604224, "post_id": 50586535, "comment_id": 88183021, "body": "Because <code>~</code> always refers to the home of the current user. Use a full path instead."}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527604331, "post_id": 50586535, "comment_id": 88183087, "body": "@hellow Can you give me an example? When I <code>pwd</code> from <code>$~</code> it gives me this: <code>&#47;mnt&#47;c&#47;Users&#47;nebre&#47;Desktop&#47;Coding</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527604415, "post_id": 50586535, "comment_id": 88183152, "body": "<code>echo &quot;$HOME&#47;.cargo&#47;bin&quot; | sudo tee -a &#47;etc&#47;profile</code>. After that, reboot your pc (not sure when windows reads the profile) and it should work."}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527605334, "post_id": 50586535, "comment_id": 88183769, "body": "@hellow I just did that and rebooted. It says &quot;-bash: /mnt/c/Users/nebre/Desktop/Coding/.cargo/bin: No such file or directory&quot; right when I open the shell. Like I said, I can only access or even see the /.cargo/ folder in sudo mode. Any other ideas?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527607423, "post_id": 50586535, "comment_id": 88185085, "body": "Are you sure that it&#39;s possible to compile a Rust program in the windows subsystem for linux ? Do you know that this feature of windows is limited ?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527607680, "post_id": 50586535, "comment_id": 88185232, "body": "It works :) (for me\u2122)"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1527608336, "post_id": 50586535, "comment_id": 88185619, "body": "Not a solution, but: the IntermezzOS tutorials are somewhat based on a series of blog posts by Phil Oppermann, and he&#39;s working on a <a href=\"https://os.phil-opp.com/second-edition/\" rel=\"nofollow noreferrer\">&#39;second edition&#39;</a> which as far as I know doesn&#39;t require WSL - if you can&#39;t get things working, maybe give that a try instead."}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1527609087, "post_id": 50586535, "comment_id": 88186058, "body": "@JoeClay I probably will, thanks! For now, I&#39;m just running some commands in Git Bash and some in WSL; does anyone know of a way to make the commands in my Windows path work in WSL?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528251912, "post_id": 50711056, "comment_id": 88431734, "body": "I&#39;ve never used <code>whereis</code> before, but the man page for it says (emphasis mine): <i>The whereis utility checks <b>the standard binary directories</b> for the specified programs, printing out the paths of any it finds.</i>. <code>rustc</code> <i>isn&#39;t</i> installed to a standard path. On macOS 10.13, <code>whereis rustc</code> does not print anything, while <code>rustc --version</code> does work. The more traditional method would be <code>which rustc</code>, which does work for me."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528252086, "post_id": 50711056, "comment_id": 88431770, "body": "Rustup is already supposed to add the appropriate directory to the <code>PATH</code> variable; I have such an entry in <code>.bash_profile</code>. If you can reproduce behavior that it doesn&#39;t do that in WSL, that should be reported as a bug."}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528265425, "post_id": 50711056, "comment_id": 88435317, "body": "@Shepmaster, I believe my problem was that my $HOME directory in both WSL and in my Git Bash was the same, so my Linux Rust was overwriting my other one? Anyways, I fixed the problem by setting my home directory in WSL to a folder I created one level higher than my regular Git Bash Home directory."}, {"owner": {"reputation": 167, "user_id": 8993852, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0b1928bc960776406f07bf7e68904d01?s=128&d=identicon&r=PG", "display_name": "Damian Rivas", "link": "https://stackoverflow.com/users/8993852/damian-rivas"}, "reply_to_user": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "edited": false, "score": 0, "creation_date": 1528364445, "post_id": 50711056, "comment_id": 88483359, "body": "I saw the discussion about adding rust to his path so I thought it was missing for him. @Ben, I&#39;m glad you were able to get it working!"}, {"owner": {"reputation": 167, "user_id": 8993852, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0b1928bc960776406f07bf7e68904d01?s=128&d=identicon&r=PG", "display_name": "Damian Rivas", "link": "https://stackoverflow.com/users/8993852/damian-rivas"}, "edited": false, "score": 0, "creation_date": 1528364822, "post_id": 50711056, "comment_id": 88483656, "body": "Also, <code>man whereis</code> shows me this: <i>whereis locates the binary, source and manual files for the specified command names.</i> I don&#39;t see any mention of &quot;standard binary directories.&quot; Perhaps the command behaves differently in Ubuntu and maxOS? I did look at the man page for <code>which</code> and it does look like a generally better tool. Thanks!"}], "tags": [], "owner": {"reputation": 167, "user_id": 8993852, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0b1928bc960776406f07bf7e68904d01?s=128&d=identicon&r=PG", "display_name": "Damian Rivas", "link": "https://stackoverflow.com/users/8993852/damian-rivas"}, "is_accepted": false, "score": 8, "last_activity_date": 1528251768, "last_edit_date": 1528251768, "creation_date": 1528248585, "answer_id": 50711056, "question_id": 50586535, "link": "https://stackoverflow.com/questions/50586535/make-rustc-cargo-rustup-rustdoc-commands-work-without-sudo-inside-the-windows/50711056#50711056", "title": "Make rustc, cargo, rustup, rustdoc commands work without sudo inside the Windows Subsystem for Linux", "body": "<p>Right after you install Rust, you can find where it was installed in the Linux filesystem by running <code>whereis rustc</code></p>\n\n<p>It should output something like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc: /home/damianrivas/.cargo/bin/rustc\n</code></pre>\n\n<p>You need to add that to your path, so open up <code>.bashrc</code> in an editor</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>nano ~/.bashrc\n</code></pre>\n\n<p>(if you use zsh like I do just replace it with <code>~/.zshrc</code>)</p>\n\n<p>Scroll down to the bottom of the file (or use the keyboard shortcut <code>alt + /</code>, and add Rust's location to <code>PATH</code> by adding this at the end:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code># Add Rust to $PATH\nexport PATH=\"$HOME/.cargo/bin:$PATH\"\n</code></pre>\n\n<p>I have <code>$HOME</code> because <code>/home/damianrivas/</code> is my <code>$HOME</code> path. I could've also put</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>export PATH=\"/home/damianrivas/.cargo/bin:$PATH\"\n</code></pre>\n\n<p>After this is done, exit <strong>all</strong> of your open WSL terminals before opening up a new one. You can restart your PC to be sure. Then run <code>rustc --version</code> when you open up a new terminal and it should work.</p>\n"}, {"tags": [], "owner": {"reputation": 385, "user_id": 5145574, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-6SyIa7WqdYI/AAAAAAAAAAI/AAAAAAAAAOU/bCB7BKRD4iU/photo.jpg?sz=128", "display_name": "Gabriel Fernandez", "link": "https://stackoverflow.com/users/5145574/gabriel-fernandez"}, "is_accepted": false, "score": 1, "last_activity_date": 1548671559, "creation_date": 1548671559, "answer_id": 54400020, "question_id": 50586535, "link": "https://stackoverflow.com/questions/50586535/make-rustc-cargo-rustup-rustdoc-commands-work-without-sudo-inside-the-windows/54400020#54400020", "title": "Make rustc, cargo, rustup, rustdoc commands work without sudo inside the Windows Subsystem for Linux", "body": "<p>Notice that <code>curl https://sh.rustup.rs -sSf | sh</code> will add to <code>/home/&lt;user&gt;/.profile</code> a line that appends binaries in <code>~/.cargo/bin</code>, including rustup and rustc. The addition of the binaries in <code>.cargo</code> however does not take immediate effect. An easy way to associate it with your bash terminal is (immediately after installation):</p>\n\n<pre><code>echo $(cat ~/.profile | tail -1) &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n</code></pre>\n\n<p>In your particular case, since you are root, you should copy <code>/root/home/.cargo</code> and <code>/root/home/.profile</code> into your own users home directory.</p>\n"}], "owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5008, "favorite_count": 2, "answer_count": 2, "score": 4, "last_activity_date": 1548671559, "creation_date": 1527603079, "last_edit_date": 1527603227, "question_id": 50586535, "link": "https://stackoverflow.com/questions/50586535/make-rustc-cargo-rustup-rustdoc-commands-work-without-sudo-inside-the-windows", "title": "Make rustc, cargo, rustup, rustdoc commands work without sudo inside the Windows Subsystem for Linux", "body": "<p>I'm running a WSL Debian distro because I wanted to follow along with the InterMezzOS tutorials. I followed the installation instructions for Rust and ran <code>curl https://sh.rustup.rs -sSf | sh</code>, but I can only make the <code>rustc</code> command available by running <code>source $HOME/.cargo/env</code> AFTER running <code>sudo su</code>, and when I exit <code>sudo</code> I can't call it, and when I retype <code>sudo su</code> it doesn't work anymore, I have to type it again. </p>\n\n<p>Is there any way I can make it available so the commands work every time I open my shell, without running <code>sudo</code> every time?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1527601193, "last_edit_date": 1527601193, "creation_date": 1527599678, "answer_id": 50585362, "question_id": 50584981, "link": "https://stackoverflow.com/questions/50584981/how-to-give-different-values-based-on-a-generic-type-parameter/50585362#50585362", "title": "How to give different values based on a generic type parameter?", "body": "<p>Doing what the compiler suggests works fine for me:</p>\n\n<blockquote>\n  <p>help: consider adding an explicit lifetime bound <code>T: 'static</code>...</p>\n</blockquote>\n\n<pre><code>use std::any::TypeId;\n\nenum Type {\n    Byte,\n    Short,\n}\n\nfn decide&lt;T: 'static&gt;() -&gt; (Type, bool) {\n    let dt = TypeId::of::&lt;T&gt;();\n\n    if dt == TypeId::of::&lt;u8&gt;() {\n        (Type::Byte, false)\n    } else if dt == TypeId::of::&lt;u16&gt;() {\n        (Type::Short, true)\n    } else {\n        panic!(\"Unknown type\")\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>In a future version of Rust, you can use a <code>match</code> expression to shorten it up:</p>\n\n<pre><code>#![feature(const_type_id)]\n\nfn decide&lt;T: 'static&gt;() -&gt; (Type, bool) {\n    const ID_U8: TypeId = TypeId::of::&lt;u8&gt;();\n    const ID_U16: TypeId = TypeId::of::&lt;u16&gt;();\n\n    match TypeId::of::&lt;T&gt;() {\n        ID_U8 =&gt; (Type::Byte, false),\n        ID_U16 =&gt; (Type::Short, true),\n        _ =&gt; panic!(\"Unknown type\"),\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>I would prefer to not even allow a runtime failure to be possible, however:</p>\n\n<pre><code>enum Type {\n    Byte,\n    Short,\n}\n\ntrait AsType {\n    fn as_type() -&gt; (Type, bool);\n}\n\nimpl AsType for u8 {\n    fn as_type() -&gt; (Type, bool) {\n        (Type::Byte, false)\n    }\n}\n\nimpl AsType for u16 {\n    fn as_type() -&gt; (Type, bool) {\n        (Type::Short, true)\n    }\n}\n\nfn main() {\n    u8::as_type();   // Ok\n    bool::as_type(); // Error\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no function or associated item named `as_type` found for type `bool` in the current scope\n  --&gt; src/main.rs:24:5\n   |\n24 |     bool::as_type();\n   |     ^^^^^^^^^^^^^ function or associated item not found in `bool`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `as_type`, perhaps you need to implement it:\n           candidate #1: `AsType`\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 8383049, "user_type": "registered", "profile_image": "https://graph.facebook.com/1769699696379051/picture?type=large", "display_name": "BinaryAura", "link": "https://stackoverflow.com/users/8383049/binaryaura"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 520, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1527601193, "creation_date": 1527598520, "last_edit_date": 1527600600, "question_id": 50584981, "link": "https://stackoverflow.com/questions/50584981/how-to-give-different-values-based-on-a-generic-type-parameter", "title": "How to give different values based on a generic type parameter?", "body": "<p>I'm trying to implement a <code>VertexBufferLayout</code> struct by following <a href=\"https://www.youtube.com/watch?v=oD1dvfbyf6A\" rel=\"nofollow noreferrer\">TheChernoProject Series on openGL</a>. I've been adapting the C++ series over to Rust easily enough, but I've gotten stuck.</p>\n\n<p><code>VertexBufferElement</code> has a count, the glEnum for the <code>data_type</code> it uses and a boolean, normalized. There is a generic method called <code>push</code> which takes a u32 count that pushes a VertexBufferElement to elements Vec and updates the stride.</p>\n\n<p>I can't seem to get the function to accept code for matching the type. I've attempted to use <code>TypeId</code>, <code>Any</code>, and <code>PhantomData</code> when I got an error.</p>\n\n<pre><code>pub fn push&lt;T: 'a&gt;(&amp;mut self, count: u32) {\n    let dt = TypeId::of::&lt;T&gt;();\n    let (data_type, normalized) = if dt == TypeId::of::&lt;i8&gt;() {\n        (gl::BYTE, false)\n    } else if dt == TypeId::of::&lt;u8&gt;() {\n        (gl::UNSIGNED_BYTE, true)\n    } else if dt == TypeId::of::&lt;i16&gt;() {\n        (gl::SHORT, false)\n    } else if dt == TypeId::of::&lt;u16&gt;() {\n        (gl::UNSIGNED_SHORT, false)\n    } else if dt == TypeId::of::&lt;i32&gt;() {\n        (gl::INT, false)\n    } else if dt == TypeId::of::&lt;u32&gt;() {\n        (gl::UNSIGNED_INT, false)\n    } else if dt == TypeId::of::&lt;f16&gt;() {\n        (gl::HALF_FLOAT, false)\n    } else if dt == TypeId::of::&lt;f32&gt;() {\n        (gl::FLOAT, false)\n    } else if dt == TypeId::of::&lt;f64&gt;() {\n        (gl::DOUBLE, false)\n    } else {\n        panic!(\"Incompatible Type\")\n    };\n    self.elements.push(VertexBufferElement{data_type, count, normalized, _marker: PhantomData});\n    self.stride += mem::size_of::&lt;T&gt;();\n}\n</code></pre>\n\n<p><a href=\"https://pastebin.com/sjfEKve7\" rel=\"nofollow noreferrer\">vertex_buffer_layout.rs</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    error[E0310]: the parameter type `T` may not live long enough\n  --&gt; opengl\\examples\\vertex_buffer_layout.rs:26:18\n   |\n25 |     pub fn push&lt;T: 'a&gt;(&amp;mut self, count: u32) {\n   |                 -- help: consider adding an explicit lifetime bound `T: 'static`...\n26 |         let dt = TypeId::of::&lt;T&gt;();\n   |                  ^^^^^^^^^^^^^^^\n   |\nnote: ...so that the type `T` will meet its required lifetime bounds\n  --&gt; opengl\\examples\\vertex_buffer_layout.rs:26:18\n   |\n26 |         let dt = TypeId::of::&lt;T&gt;();\n   |  \n</code></pre>\n\n<p>At first it was 'T' may not live long enough, but it was only a generic function, and the float only dictated a number that was saved, not a type itself, so I attempted <code>PhantomData</code>. Any errors after that was me not having a clue what I'm doing, having never used <code>PhantomData</code> before, and can't find anything for this situation.</p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "edited": false, "score": 0, "creation_date": 1527552706, "post_id": 50574710, "comment_id": 88158790, "body": "Please include the error&#39;s context, so we know where it&#39;s pointing to."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527556181, "post_id": 50574710, "comment_id": 88159372, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/50574710/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. Reduce your code as far as possible \u2014 do you <i>need</i> to return a <code>Result</code>; do you <i>need</i> a custom struct, do you <i>need</i> to have multiple <code>retain</code> statements, etc. Your code doesn&#39;t make sense: you say you have a <code>Result</code>, but your <code>match</code> statement uses <code>Result::Ok</code> and <code>Option::None</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527556411, "post_id": 50574710, "comment_id": 88159415, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields and <code>UpperCamelCase</code> for types. Use <code>my_data</code> instead, please."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1598272447, "last_edit_date": 1598272447, "creation_date": 1527557575, "answer_id": 50575195, "question_id": 50574710, "link": "https://stackoverflow.com/questions/50574710/how-to-use-contains-and-retain-with-string/50575195#50575195", "title": "How to use contains() and retain() with String?", "body": "<p>Here is a <a href=\"/help/mcve\">MCVE</a> of your problem (your original code has other, unrelated problems that are ignored here):</p>\n<pre><code>struct MyData {\n    name: Option&lt;String&gt;,\n}\n\nfn main() {\n    let mut my_data: Vec&lt;MyData&gt; = vec![];\n\n    // Only keep data if 'name' is in this list\n    let names = [&quot;Alice&quot;, &quot;Bob&quot;, &quot;Claire&quot;];\n    my_data.retain(|ref d| names.contains(d.name.unwrap().as_str()));\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:10:43\n   |\n10 |     my_data.retain(|ref d| names.contains(d.name.unwrap().as_str()));\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ expected `&amp;str`, found `str`\n   |\n   = note: expected reference `&amp;&amp;str`\n              found reference `&amp;str`\n</code></pre>\n<p>As the error message states, <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.contains\" rel=\"nofollow noreferrer\"><code>slice::contains</code></a> requires a reference to the type of value contained in the slice:</p>\n<pre><code>pub fn contains(&amp;self, x: &amp;T) -&gt; bool\nwhere\n    T: PartialEq&lt;T&gt;,\n</code></pre>\n<p>Since your slice contains string literals (of type <code>&amp;'static str</code>), it needs a <code>&amp;&amp;str</code> to compare against. We will take a reference to the result of the <code>as_str</code> method:</p>\n<pre><code>my_data.retain(|ref d| names.contains(&amp;d.name.unwrap().as_str()));\n//                                    ^-- added\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of `d.name` which is behind a shared reference\n  --&gt; src/main.rs:10:44\n   |\n10 |     my_data.retain(|ref d| names.contains(&amp;d.name.unwrap().as_str()));\n   |                                            ^^^^^^\n   |                                            |\n   |                                            move occurs because `d.name` has type `std::option::Option&lt;std::string::String&gt;`, which does not implement the `Copy` trait\n   |                                            help: consider borrowing the `Option`'s content: `d.name.as_ref()`\n</code></pre>\n<p>This error is already thoroughly explained elsewhere on Stack Overflow:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32338659/155423\">Cannot move out of value which is behind a shared reference when unwrapping</a></li>\n<li><a href=\"https://stackoverflow.com/q/28158738/155423\">Cannot move out of borrowed content / cannot move out of behind a shared reference</a></li>\n<li><a href=\"https://stackoverflow.com/q/28034646/155423\">Can&#39;t borrow File from &amp;mut self (error msg: cannot move out of borrowed content)</a></li>\n<li><a href=\"https://stackoverflow.com/q/29926724/155423\">Matching String: cannot move out of borrowed content</a></li>\n</ul>\n<p>TL;DR \u2014 you don't own <code>d</code>, so you cannot unwrap <code>d.name</code>, consuming the value in the process. The fix is to use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_ref\" rel=\"nofollow noreferrer\"><code>Option::as_ref</code></a>:</p>\n<pre><code>my_data.retain(|ref d| names.contains(&amp;d.name.as_ref().unwrap().as_str()));\n//                                           ^^^^^^^^^-- added\n</code></pre>\n<p>However, needing to <code>unwrap</code> is ugly and it's ideally avoided. You can combine the two <code>retain</code> calls into one <em>and</em> skip the unwrap by using <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or\" rel=\"nofollow noreferrer\"><code>Option::map_or</code></a>:</p>\n<pre><code>my_data.retain(|d| {\n    d.name.as_ref().map_or(false, |name| {\n        let name = name.as_str();\n        names.contains(&amp;name)\n    })\n});\n</code></pre>\n<p>This removes a potential panic and improves the efficiency of the code.</p>\n<p>Since Rust 1.40, this can be shortened with <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_deref\" rel=\"nofollow noreferrer\"><code>Option::as_deref</code></a>:</p>\n<pre><code>my_data.retain(|d| {\n    d.name\n        .as_deref()\n        .map_or(false, |name| names.contains(&amp;name))\n});\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31233938/155423\">Converting from Option&lt;String&gt; to Option&lt;&amp;str&gt;</a></li>\n</ul>\n"}], "owner": {"reputation": 111, "user_id": 5609619, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/621c255a2db68997b1b555cf3800d262?s=128&d=identicon&r=PG&f=1", "display_name": "ceyx", "link": "https://stackoverflow.com/users/5609619/ceyx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 560, "favorite_count": 0, "accepted_answer_id": 50575195, "answer_count": 1, "score": 0, "last_activity_date": 1598272447, "creation_date": 1527552621, "last_edit_date": 1527602533, "question_id": 50574710, "link": "https://stackoverflow.com/questions/50574710/how-to-use-contains-and-retain-with-string", "title": "How to use contains() and retain() with String?", "body": "<p>I'm trying to use the <code>retain(...)</code> method to filter out values from a vector. As it stands, my code thus far is </p>\n\n<pre><code>let results = get_data(); // Returns Result&lt;Vec&lt;MyData&gt;, Box&lt;Error&gt;&gt;\n\nmatch results {\n    Ok(mut my_data) =&gt; {\n\n        // Make sure that `name` is not None\n        myData.retain(|ref d| d.name.is_some());\n\n        // Only keep data if 'name' is in this list\n        let names = [\"Alice\", \"Bob\", \"Claire\"];\n        my_data.retain(|ref d| names.contains(d.name.unwrap().as_str()));\n    },\n    Err(_) =&gt; {}\n}\n</code></pre>\n\n<p>However, this yields the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>|\n|     my_data.retain(|ref d| names.contains(d.name.unwrap().as_str()));\n|                                           ^^^^^^^^^^^^^^^^^^^^^^^^ expected &amp;str, found str\n|\n= note: expected type `&amp;&amp;str`\n           found type `&amp;str`\n</code></pre>\n\n<p>It seems like the compiler is telling me two separate things here, but in both cases it seems to want an additional reference. However, when I try to change the relevant line to <code>&amp;names.contains(d.name.unwrap().as_str())</code>, the compiler throws the following error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>|\n|     my_data.retain(|ref d| names.contains(&amp;d.name.unwrap().as_str()));\n|                                            ^ cannot move out of borrowed content\n</code></pre>\n\n<p>How can I check whether a borrowed <code>String</code> (I think that's what the type of <code>name.unwrap()</code> is anyway) is contained in the <code>names</code> vector? </p>\n"}, {"tags": ["reference", "rust", "lifetime"], "comments": [{"owner": {"reputation": 23009, "user_id": 3613500, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/lIfov.png?s=128&g=1", "display_name": "David Haim", "link": "https://stackoverflow.com/users/3613500/david-haim"}, "edited": false, "score": 1, "creation_date": 1527541548, "post_id": 50573384, "comment_id": 88156376, "body": "I&#39;m not a rust developer but I&#39;m guessing that without the reference notation (<code>&amp;</code>) the program will try to copy <code>v</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1527542642, "post_id": 50573384, "comment_id": 88156671, "body": "No, Rust will not automatically copy most types, including a <code>Vec</code>. The value would be moved and no longer available."}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527551983, "post_id": 50573384, "comment_id": 88158676, "body": "@Shepmaster I didn&#39;t realize a for loop would take ownership like that. I (incorrectly) assumed it would behave like <code>if s == &quot;str&quot;</code> or <code>println!(&quot;{}&quot;, s)</code> which do not appear to take ownership."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1527556829, "post_id": 50573384, "comment_id": 88159483, "body": "Certainly. However, <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#tymethod.eq\" rel=\"nofollow noreferrer\"><code>PartialEq</code> takes <code>&amp;self</code></a> and <a href=\"https://stackoverflow.com/questions/30450399/does-println-borrow-or-own-the-variable\"><code>println!</code> is a macro and takes its arguments by reference for usability</a>."}], "owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "closed_date": 1527542586, "answer_count": 0, "score": 0, "last_activity_date": 1527542510, "creation_date": 1527541342, "last_edit_date": 1527542184, "question_id": 50573384, "link": "https://stackoverflow.com/questions/50573384/why-use-a-reference-to-an-immutable-vector-in-a-for-loop", "closed_reason": "Duplicate", "title": "Why use a reference to an immutable vector in a for loop?", "body": "<p>In <a href=\"https://doc.rust-lang.org/book/second-edition/ch08-01-vectors.html\" rel=\"nofollow noreferrer\">Chapter 8 of the Rust Book</a> they give they following <a href=\"https://doc.rust-lang.org/book/second-edition/ch08-01-vectors.html#iterating-over-the-values-in-a-vector\" rel=\"nofollow noreferrer\">example</a>:</p>\n\n<pre><code>let v = vec![100, 32, 57];\nfor i in &amp;v {\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<p>I don't understand why <code>&amp;v</code> was used instead of <code>v</code>.</p>\n\n<p>If <code>v</code> is immutable what is the purpose of using a reference instead of <code>v</code> itself?</p>\n"}, {"tags": ["rust", "neovim", "rls"], "answers": [{"tags": [], "owner": {"reputation": 491, "user_id": 3816796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BsnxI.jpg?s=128&g=1", "display_name": "taryn", "link": "https://stackoverflow.com/users/3816796/taryn"}, "is_accepted": true, "score": 3, "last_activity_date": 1527540550, "last_edit_date": 1527540550, "creation_date": 1527539771, "answer_id": 50573163, "question_id": 50573080, "link": "https://stackoverflow.com/questions/50573080/how-do-i-configure-the-rust-language-server-via-languageclient-neovim/50573163#50573163", "title": "How do I configure the Rust Language Server via LanguageClient-neovim?", "body": "<p>LanguageClient-neovim allows you to configure servers via the <code>&lt;project&gt;/.vim/settings.json</code> file.</p>\n\n<p>If this does not exist you will want to create it and track it in your version control system.</p>\n\n<p>The RLS configuration options are detailed in <a href=\"https://github.com/rust-lang-nursery/rls#configuration\" rel=\"nofollow noreferrer\">the project's README</a>.</p>\n\n<p>The structure of your settings file should be as such:</p>\n\n<pre><code>{\n    \"rust\": {\n        \"wait_to_build\": 1500\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Once you have saved that file you will need to restart the client by issuing the command <code>:LanguageClientStop</code> then <code>:LanguageClientStart</code>.</p>\n"}], "owner": {"reputation": 491, "user_id": 3816796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BsnxI.jpg?s=128&g=1", "display_name": "taryn", "link": "https://stackoverflow.com/users/3816796/taryn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 697, "favorite_count": 0, "accepted_answer_id": 50573163, "answer_count": 1, "score": 2, "last_activity_date": 1527540575, "creation_date": 1527539276, "last_edit_date": 1527540575, "question_id": 50573080, "link": "https://stackoverflow.com/questions/50573080/how-do-i-configure-the-rust-language-server-via-languageclient-neovim", "title": "How do I configure the Rust Language Server via LanguageClient-neovim?", "body": "<p>I am attempting to use <a href=\"https://github.com/rust-lang-nursery/rls\" rel=\"nofollow noreferrer\">the Rust Language Server</a> via <a href=\"https://github.com/autozimu/LanguageClient-neovim\" rel=\"nofollow noreferrer\">LanguageClient-neovim</a> and I want to set RLS options such as <code>wait_to_build</code>.</p>\n\n<p>I do not wish to configure LanguageClient-neovim settings like how to start the RLS process.</p>\n\n<p>The RLS only explains configuring <a href=\"https://github.com/rust-lang-nursery/rls-vscode\" rel=\"nofollow noreferrer\">the VSCode extension</a> via <code>&lt;project&gt;/.vscode/settings.json</code>.</p>\n\n<p>How can I set configuration options for my server?</p>\n"}, {"tags": ["javascript", "rust", "axios", "rust-rocket"], "comments": [{"owner": {"reputation": 793711, "user_id": 19068, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d2d3229ed1961d2bd81853242493247?s=128&d=identicon&r=PG", "display_name": "Quentin", "link": "https://stackoverflow.com/users/19068/quentin"}, "edited": false, "score": 0, "creation_date": 1527534643, "post_id": 50572190, "comment_id": 88154122, "body": "<a href=\"https://github.com/SergioBenitez/Rocket/issues/25\" rel=\"nofollow noreferrer\">github.com/SergioBenitez/Rocket/issues/25</a>"}, {"owner": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "edited": false, "score": 0, "creation_date": 1527534872, "post_id": 50572190, "comment_id": 88154200, "body": "sorry that was just laziness writing the code in here. I updated it"}, {"owner": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "reply_to_user": {"reputation": 793711, "user_id": 19068, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d2d3229ed1961d2bd81853242493247?s=128&d=identicon&r=PG", "display_name": "Quentin", "link": "https://stackoverflow.com/users/19068/quentin"}, "edited": false, "score": 0, "creation_date": 1527534927, "post_id": 50572190, "comment_id": 88154219, "body": "@Quentin thanks. I&#39;m actually using rocket_cors to get around that issue."}], "answers": [{"tags": [], "owner": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "is_accepted": false, "score": 0, "last_activity_date": 1527535239, "creation_date": 1527535239, "answer_id": 50572422, "question_id": 50572190, "link": "https://stackoverflow.com/questions/50572190/error-sending-post-request-from-react-app-to-rocket-backend/50572422#50572422", "title": "Error sending POST request from React app to Rocket backend", "body": "<p>I think I was thrown off by how the the OPTIONS route logs. I assumed it was sending a 404 response to the front end because the line <code>Warning: Responding with 404 Not Found catcher</code> but two lines underneath it said <code>Response succeeded</code> so I dug a little deeper in DevTools.</p>\n\n<p>OPTIONS was sending back a 200 response, and since I was accounting only for a created 201 response, it threw an error.</p>\n\n<p>I updated my API to </p>\n\n<pre><code>if (res.status == 201 || res.status == 200) {\n  console.log(\"letter successfully submitted\")\n  return res\n}\n</code></pre>\n\n<p>and that prevented the error from being thrown.</p>\n"}], "owner": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 477, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1540479350, "creation_date": 1527533864, "last_edit_date": 1540479350, "question_id": 50572190, "link": "https://stackoverflow.com/questions/50572190/error-sending-post-request-from-react-app-to-rocket-backend", "title": "Error sending POST request from React app to Rocket backend", "body": "<p>I'm getting a 404 error when trying to make a POST request from a single page application even though the route works in Postman.</p>\n\n<p>routes.rs</p>\n\n<pre><code>#[post(\"/letters\", format = \"application/json\", data = \"&lt;new_letter&gt;\")]\nfn write_letter(new_letter: Json&lt;NewLetter&gt;, conn: DbConn) -&gt; Json&lt;Value&gt; {\n    Json(json!({\n        \"status\": Letter::write(new_letter.into_inner(), &amp;conn),\n        \"result\": null\n    }))\n\n}\n</code></pre>\n\n<p>I've got my main.rs set up to allow for CORS</p>\n\n<pre><code>let (allowed_origins, failed_origins) = AllowedOrigins::some(&amp;[\"http://localhost:3000\"]);\nlet options = rocket_cors::Cors {\n    allowed_origins: allowed_origins,\n    allowed_methods: vec![Method::Get, Method::Put, Method::Post, Method::Delete]\n        .into_iter()\n        .map(From::from)\n        .collect(),\n    allowed_headers: AllowedHeaders::all(),\n    allow_credentials: true,\n    ..Default::default()\n};\n</code></pre>\n\n<p>All of the routes work in Postman and the GET requests work from my application. However, when I try to make a POST request from my application, I get a 404 on the front end and the following logged from my backend: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>OPTIONS /api/letters:\n=&gt; Error: No matching routes for OPTIONS /api/letters.\n=&gt; Warning: Responding with 404 Not Found catcher.\n=&gt; CORS Fairing: Turned missing route OPTIONS /api/letters into an OPTIONS pre-flight request\n=&gt; Response succeeded.\n</code></pre>\n\n<p>And here's my front end for reference:</p>\n\n<pre><code>writeLetter: (letter) =&gt; axios.post(`${base_url}/api/letters`, letter)\n  .then(res =&gt; {\n     if (res.status == 201) {\n      console.log(\"letter successfully submitted\")\n      return res\n    }\n    throw new Error(res.error)\n  }),\n</code></pre>\n\n<p>Is the problem with how I'm implementing Axios or rocket_cors? I found <a href=\"https://github.com/lawliet89/rocket_cors/issues/23\" rel=\"nofollow noreferrer\">one similar issue</a> but I seem to be configuring it correctly.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527525959, "post_id": 50570510, "comment_id": 88150875, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50570510/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527525978, "post_id": 50570510, "comment_id": 88150883, "body": "TL;DR the duplicate: <code>while let Some(t) = { inner_this } {</code>"}], "owner": {"reputation": 571, "user_id": 4493361, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh3.googleusercontent.com/-1j2w11MYwK8/AAAAAAAAAAI/AAAAAAAAAEM/cllVRT5KBFs/photo.jpg?sz=128", "display_name": "ccQpein", "link": "https://stackoverflow.com/users/4493361/ccqpein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1527526375, "answer_count": 0, "score": 0, "last_activity_date": 1527525866, "creation_date": 1527525421, "last_edit_date": 1527525866, "question_id": 50570510, "link": "https://stackoverflow.com/questions/50570510/how-to-re-assign-a-mut-value-while-traversing-a-linked-list-with-a-while-loop", "closed_reason": "Duplicate", "title": "How to re-assign a &amp;mut value while traversing a linked list with a while loop?", "body": "<p>I am trying to make a list struct and implement a method that adds 1 to the next node if the current node's value is greater or equal to ten. </p>\n\n<p>I write this while loop and want to assign <code>inner_this</code> to next node in loop:</p>\n\n<pre><code>struct ListNode {\n    val: i32,\n    next: Option&lt;Box&lt;ListNode&gt;&gt;,\n}\n\nfn check_ten(this: &amp;mut Option&lt;Box&lt;ListNode&gt;&gt;, f: &amp;i32) {\n    let mut inner_this = this;\n    let mut flag = *f;\n    while let Some(t) = inner_this {\n        t.val += flag;\n        if t.val &gt;= 10 {\n            t.val = t.val - 10;\n            flag = 1;\n        } else {\n            flag = 0\n        }\n        let next = &amp;mut t.next;\n        inner_this = next;\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I get this compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `inner_this.0` as mutable more than once at a time\n  --&gt; ATN.rs:9:20\n   |\n9  |     while let Some(t) = inner_this {\n   |                    ^ mutable borrow starts here in previous iteration of loop\n...\n20 | }\n   | - mutable borrow ends here\n\nerror[E0506]: cannot assign to `inner_this` because it is borrowed\n  --&gt; ATN.rs:18:9\n   |\n9  |     while let Some(t) = inner_this {\n   |                    - borrow of `inner_this` occurs here\n...\n18 |         inner_this = next;\n   |         ^^^^^^^^^^^^^^^^^ assignment to borrowed `inner_this` occurs here\n</code></pre>\n\n<p>Is there a way to implement this requirement and assign <code>inner_this</code> again? Do I need to use <code>loop</code> instead of <code>while</code>?</p>\n"}, {"tags": ["routing", "rust", "rust-rocket"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527520280, "post_id": 50569003, "comment_id": 88148382, "body": "<i>this doesn&#39;t seem like it will scale</i> \u2014 why don&#39;t you try it and find out if it scales? <a href=\"https://stackoverflow.com/q/35609059/155423\">People ask how to split apart a routes.rb file</a> when it gets too big. Even your GitLab example <a href=\"https://github.com/gitlabhq/gitlabhq/tree/master/config/routes\" rel=\"nofollow noreferrer\">splits it into multiple files</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1527520906, "post_id": 50569003, "comment_id": 88148695, "body": "<a href=\"https://github.com/SergioBenitez/Rocket/blob/v0.3.11/examples/manual_routes/src/main.rs\" rel=\"nofollow noreferrer\">github.com/SergioBenitez/Rocket/blob/v0.3.11/examples/&hellip;</a>"}], "owner": {"reputation": 3502, "user_id": 2558108, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/DUiG3.jpg?s=128&g=1", "display_name": "Qwertie", "link": "https://stackoverflow.com/users/2558108/qwertie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1527520641, "creation_date": 1527519168, "last_edit_date": 1527520641, "question_id": 50569003, "link": "https://stackoverflow.com/questions/50569003/is-there-a-way-to-create-a-central-routing-file-which-contains-only-routes-and-t", "title": "Is there a way to create a central routing file which contains only routes and the functions they are for in Rocket?", "body": "<p>Looking at <a href=\"https://rocket.rs/guide/overview/#routing\" rel=\"nofollow noreferrer\">the example code</a>, they all define routes above the functions for handling them. For a bigger project this doesn't seem like it will scale.</p>\n\n<p>Is there a way to create a central routing file which contains only the routes and the functions they are for similar to routes.rb in Rails?</p>\n\n<p>Here is an example of a section of the routing file <a href=\"https://github.com/gitlabhq/gitlabhq/blob/6c51e220ef2774447038a909c4f22ff90eb624fb/config/routes.rb#L26-L37\" rel=\"nofollow noreferrer\">from the GitLab Rails app</a>:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code># Autocomplete\nget '/autocomplete/users' =&gt; 'autocomplete#users'\nget '/autocomplete/users/:id' =&gt; 'autocomplete#user'\nget '/autocomplete/projects' =&gt; 'autocomplete#projects'\nget '/autocomplete/award_emojis' =&gt; 'autocomplete#award_emojis'\n\n# Search\nget 'search' =&gt; 'search#show'\nget 'search/autocomplete' =&gt; 'search#autocomplete', as: :search_autocomplete\n\n# JSON Web Token\nget 'jwt/auth' =&gt; 'jwt#auth'\n</code></pre>\n\n<p>This allows you to easily see which routes exist within the app without having to look throughout the project.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527514390, "post_id": 50566942, "comment_id": 88145209, "body": "Note: with feature(nll) there will be less errors. Success? ;)"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1527516121, "post_id": 50566942, "comment_id": 88146150, "body": "Interestingly, adding the <code>T: &#39;static</code> condition (<code>impl&lt;C, T: &#39;static&gt; Foo&lt;T&gt; for C where ...</code>) fixes all errors."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 6, "last_activity_date": 1527595413, "last_edit_date": 1527595413, "creation_date": 1527516943, "answer_id": 50568347, "question_id": 50566942, "link": "https://stackoverflow.com/questions/50566942/adding-unrelated-generic-parameter-triggers-strange-lifetime-error/50568347#50568347", "title": "Adding unrelated generic parameter triggers strange lifetime error", "body": "<p>It makes sense, and is not a compiler bug, but it is somewhat inconvenient.</p>\n\n<h2>Full Explanation</h2>\n\n<p>It's possible to implement <code>Index&lt;T&gt;</code> for a type <code>C</code> such that <code>C::Output</code> has a type that must outlive some lifetime that is <em>internal</em> to <code>T</code>. Here's a silly example:</p>\n\n<pre><code>struct IntRef&lt;'a&gt;(&amp;'a i32);\n\nimpl&lt;'a, 'b: 'a&gt; Index&lt;IntRef&lt;'a&gt;&gt; for IntRef&lt;'b&gt; {\n    type Output = IntRef&lt;'a&gt;;\n    fn index(&amp;self, _: IntRef&lt;'a&gt;) -&gt; &amp;Self::Output {\n        self\n    }\n}\n</code></pre>\n\n<p>The blanket <code>impl</code> would try to implement <code>Foo&lt;IntRef&lt;'a&gt;&gt;</code> for <code>IntRef&lt;'b&gt;</code>, which is unsound. To understand why, take a look at this non-compiling example:</p>\n\n<pre><code>let b = 2i32; // 'b begins here:\nlet b_ref = IntRef(&amp;b);\nlet o: &amp;Display;  // a reference that outlives 'a but not 'b\n{\n    let a = 1i32; // 'a begins here:\n    let a_ref = IntRef(&amp;a);\n\n    o = &amp;b_ref[a_ref]; // &lt;-- this errors: \"a doesn't live long enough\"\n                       //     which is correct!\n    o = b_ref.foo(a_ref); // &lt;-- this wouldn't error, because the returned\n                          //     value is `&amp;'x (Display + 'x)` where 'x is\n                          //     the lifetime of `b_ref`\n}\nprintln!(\"{:?}\", o);\n</code></pre>\n\n<p><code>o = &amp;b_ref[a_ref];</code> will not compile because <code>Index</code> is implemented such that <code>b_ref[a_ref]</code> cannot outlive <code>a_ref</code>. But <code>o = b_ref.foo(a_ref)</code> <em>must</em> compile, since the definition of <code>Foo&lt;T&gt;::foo</code>...</p>\n\n<pre><code>fn foo(&amp;self, i: T) -&gt; &amp;Display                   // what you wrote\nfn foo&lt;'a&gt;(&amp;'a self, i: T) -&gt; &amp;'a ('a + Display)  // what the compiler inferred\n</code></pre>\n\n<p>... enforces that the lifetime of the output depends <em>only</em> on the lifetime of <code>&amp;self</code> (see <a href=\"https://stackoverflow.com/q/40325690/3650362\">this question</a>). The compiler rejects the blanket implementation of <code>Foo</code> because if it were allowed, you could use it to \"enlarge\" a lifetime like that of <code>a_ref</code> in the above example.</p>\n\n<p>(I couldn't come up with a way to make <code>IntRef</code> practical, but the fact remains that you <em>could</em> do it. Possibly, with internal mutability, a sufficiently clever person could introduce unsoundness were this allowed.)</p>\n\n<hr>\n\n<h2>Solution 0: Quick &amp; dirty</h2>\n\n<p>Just require that <code>T</code> never contain any (non-<code>'static</code>) references and your job is done.</p>\n\n<pre><code>impl&lt;C, T&gt; Foo&lt;T&gt; for C\nwhere\n    T: 'static,\n    C: Index&lt;T&gt;,\n    C::Output: Display + Sized,\n</code></pre>\n\n<p>This is probably the case for most common uses of the <code>Index</code> trait, but if you want to be able to implement <code>Foo&lt;&amp;T&gt;</code> (which is not unreasonable), you'll want to try something a little less restrictive.</p>\n\n<p>Another possibility is requiring <code>C::Output</code> to be <code>'static</code>, but this is again more conservative than necessary.</p>\n\n<h2>Solution 1: The Best Way</h2>\n\n<p>Let's go back to the desugaring of <code>Foo::foo</code>:</p>\n\n<pre><code>fn foo&lt;'a&gt;(&amp;'a self, i: T) -&gt; &amp;'a ('a + Display)\n</code></pre>\n\n<p>Notice the two <code>'a</code>s in <code>&amp;'a ('a + Display)</code>. Although they are the same, they represent different things: the (maximum) lifetime of the reference being returned, and the (maximum) lifetime of any references contained inside the thing that is being referenced.</p>\n\n<p>In <code>Index</code>, which is what we're using to implement <code>Foo</code>, the lifetime of the reference being returned is always connected to the borrow of <code>&amp;self</code>. But <code>Self::Output</code> may contain other references with different (possibly shorter) lifetimes, which is the whole problem. So what we'd really like to write is...</p>\n\n<pre><code>fn foo(&amp;self, i: T) -&gt; &amp;('a + Display)            // what you write\nfn foo&lt;'b&gt;(&amp;'b self, i: T) -&gt; &amp;'b ('a + Display)  // what the compiler infers\n</code></pre>\n\n<p>... which decouples the lifetime of <code>&amp;self</code> from any lifetimes that could be internal to <code>Self::Output</code>.</p>\n\n<p>Of course the problem now is that <code>'a</code> isn't defined in the trait anywhere, so we have to add it as a parameter:</p>\n\n<pre><code>trait Foo&lt;'a, T&gt; {\n    fn foo(&amp;self, i: T) -&gt; &amp;('a + Display);\n}\n</code></pre>\n\n<p>Now you can tell Rust that <code>C::Output</code> must outlive <code>'a</code> for the <code>impl</code> to apply, and all will be fine (<a href=\"https://play.rust-lang.org/?gist=ff0ce578450aed64453424cb06476eed&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>impl&lt;'a, C, T&gt; Foo&lt;'a, T&gt; for C\nwhere\n    C: Index&lt;T&gt;,\n    C::Output: 'a + Display + Sized,\n{\n    fn foo(&amp;self, i: T) -&gt; &amp;('a + Display) {\n        &amp;self[i]\n    }\n}\n</code></pre>\n\n<h2>Solution 2: Put the bound on the method</h2>\n\n<p>Solution 1 requires you to add a lifetime parameter to <code>Foo</code>, which might be undesirable. Another possibility is to add a <code>where</code> clause to <code>foo</code> that requires <code>T</code> to outlive the returned <code>&amp;Display</code>.</p>\n\n<pre><code>trait Foo&lt;T&gt; {\n    fn foo&lt;'a&gt;(&amp;'a self, i: T) -&gt; &amp;'a Display where T: 'a;\n}\n</code></pre>\n\n<p>It's a bit clunky, but effectively it lets you move the requirement to the function rather than the trait itself. The disadvantage is that this <em>also</em> precludes certain implementations of <code>Foo</code> by insisting that the return value never outlive any reference in <code>T</code>.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 50568347, "answer_count": 1, "score": 7, "last_activity_date": 1527595413, "creation_date": 1527511874, "question_id": 50566942, "link": "https://stackoverflow.com/questions/50566942/adding-unrelated-generic-parameter-triggers-strange-lifetime-error", "title": "Adding unrelated generic parameter triggers strange lifetime error", "body": "<p>I have a trait and I want to implement it for all types that implement <code>std::ops::Index</code>. This code works (as I would expect):</p>\n\n<pre><code>use std::ops::Index;\nuse std::fmt::Display;\n\n\ntrait Foo {\n    fn foo(&amp;self, i: usize) -&gt; &amp;Display;\n}\n\nimpl&lt;C&gt; Foo for C \nwhere\n    C: Index&lt;usize&gt;,\n    C::Output: Display + Sized,\n{\n    fn foo(&amp;self, i: usize) -&gt; &amp;Display {\n        &amp;self[i]\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=a5c2059cd6d7b1d84ef1b76e286f01d8&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p><strong>However</strong>, once I introduce a generic parameter to my trait, I get a strange lifetime error. This is the code (<a href=\"https://play.rust-lang.org/?gist=362ebb2fd1bdecbf87cab225d6770931&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>trait Foo&lt;T&gt; {\n    fn foo(&amp;self, i: T) -&gt; &amp;Display;\n}\n\nimpl&lt;C, T&gt; Foo&lt;T&gt; for C \nwhere\n    C: Index&lt;T&gt;,\n    C::Output: Display + Sized,\n{\n    fn foo(&amp;self, i: T) -&gt; &amp;Display {\n        &amp;self[i]\n    }\n}\n</code></pre>\n\n<p>And the strange error (apparently it's one error repeated three times in slightly different versions):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  error[E0311]: the associated type `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` may not live long enough\n  --&gt; src/main.rs:15:9\n   |\n15 |         &amp;self[i]\n   |         ^^^^^^^^\n   |\n   = help: consider adding an explicit lifetime bound for `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output`\nnote: the associated type `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` must be valid for the anonymous lifetime #1 defined on the method body at 14:5...\n  --&gt; src/main.rs:14:5\n   |\n14 | /     fn foo(&amp;self, i: T) -&gt; &amp;Display {\n15 | |         &amp;self[i]\n16 | |     }\n   | |_____^\nnote: ...so that the type `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` is not borrowed for too long\n  --&gt; src/main.rs:15:9\n   |\n15 |         &amp;self[i]\n   |         ^^^^^^^^\n\nerror[E0311]: the associated type `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` may not live long enough\n  --&gt; src/main.rs:15:9\n   |\n15 |         &amp;self[i]\n   |         ^^^^^^^^\n   |\n   = help: consider adding an explicit lifetime bound for `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output`\nnote: the associated type `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` must be valid for the anonymous lifetime #1 defined on the method body at 14:5...\n  --&gt; src/main.rs:14:5\n   |\n14 | /     fn foo(&amp;self, i: T) -&gt; &amp;Display {\n15 | |         &amp;self[i]\n16 | |     }\n   | |_____^\nnote: ...so that the type `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` will meet its required lifetime bounds\n  --&gt; src/main.rs:15:9\n   |\n15 |         &amp;self[i]\n   |         ^^^^^^^^\n\nerror[E0311]: the associated type `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` may not live long enough\n  --&gt; src/main.rs:15:10\n   |\n15 |         &amp;self[i]\n   |          ^^^^^^^\n   |\n   = help: consider adding an explicit lifetime bound for `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output`\nnote: the associated type `&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` must be valid for the anonymous lifetime #1 defined on the method body at 14:5...\n  --&gt; src/main.rs:14:5\n   |\n14 | /     fn foo(&amp;self, i: T) -&gt; &amp;Display {\n15 | |         &amp;self[i]\n16 | |     }\n   | |_____^\nnote: ...so that the reference type `&amp;&lt;C as std::ops::Index&lt;T&gt;&gt;::Output` does not outlive the data it points at\n  --&gt; src/main.rs:15:10\n   |\n15 |         &amp;self[i]\n   |          ^^^^^^^\n</code></pre>\n\n<p>I don't understand the error at all. Especially since the error talks about the lifetime of <code>C::Output</code> which (as I understand it) has <em>nothing</em> to do with the additional parameter <code>K</code>.</p>\n\n<p>Interestingly, not returning the trait object <code>&amp;Display</code>, but adding an associated type to <code>Foo</code> which is returned, makes the lifetime error go away (<a href=\"https://play.rust-lang.org/?gist=420a7b7f0ba85bf1d779e798a8fd1b3e&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Playground</a>). However, this is not a solution for me.</p>\n\n<hr>\n\n<p><strong>What does this error mean? Does it make sense? Is it a compiler bug? What does the parameter <code>K</code> has to do with the lifetime of <code>C::Output</code>?</strong></p>\n"}, {"tags": ["rust", "traits", "associated-types", "trait-objects"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527514714, "post_id": 50566022, "comment_id": 88145408, "body": "I&#39;m not that experienced in rust, so don&#39;t count on this. I think you have an error in <code>struct Wrap&lt;T&gt;(Vec&lt;T&gt;);</code>. Because Vec cannot save any Traits itself (they have no size, as you said) that statement will become illegal. I made a working solution with a box, but I don&#39;t think that&#39;s what you want. <a href=\"https://play.rust-lang.org/?gist=6752546da134a791d1fa837f61ed1e2f&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527515321, "post_id": 50566022, "comment_id": 88145719, "body": "@hellow Thanks! However, as you already guessed, this doesn&#39;t solve the problem for me. I really need to return a trait object and not an associated type. For those curious why I want that: I basically want to use <code>Index</code> as a trait object to do some type erasure. Like <code>&amp;Index&lt;usize, Output = Display&gt;</code>. This doesn&#39;t work with <code>Index</code> directly, but using <code>Index</code> in my question made it a bit easier."}], "answers": [{"tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 5, "last_activity_date": 1527519542, "creation_date": 1527519542, "answer_id": 50569104, "question_id": 50566022, "link": "https://stackoverflow.com/questions/50566022/how-to-use-non-static-trait-objects-with-associated-types/50569104#50569104", "title": "How to use non-&#39;static trait objects with associated types?", "body": "<p>One attempt is to attach a lifetime to the impl:</p>\n\n<pre><code>// Note: won't work.\n\nimpl&lt;'a, T&gt; Index&lt;usize&gt; for Wrap&lt;T&gt;\nwhere\n    T: Display + 'a,\n{\n    type Output = Display + 'a;\n    fn index(&amp;self, index: usize) -&gt; &amp;Self::Output {\n        &amp;self.0[index]\n    }\n}\n</code></pre>\n\n<p>However, the compiler will not accept it because <code>'a</code> is not used.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the lifetime parameter `'a` is not constrained by the impl trait, self type, or predicates\n --&gt; src/main.rs:7:6\n  |\n7 | impl&lt;'a, T&gt; Index&lt;usize&gt; for Wrap&lt;T&gt;\n  |      ^^ unconstrained lifetime parameter\n</code></pre>\n\n<p>There are several solutions suggested by the <a href=\"https://doc.rust-lang.org/stable/error-index.html#E0207\" rel=\"noreferrer\">error code E0207</a>, but since we cannot change the <code>Index</code> trait, the only acceptable solution is to make <code>Wrap</code> capture that unconstrained lifetime parameter:</p>\n\n<pre><code>use std::ops::Index;\nuse std::fmt::Display;\nuse std::marker::PhantomData;\n\nstruct Wrap&lt;'a, T&gt;(Vec&lt;T&gt;, PhantomData&lt;&amp;'a ()&gt;);\n//          ^~             ^~~~~~~~~~~~~~~~~~~\n\nimpl&lt;'a, T&gt; Index&lt;usize&gt; for Wrap&lt;'a, T&gt;\nwhere\n    T: Display + 'a,\n{\n    type Output = Display + 'a;\n    fn index(&amp;self, index: usize) -&gt; &amp;Self::Output {\n        &amp;self.0[index]\n    }\n}\n\nfn main() {\n    let w = Wrap(vec!['a', 'b'], PhantomData);\n    println!(\"{}\", &amp;w[0]); // prints \"a\"\n\n    let s = \"hi\".to_string();\n    let w = Wrap(vec![&amp;s], PhantomData);\n    println!(\"{}\", &amp;w[0]); // prints \"hi\"\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=497aa72a22be0fa4457d6f4011ece46e&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>For sure, this will change your API and that extra lifetime will infect everywhere... If this is not acceptable, you could either </p>\n\n<ul>\n<li>Not use the <code>Index</code> trait, introduce your own lifetime-sensitive trait instead (thus users will need to use <code>w.my_index(i)</code> instead of <code>&amp;w[i]</code>); or</li>\n<li>Set <code>Output = Display + 'static</code>, and exclude all transient types. Users will need to clone or use <code>Rc</code>.</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1527537266, "post_id": 50572063, "comment_id": 88155055, "body": "Thanks for your answer! Unfortunately this doesn&#39;t work for me, because I want to use the trait as trait object and do type erasure. That way one could store <code>Vec&lt;&amp;Index&lt;usize, Output = Display&gt;&gt;</code> for example."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 0, "last_activity_date": 1527534041, "last_edit_date": 1527534041, "creation_date": 1527533248, "answer_id": 50572063, "question_id": 50566022, "link": "https://stackoverflow.com/questions/50566022/how-to-use-non-static-trait-objects-with-associated-types/50572063#50572063", "title": "How to use non-&#39;static trait objects with associated types?", "body": "<p>Return a reference to <code>T</code> instead of returning a reference to a trait object and let the user cast to a trait object, or just let Rust implicitly infer from the context when to perform the cast:</p>\n\n<pre><code>use std::fmt::Display;\nuse std::ops::Index;\n\nfn main() {\n    let w1 = Wrap(vec!['I', 'b']);\n    let s = \"am\".to_string();\n    let w2 = Wrap(vec![&amp;s]);\n    let w3 = Wrap(vec![1, 2]);\n\n    let mut trait_store: Vec&lt;Box&lt;Display&gt;&gt; = Vec::new();\n\n    trait_store.push(Box::new(w1.index(0)));\n    trait_store.push(Box::new(w2.index(0)));\n    trait_store.push(Box::new(w3.index(0)));\n\n    for el in trait_store {\n        println!(\"{}\", el);\n    }\n}\n\nstruct Wrap&lt;T&gt;(Vec&lt;T&gt;);\n\nimpl&lt;T&gt; Index&lt;usize&gt; for Wrap&lt;T&gt; {\n    type Output = T;\n    fn index(&amp;self, index: usize) -&gt; &amp;Self::Output {\n        &amp;self.0[index]\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 53, "user_id": 8481499, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-VyOaMz2Q9tE/AAAAAAAAAAI/AAAAAAAAAEY/8-lIUde2Zeg/photo.jpg?sz=128", "display_name": "Forsworn", "link": "https://stackoverflow.com/users/8481499/forsworn"}, "is_accepted": false, "score": 0, "last_activity_date": 1611414978, "creation_date": 1611414978, "answer_id": 65860850, "question_id": 50566022, "link": "https://stackoverflow.com/questions/50566022/how-to-use-non-static-trait-objects-with-associated-types/65860850#65860850", "title": "How to use non-&#39;static trait objects with associated types?", "body": "<p>Hi I met the same problem as you. &quot;Like <code>&amp;Index&lt;usize, Output = Display&gt;</code>. This doesn't work with Index directly, but using Index in my question made it a bit easier.&quot;</p>\n<p>I didn't find out whether the Rust releases some related features or not. But I figure out a rather foolish way to fulfill my demands.</p>\n<p>This method only works when the structs which implement the trait are enumerable. Suppose that you have three structs <code>Index1, Index2, Index3</code>, they all implement the trait <code>Index&lt;usize, Output = Display&gt;</code></p>\n<p>Then we can simply wrap these structs by</p>\n<pre><code>pub enum Indices{\n    Index1(Index1),\n    Index2(Index2),\n    Index3(Index3),\n}\n</code></pre>\n<p>And then implement the trait for the enum and all of its variants, there is an example for this:\n<a href=\"https://stackoverflow.com/questions/57066471/how-do-i-implement-a-trait-for-an-enum-and-its-respective-variants\">rust - How do I implement a trait for an enum and its respective variants? - Stack Overflow</a></p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 503, "favorite_count": 0, "accepted_answer_id": 50569104, "answer_count": 3, "score": 4, "last_activity_date": 1611414978, "creation_date": 1527509012, "question_id": 50566022, "link": "https://stackoverflow.com/questions/50566022/how-to-use-non-static-trait-objects-with-associated-types", "title": "How to use non-&#39;static trait objects with associated types?", "body": "<p>I have this type:</p>\n\n<pre><code>struct Wrap&lt;T&gt;(Vec&lt;T&gt;);\n</code></pre>\n\n<p>I want to implement <code>std::ops::Index</code> and return references to trait objects. This was my first attempt (<a href=\"https://play.rust-lang.org/?gist=a32ae9f2e5cd7d9f9741750a688ffe78&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>use std::ops::Index;\nuse std::fmt::Display;\n\n\nimpl&lt;T&gt; Index&lt;usize&gt; for Wrap&lt;T&gt;\nwhere\n    T: Display\n{\n    type Output = Display;\n    fn index(&amp;self, index: usize) -&gt; &amp;Self::Output {\n        &amp;self.0[index]\n    }\n}\n</code></pre>\n\n<p>This doesn't work and leads to this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `T` may not live long enough\n  --&gt; src/main.rs:13:9\n   |\n7  | impl&lt;T&gt; Index&lt;usize&gt; for Wrap&lt;T&gt;\n   |      - help: consider adding an explicit lifetime bound `T: 'static`...\n...\n13 |         &amp;self.0[index]\n   |         ^^^^^^^^^^^^^^\n   |\nnote: ...so that the type `T` will meet its required lifetime bounds\n  --&gt; src/main.rs:13:9\n   |\n13 |         &amp;self.0[index]\n   |         ^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I think I know why this happens: <code>type Output = Display</code> is equivalent to <code>type Output = Display + 'static</code> as every trait object carries a lifetime bound which defaults to <code>'static</code>.</p>\n\n<p>So now I can just add the <code>'static</code> bound to my parameter <code>T</code>, but this is over-constrained I think. I can easily implement such a method when not using an associated type:</p>\n\n<pre><code>impl&lt;T&gt; Wrap&lt;T&gt;\nwhere\n    T: Display,\n{\n    fn my_index(&amp;self, index: usize) -&gt; &amp;Display {\n        &amp;self.0[index]\n    }\n}\n</code></pre>\n\n<p>No <code>'static</code> bound needed, because now the signature desugars to:</p>\n\n<pre><code>fn my_index&lt;'a&gt;(&amp;'a self, index: usize) -&gt; &amp;'a Display + 'a\n</code></pre>\n\n<p>Which makes sense: the trait object has to live for at least <code>'a</code>. (<a href=\"https://play.rust-lang.org/?gist=6d8852687e325e5a298b6ebc6f9c78cd&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground with all the code</a>).</p>\n\n<hr>\n\n<p><strong>But can I make this work using associated types</strong> (like with the <code>Index</code> trait)? I have the feeling that this might work with generic associated types, but (a) I'm not sure and (b) they are not implemented yet. </p>\n"}, {"tags": ["unit-testing", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527515030, "post_id": 50565893, "comment_id": 88145565, "body": "You could try to annotate a complete mod block instead of single functions"}, {"owner": {"reputation": 5158, "user_id": 1829930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d00937426fde9e00fe46a57043c00eeb?s=128&d=identicon&r=PG", "display_name": "Robin Krahl", "link": "https://stackoverflow.com/users/1829930/robin-krahl"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527615710, "post_id": 50565893, "comment_id": 88189364, "body": "@hellow But this only works if I want to disable compiling, not for ignoring the test cases, right?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1527516685, "creation_date": 1527516685, "answer_id": 50568293, "question_id": 50565893, "link": "https://stackoverflow.com/questions/50565893/is-there-a-simple-way-to-conditionally-enable-or-ignore-entire-test-suites-in-ru/50568293#50568293", "title": "Is there a simple way to conditionally enable or ignore entire test suites in Rust?", "body": "<blockquote>\n  <p>Is there a simple way to conditionally enable or ignore entire test suites in Rust?</p>\n</blockquote>\n\n<p>The <em>easiest</em> is to not even compile the tests:</p>\n\n<pre><code>#[cfg(test)]\nmod test {\n    #[test]\n    fn no_device_needed() {}\n\n    #[cfg(feature = \"test1\")]\n    mod test1 {\n        fn device_one_needed() {}\n    }\n\n    #[cfg(feature = \"test2\")]\n    mod test2 {\n        fn device_two_needed() {}\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>I have to duplicate this condition for every test and the conditions are hard to read and maintain.</p>\n</blockquote>\n\n<ol>\n<li>Can you represent the desired functionality in pure Rust? <strong>yes</strong></li>\n<li>Is the existing syntax overly verbose? <strong>yes</strong></li>\n</ol>\n\n<p>This is a candidate for a macro.</p>\n\n<pre><code>macro_rules! device_test {\n    (no-device, $name:ident, {$($body:tt)+}) =&gt; (\n        #[test]\n        fn $name() {\n            $($body)+\n        }\n    );\n    (device1, $name:ident, {$($body:tt)+}) =&gt; (\n        #[test]\n        #[cfg_attr(not(feature = \"test-type-one\"), ignore)]\n        fn $name() {\n            $($body)+\n        }\n    );\n    (device2, $name:ident, {$($body:tt)+}) =&gt; (\n        #[test]\n        #[cfg_attr(not(feature = \"test-type-two\"), ignore)]\n        fn $name() {\n            $($body)+\n        }\n    );\n}\n\ndevice_test!(no-device, one, {\n    assert_eq!(2, 1+1)\n});\n\ndevice_test!(device1, two, {\n    assert_eq!(3, 1+1)\n});\n</code></pre>\n\n<blockquote>\n  <p>the functionality for type 2 is a superset of the functionality for type 1</p>\n</blockquote>\n\n<p>Reflect that in your feature definitions to simplify the code:</p>\n\n<pre><code>[features]\ntest1 = []\ntest2 = [\"test1\"]\n</code></pre>\n\n<p>If you do this, you shouldn't need to have <code>any</code> or <code>all</code> in your config attributes.</p>\n\n<blockquote>\n  <p>a default feature <code>test-no-device</code></p>\n</blockquote>\n\n<p>This doesn't seem useful; instead use normal tests guarded by the normal test config:</p>\n\n<pre><code>#[cfg(test)]\nmod test {\n    #[test]\n    fn no_device_needed() {}\n}\n</code></pre>\n\n<p>If you follow this, you can remove this case from the macro.</p>\n\n<hr>\n\n<p>I think if you follow both suggestions, you don't even need the macro.</p>\n"}], "owner": {"reputation": 5158, "user_id": 1829930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d00937426fde9e00fe46a57043c00eeb?s=128&d=identicon&r=PG", "display_name": "Robin Krahl", "link": "https://stackoverflow.com/users/1829930/robin-krahl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 436, "favorite_count": 0, "accepted_answer_id": 50568293, "answer_count": 1, "score": 3, "last_activity_date": 1527516685, "creation_date": 1527508602, "last_edit_date": 1527515316, "question_id": 50565893, "link": "https://stackoverflow.com/questions/50565893/is-there-a-simple-way-to-conditionally-enable-or-ignore-entire-test-suites-in-ru", "title": "Is there a simple way to conditionally enable or ignore entire test suites in Rust?", "body": "<p>I\u2019m working on a Rust library that provides access to some hardware devices. There are two device types, 1 and 2, and the functionality for type 2 is a superset of the functionality for type 1.</p>\n\n<p>I want to provide different test suites for different circumstances:</p>\n\n<ul>\n<li>tests with no connected device (basic sanity checks, e. g. for CI servers)</li>\n<li>tests for the shared functionality (requires a device of type 1 or 2)</li>\n<li>tests for the type 2 exclusive functionality (requires a device of type 2)</li>\n</ul>\n\n<p>I\u2019m using features to represent this behavior:  a default feature <code>test-no-device</code> and optional features <code>test-type-one</code> and <code>test-type-two</code>.  Then I use the <code>cfg_attr</code> attribute to ignore the tests based on the selected features:</p>\n\n<pre><code>#[test]\n#[cfg_attr(not(feature = \"test-type-two\"), ignore)]\nfn test_exclusive() {\n    // ...\n}\n\n#[test]\n#[cfg_attr(not(any(feature = \"test-type-two\", feature = \"test-type-one\")), ignore)]\nfn test_shared() {\n    // ...\n}\n</code></pre>\n\n<p>This is rather cumbersome as I have to duplicate this condition for every test and the conditions are hard to read and maintain.</p>\n\n<p>Is there any simpler way to manage the test suites?</p>\n\n<p>I tried to set the <code>ignore</code> attribute when declaring the module, but apparently it can only be set for each <code>test</code> function. I think I could disable compilation of the excluded tests by using <code>cfg</code> on the module, but as the tests should always compile, I would like to avoid that.</p>\n"}, {"tags": ["rust", "global-variables"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 4, "last_activity_date": 1527507977, "last_edit_date": 1527507977, "creation_date": 1527507098, "answer_id": 50565435, "question_id": 50565397, "link": "https://stackoverflow.com/questions/50565397/in-rust-how-do-i-define-a-global-variable-constant-whose-value-is-the-result-of/50565435#50565435", "title": "In rust, how do I define a global variable/constant whose value is the result of a function?", "body": "<p>This depends on your case.<br>\nIf you rely on stable compiler your best chance is the <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\">lazy_static</a> crate.</p>\n\n<p>If you are willing to do some experiments with the nightly compiler, you can try the <a href=\"https://github.com/nox/rust-rfcs/blob/master/text/0911-const-fn.md\" rel=\"nofollow noreferrer\">const fn</a> <a href=\"https://github.com/rust-lang/rust/issues/24111\" rel=\"nofollow noreferrer\">feature</a>.\nBut be aware, that there are certain limitations on what const fn can do.</p>\n"}], "owner": {"reputation": 9718, "user_id": 87584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9f6dfb6c18bce2c8487312b77c32dbc3?s=128&d=identicon&r=PG", "display_name": "Fabien", "link": "https://stackoverflow.com/users/87584/fabien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4087, "favorite_count": 0, "closed_date": 1527514993, "accepted_answer_id": 50565435, "answer_count": 1, "score": 3, "last_activity_date": 1527515016, "creation_date": 1527506994, "question_id": 50565397, "link": "https://stackoverflow.com/questions/50565397/in-rust-how-do-i-define-a-global-variable-constant-whose-value-is-the-result-of", "closed_reason": "Duplicate", "title": "In rust, how do I define a global variable/constant whose value is the result of a function?", "body": "<p>I have a function without argument that builds and returns a <code>Vec</code>, and the corresponding result is always the same. I want to call that function only once and store its result in a global variable or constant that all functions in my program will be able to access. How do I do that ? My first try was to try to define a <code>const</code> or a <code>static</code>, but this is not allowed:</p>\n\n<pre><code>error[E0015]: calls in statics are limited to struct and enum constructors\n --&gt; src/main.rs:2:30\n  |\n2 | static ALL: Vec&lt;Knowledge&gt; = Knowledge::all();\n  |                              ^^^^^^^^^^^^^^^^\n  |\nnote: a limited form of compile-time function evaluation is available on a nightly compiler via `const fn`\n --&gt; src/main.rs:2:30\n  |\n2 | static ALL: Vec&lt;Knowledge&gt; = Knowledge::all();\n  |                              ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Using <code>let</code> outside a function won't work either. How should I do? Yes, the error message says I could use nightly, but I don't want to do that and prefer staying with the canonic version of the language.</p>\n"}, {"tags": ["parallel-processing", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1527453759, "post_id": 50556314, "comment_id": 88123527, "body": "Does <a href=\"https://stackoverflow.com/questions/32750829/how-can-i-pass-a-reference-to-a-stack-variable-to-a-thread\" title=\"how can i pass a reference to a stack variable to a thread\">stackoverflow.com/questions/32750829/&hellip;</a> answer your question?"}, {"owner": {"reputation": 33, "user_id": 7293857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2b262c06e09e4a90abe4c0c21581a20?s=128&d=identicon&r=PG&f=1", "display_name": "Justin Bullard", "link": "https://stackoverflow.com/users/7293857/justin-bullard"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527458354, "post_id": 50556314, "comment_id": 88124636, "body": "Thank you @trentcl using scoped-threadpool-rs did solve my issue"}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 7293857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2b262c06e09e4a90abe4c0c21581a20?s=128&d=identicon&r=PG&f=1", "display_name": "Justin Bullard", "link": "https://stackoverflow.com/users/7293857/justin-bullard"}, "edited": false, "score": 0, "creation_date": 1527459233, "post_id": 50556948, "comment_id": 88124806, "body": "The scoped-thread-pool introducing a lot of overhead for something so basic.  It would be great if the rust lifetimes could understand thread scope lifetimes along with just code scope."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 5, "creation_date": 1527461626, "post_id": 50556948, "comment_id": 88125256, "body": "The Rust thread model used to support this, with an intelligent <code>JoinGuard</code> type that would clean up when it went out of scope; but it was found to be unsafe (and not easy to make safe). The problem is described in <a href=\"http://cglab.ca/~abeinges/blah/everyone-poops/\" rel=\"nofollow noreferrer\">this creatively named article</a>, which I recommend; it changed my perspective on the issue dramatically."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1527495230, "post_id": 50556948, "comment_id": 88134123, "body": "Note that you did not have to answer this question: as a duplicate question, the answers to it are already available in its respective target."}], "tags": [], "owner": {"reputation": 33, "user_id": 7293857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2b262c06e09e4a90abe4c0c21581a20?s=128&d=identicon&r=PG&f=1", "display_name": "Justin Bullard", "link": "https://stackoverflow.com/users/7293857/justin-bullard"}, "is_accepted": false, "score": 0, "last_activity_date": 1527470078, "last_edit_date": 1527470078, "creation_date": 1527458856, "answer_id": 50556948, "question_id": 50556314, "link": "https://stackoverflow.com/questions/50556314/in-rust-is-it-possible-to-share-data-between-multiple-threads-without-having-it/50556948#50556948", "title": "In Rust is it possible to share data between multiple threads without having it static lifetime?", "body": "<p>Thank you scoped_threadpool solved my problem  here is my solution</p>\n\n<pre><code>extern crate scoped_threadpool;\nuse std::thread;\nuse std::fs;\nuse std::sync::{Arc};\n\nuse scoped_threadpool::Pool;\n\n\nfn main() {\n    let data = fs::read(\"./test.txt\").unwrap();\n\n    let segment_size = data.len() / 2;\n    let segment0 = &amp;data[0..segment_size]; //Borrow data no copy\n    let segment1 = &amp;data[segment_size..]; //Borrow data no copy\n\n    let mut pool = Pool::new(2);\n\n    pool.scoped(|scoped| {\n        scoped.execute(move || println!(\"Thread 0 {:?}\", std::str::from_utf8(segment0)));\n        scoped.execute(move || println!(\"Thread 1 {:?}\", std::str::from_utf8(segment1)));\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 7293857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2b262c06e09e4a90abe4c0c21581a20?s=128&d=identicon&r=PG&f=1", "display_name": "Justin Bullard", "link": "https://stackoverflow.com/users/7293857/justin-bullard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 191, "favorite_count": 0, "closed_date": 1527472360, "answer_count": 1, "score": -1, "last_activity_date": 1527470078, "creation_date": 1527453564, "question_id": 50556314, "link": "https://stackoverflow.com/questions/50556314/in-rust-is-it-possible-to-share-data-between-multiple-threads-without-having-it", "closed_reason": "Duplicate", "title": "In Rust is it possible to share data between multiple threads without having it static lifetime?", "body": "<p>I am trying to take a large string or data and break it up into slices to process across multiple thread.  I would like to leverage multiple thread to help process the data but want to avoid copying data.</p>\n\n<p>Here is an example of the problem.  Segment0 will work because it owns the data through a copy.  Segment1 just borrows the data and will cause a problem even though the joins guarantee lifetime correctness.</p>\n\n<pre><code>use std::thread;\nuse std::fs;\nuse std::sync::{Arc};\n\nfn main() {\n    let data = fs::read(\"./test.txt\").unwrap();\n\n    let segment_size = data.len()/2;\n    let segment0 = &amp;data[0..segment_size]; //Borrow data no copy\n    let segment1 = &amp;data[segment_size..]; //Borrow data no copy\n\n    let segment0 = Vec::from(segment0); //has ownership of data through copy\n\n    let thread0 = thread::spawn(move || println!(\"Thread 0 {:?}\",std::str::from_utf8(&amp;segment0)));\n    let thread1 = thread::spawn(move || println!(\"Thread 1 {:?}\",std::str::from_utf8(segment1)));\n\n    thread0.join(); //thread 0 terminated segment0 dropped\n    thread1.join(); //thread 1 terminated segment1 dropped\n\n    //data released  segment0 and segment1 needed to be dropped before\n}\n</code></pre>\n\n<p>The error returned</p>\n\n<pre><code>error[E0597]: `data` does not live long enough\n--&gt; src/main.rs:10:25\n|\n10 |         let segment1 = &amp;data[segment_size..]; //Borrow data no copy\n|                         ^^^^ borrowed value does not live long enough\n...\n21 |     }\n|     - borrowed value only lives until here\n|\n= note: borrowed value must be valid for the static lifetime...\n</code></pre>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "edited": false, "score": 2, "creation_date": 1527452359, "post_id": 50556110, "comment_id": 88123123, "body": "It&#39;s kinda tricky since a Future represents some future value which has yet to materialize, so what would there be to print about it? What information do you want? Maybe you can wrap it in some type which adds contextual information you can print out when you need to. Otherwise you can only do this once you&#39;ve waited on the result."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1527452710, "post_id": 50556110, "comment_id": 88123231, "body": "<code>println!(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Future value returned {:?}&quot;, future.poll());</code> ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527472924, "post_id": 50556110, "comment_id": 88127261, "body": "<a href=\"https://play.rust-lang.org/?gist=16894caa979e180bab61c614f55a8756&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">It&#39;s very straightforward to print a future value</a>. It&#39;s possible that you are having a problem printing a <i>specific</i> future, except you didn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and your question is aimed at the general case."}, {"owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527490681, "post_id": 50556110, "comment_id": 88131861, "body": "@shepmaster I think the issue is, as you mentioned, with my specific future. I have a <code>Future&lt;Item = hyper::Response, Error = hyper::Error&gt;</code> which doesn&#39;t get resolved for the client request. I will try to look into the issue based on this clarification now"}], "answers": [{"tags": [], "owner": {"reputation": 566, "user_id": 1480374, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5534b0e86f957dafe87c9b244a0face4?s=128&d=identicon&r=PG", "display_name": "fyaa", "link": "https://stackoverflow.com/users/1480374/fyaa"}, "is_accepted": false, "score": 0, "last_activity_date": 1527580006, "creation_date": 1527580006, "answer_id": 50579009, "question_id": 50556110, "link": "https://stackoverflow.com/questions/50556110/how-to-print-future-value-for-debugging/50579009#50579009", "title": "How to print future value for debugging?", "body": "<p>You have to either specify the concrete type (not trait) that implements <code>Debug</code> or you have to rely on the <code>impl Trait</code> declaration but ensure that you also implement <code>Debug</code>.</p>\n\n<pre><code>extern crate futures;\n\nuse futures::{Future, future::FutureResult};\nuse std::fmt::Debug;\n\nfn get_default_future&lt;'s&gt;() -&gt; FutureResult&lt;&amp;'s str, ()&gt; {\n    futures::future::ok::&lt;_, ()&gt;(\"foo\")\n}\n\nfn get_printable_future() -&gt; impl Future + Debug {\n    futures::future::ok::&lt;_, ()&gt;(\"bar\")\n}\n\nfn main() {\n    println!(\"{:?}\", get_default_future());\n    println!(\"{:?}\", get_printable_future());\n}\n</code></pre>\n\n<p>The trait itself does not require the underlying struct to implement <code>Debug</code>. Even if the struct implements Debug, you have to make sure when returning the trait instead of the struct that you <em>declare</em> it to implement <code>Debug</code>. It should compile then.</p>\n"}], "owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1238, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1527580006, "creation_date": 1527452182, "last_edit_date": 1527472449, "question_id": 50556110, "link": "https://stackoverflow.com/questions/50556110/how-to-print-future-value-for-debugging", "title": "How to print future value for debugging?", "body": "<p>I have started to recently use futures in Rust, but I couldn't find any way to print the future value for debugging purpose. I get this error even with the formatting helper:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>^^^^^^^^ `futures::Future&lt;Item=hyper::Response, Error=hyper::Error&gt;` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`\n</code></pre>\n\n<p>for the below code</p>\n\n<pre><code>#[cfg(test)]\nprintln!(\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Future value returned {:?}\", future);\n</code></pre>\n\n<p>Is there any existing solution (macros) to debug this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 547, "user_id": 2011659, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/8563cfe6fbe311b834c416e07369bf25?s=128&d=identicon&r=PG", "display_name": "user2011659", "link": "https://stackoverflow.com/users/2011659/user2011659"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527446283, "post_id": 50555204, "comment_id": 88121403, "body": "Implementing Default for Container&lt;T&gt; indeed does compile."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527446471, "post_id": 50555204, "comment_id": 88121445, "body": "Yeah this is one of those unpleasant corner cases. It would be better if <code>#[derive]</code> were not defined like this, but it&#39;s what we have right now"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527486879, "post_id": 50555204, "comment_id": 88130310, "body": "I don&#39;t get your problem. Have you read the help? <code>help: consider adding a &#39;where T: std::default::Default&#39; bound</code> that&#39;s all you need."}, {"owner": {"reputation": 547, "user_id": 2011659, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/8563cfe6fbe311b834c416e07369bf25?s=128&d=identicon&r=PG", "display_name": "user2011659", "link": "https://stackoverflow.com/users/2011659/user2011659"}, "edited": false, "score": 0, "creation_date": 1527533328, "post_id": 50555204, "comment_id": 88153680, "body": "Have you read the question? In this case the compiler wants T to implement Default even though its not needed."}], "owner": {"reputation": 547, "user_id": 2011659, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/8563cfe6fbe311b834c416e07369bf25?s=128&d=identicon&r=PG", "display_name": "user2011659", "link": "https://stackoverflow.com/users/2011659/user2011659"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 742, "favorite_count": 0, "closed_date": 1527446294, "answer_count": 0, "score": 1, "last_activity_date": 1527445390, "creation_date": 1527445390, "question_id": 50555204, "link": "https://stackoverflow.com/questions/50555204/why-is-trait-bound-default-not-satisfied", "closed_reason": "Duplicate", "title": "Why is trait bound Default not satisfied?", "body": "<p>I'm trying to create a struct with a container that supports instance creation with default. Here's a minimal example:</p>\n\n<pre><code>#[derive(Default)]\nstruct Container&lt;T&gt; {\n    values: Vec&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Container&lt;T&gt; {\n    fn new() -&gt; Self {\n        Default::default()\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Why does this code fail to compile with</p>\n\n<pre><code>error[E0277]: the trait bound `T: std::default::Default` is not satisfied\n --&gt; src/main.rs:8:9\n  |\n8 |         Default::default()\n  |         ^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `T`\n  |\n  = help: consider adding a `where T: std::default::Default` bound\n  = note: required because of the requirements on the impl of `std::default::Default` for `Container&lt;T&gt;`\n  = note: required by `std::default::Default::default`\n</code></pre>\n\n<p>I could understand if I used something like Vec::resize_default() but for what is it needed here?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 683, "user_id": 7612336, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-oFuR0TTik5I/AAAAAAAAAAI/AAAAAAAABYg/pxpjxgm2Lvc/photo.jpg?sz=128", "display_name": "DavSanchez", "link": "https://stackoverflow.com/users/7612336/davsanchez"}, "edited": false, "score": 0, "creation_date": 1586195216, "post_id": 50554062, "comment_id": 108033841, "body": "Hi, I don&#39;t know if this is still the preferred way, but when I try this (first snippet in <code>{projectRoot}&#47;build.rs</code>, second in <code>{projectRoot}&#47;src&#47;main.rs</code>) <code>cargo build</code> complains that it doesn&#39;t find the files.   I guess if <code>const SOURCE_DIR: &amp;str = &quot;some&#47;path&#47;to&#47;include&quot;;</code> is an absolute path it would work, but using absolute paths is not great for distribution. Am I missing something else?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 683, "user_id": 7612336, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-oFuR0TTik5I/AAAAAAAAAAI/AAAAAAAABYg/pxpjxgm2Lvc/photo.jpg?sz=128", "display_name": "DavSanchez", "link": "https://stackoverflow.com/users/7612336/davsanchez"}, "edited": false, "score": 1, "creation_date": 1586195616, "post_id": 50554062, "comment_id": 108034040, "body": "@DavSanchez does <a href=\"https://stackoverflow.com/q/30003921/155423\">How can I locate resources for testing with Cargo?</a> show you how to replace <code>SOURCE_DIR</code> to something relative to your project?"}, {"owner": {"reputation": 683, "user_id": 7612336, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-oFuR0TTik5I/AAAAAAAAAAI/AAAAAAAABYg/pxpjxgm2Lvc/photo.jpg?sz=128", "display_name": "DavSanchez", "link": "https://stackoverflow.com/users/7612336/davsanchez"}, "edited": false, "score": 0, "creation_date": 1586196129, "post_id": 50554062, "comment_id": 108034306, "body": "Yeah, I tried it and it worked by also removing <code>;</code> from the raw string at your last <code>writeln!()</code> of <code>build.rs</code>. Thanks a lot!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1588169556, "last_edit_date": 1588169556, "creation_date": 1527437435, "answer_id": 50554062, "question_id": 50553370, "link": "https://stackoverflow.com/questions/50553370/how-do-i-use-include-str-for-multiple-files-or-an-entire-directory/50554062#50554062", "title": "How do I use include_str! for multiple files or an entire directory?", "body": "<p>I would create <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">a build script</a> that iterates through a directory, building up an array of tuples containing the name and <em>another</em> macro call to include the raw data:</p>\n\n<pre><code>use std::{\n    env,\n    error::Error,\n    fs::{self, File},\n    io::Write,\n    path::Path,\n};\n\nconst SOURCE_DIR: &amp;str = \"some/path/to/include\";\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let out_dir = env::var(\"OUT_DIR\")?;\n    let dest_path = Path::new(&amp;out_dir).join(\"all_the_files.rs\");\n    let mut all_the_files = File::create(&amp;dest_path)?;\n\n    writeln!(&amp;mut all_the_files, r##\"[\"##,)?;\n\n    for f in fs::read_dir(SOURCE_DIR)? {\n        let f = f?;\n\n        if !f.file_type()?.is_file() {\n            continue;\n        }\n\n        writeln!(\n            &amp;mut all_the_files,\n            r##\"(\"{name}\", include_bytes!(r#\"{name}\"#)),\"##,\n            name = f.path().display(),\n        )?;\n    }\n\n    writeln!(&amp;mut all_the_files, r##\"]\"##,)?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>This has some weaknesses, namely that it requires the path to be expressible as a <code>&amp;str</code>. Since you were already using <code>include_string!</code>, I don't think that's an <em>extra</em> requirement. This also means that the generated string has to be a valid Rust string. We use <em>raw strings</em> inside the generated file, but this can still fail if a filename were to contain the string <code>\"#</code>. A better solution would probably use <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.escape_default\" rel=\"nofollow noreferrer\"><code>str::escape_default</code></a>.</p>\n\n<p>Since we are including files, I used <code>include_bytes!</code> instead of <code>include_str!</code>, but if you really needed to you can switch back. The raw bytes skips performing UTF-8 validation at compile time, so it's a small win.</p>\n\n<p>Using it involves importing the generated value:</p>\n\n<pre><code>const ALL_THE_FILES: &amp;[(&amp;str, &amp;[u8])] = &amp;include!(concat!(env!(\"OUT_DIR\"), \"/all_the_files.rs\"));\n\nfn main() {\n    for (name, data) in ALL_THE_FILES {\n        println!(\"File {} is {} bytes\", name, data.len());\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30003921/155423\">How can I locate resources for testing with Cargo?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527440667, "post_id": 50554441, "comment_id": 88119760, "body": "Using a <code>HashMap</code> is needless overhead if you are only going to iterate."}, {"owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527440810, "post_id": 50554441, "comment_id": 88119803, "body": "@Shepmaster was using it so I didn&#39;t need another line with <code>&quot;default&quot;</code> and <code>&quot;python&quot;</code>... Guess I could use an array and split it afterwards but this seems more straightforward. What would you recommend?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527440862, "post_id": 50554441, "comment_id": 88119817, "body": "The array of tuples as seen in my answer (<code>[(name, value)]</code>)."}], "tags": [], "owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "is_accepted": false, "score": 0, "last_activity_date": 1527441786, "last_edit_date": 1527441786, "creation_date": 1527440089, "answer_id": 50554441, "question_id": 50553370, "link": "https://stackoverflow.com/questions/50553370/how-do-i-use-include-str-for-multiple-files-or-an-entire-directory/50554441#50554441", "title": "How do I use include_str! for multiple files or an entire directory?", "body": "<p>Using a macro:</p>\n\n<pre><code>macro_rules! incl_profiles {\n    ( $( $x:expr ),* ) =&gt; {\n        {\n            let mut profs = Vec::new();\n            $(\n                profs.push(($x, include_str!(concat!(\"resources/profiles/\", $x, \".json\"))));\n            )*\n\n            profs\n        }\n    };\n}\n</code></pre>\n\n<p>...</p>\n\n<pre><code>let prof_tups: Vec&lt;(&amp;str, &amp;str)&gt; = incl_profiles!(\"default\", \"python\");\n\nfor (prof_name, prof_str) in prof_tups {\n    let fname = format!(\"{}{}\", prof_name, \".json\");\n    let fpath = dpath.join(&amp;fname);\n    fs::write(fpath, prof_str).expect(&amp;format!(\"failed to create profile: {}\", prof_name));\n}\n</code></pre>\n\n<p><strong>Note</strong>: This is not dynamic. The files (\"default\" and \"python\") are specified in the call to the macro.</p>\n\n<p><strong>Updated</strong>: Use <code>Vec</code> instead of <code>HashMap</code>.</p>\n"}], "owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2553, "favorite_count": 0, "accepted_answer_id": 50554062, "answer_count": 2, "score": 3, "last_activity_date": 1588169556, "creation_date": 1527432771, "last_edit_date": 1527433800, "question_id": 50553370, "link": "https://stackoverflow.com/questions/50553370/how-do-i-use-include-str-for-multiple-files-or-an-entire-directory", "title": "How do I use include_str! for multiple files or an entire directory?", "body": "<p>I would like to copy an entire directory to a location in a user's <code>$HOME</code>. Individually copying files to that directory is straightforward:</p>\n\n<pre><code>let contents = include_str!(\"resources/profiles/default.json\");\nlet fpath = dpath.join(&amp;fname);\nfs::write(fpath, contents).expect(&amp;format!(\"failed to create profile: {}\", n));\n</code></pre>\n\n<p>I haven't found a way to adapt this to multiple files:</p>\n\n<pre><code>for n in [\"default\"] {\n    let fname = format!(\"{}{}\", n, \".json\");\n    let x = format!(\"resources/profiles/{}\", fname).as_str();\n    let contents = include_str!(x);\n    let fpath = dpath.join(&amp;fname);\n    fs::write(fpath, contents).expect(&amp;format!(\"failed to create profile: {}\", n));\n}\n</code></pre>\n\n<p>...the compiler complains that <code>x</code> must be a string literal.</p>\n\n<p>As far as I know, there are two options:</p>\n\n<ol>\n<li>Write a custom macro.</li>\n<li>Replicate the first code for each file I want to copy.</li>\n</ol>\n\n<p>What is the best way of doing this?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527435401, "post_id": 50553014, "comment_id": 88118185, "body": "Your previous question (<a href=\"https://stackoverflow.com/q/50415623/155423\">Can&#39;t get image::load_from_memory() to work when compiled to WebAssembly</a> indicates that you can&#39;t use <code>image::load_from_memory</code> in WebAssembly, yet this code uses it. Something doesn&#39;t seem correct here."}, {"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527445751, "post_id": 50553014, "comment_id": 88121263, "body": "@Shepmaster somebody on reddit suggested that the problem came from an extra feature which wasn&#39;t compatible with WASM: <a href=\"https://www.reddit.com/r/rust/comments/8kdy58/imageload_from_memory_doesnt_work_compiled_to\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/8kdy58/&hellip;</a>. I have managed to load PNG&#39;s via <code>image::load_from_memory</code>. And I am obtaining a valid <code>DynamicImage</code> object."}, {"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527445782, "post_id": 50553014, "comment_id": 88121272, "body": "Via Cargo.toml I only loaded the PNG feature from the <code>image</code> extern crate."}], "owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 170, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1527431806, "creation_date": 1527430500, "last_edit_date": 1527431806, "question_id": 50553014, "link": "https://stackoverflow.com/questions/50553014/color-quantneuquant-compiled-to-webassembly-outputs-zero-values", "title": "color_quant::NeuQuant compiled to WebAssembly outputs zero values", "body": "<p>I am trying to load an image in the browser and use the NewQuant algorithm to quantize my image buffer it in Rust via WebAssembly. However, the NewQuant output contains zero values, regardless of what PNG I try to feed it.</p>\n\n<p>I expose two Rust methods to WASM:</p>\n\n<ol>\n<li><code>alloc</code> for allocating a byte buffer</li>\n<li><code>read_img</code> which will read and process the img buffer</li>\n</ol>\n\n<p>I know that I get zero values because I imported a JavaScript method called <code>log_nr</code> for logging simple <code>u8</code> numbers. The buffer seems to contain valid pixel values.</p>\n\n<pre><code>extern crate color_quant;\nextern crate image;\n\nuse color_quant::NeuQuant;\nuse image::{DynamicImage, GenericImage, Pixel, Rgb};\n\nuse std::collections::BTreeMap;\nuse std::mem;\nuse std::os::raw::c_void;\n\nstatic NQ_SAMPLE_FACTION: i32 = 10;\nstatic NQ_PALETTE_SIZE: usize = 256;\n\nextern \"C\" {\n    fn log(s: &amp;str, len: usize);\n    fn log_nr(nr: u8);\n}\n\nfn get_pixels(img: DynamicImage) -&gt; Vec&lt;u8&gt; {\n    let mut pixels = Vec::new();\n\n    for (_, _, px) in img.pixels() {\n        let rgba = px.to_rgba();\n\n        for channel in px.channels() {\n            pixels.push(*channel);\n        }\n    }\n\n    pixels\n}\n\n#[no_mangle]\npub extern \"C\" fn alloc(size: usize) -&gt; *mut c_void {\n    let mut buf = Vec::with_capacity(size);\n    let ptr = buf.as_mut_ptr();\n    mem::forget(buf);\n\n    return ptr as *mut c_void;\n}\n\nfn process_img(img: DynamicImage) {\n    let pixels: Vec&lt;u8&gt; = get_pixels(img);\n    let quantized = NeuQuant::new(NQ_SAMPLE_FACTION, NQ_PALETTE_SIZE, &amp;pixels);\n\n    let q = quantized.color_map_rgb();\n\n    for c in &amp;q {\n        unsafe {\n            log_nr(*c);\n        }\n    }\n}\n\n#[no_mangle]\npub extern \"C\" fn read_img(buff_ptr: *mut u8, buff_len: usize) {\n    let mut img: Vec&lt;u8&gt; = unsafe { Vec::from_raw_parts(buff_ptr, buff_len, buff_len) };\n\n    return match image::load_from_memory(&amp;img) {\n        Ok(img) =&gt; {\n            process_img(img);\n        }\n        Err(err) =&gt; {\n            let err_msg: String = err.to_string().to_owned();\n            let mut ns: String = \"[load_from_memory] \".to_owned();\n\n            ns.push_str(&amp;err_msg);\n\n            unsafe {\n                log(&amp;ns, ns.len());\n            }\n        }\n    };\n}\n\nfn main() {\n    println!(\"Hello from rust 2\");\n}\n</code></pre>\n\n<p>The JavaScript code is the following:</p>\n\n\n\n<pre><code>run('sample.png');\n\nfunction run(img) {\n    return compile().then(m =&gt; {\n        return loadImgIntoMem(img, m.instance.exports.memory, m.instance.exports.alloc).then(r =&gt; {\n            return m.instance.exports.read_img(r.imgPtr, r.len);\n        });\n    })\n}\n\nfunction compile(wasmFile = 'distil_wasm.gc.wasm') {\n    return fetch(wasmFile)\n        .then(r =&gt; r.arrayBuffer())\n        .then(r =&gt; {\n            let module = new WebAssembly.Module(r);\n            let importObject = {}\n            for (let imp of WebAssembly.Module.imports(module)) {\n                if (typeof importObject[imp.module] === \"undefined\")\n                    importObject[imp.module] = {};\n                switch (imp.kind) {\n                case \"function\": importObject[imp.module][imp.name] = () =&gt; {}; break;\n                case \"table\": importObject[imp.module][imp.name] = new WebAssembly.Table({ initial: 256, maximum: 256, element: \"anyfunc\" }); break;\n                case \"memory\": importObject[imp.module][imp.name] = new WebAssembly.Memory({ initial: 256 }); break;\n                case \"global\": importObject[imp.module][imp.name] = 0; break;\n                }\n            }\n\n            importObject.env = Object.assign({}, importObject.env, {\n                log: (ptr, len) =&gt; console.log(ptrToStr(ptr, len)),\n                log_nr: (nr) =&gt; console.log(nr),\n            });\n\n            return WebAssembly.instantiate(r, importObject);\n        });\n}\n\nfunction loadImgIntoMemEmscripten(img) {\n    return new Promise(resolve =&gt; {\n        fetch(img)\n            .then(r =&gt; r.arrayBuffer())\n            .then(buff =&gt; {\n                const imgPtr = Module._malloc(buff.byteLength);\n                const imgHeap = new Uint8Array(Module.HEAPU8.buffer, imgPtr, buff.byteLength);\n\n                imgHeap.set(new Uint8Array(buff));\n\n                resolve({ imgPtr });\n            });\n    });\n}\n</code></pre>\n"}, {"tags": ["arrays", "rust", "iteration", "byte", "unsafe"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527420912, "post_id": 50551633, "comment_id": 88114241, "body": "this code in C would be implemented behavior so it&#39;s hard to exactly understand what you want. And by the way, if we talk about strictly conforming, this code in C would be undefined behavior."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1527445461, "post_id": 50551633, "comment_id": 88121184, "body": "@Stargateur <code>char</code> (and [<code>un</code>]<code>signed char</code>) is an explicit exception to the strict aliasing rule, so it&#39;s easily possible to write this code in strictly conforming C. The actual behavior is implementation defined, but not undefined."}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 3, "last_activity_date": 1527430591, "last_edit_date": 1527430591, "creation_date": 1527420991, "answer_id": 50551721, "question_id": 50551633, "link": "https://stackoverflow.com/questions/50551633/what-is-the-idiomatic-way-of-looping-through-the-bytes-of-an-integer-number-in-r/50551721#50551721", "title": "What is the idiomatic way of looping through the bytes of an integer number in Rust?", "body": "<p>It's safe to transmute <code>u64</code> into an array <code>[u8; 8]</code>:</p>\n\n<pre><code>let message_arr: [u8; 8] = unsafe { mem::transmute(message) };\nfor b in &amp;message_arr {\n    println!(\"{}\", b)\n}\n</code></pre>\n\n<p>See this in action <a href=\"https://play.rust-lang.org/?gist=dd0fd6fcf7a822158ebfb787c5e6b50d&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">on the playground</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1527430679, "last_edit_date": 1527430679, "creation_date": 1527421837, "answer_id": 50551838, "question_id": 50551633, "link": "https://stackoverflow.com/questions/50551633/what-is-the-idiomatic-way-of-looping-through-the-bytes-of-an-integer-number-in-r/50551838#50551838", "title": "What is the idiomatic way of looping through the bytes of an integer number in Rust?", "body": "<p>While <code>transmute</code>-ing is possible (<a href=\"https://stackoverflow.com/a/50551721/2733851\">see @Tim's answer</a>), it is better to use <a href=\"https://crates.io/crates/byteorder\" rel=\"nofollow noreferrer\">the byteorder crate</a> to guarantee endianness:</p>\n\n<pre><code>extern crate byteorder;\n\nuse byteorder::ByteOrder;\n\nfn main() {\n    let message = 0x1234123412341234u64;\n    let mut buf = [0; 8];\n    byteorder::LittleEndian::write_u64(&amp;mut buf, message);\n\n    for b in &amp;buf {\n         // 34, 12, 34, 12, 34, 12, 34, 12, \n         print!(\"{:X}, \", b);\n    }\n\n    println!(\"\");\n\n    byteorder::BigEndian::write_u64(&amp;mut buf, message);\n\n    for b in &amp;buf {\n         // 12, 34, 12, 34, 12, 34, 12, 34, \n         print!(\"{:X}, \", b);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"http://play.integer32.com/?gist=b04a1fe2f38215605b6db37f3074c65f&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Permalink to the playground</a>)</p>\n"}], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 327, "favorite_count": 0, "closed_date": 1527430784, "accepted_answer_id": 50551838, "answer_count": 2, "score": 2, "last_activity_date": 1527430679, "creation_date": 1527420248, "last_edit_date": 1527430547, "question_id": 50551633, "link": "https://stackoverflow.com/questions/50551633/what-is-the-idiomatic-way-of-looping-through-the-bytes-of-an-integer-number-in-r", "closed_reason": "Duplicate", "title": "What is the idiomatic way of looping through the bytes of an integer number in Rust?", "body": "<p>I tried such a piece of code to loop through the bytes of a <code>u64</code>:</p>\n\n<pre><code>let mut message: u64 = 0x1234123412341234;\nlet msg = &amp;message as *mut u8;\n\nfor b in 0..8 {\n    // ...some work...\n}\n</code></pre>\n\n<p>Unfortunately, Rust doesn't allow such C-like indexing.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1527407510, "post_id": 50549857, "comment_id": 88111126, "body": "What exactly is the type you want to create? Because the one you&#39;re defining right now has an infinitely recursive definition."}, {"owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1527412030, "post_id": 50549857, "comment_id": 88112125, "body": "I&#39;m trying to implement a finger tree."}], "answers": [{"comments": [{"owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527408177, "post_id": 50550040, "comment_id": 88111280, "body": "Specifically I was trying to implement a finger tree. Coming from haskell and scala this is all really confusing and I have a hard time figuring out ways to get around it."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527408859, "post_id": 50550040, "comment_id": 88111406, "body": "I don&#39;t think it&#39;s possible to define a finger tree like that in Rust.  Rust has to care about how to deterministically destroy values, and a finger tree is a type with (apparently) infinite complexity.  If you want to do this in Rust, you&#39;d likely have to give up all static guarantees about shape, or redesign it to have a statically fixed depth."}, {"owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527412576, "post_id": 50550040, "comment_id": 88112273, "body": "I&#39;m guessing the only way of doing it is to declare a more general structure and maintain the structure invariant inside the library, at least until rust gets higher kinded types if that ever happens."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527426127, "post_id": 50550040, "comment_id": 88115592, "body": "I don&#39;t believe HKT will help here.  Assuming Haskell has a tracing garbage collector, it doesn&#39;t need to have any drop code, it can just stop pointing to allocations and they get cleaned up automatically.  The problem for Rust is that it <i>requires</i> drop code to deallocate the <code>Box</code> and <code>Vec</code>s.  It has <i>no choice</i> but to infinitely expand the type forever."}, {"owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527447040, "post_id": 50550040, "comment_id": 88121614, "body": "Thanks for elaborating, this makes more sense now."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 2, "last_activity_date": 1527406704, "creation_date": 1527406704, "answer_id": 50550040, "question_id": 50549857, "link": "https://stackoverflow.com/questions/50549857/why-do-i-get-an-overflowed-on-error-when-creating-an-enum-with-nested-generics/50550040#50550040", "title": "Why do I get an &quot;overflowed on&quot; error when creating an enum with nested generics?", "body": "<p>First of all, you didn't include the entire error message.  You should always include as much of the error as possible, not just a snippet of it.  For reference, the error is:</p>\n\n<pre><code>error[E0320]: overflow while adding drop-check rules for T&lt;i32&gt;\n --&gt; src/main.rs:7:9\n  |\n7 |     let t = T::M::&lt;i32&gt;(\n  |         ^\n  |\n  = note: overflowed on T&lt;std::vec::Vec&lt;..&lt;std::vec::Vec&lt;i32&gt;&gt;..&gt;&gt;\n</code></pre>\n\n<p>The error itself tells you the problem: the compiler can't generate the drop code for the <code>T</code> type.  Consider what the compiler needs to do: in order to destroy a value of type <code>T&lt;X&gt;</code>, it needs to be able to destroy either of its variants.  That means code to destroy <code>X</code> (for the <code>S</code> variant), and code to destroy <code>Box&lt;T&lt;Vec&lt;X&gt;&gt;&gt;</code> (for the <code>M</code> variant).</p>\n\n<p>To destroy a <code>Box&lt;T&lt;Vec&lt;X&gt;&gt;&gt;</code>, it needs code to destroy a <code>T&lt;Vec&lt;X&gt;&gt;</code>.  Thus, to destroy a <code>T&lt;X&gt;</code>, the compiler also has to generate code to destroy a <code>T&lt;Vec&lt;X&gt;&gt;</code>.</p>\n\n<p>Thus, to destroy a <code>T&lt;Vec&lt;X&gt;&gt;</code>, the compiler also has to generate code to destroy a <code>T&lt;Vec&lt;Vec&lt;X&gt;&gt;&gt;</code>.</p>\n\n<p>Thus, to destroy a <code>T&lt;Vec&lt;Vec&lt;X&gt;&gt;&gt;</code>, the compiler also has to generate code to destroy a <code>T&lt;Vec&lt;Vec&lt;Vec&lt;X&gt;&gt;&gt;&gt;</code>.</p>\n\n<p>Thus, to destroy a <code>T&lt;Vec&lt;Vec&lt;Vec&lt;X&gt;&gt;&gt;&gt;</code>, the compiler also has to generate code to destroy a <code>T&lt;Vec&lt;Vec&lt;Vec&lt;Vec&lt;X&gt;&gt;&gt;&gt;&gt;</code>.</p>\n\n<p>Ad infinitum.  The compiler is never able to <em>stop</em> needing to generate drop code for an infinitely long sequence of types, so it gives up.  This will happen in any case where destroying a generic type depends on being able to destroy a more complex version of itself.</p>\n\n<p>The solution is to not use <code>T&lt;Vec&lt;A&gt;&gt;</code>.  I don't know how you would do that, since I don't know what you're trying to do.  Maybe have more variants?  Maybe use <code>Vec&lt;T&lt;A&gt;&gt;</code>?  Maybe have the paylod of <code>M</code> be a type parameter instead?</p>\n"}], "owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "closed_date": 1527435191, "accepted_answer_id": 50550040, "answer_count": 1, "score": 0, "last_activity_date": 1527432235, "creation_date": 1527405003, "last_edit_date": 1527432235, "question_id": 50549857, "link": "https://stackoverflow.com/questions/50549857/why-do-i-get-an-overflowed-on-error-when-creating-an-enum-with-nested-generics", "closed_reason": "Duplicate", "title": "Why do I get an &quot;overflowed on&quot; error when creating an enum with nested generics?", "body": "<p>I need a structure that requires a nested generic inside an enum. This is a minimal example:</p>\n\n<pre><code>enum T&lt;A&gt; {\n    S(A),\n    M(Box&lt;T&lt;Vec&lt;A&gt;&gt;&gt;),\n}\n\nfn main() {\n    let t = T::M(\n        Box::new(\n            T::M(\n                Box::new(\n                    T::S(vec![vec![1], vec![2], vec![3]])\n                )\n            )\n        )\n    );\n}\n</code></pre>\n\n<p>The compiler fails with an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>overflowed on T&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;std::vec::Vec&lt;i32&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n</code></pre>\n\n<p>Why is this happening and is there any way around this?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527378043, "post_id": 50547766, "comment_id": 88106389, "body": "This <i>might</i> be a bug. If it is, <a href=\"https://github.com/rust-lang/rust/issues/51069\" rel=\"nofollow noreferrer\">#51069</a> might be related."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1527388173, "last_edit_date": 1527388173, "creation_date": 1527387854, "answer_id": 50548538, "question_id": 50547766, "link": "https://stackoverflow.com/questions/50547766/how-can-i-get-impl-trait-to-use-the-appropriate-lifetime-for-a-mutable-reference/50548538#50548538", "title": "How can I get impl Trait to use the appropriate lifetime for a mutable reference to a value with another lifetime in it?", "body": "<p>You need to indicate that the returned value is built upon multiple lifetimes. However, you can't use multiple lifetime bounds with <code>impl Trait</code>, and attempting to do so <a href=\"https://github.com/rust-lang/rust/issues/49431\" rel=\"noreferrer\">doesn't have a useful error message</a>.</p>\n\n<p>There's <a href=\"https://github.com/rust-lang/rust/issues/34511#issuecomment-373423999\" rel=\"noreferrer\">a trick you can use</a> that involves creating a dummy trait that has a lifetime parameter:</p>\n\n<pre><code>trait Captures&lt;'a&gt; {}\nimpl&lt;'a, T: ?Sized&gt; Captures&lt;'a&gt; for T {}\n\nfn bar_to_foo&lt;'a, 'b: 'a&gt;(bar: &amp;'a mut HasLifetime&lt;'b&gt;) -&gt; impl Trait + Captures&lt;'b&gt; + 'a {\n    bar\n}\n</code></pre>\n\n<p>Thankfully, this <a href=\"https://github.com/rust-lang/rust/issues/34511#issuecomment-373455139\" rel=\"noreferrer\">only occurs when the \"hidden\" lifetime is invariant</a>, which occurs because the reference is mutable.</p>\n"}], "owner": {"reputation": 2244, "user_id": 1825860, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b9e1d70a0cbe81683a016e700d3239bf?s=128&d=identicon&r=PG", "display_name": "AlphaModder", "link": "https://stackoverflow.com/users/1825860/alphamodder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1965, "favorite_count": 1, "accepted_answer_id": 50548538, "answer_count": 1, "score": 9, "last_activity_date": 1527388173, "creation_date": 1527376902, "last_edit_date": 1527385118, "question_id": 50547766, "link": "https://stackoverflow.com/questions/50547766/how-can-i-get-impl-trait-to-use-the-appropriate-lifetime-for-a-mutable-reference", "title": "How can I get impl Trait to use the appropriate lifetime for a mutable reference to a value with another lifetime in it?", "body": "<p>I have a struct with a lifetime:</p>\n\n<pre><code>struct HasLifetime&lt;'a&gt;( /* ... */ );\n</code></pre>\n\n<p>There is there is an implementation of the trait <code>Foo</code>:</p>\n\n<pre><code>impl&lt;'a, 'b: 'a&gt; Foo for &amp;'a mut HasLifetime&lt;'b&gt; { }\n</code></pre>\n\n<p>I want to implement the following function:</p>\n\n<pre><code>fn bar_to_foo&lt;'a, 'b: 'a&gt;(bar: &amp;'a mut Lifetime&lt;'b&gt;) -&gt; impl Foo {\n    bar\n}\n</code></pre>\n\n<p>This won't compile because the returned <code>impl</code> is only valid for <code>'a</code>. However, specifying <code>impl Foo + 'a</code> results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0909]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n --&gt; src/main.rs:7:60\n  |\n7 | fn bar_to_foo&lt;'a, 'b: 'a&gt;(bar: &amp;'a mut HasLifetime&lt;'b&gt;) -&gt; impl Trait + 'a {\n  |                                                            ^^^^^^^^^^^^^^^\n  |\nnote: hidden type `&amp;'a mut HasLifetime&lt;'b&gt;` captures the lifetime 'b as defined on the function body at 7:1\n --&gt; src/main.rs:7:1\n  |\n7 | fn bar_to_foo&lt;'a, 'b: 'a&gt;(bar: &amp;'a mut HasLifetime&lt;'b&gt;) -&gt; impl Trait + 'a {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>The seemingly equivalent function with a boxed trait object compiles:</p>\n\n<pre><code>fn bar_to_foo&lt;'a, 'b: 'a&gt;(bar: &amp;'a mut Lifetime&lt;'b&gt;) -&gt; Box&lt;Foo + 'a&gt; {\n    Box::new(bar)\n}\n</code></pre>\n\n<p>How can I define <code>bar_to_foo</code> with <code>impl Trait</code>?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b8f293acecf4b7e1f3c5963f15c36b1e&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Playground link</a></p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1527361248, "post_id": 50545939, "comment_id": 88103026, "body": "Even better would be to use <a href=\"https://doc.rust-lang.org/std/fmt/struct.Formatter.html#method.debug_struct\" rel=\"nofollow noreferrer\"><code>f.debug_struct</code></a> so the user still gets the benefit of toggling pretty-printing and such. <a href=\"https://play.rust-lang.org/?gist=3e6abfe7a0109b06222dbd4e31fce897&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1527361280, "post_id": 50545939, "comment_id": 88103035, "body": "Good idea, will expand."}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": false, "score": 3, "last_activity_date": 1527361495, "last_edit_date": 1527361495, "creation_date": 1527359934, "answer_id": 50545939, "question_id": 50545897, "link": "https://stackoverflow.com/questions/50545897/where-does-forr-s-fnr-mytypes-bool-go-in-the-impl-stdfmtdebu/50545939#50545939", "title": "Where does for&lt;&#39;r, &#39;s&gt; fn(&amp;&#39;r MyType&lt;&#39;s&gt;) -&gt; bool go in the `impl std::fmt::Debug` definition?", "body": "<p>Automatic derivation of a trait like <code>Debug</code> works by recursively delegating to the <code>Debug</code> implementation of each field. In this case, the field <code>CmdHandler</code> is an alias for a function pointer, which doesn't implement <code>Debug</code>, so you cannot automatically derive <code>Debug</code> for <code>Cmd</code> because its <code>handler</code> field doesn't implement <code>Debug</code>.</p>\n\n<p>The way around this is to <a href=\"https://doc.rust-lang.org/std/fmt/trait.Debug.html#examples\" rel=\"nofollow noreferrer\">manually implement <code>Debug</code></a>. One possible implementation could be:</p>\n\n<pre><code>impl fmt::Debug for Cmd {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Cmd {{ name: {:?} }}\", self.name)\n    }\n}\n</code></pre>\n\n<p>Which would print as: <code>Cmd { name: \"Something\" }</code></p>\n\n<p>As @logansfmyth pointed out, you could also use the <a href=\"https://doc.rust-lang.org/std/fmt/struct.Formatter.html#method.debug_struct\" rel=\"nofollow noreferrer\"><code>f.debug_struct</code></a> method to build a <a href=\"https://doc.rust-lang.org/std/fmt/struct.DebugStruct.html\" rel=\"nofollow noreferrer\"><code>DebugStruct</code></a>:</p>\n\n<pre><code>impl fmt::Debug for Cmd {\n    fn fmt(&amp;self, fmt: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        fmt.debug_struct(\"Cmd\")\n            .field(\"name\", &amp;self.name)\n            .finish()\n    }\n}\n</code></pre>\n\n<p>In this case, this will print the same as above, except you can use pretty printing if you format it as <code>{:#?}</code> instead of <code>{:?}</code>.</p>\n"}], "owner": {"reputation": 71, "user_id": 1296849, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15429ba65d37cb4e2b2b2f8a248e33ee?s=128&d=identicon&r=PG", "display_name": "Greg Melton", "link": "https://stackoverflow.com/users/1296849/greg-melton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1527385353, "creation_date": 1527359606, "last_edit_date": 1527385353, "question_id": 50545897, "link": "https://stackoverflow.com/questions/50545897/where-does-forr-s-fnr-mytypes-bool-go-in-the-impl-stdfmtdebu", "title": "Where does for&lt;&#39;r, &#39;s&gt; fn(&amp;&#39;r MyType&lt;&#39;s&gt;) -&gt; bool go in the `impl std::fmt::Debug` definition?", "body": "<p>I have this type:</p>\n\n<pre><code>struct Ctx;\n\ntype CmdHandler = fn(&amp;mut Ctx) -&gt; bool;\n\n#[derive(Debug)]\npub struct Cmd {\n    pub name: String,\n    pub handler: CmdHandler,\n}\n\nimpl Cmd {\n    pub fn new(name: String, handler: CmdHandler) -&gt; Cmd {\n        Cmd { name, handler }\n    }\n}\n</code></pre>\n\n<p>It ends up throwing this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `for&lt;'r&gt; fn(&amp;'r mut Ctx) -&gt; bool` doesn't implement `std::fmt::Debug`\n --&gt; src/main.rs:8:5\n  |\n8 |     pub handler: CmdHandler,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^ `for&lt;'r&gt; fn(&amp;'r mut Ctx) -&gt; bool` cannot be formatted using `:?` because it doesn't implement `std::fmt::Debug`\n  |\n  = help: the trait `std::fmt::Debug` is not implemented for `for&lt;'r&gt; fn(&amp;'r mut Ctx) -&gt; bool`\n  = note: required because of the requirements on the impl of `std::fmt::Debug` for `&amp;for&lt;'r&gt; fn(&amp;'r mut Ctx) -&gt; bool`\n  = note: required for the cast to the object type `std::fmt::Debug`\n</code></pre>\n\n<p>I can't figure out how to implement this trait. The part that's tripping me up is the <code>for&lt;'r, 's&gt; fn(&amp;'r mut lib::server::cmd::Ctx&lt;'s&gt;) -&gt; bool</code>; I can't figure out where this goes in the <code>impl std::fmt::Debug</code> definition.</p>\n"}, {"tags": ["rust", "code-generation", "rust-macros"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1527491105, "post_id": 50545742, "comment_id": 88132087, "body": "The official documentation may be &quot;somewhat limited&quot;, but have you looked at <a href=\"https://danielkeep.github.io/tlborm/book/index.html\" rel=\"nofollow noreferrer\">the little book of Rust macros</a>?"}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1527506047, "post_id": 50545742, "comment_id": 88140243, "body": "@Jmb no, that&#39;s new to me. Thanks"}], "answers": [{"comments": [{"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1527366463, "post_id": 50546638, "comment_id": 88104129, "body": "If this is so, then how does (e.g.) diesel work? It seems to generate quite extensive code for a schema from a single macro invocation, which seems to even talk to the database to get that information. Yet diesel is not part of rust -- right?"}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "reply_to_user": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1527371890, "post_id": 50546638, "comment_id": 88105360, "body": "It uses custom <code>derive</code>, which allows you to generate Rust code (by writing Rust code), but that takes structs/enums/unions as input. So it&#39;s still not powerful enough to implement something like <code>format_args!</code>."}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": false, "score": 2, "last_activity_date": 1527365528, "creation_date": 1527365528, "answer_id": 50546638, "question_id": 50545742, "link": "https://stackoverflow.com/questions/50545742/is-it-possible-to-write-something-as-complex-as-print-in-a-pure-rust-macro/50546638#50546638", "title": "Is it possible to write something as complex as `print!` in a pure Rust macro?", "body": "<p>Rust macros cannot parse string literals, so it's not possible to create a direct Rust equivalent of <code>format_args!</code>.</p>\n\n<p>What you could do is to use a macro to transform the function-call-like syntax into something that represents the variadic argument list in the Rust type system in some way (say, as a heterogeneous single-linked list, or a builder type).  This can then be passed to a regular Rust function, along with the format string.  But you will not be able to implement compile-time type checking of the format string this way. </p>\n"}, {"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 4, "last_activity_date": 1527371785, "creation_date": 1527371785, "answer_id": 50547321, "question_id": 50545742, "link": "https://stackoverflow.com/questions/50545742/is-it-possible-to-write-something-as-complex-as-print-in-a-pure-rust-macro/50547321#50547321", "title": "Is it possible to write something as complex as `print!` in a pure Rust macro?", "body": "<p><code>format_args</code> is implemented in the compiler itself, in the libsyntax_ext crate. The name is registered in the <a href=\"https://github.com/rust-lang/rust/blob/e0635188ed30e083245482218a0de9237f14ce90/src/libsyntax_ext/lib.rs#L129\" rel=\"nofollow noreferrer\"><code>register_builtins</code> function</a>, and the code to process it has its entry point in the <a href=\"https://github.com/rust-lang/rust/blob/1e504d301c07f84630ff0e35f10d2d69688887d6/src/libsyntax_ext/format.rs#L679\" rel=\"nofollow noreferrer\"><code>expand_format_args</code> function</a>.</p>\n\n<p>Macros that do such detailed syntax processing cannot be defined using the <code>macro_rules!</code> construct. They can be defined with a <a href=\"https://github.com/rust-lang/rust/blob/master/src/doc/unstable-book/src/language-features/proc-macro.md\" rel=\"nofollow noreferrer\">procedural macro</a>; however, this feature is currently unstable (can only be used with the nightly compiler and is subject to sudden and unannounced changes) and rather sparsely documented.</p>\n"}], "owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 593, "favorite_count": 1, "answer_count": 2, "score": 8, "last_activity_date": 1527384444, "creation_date": 1527358456, "last_edit_date": 1527384444, "question_id": 50545742, "link": "https://stackoverflow.com/questions/50545742/is-it-possible-to-write-something-as-complex-as-print-in-a-pure-rust-macro", "title": "Is it possible to write something as complex as `print!` in a pure Rust macro?", "body": "<p>I am starting out learning Rust macros, but the documentation is somewhat limited. Which is fine \u2014 they're an expert feature, I guess. While I can do basic code generation, implementation of traits, and so on, some of the built-in macros seem well beyond that, such as the various print macros, which examine a string literal and use that for code expansion.</p>\n\n<p>I looked at <a href=\"https://github.com/rust-lang/rust/blob/1.26.0/src/libstd/macros.rs\" rel=\"nofollow noreferrer\">the source for <code>print!</code></a> and it calls another macro called <code>format_args</code>. Unfortunately this doesn't seem to be built in \"pure Rust\"  the comment just says \"compiler built-in.\"</p>\n\n<p>Is it possible to write something as complex as <code>print!</code> in a pure Rust macro? If so, how would it be done?</p>\n\n<p>I'm actually interested in building a \"compile time trie\" -- basically recognizing certain fixed strings as \"keywords\" fixed at compile time. This would be performant (probably) but mostly I'm just interested in code generation.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 1, "creation_date": 1527345103, "post_id": 50543766, "comment_id": 88098673, "body": "Why do you want to return a <code>MutexGuard</code> type?"}, {"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "reply_to_user": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1527345230, "post_id": 50543766, "comment_id": 88098705, "body": "to lock and avoid other tests to set values which may cause assert false"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527384940, "post_id": 50543766, "comment_id": 88107408, "body": "Please do not edit your <i>question</i> to include an <i>answer</i>. If you have something substantial to add, you are encouraged to post your own answer below, instead. However, the code you have is exactly the same as the answer that you accepted. Since you accepted it, that&#39;s already enough of a signal to everyone who reads this in the future. I&#39;ve removed this from your question."}], "answers": [{"comments": [{"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1527346210, "post_id": 50543844, "comment_id": 88098972, "body": "Great, I learned a new grammar for lifetime. Thanks.  By the way the tests run fine, but if I don&#39;t lock they will be failed. And if it like you said, how to achieve my purpose."}, {"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1527346862, "post_id": 50543844, "comment_id": 88099151, "body": "My God! can you give me a piece of sample code to learn. I  come from java, my thoughts have lots of OO concepts"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 1, "creation_date": 1527349299, "post_id": 50543844, "comment_id": 88099881, "body": "@llxxbb Java is completely filled with dependency injection; it&#39;s not a concept unique to Rust or even very new. I&#39;ve added a sketch of what it could look like."}, {"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1527381320, "post_id": 50543844, "comment_id": 88106914, "body": "I got it. pass all you need by parameter, and mock the parameter that must be a <code>Trait</code>. I misunderstand the dependency-injection, all injection must be done manually not by some certain crate or other thing automatically. Thanks again."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1527385112, "last_edit_date": 1527385112, "creation_date": 1527345420, "answer_id": 50543844, "question_id": 50543766, "link": "https://stackoverflow.com/questions/50543766/returning-a-mutexguard-of-a-lazy-static-mutex-from-a-function-needs-a-lifetime-p/50543844#50543844", "title": "Returning a MutexGuard of a lazy_static Mutex from a function needs a lifetime parameter", "body": "<p>Read the complete error message:</p>\n\n<blockquote>\n  <p>consider giving it an explicit bounded or 'static lifetime</p>\n</blockquote>\n\n<p>Doing so works:</p>\n\n<pre><code>pub fn set_hello_return_value(rtn: String) -&gt; MutexGuard&lt;'static, bool&gt; {\n    let lock = LOCK.lock().unwrap();\n    let mut value = HELLO_VALUE.lock().unwrap();\n    *value = rtn;\n    lock\n}\n</code></pre>\n\n<hr>\n\n<p>I'd probably not return the guard at all, however:</p>\n\n<pre><code>pub fn with_hello_return_value&lt;S, F&gt;(rtn: S, f: F)\nwhere\n    S: Into&lt;String&gt;,\n    F: FnOnce(),\n{\n    let _lock = LOCK.lock().unwrap();\n    *HELLO_VALUE.lock().unwrap() = rtn.into();\n    f()\n}\n\n#[test]\nfn test_simplified() {\n    with_hello_return_value(\"Hello Mark!\", || {\n        assert_eq!(\"Hello Mark!\", say_hello(\"\".to_string()));\n    });\n}\n</code></pre>\n\n<p>Honestly, I wouldn't do <em>any</em> of this as conditional compilation is overkill. If you need to test components of your system separately, <em>they shouldn't know about each other</em> to start with; they should be dependency-injected. This has the additional benefit that each test can inject its own value, preserving the multithreaded nature of the tests.</p>\n\n<pre><code>fn thing_that_uses_say_hello&lt;G&gt;(greeter: &amp;G, name: &amp;str) -&gt; String\nwhere\n    G: Greeting,\n{\n    greeter.say_hello(name.into())\n}\n\ntrait Greeting {\n    fn say_hello(&amp;self, name: &amp;str) -&gt; String;\n}\n\nstruct RealGreeting;\n\nimpl Greeting for RealGreeting {\n    fn say_hello(&amp;self, name: &amp;str) -&gt; String {\n        format!(\"Hello, {}\", name)\n    }\n}\n\n#[cfg(test)]\nmod test {\n    use super::*;\n    use std::cell::RefCell;\n\n    struct MockGreeting&lt;'a&gt; {\n        called_with: RefCell&lt;Vec&lt;String&gt;&gt;,\n        value: &amp;'a str,\n    }\n\n    impl&lt;'a&gt; MockGreeting&lt;'a&gt; {\n        fn new(value: &amp;'a str) -&gt; Self {\n            Self {\n                value,\n                called_with: Default::default(),\n            }\n        }\n    }\n\n    impl&lt;'a&gt; Greeting for MockGreeting&lt;'a&gt; {\n        fn say_hello(&amp;self, name: &amp;str) -&gt; String {\n            self.called_with.borrow_mut().push(name.to_owned());\n            self.value.to_owned()\n        }\n    }\n\n    #[test]\n    fn test1() {\n        let g = MockGreeting::new(\"Hello\");\n        let r = thing_that_uses_say_hello(&amp;g, \"Tom\");\n        assert_eq!(\"Hello\", r);\n        assert_eq!(&amp;*g.called_with.borrow(), &amp;[\"Tom\".to_string()]);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 752, "favorite_count": 1, "accepted_answer_id": 50543844, "answer_count": 1, "score": 2, "last_activity_date": 1527385112, "creation_date": 1527344871, "last_edit_date": 1527385082, "question_id": 50543766, "link": "https://stackoverflow.com/questions/50543766/returning-a-mutexguard-of-a-lazy-static-mutex-from-a-function-needs-a-lifetime-p", "title": "Returning a MutexGuard of a lazy_static Mutex from a function needs a lifetime parameter", "body": "<p>I'm writing tests using mock functions, controlling the return value among the tests with a <code>Mutex</code>:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\n#[cfg(test)]\npub use mock::*;\n#[cfg(not(test))]\npub use real::*;\n\nmod real {\n    pub fn say_hello(_name: String) -&gt; String {\n        unimplemented!()\n    }\n}\n\n/// simulate multiple uses, replace `real` in test.\nmod mock {\n    use std::sync::*;\n    lazy_static! {\n        pub static ref LOCK: Mutex&lt;bool&gt; = Mutex::new(true);\n        pub static ref HELLO_VALUE: Mutex&lt;String&gt; = Mutex::new(String::default());\n    }\n    pub fn say_hello(_name: String) -&gt; String {\n        use std::ops::Deref;\n        HELLO_VALUE.lock().unwrap().deref().clone()\n    }\n\n    pub fn set_hello_return_value(rtn: String) -&gt; MutexGuard&lt;bool&gt; {\n        let lock = LOCK.lock().unwrap();\n        let mut value = HELLO_VALUE.lock().unwrap();\n        *value = rtn;\n        lock\n    }\n}\n\n#[cfg(test)]\nmod test {\n    use super::*;\n    #[test]\n    fn test1() {\n        // repeated block begin--------------------------\n        let _lock = LOCK.lock().unwrap();\n        let mut value = HELLO_VALUE.lock().unwrap();\n        *value = \"Hello Tom!\".to_string(); // just this line is different from test2\n        drop(value);\n        // repeat block end--------------------------\n        assert_eq!(\"Hello Tom!\", say_hello(\"\".to_string()));\n    }\n\n    #[test]\n    fn test2() {\n        // repeated block begin--------------------------\n        let _lock = LOCK.lock().unwrap();\n        let mut value = HELLO_VALUE.lock().unwrap();\n        *value = \"Hello Jack!\".to_string(); // just this line is different from test1\n        drop(value);\n        // repeat block end--------------------------\n        assert_eq!(\"Hello Jack!\", say_hello(\"\".to_string()));\n    }\n\n    #[test]\n    fn test_simplified_but_not_work() {\n        let _lock = set_hello_return_value(\"Hello Mark!\".to_string());\n        assert_eq!(\"Hello Mark!\", say_hello(\"\".to_string()));\n    }\n}\n</code></pre>\n\n<p>You can see the <strong>repeat block</strong> that I want to simplify. I made a function <code>set_hello_return_value</code> but the compiler complained:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:28:51\n   |\n28 |     pub fn set_hello_return_value(rtn: String) -&gt; MutexGuard&lt;bool&gt; {\n   |                                                   ^^^^^^^^^^^^^^^^ expected lifetime parameter\n   |\n   = help: this function's return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\n   = help: consider giving it an explicit bounded or 'static lifetime\n</code></pre>\n\n<p>Please help me to correct it.</p>\n"}, {"tags": ["multithreading", "iterator", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527342221, "post_id": 50543344, "comment_id": 88097876, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>. <code>d</code> is a reference into your <code>self</code>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50543344/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 642, "user_id": 2407183, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/004c201a6dafeaddfbb067096bca18b3?s=128&d=identicon&r=PG", "display_name": "Melvin Sowah", "link": "https://stackoverflow.com/users/2407183/melvin-sowah"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527345708, "post_id": 50543344, "comment_id": 88098838, "body": "It seems I didn&#39;t look hard enough. Thanks for pointing me in the right direction"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527345790, "post_id": 50543344, "comment_id": 88098854, "body": "No worries, that&#39;s what duplicates are for \u2014 to point people in the right direction when they use slightly different terminology."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527345847, "post_id": 50543344, "comment_id": 88098872, "body": "For your specific case, you may want to check out <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">Rayon</a>."}], "owner": {"reputation": 642, "user_id": 2407183, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/004c201a6dafeaddfbb067096bca18b3?s=128&d=identicon&r=PG", "display_name": "Melvin Sowah", "link": "https://stackoverflow.com/users/2407183/melvin-sowah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 16, "favorite_count": 0, "closed_date": 1527345807, "answer_count": 0, "score": 0, "last_activity_date": 1527342561, "creation_date": 1527341752, "last_edit_date": 1527342561, "question_id": 50543344, "link": "https://stackoverflow.com/questions/50543344/problems-with-function-invocation-lifetime-parameter-when-processing-elements-in", "closed_reason": "Duplicate", "title": "Problems with function invocation lifetime parameter when processing elements in threads", "body": "<p>I'm trying to process elements in a vector in parallel. This is a simplified version that has the same error message:</p>\n\n<pre><code>use std::sync::mpsc;\nuse std::thread;\n\nstruct Delegate {\n    name: String,\n}\n\nimpl Delegate {\n    fn new(name: String) -&gt; Delegate {\n        Delegate { name: name }\n    }\n\n    fn present(&amp;self, subject: &amp;str) -&gt; String {\n        let presentation = format!(\"{} presents {}.\", self.name, subject);\n        presentation.to_owned()\n    }\n}\n\nstruct Conference {\n    delegates: Vec&lt;Delegate&gt;,\n}\n\nimpl Conference {\n    fn new(delegates: Vec&lt;Delegate&gt;) -&gt; Conference {\n        Conference {\n            delegates: delegates,\n        }\n    }\n\n    fn run(&amp;self) {\n        let (tx, rx) = mpsc::channel();\n        let iterator = self.delegates.iter();\n\n        for d in iterator {\n            let txd = mpsc::Sender::clone(&amp;tx);\n            thread::spawn(move || {\n                let presentation = d.present(\"a resolution\");\n                txd.send(presentation).unwrap();\n            });\n        }\n\n        for recieved in rx {\n            println!(\"{}\", recieved);\n        }\n    }\n}\n\nfn main() {\n    let delegates = vec![\n        Delegate::new(\"Coldophia\".to_owned()),\n        Delegate::new(\"Borginia\".to_owned()),\n        Delegate::new(\"Khura'in\".to_owned()),\n    ];\n    let conference = Conference::new(delegates);\n    conference.run();\n}\n</code></pre>\n\n<p>This is the error I'm getting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; src/main.rs:32:39\n   |\n32 |         let iterator = self.delegates.iter();\n   |                                       ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 30:5...\n  --&gt; src/main.rs:30:5\n   |\n30 | /     fn run(&amp;self) {\n31 | |         let (tx, rx) = mpsc::channel();\n32 | |         let iterator = self.delegates.iter();\n33 | |\n...  |\n44 | |         }\n45 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:32:24\n   |\n32 |         let iterator = self.delegates.iter();\n   |                        ^^^^^^^^^^^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `[closure@src/main.rs:36:27: 39:14 d:&amp;Delegate, txd:std::sync::mpsc::Sender&lt;std::string::String&gt;]` will meet its required lifetime bounds\n  --&gt; src/main.rs:36:13\n   |\n36 |             thread::spawn(move || {\n   |             ^^^^^^^^^^^^^\n</code></pre>\n\n<p>I don't understand what Rust means by \"lifetime parameter in function call\", and I don't know why it refers to the anonymous lifetime on the function definition. What else do I need to add to get this to compile?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 1, "creation_date": 1527314724, "post_id": 50539818, "comment_id": 88091237, "body": "Note that dependencies are transitive; if your project depends on <code>A</code> which depends on <code>B</code>, then your project also depends on <code>B</code>, even if that dependency is not explicit in your Cargo.toml. This is actually one of the most important <i>features</i> of dependency management systems such as Cargo!"}], "answers": [{"tags": [], "owner": {"reputation": 127, "user_id": 6587089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5fec802fe3ec4b52f2825a7b1bb377a2?s=128&d=identicon&r=PG", "display_name": "Jack Fraser", "link": "https://stackoverflow.com/users/6587089/jack-fraser"}, "is_accepted": false, "score": 0, "last_activity_date": 1527346845, "last_edit_date": 1527346845, "creation_date": 1527314486, "answer_id": 50539819, "question_id": 50539818, "link": "https://stackoverflow.com/questions/50539818/why-is-this-unrelated-crate-breaking-my-project/50539819#50539819", "title": "Why is this unrelated crate breaking my project?", "body": "<pre><code>cargo update\n</code></pre>\n\n<p>fixed the issue for me</p>\n\n<p><a href=\"https://github.com/SergioBenitez/Pear/issues/7\" rel=\"nofollow noreferrer\">https://github.com/SergioBenitez/Pear/issues/7</a></p>\n\n<p><a href=\"https://www.reddit.com/r/rust/comments/8m6au2/comment/dzlg6r1\" rel=\"nofollow noreferrer\">thanks to reddit user /u/usernamedottxt</a></p>\n"}, {"tags": [], "owner": {"reputation": 723, "user_id": 431056, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-hMZ64wPE1ds/AAAAAAAAAAI/AAAAAAAAACk/09SSkGPaJFE/photo.jpg?sz=128", "display_name": "eddyb", "link": "https://stackoverflow.com/users/431056/eddyb"}, "is_accepted": true, "score": 2, "last_activity_date": 1527342005, "creation_date": 1527342005, "answer_id": 50543381, "question_id": 50539818, "link": "https://stackoverflow.com/questions/50539818/why-is-this-unrelated-crate-breaking-my-project/50543381#50543381", "title": "Why is this unrelated crate breaking my project?", "body": "<p>You're using Rust nightly, and the crate in question used to depend (in version <code>0.0.16</code>) on the perma-unstable API of the Rust compiler, which was changed by a nightly you updated to (or just installed).<br>\nThe author <a href=\"https://github.com/SergioBenitez/Pear/commit/d4f44e6b0e41887d1fdac26981aeb9872f55783f\" rel=\"nofollow noreferrer\">appears to have recently rewritten</a> the crate to avoid that dependency, which means further breakage should be avoided, starting with version <code>0.0.17</code> of the crate.</p>\n"}], "owner": {"reputation": 127, "user_id": 6587089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5fec802fe3ec4b52f2825a7b1bb377a2?s=128&d=identicon&r=PG", "display_name": "Jack Fraser", "link": "https://stackoverflow.com/users/6587089/jack-fraser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 0, "accepted_answer_id": 50543381, "answer_count": 2, "score": -3, "last_activity_date": 1527346845, "creation_date": 1527314486, "question_id": 50539818, "link": "https://stackoverflow.com/questions/50539818/why-is-this-unrelated-crate-breaking-my-project", "title": "Why is this unrelated crate breaking my project?", "body": "<pre><code>$ cargo build\n Downloading pear_codegen v0.0.16\n Compiling pear_codegen v0.0.16                                               \n Compiling ring v0.11.0\n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n --&gt; /.cargo/registry/src/github.com-1ecc6299db9ec823/pear_codegen-0.0.16/src/lib.rs:317:9\n     |\n 317 |         ExprKind::Block(block) =&gt; {\n     |         ^^^^^^^^^^^^^^^^^^^^^^ expected 2 fields, found 1\n\n error: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0023`.\nerror: Could not compile `pear_codegen`.\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n</code></pre>\n\n<p>When I try to compile my project I get an error that a crate that isn't in my cargo.toml is broken. Why is this unrelated crate breaking my project?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 1902, "user_id": 4182601, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/JhDZP.jpg?s=128&g=1", "display_name": "theFreedomBanana", "link": "https://stackoverflow.com/users/4182601/thefreedombanana"}, "edited": false, "score": 0, "creation_date": 1531232901, "post_id": 50540263, "comment_id": 89513945, "body": "Got the same error while running <code>cargo install exa</code> on Ubuntu 18.04. Worked for me. Thx"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1527352901, "last_edit_date": 1527352901, "creation_date": 1527318559, "answer_id": 50540263, "question_id": 50539761, "link": "https://stackoverflow.com/questions/50539761/cannot-link-program-using-cairo-rs-linking-with-cc-failed-and-library-not/50540263#50540263", "title": "Cannot link program using cairo-rs: &quot;linking with `cc` failed&quot; and &quot;library not found for -lgobject-2.0&quot;", "body": "<p>You need to install the proper development libraries of <code>glib</code> and <code>cairo</code>.</p>\n\n<p>If your OS is Debian related, type <code>apt install libglib2.0-dev</code>. </p>\n\n<p>If you are using macOS and Homebrew, type <code>brew install glib</code> then <code>brew install cairo</code>.</p>\n"}], "owner": {"reputation": 297, "user_id": 9178974, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-F1kzUPqVYAs/AAAAAAAAAAI/AAAAAAAAAw4/Na4NaHsc5iY/photo.jpg?sz=128", "display_name": "David Sullivan", "link": "https://stackoverflow.com/users/9178974/david-sullivan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1640, "favorite_count": 0, "accepted_answer_id": 50540263, "answer_count": 1, "score": 1, "last_activity_date": 1527352901, "creation_date": 1527313947, "last_edit_date": 1527352803, "question_id": 50539761, "link": "https://stackoverflow.com/questions/50539761/cannot-link-program-using-cairo-rs-linking-with-cc-failed-and-library-not", "title": "Cannot link program using cairo-rs: &quot;linking with `cc` failed&quot; and &quot;library not found for -lgobject-2.0&quot;", "body": "<p>I'm following <a href=\"https://medium.com/@bit101/intro-to-cairo-graphics-in-rust-35470a6aed86\" rel=\"nofollow noreferrer\">this tutorial</a> to use cairo-rs to draw some stuff to an image. When I run my code, I get a very lengthy error. The important bits seem to be:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>linking with \"cc\" failed: exit code: 1\n</code></pre>\n\n<p>and  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ld: library not found for -lgobject-2.0 \nclang: error: linker command failed with exit code 1\n</code></pre>\n\n<p>I installed Cairo through MacPorts, so that shouldn't be a problem. I copied the Cargo.toml file from the tutorial, except with up-to-date packages:</p>\n\n<pre><code>[dependencies]\npng = \"0.12.0\"\ncairo-rs = {version = \"0.4.1\", features = [\"png\"]}\n</code></pre>\n\n<p>I also tried with the versions listed in the tutorial, but I get the same error.</p>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/18610\" rel=\"nofollow noreferrer\">Rust issue 18610</a> seems to have a similar error, and suggests installing <code>libc-dev</code>. I don't know what that is or why it would fix anything.</p>\n\n<p>I saw somewhere that it could be a naming conflict, so I changed the name of my project so as to not conflict, but it didn't help. </p>\n\n<h2>Details</h2>\n\n<ul>\n<li>I am on stable Rust, I even reinstalled it.</li>\n<li>MacOS High Sierra, version 10.13.3 (17D47)</li>\n</ul>\n\n<h3>Full error</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-m64\" \"-L\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.138pesuvab4dy035.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.15kq92zzbmxot4k9.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.16u6js6g0l3k1ic6.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.18w6p8ltrgxnoslg.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.1kduva7sc7em934m.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.1vut2eft6nlujjxr.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.1y16o1qfye96o7m0.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.1zeawhkbeobww1zn.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.2f1hnlzab9mh7h5g.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.2jqywn86b2gsqohu.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.2qhkzqx5zqexj20y.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.3171x0bwu82dptu7.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.3bupun14v400xrjn.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.3cx7oljifvb206q7.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.3gri9e66l1z4vy9t.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.3rngp6bm2u2q5z0y.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.45nf4z58qqykpcpi.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.49a7n47po4ttqjl7.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.49lx1q7cxvpykyv0.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.4ezmh1vbs95c5ack.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.4pd8ez09p90ytr94.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.4xq48u46a1pwiqn7.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.4yh8x2b62dcih00t.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.5adk9fi3m3eo99v4.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.8xzrsc1ux72v29j.rcgu.o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.9elsx31vb4it187.rcgu.o\" \"-o\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/using_cairo-0c2716712c3e8ee6.crate.allocator.rcgu.o\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps\" \"-L\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/libcairo-02af06cb5f843585.rlib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/libglib-9b2eaf5a04b666f1.rlib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/libgobject_sys-dffb3413958eb3eb.rlib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/libglib_sys-d80b4885044879d2.rlib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/liblazy_static-ecb17a6c9c859f76.rlib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/libbitflags-bcdfdc861d8d5eb6.rlib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/libc_vec-21d683c350f5dff1.rlib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/libcairo_sys-778a9ff4a1493728.rlib\" \"/Users/davidsullivan/Desktop/Programing/Rust/graphics/using_cairo/target/debug/deps/liblibc-83288e07e4750a07.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-844f948b7f44d010.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-1d305abaf51b5849.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-480b35384c455cd2.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-579e24175a3d2d71.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_system-2600026bf2ff8eb5.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-7bb0ccf08d309fa4.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-d90d94404b7883e9.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd_unicode-6be41d1b0b4956a1.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-788f4f091335111f.rlib\" \"/Users/davidsullivan/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-e26406cc89e6bd21.rlib\" \"-l\" \"gobject-2.0\" \"-l\" \"glib-2.0\" \"-l\" \"gobject-2.0\" \"-l\" \"cairo\" \"-l\" \"System\" \"-l\" \"resolv\" \"-l\" \"pthread\" \"-l\" \"c\" \"-l\" \"m\"\n  = note: ld: library not found for -lgobject-2.0\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<h3>Cargo.toml</h3>\n\n<pre><code>[package]\nname = \"using_cairo\"\nversion = \"0.1.0\"\nauthors = [\"davidsullivan &lt;touisbetterthanpi@gmail.com&gt;\"]\n\n[dependencies]\npng = \"0.12.0\"\ncairo-rs = {version = \"0.4.1\", features = [\"png\"]}\n</code></pre>\n\n<h3>main.rs</h3>\n\n<pre><code>extern crate cairo;\n\nuse cairo::{Context, Format, ImageSurface};\nuse std::fs::File;\n\nfn main() {\n    let surface = ImageSurface::create(Format::ARgb32, 600, 600).expect(\"could not create surface\");\n    let context = Context::new(&amp;surface);\n\n    context.set_source_rgb(1.0, 0.0, 0.0);\n    context.paint();\n\n    let mut file = File::create(\"output.png\").expect(\"Could not create file\");\n\n    surface\n        .write_to_png(&amp;mut file)\n        .expect(\"could not write to file\");\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 890, "user_id": 1605981, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/55b282b95a42baa121f383a5f75a7461?s=128&d=identicon&r=PG", "display_name": "Aehmlo", "link": "https://stackoverflow.com/users/1605981/aehmlo"}, "edited": false, "score": 0, "creation_date": 1527301305, "post_id": 50538696, "comment_id": 88089423, "body": "That&#39;s what I was afraid of \u2014 I suspected there wasn&#39;t a way to make a heterogeneous array, but I was hoping there was something. Is there another way to notate &quot;I&#39;m going to give you an ordered set of exactly <i>n</i> values that all implement this trait?&quot; I&#39;m not opposed to using something like a procedural macro generating an <i>n</i>-tuple, either, if that&#39;s the way I have to do this."}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 890, "user_id": 1605981, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/55b282b95a42baa121f383a5f75a7461?s=128&d=identicon&r=PG", "display_name": "Aehmlo", "link": "https://stackoverflow.com/users/1605981/aehmlo"}, "edited": false, "score": 0, "creation_date": 1527301535, "post_id": 50538696, "comment_id": 88089459, "body": "There may be something that can be done, and I&#39;m happy to help, but I honestly have trouble visualizing what exactly you&#39;re trying to do. Would you be kind enough to add some more context such as some types and some examples of the different ways in which the function may be called? It doesn&#39;t have to compile, though that&#39;d help too."}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 890, "user_id": 1605981, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/55b282b95a42baa121f383a5f75a7461?s=128&d=identicon&r=PG", "display_name": "Aehmlo", "link": "https://stackoverflow.com/users/1605981/aehmlo"}, "edited": false, "score": 1, "creation_date": 1527301641, "post_id": 50538696, "comment_id": 88089470, "body": "Otherwise, as a guess, one traditional way this can be done, but again I&#39;m lacking context so this may be off in your case, is to create an enumeration so you have <code>enum Group { Box, Stack, Band }</code>, then since each variant is still the same type, you can store each one in the same array: <code>[Group::Box, Group::Stack, Group::Band]</code>. You can add additional data directly within a variant if necessary by using an enum struct variant, e.g. <code>enum Group { Box { size: u8, name: String }, ... }</code>"}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 890, "user_id": 1605981, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/55b282b95a42baa121f383a5f75a7461?s=128&d=identicon&r=PG", "display_name": "Aehmlo", "link": "https://stackoverflow.com/users/1605981/aehmlo"}, "edited": false, "score": 0, "creation_date": 1527301803, "post_id": 50538696, "comment_id": 88089495, "body": "If you don&#39;t want to store data directly within a variant in the form of a struct variant, you can also create a separate struct that is embedded within the variant, e.g. <code>struct Box { ... }</code>, <code>enum Group { Box(Box), ... }</code>. It&#39;s essentially the same but has different ergonomics, in this case you can easily move the contained <code>Box</code> to pass to something else once you take it out of the enum variant."}, {"owner": {"reputation": 890, "user_id": 1605981, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/55b282b95a42baa121f383a5f75a7461?s=128&d=identicon&r=PG", "display_name": "Aehmlo", "link": "https://stackoverflow.com/users/1605981/aehmlo"}, "edited": false, "score": 0, "creation_date": 1527302269, "post_id": 50538696, "comment_id": 88089555, "body": "I suppose, since I know that there will only ever be three variants, that I could drop the trait altogether and go with an enum instead. However, since variants will be different sizes (unless padding happens automatically?), do I not still have the same issue?"}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 890, "user_id": 1605981, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/55b282b95a42baa121f383a5f75a7461?s=128&d=identicon&r=PG", "display_name": "Aehmlo", "link": "https://stackoverflow.com/users/1605981/aehmlo"}, "edited": false, "score": 2, "creation_date": 1527305278, "post_id": 50538696, "comment_id": 88089965, "body": "Good question, nope. Think of an enum as a tagged C union, so each variant takes up the same size (more or less the max size of any variant, give or take padding/alignment). Depending on your situation, you can probably minimize this by storing references to the structs instead of the data itself. Also, if you still need the trait for whatever reason, you can still implement it for the enum as a whole, just that the array now contains the enum type."}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 3, "last_activity_date": 1527353263, "last_edit_date": 1527353263, "creation_date": 1527300188, "answer_id": 50538696, "question_id": 50538625, "link": "https://stackoverflow.com/questions/50538625/how-do-i-return-an-array-of-objects-using-impl-trait-from-a-function-without-b/50538696#50538696", "title": "How do I return an array of objects using `impl Trait` from a function without boxing?", "body": "<p>You can't because all <code>impl Trait</code> guarantees is that it's some type that implements <code>Trait</code>. Arrays in Rust are homogeneous, each element must be the same type, but something like <code>[impl Group; DIMENSIONS + 1]</code> would mean that each element could be any type as long as it implemented <code>Group</code>.</p>\n\n<p>It's difficult to say without more code but this could probably be accomplished by parameterizing on the type of <code>Group</code>:</p>\n\n<pre><code>pub fn groups&lt;T: Group&gt;(position: [u8; DIMENSIONS]) -&gt; [T; DIMENSIONS + 1]\n</code></pre>\n\n<p>Now there will be one instance of the <code>groups()</code> function monomorphized for each kind of <code>T</code> it's called with which implements <code>Group</code>. This has the consequence that the returned array is fixed to that type only, allowing it to be homogeneous. Since the function has no parameter of type <code>T</code>, the type of <code>T</code> probably can't be inferred unless it can be inferred from the call-site (e.g. <code>let x: [SomeGroup; 3] = groups([...])</code>), so you would need to explicitly specify the type with <code>groups::&lt;SomeGroup&gt;([...])</code>.</p>\n\n<p>I don't know if this is exactly what you want, but it communicates the general idea that you need to set the array to some fixed type. That is, <code>[T; N]</code> is fixed to <code>T</code> whereas <code>[impl Trait; N]</code> would imply that each element can be <em>any</em> type that implements <code>Trait</code>, which itself would imply that it's a heterogeneous array, but arrays in Rust are homogeneous.</p>\n\n<p>I can't tell if you also want to parameterize on the constant <code>DIMENSIONS</code>, which requires <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md\" rel=\"nofollow noreferrer\">RFC 2000: const generics</a> which AFAIK isn't implemented yet, even in nightly. You probably don't need that if you're able to infer it from the parameter, as you seem to be doing.</p>\n\n<pre><code>pub fn groups&lt;T: Group, const DIMENSIONS: usize&gt;(position: [u8; DIMENSIONS])\n  -&gt; [T; DIMENSIONS + 1]\n</code></pre>\n"}], "owner": {"reputation": 890, "user_id": 1605981, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/55b282b95a42baa121f383a5f75a7461?s=128&d=identicon&r=PG", "display_name": "Aehmlo", "link": "https://stackoverflow.com/users/1605981/aehmlo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 301, "favorite_count": 0, "accepted_answer_id": 50538696, "answer_count": 1, "score": 1, "last_activity_date": 1527353263, "creation_date": 1527299158, "last_edit_date": 1527302170, "question_id": 50538625, "link": "https://stackoverflow.com/questions/50538625/how-do-i-return-an-array-of-objects-using-impl-trait-from-a-function-without-b", "title": "How do I return an array of objects using `impl Trait` from a function without boxing?", "body": "<p>I'm implementing a Sudoku crate, and I'd like to allow the possibility of higher-dimension Sudokus. In 2 dimensions, there are 3 groups that need to be checked for correctness (the prime rule contains only 3 subrules) and position (by definition) requires only 2 coordinates to fully specify, but in higher dimensions this obviously increases.</p>\n\n<p>I wrote the following method signature, but it doesn't work, and I'd like to avoid boxing at all costs due to the environments for which I'm developing.</p>\n\n<pre><code>pub fn groups(position: [u8; DIMENSIONS]) -&gt; [impl Group; DIMENSIONS + 1]\n</code></pre>\n\n<p>The actual type of each group will be known at compile time (the actual type will be something like <code>[Box, Stack, Band]</code>), but it appears that the compiler doesn't like this even though it'll know the size of each element.</p>\n\n<p>I'd love to be able to use a tuple with size determined at compile time, but that doesn't seem to be easily supported, unless I'm missing something.</p>\n\n<hr>\n\n<p>The idea is that there are <a href=\"https://en.wikipedia.org/wiki/Glossary_of_Sudoku#Terminology_and_grid_layout\" rel=\"nofollow noreferrer\">three types of <code>Group</code></a>: a <code>Stack</code> (column), a <code>Band</code> (row), and a <code>Box</code>. The definition for <code>Group</code> is given below.</p>\n\n<pre><code>pub trait Group {\n    /// A group is considered valid if it has contains only unique elements.\n    fn is_valid(&amp;self) -&gt; bool { /* Default implementation elided. */ }\n    /// Returns an owned copy of the group's constituent elements.\n    fn elements(&amp;self) -&gt; Vec&lt;Option&lt;Element&gt;&gt;;\n}\n</code></pre>\n\n<p>Let's start with the two-dimensional case. For a given element, we can write the element's index as a double (i.e. 2-tuple) <code>(x, y)</code>. The groups associated with this element are then one <code>Box</code> (as always; this is where <code>DIMENSION + 1</code> comes from), one <code>Stack</code>, and one <code>Band</code>.</p>\n\n<p>In three dimensions, a given element is indexed (by definition) by a triple (i.e. 3-tuple) <code>(x, y, z)</code>. The groups associated with this element are then one <code>Box</code>, one <code>Stack</code>, and <em>two</em> <code>Band</code>s.</p>\n\n<p>This trend continues into higher dimensions, and I want to enable the user to use a different dimensionality \u2014 thus the compile-time determination of sizes.</p>\n\n<p>To check the puzzle for correctness, the caller simply calls <code>Group::is_valid()</code> on each of <code>puzzle.groups()</code>; they can also iterate over each to render the puzzle as appropriate.</p>\n"}, {"tags": ["rust", "closures", "traits"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1527300740, "last_edit_date": 1527300740, "creation_date": 1527275280, "answer_id": 50535471, "question_id": 50535299, "link": "https://stackoverflow.com/questions/50535299/why-is-a-cast-needed-when-a-closure-is-passed-as-a-trait-object-argument/50535471#50535471", "title": "Why is a cast needed when a closure is passed as a trait object argument?", "body": "<p>This is a thing that one tends to forget: each closure is a different struct that implements <code>Fn</code>: <code>Fn</code> is a trait, not a struct, and trait implementations are not transitive.</p>\n\n<p>Here is a little example that shows this point:</p>\n\n<pre><code>trait Base {}\ntrait Derived {}\nstruct Foo {}\n\nimpl Base for Derived {}\n\nimpl Derived for Foo {}\n\nfn myf&lt;T&gt;(_t: Box&lt;T&gt;)\nwhere\n    T: Base + ?Sized,\n{\n}\n\nfn main() {\n    let foo = Box::new(Foo {});\n    //myf(foo) // does not compile\n    myf(foo as Box&lt;Derived&gt;)\n}\n</code></pre>\n\n<p>The thing you really wanted to do is:</p>\n\n<pre><code>trait MyTrait {}\n\nimpl&lt;T&gt; MyTrait for T\nwhere\n    T: Fn() -&gt; &amp;'static str,\n{\n}\n\nimpl&lt;T&gt; MyTrait for T\nwhere\n    T: Fn(u8) -&gt; u8,\n{\n}\n\nfn myf&lt;F&gt;(_fun: Box&lt;F&gt;)\nwhere\n    F: MyTrait,\n{\n}\n\nfn main() {\n    myf(Box::new(|i: u8| i + 2))\n}\n</code></pre>\n\n<p>But this cannot compile because there are two conflicting implementations.</p>\n"}], "owner": {"reputation": 449, "user_id": 878298, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d5910505de191043ea9aa614073ae05?s=128&d=identicon&r=PG", "display_name": "Sergey Mitskevich", "link": "https://stackoverflow.com/users/878298/sergey-mitskevich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 344, "favorite_count": 0, "accepted_answer_id": 50535471, "answer_count": 1, "score": 1, "last_activity_date": 1527300740, "creation_date": 1527274444, "last_edit_date": 1527300645, "question_id": 50535299, "link": "https://stackoverflow.com/questions/50535299/why-is-a-cast-needed-when-a-closure-is-passed-as-a-trait-object-argument", "title": "Why is a cast needed when a closure is passed as a trait object argument?", "body": "<p>I'm trying to create a trait that should abstract over functions/closures with a different number of arguments. Something like this:</p>\n\n<pre><code>trait MyTrait {}\n\nimpl MyTrait for Box&lt;Fn() -&gt; &amp;'static str&gt; {}\n\nimpl MyTrait for Box&lt;Fn(u8) -&gt; u8&gt; {}\n</code></pre>\n\n<p>Initially I planned to use it like this:</p>\n\n<pre><code>fn myf&lt;F: MyTrait&gt;(_fun: F) {}\n\nfn main() {\n    myf(Box::new(|i: u8| i + 2))\n}\n</code></pre>\n\n<p>But this code fails with error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::boxed::Box&lt;[closure@src/main.rs:11:18: 11:31]&gt;: MyTrait` is not satisfied\n</code></pre>\n\n<p>When I cast the box like this, everything compiles correctly:</p>\n\n<pre><code>myf(Box::new(|i: u8| i + 2) as Box&lt;Fn(_) -&gt; _&gt;)\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=9c774d4ca5057e424f0a9f823c61b149&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Why can't the Rust compiler infer this trait without a cast? Is my approach (using cast) correct, or is there a simpler way? I prefer to enable <code>trivial_casts</code> warning for my projects and this syntax triggers it.</p>\n"}, {"tags": ["delegates", "rust", "pattern-matching", "borrow-checker", "ownership"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527274928, "post_id": 50535022, "comment_id": 88082807, "body": "I think that&#39;s a duplicate. If you want to consume a field of a <code>struct</code>, you must consume the <code>struct</code> as well (otherwise it would have a field with &quot;corrupted&quot; memory)"}, {"owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527275292, "post_id": 50535022, "comment_id": 88082941, "body": "There has to be some kind of limit or workaround, right? Otherwise your whole object structure gets consumed every time you consume any field."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527275808, "post_id": 50535022, "comment_id": 88083133, "body": "Think about this: how could you move a field without moving the whole struct?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527275909, "post_id": 50535022, "comment_id": 88083178, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/31307680/how-to-move-one-field-out-of-a-struct-that-implements-drop-trait\">How to move one field out of a struct that implements Drop trait?</a>"}, {"owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527276492, "post_id": 50535022, "comment_id": 88083424, "body": "Thanks for the hints with <code>replace</code>, I&#39;ve tried using <code>replace(&amp;mut self.reader_or_delegate, ReaderOrDelegate::Delegate(AnotherParser { reader }));</code> instead. The problem however persists: I cannot create <code>AnotherParser</code> because <code>reader</code> is already borrowed by the <code>match</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527276869, "post_id": 50535022, "comment_id": 88083569, "body": "Oh this point is just an issue because you do not have the <i>non lexical lifetimes</i>. If you use a nightly compiler, just add <code>#![feature(nll)]</code> and that&#39;s ok"}, {"owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527277918, "post_id": 50535022, "comment_id": 88084019, "body": "Thanks, that helped a lot, only the one error now. The problem remains that I need to move the <code>reader</code> in some cases, but mutably borrow it in others. Updated the code."}], "answers": [{"comments": [{"owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "edited": false, "score": 0, "creation_date": 1527408287, "post_id": 50547098, "comment_id": 88111302, "body": "Thanks. I was afraid that&#39;d be the only way. It&#39;s probably good enough in practise to be honest, but its nice theoretically to have only one reader..."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "edited": false, "score": 0, "creation_date": 1527411106, "post_id": 50547098, "comment_id": 88111901, "body": "You have only one reader, shared with all parsers through a Rc pointer"}, {"owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "edited": false, "score": 0, "creation_date": 1527411214, "post_id": 50547098, "comment_id": 88111923, "body": "Okay I should have said &quot;to have only one lexer that can read&quot;"}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 1, "last_activity_date": 1527410803, "last_edit_date": 1527410803, "creation_date": 1527369759, "answer_id": 50547098, "question_id": 50535022, "link": "https://stackoverflow.com/questions/50535022/borrow-checker-problems-for-parser-that-can-delegate/50547098#50547098", "title": "Borrow checker problems for parser that can delegate", "body": "<p>Consider the line:</p>\n\n<pre><code>replace(&amp;mut self.reader_or_delegate, ReaderOrDelegate::Delegate(AnotherParser { reader }));\n</code></pre>\n\n<p>You need a <code>reader</code> value, not a reference, to build <code>anotherParser</code>:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:42:106\n   |\n42 |                         replace(&amp;mut self.reader_or_delegate, ReaderOrDelegate::Delegate(AnotherParser { reader }));\n   |                                                                                                          ^^^^^^ expected struct `Reader`, found &amp;mut Reader\n   |\n   = note: expected type `Reader`\n              found type `&amp;mut Reader`\n</code></pre>\n\n<p>But it is not possible to obtain such value. If we try:</p>\n\n<pre><code>ReaderOrDelegate::Read(reader) =&gt; {\n    match reader.next() {\n        0 =&gt; {\n            replace(&amp;mut self.reader_or_delegate, ReaderOrDelegate::Delegate(AnotherParser { reader }));\n            self.parse()\n        },\n        x =&gt; 3 * x\n    }\n},\n</code></pre>\n\n<p>We get now the true problem with your design:</p>\n\n<pre><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:39:36\n   |\n39 |             ReaderOrDelegate::Read(reader) =&gt; {\n   |                                    ^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>The <code>parse</code> method borrows <code>self</code> and this imply that at this point we cannot move out owned values from\na borrowed <code>self</code>.</p>\n\n<p>Note also that the error <a href=\"https://doc.rust-lang.org/nightly/error-index.html#E0507\" rel=\"nofollow noreferrer\">E0507</a> also holds for the line:</p>\n\n<pre><code>replace(&amp;mut self.reader_or_delegate, ReaderOrDelegate::Read(delegate.consume()));\n</code></pre>\n\n<p>because <code>consume</code> try to move out a value from a borrowed <code>delegate</code>.</p>\n\n<p>In your code the compiler does not show this problem, but it will emerge if you comment out the line that apparently is the only problem remaining in your example.</p>\n\n<p>The only solution that I'm able to arrange without incurring into borrow checker errors and without\ntransforming too much your design is based on using a reference counter <code>Reader</code>, shared between the top level parser and the delegate parser.</p>\n\n<p>With <code>Rc&lt;Reader&gt;</code> You have only one reader shared through a smart pointer with your parsers.</p>\n\n<p><code>ReadOrDelegate</code> enum gives just indication of the active parser, no more owned reader to move around.</p>\n\n<pre><code>#![feature(nll)]\nuse std::rc::Rc;\n\nstruct Reader {\n    i: u8,\n}\n\nimpl Reader {\n    fn next(&amp;mut self) -&gt; u8 {\n        /* some logic here */\n        self.i += 1;\n        self.i\n    }\n}\n\ntrait Parser {\n    fn parse(&amp;mut self) -&gt; u8;\n}\n\nenum ReaderOrDelegate {\n    Read,\n    Delegate,\n}\n\nstruct OneParser {\n    reader_or_delegate: ReaderOrDelegate,\n    reader: Rc&lt;Reader&gt;,\n    delegate: AnotherParser\n}\n\nimpl Parser for OneParser {\n    fn parse(&amp;mut self) -&gt; u8 {\n        match self.reader_or_delegate {\n            ReaderOrDelegate::Delegate =&gt; {\n                match self.delegate.parse() {\n                    0 =&gt; {\n                        self.reader_or_delegate = ReaderOrDelegate::Read;\n                        self.parse()\n                    },\n                    x =&gt; 2 * x\n                }\n            },\n            ReaderOrDelegate::Read =&gt; {\n                match Rc::get_mut(&amp;mut self.reader).unwrap().next() {\n                    0 =&gt; {\n                        self.reader_or_delegate = ReaderOrDelegate::Delegate;\n                        self.parse()\n                    },\n                    x =&gt; 3 * x\n                }\n            },\n        }\n    }\n}\n\nstruct AnotherParser {\n    reader: Rc&lt;Reader&gt;\n}\n\nimpl Parser for AnotherParser {\n    fn parse(&amp;mut self) -&gt; u8 {\n        Rc::get_mut(&amp;mut self.reader).unwrap().next() * 2\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 50547098, "answer_count": 1, "score": 0, "last_activity_date": 1527410803, "creation_date": 1527273139, "last_edit_date": 1527277690, "question_id": 50535022, "link": "https://stackoverflow.com/questions/50535022/borrow-checker-problems-for-parser-that-can-delegate", "title": "Borrow checker problems for parser that can delegate", "body": "<p>I have several parsers. There is a top-level one that can delegate to another one.</p>\n\n<p><code>Parser</code>s get their input from a <code>Reader</code> (mutable). I want only one <code>Parser</code> to be able to parse at a time, by only one parser should have the <code>Reader</code>.</p>\n\n<p>I did this by making an enum for the top level parser that is either the reader, or the delegated parser (which has a reader). That way it can only read when not delegated, which is what I want.</p>\n\n<p>From the top level parser, I need to mutably borrow this enum to determine what to do and to get the reader or delegate parser. The problem is that if I want to start or stop delegating, I need to move the <code>Reader</code> around. But it's still mutably borrowed at this point.</p>\n\n<p>I have created a minimal example, and I've included the suggestions from the comments regarding <code>replace</code> and non-lexical lifetimes:</p>\n\n<pre><code>#![feature(nll)]\nuse std::mem::replace;\n\nstruct Reader {\n    i: u8,\n}\nimpl Reader {\n    fn next(&amp;mut self) -&gt; u8 {\n        /* some logic here */\n        self.i += 1;\n        self.i\n    }\n}\n\ntrait Parser {\n    fn parse(&amp;mut self) -&gt; u8;\n}\n\nenum ReaderOrDelegate {\n    Read(Reader),\n    Delegate(AnotherParser),  /* Trait object in reality, but keeping it simple here. */\n}\n\nstruct OneParser {\n    reader_or_delegate: ReaderOrDelegate,\n}\nimpl Parser for OneParser {\n    fn parse(&amp;mut self) -&gt; u8 {\n        match self.reader_or_delegate {\n            ReaderOrDelegate::Delegate(ref mut delegate) =&gt; {\n                match delegate.parse() {\n                    0 =&gt; {\n                        replace(&amp;mut self.reader_or_delegate, ReaderOrDelegate::Read(delegate.consume()));\n                        self.parse()\n                    },\n                    x =&gt; 2 * x\n                }\n            },\n            ReaderOrDelegate::Read(ref mut reader) =&gt; {\n                match reader.next() {\n                    0 =&gt; {\n                        replace(&amp;mut self.reader_or_delegate, ReaderOrDelegate::Delegate(AnotherParser { reader }));\n                        self.parse()\n                    },\n                    x =&gt; 3 * x\n                }\n            },\n        }\n    }\n}\n\nstruct AnotherParser {\n    reader: Reader,\n}\nimpl AnotherParser {\n    fn consume(self) -&gt; Reader {\n        self.reader\n    }\n}\nimpl Parser for AnotherParser {\n    fn parse(&amp;mut self) -&gt; u8 {\n        self.reader.next() * 2\n    }\n}\n</code></pre>\n\n<p>With the comment suggestions, one error remains:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:42:106\n   |\n42 |                         replace(&amp;mut self.reader_or_delegate, ReaderOrDelegate::Delegate(AnotherParser { reader }));\n   |                                                                                                          ^^^^^^ expected struct `Reader`, found &amp;mut Reader\n   |\n   = note: expected type `Reader`\n              found type `&amp;mut Reader`\n</code></pre>\n\n<p>I believe I can probably solve this by taking <code>reader</code> out of <code>ReaderOrDelegate</code> and putting it in each parser as an <code>Rc&lt;RefCell&lt;Parser&gt;&gt;&gt;</code>. But I think having it in the enum is more logical: there should be only one parser at a time able to use the reader. Is this possible?</p>\n\n<p>I get that the errors make sense in this case, but I feel that on a high level, it should be possible to do what I want. There only ever needs to be one owner for <code>Reader</code>.</p>\n\n<p><strong>EDIT</strong>: To me it seems non-trivial how the question with <code>replace</code> can be applied to this case with 'nesting' (<code>reader</code> already borrowed by <code>match</code> and then want to swap a field). So while possibly related, I don't this the other question is enough to solve this one. Not for me anyway.</p>\n\n<p><strong>EDIT 2</strong>: Included the comment suggestions in the code sample and error.</p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1527249549, "post_id": 50528645, "comment_id": 88068944, "body": "What should <code>[].iter().next()</code> do?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1527250260, "post_id": 50528645, "comment_id": 88069389, "body": "&quot;and won&#39;t it have potential performance/memory-implications?&quot; no more that any &lt; size or != NULL or similar."}, {"owner": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527250472, "post_id": 50528645, "comment_id": 88069503, "body": "@trentcl I guess it&#39;s a priority in Rust to avoid panic on an exhausted iterators. Other languages use has_next and then panics on next. It just feels like a big overhead on a quite low-level construct."}, {"owner": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527250682, "post_id": 50528645, "comment_id": 88069637, "body": "@Stargateur If you create an iterator over bytes (u8) you will have created as many Somes has you have bytes."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1527250753, "post_id": 50528645, "comment_id": 88069684, "body": "@thoredge no, it&#39;s an additional 8 bytes at maximum (and often even 0) for <b>one</b> entry at a time; moving to the next <code>Item</code> drops the previous one."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527256571, "post_id": 50528645, "comment_id": 88073525, "body": "<a href=\"https://stackoverflow.com/q/16504643/155423\">What is the overhead of Rust&#39;s Option type?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "edited": false, "score": 0, "creation_date": 1527250824, "post_id": 50528952, "comment_id": 88069733, "body": "My point is it feels like a very expensive way to do it. If you create an iterator over bytes (u8) you will have created as many Somes has you have bytes."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "edited": false, "score": 4, "creation_date": 1527250857, "post_id": 50528952, "comment_id": 88069754, "body": "@thoredge: And if you use <code>has_next</code>, you will have created as many <code>bool</code>s as you have bytes."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "edited": false, "score": 1, "creation_date": 1527250971, "post_id": 50528952, "comment_id": 88069834, "body": "@thoredge: Wait a second, are you under the impression that <code>Option</code> is heap allocated?"}, {"owner": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "edited": false, "score": 0, "creation_date": 1527251634, "post_id": 50528952, "comment_id": 88070269, "body": "More like a conditioned intuition ;-). Yes that is probably what was nagging me. The Some with the i32 (for example) will reside on the stack until picked up by the caller; is that right?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "edited": false, "score": 1, "creation_date": 1527252406, "post_id": 50528952, "comment_id": 88070781, "body": "@thoredge An <code>Option&lt;i32&gt;</code> is essentially (as far as layout is concerned) a <code>(bool, i32)</code> tuple. The <code>bool</code> and <code>i32</code> will in probably be returned in registers, but things larger than <code>i32</code> might be reserved on the caller&#39;s stack and written directly there; <a href=\"https://stackoverflow.com/questions/27835375/can-i-efficiently-return-object-by-value-in-rust\">this question</a> has more info."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "edited": false, "score": 1, "creation_date": 1527256635, "post_id": 50528952, "comment_id": 88073585, "body": "@thoredge: Also, if the <code>T</code> in <code>Option&lt;T&gt;</code> is a type that won&#39;t ever have an all-zeroes bit pattern, <a href=\"https://stackoverflow.com/questions/46557608/what-is-the-null-pointer-optimization-in-rust\">the compiler can optimize the tag out entirely</a>. For example, <code>Option&lt;&amp;Foo&gt;</code> is the same size as <code>&amp;Foo</code>."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 7, "last_activity_date": 1527253171, "last_edit_date": 1527253171, "creation_date": 1527250300, "answer_id": 50528952, "question_id": 50528645, "link": "https://stackoverflow.com/questions/50528645/why-does-iteratornext-return-an-option-instead-of-just-an-item/50528952#50528952", "title": "Why does Iterator::next return an Option instead of just an item?", "body": "<p>Because it needs <em>some</em> way to communicate to the caller that there's nothing left to output.</p>\n\n<pre><code>fn main() {\n    let mut it = vec![1, 2, 3].into_iter();\n    assert_eq!(it.next(), Some(1));\n    assert_eq!(it.next(), Some(2));\n    assert_eq!(it.next(), Some(3));\n    assert_eq!(it.next(), None); // End of iterator.\n}\n</code></pre>\n\n<p>As for a hypothetical <code>has_next</code>, that can complicate some iterator designs because it requires the iterator to <em>know</em> whether there is another element.  This might require the iterator to compute the next element, then store it somewhere.  It's also possible to forget to call <code>has_next</code>, or call it but ignore the result.</p>\n\n<p>With <code>next</code> returning an <code>Option</code>, none of this is an issue; an iterator can compute the next item and return it whilst making it impossible for a caller to forget to ensure the returned value actually has something in it.</p>\n\n<p>One thing this does <em>not</em> let you do is \"peek\" at the iterator to see if there's something more and then change logic based on that answer, <em>without</em> actually consuming the next item.  However, that's what the <code>peekable</code> combinator is for, which gives you what amounts to a traditional <code>has_next</code>: <code>peek().is_some()</code>.</p>\n\n<p>On your concerns about performance: I've never seen anything to suggest there is any penalty.  Anything using an iterator correctly <em>has</em> to check to see if it's reached the end.  As for space, a Rust iterator doesn't need to cache the next item, so they're likely to be the same size or smaller than an iterator for a language that uses <code>has_next</code>.</p>\n\n<p>Finally, as noted in comments, <code>Option</code> is not heap allocated.  A <code>None</code> is equivalent to a <code>false</code> followed by some uninitialised space (since there's nothing in it), and a <code>Some(v)</code> is equivalent to a <code>true</code> followed by <code>v</code>.</p>\n"}], "owner": {"reputation": 11088, "user_id": 151004, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ea03698a01a0aaf493ef9b698b7a7757?s=128&d=identicon&r=PG", "display_name": "thoredge", "link": "https://stackoverflow.com/users/151004/thoredge"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 307, "favorite_count": 0, "accepted_answer_id": 50528952, "answer_count": 1, "score": 1, "last_activity_date": 1527256480, "creation_date": 1527249295, "last_edit_date": 1527256480, "question_id": 50528645, "link": "https://stackoverflow.com/questions/50528645/why-does-iteratornext-return-an-option-instead-of-just-an-item", "title": "Why does Iterator::next return an Option instead of just an item?", "body": "<p>It seems to me that whether an option is the right type to return should be up to the implementor.</p>\n\n<p>I notice that it goes away when I try to filter or using other collection methods on the items. Is this simply a replacement for <code>has_next</code>? Won't it have potential performance/memory implications?</p>\n"}, {"tags": ["rust", "rust-actix"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1527246784, "post_id": 50526516, "comment_id": 88067247, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527246707, "post_id": 50526517, "comment_id": 88067198, "body": "don&#39;t make any sense."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1527252567, "post_id": 50526517, "comment_id": 88070905, "body": "This is part of a more generic aspect of binding a value to <code>_</code>: unlike in other languages, <code>_</code> is a special token, not a variable name. It is used explicitly not to bind the value to anything, so the given <code>Addr</code> is immediately dropped. Whether this would influence how actix works, that would depend on the crate&#39;s implementation details."}], "tags": [], "owner": {"reputation": 4209, "user_id": 1478093, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/b7d1619c18114c85f71c6ad7d630b676?s=128&d=identicon&r=PG", "display_name": "TBieniek", "link": "https://stackoverflow.com/users/1478093/tbieniek"}, "is_accepted": true, "score": 0, "last_activity_date": 1527242344, "creation_date": 1527242344, "answer_id": 50526517, "question_id": 50526516, "link": "https://stackoverflow.com/questions/50526516/why-does-my-actix-supervisor-not-retry-stopped-actors/50526517#50526517", "title": "Why does my actix Supervisor not retry stopped actors?", "body": "<p>Nikolay Kim, the author of actix, helped me analyze the issue. It turns out that assigning the <code>Supervisor::start()</code> result to a variable called <code>_</code> will automatically throw away the result and so the supervisor will not actually start correctly.</p>\n\n<p>The solution to this issue is renaming the <code>_</code> variable to <code>_addr</code>:</p>\n\n<pre><code>let _addr: Addr&lt;Unsync, _&gt; = Supervisor::start(|_| MyActor::default());\n</code></pre>\n\n<p>After the rename the <code>Supervisor</code> correctly restarts the <code>MyActor</code> actor after it has stopped. \ud83c\udf89</p>\n"}], "owner": {"reputation": 4209, "user_id": 1478093, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/b7d1619c18114c85f71c6ad7d630b676?s=128&d=identicon&r=PG", "display_name": "TBieniek", "link": "https://stackoverflow.com/users/1478093/tbieniek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 375, "favorite_count": 0, "accepted_answer_id": 50526517, "answer_count": 1, "score": -1, "last_activity_date": 1527242344, "creation_date": 1527242344, "question_id": 50526516, "link": "https://stackoverflow.com/questions/50526516/why-does-my-actix-supervisor-not-retry-stopped-actors", "title": "Why does my actix Supervisor not retry stopped actors?", "body": "<p>I have implemented an <a href=\"https://actix.rs/\" rel=\"nofollow noreferrer\">actix</a> actor including the <code>Supervised</code> trait. I then tried to start the actor in a supervised way using</p>\n\n<pre><code>let _: Addr&lt;Unsync, _&gt; = Supervisor::start(|_| MyActor::default());\n</code></pre>\n\n<p>Unfortunately when that actor stops it is not automatically restarted for some reason.</p>\n\n<hr>\n\n<h3>Dependency Versions</h3>\n\n<pre><code>actix = \"0.5\"\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1527232396, "post_id": 50523267, "comment_id": 88058825, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/49785136/unwrap-or-continue-in-a-loop\">Unwrap or continue in a loop</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527232413, "post_id": 50523267, "comment_id": 88058836, "body": "One way could be <code>now.elapsed().and_then(|x| {         println!(&quot;Thread 1 :: Exiting...after {:?}s &quot;, x);         Ok(x)     });</code>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 7, "creation_date": 1527234988, "post_id": 50523267, "comment_id": 88060317, "body": "Are you searching for something like <a href=\"https://blog.rust-lang.org/2016/11/10/Rust-1.13.html#the--operator\" rel=\"nofollow noreferrer\">blog.rust-lang.org/2016/11/10/Rust-1.13.html#the--operator</a> ?"}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1527236810, "post_id": 50523267, "comment_id": 88061384, "body": "Oh that&#39;s a nice construct @hellow .But perhaps it isn&#39;t working in my case complaining - <code>cannot use the </code>?` operator in a function that returns &#39;()&#39;`."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1527237391, "post_id": 50523267, "comment_id": 88061680, "body": "you have to return a result ;) see the example in the blog update. also see <a href=\"https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about\" title=\"what is this question mark operator about\">stackoverflow.com/questions/42917566/&hellip;</a> and <a href=\"https://stackoverflow.com/questions/40545332/is-the-question-mark-operator-equivalent-to-the-try-macro\" title=\"is the question mark operator equivalent to the try macro\">stackoverflow.com/questions/40545332/&hellip;</a>"}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1527238059, "post_id": 50523267, "comment_id": 88062050, "body": "ok I see. Ultimately the error has to be propagated anyhow which demands the return type to be <code>Result</code> anyhow."}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 416, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1527256297, "creation_date": 1527231612, "last_edit_date": 1527256297, "question_id": 50523267, "link": "https://stackoverflow.com/questions/50523267/is-there-a-shorthand-form-of-the-match-in-rust", "title": "Is there a shorthand form of the match in Rust?", "body": "<p>Many function calls in Rust return the type <code>std::result::Result</code> which is an enum. There are advantages of having such a return type, but writing a matcher looks to be tedious for a small task. </p>\n\n<p>For example, I was trying to find the time a certain portion of my code takes. I tried <code>SystemTime::now()</code> coupled with <code>duration()</code>:</p>\n\n<pre><code>let now = SystemTime::now();\n\nlet result = cvar\n    .wait_timeout(started, Duration::from_millis(20000))\n    .unwrap();\nstarted = result.0;\nif *started == false {\n    *started = true;\n}\nprintln!(\"Thread 1 :: Exiting...after {:?}s \", now.elapsed().unwrap());\n</code></pre>\n\n<p>This gives me an output in the shape of </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Thread 1 :: Exiting...after Duration { secs: 6, nanos: 999860814 }s\n</code></pre>\n\n<p>I am aware that I can get the desired result using a match in a similar manner to this as in the <a href=\"https://doc.rust-lang.org/std/time/struct.SystemTime.html\" rel=\"nofollow noreferrer\">docs</a>:</p>\n\n<pre><code>match now.elapsed() {\n    Ok(elapsed) =&gt; {\n        println!(\"{}\", elapsed.as_secs());\n    }\n    Err(e) =&gt; {\n        println!(\"Error: {:?}\", e);\n    }\n}\n</code></pre>\n\n<p>This would be a few extra lines which do not really contribute to the application logic.</p>\n\n<p>Is there no shorthand for carrying out such a match operation?</p>\n"}, {"tags": ["csv", "rust"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 2, "creation_date": 1527208356, "post_id": 50519900, "comment_id": 88052331, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/30684624/what-is-the-best-variant-for-appending-a-new-line-in-a-text-file\">What is the best variant for appending a new line in a text file?</a>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 4, "creation_date": 1527209356, "post_id": 50519900, "comment_id": 88052550, "body": "How does a <code>csv</code> file differs from any other file?"}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 7, "last_activity_date": 1527214435, "last_edit_date": 1527214435, "creation_date": 1527209194, "answer_id": 50520009, "question_id": 50519900, "link": "https://stackoverflow.com/questions/50519900/how-to-append-to-an-existing-csv-file/50520009#50520009", "title": "How to append to an existing CSV file?", "body": "<p>The <a href=\"https://crates.io/crates/csv\" rel=\"nofollow noreferrer\">csv</a> crate provides <a href=\"https://docs.rs/csv/1.0.0/csv/struct.Writer.html#method.from_writer\" rel=\"nofollow noreferrer\"><code>Writer::from_writer</code></a> so you can use anything, which implements <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html\" rel=\"nofollow noreferrer\"><code>Write</code></a>. When using <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\"><code>File</code></a>, <a href=\"https://stackoverflow.com/a/30684735/3131852\">this answer</a> from <a href=\"https://stackoverflow.com/questions/30684624\"><em>What is the best variant for appending a new line in a text file?</em></a> shows a solution:</p>\n\n<blockquote>\n  <p>Using <a href=\"http://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.append\" rel=\"nofollow noreferrer\"><code>OpenOptions::append</code></a> is the clearest way to append to a file</p>\n</blockquote>\n\n<pre><code>let mut file = OpenOptions::new()\n    .write(true)\n    .append(true)\n    .open(\"test.csv\")\n    .unwrap();\nlet mut wtr = csv::Writer::from_writer(file);\n</code></pre>\n\n<blockquote>\n  <p>Will the append solution work if the file does not yet exist?</p>\n</blockquote>\n\n<p>Just add <code>create(true)</code> to the <code>OpenOptions</code>:</p>\n\n<pre><code>let mut file = OpenOptions::new()\n    .write(true)\n    .create(true)\n    .append(true)\n    .open(\"test.csv\")\n    .unwrap();\nlet mut wtr = csv::Writer::from_writer(file);\n</code></pre>\n"}], "owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1005, "favorite_count": 0, "accepted_answer_id": 50520009, "answer_count": 1, "score": 1, "last_activity_date": 1527214435, "creation_date": 1527208011, "last_edit_date": 1527213109, "question_id": 50519900, "link": "https://stackoverflow.com/questions/50519900/how-to-append-to-an-existing-csv-file", "title": "How to append to an existing CSV file?", "body": "<p>As an example, when the below code is run, each time the previous <code>test.csv</code> file is overwritten with a new one. How to append to <code>test.csv</code> instead of overwriting it?</p>\n\n<pre><code>extern crate csv;\n\nuse std::error::Error;\nuse std::process;\n\nfn run() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let file_path = std::path::Path::new(\"test.csv\");\n    let mut wtr = csv::Writer::from_path(file_path).unwrap();\n\n    wtr.write_record(&amp;[\"City\", \"State\", \"Population\", \"Latitude\", \"Longitude\"])?;\n    wtr.write_record(&amp;[\"Davidsons Landing\", \"AK\", \"\", \"65.2419444\", \"-165.2716667\"])?;\n    wtr.write_record(&amp;[\"Kenai\", \"AK\", \"7610\", \"60.5544444\", \"-151.2583333\"])?;\n    wtr.write_record(&amp;[\"Oakman\", \"AL\", \"\", \"33.7133333\", \"-87.3886111\"])?;\n\n    wtr.flush()?;\n    Ok(())\n}\n\nfn main() {\n    if let Err(err) = run() {\n        println!(\"{}\", err);\n        process::exit(1);\n    }\n}\n</code></pre>\n\n<p>Will the append solution work if the file does not yet exist?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1527205117, "post_id": 50519147, "comment_id": 88051678, "body": "Which <code>rustc</code> version do you use? Does <code>temp_event</code> is/contain a reference? I&#39;m asking for the <code>rustc</code> version, since <a href=\"https://github.com/rust-lang/rust/pull/49394\" rel=\"nofollow noreferrer\">match_default_bindings</a> went stable recently and this might end in a reference here, while you didn&#39;t expected it to be a reference."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1527232388, "post_id": 50519147, "comment_id": 88058820, "body": "@Tim rustc version is 2018-05-20 nightly or the latest stable. And yes, temp_event does contain a reference to the buffer. I thought that it should be visible from the method signature but apparently it was not :( I&#39;m not sure how that particular feature is related here, because the match does not capture anything, it just verifies the structure of the data."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527240900, "post_id": 50519147, "comment_id": 88063733, "body": "You have a design flow here, as <code>XmlEvent</code> take the ownership of <code>buffer</code> when you choose to return <code>temp_event</code> you bound it&#39;s lifetime to the lifetime of the function. I think there is no way to solve this issue. You could do the check without construct <code>XmlEvent</code>."}], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1527596059, "post_id": 50570026, "comment_id": 88177379, "body": "Thanks for checking this with Niko! I guess for now I&#39;ll have to stick with <code>unsafe</code> to overcome this thing. I think I know how to overcome it without resorting to <code>unsafe</code>, but it would require changing internal method types in way I don&#39;t like :("}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1546797225, "last_edit_date": 1546797225, "creation_date": 1527523300, "answer_id": 50570026, "question_id": 50519147, "link": "https://stackoverflow.com/questions/50519147/double-mutable-borrow-error-in-a-loop-happens-even-with-nll-on/50570026#50570026", "title": "Double mutable borrow error in a loop happens even with NLL on", "body": "<p>This is <a href=\"https://github.com/rust-lang/rust/issues/51132\" rel=\"nofollow noreferrer\">a limitation of the current implementation</a> of <a href=\"https://stackoverflow.com/q/50251487/155423.\"><em>non-lexical lifetimes</em></a> This can be shown with this reduced case:</p>\n\n<pre><code>fn next&lt;'buf&gt;(buffer: &amp;'buf mut String) -&gt; &amp;'buf str {\n    loop {\n        let event = parse(buffer);\n\n        if true {\n            return event;\n        }\n    }\n}\n\nfn parse&lt;'buf&gt;(_buffer: &amp;'buf mut String) -&gt; &amp;'buf str {\n    unimplemented!()\n}\n\nfn main() {}\n</code></pre>\n\n<hr>\n\n<p>This limitation prevents <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md#problem-case-3-conditional-control-flow-across-functions\" rel=\"nofollow noreferrer\">NLL case #3</a>: <strong>conditional control flow across functions</strong></p>\n\n<p>In compiler developer terms, the current implementation of non-lexical lifetimes is \"location insensitive\". Location sensitivity was originally available but it was disabled in the name of performance.</p>\n\n<p><a href=\"https://rust-lang.zulipchat.com/#narrow/stream/122657-wg-nll/subject/general.20discussion/near/127211206\" rel=\"nofollow noreferrer\">I asked Niko Matsakis about this code</a>:</p>\n\n<blockquote>\n  <p>In the context of your example: the value <code>event</code> only has to have the lifetime <code>'buf</code> conditionally \u2014 at the return point which may or may not execute. But when we are \"location insensitive\", we just track the lifetime that <code>event</code> must have anywhere, without considering where that lifetime must hold. In this case, that means we make it hold everywhere, which is why you get a compilation failure.</p>\n  \n  <p>One subtle thing is that the current analysis is location sensitive in one respect \u2014 where the borrow takes place. The length of the borrow is not.</p>\n</blockquote>\n\n<p>The good news is that adding this concept of location sensitivity back is seen as an enhancement to the implementation of non-lexical lifetimes. The bad news:</p>\n\n<blockquote>\n  <p>That may or may not be before the [Rust 2018] edition.</p>\n</blockquote>\n\n<p>(Note: it did <strong>not</strong> make it into the initial release of Rust 2018)</p>\n\n<p>This hinges on a (even newer!) underlying implementation of non-lexical lifetimes that improves the performance. You can opt-in to this half-implemented version using <code>-Z polonius</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc +nightly -Zpolonius --edition=2018 example.rs\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>RUSTFLAGS=\"-Zpolonius\" cargo +nightly build\n</code></pre>\n\n<hr>\n\n<p>Because this is <strong>across functions</strong>, you can sometimes work around this by inlining the function.</p>\n"}, {"tags": [], "owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "is_accepted": false, "score": 4, "last_activity_date": 1572680587, "creation_date": 1572680587, "answer_id": 58669185, "question_id": 50519147, "link": "https://stackoverflow.com/questions/50519147/double-mutable-borrow-error-in-a-loop-happens-even-with-nll-on/58669185#58669185", "title": "Double mutable borrow error in a loop happens even with NLL on", "body": "<p>I posted a question (<a href=\"https://stackoverflow.com/questions/58663614/a-borrow-checker-problem-with-a-loop-and-non-lexical-lifetimes?noredirect=1#comment103631187_58663614\">A borrow checker problem with a loop and non-lexical lifetimes</a>) that was answered by the answer of this question.</p>\n\n<p>I'll document here a workaround that also answers the question. Let's say you have code like this, that only compiles with Polonius:</p>\n\n<pre><code>struct Inner;\n\nenum State&lt;'a&gt; {\n    One,\n    Two(&amp;'a ()),\n}\n\nfn get&lt;'s&gt;(_inner: &amp;'s mut Inner) -&gt; State&lt;'s&gt; {\n    unimplemented!()\n}\n\nstruct Outer {\n    inner: Inner,\n}\n\nimpl Outer {\n    pub fn read&lt;'s&gt;(&amp;'s mut self) -&gt; &amp;'s () {\n        loop {\n            match get(&amp;mut self.inner) {\n                State::One =&gt; (), // In this case nothing happens, the borrow should end and the loop should continue\n                State::Two(a) =&gt; return a, // self.inner ought to be borrowed for 's, that's just to be expected\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>As it was said in the another answer:</p>\n\n<blockquote>\n  <p>One subtle thing is that the current analysis is location sensitive in one respect \u2014 where the borrow takes place. The length of the borrow is not.</p>\n</blockquote>\n\n<p>Indeed, borrowing the needed reference again <em>inside</em> the conditional branch makes it compile! Of course, this makes the assumption that <code>get</code> is referentially transparent, so your mileage may vary, but borrowing again seems like an easy enough workaround.</p>\n\n<pre><code>struct Inner;\n\nenum State&lt;'a&gt; {\n    One,\n    Two(&amp;'a ()),\n}\n\nfn get&lt;'s&gt;(_inner: &amp;'s mut Inner) -&gt; State&lt;'s&gt; {\n    unimplemented!()\n}\n\nstruct Outer {\n    inner: Inner,\n}\n\nimpl Outer {\n    pub fn read&lt;'s&gt;(&amp;'s mut self) -&gt; &amp;'s () {\n        loop {\n            match get(&amp;mut self.inner) {\n                State::One =&gt; (), // In this case nothing happens, the borrow should end and the loop should continue\n                State::Two(a) =&gt; {\n                    return match get(&amp;mut self.inner) { // Borrowing again compiles!\n                        State::Two(a) =&gt; a,\n                        _ =&gt; unreachable!(),\n                    }\n                }, // self.inner ought to be borrowed for 's, that's just to be expected\n            }\n        }\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n"}], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1105, "favorite_count": 1, "accepted_answer_id": 50570026, "answer_count": 2, "score": 11, "last_activity_date": 1572680587, "creation_date": 1527201498, "last_edit_date": 1527232302, "question_id": 50519147, "link": "https://stackoverflow.com/questions/50519147/double-mutable-borrow-error-in-a-loop-happens-even-with-nll-on", "title": "Double mutable borrow error in a loop happens even with NLL on", "body": "<p>Suppose I have several structures like in the following example, and in the <code>next()</code> method I need to pull the next event using a user-provided buffer, but if this event is a comment, and ignore comments flag is set to true, I need to pull the next event again:</p>\n\n<pre><code>struct Parser {\n    ignore_comments: bool,\n}\n\nenum XmlEvent&lt;'buf&gt; {\n    Comment(&amp;'buf str),\n    Other(&amp;'buf str),\n}\n\nimpl Parser {\n    fn next&lt;'buf&gt;(&amp;mut self, buffer: &amp;'buf mut String) -&gt; XmlEvent&lt;'buf&gt; {\n        let result = loop {\n            buffer.clear();\n\n            let temp_event = self.parse_outside_tag(buffer);\n\n            match temp_event {\n                XmlEvent::Comment(_) if self.ignore_comments =&gt; {}\n                _ =&gt; break temp_event,\n            }\n        };\n        result\n    }\n\n    fn parse_outside_tag&lt;'buf&gt;(&amp;mut self, _buffer: &amp;'buf mut String) -&gt; XmlEvent&lt;'buf&gt; {\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p>This code, however, gives a double borrow error, even when I have <code>#![feature(nll)]</code> enabled:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*buffer` as mutable more than once at a time\n  --&gt; src/main.rs:14:13\n   |\n14 |             buffer.clear();\n   |             ^^^^^^ second mutable borrow occurs here\n15 |             \n16 |             let temp_event = self.parse_outside_tag(buffer);\n   |                                                     ------ first mutable borrow occurs here\n   |\nnote: borrowed value must be valid for the lifetime 'buf as defined on the method body at 12:5...\n  --&gt; src/main.rs:12:5\n   |\n12 |     fn next&lt;'buf&gt;(&amp;mut self, buffer: &amp;'buf mut String) -&gt; XmlEvent&lt;'buf&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0499]: cannot borrow `*buffer` as mutable more than once at a time\n  --&gt; src/main.rs:16:53\n   |\n16 |             let temp_event = self.parse_outside_tag(buffer);\n   |                                                     ^^^^^^ mutable borrow starts here in previous iteration of loop\n   |\nnote: borrowed value must be valid for the lifetime 'buf as defined on the method body at 12:5...\n  --&gt; src/main.rs:12:5\n   |\n12 |     fn next&lt;'buf&gt;(&amp;mut self, buffer: &amp;'buf mut String) -&gt; XmlEvent&lt;'buf&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to 2 previous errors\n</code></pre>\n\n<p>I can (approximately at least) understand why an error could happen here with the NLL feature turned off, but I don't understand why it happens with NLL.</p>\n\n<p>Anyway, my end goal is to implement this without flags, so I also tried doing this (it is recursive, which is really unfortunate, but all non-recursive versions I came up with could not possibly work without NLL):</p>\n\n<pre><code>fn next&lt;'buf&gt;(&amp;mut self, buffer: &amp;'buf mut String) -&gt; XmlEvent&lt;'buf&gt; {\n    buffer.clear();\n\n    {\n        let temp_event = self.parse_outside_tag(buffer);\n\n        match temp_event {\n            XmlEvent::Comment(_) if self.ignore_comments =&gt; {}\n            _ =&gt; return temp_event,\n        }\n    }\n\n    self.next(buffer)\n}\n</code></pre>\n\n<p>Here I tried to confine the borrow inside a lexical block, and <em>nothing</em> from this block leaks to the outside. However, I'm still getting an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*buffer` as mutable more than once at a time\n  --&gt; src/main.rs:23:19\n   |\n15 |             let temp_event = self.parse_outside_tag(buffer);\n   |                                                     ------ first mutable borrow occurs here\n...\n23 |         self.next(buffer)\n   |                   ^^^^^^ second mutable borrow occurs here\n24 |     }\n   |     - first borrow ends here\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>And again, NLL does not fix it.</p>\n\n<p>It has been a long time since I encountered a borrow checking error which I don't understand, so I'm hoping it is actually something simple which I'm overlooking for some reason :) </p>\n\n<p>I really suspect that the root cause is somehow connected with the explicit <code>'buf</code> lifetime (in particular, errors with the NLL flag turned on have these notes about it), but I can't understand what exactly is wrong here.</p>\n"}, {"tags": ["rust", "string-formatting"], "answers": [{"comments": [{"owner": {"reputation": 93, "user_id": 5419223, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/638f2add05aeb19e38fc00f635a8b1f3?s=128&d=identicon&r=PG&f=1", "display_name": "yuiu", "link": "https://stackoverflow.com/users/5419223/yuiu"}, "edited": false, "score": 0, "creation_date": 1527279322, "post_id": 50519127, "comment_id": 88084611, "body": "Thank you. The documentation is not clear regarding placement of align width. The code <code>format!(&quot;{:&gt;+10.1}&quot;, 23.3434)</code> worked."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 93, "user_id": 5419223, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/638f2add05aeb19e38fc00f635a8b1f3?s=128&d=identicon&r=PG&f=1", "display_name": "yuiu", "link": "https://stackoverflow.com/users/5419223/yuiu"}, "edited": false, "score": 0, "creation_date": 1527281900, "post_id": 50519127, "comment_id": 88085585, "body": "I have opened <a href=\"https://github.com/rust-lang/rust/pull/51067\" rel=\"nofollow noreferrer\">a PR</a> to make some improvements, fell free to comment there about what could be improved further!"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 6, "last_activity_date": 1527201372, "creation_date": 1527201372, "answer_id": 50519127, "question_id": 50518757, "link": "https://stackoverflow.com/questions/50518757/how-do-i-force-the-sign-before-positive-floats-when-using-the-format-macro/50519127#50519127", "title": "How do I force the &#39;+&#39; sign before positive floats when using the format! macro?", "body": "<p>The specification clearly gives the order <code>[[fill]align][sign]['#']['0'][width]</code> with:</p>\n\n<pre><code>align := '&lt;' | '^' | '&gt;'\nsign := '+' | '-'\n</code></pre>\n\n<p>Therefore you cannot have a number between <code>&gt;</code> and <code>+</code> and the width goes after the sign:</p>\n\n<pre><code>format!(\"{:&gt;10+.1}\", 23.3434);\n</code></pre>\n\n<p>This renders as <code>\"     +23.3\"</code>. Whereas:</p>\n\n<pre><code>format!(\"{:&gt;+010.1}\", 23.3434);\n</code></pre>\n\n<p>renders as <code>+0000023.3</code>.</p>\n\n<p>Although, for maintainability, I would suggest using</p>\n\n<pre><code>format!(\"{:&gt;+0width$.prec$}\", 23.3434, width=10, prec=1);\n</code></pre>\n"}], "owner": {"reputation": 93, "user_id": 5419223, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/638f2add05aeb19e38fc00f635a8b1f3?s=128&d=identicon&r=PG&f=1", "display_name": "yuiu", "link": "https://stackoverflow.com/users/5419223/yuiu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 313, "favorite_count": 0, "accepted_answer_id": 50519127, "answer_count": 1, "score": 2, "last_activity_date": 1527201768, "creation_date": 1527199037, "last_edit_date": 1527201768, "question_id": 50518757, "link": "https://stackoverflow.com/questions/50518757/how-do-i-force-the-sign-before-positive-floats-when-using-the-format-macro", "title": "How do I force the &#39;+&#39; sign before positive floats when using the format! macro?", "body": "<p>I'd like to have right-aligned floating-point number formatted by the <code>format!</code> macro with the sign always visible. Using the <a href=\"https://doc.rust-lang.org/std/fmt/#syntax\" rel=\"nofollow noreferrer\">syntax specification</a> I devised the following formatting:</p>\n\n<pre><code>format!(\"{:&gt;10+.1}\", 23.3434);\n</code></pre>\n\n<p>However I got compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: invalid format string: expected `'}'`, found `'+'`\n --&gt; src/main.rs:2:21\n  |\n2 |     let x = format!(\"{:&gt;10+.1}\", 23.3434);\n  |                     ^^^^^^^^^^^\n</code></pre>\n\n<p>I'm using Rust 1.25.0.</p>\n"}, {"tags": ["process", "rust"], "comments": [{"owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 0, "creation_date": 1528409923, "post_id": 50514005, "comment_id": 88509591, "body": "The child should keep running by default according to the docs. <a href=\"https://doc.rust-lang.org/std/process/struct.Child.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/process/struct.Child.html</a>  When you say &quot;this never resolves&quot;, can you go into more detail?"}, {"owner": {"reputation": 2320, "user_id": 7035350, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/b3XkF.jpg?s=128&g=1", "display_name": "OK sure", "link": "https://stackoverflow.com/users/7035350/ok-sure"}, "reply_to_user": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 2, "creation_date": 1528451387, "post_id": 50514005, "comment_id": 88523330, "body": "@Digikata The process never exits - so the activation promise doesn&#39;t resolve (on close event). The child process (Rust binary) starts another child process and doesn&#39;t exit - I&#39;d like it to start the child process and exit with a 0 code."}, {"owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 0, "creation_date": 1528487515, "post_id": 50514005, "comment_id": 88542470, "body": "From my reading, and quick test of your rust code outside of electron from the cmd line, it works as intended. It seems like some interaction with the electron call. What platform is this on? On windows iiirc, one can call a create process with flags preventing child detached processes."}, {"owner": {"reputation": 2320, "user_id": 7035350, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/b3XkF.jpg?s=128&g=1", "display_name": "OK sure", "link": "https://stackoverflow.com/users/7035350/ok-sure"}, "reply_to_user": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 0, "creation_date": 1528793316, "post_id": 50514005, "comment_id": 88630973, "body": "@Digikata - thanks for looking into this. It&#39;s being run on both Windows &amp; Mac dev environments. Same behaviour on both. I&#39;ve added the WebSocket server code if it helps."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1543241088, "post_id": 50514005, "comment_id": 93835300, "body": "<a href=\"https://stackoverflow.com/q/53477846/263525\">This question</a> is somewhat related and may help readers of this one."}], "owner": {"reputation": 2320, "user_id": 7035350, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/b3XkF.jpg?s=128&g=1", "display_name": "OK sure", "link": "https://stackoverflow.com/users/7035350/ok-sure"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1929, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1528793202, "creation_date": 1527178987, "last_edit_date": 1528793202, "question_id": 50514005, "link": "https://stackoverflow.com/questions/50514005/how-do-i-spawn-a-detached-command-process-in-rust", "title": "How do I spawn a detached command/process in Rust?", "body": "<p>I have written a small executable to start a WebSocket server for a Node development environment.</p>\n\n<p>In a separate NodeJS application (running in Electron), I am using <code>child_process.spawn()</code> to run the binary and start the server on application start up.</p>\n\n<p>This server child process hijacks the node <code>child_process</code> spawned command and doesn't exit, so I can't capture the exit code or handle failures. I just need to know that it started or didn't.</p>\n\n<p>How do I start this process in Rust so that I can exit (on success, failure etc.) and the child keeps running?</p>\n\n<p>The relevant parts of my <code>main.rs</code>:</p>\n\n<pre><code>extern crate ws;\n\nuse std::env;\nuse std::process::Command;\nuse ws::{connect, CloseCode};\n\nfn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n    let command = &amp;args[1];\n    if command == \"activate\" {\n        println!(\"Activating\");\n        stop_server_process();\n        start_server_process();\n    }\n}\n\nfn start_server_process() {\n    let mut command;\n    if cfg!(windows) {\n        command = Command::new(\".\\\\node_modules\\\\.bin\\\\ws.cmd\");\n    } else {\n        command = Command::new(\"./node_modules/.bin/ws\");\n    }\n    command.arg(\"--websocket\");\n    command.arg(\"test/mock-api/ws-server.js\");\n    command.arg(\"-p\");\n    command.arg(\"9401\");\n    match command.spawn() {\n        Ok(child) =&gt; println!(\"Server process id is {}\", child.id()),\n        Err(e) =&gt; {\n            println!(\"Server didn't start: {}\", e);\n            std::process::exit(1);\n        },\n    }\n    std::process::exit(0);\n}\n\nfn stop_server_process() {\n    connect(\"ws://localhost:9401\", |out| {\n        out.send(\"server-stop\").unwrap();\n        move |msg| {\n            println!(\"Got message: {}\", msg);\n            out.close(CloseCode::Normal)\n        }\n    }).unwrap()\n}\n</code></pre>\n\n<p>I'm running the binary from my Electron app like so:</p>\n\n<pre><code>/**\n * @return {Promise&lt;Boolean&gt;}\n */\nstatic activate() {\n  return new Promise((resolve, reject) =&gt; {\n    const command = spawn(process.env.SERVER_LOCAL_PATH, ['activate']);\n    command.stdout.on('data', (data) =&gt; {\n      console.log(`stdout: ${data}`);\n    });\n    command.stderr.on('data', (data) =&gt; {\n      console.log(`stderr: ${data}`);\n    });\n    command.on('close', code =&gt; resolve(code === 0));\n    command.on('error', error =&gt; reject(error));\n  });\n}\n</code></pre>\n\n<p>This never resolves as the <code>ws</code> websocket starts running and the spawned process is now picking up events from that. My console output is the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>stdout: Activating &lt;--- Rust binary output\nServer process id is 78057 &lt;--- Rust binary output\nstderr: Serving at [various URL variations] &lt;--- ws binary output\nstdout: Client Connected &lt;--- ws binary output\n</code></pre>\n\n<p>The WebSocket server is based on examples and code from <a href=\"https://github.com/lwsjs/local-web-server/wiki/How-to-create-a-websocket-module\" rel=\"nofollow noreferrer\">this library</a>. Here is a reproducable version of it:</p>\n\n<pre><code>module.exports = SocketBase =&gt; class Socket extends SocketBase {\n  websocket(wss) {\n    wss.on('connection', (ws) =&gt; {\n      console.log('Client Connected');\n      ws.on('message', (data) =&gt; {\n        if (data === 'server-stop') {\n          console.log('Stopping...');\n          process.exit(0);\n        }\n        // do some faked JSON response data\n      });\n      ws.on('close', () =&gt; {\n        console.log('Client Disconnected');\n      });\n      ws.on('error', (error) =&gt; {\n        console.log(error.toString());\n      });\n    });\n  }\n};\n</code></pre>\n"}, {"tags": ["macros", "rust", "rust-macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1527173121, "post_id": 50512097, "comment_id": 88036832, "body": "<i>so you don&#39;t get unexpected precedence bugs</i>"}], "answers": [{"tags": [], "owner": {"reputation": 361191, "user_id": 440558, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/9ZYta.jpg?s=128&g=1", "display_name": "Some programmer dude", "link": "https://stackoverflow.com/users/440558/some-programmer-dude"}, "is_accepted": false, "score": 5, "last_activity_date": 1527173274, "last_edit_date": 1527173274, "creation_date": 1527173123, "answer_id": 50512226, "question_id": 50512097, "link": "https://stackoverflow.com/questions/50512097/why-are-macros-based-on-abstract-syntax-trees-better-than-macros-based-on-string/50512226#50512226", "title": "Why are macros based on abstract syntax trees better than macros based on string preprocessing?", "body": "\n\n<p>A classic example using the C preprocessor is</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#define MUL(a, b) a * b\n\n// ...\n\nint res = MUL(x + y, 5);\n</code></pre>\n\n<p>The use of the macro will expand to</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int res = x + y * 5;\n</code></pre>\n\n<p>which is very far from the expected</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int res = (x + y) * 5;\n</code></pre>\n\n<p>This happens because the C preprocessor really just does simple text-based substitutions, it's not really an integral part of the language itself. Preprocessing and parsing are two separate steps.</p>\n\n<p>If the preprocessor instead parsed the macro like the rest of the compiler, which happens for languages where macros are part of the actual language syntax, this is no longer a problem as things like precedence (as mentioned) and associativity are taken into account.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527174345, "post_id": 50512304, "comment_id": 88037606, "body": "Thank you for providing concrete examples of both types of macros."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 12, "last_activity_date": 1527173421, "last_edit_date": 1527173421, "creation_date": 1527173338, "answer_id": 50512304, "question_id": 50512097, "link": "https://stackoverflow.com/questions/50512097/why-are-macros-based-on-abstract-syntax-trees-better-than-macros-based-on-string/50512304#50512304", "title": "Why are macros based on abstract syntax trees better than macros based on string preprocessing?", "body": "<p>If you have this in C:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#define X(A,B) A+B\nint r = X(1,2) * 3;\n</code></pre>\n\n<p>The value of <code>r</code> will be <code>7</code>, because the preprocessor expands it to <code>1+2 * 3</code>, which is <code>1+(2*3)</code>.</p>\n\n<p>In Rust, you would have:</p>\n\n<pre><code>macro_rules! X { ($a:expr,$b:expr) =&gt; { $a+$b } }\nlet r = X!(1,2) * 3;\n</code></pre>\n\n<p>This will evaluate to <code>9</code>, because the compiler will interpret the expansion as <code>(1+2)*3</code>.  This is because the compiler knows that the result of the macro is supposed to be a complete, self-contained expression.</p>\n\n<p>That said, the C macro could also be defined like so:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#define X(A,B) ((A)+(B))\n</code></pre>\n\n<p>This would avoid any non-obvious evaluation problems, including the arguments themselves being reinterpreted due to context.  However, when you're using a macro, you can never be sure whether or not the macro has correctly accounted for every possible way it could be used, so it's hard to tell what any given macro expansion will do.</p>\n\n<p>By using AST nodes instead of text, Rust ensures this ambiguity can't happen.</p>\n"}], "owner": {"reputation": 79, "user_id": 2006089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b0676955781cdd50a5d4dc3255a617e3?s=128&d=identicon&r=PG", "display_name": "patro", "link": "https://stackoverflow.com/users/2006089/patro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 335, "favorite_count": 0, "accepted_answer_id": 50512304, "answer_count": 2, "score": 1, "last_activity_date": 1527173421, "creation_date": 1527172753, "last_edit_date": 1527172914, "question_id": 50512097, "link": "https://stackoverflow.com/questions/50512097/why-are-macros-based-on-abstract-syntax-trees-better-than-macros-based-on-string", "title": "Why are macros based on abstract syntax trees better than macros based on string preprocessing?", "body": "<p>I am beginning my journey of learning Rust. I came across <a href=\"https://doc.rust-lang.org/rust-by-example/macros.html\" rel=\"nofollow noreferrer\">this line in <em>Rust by Example</em></a>:</p>\n\n<blockquote>\n  <p>However, unlike macros in C and other languages, Rust macros are expanded into abstract syntax trees, rather than string preprocessing, so you don't get unexpected precedence bugs.</p>\n</blockquote>\n\n<p>Why is an abstract syntax tree better than string preprocessing?</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1527175745, "last_edit_date": 1527175745, "creation_date": 1527171366, "answer_id": 50511624, "question_id": 50511456, "link": "https://stackoverflow.com/questions/50511456/expected-identifier-when-creating-a-macro-to-define-mutable-variables-at-the-s/50511624#50511624", "title": "&quot;expected identifier&quot; when creating a macro to define mutable variables at the same time", "body": "<p>An <em>expression</em> is not an <em>identifier</em>. Use this instead:</p>\n\n<pre><code>( $( $e:ident ),+ ) =&gt; {\n</code></pre>\n\n<p>When declaring variables, you need to provide an identifier. An expression would make no sense:</p>\n\n<pre><code>let mut 1+1;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527294055, "post_id": 50537406, "comment_id": 88088408, "body": "Is this an answer to the question?"}, {"owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527294749, "post_id": 50537406, "comment_id": 88088525, "body": "The answer is based on @Shepmaster suggestion."}], "tags": [], "owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "is_accepted": false, "score": 1, "last_activity_date": 1527300484, "last_edit_date": 1527300484, "creation_date": 1527285913, "answer_id": 50537406, "question_id": 50511456, "link": "https://stackoverflow.com/questions/50511456/expected-identifier-when-creating-a-macro-to-define-mutable-variables-at-the-s/50537406#50537406", "title": "&quot;expected identifier&quot; when creating a macro to define mutable variables at the same time", "body": "<p>I found there are some errors with my original macro when I assign a new value to the variable. With this modified macro, <a href=\"https://stackoverflow.com/a/50511624/155423\">based on @Shepmaster's suggestion</a>, I can assign a new value to the variables defined by the macro:</p>\n\n<pre><code>macro_rules! double {\n    ( $($var:ident),+) =&gt; {\n        $(let mut $var: f64;)+\n    };\n}\n\nfn main() {\n    double!(FT, FX, alpha, H, K, lambda, T, X);\n\n    FT = 2.0;\n    println!(\"{}\", FT);\n}\n</code></pre>\n"}], "owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 596, "favorite_count": 0, "accepted_answer_id": 50511624, "answer_count": 2, "score": 2, "last_activity_date": 1527300484, "creation_date": 1527170856, "last_edit_date": 1527285872, "question_id": 50511456, "link": "https://stackoverflow.com/questions/50511456/expected-identifier-when-creating-a-macro-to-define-mutable-variables-at-the-s", "title": "&quot;expected identifier&quot; when creating a macro to define mutable variables at the same time", "body": "<p>I want to declare multiple mutable variables at the same time. Defined a macro to declare mutable variables as the following.  </p>\n\n<pre><code>macro_rules! mutf64 {\n    ( $( $e:expr ),+ ) =&gt; {\n        {\n            $(\n                let mut $e:f64;\n            )+\n        }\n    };\n}\n\nfn main() {\n    mutf64!(FT, FX, alpha, H, K, lambda, T, X);\n}\n</code></pre>\n\n<p>There is an error when syntax checking with compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected identifier, found `FT`\n  --&gt; src/main.rs:5:25\n   |\n5  |                 let mut $e:f64;\n   |                         ^^ expected identifier\n...\n12 |     mutf64!(FT, FX, alpha, H, K, lambda, T, X);\n   |     ------------------------------------------- in this macro invocation\n</code></pre>\n\n<p>Why can't I do this with <code>macro_rules</code>?</p>\n"}, {"tags": ["string", "rust", "pattern-matching"], "answers": [{"comments": [{"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1527203172, "post_id": 50510152, "comment_id": 88051238, "body": "You would need to add another layer to check if the second parameter is a number or not, which I guess is alright, but I&#39;ll still need to have a lot of repeated code if I want to have multiple commands like <code>cmd num</code>, this gets even worse if I need more parameters."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527216707, "post_id": 50510152, "comment_id": 88053860, "body": "You should probably call <code>fuse</code> on <code>toks</code>: <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><i>calling <code>next()</code> again may or may not eventually start returning <code>Some(Item)</code> again at some point</i></a>."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527257155, "post_id": 50510152, "comment_id": 88073931, "body": "@Shepmaster totally agree, I added fuse. I will definitely be using this more in the future, thanks for pointing this out"}], "tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 3, "last_activity_date": 1527257119, "last_edit_date": 1527257119, "creation_date": 1527166911, "answer_id": 50510152, "question_id": 50505198, "link": "https://stackoverflow.com/questions/50505198/what-is-a-good-way-to-match-strings-against-patterns-and-extract-values/50510152#50510152", "title": "What is a good way to match strings against patterns and extract values?", "body": "<p>You can use <code>str::split</code> for this (<a href=\"http://play.integer32.com/?gist=61257fd07c6c8455138ce86b3c27d276&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre><code>fn run(input: &amp;str) {\n    let mut toks = input.split(' ').fuse();\n    let first = toks.next();\n    let second = toks.next();\n\n    match first {\n        Some(\"next\") =&gt; println!(\"next found\"),\n        Some(\"prev\") =&gt; println!(\"prev found\"),\n        Some(\"goto\") =&gt; match second {\n            Some(num) =&gt; println!(\"found goto with number {}\", num),\n            _ =&gt; println!(\"goto with no parameter\"),\n        },\n        _ =&gt; println!(\"invalid input {:?}\", input),\n    }\n}\n\nfn main() {\n    run(\"next\");\n    run(\"prev\");\n    run(\"goto 10\");\n    run(\"this is not valid\");\n    run(\"goto\"); // also not valid but for a different reason\n}\n</code></pre>\n\n<p>will output</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>next found\nprev found\nfound goto with number 10\ninvalid input \"this is not valid\"\ngoto with no parameter\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1527284173, "last_edit_date": 1527284173, "creation_date": 1527214737, "answer_id": 50520581, "question_id": 50505198, "link": "https://stackoverflow.com/questions/50505198/what-is-a-good-way-to-match-strings-against-patterns-and-extract-values/50520581#50520581", "title": "What is a good way to match strings against patterns and extract values?", "body": "<p>You can create a master <code>Regex</code> that captures all the interesting components then build a <code>Vec</code> of all the captured pieces. This <code>Vec</code> can then be matched against:</p>\n\n<pre><code>extern crate regex;\n\nuse regex::Regex;\n\nfn main() {\n    let input = \"goto 4\";\n    let mut current_question_number = 0;\n\n    // Create a regex that matches on the union of all commands\n    // Each command and argument is captured\n    // Using the \"extended mode\" flag to write a nicer Regex\n    let input_re = Regex::new(\n        r#\"(?x)\n        (next) |\n        (prev) |\n        (goto)\\s+(\\d+)\n        \"#\n    ).unwrap();\n\n    // Execute the Regex\n    let captures = input_re.captures(input).map(|captures| {\n        captures\n            .iter() // All the captured groups\n            .skip(1) // Skipping the complete match\n            .flat_map(|c| c) // Ignoring all empty optional matches\n            .map(|c| c.as_str()) // Grab the original strings\n            .collect::&lt;Vec&lt;_&gt;&gt;() // Create a vector\n    });\n\n    // Match against the captured values as a slice\n    match captures.as_ref().map(|c| c.as_slice()) {\n        Some([\"next\"]) =&gt; current_question_number += 1,\n        Some([\"prev\"]) =&gt; current_question_number -= 1,\n        Some([\"goto\", x]) =&gt; {\n            let x = x.parse().expect(\"can't parse number\");\n            current_question_number = x;\n        }\n        _ =&gt; panic!(\"Unknown Command: {}\", input),\n    }\n\n    println!(\"Now at question {}\", current_question_number);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1527240741, "post_id": 50523793, "comment_id": 88063640, "body": "The regex answer worked for me, but this does look very interesting (never came across nom before)."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 5, "last_activity_date": 1527233611, "creation_date": 1527233611, "answer_id": 50523793, "question_id": 50505198, "link": "https://stackoverflow.com/questions/50505198/what-is-a-good-way-to-match-strings-against-patterns-and-extract-values/50523793#50523793", "title": "What is a good way to match strings against patterns and extract values?", "body": "<p>You have a mini language for picking questions:</p>\n\n<ul>\n<li>pick the <em>next</em> question</li>\n<li>pick the <em>prev</em> question</li>\n<li><em>goto</em> a specific question</li>\n</ul>\n\n<p>If your requirements end here a <code>Regex</code> based solution fits perfectly.</p>\n\n<p>If your DSL may evolve a parser based solution is worth considering.</p>\n\n<p>The parser combinator <a href=\"https://github.com/Geal/nom\" rel=\"noreferrer\">nom</a> is a powerful tool to build a grammar starting from basic elements.</p>\n\n<p>Your language has these characteristics:</p>\n\n<ul>\n<li><p>it has three alternatives statements (<code>alt!</code>): <em>next</em>, <em>prev</em>, <em>goto \\d+</em></p></li>\n<li><p>the most complex statement \"goto {number}\" is composed of the keyword (<code>tag!</code>) <em>goto</em> in front of (<code>preceded!</code>) a <em>number</em> (<code>digit!</code>).</p></li>\n<li><p>any numbers of whitespaces (<code>ws!</code>) has to be ignored    </p></li>\n</ul>\n\n<p>These requirements translate in this implementation:</p>\n\n<pre><code>#[macro_use]\nextern crate nom;\n\nuse nom::{IResult, digit};\nuse nom::types::CompleteStr;\n\n// we have for now two types of outcome: absolute or relative cursor move\npub enum QMove {\n    Abs(i32),\n    Rel(i32)\n}\n\npub fn question_picker(input: CompleteStr) -&gt; IResult&lt;CompleteStr, QMove&gt; {\n    ws!(input,\n        alt!(\n            map!(\n                tag!(\"next\"),\n                |_| QMove::Rel(1)\n            ) |\n            map!(\n                tag!(\"prev\"),\n                |_| QMove::Rel(-1)\n            ) |\n            preceded!(\n                tag!(\"goto\"),\n                map!(\n                    digit,\n                    |s| QMove::Abs(std::str::FromStr::from_str(s.0).unwrap())\n                )\n            )\n        )\n    )\n}\n\nfn main() {\n    let mut current_question_number = 60;\n    let first_line = \"goto 5\";\n\n    let outcome = question_picker(CompleteStr(first_line));\n\n    match outcome {\n        Ok((_, QMove::Abs(n))) =&gt; current_question_number = n,\n        Ok((_, QMove::Rel(n))) =&gt; current_question_number += n,\n        Err(err) =&gt; {panic!(\"error: {:?}\", err)}\n    }\n\n    println!(\"Now at question {}\", current_question_number);\n}\n</code></pre>\n"}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4457, "favorite_count": 2, "accepted_answer_id": 50520581, "answer_count": 3, "score": 6, "last_activity_date": 1527284173, "creation_date": 1527152537, "last_edit_date": 1527170067, "question_id": 50505198, "link": "https://stackoverflow.com/questions/50505198/what-is-a-good-way-to-match-strings-against-patterns-and-extract-values", "title": "What is a good way to match strings against patterns and extract values?", "body": "<p>I am trying get something like this (doesn't work): </p>\n\n<pre><code>match input {\n    \"next\" =&gt; current_question_number += 1,\n    \"prev\" =&gt; current_question_number -= 1,\n    \"goto {x}\" =&gt; current_question_number = x,\n    // ...\n    _ =&gt; status = \"Unknown Command\".to_owned()\n}\n</code></pre>\n\n<p>I tried two different versions of <code>Regex</code>:</p>\n\n<pre><code>go_match = regex::Regex::new(r\"goto (\\d+)?\").unwrap();\n// ...\nmatch input {\n    ...\n    x if go_match.is_match(x) =&gt; current_question_number = go_match.captures(x).unwrap().get(1).unwrap().as_str().parse().unwrap(),\n    _ =&gt; status = \"Unknown Command\".to_owned()\n}\n</code></pre>\n\n<p>and</p>\n\n<pre><code>let cmd_match = regex::Regex::new(r\"([a-zA-Z]+) (\\d+)?\").unwrap();\n// ...\nif let Some(captures) = cmd_match.captures(input.as_ref()) {\n        let cmd = captures.get(1).unwrap().as_str().to_lowercase();\n        if let Some(param) = captures.get(2) {\n            let param = param.as_str().parse().unwrap();\n            match cmd.as_ref() {\n                \"goto\" =&gt; current_question_number = param,\n            }\n        } else {\n            match cmd.as_ref() {\n                \"next\" =&gt; current_question_number += 1,\n                \"prev\" =&gt; current_question_number -= 1,\n            }\n        }\n    } else {\n        status = \"Unknown Command\".to_owned();\n    }\n</code></pre>\n\n<p>Both seem like a ridiculously long and and complicated way to do something pretty common, am I missing something?</p>\n"}, {"tags": ["rust", "biginteger"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527153980, "post_id": 50504503, "comment_id": 88023429, "body": "Whatever, that&#39;s a theoretical limit as I cannot see any usage of such a big number as <code>2^u64::MAX</code>"}, {"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 1, "creation_date": 1527154101, "post_id": 50504503, "comment_id": 88023514, "body": "BigInt is being represented as <code>(a + b * 2^32 + c * (2^32)^2)</code>, so the limit is pretty big"}], "answers": [{"comments": [{"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1527154969, "post_id": 50505869, "comment_id": 88024083, "body": "But what about <code>(a + b * big_digit::BASE + c * big_digit::BASE^2)</code> @Boiethios ? Does this not put a cap as per the docs?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1527155278, "post_id": 50505869, "comment_id": 88024291, "body": "@RajeevRanjan The documentation about a maximum is implicit: it depends on the maximum size of a <code>Vec</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1527158329, "post_id": 50505869, "comment_id": 88026349, "body": "@RajeevRanjan nothing prevents you to use <code>BigUint { data: vec!(a, b, c, d) }</code> and get <code>(a + b * big_digit::BASE + c * big_digit::BASE^2 + d * big_digit::BASE^3)</code>. And why stop at 4 elements? The actual limit will be bound by whatever memory you have."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1527161799, "post_id": 50505869, "comment_id": 88028638, "body": "Actually the maximum size that can be allocated by Rust is <code>isize::MAX</code>. See <a href=\"https://stackoverflow.com/questions/32324794/maximum-size-of-an-array-in-32-bits\" title=\"maximum size of an array in 32 bits\">stackoverflow.com/questions/32324794/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527168495, "post_id": 50505869, "comment_id": 88033441, "body": "@trentcl I am not sure of what you say, but I did an error. I edited to give the full calculus, maybe I am wrong, but I think it is more accurate."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 10, "last_activity_date": 1527175990, "last_edit_date": 1527175990, "creation_date": 1527154484, "answer_id": 50505869, "question_id": 50504503, "link": "https://stackoverflow.com/questions/50504503/is-there-a-limit-to-the-size-of-a-bigint-or-biguint-in-rust/50505869#50505869", "title": "Is there a limit to the size of a BigInt or BigUint in Rust?", "body": "<p><strong>TL;DR</strong>: the maximum number that can be represented is roughly:</p>\n\n<pre><code>3.079 x 10^22212093154093428519\n</code></pre>\n\n<p>I suppose that nothing useful needs such a big number to be represented. You can be certain that the <code>num_bigint</code> will do the job, whatever the usage you have with it.</p>\n\n<hr>\n\n<p>In theory, there is no limit to the <code>num</code> big integers size since <a href=\"https://docs.rs/num-bigint/0.1.44/num_bigint/struct.BigUint.html\" rel=\"noreferrer\">the documentation says nothing about it (version <code>0.1.44</code>)</a>. However, there is a concrete limit that we can calculate:</p>\n\n<p><a href=\"https://docs.rs/num-bigint/0.1.44/num_bigint/\" rel=\"noreferrer\"><code>BigUint</code> is a <code>Vec&lt;BigDigit&gt;</code></a>, and <a href=\"https://docs.rs/num-bigint/0.1.44/num_bigint/big_digit/type.BigDigit.html\" rel=\"noreferrer\"><code>BigDigit</code> is an <code>u32</code></a>. As far as I know, Rust does not define a max size for a <code>Vec</code>, but since <a href=\"https://stackoverflow.com/a/32334789/4498831\">the maximum possible allocated size is <code>isize::MAX</code></a>, the maximum number of <code>BigDigit</code> aka <code>u32</code> is:</p>\n\n<pre><code>MAX_LEN = isize::MAX / sizeof(u32)\n</code></pre>\n\n<p>With this information, we can deduce that the maximum of a <code>num::BigUint</code> (and a <code>num::BigInt</code> as well) in the current implementation is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(u32::MAX + 1) ^ MAX_LEN - 1 = 2^32^MAX_LEN - 1\n</code></pre>\n\n<p>To have this formula, we mimic the way we calculate <code>u8::MAX</code>, for example:</p>\n\n<ul>\n<li><code>bit::MAX</code> is <code>1</code>,</li>\n<li>the length is 8,</li>\n<li>so the maximum is <code>(bit::MAX + 1) ^ 8 - 1 = 255</code></li>\n</ul>\n\n<hr>\n\n<p>Here is the full demonstration from the formula given by the <code>num</code> documentation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a + b * big_digit::BASE + c * big_digit::BASE^2 + ...\n</code></pre>\n\n<p>If we are taking the max value, <code>a == b == c == u32::MAX</code>. Let's name it <code>a</code>. Let's name <code>big_digit::BASE</code> <code>b</code> for convenience. So the max number is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sum(a * b^n) where n is from 0 to (MAX_LEN - 1)\n</code></pre>\n\n<p>if we factorize, we get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a * sum(b^n) where n is from 0 to (MAX_LEN - 1)\n</code></pre>\n\n<p><a href=\"http://mikestoolbox.com/powersum.html\" rel=\"noreferrer\">The general formula of the sum of <code>x^n</code> is <code>(x^(n + 1) - 1) / (x - 1)</code></a>. So, because <code>n</code> is <code>MAX_LEN - 1</code>, the result is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a * (b^(MAX_LEN - 1 + 1) - 1) / (b - 1)\n</code></pre>\n\n<p>We replace a and b with the right value, and the biggest representable number is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>u32::MAX * (2^32^MAX_LEN - 1) / (2^32 - 1)\n</code></pre>\n\n<p><code>u32::MAX</code> is <code>2^32 - 1</code>, so this can be simplified into:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>2^32^MAX_LEN - 1\n</code></pre>\n"}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1276, "favorite_count": 1, "accepted_answer_id": 50505869, "answer_count": 1, "score": 6, "last_activity_date": 1527175990, "creation_date": 1527150480, "last_edit_date": 1527164050, "question_id": 50504503, "link": "https://stackoverflow.com/questions/50504503/is-there-a-limit-to-the-size-of-a-bigint-or-biguint-in-rust", "title": "Is there a limit to the size of a BigInt or BigUint in Rust?", "body": "<p>Is there no limit to the size of a <code>BigInt</code> or <code>BigUint</code> from the <code>num</code> crate in Rust? I see that in <a href=\"https://stackoverflow.com/questions/12693273/is-there-an-upper-bound-to-biginteger\">Java</a> its length is bounded by the upper limit of an integer <code>Integer.MAX_VALUE</code> as it is stored as an array of <code>int</code>.</p>\n\n<p>I did go through the documentation for it but could not really deduce my answer from</p>\n\n<blockquote>\n  <p>A BigUint-typed value BigUint { data: vec!(a, b, c) } represents a\n  number (a + b * big_digit::BASE + c * big_digit::BASE^2).</p>\n</blockquote>\n\n<p><code>big_digit::BASE</code> being defined as </p>\n\n<pre><code>pub const BASE: DoubleBigDigit = 1 &lt;&lt; BITS\n</code></pre>\n\n<p><code>BITS</code> in turn is 32</p>\n\n<p>So is the BigInt being represented as <code>(a + b * 64 + c * 64^2)</code> internally?</p>\n"}]