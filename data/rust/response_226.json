[{"tags": ["rust", "timezone", "timezone-offset", "chrono-tz"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1557377874, "post_id": 56050292, "comment_id": 98745740, "body": "You can ckeck it out on <a href=\"https://crates.io/search?q=timezone&amp;sort=downloads\" rel=\"nofollow noreferrer\">crates.io</a>"}, {"owner": {"reputation": 195413, "user_id": 634824, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/889cf720c96957e615463b5c903a5e18?s=128&d=identicon&r=PG", "display_name": "Matt Johnson-Pint", "link": "https://stackoverflow.com/users/634824/matt-johnson-pint"}, "edited": false, "score": 1, "creation_date": 1557421578, "post_id": 56050292, "comment_id": 98768686, "body": "Keep in mind that time zone abbreviations are not standardized (Hawaii uses both HST or HAST), nor are they unique (CST could belong to US Central Standard Time, Cuba Standard Time, or China Standard TIme), nor do all time zones <i>have</i> abbreviations (many zones in the tzdb zones will just show abbreviations as offsets like &quot;+02&quot;).  Also some languages use different abbreviations than we might use in English - example EST in English or HNE in French are both used in Canada for the same zone."}, {"owner": {"reputation": 5672, "user_id": 134692, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/60bc21f7c0f24d7933c966ae4035fcdc?s=128&d=identicon&r=PG", "display_name": "Ted Middleton", "link": "https://stackoverflow.com/users/134692/ted-middleton"}, "reply_to_user": {"reputation": 195413, "user_id": 634824, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/889cf720c96957e615463b5c903a5e18?s=128&d=identicon&r=PG", "display_name": "Matt Johnson-Pint", "link": "https://stackoverflow.com/users/634824/matt-johnson-pint"}, "edited": false, "score": 0, "creation_date": 1557423243, "post_id": 56050292, "comment_id": 98769442, "body": "Thanks @MattJohnson - harmic below mentions that they aren&#39;t well standardized. I didn&#39;t know that - I guess I would have if I had gone looking for them in ISO 8601 or similar. It&#39;s annoying that the protocol that I&#39;m supporting uses them rather than a numerical offset."}, {"owner": {"reputation": 195413, "user_id": 634824, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/889cf720c96957e615463b5c903a5e18?s=128&d=identicon&r=PG", "display_name": "Matt Johnson-Pint", "link": "https://stackoverflow.com/users/634824/matt-johnson-pint"}, "edited": false, "score": 1, "creation_date": 1557426060, "post_id": 56050292, "comment_id": 98770743, "body": "There are <i>some</i> standards that use abbreviations, such as <a href=\"https://tools.ietf.org/html/rfc2822#section-4.3\" rel=\"nofollow noreferrer\">RFC 2822&#39;s <code>obs-zone</code> definition</a>.  Though even there they are &quot;obsolete&quot; because they were originally defined in the earlier RFC 822 before such conflicts were well understood."}], "answers": [{"comments": [{"owner": {"reputation": 5672, "user_id": 134692, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/60bc21f7c0f24d7933c966ae4035fcdc?s=128&d=identicon&r=PG", "display_name": "Ted Middleton", "link": "https://stackoverflow.com/users/134692/ted-middleton"}, "edited": false, "score": 1, "creation_date": 1557421462, "post_id": 56054505, "comment_id": 98768636, "body": "Thanks @harmic - I knew about chrono-tz, but unfortunately it&#39;s those abbreviations that I need to deal with. I wasn&#39;t completely certain of their provenance or level of standardization - it&#39;s disappointing that the protocol I have to support uses them. I&#39;m going to take your advice and just use a local lookup on those."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 5, "last_activity_date": 1557387815, "creation_date": 1557387815, "answer_id": 56054505, "question_id": 56050292, "link": "https://stackoverflow.com/questions/56050292/is-there-a-way-to-parse-a-timezone-abbreviation-into-a-timezone-offset-in-rust/56054505#56054505", "title": "Is there a way to parse a timezone abbreviation into a timezone offset in Rust?", "body": "<p>You can use <a href=\"https://docs.rs/chrono-tz/0.5.1/chrono_tz/\" rel=\"noreferrer\">chrono_tz</a>, by subtracting the time in the requested timezone from the same time at UTC:</p>\n\n<pre><code>use chrono::TimeZone;\nuse chrono_tz::Tz;\nuse chrono_tz::UTC;\n\nfn main() {\n\n    let tz: Tz = \"Australia/Melbourne\".parse().unwrap();\n    let dt = tz.ymd(2019, 05, 09).and_hms(12, 0, 0);\n    let utc = UTC.ymd(2019, 05, 09).and_hms(12, 0, 0);\n    let offset = utc - dt;\n    println!(\"offset = UTC{:+02}:{:02}\", offset.num_hours(), offset.num_minutes() % 60);\n\n}\n</code></pre>\n\n<p>The result is a <a href=\"https://docs.rs/time/0.1.40/time/struct.Duration.html\" rel=\"noreferrer\">Duration</a> from which you can extract hours, minutes, etc. My sample above gives output:</p>\n\n<pre><code>offset = UTC+10:00\n</code></pre>\n\n<p>Note that the time zones supported by <code>chrono-tz</code> (which are derived from the <a href=\"http://www.iana.org/time-zones\" rel=\"noreferrer\">IANA TZ database</a>) do not describe fixed offsets. Rather the database contains a set of rules describing the daylight savings changeover times for each time zone. Therefore you can only accurately obtain the offset by supplying the time at which you would like to know the offset (in my example, it was 2019-05-09 12:00:00).</p>\n\n<p>There are also a <a href=\"https://en.wikipedia.org/wiki/List_of_time_zone_abbreviations\" rel=\"noreferrer\">set of abbreviations</a> for fixed offsets from UTC. These are not well standardized, and in fact the same abbreviation can mean different things in different countries. For these you may be better off making a simple lookup table for the set of abbreviations you want to support.</p>\n"}], "owner": {"reputation": 5672, "user_id": 134692, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/60bc21f7c0f24d7933c966ae4035fcdc?s=128&d=identicon&r=PG", "display_name": "Ted Middleton", "link": "https://stackoverflow.com/users/134692/ted-middleton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 433, "favorite_count": 0, "accepted_answer_id": 56054505, "answer_count": 1, "score": 1, "last_activity_date": 1557387815, "creation_date": 1557358163, "last_edit_date": 1557360530, "question_id": 56050292, "link": "https://stackoverflow.com/questions/56050292/is-there-a-way-to-parse-a-timezone-abbreviation-into-a-timezone-offset-in-rust", "title": "Is there a way to parse a timezone abbreviation into a timezone offset in Rust?", "body": "<p>Is there a way of parsing timezone abbreviations (like <code>EST</code> or <code>MDT</code>) to a timezone offset (e.g. -5 hours or -7 hours) in Rust? The <a href=\"https://crates.io/crates/chrono-tz\" rel=\"nofollow noreferrer\">chrono_tz crate</a> almost seems to do this, but not quite.</p>\n"}, {"tags": ["rust", "kdtree"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1557355388, "post_id": 56049747, "comment_id": 98741246, "body": "<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ec2f9ebd09d433c6d66060527da7c225\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>, your question could be improved a lot. I have trouble to find the good crate"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557362812, "post_id": 56049747, "comment_id": 98742689, "body": "What <b>concrete</b> type are you using for <code>U</code>? If you show the code used to construct it, that will tell you what needs to go there."}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557367626, "post_id": 56049747, "comment_id": 98743601, "body": "@Shepmaster Thats the problem. I have not even the foggiest idea why it has 3 generic arguments in the first place. So I could not care less what it means. Coming from C++ I am tempted to think it is some way of the implementer to express, that he wants an array slice of <code>A</code> inside somehow. But as the rest of the API looks dynamic as far as <code>dim</code> is concerned, it makes no sense to me."}], "answers": [{"tags": [], "owner": {"reputation": 916, "user_id": 5616591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e939e7d16afe12f5eb0a3bca57cf33d4?s=128&d=identicon&r=PG&f=1", "display_name": "Romeo Valentin", "link": "https://stackoverflow.com/users/5616591/romeo-valentin"}, "is_accepted": false, "score": 0, "last_activity_date": 1588540719, "creation_date": 1588540719, "answer_id": 61581760, "question_id": 56049747, "link": "https://stackoverflow.com/questions/56049747/how-do-i-write-the-type-of-a-kdtree-member-in-a-struct/61581760#61581760", "title": "How do I write the type of a KdTree member in a struct?", "body": "<p>I think I have figured it out. When you paste the example code from the documentation</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a: ([f64; 2], usize) = ([0f64, 0f64], 0);\nlet b: ([f64; 2], usize) = ([1f64, 1f64], 1);\nlet c: ([f64; 2], usize) = ([2f64, 2f64], 2);\nlet d: ([f64; 2], usize) = ([3f64, 3f64], 3);\n\nlet dimensions = 2;\nlet mut kdtree = KdTree::new(dimensions);\n\nkdtree.add(&amp;a.0, a.1).unwrap();\nkdtree.add(&amp;b.0, b.1).unwrap();\nkdtree.add(&amp;c.0, c.1).unwrap();\nkdtree.add(&amp;d.0, d.1).unwrap();\n</code></pre>\n\n<p>you get that the type of <code>kdtree</code> is <code>kdtree::kdtree::KdTree&lt;f64, usize, &amp;[f64; 2]&gt;</code>.</p>\n"}], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 93, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1588540719, "creation_date": 1557353845, "last_edit_date": 1557362574, "question_id": 56049747, "link": "https://stackoverflow.com/questions/56049747/how-do-i-write-the-type-of-a-kdtree-member-in-a-struct", "title": "How do I write the type of a KdTree member in a struct?", "body": "<p>I'm trying to use the <a href=\"https://github.com/mrhooray/kdtree-rs\" rel=\"nofollow noreferrer\">kdtree crate</a> to explore function approximation from sampled points.</p>\n\n<p>I have a struct which is supposed to have a <code>kdtree</code> member. The type of the <a href=\"https://docs.rs/kdtree/0.5.1/kdtree/kdtree/struct.KdTree.html\" rel=\"nofollow noreferrer\"><code>KdTree</code></a> is generic and the third parameter gives me a headache: </p>\n\n<pre><code>pub struct KdTree&lt;A, T, U: AsRef&lt;[A]&gt;&gt; { /* fields omitted */ }\n</code></pre>\n\n<p>This is my attempt:</p>\n\n<pre><code>use kdtree;\n\npub struct Approximator {\n    tree: kdtree::KdTree&lt;f32, f32, AsRef&lt;[f32]&gt;&gt;,\n}\n</code></pre>\n\n<p>The error I am getting is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn std::convert::AsRef&lt;[f32]&gt; + 'static)` cannot be known at compilation time\n --&gt; src/main.rs:4:5\n  |\n4 |     tree: kdtree::KdTree&lt;f32, f32, AsRef&lt;[f32]&gt;&gt;,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `(dyn std::convert::AsRef&lt;[f32]&gt; + 'static)`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = note: required by `kdtree::kdtree::KdTree`\n</code></pre>\n\n<p>How do I write it so it compiles? My <code>Approximator</code> will also have some runtime <code>dimension</code> depending on the n-arity of the function I try to approximate.</p>\n"}, {"tags": ["json", "rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 1532, "user_id": 1126810, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4722ab504f153124e74b912fd322a579?s=128&d=identicon&r=PG", "display_name": "chrisdotcode", "link": "https://stackoverflow.com/users/1126810/chrisdotcode"}, "edited": false, "score": 0, "creation_date": 1557425020, "post_id": 56049515, "comment_id": 98770273, "body": "Unfortunately, that didn&#39;t work either. I get<code>borrowed value does not live long enough</code>."}, {"owner": {"reputation": 890, "user_id": 11389321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9048fa908f45d0795f0a5c47eaa8a637?s=128&d=identicon&r=PG&f=1", "display_name": "ecstaticm0rse", "link": "https://stackoverflow.com/users/11389321/ecstaticm0rse"}, "reply_to_user": {"reputation": 1532, "user_id": 1126810, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4722ab504f153124e74b912fd322a579?s=128&d=identicon&r=PG", "display_name": "chrisdotcode", "link": "https://stackoverflow.com/users/1126810/chrisdotcode"}, "edited": false, "score": 1, "creation_date": 1557515935, "post_id": 56049515, "comment_id": 98805582, "body": "This is separate issue which occurs <code>json()</code> is returning a  <code>Parser&lt;&#39;static, ...&gt;</code> when you need your parser to be variant over lifetimes. The <a href=\"https://github.com/J-F-Liu/pom/blob/master/examples/json.rs\" rel=\"nofollow noreferrer\">example code</a> returns such a <code>Parser</code>. You&#39;ll need to change your <code>json()</code> function to be generic over a lifetime as well."}], "tags": [], "owner": {"reputation": 890, "user_id": 11389321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9048fa908f45d0795f0a5c47eaa8a637?s=128&d=identicon&r=PG&f=1", "display_name": "ecstaticm0rse", "link": "https://stackoverflow.com/users/11389321/ecstaticm0rse"}, "is_accepted": false, "score": 0, "last_activity_date": 1557352271, "creation_date": 1557352271, "answer_id": 56049515, "question_id": 56049418, "link": "https://stackoverflow.com/questions/56049418/borrowing-error-while-trying-to-read-json-from-stdin/56049515#56049515", "title": "Borrowing error while trying to read JSON from stdin", "body": "<p><code>line.unwrap()</code> returns a <code>String</code>, which you then borrow from with <code>as_bytes()</code>. Since you never bind the <code>String</code> itself, only the borrowed byte slice, the <code>String</code> is dropped at the end of the statement, and the borrowed byte slice is invalidated.</p>\n\n<p>Bind the temporary <code>String</code> to a variable with <code>let s = line.unwrap()</code>, then pass <code>s.as_bytes()</code> to <code>json().parse</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1532, "user_id": 1126810, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4722ab504f153124e74b912fd322a579?s=128&d=identicon&r=PG", "display_name": "chrisdotcode", "link": "https://stackoverflow.com/users/1126810/chrisdotcode"}, "edited": false, "score": 0, "creation_date": 1557425533, "post_id": 56049524, "comment_id": 98770499, "body": "Using your code, I get <code>line does not live long enough; .borrowed value does not live long enough; argument requires that line is borrowed for &#39;static</code> on the <code>let bytes = line.as_bytes()</code> line. Maybe it has something to do with the function signature of what <code>json().parse()</code> expects?"}], "tags": [], "owner": {"reputation": 109, "user_id": 6335279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c244d1561000ab8f3143cc12cff3d3d3?s=128&d=identicon&r=PG&f=1", "display_name": "brainplot", "link": "https://stackoverflow.com/users/6335279/brainplot"}, "is_accepted": false, "score": 1, "last_activity_date": 1557352331, "creation_date": 1557352331, "answer_id": 56049524, "question_id": 56049418, "link": "https://stackoverflow.com/questions/56049418/borrowing-error-while-trying-to-read-json-from-stdin/56049524#56049524", "title": "Borrowing error while trying to read JSON from stdin", "body": "<p>The problem here is that you're using a reference to a value whose lifetime is shorter than you need, and lies in this line: <code>line.unwrap().as_bytes()</code>.</p>\n\n<p><code>as_bytes()</code> returns a reference to the underlying slice of <code>u8</code>s. Now, that underlying slice, returned by <code>unwrap()</code>, happens to be a temporary which will die at the end of the statement.</p>\n\n<p>In Rust, you can re-declare variables with the same name in the current scope and they will shadow the one(s) previously defined. To fix the problem, store the value somewhere, <em>and then</em> get a reference to it. Like so:</p>\n\n<pre><code>fn main() {\n    for line in io::stdin().lock().lines() {\n        let line = line.unwrap();\n        let bytes = line.as_bytes();\n        let _value = json().parse(bytes).unwrap();\n    }\n}\n</code></pre>\n\n<p>Now the value returned by <code>as_bytes()</code> can point to something that lives as long as the current scope. Previously, instead, you had this:</p>\n\n<pre><code>fn main() {\n    for line in io::stdin().lock().lines() {\n        let line2 = line.unwrap().as_bytes(); // &lt;-- the value returned by unwrap dies here\n        let _value = json().parse(line2).unwrap(); // &lt;-- line2 would be dangling here\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1532, "user_id": 1126810, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4722ab504f153124e74b912fd322a579?s=128&d=identicon&r=PG", "display_name": "chrisdotcode", "link": "https://stackoverflow.com/users/1126810/chrisdotcode"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 0, "closed_date": 1557361409, "answer_count": 2, "score": 0, "last_activity_date": 1557361429, "creation_date": 1557351627, "last_edit_date": 1557361374, "question_id": 56049418, "link": "https://stackoverflow.com/questions/56049418/borrowing-error-while-trying-to-read-json-from-stdin", "closed_reason": "Duplicate", "title": "Borrowing error while trying to read JSON from stdin", "body": "<p>I am trying to parse JSON line-by-line from stdin using the <a href=\"https://github.com/J-F-Liu/pom\" rel=\"nofollow noreferrer\">pom</a> library.</p>\n\n<p>I've stolen the <code>json</code> implementation provided on the homepage (and have omitted that code below; it's not relevant), and am getting a borrow error from the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    for line in io::stdin().lock().lines() {\n        let line2 = line.unwrap().as_bytes();\n        let _value = json().parse(line2).unwrap();\n    }\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n  --&gt; src/main.rs:73:23\n   |\n73 |         let tmpline = line.unwrap().as_bytes();\n   |                       ^^^^^^^^^^^^^------------ temporary value is freed at the end of this statement\n   |                       |\n   |                       creates a temporary which is freed while still in use\n   |                       argument requires that borrow lasts for `'static`\n</code></pre>\n\n<p><a href=\"https://docs.rs/pom/3.0.2/pom/parser/struct.Parser.html#method.parse\" rel=\"nofollow noreferrer\"><code>.parse</code></a> in the pom libray has the type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn parse(&amp;self, input: &amp;'a [I]) -&gt; Result&lt;O&gt;\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.as_bytes\" rel=\"nofollow noreferrer\"><code>.as_bytes()</code></a> has the type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn as_bytes(&amp;self) -&gt; &amp;[u8]\n</code></pre>\n\n<p>Obviously, I'm borrowing incorrectly here, but I'm not entirely sure how to fix this.</p>\n"}, {"tags": ["rust", "pattern-matching", "non-exhaustive-patterns"], "answers": [{"comments": [{"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1557352151, "post_id": 56049375, "comment_id": 98740407, "body": "Yes, restructuring the code will help of course. But I was more interested in hinting the compiler in the original case. However, probably most of the real world cases can be handled in a way you propose."}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 0, "creation_date": 1557352441, "post_id": 56049375, "comment_id": 98740494, "body": "In my situation I have lots of 3-letters assembly mnemonics for opcodes like: LDX, LDY, LDA, STX, STA, etc. It would be nice to keep them as is: just flat enum values, so that they can match original mnemonics. Otherwise, it would be something like LD(X), which is not as readable."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 2, "creation_date": 1557352895, "post_id": 56049375, "comment_id": 98740619, "body": "@dying_sphynx so you want a flat enum but still be able to regroup them, you can&#39;t have both I think, it&#39;s opposite. Maybe there is a crate that flat nested enum. But still I don&#39;t advice it, I found <code>Load(Register::X)</code> way more readable that LDX. Remember, you are doing Rust, not assembly. Express your virtual machine in Rust, don&#39;t just copy assembly. Anyway, my solution or <code>unreachable!</code> solution should produce similar benchmark result so it&#39;s really up to you."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 3, "last_activity_date": 1557351341, "creation_date": 1557351341, "answer_id": 56049375, "question_id": 56049179, "link": "https://stackoverflow.com/questions/56049179/how-do-i-relax-the-non-exhaustive-patterns-check-for-a-nested-match-on-known-var/56049375#56049375", "title": "How do I relax the non-exhaustive patterns check for a nested match on known variants?", "body": "<p>I think that you just need to refactor your code, obviously <code>LoadX</code> and <code>LoadY</code> are very close. So I think you should create a second enumeration that regroup them:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Op {\n    Load(State),\n    Add,\n}\n\nenum State {\n    X,\n    Y,\n}\n\nfn test(o: Op) {\n    match o {\n        Op::Load(state) =&gt; {\n            // do something common with them for code reuse\n            print!(\"Loading \");\n\n            // do something specific to each case:\n            match state {\n                State::X =&gt; print!(\"x\"),\n                State::Y =&gt; print!(\"y\"),\n            }\n\n            println!(\"...\");\n        }\n\n        Op::Add =&gt; println!(\"Adding\"),\n    }\n}\n\nfn main() {\n    test(Op::Load(State::X));\n    test(Op::Load(State::Y));\n    test(Op::Add);\n}\n</code></pre>\n\n<p>This make more sense to me. I think this is a better way to express what you want.</p>\n"}, {"comments": [{"owner": {"reputation": 1842, "user_id": 99032, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8be5d183975ac697ae0caf02a52c0c08?s=128&d=identicon&r=PG", "display_name": "Mike Mueller", "link": "https://stackoverflow.com/users/99032/mike-mueller"}, "edited": false, "score": 2, "creation_date": 1575364056, "post_id": 56050691, "comment_id": 104531468, "body": "&gt; Conceptually, nothing prevents you from doing o = Op::Add between the outer match and the inner match.  <code>o</code> is immutable."}, {"owner": {"reputation": 483, "user_id": 1453671, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7590e977234fd5b2c12ddf2dd0da1a2?s=128&d=identicon&r=PG", "display_name": "farukg", "link": "https://stackoverflow.com/users/1453671/farukg"}, "reply_to_user": {"reputation": 1842, "user_id": 99032, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8be5d183975ac697ae0caf02a52c0c08?s=128&d=identicon&r=PG", "display_name": "Mike Mueller", "link": "https://stackoverflow.com/users/99032/mike-mueller"}, "edited": false, "score": 2, "creation_date": 1584544215, "post_id": 56050691, "comment_id": 107470070, "body": "as @MikeMueller stated, i also wonder if in the case of immutable variables conceptionally it should be possible, right? or is there another reason why this cannot work?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1557362273, "creation_date": 1557362273, "answer_id": 56050691, "question_id": 56049179, "link": "https://stackoverflow.com/questions/56049179/how-do-i-relax-the-non-exhaustive-patterns-check-for-a-nested-match-on-known-var/56050691#56050691", "title": "How do I relax the non-exhaustive patterns check for a nested match on known variants?", "body": "<p>You cannot. Conceptually, nothing prevents you from doing <code>o = Op::Add</code> between the outer match and the inner match. It's totally possible for the variant to change between the two matches. </p>\n\n<p>I'd probably follow <a href=\"https://stackoverflow.com/a/56049375/155423\">Stargateur's code</a>, but if you didn't want to restructure your enum, remember that there are multiple techniques of abstraction in Rust. For example, <em>functions</em> are pretty good for reusing code, and <em>closures</em> (or traits) are good for customization of logic.</p>\n\n<pre><code>enum Op {\n    LoadX,\n    LoadY,\n    Add,\n}\n\nfn load&lt;R&gt;(f: impl FnOnce() -&gt; R) {\n    print!(\"Loading \");\n    f();\n    println!(\"...\");\n}\n\nfn test(o: Op) {\n    match o {\n        Op::LoadX =&gt; load(|| print!(\"x\")),\n        Op::LoadY =&gt; load(|| print!(\"y\")),\n        Op::Add =&gt; println!(\"Adding\"),\n    }\n}\n\nfn main() {\n    test(Op::LoadX);\n    test(Op::LoadY);\n    test(Op::Add);\n}\n</code></pre>\n\n<blockquote>\n  <p>should I just put <code>panic!(\"shouldn't happen\")</code></p>\n</blockquote>\n\n<p>You should use <a href=\"https://doc.rust-lang.org/std/macro.unreachable.html\" rel=\"nofollow noreferrer\"><code>unreachable!</code></a> instead of <code>panic!</code> as it's more semantically correct to the programmer.</p>\n"}], "owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 409, "favorite_count": 1, "accepted_answer_id": 56050691, "answer_count": 2, "score": 3, "last_activity_date": 1557362273, "creation_date": 1557350253, "last_edit_date": 1557361689, "question_id": 56049179, "link": "https://stackoverflow.com/questions/56049179/how-do-i-relax-the-non-exhaustive-patterns-check-for-a-nested-match-on-known-var", "title": "How do I relax the non-exhaustive patterns check for a nested match on known variants?", "body": "<p>How do I persuade the Rust compiler that the internal <code>match</code> expression is fine here, as the outer <code>match</code> has already restricted the possible types?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Op {\n    LoadX,\n    LoadY,\n    Add,\n}\n\nfn test(o: Op) {\n    match o {\n        Op::LoadX | Op::LoadY =&gt; {\n            // do something common with them for code reuse:\n            print!(\"Loading \");\n\n            // do something specific to each case:\n            match o {\n                // now I know that `o` can only be LoadX | LoadY,\n                // but how to persuade the compiler?\n                Op::LoadX =&gt; print!(\"x\"), /* LoadX specific */\n                Op::LoadY =&gt; print!(\"y\"), /* LoadY specific */\n                _ =&gt; panic!(\"shouldn't happen!\"),\n            }\n\n            println!(\"...\");\n        }\n\n        Op::Add =&gt; println!(\"Adding\"),\n    }\n}\n\nfn main() {\n    test(Op::LoadX);\n    test(Op::LoadY);\n    test(Op::Add);\n}\n</code></pre>\n\n<p>I tried two approaches, but neither seems to work.</p>\n\n<ol>\n<li><p>Name the or-pattern and then match using that name:</p>\n\n<pre><code>match o {\n    load@(Op::LoadX | Op::LoadY) =&gt; {\n    // ...\n    match load {\n        // ...\n    }\n} \n</code></pre>\n\n<p>That's not valid Rust syntax.</p></li>\n<li><p>Name and bind every constructor:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match o {\n    load@Op::LoadX | load@Op::LoadY =&gt; {\n    // ...\n    match load {\n       //...\n    }\n} \n</code></pre>\n\n<p>That still doesn't satisfy the exhaustiveness check, hence the same error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0004]: non-exhaustive patterns: `Add` not covered\n  --&gt; src/main.rs:14:19\n   |\n14 |             match load {\n   |                   ^ pattern `Add` not covered\n\n</code></pre></li>\n</ol>\n\n<p>Is there any idiomatic way of solving this problem or should I just put <code>panic!(\"shouldn't happen\")</code> all over the place or restructure the code?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9f3689bec2afc25ee121b64de05a3c3c\" rel=\"nofollow noreferrer\">Rust playground link</a></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 157, "user_id": 10942736, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EneZE.jpg?s=128&g=1", "display_name": "dfalzone - Reinstate Monica", "link": "https://stackoverflow.com/users/10942736/dfalzone-reinstate-monica"}, "is_accepted": false, "score": 0, "last_activity_date": 1557360419, "last_edit_date": 1557360419, "creation_date": 1557359115, "answer_id": 56050383, "question_id": 56046798, "link": "https://stackoverflow.com/questions/56046798/what-does-windowcreationerror-failed-to-create-input-context-mean-with-libegl/56050383#56050383", "title": "What does WindowCreationError &quot;Failed to create input context&quot; mean with libEGL and ggez?", "body": "<p>Running <code>sudo apt-get install libglfw3-dev libgles2-mesa-dev freeglut3-dev</code> and running the program again fixed the problem.</p>\n"}], "owner": {"reputation": 157, "user_id": 10942736, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EneZE.jpg?s=128&g=1", "display_name": "dfalzone - Reinstate Monica", "link": "https://stackoverflow.com/users/10942736/dfalzone-reinstate-monica"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 97, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1557360419, "creation_date": 1557339272, "last_edit_date": 1557359034, "question_id": 56046798, "link": "https://stackoverflow.com/questions/56046798/what-does-windowcreationerror-failed-to-create-input-context-mean-with-libegl", "title": "What does WindowCreationError &quot;Failed to create input context&quot; mean with libEGL and ggez?", "body": "<p>I'm trying to program a game in Rust while working through the <a href=\"https://github.com/ggez/ggez/blob/master/docs/guides/HelloGgez.md\" rel=\"nofollow noreferrer\">ggez tutorial</a>. Here is my code (src/main.rs):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use ggez::*;\n\n// game state information goes here\nstruct State {}\n\n/* Context connects all of the low-level bits for us; GameResult\n   tells us if our game is borken */\nimpl ggez::event::EventHandler for State {\n    fn update(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult&lt;()&gt; {\n        Ok(())\n    }\n\n    fn draw(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult&lt;()&gt; {\n        Ok(())\n    }\n}\n\nfn main() {\n    let state = &amp;mut State { };\n    println!(\"Hello, world!\");\n    let c = conf::Conf::new();\n    let (ref mut ctx, ref mut event_loop) = ContextBuilder::new(\"ggez-0\", \"My Name\")\n        .conf(c)\n        .build()\n        .unwrap();\n    event::run(ctx, event_loop, state).unwrap();\n}\n</code></pre>\n\n<p>I expect the compiler to have the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling ggez-0 v0.1.0 (/home/public/devel/rust/ggez-0)\nwarning: unused variable: `ctx`\n --&gt; src/main.rs:9:26\n  |\n9 |     fn update(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult&lt;()&gt; {\n  |                          ^^^ help: consider prefixing with an underscore: `_ctx`\n  |\n  = note: #[warn(unused_variables)] on by default\n\nwarning: unused variable: `ctx`\n  --&gt; src/main.rs:13:24\n   |\n13 |     fn draw(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult&lt;()&gt; {\n   |                        ^^^ help: consider prefixing with an underscore: `_ctx`\n\n    Finished dev [unoptimized + debuginfo] target(s) in 17.55s\n     Running `target/debug/ggez-0`\nHello, world!\n</code></pre>\n\n<p>followed by a little GUI window popping up.</p>\n\n<p>However, when I run the code, I get this output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling ggez-0 v0.1.0 (/home/public/devel/rust/ggez-0)\nwarning: unused variable: `ctx`\n --&gt; src/main.rs:9:26\n  |\n9 |     fn update(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult&lt;()&gt; {\n  |                          ^^^ help: consider prefixing with an underscore: `_ctx`\n  |\n  = note: #[warn(unused_variables)] on by default\n\nwarning: unused variable: `ctx`\n  --&gt; src/main.rs:13:24\n   |\n13 |     fn draw(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult&lt;()&gt; {\n   |                        ^^^ help: consider prefixing with an underscore: `_ctx`\n\n    Finished dev [unoptimized + debuginfo] target(s) in 17.55s\n     Running `target/debug/ggez-0`\nHello, world!\nlibEGL warning: DRI3: failed to query the version\nlibEGL warning: DRI2: failed to authenticate\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: WindowCreationError(Window(OsError(\"Failed to create input context: XError(XError { description: \\\"BadRequest (invalid request code or no such operation)\\\", error_code: 1, request_code: 155, minor_code: 1 })\")))', src/libcore/result.rs:997:5\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n\n<p>and no GUI window. Googling the verbatim text of the error message didn't help, and I don't understand much of what it is saying. What is going on? </p>\n\n<p>I'm using version 1.34.0 of the Rust compiler, running on Ubuntu 18.10 over SSH with the option <code>-XC</code> so that I can get GUIs, and other GUI programs (like Firefox, Writer, etc.) work fine for me. Some forums advised using <code>sudo apt install mesa-utils-extra</code> for similar issues, but that changed nothing for me.</p>\n"}, {"tags": ["c++", "rust", "traits", "c++-concepts"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 9, "creation_date": 1557335377, "post_id": 56045846, "comment_id": 98733227, "body": "To acknowledge this up front: I know this question is in danger of being closed as &quot;too broad&quot;. And if the vast majority of you think so, well so be it. <i>But</i>: I think the question is still fine for this site (it&#39;s a fairly specific question about two features) <i>and</i> I don&#39;t think it&#39;s useful to break this question into multiple sub-questions."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1557336180, "post_id": 56045846, "comment_id": 98733625, "body": "To those casting &quot;too broad&quot; CVs in record time: could someone elaborate how you think this question could be asked in a better way? Some tips on what you would accept as a good question?"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 3, "creation_date": 1557336410, "post_id": 56045846, "comment_id": 98733740, "body": "I was one of them and I think this kind of question is just not really constructive, cannot be answered properly and in general it does not fit SO&#39;s format very well.  I&#39;d like to see a detailed comparison of the above mentioned features of the two languages -- as an article somewhere perhaps, but not as a short answer.  I think @Shepmaster&#39;s <a href=\"https://meta.stackoverflow.com/questions/251328\">link</a> sums this up pretty well"}, {"owner": {"user_type": "does_not_exist", "display_name": "user2100815"}, "edited": false, "score": 0, "creation_date": 1557336484, "post_id": 56045846, "comment_id": 98733781, "body": "I voted to close because I don&#39;t think that questions like &quot;why is feature X in language Y like/different from feature A in language B&quot;  are good or worthwhile questions. We have different languages because different people have or like different ways of thinking about things."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1557336551, "post_id": 56045846, "comment_id": 98733818, "body": "Thanks for your answers! @NeilButterworth Note that I didn&#39;t ask <i>why</i> they are different, though. I just asked for the factual differences."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1557336584, "post_id": 56045846, "comment_id": 98733832, "body": "<i>how you think this question could be asked in a better way</i> \u2014 right now, it appears that any answerer would have to be quite expert in Rust and C++. For example, you off-handedly mention &quot;Rust&#39;s associated types and consts&quot;, but a C++ expert might not know all the details of such. This means that the pool of qualified people will be <i>very</i> small. It&#39;s possible that if you describe all the specifics of the technology you know, the question may be easier."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557337063, "post_id": 56045846, "comment_id": 98734082, "body": "Random responses from the web: <a href=\"https://news.ycombinator.com/item?id=9275597\" rel=\"nofollow noreferrer\">HN</a>; <a href=\"https://www.reddit.com/r/rust/comments/9jtzir/c_gets_concepts_aka_traits/\" rel=\"nofollow noreferrer\">Reddit</a>; <a href=\"https://users.rust-lang.org/t/how-to-design-good-concepts-and-use-them-well-c/9136?u=shepmaster\" rel=\"nofollow noreferrer\">URLO</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 9, "creation_date": 1557337432, "post_id": 56045846, "comment_id": 98734272, "body": "As a relevant parallel question, <a href=\"https://stackoverflow.com/q/28123453/155423\">What is the difference between traits in Rust and typeclasses in Haskell?</a> has a score of 130 at the moment and is relatively well viewed."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557348462, "post_id": 56045846, "comment_id": 98739114, "body": "@Shepmaster I think questions with a very small pool of people qualified to answer are probably the ones most in need of being asked and answered on a site like this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1557348894, "post_id": 56045846, "comment_id": 98739292, "body": "@KyleStrand note that I don\u2019t say <i>anything</i> about if the question is on topic or not. In fact, in another comment I provide evidence of similar questions that are apparently on topic and well-received. I also didn\u2019t vote to close. OP <b>asked</b> for ways to improve the question and that\u2019s what that comment is about. My own interactions with Lukas have shown me that they know about Rust; they can use that knowledge to \u201creach across\u201d to experienced C++ developers who don\u2019t have as deep of Rust knowledge and improve the chances of a good answer."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557349098, "post_id": 56045846, "comment_id": 98739375, "body": "@Shepmaster Yes, and I was a bit surprised by your comment immediately prior to mine, but now I understand the last sentence of your first comment better."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1557349376, "post_id": 56045846, "comment_id": 98739466, "body": "I feel like there&#39;s a lot of baggage to the statement &quot;In Rust, the main tool for abstraction are traits&quot;. I assume you&#39;re using <i>abstraction</i> in a very narrow sense (obviously, functions, <code>for</code> loops, <code>struct</code>s and lifetimes are also abstractions) but I&#39;m not sure what specific kind of abstraction you&#39;re talking about, possibly because I also don&#39;t really understand C++ concepts so I don&#39;t understand in what context one would want to compare them."}, {"owner": {"reputation": 9551, "user_id": 9837301, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9414V.png?s=128&g=1", "display_name": "JaMiT", "link": "https://stackoverflow.com/users/9837301/jamit"}, "edited": false, "score": 0, "creation_date": 1557937654, "post_id": 56045846, "comment_id": 98937059, "body": "What exactly do you mean when you say &quot;zero-overhead&quot; and &quot;zero cost&quot;? That is, which factors do you intend to be considered? Which should not be considered? For example, a C++ template can have a ton of space overhead, as each instantiation takes up space in the executable. An abstract class, on the other hand, permits code sharing, potentially reducing executable size. Does that mean space is not a concern for you? (Or, if &quot;zero&quot; is not that important, maybe drop those phrases from the question?)"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 9551, "user_id": 9837301, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9414V.png?s=128&g=1", "display_name": "JaMiT", "link": "https://stackoverflow.com/users/9837301/jamit"}, "edited": false, "score": 0, "creation_date": 1557938156, "post_id": 56045846, "comment_id": 98937293, "body": "@JaMiT I agree, mentioning those isn&#39;t really helpful. I edited the question to remove those."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1557390859, "post_id": 56055342, "comment_id": 98751354, "body": "I have made this answer as exhaustive as possible; if there are any issues, please let me know."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1557391193, "post_id": 56055342, "comment_id": 98751557, "body": "&quot;Structural Typing is better a bridging 3rd party libraries&quot; - Only if the requirements are formulated in a way that the type can be adapted. If there&#39;s a requirement to be able to call a <code>read</code> member on a type, but the library only provides <code>Read</code>, there&#39;s very little you can do. The Rust <code>impl</code> blocks can adapt."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1557391960, "post_id": 56055342, "comment_id": 98751977, "body": "I&#39;ve been wondering something else about C++ concepts, but I don&#39;t know if the question even makes sense or should be answered here. So Rust&#39;s trait solver is often described as &quot;basically Prolog&quot;. I wonder if some similar kind of logic needs to be done inside C++ compiler now or if concepts don&#39;t require that for some reason. Sorry again if this question is vague and maybe not useful."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1557400673, "post_id": 56055342, "comment_id": 98756869, "body": "@LukasKalbertodt: There is no Hindley Milner type inference ongoing with C++ concepts; so no."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1557400816, "post_id": 56055342, "comment_id": 98756940, "body": "@SebastianRedl: Sure. However that&#39;s the difference between always needing an adapter struct (Rust) vs only needing an adapter struct to smooth away differences (C++). Furthermore, using free functions rather than member functions allows only needing to add one function (<code>read</code> here, which delegates to <code>Read</code>)."}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 1, "creation_date": 1557948214, "post_id": 56055342, "comment_id": 98941749, "body": "Is there anything in C++ that can be compared to other kinds of associated items, such as associated constants or associated types?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 2, "creation_date": 1557988368, "post_id": 56055342, "comment_id": 98951925, "body": "@RalfJung: In C++ this would static member variables (const ones) and nested typedefs or nested classes."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 27, "last_activity_date": 1557390821, "creation_date": 1557390821, "answer_id": 56055342, "question_id": 56045846, "link": "https://stackoverflow.com/questions/56045846/what-are-the-similarities-and-differences-between-cs-concepts-and-rusts-trai/56055342#56055342", "title": "What are the similarities and differences between C++&#39;s concepts and Rust&#39;s traits?", "body": "<p><em>Disclaimer: I have not yet used concepts, all I know about them was gleaned from the various proposals and cppreference, so take this answer with a grain of salt.</em></p>\n\n<h3>Run-Time Polymorphism</h3>\n\n<p>Rust Traits are used both for Compile-Time Polymorphism and, sometimes, Run-Time Polymorphism; Concepts are only about Compile-Time Polymorphism.</p>\n\n<h3>Structural vs Nominal.</h3>\n\n<p>The greatest difference between Concepts and Traits is that Concepts use <em>structural typing</em> whereas Traits use <em>nominal typing</em>:</p>\n\n<ul>\n<li>In C++ a type never explicitly satisfies a Concept; it may \"accidentally\" satisfy it if it happens to satisfy all requirements.</li>\n<li>In Rust a specific syntactic construct <code>impl Trait for Type</code> is used to explicitly indicates that a type implements a Trait.</li>\n</ul>\n\n<p>There are a number of consequences; in general Nominal Typing is better from a maintainability point of view -- adding a requirement to a Trait -- whereas Structural Typing is better a bridging 3rd party libraries -- a type from library A can satisfy a Concept from library B without them being aware of each other.</p>\n\n<h3>Constraints</h3>\n\n<p>Traits are mandatory:</p>\n\n<ul>\n<li>No method can be called on a variable of a generic type without this type being required to implement a trait providing the method.</li>\n</ul>\n\n<p>Concepts are entirely optional:</p>\n\n<ul>\n<li>A method can be called on a variable of a generic type without this type being required to satisfy any Concept, or being constrained in any way.</li>\n<li>A method can be called on a variable of a generic type satisfying a Concept (or several) without that method being specified by any Concept or Constraint.</li>\n<li>Constraints (see note) can be entirely ad-hoc, and specify requirements without using a named Concept; and once again, they are entirely optional.</li>\n</ul>\n\n<p><em>Note: a Constraint is introduced by a <code>requires</code> clause and specifies either ad-hoc requirements or requirements based on Concepts.</em></p>\n\n<h3>Requirements</h3>\n\n<p>The set of expressible requirements is different:</p>\n\n<ul>\n<li>Concepts/Constraints work by substitution, so allow the whole breadth of the languages; requirements include: nested types/constants/variables, methods, fields, ability to be used as an argument of another function/method, ability to used as a generic argument of another type, and combinations thereof.</li>\n<li>Traits, by contrast, only allow a small set of requirements: associated types/constants, and methods.</li>\n</ul>\n\n<h3>Overload Selection</h3>\n\n<p>Rust has no concept of ad-hoc overloading, overloading only occurs by Traits and specialization is not possible yet.</p>\n\n<p>C++ Constraints can be used to \"order\" overloads from least specific to most specific, so the compiler can automatically select the most specific overload for which requirements are satisfied.</p>\n\n<p><em>Note: prior to this, either SFINAE or tag-dispatching would be used in C++ to achieve the selection; calisthenics were required to work with open-ended overload sets.</em></p>\n\n<h3>Disjunction</h3>\n\n<p><em>How to use this feature is not quite clear to me yet.</em></p>\n\n<p>The requirement mechanisms in Rust are purely additive (conjunctions, aka <code>&amp;&amp;</code>), in contrast, in C++ <code>requires</code> clauses can contain disjunctions (aka <code>||</code>).</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3384, "favorite_count": 10, "answer_count": 1, "score": 47, "last_activity_date": 1557938106, "creation_date": 1557335372, "last_edit_date": 1557938106, "question_id": 56045846, "link": "https://stackoverflow.com/questions/56045846/what-are-the-similarities-and-differences-between-cs-concepts-and-rusts-trai", "title": "What are the similarities and differences between C++&#39;s concepts and Rust&#39;s traits?", "body": "<p>In Rust, the main tool for abstraction are <em>traits</em>. In C++, there are two tools for abstractions: abstract classes and templates. To get rid of some of the disadvantages of using templates (e.g. hard to read error messages), C++ introduced <em>concepts</em> which are <a href=\"https://en.cppreference.com/w/cpp/language/constraints\" rel=\"noreferrer\">\"named sets of requirements\"</a>. </p>\n\n<p>Both features <em>seem</em> to be fairly similar: </p>\n\n<ul>\n<li>Defining a trait/concept is done by listing requirements. </li>\n<li>Both can be used to bound/restrict generic/template type parameters.</li>\n<li>Rust traits and C++ templates with concepts are both monomorphized (I know Rust traits can also be used with dynamic dispatch, but that's a different story). </li>\n</ul>\n\n<p>But from what I understand, there are also notable differences. For example, C++'s concepts seem to define a set of expressions that have to be valid instead of listing function signatures. But there is a lot of different and confusing information out there (maybe because concepts only land in C++20?). That's why I'd like to know: <strong>what exactly are the differences between and the similarities of C++'s concepts and Rust's traits?</strong></p>\n\n<p>Are there features that are only offered by either concepts or traits? E.g. what about Rust's associated types and consts? Or bounding a type by multiple traits/concepts? </p>\n"}, {"tags": ["string", "rust", "concatenation"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1557334288, "post_id": 56045218, "comment_id": 98732680, "body": "See also <a href=\"https://stackoverflow.com/q/30154541/155423\">How do I concatenate strings?</a>. Notably, the first sentence: <i>When you concatenate strings, you need to allocate memory to store the result</i>. In a no_std environment, you don&#39;t have an allocator, so you need to do the allocation for yourself. This is often just a &quot;big enough&quot; <code>u8</code> array on the stack."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1557334343, "post_id": 56045218, "comment_id": 98732707, "body": "See also <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a> and <a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a> for discussion why your proposed functions cannot make sense, even when you have access to the standard library."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1557334455, "post_id": 56045218, "comment_id": 98732768, "body": "Also, <code>str::from_utf8</code> appears to be <b>exactly</b> what you are asking for in your first example, which doesn&#39;t seem to involve <i>concatenation</i> at all. It also has the same problem of nothing owning the underlying bytes."}], "owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 706, "favorite_count": 0, "closed_date": 1557334176, "answer_count": 0, "score": 1, "last_activity_date": 1557334367, "creation_date": 1557333024, "last_edit_date": 1557334106, "question_id": 56045218, "link": "https://stackoverflow.com/questions/56045218/how-do-i-concatenate-strings-in-a-no-std-environment", "closed_reason": "Duplicate", "title": "How do I concatenate strings in a no_std environment?", "body": "<p>I'm trying to concatenate two strings (<code>&amp;str</code>) or convert a byte array in a string in Rust without using std. I saw <code>core::str::from_utf8</code> but that's not what I'm looking for.</p>\n\n<p>I'm searching something like</p>\n\n<pre><code>let b: [u8; 2] = [97, 98];\nlet result: &amp;str = core::str::array_to_string(b); // \"ab\"\n</code></pre>\n\n<p>or</p>\n\n<pre><code>let a: &amp;str = \"Hello \";\nlet b: &amp;str = \"world !\";\nlet result: &amp;str = core::str::concatenate(a, b);\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1557316632, "post_id": 56039703, "comment_id": 98722423, "body": "please read <a href=\"https://stackoverflow.com/questions/how-to-ask\">How to Ask</a>, <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1557325764, "post_id": 56039703, "comment_id": 98728191, "body": "Unrelated to your question, but <code>rustc_serialize</code> has been deprecated for several years. Unless you have a very good reason to still be using it, I&#39;d recommend switching to <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\"><code>serde</code></a>."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1557329567, "post_id": 56039703, "comment_id": 98730507, "body": "Also, does the key you&#39;re searching for actually exist? Generally if you index into a collection in Rust, panicking is the expected outcome if the index does not exist. Collections will usually provide a <code>get</code> method which returns an <code>Option</code>, for the cases where you&#39;re not sure if the thing you&#39;re looking for is there."}], "owner": {"reputation": 11, "user_id": 9454758, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-D9tJBERbrqU/AAAAAAAAAAI/AAAAAAAAAoo/AgkyDcGQUgI/photo.jpg?sz=128", "display_name": "Suriya Ganesh", "link": "https://stackoverflow.com/users/9454758/suriya-ganesh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1557319331, "creation_date": 1557314779, "last_edit_date": 1557319331, "question_id": 56039703, "link": "https://stackoverflow.com/questions/56039703/panic-while-using-json-object-and-iterating-through-string-values", "title": "&#39;panic!&#39; while using Json object and iterating through string values", "body": "<p>I am trying to find values inside a JSON file (output.json) Using keys that are given in a text file (keys.txt).</p>\n\n<p>I loaded keys.txt and used strip(\",\") to create an iterable. I have converted the output.json file into 'output_data' variable as type rustc_serialize::json::Json by using Json::from_str(). </p>\n\n<pre><code>let output_json = process_file(&amp;output);\nlet mut keys_values = process_keys(&amp;keys)\n\nlet mut split = keys_values.split(\",\");\n\nfor s in split {\n   println!(\"{}\",output_json[s])\n}\n</code></pre>\n\n<p>the query, output_data[\"name\"] provides the corresponding value. But, Panics when given the &amp;str value I got from the iterable using strip(). </p>\n"}, {"tags": ["macos", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1557305358, "post_id": 56036699, "comment_id": 98716097, "body": "<a href=\"https://forum.qt.io/topic/101278/build-make-error-ld-malformed-file-unknown-enumerated-scalar-platform-zippered/4\" rel=\"nofollow noreferrer\">forum.qt.io/topic/101278/&hellip;</a>?"}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1557312421, "post_id": 56036699, "comment_id": 98720080, "body": "@hellow Is there a way to comment on edit reviews? ...anyway, why is the &quot;macos&quot; tag not appropriate for this question? I think &quot;macos&quot; defines the context of it, maybe even more than the &quot;rustc&quot; tag."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1557313803, "post_id": 56036699, "comment_id": 98720924, "body": "@chpio IMHO the macOS tag is not appropiate here, because this question is not related to the macOS API or macOS-specific behavior (as described in the tag info). But rather in the linker used on macOS (e.g. the SDK). But it&#39;s a peer review, if two people think it&#39;s okay, then it&#39;s okay :)"}], "answers": [{"tags": [], "owner": {"reputation": 343, "user_id": 4501874, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HyAmz.jpg?s=128&g=1", "display_name": "Abhay", "link": "https://stackoverflow.com/users/4501874/abhay"}, "is_accepted": false, "score": 1, "last_activity_date": 1557308743, "creation_date": 1557308743, "answer_id": 56037825, "question_id": 56036699, "link": "https://stackoverflow.com/questions/56036699/cannot-compile-basic-rust-file/56037825#56037825", "title": "Cannot compile basic rust file", "body": "<p><strong>Reference:</strong> <a href=\"https://github.com/golang/go/issues/31159#issuecomment-481910401\" rel=\"nofollow noreferrer\">Solution taken from</a></p>\n\n<p>FYI, If you want to stay on xcode 9.4.1, you can do the following:</p>\n\n<p>If you are running on Mojave, you will need to install the MacOS headers in the base system:</p>\n\n<p><code>sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /</code></p>\n"}], "owner": {"reputation": 343, "user_id": 4501874, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HyAmz.jpg?s=128&g=1", "display_name": "Abhay", "link": "https://stackoverflow.com/users/4501874/abhay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1559831208, "creation_date": 1557304707, "last_edit_date": 1559831208, "question_id": 56036699, "link": "https://stackoverflow.com/questions/56036699/cannot-compile-basic-rust-file", "title": "Cannot compile basic rust file", "body": "<ul>\n<li>OS: macOS Mojave 10.14.4 x86_64</li>\n<li>LLVM version: 8.0</li>\n<li>xcode-select version: 2354</li>\n<li>rustc 1.34.1</li>\n</ul>\n\n<p>When run: <code>rustc main.rs</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-m64\" \"-L\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"main.main.7rcbfp3g-cgu.0.rcgu.o\" \"main.main.7rcbfp3g-cgu.1.rcgu.o\" \"main.main.7rcbfp3g-cgu.2.rcgu.o\" \"main.main.7rcbfp3g-cgu.3.rcgu.o\" \"main.main.7rcbfp3g-cgu.4.rcgu.o\" \"main.main.7rcbfp3g-cgu.5.rcgu.o\" \"-o\" \"main\" \"main.4s37gsrti678ik8u.rcgu.o\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-69468557cf2e6e61.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-9c46cbe4b20f76c9.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libbacktrace_sys-1bab212c0168b306.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-ccbdb02fb3eef923.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_demangle-e705bf8976fe8243.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-85176bbe7f63adc0.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-80e2cac000a11404.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_core-1c0ce4c4b6e07a27.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-f81ce6e54e0bbe9c.rlib\" \"/Users/abhay/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-d2154badfa119bbc.rlib\" \"-lSystem\" \"-lresolv\" \"-lc\" \"-lm\"\n  = note: ld: malformed file\n          /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/lib/libm.tbd:4:18: error: unknown enumerated scalar\n          platform:        zippered\n                           ^~~~~~~~\n           file '/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/lib/libm.tbd'\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\n\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1557290512, "post_id": 56033289, "comment_id": 98710093, "body": "Apologies - my original answer removed the iterator but your question is asking how to join an iterator and not allocate the extra vector."}, {"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1557290616, "post_id": 56033289, "comment_id": 98710127, "body": "@SimonWhitehead No worries; I was wondering if I should have made that clearer."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1557292151, "post_id": 56033289, "comment_id": 98710518, "body": "Looks like the <code>itertools</code> crate <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e208a26d869de89f6b998e6bcf6b5a77\" rel=\"nofollow noreferrer\">doesn&#39;t allocate the vector</a>"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 2, "creation_date": 1557295479, "post_id": 56033289, "comment_id": 98711553, "body": "Note that depending on the exact characteristics of your iterator, collecting into a vector of slices and then joining could actually be faster than using Websterix&#39;s method or <code>itertools</code>, since <code>SliceConcatExt::join</code> can calculate the needed size for the full string ahead of time and thus definitely doesn&#39;t need to reallocate during accumulation; whereas the other methods may have to reallocate the string. You should definitely benchmark."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1557308247, "post_id": 56033289, "comment_id": 98717719, "body": "@SebastianRedl But <code>collect::&lt;Vec&lt;&amp;str&gt;&gt;</code> would need to reallocate, but it&#39;s a lot smaller than the string buffer, so i guess that would be a faster?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 1, "creation_date": 1557319522, "post_id": 56033289, "comment_id": 98724112, "body": "@chpio It has to allocate, but not reallocate if the iterator gives a good size hint."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1557321061, "post_id": 56033289, "comment_id": 98725103, "body": "@SebastianRedl yeah, you&#39;re right."}], "answers": [{"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 3, "creation_date": 1557293397, "post_id": 56033951, "comment_id": 98710894, "body": "This answer does not reproducing the OP&#39;s needs. OP is asking about interspersed with some constant string (e.g. &quot;\\n&quot;)?."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 1, "creation_date": 1557306977, "post_id": 56033951, "comment_id": 98717005, "body": "also this should work without <code>flat_map</code>, as <i>String</i> already implements <code>Extend&lt;&amp;str&gt;</code>."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": -1, "last_activity_date": 1557292550, "creation_date": 1557292550, "answer_id": 56033951, "question_id": 56033289, "link": "https://stackoverflow.com/questions/56033289/join-iterator-of-str/56033951#56033951", "title": "Join iterator of &amp;str", "body": "<p>there's relevant example in rust documentation: <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\">here</a>.  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let words = [\"alpha\", \"beta\", \"gamma\"];\n\n// chars() returns an iterator\nlet merged: String = words.iter()\n                          .flat_map(|s| s.chars())\n                          .collect();\nassert_eq!(merged, \"alphabetagamma\");\n</code></pre>\n\n<p>You can also use <code>Extend</code> trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f&lt;'a, I: Iterator&lt;Item=&amp;'a str&gt;&gt;(data: I) -&gt; String {\n    let mut ret = String::new();\n    ret.extend(data);\n    ret\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 452, "user_id": 728049, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3004f12e2f935d61b78e0616932daa2a?s=128&d=identicon&r=PG", "display_name": "mdonoughe", "link": "https://stackoverflow.com/users/728049/mdonoughe"}, "edited": false, "score": 1, "creation_date": 1608534925, "post_id": 56033952, "comment_id": 115603566, "body": "The reason this is slow is because you&#39;re using + to create two new Strings on every iteration. If you use a single string (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f2740a132f69b5d41d14a3472c98674e\" rel=\"nofollow noreferrer\">playground</a>) it can work better than collect and join (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=5fa149bbd78707d7ff4e257d38318361\" rel=\"nofollow noreferrer\">playground</a>)."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1618834996, "post_id": 56033952, "comment_id": 118714763, "body": "added <code>black_box</code> and create the vec for each test individually (because of cache warming) (<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=9316d8202ee375f35305c8ec938f5f47\" rel=\"nofollow noreferrer\">playgroud</a>). Playground isn&#39;t that good for benchmarking due to massive variance in latency/duration, but the fold variant seems to be slightly slower (over multiple runs)."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1618836844, "post_id": 56033952, "comment_id": 118715606, "body": "<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=6d7a6e7427a715d853ce32440a0ad59e\" rel=\"nofollow noreferrer\">v2</a> with <code>black_box(xs).iter().copied()</code> takes now twice as long for collect+join over fold (the <code>black_box(xs)</code> doesn&#39;t matter, <code>xs</code> is the same). &lt;3 for microbenchmarking"}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1618837337, "post_id": 56033952, "comment_id": 118715838, "body": "I guess they optimize something like <code>vec![&quot;hey&quot;; 100_000].into_iter().collect&lt;Vec&lt;_&gt;&gt;</code> to just return the original vec?!"}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1618838047, "post_id": 56033952, "comment_id": 118716164, "body": "Yes, <a href=\"https://doc.rust-lang.org/stable/src/alloc/vec/spec_from_iter.rs.html#41\" rel=\"nofollow noreferrer\">they do</a>"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 7, "last_activity_date": 1557305093, "last_edit_date": 1557305093, "creation_date": 1557292557, "answer_id": 56033952, "question_id": 56033289, "link": "https://stackoverflow.com/questions/56033289/join-iterator-of-str/56033952#56033952", "title": "Join iterator of &amp;str", "body": "<p>You can do it by using <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold\" rel=\"noreferrer\"><code>fold</code></a> function of the iterator easily:</p>\n\n<pre><code>let s = it.fold(String::new(), |a, b| a + b + \"\\n\");\n</code></pre>\n\n<p>The Full Code will be like following:</p>\n\n<pre><code>fn main() {\n    let xs = vec![\"first\", \"second\", \"third\"];\n    let it = xs.into_iter();\n\n    // let s = it.collect::&lt;Vec&lt;&amp;str&gt;&gt;().join(\"\\n\");\n\n    let s = it.fold(String::new(), |a, b| a + b + \"\\n\");\n    let s = s.trim_end();\n\n    println!(\"{:?}\", s);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b8669503827b705b0790a3c155209547\" rel=\"noreferrer\">Playground</a></p>\n\n<p>EDIT: After the comment of Sebastian Redl I have checked the performance cost of the fold usage and created a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0d9e93ec8ddfcbf86f0294c3f011eedf\" rel=\"noreferrer\">benchmark test</a> on playground.</p>\n\n<p>You can see that <code>fold</code> usage takes significantly more time for the many iterative approaches. </p>\n\n<p><em>Did not check the allocated memory usage though</em>.</p>\n"}, {"tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": false, "score": 8, "last_activity_date": 1557307269, "last_edit_date": 1557307269, "creation_date": 1557306011, "answer_id": 56037073, "question_id": 56033289, "link": "https://stackoverflow.com/questions/56033289/join-iterator-of-str/56037073#56037073", "title": "Join iterator of &amp;str", "body": "<p>You could use the <em>itertools</em> crate for that. I use the <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.intersperse\" rel=\"noreferrer\"><em>intersperse</em></a> helper in the example, it is pretty much the <em>join</em> equivalent for iterators.</p>\n\n<p><code>cloned()</code> is needed to convert <code>&amp;&amp;str</code> items to <code>&amp;str</code> items, it is not doing any allocations. It can be eventually replaced by <code>copied()</code> when <code>rust@1.36</code> gets a stable release.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::Itertools; // 0.8.0\n\nfn main() {\n    let words = [\"alpha\", \"beta\", \"gamma\"];\n    let merged: String = words.iter().cloned().intersperse(\", \").collect();\n    assert_eq!(merged, \"alpha, beta, gamma\");\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=99e553443f1c151e9fa8eb87f2f72063\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5860, "favorite_count": 0, "closed_date": 1557321409, "answer_count": 3, "score": 13, "last_activity_date": 1557307269, "creation_date": 1557287624, "last_edit_date": 1557294467, "question_id": 56033289, "link": "https://stackoverflow.com/questions/56033289/join-iterator-of-str", "closed_reason": "Duplicate", "title": "Join iterator of &amp;str", "body": "<p>What is the canonical method to convert an <code>Iterator&lt;&amp;str&gt;</code> to a <code>String</code>, interspersed with some constant string (e.g. <code>\"\\n\"</code>)?</p>\n\n<p>For instance, given:</p>\n\n<pre><code>let xs = vec![\"first\", \"second\", \"third\"];\nlet it = xs.iter();\n</code></pre>\n\n<p>There is a way to produce a string <code>s</code> by collecting into some <code>Iterable</code> and <code>join</code>ing the result:</p>\n\n<pre><code>let s = it\n    .map(|&amp;x| x)\n    .collect::&lt;Vec&lt;&amp;str&gt;&gt;()\n    .join(\"\\n\");\n</code></pre>\n\n<p>However, this unnecessarily allocates memory for a <code>Vec&lt;&amp;str&gt;</code>. Is there a more direct method?</p>\n"}, {"tags": ["git", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 842, "user_id": 1085128, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9798134a47d85c790e2ee0da92f66a9e?s=128&d=identicon&r=PG", "display_name": "mako", "link": "https://stackoverflow.com/users/1085128/mako"}, "edited": false, "score": 0, "creation_date": 1557294792, "post_id": 56033867, "comment_id": 98711352, "body": "The project now contains two gitignores, one at root, and the other in the rust crate directory, each containing ` /rust/rusttermpose.sublime-workspace rusttermpose.sublime-workspace /rusttermpose.sublime-workspace *.sublime-workspace ` It hasn&#39;t helped."}, {"owner": {"reputation": 1660, "user_id": 5501407, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Cz29B.jpg?s=128&g=1", "display_name": "R4444", "link": "https://stackoverflow.com/users/5501407/r4444"}, "reply_to_user": {"reputation": 842, "user_id": 1085128, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9798134a47d85c790e2ee0da92f66a9e?s=128&d=identicon&r=PG", "display_name": "mako", "link": "https://stackoverflow.com/users/1085128/mako"}, "edited": false, "score": 0, "creation_date": 1557295154, "post_id": 56033867, "comment_id": 98711445, "body": "If you have multiple gitignores then managing them become a headache. Please refer to this question - <a href=\"https://stackoverflow.com/questions/3305869/are-multiple-gitignores-frowned-on\" title=\"are multiple gitignores frowned on\">stackoverflow.com/questions/3305869/&hellip;</a> so you have to provide the paths with respect to the current directory in which your gitignore is."}, {"owner": {"reputation": 1660, "user_id": 5501407, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Cz29B.jpg?s=128&g=1", "display_name": "R4444", "link": "https://stackoverflow.com/users/5501407/r4444"}, "reply_to_user": {"reputation": 842, "user_id": 1085128, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9798134a47d85c790e2ee0da92f66a9e?s=128&d=identicon&r=PG", "display_name": "mako", "link": "https://stackoverflow.com/users/1085128/mako"}, "edited": false, "score": 0, "creation_date": 1557296093, "post_id": 56033867, "comment_id": 98711738, "body": "@mako I edited my answer. Hope this will work for you."}], "tags": [], "owner": {"reputation": 1660, "user_id": 5501407, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Cz29B.jpg?s=128&g=1", "display_name": "R4444", "link": "https://stackoverflow.com/users/5501407/r4444"}, "is_accepted": false, "score": 1, "last_activity_date": 1557295553, "last_edit_date": 1557295553, "creation_date": 1557291997, "answer_id": 56033867, "question_id": 56033011, "link": "https://stackoverflow.com/questions/56033011/cargo-publish-is-not-ignoring-files-in-gitignore/56033867#56033867", "title": "cargo publish is not ignoring files in .gitignore", "body": "<p>If I understood your question correct, you can mention it as:</p>\n\n<pre><code># Workspace files\n*.sublime-workspace\n</code></pre>\n\n<p>It will ignore <code>all</code> the files with <code>.sublime-workspace</code> extension.</p>\n\n<p>You can also do:</p>\n\n<pre><code>/rusttermpose.sublime-workspace\n</code></pre>\n\n<p>But not:</p>\n\n<pre><code>./rusttermpose.sublime-workspace\n</code></pre>\n\n<p>i.e. do it relative to your root.</p>\n\n<p>You can also do (to ignore files in sub directories):</p>\n\n<pre><code>**/*.sublime-workspace\n</code></pre>\n\n<p>or (including the current directory)</p>\n\n<pre><code>**.sublime-workspace\n</code></pre>\n\n<p>If you are unsure of the exact directory structure.</p>\n"}, {"tags": [], "owner": {"reputation": 842, "user_id": 1085128, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9798134a47d85c790e2ee0da92f66a9e?s=128&d=identicon&r=PG", "display_name": "mako", "link": "https://stackoverflow.com/users/1085128/mako"}, "is_accepted": true, "score": 1, "last_activity_date": 1557376496, "creation_date": 1557376496, "answer_id": 56052259, "question_id": 56033011, "link": "https://stackoverflow.com/questions/56033011/cargo-publish-is-not-ignoring-files-in-gitignore/56052259#56052259", "title": "cargo publish is not ignoring files in .gitignore", "body": "<p>Yep, it's a bug. Been there since /10/18</p>\n\n<p>It only afflicts crates in subdirectories of the git project.</p>\n\n<p><a href=\"https://github.com/rust-lang/cargo/issues/6188\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/cargo/issues/6188</a></p>\n"}], "owner": {"reputation": 842, "user_id": 1085128, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9798134a47d85c790e2ee0da92f66a9e?s=128&d=identicon&r=PG", "display_name": "mako", "link": "https://stackoverflow.com/users/1085128/mako"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 299, "favorite_count": 0, "accepted_answer_id": 56052259, "answer_count": 2, "score": 1, "last_activity_date": 1557376496, "creation_date": 1557285229, "last_edit_date": 1557294924, "question_id": 56033011, "link": "https://stackoverflow.com/questions/56033011/cargo-publish-is-not-ignoring-files-in-gitignore", "title": "cargo publish is not ignoring files in .gitignore", "body": "<pre><code>\u00bb cargo publish\n    Updating crates.io index\nwarning: manifest has no license, license-file, documentation, homepage or repository.\nSee https://doc.rust-lang.org/cargo/reference/manifest.html#package-metadata for more info.\nerror: 1 files in the working directory contain changes that were not yet committed into git:\n\nrusttermpose.sublime-workspace\n</code></pre>\n\n<p>Committing this file or to deleting it every time I push changes would both be terrible options. It is listed in ./.gitignore, but cargo seems not to care. I'm fairly sure cargo is supposed to care, and historically, has, but this would be a strange bug, so I thought I should ask if I'm missing something before reporting.</p>\n\n<p>The project is in a subdirectory (/rust/) inside of a larger git repo.</p>\n\n<p>/rust/.gitignore, and /.gitignore say</p>\n\n<pre><code>/rust/rusttermpose.sublime-workspace\nrusttermpose.sublime-workspace\n/rusttermpose.sublime-workspace\n*.sublime-workspace\n</code></pre>\n\n<p>rusttermpose.sublime-workspace is not among git's tracked files</p>\n\n<pre><code>\u00bb git ls-files\nCargo.toml\nREADME.md\nexamples/simple.rs\nlongterm.term\nrusttermpose.sublime-project\nsexp tests.sexp\nshortterm.term\nshortwood.sexp\nsrc/lib.rs\nsrc/parsers/mod.rs\nsrc/parsers/termpose_parser.rs\nsrc/parsers/woodslist_parser.rs\nsrc/wooder.rs\ntests.term\nwood_derive/Cargo.toml\nwood_derive/src/lib.rs\n</code></pre>\n"}, {"tags": ["rust", "buildroot"], "answers": [{"tags": [], "owner": {"reputation": 615, "user_id": 2516576, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/y6Uco.jpg?s=128&g=1", "display_name": "Jesse Lawson", "link": "https://stackoverflow.com/users/2516576/jesse-lawson"}, "is_accepted": false, "score": 1, "last_activity_date": 1557265541, "creation_date": 1557265541, "answer_id": 56030871, "question_id": 56030627, "link": "https://stackoverflow.com/questions/56030627/how-is-it-possible-to-use-a-nightly-rustc-compiler-in-buildroot/56030871#56030871", "title": "How is it possible to use a nightly rustc compiler in buildroot", "body": "<p>This is for a QEMU ARM Vexpress, but I think it will get you where you are going: </p>\n\n<ul>\n<li><a href=\"http://www.elebihan.com/posts/using-rust-with-buildroot-full-build.html\" rel=\"nofollow noreferrer\">Using Rust with Buildroot (full build)</a></li>\n</ul>\n\n<p>You can skip up to the <code>pushd</code> command to the downloaded nightly rust source. Instead of doing all that, just use the location of the code you got when you run <code>rustup install nightly</code> (or however else you're installing the nightly snapshot`).</p>\n\n<p>I hope that helps.</p>\n"}, {"tags": [], "owner": {"reputation": 2292, "user_id": 957841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef02f11ecbda985cd8136f4f68d60364?s=128&d=identicon&r=PG", "display_name": "Arnout", "link": "https://stackoverflow.com/users/957841/arnout"}, "is_accepted": false, "score": 1, "last_activity_date": 1557571570, "creation_date": 1557571570, "answer_id": 56089558, "question_id": 56030627, "link": "https://stackoverflow.com/questions/56030627/how-is-it-possible-to-use-a-nightly-rustc-compiler-in-buildroot/56089558#56089558", "title": "How is it possible to use a nightly rustc compiler in buildroot", "body": "<p>If the build commands don't need to be changed, you can just download the source to some directory and add <code>RUST_OVERRIDE_SRCDIR=&lt;path to rust source&gt;</code> in your local.mk. See <a href=\"https://buildroot.org/downloads/manual/manual.html#_using_buildroot_during_development\" rel=\"nofollow noreferrer\">the Buildroot manual</a>.</p>\n"}], "owner": {"reputation": 4962, "user_id": 231441, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/P2kt4.png?s=128&g=1", "display_name": "zzeroo", "link": "https://stackoverflow.com/users/231441/zzeroo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 283, "favorite_count": 1, "answer_count": 2, "score": 0, "last_activity_date": 1557571570, "creation_date": 1557264066, "last_edit_date": 1557521531, "question_id": 56030627, "link": "https://stackoverflow.com/questions/56030627/how-is-it-possible-to-use-a-nightly-rustc-compiler-in-buildroot", "title": "How is it possible to use a nightly rustc compiler in buildroot", "body": "<p>rustc and cargo are supported in buildroot. But even the latest buildroot master uses rust version 1.33.0 stable I think.</p>\n\n<p>How can I use the a nightly version of rust in buildroot?</p>\n\n<p><strong>Update</strong>: This patch <a href=\"http://lists.busybox.net/pipermail/buildroot/2016-April/159523.html\" rel=\"nofollow noreferrer\">http://lists.busybox.net/pipermail/buildroot/2016-April/159523.html</a> introduces rust in buildroot. And this buildroot repo <a href=\"https://github.com/elebihan/buildroot/tree/feature/rust-1.33.0\" rel=\"nofollow noreferrer\">https://github.com/elebihan/buildroot/tree/feature/rust-1.33.0</a> has some latest rustc version. </p>\n"}, {"tags": ["rust", "panic"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1557249476, "last_edit_date": 1557249476, "creation_date": 1557249065, "answer_id": 56027499, "question_id": 56027354, "link": "https://stackoverflow.com/questions/56027354/why-does-a-test-fail-with-the-message-panicked-at-boxany/56027499#56027499", "title": "Why does a test fail with the message &quot;panicked at Box&lt;Any&gt;&quot;?", "body": "<p>You are using <a href=\"https://doc.rust-lang.org/std/macro.assert.html\" rel=\"noreferrer\"><code>assert!</code></a>. This expects that the first argument is a boolean expression. Any subsequent arguments are considered a format string and arguments for that:</p>\n\n<pre><code>assert!(testbool(), \"Did not work: {}\", 42);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'test_testbool' panicked at 'Did not work: 42'\n</code></pre>\n\n<p>You probably want to remove the second argument to <code>assert!</code> or switch to <a href=\"https://doc.rust-lang.org/std/macro.assert_eq.html\" rel=\"noreferrer\"><code>assert_eq!</code></a>.</p>\n\n<hr>\n\n<p>I believe the root issue comes from a <a href=\"https://github.com/rust-lang/rust/issues/30143\" rel=\"noreferrer\">bug (#30143)</a> that allows non format strings to be used as a format string, in certain cases.</p>\n"}], "owner": {"reputation": 482, "user_id": 2425491, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/8ae984fbdd00145a099890523538c5ac?s=128&d=identicon&r=PG", "display_name": "VsM", "link": "https://stackoverflow.com/users/2425491/vsm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 56027499, "answer_count": 1, "score": 3, "last_activity_date": 1557249476, "creation_date": 1557248458, "last_edit_date": 1557248904, "question_id": 56027354, "link": "https://stackoverflow.com/questions/56027354/why-does-a-test-fail-with-the-message-panicked-at-boxany", "title": "Why does a test fail with the message &quot;panicked at Box&lt;Any&gt;&quot;?", "body": "<p>Why does this panic?</p>\n\n<pre><code>pub fn testbool() -&gt; bool {\n    vec!['a', 'd', 'i', 'e', 'p', 'r']\n        .iter()\n        .enumerate()\n        .find(|(_i, &amp;c)| c != 'c')\n        .is_none()\n}\n\n#[test]\nfn test_testbool() {\n    assert!(testbool(), true);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b9a925070f78723e154dd4e26da9f99e\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>---- test_testbool stdout ----\nthread 'test_testbool' panicked at 'Box&lt;Any&gt;', src/lib.rs:11:5\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n\n<p>It is probably very simple, but I don't understand it.</p>\n"}, {"tags": ["rust", "rust-tokio", "rusoto"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1557713011, "post_id": 56096980, "comment_id": 98844066, "body": "<code>drop</code> is imported as part of the prelude. You can just type <code>drop(client)</code>"}], "tags": [], "owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "is_accepted": true, "score": 0, "last_activity_date": 1557713023, "last_edit_date": 1557713023, "creation_date": 1557645150, "answer_id": 56096980, "question_id": 56022266, "link": "https://stackoverflow.com/questions/56022266/rusoto-async-using-futuresordered-combinator/56096980#56096980", "title": "Rusoto async using FuturesOrdered combinator", "body": "<p>I discovered that it was the <code>SqsClient</code> in the main function that was causing it to block as it is still doing some house work even though the tasks are finished.</p>\n\n<p>A solution provided by one of the Rusoto people was to add this just above <code>tokio::run</code> </p>\n\n<pre><code>std::mem::drop(client);\n</code></pre>\n"}], "owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 369, "favorite_count": 0, "accepted_answer_id": 56096980, "answer_count": 1, "score": 2, "last_activity_date": 1557713023, "creation_date": 1557230770, "last_edit_date": 1557289927, "question_id": 56022266, "link": "https://stackoverflow.com/questions/56022266/rusoto-async-using-futuresordered-combinator", "title": "Rusoto async using FuturesOrdered combinator", "body": "<p>I am trying to send off parallel asynchronous Rusoto SQS requests using <code>FuturesOrdered</code>:</p>\n\n<pre><code>use futures::prelude::*; // 0.1.26\nuse futures::stream::futures_unordered::FuturesUnordered;\nuse rusoto_core::{Region, HttpClient}; // 0.38.0\nuse rusoto_credential::EnvironmentProvider; // 0.17.0\nuse rusoto_sqs::{SendMessageBatchRequest, SendMessageBatchRequestEntry, Sqs, SqsClient}; // 0.38.0\n\nfn main() {\n    let client = SqsClient::new_with(\n        HttpClient::new().unwrap(),\n        EnvironmentProvider::default(),\n        Region::UsWest2,\n    );\n\n    let messages: Vec&lt;u32&gt; = (1..12).map(|n| n).collect();\n    let chunks: Vec&lt;_&gt; = messages.chunks(10).collect();\n\n    let tasks: FuturesUnordered&lt;_&gt; = chunks.into_iter().map(|c| {\n        let batch = create_batch(c);\n        client.send_message_batch(batch)\n    }).collect();\n\n    let tasks = tasks\n        .for_each(|t| {\n            println!(\"{:?}\", t);\n            Ok(())\n        })\n        .map_err(|e| println!(\"{}\", e));\n\n    tokio::run(tasks);\n}\n\nfn create_batch(ids: &amp;[u32]) -&gt; SendMessageBatchRequest {\n    let queue_url = \"https://sqs.us-west-2.amazonaws.com/xxx/xxx\".to_string();\n    let entries = ids\n        .iter()\n        .map(|id| SendMessageBatchRequestEntry {\n            id: id.to_string(),\n            message_body: id.to_string(),\n            ..Default::default()\n        })\n        .collect();\n\n    SendMessageBatchRequest {\n        entries,\n        queue_url,\n    }\n}\n</code></pre>\n\n<p>The tasks complete correctly but <code>tokio::run(tasks)</code> doesn't stop. I assume that is because of <code>tasks.for_each()</code> will force it to continue to run and look for more futures?</p>\n\n<p>Why doesn't <code>tokio::run(tasks)</code> stop? Am I using <code>FuturesOrdered</code> correctly?</p>\n\n<p>I am also a little worried about memory usage when creating up to 60,000 futures to complete and pushing them into the <code>FuturesUnordered</code> combinator.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1557227199, "post_id": 56020901, "comment_id": 98686154, "body": "It&#39;s possible you have a wrong design here. I&#39;m not sure how you mean to use your closure (for example you can&#39;t declare two of them this way)."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 2, "creation_date": 1557227667, "post_id": 56020901, "comment_id": 98686400, "body": "<code>add</code> moves (i.e. consumes) <code>a</code> and returns the result as a value, it is not intended for modifying <code>a</code>. This is because it is the underlying function for the <code>+</code> operator."}], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 11464174, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Ol5N3ADPuB4/AAAAAAAAAAI/AAAAAAAAALk/jMjVl41w4Ow/photo.jpg?sz=128", "display_name": "Onur Eren Elibol", "link": "https://stackoverflow.com/users/11464174/onur-eren-elibol"}, "edited": false, "score": 0, "creation_date": 1557227126, "post_id": 56021028, "comment_id": 98686106, "body": "What I&#39;m trying to do is making closure to change its outer scope. But this is also a good answer. If my closure doesn&#39;t reserved to return something else I can use this way also."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 57, "user_id": 11464174, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Ol5N3ADPuB4/AAAAAAAAAAI/AAAAAAAAALk/jMjVl41w4Ow/photo.jpg?sz=128", "display_name": "Onur Eren Elibol", "link": "https://stackoverflow.com/users/11464174/onur-eren-elibol"}, "edited": false, "score": 0, "creation_date": 1557227228, "post_id": 56021028, "comment_id": 98686174, "body": "You should probably use functions and don&#39;t try to capture the outer scope: the mutable reference can&#39;t be borrowed in several closures."}, {"owner": {"reputation": 57, "user_id": 11464174, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Ol5N3ADPuB4/AAAAAAAAAAI/AAAAAAAAALk/jMjVl41w4Ow/photo.jpg?sz=128", "display_name": "Onur Eren Elibol", "link": "https://stackoverflow.com/users/11464174/onur-eren-elibol"}, "edited": false, "score": 1, "creation_date": 1557228245, "post_id": 56021028, "comment_id": 98686718, "body": "Oh I got it. I just tried and you&#39;re right. Multiple mutable borrow is impossible between closures. I&#39;m just trying to understand the effects of closure to its outer scope when it borrows or captures the values. Thanks for your point. I understood that I shouldn&#39;t use closures to change their outer scope."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 1, "last_activity_date": 1557227692, "last_edit_date": 1557227692, "creation_date": 1557226544, "answer_id": 56021028, "question_id": 56020901, "link": "https://stackoverflow.com/questions/56020901/how-to-avoid-borrowing-a-value-that-was-moved-into-a-closure-without-using-clone/56021028#56021028", "title": "How to avoid borrowing a value that was moved into a closure without using clone?", "body": "<p>A solution would be to move the value to the closure, then make it return it:</p>\n\n<pre><code>use std::ops::Add;\n\nfn main() {\n    let mut a = \"a string\".to_string();\n    let cl = ||  {\n        a.add(\" another string\")\n    };\n    a = cl();\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>But capturing the outer scope is rather limited. You can't for example have two closures defined this way. You might want a more flexible solution:</p>\n\n<pre><code>let a = \"a string\".to_string();\nlet c1 = |s: String|  {\n    s.add(\" another string\")\n};\nlet c2 = |s: String|  {\n    s + \" and another one\"\n};\nlet a = c1(a);\nlet a = c2(a);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 57, "user_id": 11464174, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Ol5N3ADPuB4/AAAAAAAAAAI/AAAAAAAAALk/jMjVl41w4Ow/photo.jpg?sz=128", "display_name": "Onur Eren Elibol", "link": "https://stackoverflow.com/users/11464174/onur-eren-elibol"}, "edited": false, "score": 1, "creation_date": 1557226875, "post_id": 56021031, "comment_id": 98685958, "body": "Didn&#39;t know &#39;push_str&#39;. Because of push_str requires reference closure doesn&#39;t take ownership of a? Right?"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1557227334, "post_id": 56021031, "comment_id": 98686226, "body": "You can also use the <code>+=</code> operator: <code>a += &quot; another string&quot;;</code>."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 2, "last_activity_date": 1557226569, "creation_date": 1557226569, "answer_id": 56021031, "question_id": 56020901, "link": "https://stackoverflow.com/questions/56020901/how-to-avoid-borrowing-a-value-that-was-moved-into-a-closure-without-using-clone/56021031#56021031", "title": "How to avoid borrowing a value that was moved into a closure without using clone?", "body": "<p><strike>To answer your original question: You can't. This is because your string <code>a</code> is moved into the closure. You can't have it back though.</strike> See <a href=\"https://stackoverflow.com/a/56021028/1021920\">Denys answer</a> for a solution.</p>\n\n<hr>\n\n<p>A solution to this specific problem would be to use <code>push_str</code> instead of <code>Add</code>, because <code>push_str</code> requires a mutable referece instead of a moved value.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut a = \"a string\".to_string();\n\n    let mut cl = || {\n        a.push_str(\" another string\");\n    };\n\n    cl();\n\n    println!(\"{:?}\", a);\n}\n</code></pre>\n"}], "owner": {"reputation": 57, "user_id": 11464174, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Ol5N3ADPuB4/AAAAAAAAAAI/AAAAAAAAALk/jMjVl41w4Ow/photo.jpg?sz=128", "display_name": "Onur Eren Elibol", "link": "https://stackoverflow.com/users/11464174/onur-eren-elibol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 56021031, "answer_count": 2, "score": 2, "last_activity_date": 1557232646, "creation_date": 1557226085, "last_edit_date": 1557232646, "question_id": 56020901, "link": "https://stackoverflow.com/questions/56020901/how-to-avoid-borrowing-a-value-that-was-moved-into-a-closure-without-using-clone", "title": "How to avoid borrowing a value that was moved into a closure without using clone?", "body": "<p>I'm trying to understand the closures in Rust. I wrote a code like this;</p>\n\n<pre><code>use std::ops::Add;\n\nfn main() {\n    let mut a = \"a string\".to_string();\n\n    let mut cl = ||  {\n        a.add(\" another string\");\n    };\n\n    cl();\n\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>I expect a result like \"a string another string\". In the documentation it says that try to avoid using <code>clone()</code> where possible, but I can't manage to  compile this code without using <code>a = a.clone().add(\" another string\")</code>. </p>\n"}, {"tags": ["rust", "reqwest"], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 5, "last_activity_date": 1557220785, "last_edit_date": 1557220785, "creation_date": 1557220484, "answer_id": 56019283, "question_id": 56019047, "link": "https://stackoverflow.com/questions/56019047/why-are-images-downloaded-with-reqwests-text-method-broken/56019283#56019283", "title": "Why are images downloaded with Reqwest&#39;s .text() method broken?", "body": "<p>Don't use <code>text</code>, which is for text and thus tries to decode the raw bytes.</p>\n\n<p>Just write the <a href=\"https://docs.rs/reqwest/0.9.16/reqwest/struct.Response.html\" rel=\"nofollow noreferrer\">response</a>, which implements <code>Into&lt;Body&gt;</code> where <a href=\"https://docs.rs/reqwest/0.9.16/reqwest/async/struct.Body.html\" rel=\"nofollow noreferrer\"><code>Body</code></a> is a stream (which is also more efficient than getting the bytes):</p>\n\n<pre><code>let mut client = reqwest::Client::new();\nlet mut image_file = client\n    .get(\"https://images.pexels.com/photos/2124773/pexels-photo-2124773.jpeg\")\n    .send()\n    .unwrap();\n\nlet path = Path::new(\"img_test.jpeg\");\nlet display = path.display();\nlet mut file = match File::create(&amp;path) {\n    Err(why) =&gt; panic!(\"couldn't create {}: {}\", display, why.description()),\n    Ok(file) =&gt; file,\n};\nmatch std::io::copy(&amp;mut image_file, &amp;mut file) {\n    Err(why) =&gt; panic!(\"couldn't write to {}: {}\", display, why.description()),\n    Ok(_) =&gt; println!(\"successfully wrote to {}\", display),\n}\n</code></pre>\n"}], "owner": {"reputation": 938, "user_id": 3894179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c6b1c2c08d1075995cb780ee8a2e36e?s=128&d=identicon&r=PG", "display_name": "Andra", "link": "https://stackoverflow.com/users/3894179/andra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "accepted_answer_id": 56019283, "answer_count": 1, "score": 0, "last_activity_date": 1557232069, "creation_date": 1557219720, "last_edit_date": 1557232069, "question_id": 56019047, "link": "https://stackoverflow.com/questions/56019047/why-are-images-downloaded-with-reqwests-text-method-broken", "title": "Why are images downloaded with Reqwest&#39;s .text() method broken?", "body": "<p>How do I retrieve an image on some website and save it to local using Reqwest correctly? I have tried to use <code>.text()</code> and the image are broken.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error interpreting JPEG image file (Not a JPEG file: starts with 0xef 0xbf)\n</code></pre>\n\n<p>The code that I have tried</p>\n\n<pre><code>extern crate reqwest;\n\nuse std::error::Error;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::path::Path;\n\nfn main() {\n    let mut image_file = reqwest::Client::new()\n        .get(\"https://images.pexels.com/photos/2124773/pexels-photo-2124773.jpeg\")\n        .send()\n        .unwrap()\n        .text()\n        .unwrap();\n    let path = Path::new(\"tmp/img_test.jpeg\");\n    let display = path.display();\n    let mut file = match File::create(&amp;path) {\n        Err(why) =&gt; panic!(\"couldn't create {}: {}\", display, why.description()),\n        Ok(file) =&gt; file,\n    };\n    match file.write_all(image_file.as_bytes()) {\n        Err(why) =&gt; panic!(\"couldn't write to {}: {}\", display, why.description()),\n        Ok(_) =&gt; println!(\"successfully wrote to {}\", display),\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1557207591, "post_id": 56014764, "comment_id": 98676182, "body": "I think you have to use a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">build script</a> to either create that file or set feature flags depending on whether the file exists or not."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "edited": false, "score": 0, "creation_date": 1557332612, "post_id": 56016804, "comment_id": 98731948, "body": "I&#39;m not sure, but this might affect Rust&#39;s ability to detect when the source file is changed and needs to be rebuilt."}], "tags": [], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "is_accepted": true, "score": 4, "last_activity_date": 1557212251, "last_edit_date": 1557212251, "creation_date": 1557210882, "answer_id": 56016804, "question_id": 56014764, "link": "https://stackoverflow.com/questions/56014764/falling-back-to-alternative-value-if-include-bytes-target-is-missing/56016804#56016804", "title": "Falling back to alternative value if include_bytes!(\u2026) target is missing", "body": "<p>We can use a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">build script</a> to ensure that the included file exists before out package tries to include it. However, build scripts can only write to the current build's unique output directory, so we can't just create the missing input files in the source directory directly.</p>\n\n<blockquote>\n  <p>error: failed to verify package tarball</p>\n  \n  <p>Caused by:<br>\n  &nbsp; Source directory was modified by <code>build.rs</code> during <code>cargo publish</code>. Build scripts should not modify anything outside of <code>OUT_DIR</code>.</p>\n</blockquote>\n\n<p>Instead, our build script can create the file-to-include in the build directory, copying the source data if it exists, and we can update our package code to include this data from the build directory instead of from the source directory. The build path will be available in the <code>OUT_DIR</code> environment variable during the build, so we can access it from <code>std::env::var(\"OUT_DIR\")</code> in our build script and from <code>env!(\"OUT_DIR\")</code> in the rest of our package.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//! build.rs\n\nuse std::{fs, io};\n\nfn main() {\n    let out_dir = std::env::var(\"OUT_DIR\").unwrap();\n\n    fs::create_dir_all(&amp;format!(\"{}/src/data\", out_dir))\n        .expect(\"unable to create data directory\");\n\n    let path = format!(\"src/data/computed.bin\", name);\n    let out_path = format!(\"{}/{}\", out_dir, path);\n\n    let mut out_file = fs::OpenOptions::new()\n        .append(true)\n        .create(true)\n        .open(&amp;out_path)\n        .expect(\"unable to open/create data file\");\n\n    if let Ok(mut source_file) = fs::File::open(&amp;path) {\n        io::copy(&amp;mut source_file, &amp;mut out_file).expect(\"failed to copy data after opening\");\n    }\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//! src/foo.rs\n\nfn precomputed_data() -&gt; Option&lt;&amp;'static [u8]&gt; {\n    let data = include_bytes!(concat!(env!(\"OUT_DIR\"), \"/src/data/computed.bin\")).as_ref();\n    if !data.is_empty() {\n        Some(data)\n    } else {\n        None\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 567, "favorite_count": 1, "accepted_answer_id": 56016804, "answer_count": 1, "score": 4, "last_activity_date": 1557212251, "creation_date": 1557196519, "question_id": 56014764, "link": "https://stackoverflow.com/questions/56014764/falling-back-to-alternative-value-if-include-bytes-target-is-missing", "title": "Falling back to alternative value if include_bytes!(\u2026) target is missing", "body": "<p>My package has a binary target that uses <a href=\"https://doc.rust-lang.org/std/macro.include_bytes.html\" rel=\"nofollow noreferrer\"><code>include_bytes!(\u2026)</code></a> to bundle a copy of some precomputed values into the compiled binary. This is an optimization, but isn't strictly necessary: the program is capable of calculating these values at run time if the bundled data slice <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.is_empty\" rel=\"nofollow noreferrer\"><code>.is_empty()</code></a>.</p>\n\n<p>The program needs to be able to build without this data. However, <code>include_bytes!(\"data/computed.bin\")</code> causes a build error if the target file does not exist. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: couldn't read src/data/computed.bin: No such file or directory (os error 2)\n</code></pre>\n\n<p>Currently, I have a Bash build script that uses <code>touch data/computed.bin</code> to ensure the file exists before building. However, I don't want to depend on platform-specific solutions like Bash; I want to be able to build this project on any supported platform using <code>cargo build</code>.</p>\n\n<p>How can my Rust program <code>include_bytes!(\u2026)</code> or <code>include_str!(\u2026)</code> from a file if it exits, but gracefully fall back to an alternative value or behaviour if the file doesn't exist, while only using the standard Cargo build tools?</p>\n"}, {"tags": ["rust", "move"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1557182800, "post_id": 56013112, "comment_id": 98671433, "body": "Similar questions: <a href=\"https://stackoverflow.com/questions/53235334/in-rust-whats-the-difference-between-shadowing-and-mutability\">In Rust, what&#39;s the difference between \u201cshadowing\u201d and \u201cmutability\u201d?</a>, <a href=\"https://stackoverflow.com/a/40628035/493729\">Why do I need rebinding/shadowing when I can have mutable variable binding?</a>, <a href=\"https://stackoverflow.com/questions/33422543/understanding-scope-and-shadowing-matches\">Understanding scope and shadowing matches</a>."}], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1557182020, "post_id": 56013192, "comment_id": 98671276, "body": "Shadowing is when two variables with the same name exist within different scopes. This is simply a rebinding of the variable name."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1557182058, "post_id": 56013192, "comment_id": 98671281, "body": "@SimonWhitehead as you can see in <i>The Book</i> it is called shadowing."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1557182096, "post_id": 56013192, "comment_id": 98671284, "body": "Fair point - I apologise. The Rust book appears to define shadowing in the same scope as well."}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 5, "last_activity_date": 1557182112, "last_edit_date": 1557182112, "creation_date": 1557181964, "answer_id": 56013192, "question_id": 56013112, "link": "https://stackoverflow.com/questions/56013112/using-let-keyword-multiple-times-with-same-variable-name-in-rust/56013192#56013192", "title": "Using let keyword multiple times with same variable name in rust", "body": "<p>This is called variable shadowing.  The second <code>foo</code> is not bound to the same value as the first one but a completely new one.  For more details look into the <a href=\"https://doc.rust-lang.org/stable/book/ch03-01-variables-and-mutability.html#shadowing\" rel=\"nofollow noreferrer\">Shadowing chapter of The Rust Book</a>, that is:</p>\n\n<blockquote>\n  <p>[...] you can declare a new variable with the same name as a previous variable, and the new variable shadows the previous variable. Rustaceans say that the first variable is shadowed by the second, which means that the second variable\u2019s value is what appears when the variable is used.</p>\n</blockquote>\n"}], "owner": {"reputation": 2104, "user_id": 5129504, "user_type": "registered", "accept_rate": 89, "profile_image": "https://graph.facebook.com/476994845791992/picture?type=large", "display_name": "Josh Weinstein", "link": "https://stackoverflow.com/users/5129504/josh-weinstein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 441, "favorite_count": 0, "closed_date": 1557186412, "accepted_answer_id": 56013192, "answer_count": 1, "score": 2, "last_activity_date": 1557182112, "creation_date": 1557181311, "question_id": 56013112, "link": "https://stackoverflow.com/questions/56013112/using-let-keyword-multiple-times-with-same-variable-name-in-rust", "closed_reason": "Duplicate", "title": "Using let keyword multiple times with same variable name in rust", "body": "<p>New to rust, I am passed the phase where I get stuck with the borrow checker, but I am stuck with why this piece of code works or passes. I am implementing an struct-like enum that acts as some form of a node that can be appended to:</p>\n\n<pre><code>#[derive(Debug)]\nenum Node {\n    Val {num:u32, next:Box&lt;Node&gt;},\n    Nil\n}\n\nimpl Node {\n    fn put_next(&amp;self, i:u32) -&gt; Node {\n       match self {\n           Node::Val {num, next:_} =&gt; Node::Val {num:*num, next:Box::new(Node::Val {num:i, next:Box::new(Node::Nil)})},\n           Node::Nil =&gt; Node::Val {num:i, next:Box::new(Node::Nil)}\n       }\n    }\n}\n</code></pre>\n\n<p>The following <code>main</code> function does not work for obvious reasons, you can't assign to an immutable variable:</p>\n\n<pre><code>fn main() {\n   let foo = Node::Val {num:5, next:Box::new(Node::Nil)};\n   foo = foo.put_next(30);\n   println!(\"foo {:?} \", foo);\n}\n</code></pre>\n\n<p>However, if I use <code>let</code> with foo again, the code works with no errors!</p>\n\n<pre><code>fn main() {\n   let foo = Node::Val {num:5, next:Box::new(Node::Nil)};\n   let foo = foo.put_next(30);\n   println!(\"foo {:?} \", foo);\n}\n// foo Val { num: 5, next: Val { num: 30, next: Nil } } \n</code></pre>\n\n<p>My question here is, why does the compiler allow <code>let</code> to be used multiple times with the same variable? If it's intentional, what does that even mean or indicate? Is it, under the hood creating a new variable named foo and dropping the old one?</p>\n"}, {"tags": ["windows", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1557389754, "post_id": 56012879, "comment_id": 98750794, "body": "Answers to the question should not be edited into the question itself."}], "answers": [{"tags": [], "owner": {"reputation": 615, "user_id": 2516576, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/y6Uco.jpg?s=128&g=1", "display_name": "Jesse Lawson", "link": "https://stackoverflow.com/users/2516576/jesse-lawson"}, "is_accepted": false, "score": 0, "last_activity_date": 1557264528, "creation_date": 1557264528, "answer_id": 56030701, "question_id": 56012879, "link": "https://stackoverflow.com/questions/56012879/which-build-of-gcc-should-i-use-to-correctly-build-rustlearn-crate/56030701#56030701", "title": "Which build of gcc should I use to correctly build rustlearn crate?", "body": "<p>I did not run into these errors when I created a MWE.</p>\n\n<p>To me, this looks like you are trying to use <code>gcc</code> to link a *.o that was compiled with <code>g++</code>.</p>\n\n<p>I was unable to replicate your problem. Here's what I did--which resulted in a successfully built project:</p>\n\n<ol>\n<li>I created a new project with <code>cargo new</code> and added the following to <code>Cargo.toml</code>:</li>\n</ol>\n\n<pre><code>rustlearn = \"0.5.0\"\n</code></pre>\n\n<ol start=\"2\">\n<li><p>I ran <code>cargo check</code> to download all the required dependencies. </p></li>\n<li><p>I edited <code>src/main.rs</code> to include the logistic regression example from <a href=\"https://maciejkula.github.io/rustlearn/doc/rustlearn/\" rel=\"nofollow noreferrer\">here</a>, modified so that it was called in a <code>main()</code> function.</p></li>\n<li><p>I ran <code>cargo build</code>, which successfully compiled <code>crossbeam</code>, <code>libc</code>, <code>serde</code>, <code>rand</code>, <code>rustlearn</code>, and <code>rustlearn-test</code>--the name of my test package. Several linting warnings were outputted; they were ignored.</p></li>\n<li><p>I ran <code>cargo run</code>, which successfully ran the program.</p></li>\n</ol>\n\n<p>FWIW, I'm using the WSL on Windows 10.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1557407440, "creation_date": 1557407440, "answer_id": 56060216, "question_id": 56012879, "link": "https://stackoverflow.com/questions/56012879/which-build-of-gcc-should-i-use-to-correctly-build-rustlearn-crate/56060216#56060216", "title": "Which build of gcc should I use to correctly build rustlearn crate?", "body": "\n\n<p>I found that the right build of MinGW is i686-7.1.0-posix-dwarf-rt_v5-rev2.</p>\n"}], "owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 56060216, "answer_count": 2, "score": -1, "last_activity_date": 1557407440, "creation_date": 1557179599, "last_edit_date": 1557407393, "question_id": 56012879, "link": "https://stackoverflow.com/questions/56012879/which-build-of-gcc-should-i-use-to-correctly-build-rustlearn-crate", "title": "Which build of gcc should I use to correctly build rustlearn crate?", "body": "<p>I'm trying to use <code>rustlearn</code> crate in my project. Added the dependency in <code>Cargo.toml</code>.\nSince <code>rustlearn</code> requires <code>gcc</code>, I downloaded and installed <code>MinGW64</code>.\nI tried the following <code>gcc</code> builds:</p>\n\n<ul>\n<li>x86_64-8.1.0-posix-seh-rt_v6-rev0</li>\n<li>x86_64-8.1.0-posix-sjlj-rt_v6-rev0</li>\n<li>i686-8.1.0-posix-sjlj-rt_v6-rev0</li>\n</ul>\n\n<p>each time setting a <code>PATH</code> environment variable to the appropriate <code>g++.exe</code> and restarting VSCode.\nBut everytime I tried to build my Rust package I got a such error:</p>\n\n<pre><code> = note: C:\\Rust\\PF\\machinelearning\\target\\debug\\deps\\librustlearn-4ae611e3fd449ac0.rlib(svm.o): In function `ZN6KernelC2EiPKP8svm_nodeRK13svm_parameter':\n          C:\\Git-local-repos\\rustlearn/dependencies/libsvm/svm.cpp:256: undefined reference to `__gxx_personality_sj0'\n          C:\\Git-local-repos\\rustlearn/dependencies/libsvm/svm.cpp:256: undefined reference to `_Unwind_SjLj_Register'\n          C:\\Git-local-repos\\rustlearn/dependencies/libsvm/svm.cpp:258: undefined reference to `_Unwind_SjLj_Resume'\n          C:\\Git-local-repos\\rustlearn/dependencies/libsvm/svm.cpp:289: undefined reference to `_Unwind_SjLj_Unregister'\n</code></pre>\n\n<p>repeated many times.\nI realize that the problem is somehow related to exception handling (seh/sjlj).\nMy system is Windows 7 x86-64, rust toolchain is stable-i686-pc-windows-gnu.</p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["linux", "rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 2, "creation_date": 1557177756, "post_id": 56011927, "comment_id": 98670102, "body": "Actually, git tries <code>$EDITOR</code> only after it tries <code>$VISUAL</code> (and a few things from git&#39;s own config)."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1557211083, "post_id": 56011927, "comment_id": 98677473, "body": "Actually the <code>open</code> crate uses <code>xdg-open</code>, which reads file associations from <a href=\"https://wiki.archlinux.org/index.php/XDG_MIME_Applications#mimeapps.list\" rel=\"nofollow noreferrer\"><code>mimeapps.list</code></a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1557186362, "post_id": 56012454, "comment_id": 98672069, "body": "To further mimic git, you probably need to check the exit code of the editor and abort the operation when it&#39;s non-success."}, {"owner": {"reputation": 284, "user_id": 1864522, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a8ccbc1b1149a2607a33a932a744f5?s=128&d=identicon&r=PG", "display_name": "Polar Bear", "link": "https://stackoverflow.com/users/1864522/polar-bear"}, "edited": false, "score": 1, "creation_date": 1557230630, "post_id": 56012454, "comment_id": 98688087, "body": "Thank you, this was exactly what I was looking for !"}, {"owner": {"reputation": 435, "user_id": 1499196, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/c2fa33885952f08f1a32ad80619ee637?s=128&d=identicon&r=PG", "display_name": "Henning", "link": "https://stackoverflow.com/users/1499196/henning"}, "edited": false, "score": 1, "creation_date": 1598963605, "post_id": 56012454, "comment_id": 112621142, "body": "This does not work if <code>editor</code> has parameters, like vscode: &quot;C:\\\\Program Files\\\\Microsoft VS Code\\\\Code.exe&quot; --wait&quot;  In this case, Command::new crashes on windows with &quot;Access Denied&quot;. Probably because the parameter is not a valid program, but the entire command."}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 7, "last_activity_date": 1557186280, "last_edit_date": 1557186280, "creation_date": 1557176780, "answer_id": 56012454, "question_id": 56011927, "link": "https://stackoverflow.com/questions/56011927/how-do-i-use-rust-to-open-the-users-default-editor-and-get-the-edited-content/56012454#56012454", "title": "How do I use Rust to open the user&#39;s default editor and get the edited content?", "body": "<p>I could be wrong, but I think the way <code>git commit</code> works is that it creates a temporary file (<code>.git/COMMIT_EDITMSG</code>) and then as a sub-process it opens that file in the user's <code>$EDITOR</code> and then waits for the editor's process to exit/return.  That will only happen when the user closes their editor.  Which basically means that they can use the full power of their choice of editors, i.e. navigate in the file, save their changes, etc.</p>\n\n<p>Thus, in Rust, you could use <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"noreferrer\"><code>std::process::Command</code></a> to open the user's editor, which you can get via the <a href=\"https://doc.rust-lang.org/std/env/fn.var.html\" rel=\"noreferrer\"><code>std::env::var</code></a>.  You can store the temporary file in a specific location if your application has one (like the <code>.git</code> directory for <code>git</code> or <code>~/.config/&lt;your-app&gt;/&lt;your-file&gt;</code>, etc.) or you could create a temporary one inside the system's temporary directory returned to you by the <a href=\"https://doc.rust-lang.org/std/env/fn.temp_dir.html\" rel=\"noreferrer\"><code>std::env::temp_dir</code></a>.  (Alternatively you could use the excellent third party crate to directly create a temporary file only: <a href=\"https://github.com/Stebalien/tempfile\" rel=\"noreferrer\"><code>tempfile</code></a>)</p>\n\n<p>Here's a working example using the above mentioned technique:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    env::{temp_dir, var},\n    fs::File,\n    io::Read,\n    process::Command,\n};\n\nfn main() {\n    let editor = var(\"EDITOR\").unwrap();\n    let mut file_path = temp_dir();\n    file_path.push(\"editable\");\n    File::create(&amp;file_path).expect(\"Could not create file\");\n\n    Command::new(editor)\n        .arg(&amp;file_path)\n        .status()\n        .expect(\"Something went wrong\");\n\n    let mut editable = String::new();\n    File::open(file_path)\n        .expect(\"Could not open file\")\n        .read_to_string(&amp;mut editable);\n\n    println!(\"File content:\\n{}\", editable);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 12296, "user_id": 461597, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/7fa573d21875f5b980a2d81c695c71f3?s=128&d=identicon&r=PG", "display_name": "Unapiedra", "link": "https://stackoverflow.com/users/461597/unapiedra"}, "is_accepted": false, "score": 2, "last_activity_date": 1600846126, "creation_date": 1600846126, "answer_id": 64023043, "question_id": 56011927, "link": "https://stackoverflow.com/questions/56011927/how-do-i-use-rust-to-open-the-users-default-editor-and-get-the-edited-content/64023043#64023043", "title": "How do I use Rust to open the user&#39;s default editor and get the edited content?", "body": "<p>There is now a crate which provides this functionality: <a href=\"https://docs.rs/edit/0.1.2/edit/\" rel=\"nofollow noreferrer\">https://docs.rs/edit/0.1.2/edit/</a></p>\n<p>From the documentation:</p>\n<pre><code>let template = &quot;Fill in the blank: Hello, _____!&quot;;\nlet edited = edit::edit(template)?;\nprintln!(&quot;after editing: '{}'&quot;, edited);\n</code></pre>\n"}], "owner": {"reputation": 284, "user_id": 1864522, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a8ccbc1b1149a2607a33a932a744f5?s=128&d=identicon&r=PG", "display_name": "Polar Bear", "link": "https://stackoverflow.com/users/1864522/polar-bear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 689, "favorite_count": 1, "accepted_answer_id": 56012454, "answer_count": 2, "score": 4, "last_activity_date": 1600846126, "creation_date": 1557174181, "last_edit_date": 1557174299, "question_id": 56011927, "link": "https://stackoverflow.com/questions/56011927/how-do-i-use-rust-to-open-the-users-default-editor-and-get-the-edited-content", "title": "How do I use Rust to open the user&#39;s default editor and get the edited content?", "body": "<p>When you use git commit without the -m flag it opens your default editor, which is set by the <code>$EDITOR</code> environment variable. Doing so enables you to edit multiple lines, navigate with the arrows and submit the text when you're done. I'd like to do something similar with my command line program. It could be opening the default editor or something that has the features I just mentioned above.</p>\n\n<p>I tried using the <a href=\"https://crates.io/crates/open\" rel=\"nofollow noreferrer\">open crate</a>, but it opens the <code>$VISUAL</code> editor and doesn't seem to have a parameter to specify which editor to open.</p>\n\n<p>I tried using <code>io::stdin()</code> with <code>read_to_end()</code>. It permits multiple lines entry and using <kbd>Ctrl-D</kbd> to submit text, but not using the arrows to move and edit the text.</p>\n\n<p>I tried using the <a href=\"https://crates.io/crates/rustyline\" rel=\"nofollow noreferrer\">rustyline crate</a>, but I can't find how to get multiple lines while being able to edit previous lines.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557173370, "post_id": 56011522, "comment_id": 98668597, "body": "Also: <a href=\"https://stackoverflow.com/a/50458253/155423\">What is the easiest way to pad a string with 0 to the left?</a> \u2014 <code>write!(formatter, &quot;{:02}:{:02}&quot;, self.hours, self.minutes)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557173648, "post_id": 56011522, "comment_id": 98668703, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0d52d2b3dfbb0fe24dace863139ebf18\" rel=\"nofollow noreferrer\">The code you have in your question <b>works</b></a>. What are you attempting to ask us?"}, {"owner": {"reputation": 79, "user_id": 8705039, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-gpAyqCsHErs/AAAAAAAAAAI/AAAAAAAAAAw/WK9ggdZxZYk/photo.jpg?sz=128", "display_name": "Hurry Blob", "link": "https://stackoverflow.com/users/8705039/hurry-blob"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557173886, "post_id": 56011522, "comment_id": 98668770, "body": "@Shepmaster, thanks. I decided working solution by myself after asking question."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1557208090, "post_id": 56011905, "comment_id": 98676337, "body": "Why not <code>write!(formatter, &quot;{:2}:{:2}&quot;, self.hours, self.minutes)</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557259139, "post_id": 56011905, "comment_id": 98702874, "body": "Specifically, using <code>format!</code> causes unneeded memory allocation. Also, didn&#39;t you want zero-padded numbers?"}], "tags": [], "owner": {"reputation": 79, "user_id": 8705039, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-gpAyqCsHErs/AAAAAAAAAAI/AAAAAAAAAAw/WK9ggdZxZYk/photo.jpg?sz=128", "display_name": "Hurry Blob", "link": "https://stackoverflow.com/users/8705039/hurry-blob"}, "is_accepted": false, "score": -1, "last_activity_date": 1557313643, "last_edit_date": 1557313643, "creation_date": 1557174041, "answer_id": 56011905, "question_id": 56011522, "link": "https://stackoverflow.com/questions/56011522/how-do-i-implement-stringfrom-for-my-type/56011905#56011905", "title": "How do I implement String::from for my type?", "body": "<p>The working solution:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl From&lt;Clock&gt; for String {\n    fn from(clock: Clock) -&gt; String {\n        clock.to_string()\n    }\n}\n\nimpl fmt::Display for Clock {\n    fn fmt(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(\n            formatter,\n            \"{}\",\n            format!(\"{:02}:{:02}\", self.hours, self.minutes)\n        )\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 79, "user_id": 8705039, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-gpAyqCsHErs/AAAAAAAAAAI/AAAAAAAAAAw/WK9ggdZxZYk/photo.jpg?sz=128", "display_name": "Hurry Blob", "link": "https://stackoverflow.com/users/8705039/hurry-blob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1557313643, "creation_date": 1557172287, "last_edit_date": 1557173583, "question_id": 56011522, "link": "https://stackoverflow.com/questions/56011522/how-do-i-implement-stringfrom-for-my-type", "title": "How do I implement String::from for my type?", "body": "<p>I have a type <code>Clock</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, PartialEq)]\npub struct Clock {\n    hours: i32,\n    minutes: i32,\n}\n</code></pre>\n\n<p>Some traits are implemented for it. For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[allow(clippy::match_bool)]\nimpl fmt::Display for Clock {\n    fn fmt(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        let tmp = match (self.hours &lt; 10, self.minutes &lt; 10) {\n            (false, false) =&gt; (\"\", self.hours, \"\", self.minutes),\n            (false, true) =&gt; (\"\", self.hours, \"0\", self.minutes),\n            (true, false) =&gt; (\"0\", self.hours, \"\", self.minutes),\n            (true, true) =&gt; (\"0\", self.hours, \"0\", self.minutes),\n        };\n        write!(\n            formatter,\n            \"{}\",\n            format!(\"{}{}:{}{}\", tmp.0, tmp.1, tmp.2, tmp.3)\n        )\n    }\n}\n</code></pre>\n\n<p>I want to implement <code>String::from(Clock::new(...))</code>. How can I do it?</p>\n\n<p>I've attempted:</p>\n\n<pre><code>impl convert::From&lt;Clock&gt; for String {\n    fn from(clock: Clock) -&gt; String {\n        clock.to_string()\n    }\n}\n</code></pre>\n"}, {"tags": ["c", "null", "rust"], "comments": [{"owner": {"reputation": 768, "user_id": 938740, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZWhew.png?s=128&g=1", "display_name": "torstenvl", "link": "https://stackoverflow.com/users/938740/torstenvl"}, "edited": false, "score": 0, "creation_date": 1557162983, "post_id": 56009548, "comment_id": 98664679, "body": "<code>NULL</code> in C is a zero-pointer.  The second sentence (quoted) reinforces the first sentence by clarifying that you can&#39;t even force a <code>NULL</code> by using <code>0</code> as a reference."}, {"owner": {"reputation": 320781, "user_id": 589924, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b2cf53d5a3d25f95c0db4e025aed4153?s=128&d=identicon&r=PG", "display_name": "ikegami", "link": "https://stackoverflow.com/users/589924/ikegami"}, "edited": false, "score": 0, "creation_date": 1557165121, "post_id": 56009548, "comment_id": 98665500, "body": "It means that Rust doesn&#39;t allow you to do the equivalent of the following C code: <code>int i = ...; int* p = (int*)i;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 149903, "user_id": 14637, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/1904e7096278a10f1dfb3fdc0ceb53cc?s=128&d=identicon&r=PG", "display_name": "Thomas", "link": "https://stackoverflow.com/users/14637/thomas"}, "is_accepted": false, "score": 1, "last_activity_date": 1557163112, "creation_date": 1557163112, "answer_id": 56009713, "question_id": 56009548, "link": "https://stackoverflow.com/questions/56009548/what-does-the-statement-rust-wont-convert-integers-to-references-mean/56009713#56009713", "title": "What does the statement &quot;Rust won&#39;t convert integers to references&quot; mean?", "body": "<p>They mean stuff like this:</p>\n\n<pre><code>let ref_to_int: &amp;u32 = 42;\n</code></pre>\n\n<p>It won't compile, because an integer (42) cannot be converted to a reference. You can take a reference <em>to</em> the number 42, but you cannot convert the number 42 <em>itself</em> into a reference.</p>\n\n<p>In the C language, this would be possible, because both memory addresses (pointers) and integers are essentially the same thing (a number). That can cause bugs, so Rust forbids it.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1557165138, "creation_date": 1557165138, "answer_id": 56010111, "question_id": 56009548, "link": "https://stackoverflow.com/questions/56009548/what-does-the-statement-rust-wont-convert-integers-to-references-mean/56010111#56010111", "title": "What does the statement &quot;Rust won&#39;t convert integers to references&quot; mean?", "body": "<p>At runtime, a reference is just a <code>usize</code>,  representing the address of some data in memory. What the book is trying say is that you can't take an integer and then treat it like an address, and then try to get the data that is held there. For example, this fails:</p>\n\n<pre><code>let an_integer: usize = 12345;\nlet some_value: &amp;bool = an_integer;\n</code></pre>\n\n<p>With <code>unsafe</code> code, you can do it though:</p>\n\n<pre><code>let an_integer: usize = 12345;\n// Very dangerous: transmute unsafely converts between any two types as long as they are the same size:\nlet some_value: &amp;bool = unsafe { std::mem::transmute(an_integer) };\n// Less dangerous, but still dangerous:\nlet some_value: &amp;bool = unsafe { &amp;*(an_integer as *const bool) };\n\n</code></pre>\n"}], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "accepted_answer_id": 56010111, "answer_count": 2, "score": 0, "last_activity_date": 1557168320, "creation_date": 1557162297, "last_edit_date": 1557168320, "question_id": 56009548, "link": "https://stackoverflow.com/questions/56009548/what-does-the-statement-rust-wont-convert-integers-to-references-mean", "title": "What does the statement &quot;Rust won&#39;t convert integers to references&quot; mean?", "body": "<p>In the section <em>References Are Never Null</em> in the book <em>Programming Rust</em>, they point out there's no analogue to C's <code>NULL</code>. That bit I understand. They then state</p>\n\n<blockquote>\n  <p>Rust won't convert integers to references (outside of <code>unsafe</code> code), so you can't convert zero into a reference.</p>\n</blockquote>\n\n<p>Does this statement correspond to Rust code that won't compile? What is that code?</p>\n\n<p>Note this compiles fine</p>\n\n<pre><code>let i = 0;\nlet ri = &amp;i;\nprintln!(\"{}\", i);\nprintln!(\"{}\", ri);\n</code></pre>\n\n<p>so they're presumably not talking about that.</p>\n\n<p>Note: I think my original question was largely answered by <a href=\"https://stackoverflow.com/q/2759845/5986907\">Why is address zero used for the null pointer?</a></p>\n"}, {"tags": ["rust", "immutability", "borrow-checker", "mutability"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1557145458, "post_id": 56005131, "comment_id": 98655770, "body": "<i>&quot;help: consider changing this to be a mutable reference: <code>&amp;mut y</code>&quot;</i>"}, {"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1557146076, "post_id": 56005131, "comment_id": 98656116, "body": "Yeah, that will make the error go away, but that&#39;s not the issue I am having. I want to understand the promises that types give."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1557149510, "post_id": 56005131, "comment_id": 98658062, "body": "<i>&quot;By dereferencing <code>z</code> once (i.e. <code>*z</code>) I will get something of type <code>&amp;mut i32</code>&quot;</i> Nope, that would be a mutable deref, which cannot be done over an immutable reference. You can at best obtain a <code>&amp;i32</code> from there."}, {"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1557150587, "post_id": 56005131, "comment_id": 98658683, "body": "@E_net4: That&#39;s interesting... So there are multiple types of derefs? So if I have a <code>&amp;&amp;mut i32</code> and perform an immutable deref on it, what type will I get? <code>&amp;i32</code>? What would be the derivation rule of that?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1557150723, "post_id": 56005131, "comment_id": 98658761, "body": "Those would be <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code></a> and <a href=\"https://doc.rust-lang.org/std/ops/trait.DerefMut.html\" rel=\"nofollow noreferrer\"><code>DerefMut</code></a>. The documentation of each trait explain which is used in which context."}, {"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "edited": false, "score": 0, "creation_date": 1557151407, "post_id": 56005131, "comment_id": 98659167, "body": "Ah, good to know that! I am getting closer... However, I don&#39;t know how the compiler &quot;implements&quot; the trait for built-in references. So going back to my question, the signature is <code>fn deref(&amp;self) -&gt; &amp;Self::Target</code>, how do I instantiate that with my <code>&amp;&amp;mut i32</code>? Is the target <code>i32</code> and therefore I get <code>&amp;i32</code> back? How come that the target of a <code>&amp;&amp;mut i32</code> is <code>i32</code>? Isn&#39;t that skipping a level?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1557152948, "post_id": 56005131, "comment_id": 98659910, "body": "That is answered by <a href=\"https://stackoverflow.com/q/31624743/1233251\">this question</a>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1557153106, "post_id": 56005131, "comment_id": 98659992, "body": "@domin No, the type <code>&lt;&amp;&amp;mut i32 as Deref&gt;::Target</code> is <code>&amp;mut i32</code>, as you can see from the documentation linked above. Looking at the definitions of the <code>Deref</code> trait doesn&#39;t really help here, since the relevant step is built into the compiler, not the standard library."}, {"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "edited": false, "score": 0, "creation_date": 1557153744, "post_id": 56005131, "comment_id": 98660356, "body": "My gosh this is a complicated mess for a beginner. ;) So, in this case, what exactly are the semantics of the built-in compiler-deref? What is <code>&amp;&amp;mut i32</code> transformed into after doing one compiler-built-in-deref?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557155920, "post_id": 56005131, "comment_id": 98661490, "body": "<a href=\"https://stackoverflow.com/q/28519997/155423\">What are Rust&#39;s exact auto-dereferencing rules?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1557158723, "post_id": 56005131, "comment_id": 98662885, "body": "Sometimes it helps to think of <i>exclusive</i> and <i>shared</i> references rather than <i>mutable</i> and <i>immutable</i> ones. So <code>y</code> is an exclusive reference to an integer, and <code>z</code> is a shared reference to an exclusive reference to an integer, but you can&#39;t dereference <code>z</code> to get <code>y</code>-like <i>exclusive</i> access to the integer, because that violates <code>z</code>&#39;s own contract of <i>sharedness</i>."}, {"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1557167829, "post_id": 56005131, "comment_id": 98666569, "body": "@trentcl Great answer, thank you! So that means I sort-of have to consider multiple deref-steps as a single operation, as clearly I cannot just structurally decompose a type like <code>&amp;&amp;mut i32</code> step-by-step."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1557214305, "post_id": 56005131, "comment_id": 98679072, "body": "@domin You can consider multiple steps of dereferencing as separate operations. The type of <code>*z</code> is indeed <code>&amp;mut i32</code>. The code <code>let foo: &amp;mut i32 = *z;</code> will pass the type checker just fine, but the borrow checker will complain that you are creating a mutable borrow for something that&#39;s behind a shared reference. You don&#39;t need to understand how the borrow checker works in detail; it&#39;s enough to understand that it makes sure that nothing behind a shared reference can be mutated and that mutable references can&#39;t be aliased."}, {"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1557216200, "post_id": 56005131, "comment_id": 98680033, "body": "@SvenMarnach That&#39;s another peculiar behavior: In <code>let foo: &amp;mut i32 = *z;</code> I would expect this to be equal to <code>let foo = *z;</code> as it just makes the type explicit. However, the latter triggers a different compiler error (&quot;cannot move out of borrow&quot;). So specifying the type here seems to actually do this: <code>let foo = &amp;mut **z;</code>. In any case: I think the crucial insight is that the borrow checker does not derive its rules solely from the types, but it has additional information to work on."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1557216913, "post_id": 56005131, "comment_id": 98680343, "body": "@domin As I said before, the borrow checker is a complex beast, but there simply isn&#39;t a need to understand how it works. You can trust it to maintain the invariants it is supposed to maintain. And good observation about the different errors \u2013 adding the type here explicitly indeed changes the semantics. Without the type, the let binding <i>moves</i> the mutable reference, and with an explicit type annotation the binding creates an implicit reborrow. This only happens for mutable references and is a rather subtle difference."}], "answers": [{"comments": [{"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "edited": false, "score": 0, "creation_date": 1557296996, "post_id": 56034080, "comment_id": 98712094, "body": "Thanks a lot for your detailed answer! So multiple stacked references should still be read as references pointing \u2013 directly or indirectly \u2013 to the same underlying owned value (<code>T</code>)? If that&#39;s the case, then why can I take a <code>let foo = &amp;mut &amp;mut x;</code> (where <code>x : T</code>), and afterwards dereference that one just half-way-through and mutate the middle reference, like this: <code>*foo = &amp;mut y;</code> where <code>y</code> is another value of type <code>T</code>? This operation would have nothing to do with the original <code>T</code>, so a reference must be an object (with an owner) in and by itself..."}, {"owner": {"reputation": 287982, "user_id": 69755, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/6aa87e056bd2ee342fbd56eb2110603c?s=128&d=identicon&r=PG", "display_name": "Brian Campbell", "link": "https://stackoverflow.com/users/69755/brian-campbell"}, "reply_to_user": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "edited": false, "score": 1, "creation_date": 1557321868, "post_id": 56034080, "comment_id": 98725621, "body": "Yes, a reference is an object with an owner itself. But the permission you get is based on the path you reach it. If you reach an <code>&amp;mut</code> reference through an <code>&amp;</code> reference, you only have shared, read-only access, to the reference itself and to anything it refers to."}, {"owner": {"reputation": 287982, "user_id": 69755, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/6aa87e056bd2ee342fbd56eb2110603c?s=128&d=identicon&r=PG", "display_name": "Brian Campbell", "link": "https://stackoverflow.com/users/69755/brian-campbell"}, "reply_to_user": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "edited": false, "score": 1, "creation_date": 1557322234, "post_id": 56034080, "comment_id": 98725882, "body": "I should probably clarify: multiple stacked references aren&#39;t read just as references pointing to the underlying value. They are pointing to what they are pointing to. But the permission you get is the minimum of the permissions conferred by each reference in the path you reach it. I will edit my answer to be more clear."}, {"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "edited": false, "score": 0, "creation_date": 1557324150, "post_id": 56034080, "comment_id": 98727128, "body": "Awesome, thanks for the clarification. I&#39;ve just played around a bit with that knowledge and came up with this sample: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c4d2880792180205d906fde034117238\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> Do you agree with my comments there?"}, {"owner": {"reputation": 287982, "user_id": 69755, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/6aa87e056bd2ee342fbd56eb2110603c?s=128&d=identicon&r=PG", "display_name": "Brian Campbell", "link": "https://stackoverflow.com/users/69755/brian-campbell"}, "reply_to_user": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "edited": false, "score": 1, "creation_date": 1557349840, "post_id": 56034080, "comment_id": 98739627, "body": "@domin Yes, that&#39;s right. The borrow checker works statically, and while it could be possible to statically analyze this particular piece of code, if you instead passed these into a function, it wouldn&#39;t be able to tell which reference <code>foo</code> referred to after the function returned (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fe87f5ed958e0be75618e8e6d35feb30\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>). So the compiler applies conservative rules; it determines that <code>foo</code> could reference either <code>x</code> or <code>y</code>, so as long as <code>foo</code> is alive, you can&#39;t make other references to <code>x</code> or <code>y</code>."}, {"owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "edited": false, "score": 1, "creation_date": 1557351179, "post_id": 56034080, "comment_id": 98740097, "body": "Right. A typical set-union-analysis then! Thanks a lot for your help!"}], "tags": [], "owner": {"reputation": 287982, "user_id": 69755, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/6aa87e056bd2ee342fbd56eb2110603c?s=128&d=identicon&r=PG", "display_name": "Brian Campbell", "link": "https://stackoverflow.com/users/69755/brian-campbell"}, "is_accepted": true, "score": 6, "last_activity_date": 1557322570, "last_edit_date": 1557322570, "creation_date": 1557293359, "answer_id": 56034080, "question_id": 56005131, "link": "https://stackoverflow.com/questions/56005131/how-to-interpret-immutable-references-to-mutable-types-in-rust/56034080#56034080", "title": "How to interpret immutable references to mutable types in Rust?", "body": "<blockquote>\n  <p>In essence, the types of references in some sense lie to me, as they don't actually do what they claim they do. How should I read types of references properly in this case, or how else can I restore faith in that concept?</p>\n</blockquote>\n\n<p>The right way to read references in Rust is as permissions.</p>\n\n<p>Ownership of an object, when it's not borrowed, gives you permission to do whatever you want to the object; create it, destroy it, move it from one place to another. You are the owner, you can do what you want, you control the life of that object.</p>\n\n<p>A mutable reference borrows the object from the owner. While the mutable reference is alive, it grants exclusive access to the object. No one else can read, write, or do anything else to the object. A mutable reference could also be call and exclusive reference, or exclusive borrow. You have to return control of the object back to the original owner, but in the meantime, you get to do whatever you want with it.</p>\n\n<p>An immutable reference, or shared borrow, means you get to access it at the same time as others. Because of that, you can only read it, and no one can modify it, or there would be undefined results based on the exact order that the actions happened in.</p>\n\n<p>Both mutable (or exclusive) references and immutable (or shared) references can be made to owned objects, but that doesn't mean that you own the object when you're referring to it through the reference. What you can do with an object is constrained by what kind of reference you're reaching it through.</p>\n\n<p>So don't think of an <code>&amp;&amp;mut T</code> reference as \"an immutable reference to a mutable reference to T\", and then think \"well, I can't mutate the outer reference, but I should be able to mutate the inner reference.\"</p>\n\n<p>Instead, think of it as \"Someone owns a <code>T</code>. They've given out exclusive access, so right now there's someone who has the right to modify the <code>T</code>. But in the meantime, that person has given out shared access to the <code>&amp;mut T</code>, which means they've promised to not mutate it for a period of time, and all of the users can use the shared reference to <code>&amp;mut T</code>, including dereferencing to the underlying <code>T</code> but only for things which you can normally do with a shared reference, which means reading but not writing.\"</p>\n\n<p>The final thing to keep in mind is that the mutable or immutable part aren't actually the fundamental difference between the references. It's really the exclusive vs. shared part that are. In Rust, you can modify something through a shared reference, as long as there is some kind of inner protection mechanism that ensures that only one person does so at a time. There are multiple ways of doing that, such as <code>Cell</code>, <code>RefCell</code>, or <code>Mutex</code>.</p>\n\n<p>So what <code>&amp;T</code> and <code>&amp;mut T</code> provide isn't really immutable or mutable access, though they are named as such because that's the default level of access they provide at the language level in the absence of any library features. But what they really provide is shared or exclusive access, and then methods on data types can provide different functionality to callers depending on whether they take an owned value, an exclusive reference, or a shared reference.</p>\n\n<p>So think of references as permissions; and it's the reference that you reach something through that determines what you are allowed to do with it. And when you have ownership or an exclusive reference, giving out an exclusive or shared reference temporarily prevents you from mutably accessing the object while those borrowed references are still alive.</p>\n"}], "owner": {"reputation": 731, "user_id": 3616714, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sE5BR.png?s=128&g=1", "display_name": "domin", "link": "https://stackoverflow.com/users/3616714/domin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 783, "favorite_count": 0, "accepted_answer_id": 56034080, "answer_count": 1, "score": 4, "last_activity_date": 1557322570, "creation_date": 1557145282, "last_edit_date": 1557155804, "question_id": 56005131, "link": "https://stackoverflow.com/questions/56005131/how-to-interpret-immutable-references-to-mutable-types-in-rust", "title": "How to interpret immutable references to mutable types in Rust?", "body": "<p>It seems that I cannot mutate anything if there is <strong>any</strong> immutable reference in my chain of dereferencing. A sample:</p>\n\n<pre><code>fn main() {\n    let mut x = 42;\n    let y: &amp;mut i32 = &amp;mut x; // first layer\n    let z: &amp;&amp;mut i32 = &amp;y; // second layer\n    **z = 100; // Attempt to change `x`, gives compiler error.\n\n    println!(\"Value is: {}\", z);\n}\n</code></pre>\n\n<p>I'm getting the compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to `**z` which is behind a `&amp;` reference\n --&gt; src/main.rs:5:5\n  |\n4 |     let z: &amp;&amp;mut i32 = &amp;y; // second layer\n  |                        -- help: consider changing this to be a mutable reference: `&amp;mut y`\n5 |     **z = 100; // Attempt to change `x`, gives compiler error.\n  |     ^^^^^^^^^ `z` is a `&amp;` reference, so the data it refers to cannot be written\n</code></pre>\n\n<p>In some way, this makes sense, as otherwise the compiler would not be able to prevent having multiple mutable access paths to the same variable.</p>\n\n<p>However, when looking at the types, the semantics seem to be counter-intuitive:</p>\n\n<ul>\n<li>Variable <code>y</code> has type <code>&amp;mut i32</code>, or in plain English \"A mutable reference to an integer\".</li>\n<li>Variable <code>z</code> has type <code>&amp;&amp;mut i32</code>, or in plain English \"An immutable reference to a mutable reference to an integer\".</li>\n<li>By dereferencing <code>z</code> once (i.e. <code>*z</code>) I will get something of type <code>&amp;mut i32</code>, i.e. something of the same type as <code>y</code>. However, dereferencing this <em>again</em> (i.e. <code>**z</code>) gets me something of type <code>i32</code>, but I am not allowed to mutate that integer.</li>\n</ul>\n\n<p>In essence, the types of references in some sense lie to me, as they don't actually do what they claim they do. How should I read types of references properly in this case, or how else can I restore faith in that concept?</p>\n\n<p>Testing with this sample:</p>\n\n<pre><code>fn main() {\n    let mut x = 42;\n    let y: &amp;mut i32 = &amp;mut x; // first layer\n    let m: &amp;&amp;mut i32 = &amp;y; // second layer\n    let z: &amp;&amp;&amp;mut i32 = &amp;m; // third layer\n    compiler_builtin_deref_first_layer(*z);\n}\n\nfn compiler_builtin_deref_first_layer(v: &amp;&amp;mut i32) {\n    compiler_builtin_deref_second_layer(*v);\n}\n\nfn compiler_builtin_deref_second_layer(w: &amp;mut i32) {\n    println!(\"Value is: {}\", w);\n}\n</code></pre>\n\n<p>The parameter types of those last two functions are correct. If I change any of those, the compiler will complain about mismatched types. However, if I compile the example as-is, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow `**v` as mutable, as it is behind a `&amp;` reference\n</code></pre>\n\n<p>Somehow, the call to <code>compiler_builtin_deref_first_layer</code> seems to be okay, but the call to <code>compiler_builtin_deref_second_layer</code> isn't. The compiler error talks about <code>**v</code>, but I only see a <code>*v</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 11458996, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6930d85c21d8cddae762ff43e220ea36?s=128&d=identicon&r=PG&f=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/11458996/tim"}, "edited": false, "score": 0, "creation_date": 1557147140, "post_id": 56005364, "comment_id": 98656727, "body": "Thank you for your detailed and comprehensible answer. This helps me a lot. I guess I should also go back a bit al read more about the concept of Rust. Again, thank you!"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 5, "last_activity_date": 1557210047, "last_edit_date": 1557210047, "creation_date": 1557146069, "answer_id": 56005364, "question_id": 56004812, "link": "https://stackoverflow.com/questions/56004812/how-can-i-assign-different-class-instances-to-an-variable-in-rust/56005364#56005364", "title": "How can I assign different class instances to an variable in Rust?", "body": "<p>There are several issues with your code. Let's take them in order.</p>\n\n<p>First you can't assign values of different types to a variable. In Java it works because in Java (almost) everything is a heap-allocated reference, but Rust distinguishes between values and references. So you need to tell the compiler explicitly that you want heap-allocated references. In Rust, this is done with <code>Box</code>:</p>\n\n<pre><code>let cmd: Box&lt;dyn Command&gt; = if args.len() &gt; 10 {\n    Box::new (FirstCommand::new())\n} else {\n    Box::new (SecondCommand::new())\n};\n</code></pre>\n\n<p>Now you hit the second issue with your code, which is the duplicate pointed out by @French Boiethios:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `Command` cannot be made into an object\n  --&gt; src/main.rs:37:14\n   |\n37 |     let cmd: Box&lt;dyn Command&gt; = if args.len() &gt; 10 {\n   |              ^^^^^^^^^^^^^^^^ the trait `Command` cannot be made into an object\n   |\n   = note: method `get_name` has no receiver\n</code></pre>\n\n<p>In Java every non-static method has an implicit argument called <code>this</code>, which is a reference to the instance on which the method should work. In Rust you need to declare that reference explicitly as <code>&amp;self</code>:</p>\n\n<pre><code>fn get_name (&amp;self) -&gt; &amp;'static str;\n</code></pre>\n\n<p>At which point you hit the last error: there is a missing semicolon at the end of your code.</p>\n\n<p>Final working code:</p>\n\n<pre><code>use std::env;\n\nstruct FirstCommand {}\nstruct SecondCommand {}\n\ntrait Command {\n    fn get_name (&amp;self) -&gt; &amp;'static str;\n}\n\nimpl FirstCommand {\n    fn new() -&gt; FirstCommand {\n        FirstCommand {}\n    }\n}\n\nimpl Command for FirstCommand {\n    fn get_name (&amp;self) -&gt; &amp;'static str {\n        \"First command\"\n    }\n}\n\nimpl SecondCommand {\n    fn new() -&gt; SecondCommand {\n        SecondCommand {}\n    }\n}\n\nimpl Command for SecondCommand {\n    fn get_name (&amp;self) -&gt; &amp;'static str {\n        \"Second command\"\n    }\n}\n\nfn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n\n    let cmd: Box&lt;dyn Command&gt; = if args.len() &gt; 10 {\n        Box::new (FirstCommand::new())\n    } else {\n        Box::new (SecondCommand::new())\n    };\n\n    cmd.get_name();\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ed248c2aa5b062217822577df503b4a0\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 25, "user_id": 11458996, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6930d85c21d8cddae762ff43e220ea36?s=128&d=identicon&r=PG&f=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/11458996/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 292, "favorite_count": 0, "closed_date": 1557149932, "accepted_answer_id": 56005364, "answer_count": 1, "score": 1, "last_activity_date": 1557210047, "creation_date": 1557144144, "last_edit_date": 1557144210, "question_id": 56004812, "link": "https://stackoverflow.com/questions/56004812/how-can-i-assign-different-class-instances-to-an-variable-in-rust", "closed_reason": "Duplicate", "title": "How can I assign different class instances to an variable in Rust?", "body": "<p>I'm trying to create a simple program in Rust (for educational purposes). For now, I mostly developed in classic OOP languages like Java so I am aware that it might be that I cannot realize the same thing in Rust.</p>\n\n<p>I am trying to avoid duplicate code by initializing a variable depending on an external (user triggered) input and then calling methods on this object instance. </p>\n\n<p>I searched a while for an answer but I could not get a clear answer for my problem.</p>\n\n<p>To specify my problem, I wrote the following lines in Java:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>interface Command {\n    String getName();\n}\n\nclass FirstCommand implements Command {\n    @Override\n    public String getName() {\n        return \"First command\";\n    }\n}\n\nclass SecondCommand implements Command {\n    @Override\n    public String getName() {\n        return \"Second command\";\n    }\n}\n\npublic class Test {\n    public static void main(String[] argv) {\n        Command cmd;\n        if (argv.length &gt; 10) {\n            cmd = new SecondCommand();\n        } else {\n            cmd = new FirstCommand();\n        }\n        System.out.println(cmd.getName());\n    }\n}\n</code></pre>\n\n<p>This is basically the same I want to achieve in Rust. As far as I understood, <code>traits</code> are the Rust equivalent to <code>interfaces</code> in Java. So I tried to do the same in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::env;\n\nstruct FirstCommand {}\nstruct SecondCommand {}\n\ntrait Command {\n    fn get_name() -&gt; &amp;'static str;\n}\n\nimpl FirstCommand {\n    fn new() -&gt; FirstCommand {\n        FirstCommand {}\n    }\n}\n\nimpl Command for FirstCommand {\n    fn get_name() -&gt; &amp;'static str {\n        \"First command\"\n    }\n}\n\nimpl SecondCommand {\n    fn new() -&gt; SecondCommand {\n        SecondCommand {}\n    }\n}\n\nimpl Command for SecondCommand {\n    fn get_name() -&gt; &amp;'static str {\n        \"Second command\"\n    }\n}\n\nfn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n\n    let cmd: Command = if args.len() &gt; 10 {\n        FirstCommand::new()\n    } else {\n        SecondCommand::new()\n    };\n\n    cmd.get_name()\n}\n</code></pre>\n\n<p>If I am now trying to compile the code. I get the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>38 |     let cmd: Command = if args.len() &gt; 10 {\n   |              ^^^^^^^ the trait `Command` cannot be made into an object\n</code></pre>\n\n<p>I tried the same without explicitly defining a type for <code>cmd</code>. This results in</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>38 |       let cmd = if args.len() &gt; 10 {\n   |  _______________-\n39 | |         FirstCommand::new()\n   | |         ------------------- expected because of this\n40 | |     } else {\n41 | |         SecondCommand::new()\n   | |         ^^^^^^^^^^^^^^^^^^^^ expected struct `FirstCommand`, found struct `SecondCommand`\n42 | |     };\n   | |_____- if and else have incompatible types\n</code></pre>\n\n<p>Can someone give me a hint what to do to realize the Java example in Rust?</p>\n"}, {"tags": ["rust", "traits", "associated-types", "rust-diesel"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1557139345, "post_id": 56003489, "comment_id": 98652824, "body": "Can you provide the definitions for <code>Cat</code>/<code>Cats</code> and <code>Dog</code>/<code>Dogs</code>?"}, {"owner": {"reputation": 369, "user_id": 5784021, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e60c725ab61739cbd73c4e8d5f42f217?s=128&d=identicon&r=PG&f=1", "display_name": "KillPinguin", "link": "https://stackoverflow.com/users/5784021/killpinguin"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1557143571, "post_id": 56003489, "comment_id": 98654827, "body": "They are pretty irrelevant, but <code>pub Struct Cat { pub id: Uuid }</code> and <code>pub Struct Dog { pub id: Uuid }</code> should suffice."}], "answers": [{"comments": [{"owner": {"reputation": 369, "user_id": 5784021, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e60c725ab61739cbd73c4e8d5f42f217?s=128&d=identicon&r=PG&f=1", "display_name": "KillPinguin", "link": "https://stackoverflow.com/users/5784021/killpinguin"}, "edited": false, "score": 0, "creation_date": 1557143125, "post_id": 56003745, "comment_id": 98654591, "body": "Nice Idea, but Resource is not a type, it is an instance of <code>diesel::query_dsl::RunQueryDsl</code> if I understand it correctly.  Nevertheless I could do <code>type Resource;</code> and then use this type in the method signature for <code>get_resource() -&gt; Resource</code>, right?"}, {"owner": {"reputation": 369, "user_id": 5784021, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e60c725ab61739cbd73c4e8d5f42f217?s=128&d=identicon&r=PG&f=1", "display_name": "KillPinguin", "link": "https://stackoverflow.com/users/5784021/killpinguin"}, "edited": false, "score": 0, "creation_date": 1557143805, "post_id": 56003745, "comment_id": 98654937, "body": "nvm. I would still need to tell the compiler that <code>Resource</code> has a method <code>.load()</code>, so I again need to constrain it, which is the problem that I have in the first place."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 369, "user_id": 5784021, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e60c725ab61739cbd73c4e8d5f42f217?s=128&d=identicon&r=PG&f=1", "display_name": "KillPinguin", "link": "https://stackoverflow.com/users/5784021/killpinguin"}, "edited": false, "score": 0, "creation_date": 1557148062, "post_id": 56003745, "comment_id": 98657229, "body": "@KillPinguin I think you need to provide more information about all of the types involved."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1557141347, "last_edit_date": 1557141347, "creation_date": 1557140079, "answer_id": 56003745, "question_id": 56003489, "link": "https://stackoverflow.com/questions/56003489/infer-types-for-type-constructor/56003745#56003745", "title": "Infer types for type constructor", "body": "<p>It seems like you need an associated type on your trait. This lets you express the fact that data struct has a unique resource type associated with it.</p>\n\n<pre><code>trait GetAll {\n    type Resource; \n    fn get_all(conn: &amp;PgConnection) -&gt; Vec&lt;Self&gt; {\n        Self::Resource::load::&lt;Self&gt;(conn)\n    }\n}\n\nimpl GetAll for Dog {\n    type Resource = Dogs;\n}\n\nimpl GetAll for Cat {\n    type Resource = Cats;\n}\n</code></pre>\n\n<p>Which you should be able to use like this:</p>\n\n<pre><code>let dogs = Dog::get_all(&amp;conn);\nlet cats = Cat::get_all(&amp;conn);\n</code></pre>\n"}], "owner": {"reputation": 369, "user_id": 5784021, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e60c725ab61739cbd73c4e8d5f42f217?s=128&d=identicon&r=PG&f=1", "display_name": "KillPinguin", "link": "https://stackoverflow.com/users/5784021/killpinguin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1557141347, "creation_date": 1557139109, "last_edit_date": 1557140270, "question_id": 56003489, "link": "https://stackoverflow.com/questions/56003489/infer-types-for-type-constructor", "title": "Infer types for type constructor", "body": "<p>This might seem like a specific question but I'll try to generalize it as much as possible. Feel free to edit the title as I'm kind of Rust newbie and don't know how to phrase it concisely.</p>\n\n<p>What I want to do is best explained by example.</p>\n\n<p>I'm using diesel and generated <code>schema.rs</code> which defines the tables <code>Cats</code> and <code>Dogs</code> (with the <code>table!</code> macro).</p>\n\n<p>Now I wrote <code>get_all</code> functions for <code>Cat</code> and <code>Dog</code> (2 Structs which I implemented)</p>\n\n<pre><code>pub fn get_all_cats(connection: &amp;PgConnection) -&gt; Vec&lt;Cat&gt; {\n    Cats\n        .load::&lt;Cat&gt;(connection)\n        .expect(\"Error\")\n}\n\npub fn get_all_dogs(connection: &amp;PgConnection) -&gt; Vec&lt;Dog&gt; {\n    Dogs\n        .load::&lt;Dog&gt;(connection)\n        .expect(\"Error\")\n}\n</code></pre>\n\n<p>But as they basically do the same I would love to generalize them in a <code>get_all&lt;T&gt;</code> method.</p>\n\n<p>I thought of creating a trait:</p>\n\n<pre><code>trait GetAll&lt;T=Self&gt; {\n   fn get_all(conn: &amp;PgConnection) -&gt; Vec&lt;T&gt; {\n      Resource.load::&lt;T&gt;(conn)\n   }\n}\n</code></pre>\n\n<p>And of course I need to define <code>Resource</code> now, which is either <code>Cats</code> or <code>Dogs</code>. So I wanted to do a workaround and define a method <code>get_resource</code> which I can override in <code>Cat</code> and <code>Dog</code> to give their respected Resource. This is of type <code>diesel::query_dsl::RunQueryDsl&lt;Conn&gt;</code>.</p>\n\n<p>The Problem is that I don't have a clue what type constraints <code>Conn</code> must implement (and then the Type Arguments of that Type, and so on) and I think there should be an easier way then reverse engineering the whole Type-Chain from diesel.</p>\n\n<pre><code>trait GetAll&lt;T=Self&gt; {\n   fn get_resource() -&gt; diesel::query_dsl::RunQueryDsl;\n\n   fn get_all(conn: &amp;PgConnection) -&gt; Vec&lt;T&gt; {\n      get_resource().load::&lt;T&gt;(conn)\n   }\n}\n</code></pre>\n\n<p>This fails with <code>expected 1 type argument</code></p>\n\n<p>Is there a \"fix\" for my approach (e.g. the compiler infers the type automatically) or is the design broken? If the latter is the case, how can I generalize the <code>get_all</code> method? </p>\n\n<p>PS: The same goes for the <code>Queryable</code> trait, which should be a constraint for <code>T</code>, but again requires 2 Type Parameters.</p>\n"}, {"tags": ["rust", "iron"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557192580, "post_id": 55997427, "comment_id": 98673144, "body": "<i>I want to be able to re-use the controller on different routes</i> \u2014 and do you want the persistent data to be globally shared across all of these routes, or does each route have its own unique persistent data?"}, {"owner": {"reputation": 655, "user_id": 1097744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634cbe43dbe3abb2c23ec03e3ab02b2e?s=128&d=identicon&r=PG", "display_name": "Brice Lechatellier", "link": "https://stackoverflow.com/users/1097744/brice-lechatellier"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557208170, "post_id": 55997427, "comment_id": 98676368, "body": "I want the persistent data to be globally shared across all of these routes."}], "answers": [{"comments": [{"owner": {"reputation": 655, "user_id": 1097744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634cbe43dbe3abb2c23ec03e3ab02b2e?s=128&d=identicon&r=PG", "display_name": "Brice Lechatellier", "link": "https://stackoverflow.com/users/1097744/brice-lechatellier"}, "edited": false, "score": 0, "creation_date": 1557117667, "post_id": 55998165, "comment_id": 98644476, "body": "Thanks, edited the main question with the suggestion, still throwing errors regarding the lifetime."}], "tags": [], "owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "is_accepted": false, "score": -1, "last_activity_date": 1557150616, "last_edit_date": 1557150616, "creation_date": 1557110306, "answer_id": 55998165, "question_id": 55997427, "link": "https://stackoverflow.com/questions/55997427/iron-persistent-state-with-struct-reference/55998165#55998165", "title": "Iron persistent state with struct reference", "body": "<p>You need to add an explicit lifetime bound to your <code>impl</code> block. Otherwise the compiler has no clue on the reference validity of the controller reference.</p>\n\n<p>This should work, though I have not tested it</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Rest {\n    controller: controller::Controller,\n}\n\nimpl&lt;'a&gt; Key for &amp;'a controller::Controller {\n    type Value = Self;\n}\n\nimpl Rest {\n    pub fn run(&amp;self) {\n        let mut router = Router::new();\n        let mut chain = Chain::new(router);\n        chain.link(Read::&lt;&amp;controller::Controller&gt;::both(&amp;self.controller));\n        Iron::new(chain).http(format!(\"0.0.0.0:1234\"))\n    }\n}\n</code></pre>\n\n<p>On a side note, I don't think you need to specify the type on the <code>Read</code> call, the compiler should be able to determine it from the context.</p>\n"}, {"comments": [{"owner": {"reputation": 655, "user_id": 1097744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634cbe43dbe3abb2c23ec03e3ab02b2e?s=128&d=identicon&r=PG", "display_name": "Brice Lechatellier", "link": "https://stackoverflow.com/users/1097744/brice-lechatellier"}, "edited": false, "score": 0, "creation_date": 1557210133, "post_id": 56014365, "comment_id": 98677087, "body": "what does the more complicated solution would look like if I wanted to have a reference to the controller?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 655, "user_id": 1097744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634cbe43dbe3abb2c23ec03e3ab02b2e?s=128&d=identicon&r=PG", "display_name": "Brice Lechatellier", "link": "https://stackoverflow.com/users/1097744/brice-lechatellier"}, "edited": false, "score": 1, "creation_date": 1557258919, "post_id": 56014365, "comment_id": 98702771, "body": "@BriceLechatellier sorry for the ambiguous wording \u2014 there is <i>no</i> way to implement <code>Key</code> for a reference, unless the reference is <code>&#39;static</code> (a.k.a. a global), so there is no &quot;complicated&quot; solution. I mean that the provided solution is the simplest working solution, starting from your proposed structure. I&#39;ve linked to alternate Q&amp;A that show how to have such a global."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1557258846, "last_edit_date": 1557258846, "creation_date": 1557192688, "answer_id": 56014365, "question_id": 55997427, "link": "https://stackoverflow.com/questions/55997427/iron-persistent-state-with-struct-reference/56014365#56014365", "title": "Iron persistent state with struct reference", "body": "<p>As the error message states:</p>\n\n<blockquote>\n  <p>but lifetime parameter must outlive the static lifetime</p>\n</blockquote>\n\n<p>This is because <a href=\"https://docs.rs/iron/0.6.0/iron/typemap/trait.Key.html\" rel=\"nofollow noreferrer\"><code>Key</code></a> uses <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"nofollow noreferrer\"><code>Any</code></a> as a supertrait, which requires <code>'static</code>:</p>\n\n<pre><code>pub trait Any: 'static {\n    fn type_id(&amp;self) -&gt; TypeId;\n}\n</code></pre>\n\n<p>The simplest solution is to implement <code>Key</code> for a value and then give the value to <code>Read::both</code>:</p>\n\n<pre><code>impl Key for Controller {\n    type Value = Self;\n}\n\nimpl Rest {\n    pub fn run(self) {\n        let router = Router::new();\n        let mut chain = Chain::new(router);\n        chain.link(Read::&lt;Controller&gt;::both(self.controller));\n        Iron::new(chain).http(format!(\"0.0.0.0:1234\")).ok();\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>I want the persistent data to be globally shared across all of these routes</p>\n</blockquote>\n\n<p>In that case, I'd eschew using the persistent crate completely and just create a singleton:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27221504/155423\">How can you make a safe static singleton in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 655, "user_id": 1097744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/634cbe43dbe3abb2c23ec03e3ab02b2e?s=128&d=identicon&r=PG", "display_name": "Brice Lechatellier", "link": "https://stackoverflow.com/users/1097744/brice-lechatellier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 56014365, "answer_count": 2, "score": 0, "last_activity_date": 1557258846, "creation_date": 1557101115, "last_edit_date": 1557192168, "question_id": 55997427, "link": "https://stackoverflow.com/questions/55997427/iron-persistent-state-with-struct-reference", "title": "Iron persistent state with struct reference", "body": "<p>I'm struggling with getting a persistent reference working with Iron, not sure how to set an appropriate lifetime. I want to be able to re-use the controller on different routes.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>use iron::prelude::*;\nuse iron::typemap::Key;\nuse persistent::Read;\nuse router::Router;\n\npub struct Controller;\n\npub struct Rest {\n    controller: Controller,\n}\n\nimpl Key for &amp;Controller {\n    type Value = Self;\n}\n\nimpl Rest {\n    pub fn run(&amp;self) {\n        let router = Router::new();\n        let mut chain = Chain::new(router);\n        chain.link(Read::&lt;&amp;Controller&gt;::both(&amp;self.controller));\n        Iron::new(chain).http(format!(\"0.0.0.0:1234\")).ok();\n    }\n}\n\nfn main() {\n    Rest {\n        controller: Controller,\n    }\n    .run();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>[dependencies]\niron = \"0.6.*\"\nrouter = \"0.6.*\"\npersistent = \"0.4.0\"\n</code></pre>\n\n<p><a href=\"https://gist.github.com/blechatellier/a4fabf9251250cfa208b817a2d6b5b73\" rel=\"nofollow noreferrer\">Gist of example</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0478]: lifetime bound not satisfied\n  --&gt; src/main.rs:12:6\n   |\n12 | impl Key for &amp;Controller {\n   |      ^^^\n   |\nnote: lifetime parameter instantiated with the lifetime '_ as defined on the impl at 12:14\n  --&gt; src/main.rs:12:14\n   |\n12 | impl Key for &amp;Controller {\n   |              ^\n   = note: but lifetime parameter must outlive the static lifetime\n\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'_` due to conflicting requirements\n  --&gt; src/main.rs:12:6\n   |\n12 | impl Key for &amp;Controller {\n   |      ^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime '_ as defined on the impl at 12:14...\n  --&gt; src/main.rs:12:14\n   |\n12 | impl Key for &amp;Controller {\n   |              ^\n   = note: ...so that the types are compatible:\n           expected typemap::Key\n              found typemap::Key\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `&amp;Controller` will meet its required lifetime bounds\n  --&gt; src/main.rs:12:6\n   |\n12 | impl Key for &amp;Controller {\n   |      ^^^\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo", "nix", "nixos"], "answers": [{"tags": [], "owner": {"reputation": 615, "user_id": 2516576, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/y6Uco.jpg?s=128&g=1", "display_name": "Jesse Lawson", "link": "https://stackoverflow.com/users/2516576/jesse-lawson"}, "is_accepted": false, "score": 1, "last_activity_date": 1557892574, "creation_date": 1557892574, "answer_id": 56141554, "question_id": 55996879, "link": "https://stackoverflow.com/questions/55996879/nixos-my-custom-package-derivation-fails-on-cargo-build/56141554#56141554", "title": "nixos: my custom package derivation fails on `cargo build`", "body": "<p>I don't think you'll get around the <code>[replace]</code> edit for the config files. The build failing at <code>cargo web deploy</code> is due to an outdated version of openssl-sys (which is discontinued). <a href=\"https://github.com/paritytech/substrate/pull/913/files\" rel=\"nofollow noreferrer\">Here's how Parity fixed it</a>. Looks like they edited the Cargo.lock file to depend on newer versions of this lib.</p>\n"}], "owner": {"reputation": 41, "user_id": 8346437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2fa6f13ae996d5ecf3972694d60f7f99?s=128&d=identicon&r=PG&f=1", "display_name": "user8346437", "link": "https://stackoverflow.com/users/8346437/user8346437"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 499, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1557892574, "creation_date": 1557094489, "last_edit_date": 1557150356, "question_id": 55996879, "link": "https://stackoverflow.com/questions/55996879/nixos-my-custom-package-derivation-fails-on-cargo-build", "title": "nixos: my custom package derivation fails on `cargo build`", "body": "<p>I'm writing a package derivation to install <a href=\"https://github.com/kryptco/kr\" rel=\"nofollow noreferrer\">kryptco/kr</a> and it fails on <code>cargo build</code> phase.</p>\n\n<p><code>kryptco/kr</code> has a submodule <code>kryptco/sigchain</code> which is written by rust.\nIn the <a href=\"https://github.com/kryptco/sigchain/blob/8ad8442c55a3363d44340fb07c018fa4d9362f2b/Makefile#L22-L25\" rel=\"nofollow noreferrer\">Makefile</a> of <code>kryptco/sigchain</code>, they use the <code>cargo web deploy</code> command to build its submodule. My package deriation fails on this <code>cargo web deploy</code> phase.</p>\n\n<p>These two errors were given.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: warning: replace for the non root package will be ignored, specify replace at the workspace root:\npackage:   /build/src/github.com/kryptco/kr/sigchain/sigchain_client/Cargo.toml\nworkspace: /build/src/github.com/kryptco/kr/sigchain/Cargo.toml\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: failed to fetch `https://github.com/rust-lang/crates.io-index`\n\nCaused by:\n  [6] Couldn't resolve host name; class=Net (12)\n</code></pre>\n\n<p>The former error says to edit <code>Cargo.toml</code> and add <code>[replace]</code> section, but I want to avoid edit source code if I can.</p>\n\n<p>What is the cause of these error?</p>\n\n<p>This is my package derivation:</p>\n\n<pre><code># Original: https://github.com/bogsen/nixos-public/blob/a0dc497eab5de528ce3006d\\\n36c52bc601422cf87/pkgs/krypton/default.nix\n\n{ config, lib, pkgs, ... }: with lib; let\n  cfg = config.services.krypton;\n\n  cargoWeb = with pkgs; rustPlatform.buildRustPackage rec {\n     ...\n  };\n  dependencies = with pkgs; [\n    cargo\n    emscripten\n    go\n    makeWrapper\n    perl\n  ];\n\n  kr = pkgs.stdenv.mkDerivation {\n    name = \"kr\";\n\n    src = pkgs.fetchFromGitHub {\n      owner = \"kryptco\";\n      repo = \"kr\";\n      rev = \"2.4.10\";\n      sha256 = \"1xxhlkcw2d52q1y4h40iyvq25804w7hzv0lflqnib68aps491xnj\";\n      fetchSubmodules = true;\n    };\n\n    buildInputs = dependencies ++ [cargoWeb];\n\n    dontBuild = true;\n\n    postUnpack = ''\n      # prevent referring /homeless-shelter\n      export HOME=$(pwd)\n\n      # https://github.com/kryptco/kr/issues/254#issuecomment-464890476\n      sed -i.bak -e '8,11d' source/sigchain/Cargo.toml\n\n      export GOPATH=$(pwd)\n      export GOCACHE=$GOPATH/.cache/go-build\n      mkdir -p src/github.com/kryptco\n      mv source src/github.com/kryptco/kr\n      ln -s src/github.com/kryptco/kr source\n    '';\n\n    postPatch = ''\n      substituteInPlace Makefile --replace sudo \"\"\n    '';\n\n    makeFlags = [ \"PREFIX=$(out)\" ];\n  };\nin {\n  config = {\n    nixpkgs.config.packageOverrides = pkgs: { kr = kr; };\n  };\n}\n</code></pre>\n\n<p>And whole error message is here.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code># use rsync so that file modifed times are only updated when the contents change\ncd dashboard_yew &amp;&amp; cargo web deploy --release --target=wasm32-unknown-emscripten &amp;&amp; rsync --checksum --delete -r ../target/deploy/* ../target/deploy-final\nerror: warning: replace for the non root package will be ignored, specify replace at the workspace root:\npackage:   /build/src/github.com/kryptco/kr/sigchain/sigchain_client/Cargo.toml\nworkspace: /build/src/github.com/kryptco/kr/sigchain/Cargo.toml\n    Updating crates.io index\nwarning: spurious network error (2 tries remaining): [6] Couldn't resolve host name; class=Net (12)\nwarning: spurious network error (1 tries remaining): [6] Couldn't resolve host name; class=Net (12)\nerror: failed to fetch `https://github.com/rust-lang/crates.io-index`\n\nCaused by:\n  [6] Couldn't resolve host name; class=Net (12)\n\nmake[1]: *** [Makefile:25: libsigchain-with-dashboard] Error 101\nmake[1]: Leaving directory '/build/src/github.com/kryptco/kr/sigchain'\nmake: *** [Makefile:71: all] Error 2\nbuilder for '/nix/store/78r0kh34ljzgfx658f9n99f8lxydjfxy-kr.drv' failed with exit code 2\n</code></pre>\n"}, {"tags": ["ruby", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1557092151, "creation_date": 1557092151, "answer_id": 55996624, "question_id": 55996597, "link": "https://stackoverflow.com/questions/55996597/is-passing-a-string-back-to-the-calling-code-necessary-in-ffi-modules-to-prevent/55996624#55996624", "title": "Is passing a string back to the calling code necessary in FFI modules to prevent memory leaks?", "body": "<blockquote>\n  <p>Do I have to pass the string back to Rust to be freed?</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<blockquote>\n  <p>Won't garbage collection pick this <code>some_string</code> up and free it?</p>\n</blockquote>\n\n<p>Yes, but that's not the memory leak to worry about. The garbage collector <em>will</em> free the memory allocated by Ruby that contains the transformed Ruby string.</p>\n\n<p>However, the garbage collector has no knowledge of the <em>allocation</em> that Rust made. Specifically, the Rust code might <em>not</em> even have made an allocation. In that case, if the calling code freed the string, that would cause memory unsafety, so the FFI library cannot assume that this <code>char *</code> was an allocation.</p>\n\n<p>Even if it did, it wouldn't know which allocator to use to deallocate with. Remember that there are frequently multiple allocators in play in a moderately complex application.</p>\n\n<p>Disclaimer: I'm the author of the <em>Omnibus</em>.</p>\n"}], "owner": {"reputation": 1054, "user_id": 3478959, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/b52236406c4b6e4fa0bb619db556cf14?s=128&d=identicon&r=PG&f=1", "display_name": "Lev", "link": "https://stackoverflow.com/users/3478959/lev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 0, "accepted_answer_id": 55996624, "answer_count": 1, "score": 1, "last_activity_date": 1557092151, "creation_date": 1557091871, "last_edit_date": 1557091995, "question_id": 55996597, "link": "https://stackoverflow.com/questions/55996597/is-passing-a-string-back-to-the-calling-code-necessary-in-ffi-modules-to-prevent", "title": "Is passing a string back to the calling code necessary in FFI modules to prevent memory leaks?", "body": "<p>I have</p>\n\n<p><em>lib.rs</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn test() -&gt; *const c_char {\n    CString::from(\"Hello\").unwrap().into_raw()\n}\n</code></pre>\n\n<p>In Ruby, I call it as</p>\n\n<p><em>main.rb</em></p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>require 'ffi'\n\nmodule Rust\n   extend FFI::Library\n\n   # [redacted loading the library]\n\n   attach_function :test, [], :string\nend\n\nsome_string = Rust::test()\n</code></pre>\n\n<p>Do I have to pass the string back to Rust to be freed? Won't garbage collection pick this <code>some_string</code> up and free it?</p>\n\n<p>I'm using <a href=\"http://jakegoulding.com/rust-ffi-omnibus/string_return/\" rel=\"nofollow noreferrer\"><em>The Rust FFI Omnibus</em></a> as a reference. I ran <code>valgrind ruby main.rb</code> and it didn't seem to find any leaks.</p>\n"}, {"tags": ["unit-testing", "testing", "rust", "attributes", "visibility"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1557081495, "post_id": 55995061, "comment_id": 98637650, "body": "It <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=343d6ccd35093317ec8db96ca36b2205\" rel=\"nofollow noreferrer\">does seem so</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1557091887, "post_id": 55995786, "comment_id": 98640202, "body": "I find that, in practice, I create little helper functions and types in order to thoroughly  test my code. Those benefit from the conditionally-compiled nested <code>test</code> module."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557093040, "post_id": 55995786, "comment_id": 98640403, "body": "@Shepmaster Also it&#39;s good for mocking types and functions from the std library, for example <code>Instant</code>, which is hard to work with in tests otherwise."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1557097117, "post_id": 55995786, "comment_id": 98641160, "body": "I don&#39;t know if that&#39;s useful information to anyone, but another way to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3aa4f181b45b9ea908548efbcbd8740b\" rel=\"nofollow noreferrer\">test this is with <code>compile_error!</code></a>."}, {"owner": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557102618, "post_id": 55995786, "comment_id": 98642007, "body": "@Shepmaster for that kind of stuff I use a test module (or, more commonly, a whole separate <code>tests</code> directory), but for quick inline stuff where a doctest isn&#39;t warrented I&#39;ve found I really like the item-test-item-test pattern."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1557085676, "creation_date": 1557085676, "answer_id": 55995786, "question_id": 55995061, "link": "https://stackoverflow.com/questions/55995061/does-test-imply-cfgtest/55995786#55995786", "title": "Does `#[test]` imply `#[cfg(test)]`?", "body": "<blockquote>\n  <p>My question is, does <code>#[test]</code> imply <code>#[cfg(test)]</code>? That is, if I tag my test functions with <code>#[test]</code> but not <code>#[cfg(test)]</code>, will they still be correctly absent in non-test builds?</p>\n</blockquote>\n\n<p>Yes. If you are not using a separate module for tests then you don't need to use <code>#[cfg(test)]</code>. Functions marked with <code>#[test]</code> are already excluded from non-test builds. This can be verified very easily:</p>\n\n<pre><code>#[test]\nfn test() {}\n\nfn main() {\n    test(); // error[E0425]: cannot find function `test` in this scope\n}\n</code></pre>\n"}], "owner": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 705, "favorite_count": 0, "accepted_answer_id": 55995786, "answer_count": 1, "score": 5, "last_activity_date": 1557085700, "creation_date": 1557080679, "last_edit_date": 1557085700, "question_id": 55995061, "link": "https://stackoverflow.com/questions/55995061/does-test-imply-cfgtest", "title": "Does `#[test]` imply `#[cfg(test)]`?", "body": "<p>Conventionally, unit tests in Rust are given a separate module, which is conditionally compiled with <code>#[cfg(test)]</code>:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn test1() { ... }\n\n    #[test]\n    fn test2() { ... }\n}\n</code></pre>\n\n<p>However, I've been using a style where tests are more inline:</p>\n\n<pre><code>pub fn func1() {...}\n\n#[cfg(test)]\n#[test]\nfn test_func1() {...}\n\npub fn func2() {...}\n\n#[cfg(test)]\n#[test]\nfn test_func2() {...}\n</code></pre>\n\n<p>My question is, does <code>#[test]</code> imply <code>#[cfg(test)]</code>? That is, if I tag my test functions with <code>#[test]</code> but not <code>#[cfg(test)]</code>, will they still be correctly absent in non-test builds?</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 13, "user_id": 11456048, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b69cf0d3f465f806f5ca3074646ccebd?s=128&d=identicon&r=PG&f=1", "display_name": "bmiller3230", "link": "https://stackoverflow.com/users/11456048/bmiller3230"}, "is_accepted": false, "score": 0, "last_activity_date": 1557093550, "last_edit_date": 1557093550, "creation_date": 1557080600, "answer_id": 55995047, "question_id": 55994735, "link": "https://stackoverflow.com/questions/55994735/question-about-generics-and-traits-in-rust/55995047#55995047", "title": "Question about generics and traits in Rust", "body": "<p>What I got to compile is not far off of what has to be done to resolve this, but I don't like the solution. It seems you <em>do</em> have to add a dummy field that uses the type with <a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\"><code>PhantomData</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 13, "user_id": 11456048, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b69cf0d3f465f806f5ca3074646ccebd?s=128&d=identicon&r=PG&f=1", "display_name": "bmiller3230", "link": "https://stackoverflow.com/users/11456048/bmiller3230"}, "edited": false, "score": 0, "creation_date": 1557108839, "post_id": 55995775, "comment_id": 98642917, "body": "Thanks.  Trait objects provide the behavior I was after.  Now I have to wrap my head around when to use associated types, type parameters, or trait objects..."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 0, "last_activity_date": 1557085606, "creation_date": 1557085606, "answer_id": 55995775, "question_id": 55994735, "link": "https://stackoverflow.com/questions/55994735/question-about-generics-and-traits-in-rust/55995775#55995775", "title": "Question about generics and traits in Rust", "body": "<p>Change <code>DoSomethingProvider</code> to use an <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#specifying-placeholder-types-in-trait-definitions-with-associated-types\" rel=\"nofollow noreferrer\">associated type</a> instead of a type parameter for the listener type.</p>\n\n<pre><code>pub trait DoSomethingListener {\n    fn something_was_done(msg: &amp;str);\n}\n\npub trait DoSomethingProvider {\n    type Listener: DoSomethingListener;\n\n    fn add_do_something_listener(listener: Self::Listener);\n}\n\npub struct DoSomethingManager&lt;B&gt;\nwhere\n    B: DoSomethingProvider,\n{\n    provider: Box&lt;B&gt;,\n}\n</code></pre>\n\n<p>Note that by using either an associated type or a type parameter, a particular instance of <code>DoSomethingProvider</code> will only be able to accept listeners of a single specific type. If you want to be able to register listeners of various types, you will need to use dynamic dispatch via <a href=\"https://doc.rust-lang.org/book/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait objects</a>.</p>\n"}], "owner": {"reputation": 13, "user_id": 11456048, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b69cf0d3f465f806f5ca3074646ccebd?s=128&d=identicon&r=PG&f=1", "display_name": "bmiller3230", "link": "https://stackoverflow.com/users/11456048/bmiller3230"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 55995775, "answer_count": 2, "score": 0, "last_activity_date": 1557119675, "creation_date": 1557078383, "last_edit_date": 1557119675, "question_id": 55994735, "link": "https://stackoverflow.com/questions/55994735/question-about-generics-and-traits-in-rust", "title": "Question about generics and traits in Rust", "body": "<p>I have the <code>DoSomethingProvider</code> trait that expects a parameter of one of its functions to be of trait type <code>DoSomethingListener</code>.</p>\n\n<p>I have a concrete struct <code>DoSomethingManager</code> that has a member of type <code>DoSomethingProvider</code>, and will implement the <code>DoSomethingListener</code> trait and pass it self as a listener to <code>DoSomethingProvider</code>.</p>\n\n<p>Hopefully the code will illustrate what I'm trying to do:</p>\n\n<pre><code>pub trait DoSomethingListener {\n    fn something_was_done(msg: &amp;str);\n}\n\npub trait DoSomethingProvider&lt;'a, T&gt;\nwhere\n    T: DoSomethingListener,\n{\n    fn add_do_something_listener(listener: T);\n}\n\n/* note:  The struct below will implement DoSomethingListener, and has\n * a DoSomethingProvider field.  It will pass itself as a listener to\n * DoSomethingProvider (which listens to a message queue and notifies\n * listeners of certain events)\n */\n\n//this doesn't work.  Compiler complains about unused type T\npub struct DoSomethingManager&lt;'a, B, T&gt;\nwhere\n    T: DoSomethingListener,\n    B: DoSomethingProvider&lt;'a, T&gt;,\n{\n    provider: Box&lt;B&gt;,\n    // doesn't have any member of type T\n}\n\n// ...\n\n/* So I tried this:\n * this doesn't work.  Compiler complains that DoSomethingProvider\n * expects one type parameter\n */\npub struct DoSomethingManager&lt;'a, B&gt;\nwhere\n    B: DoSomethingProvider&lt;'a&gt;,\n{\n    provider: Box&lt;B&gt;,\n    // doesn't have any member of type T\n}\n\n//...\n\n/* this compiles, but its a hack */\npub struct DoSomethingManager&lt;'a, B, T&gt;\nwhere\n    T: DoSomethingListener,\n    B: DoSomethingProvider&lt;'a, T&gt;,\n{\n    provider: Box&lt;B&gt;,\n    dummy: Box&lt;T&gt;,\n    // added unused dummy member of type T\n}\n</code></pre>\n\n<p>I am an experienced Python developer but I'm new to Rust. What is the proper way to implement this polymorphic code in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 2, "creation_date": 1557070229, "post_id": 55993536, "comment_id": 98634772, "body": "if it supposed to be a lib, then why aren&#39;t you creating a <code>lib.rs</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "edited": false, "score": 0, "creation_date": 1557114989, "post_id": 55993645, "comment_id": 98643965, "body": "Thanks. Does it have to be named &quot;lib.rs&quot;? By the second paragraph, I did have all fn/struct prefixed with pub, which I thought to be the way to work. But I got the warning."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "edited": false, "score": 0, "creation_date": 1557125570, "post_id": 55993645, "comment_id": 98646740, "body": "Well, yes, there are a few special naming conventions in rust, such as <code>main.rs</code> for executable programs, <code>lib.rs</code> for crates, and <code>mod.rs</code> to turn directories into modules.  Are you still using stuff from your <code>types.rs</code> directly or from your crate?"}, {"owner": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "edited": false, "score": 0, "creation_date": 1557126270, "post_id": 55993645, "comment_id": 98647045, "body": "I have to do: mod types; pub use types::*; in lib.rs to make it work.... Strange."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "edited": false, "score": 0, "creation_date": 1557126570, "post_id": 55993645, "comment_id": 98647155, "body": "not strange at all, that&#39;s exactly how it supposed to work.  you are creating a crate.  a crate is a &quot;super module&quot; or &quot;module of modules&quot;.  your types module is just part of that crate.  your executable will be using your crate.  It all make perfect sense, don&#39;t you think?"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "edited": false, "score": 0, "creation_date": 1557126661, "post_id": 55993645, "comment_id": 98647190, "body": "(on a side note: you probably don&#39;t want to do <code>pub use types::*;</code> global &quot;exports&quot; are not necessarily the things you want to have, you could/should be more specific there)"}, {"owner": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "edited": false, "score": 0, "creation_date": 1557127509, "post_id": 55993645, "comment_id": 98647515, "body": "I see. Just not quite used to controlling what is exposed to crate and what is exposed to outside by the same &quot;pub&quot;."}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 2, "last_activity_date": 1557092782, "last_edit_date": 1557092782, "creation_date": 1557070606, "answer_id": 55993645, "question_id": 55993536, "link": "https://stackoverflow.com/questions/55993536/how-to-get-rid-of-the-never-used-warning-without-turning-off-the-warning/55993645#55993645", "title": "How to get rid of the never used warning without turning off the warning?", "body": "<p>A solution could be to create a <code>lib.rs</code> at the same level as your <code>main.rs</code> which will become your crate which you would be able to <code>use</code> things from.  The <code>mod types;</code> should go into the <code>lib.rs</code> and then you can pick the things you'd like to be available for the outside world via <code>pub use</code>.</p>\n\n<p>Inside a module, if something is not marked as <code>pub</code> then it has to be used -- hence the warning.</p>\n\n<p>You could <a href=\"https://stackoverflow.com/a/25877389/2188562\">temporarily disable warnings while you are developing</a>.</p>\n"}], "owner": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 55993645, "answer_count": 1, "score": 0, "last_activity_date": 1557092830, "creation_date": 1557069885, "last_edit_date": 1557092830, "question_id": 55993536, "link": "https://stackoverflow.com/questions/55993536/how-to-get-rid-of-the-never-used-warning-without-turning-off-the-warning", "title": "How to get rid of the never used warning without turning off the warning?", "body": "<p>I have a crate with <strong>main.rs</strong> and <strong>types.rs</strong>. <strong>types.rs</strong> is used as <code>mod types;</code> in <strong>main.rs</strong>.</p>\n\n<p>I'm designing <strong>types.rs</strong> as a library which contains functions/fields that may not be used by <strong>main.rs</strong>, but the compiler gives me uncountable warnings about something \"is never used\".</p>\n\n<p>What is the correct solution here?</p>\n"}, {"tags": ["rust", "electron"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1557069284, "post_id": 55993367, "comment_id": 98634485, "body": "That project is expecting Python 2.7, yet the system is trying to run node-gyp&#39;s building scripts with your Python 3 from Anaconda. You could either try to update that project&#39;s dependencies so as to rely on Python 3, or tell node-gyp to use Python 2."}], "answers": [{"tags": [], "owner": {"reputation": 23, "user_id": 1594298, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8dfcce3019fa2d3e1283f4580e8cfb31?s=128&d=identicon&r=PG", "display_name": "Thomas Mao", "link": "https://stackoverflow.com/users/1594298/thomas-mao"}, "is_accepted": false, "score": 0, "last_activity_date": 1558093406, "last_edit_date": 1558093406, "creation_date": 1557198433, "answer_id": 56014980, "question_id": 55993367, "link": "https://stackoverflow.com/questions/55993367/having-problem-build-electron-with-rust-project/56014980#56014980", "title": "having problem build electron with rust project", "body": "<p>There could be a lengthy process to follow. Please make sure you followed all the instructions at:\n<a href=\"https://github.com/nodejs/node-gyp\" rel=\"nofollow noreferrer\">https://github.com/nodejs/node-gyp</a></p>\n\n<p>Your OS looks like Windows, so try to follow the following steps:</p>\n\n<pre><code>npm install -g node-gyp\nnpm install --global --production windows-build-tools (could take some time)\nnpm config set python /path/to/executable/python2.7 (so that always use 2.7)\nnode-gyp configure \nnode-gyp build\n</code></pre>\n\n<p>Then add/edit file binding.gyp same location as package.json as follows:</p>\n\n<pre><code>{\n    \"targets\": [\n    {\n        \"target_name\": \"binding\",\n        \"sources\": [ \"src/binding.cc\" ]\n    }\n    ]\n}\n</code></pre>\n"}], "owner": {"reputation": 9, "user_id": 3747473, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000290744017/picture?type=large", "display_name": "user3747473", "link": "https://stackoverflow.com/users/3747473/user3747473"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 383, "favorite_count": 0, "closed_date": 1557198636, "answer_count": 1, "score": 0, "last_activity_date": 1558093406, "creation_date": 1557068719, "question_id": 55993367, "link": "https://stackoverflow.com/questions/55993367/having-problem-build-electron-with-rust-project", "closed_reason": "Duplicate", "title": "having problem build electron with rust project", "body": "<p>I found a github project, running electron with Rust, which looks quite simple. However, I have problem to successfully build it. <br>\n<a href=\"https://github.com/asaladino/electron-rust\" rel=\"nofollow noreferrer\">https://github.com/asaladino/electron-rust</a></p>\n\n<p>When I tried to build with \"npm build\", I failed.</p>\n\n<p>The followings were what I got:<br>\n<br>\n<br>\nPS D:_src.git\\electron-rust> npm install<br>\n<br></p>\n\n<blockquote>\n  <p>ref-napi@1.4.1 install D:_src.git\\electron-rust\\node_modules\\ref-napi<br>\n  node-gyp rebuild<br>\n  <br>\n  <br>\n  D:_src.git\\electron-rust\\node_modules\\ref-napi>if not defined npm_config_node_gyp (node \"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\npm-lifecycle\\node-gyp-bin\\....\\node_modules\\node-gyp\\bin\\node-gyp.js\" rebuild )  else (node \"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js\" rebuild )<br>\n  gyp ERR! configure error<br>\n  gyp ERR! stack Error: Command failed: C:\\ProgramData\\Anaconda3\\python.EXE -c import sys; print \"%s.%s.%s\" % sys.version_info[:3];<br>\n  gyp ERR! stack   File \"\", line 1<br>\n  gyp ERR! stack     import sys; print \"%s.%s.%s\" % sys.version_info[:3];<br>\n  gyp ERR! stack                                ^<br>\n  gyp ERR! stack SyntaxError: invalid syntax<br>\n  gyp ERR! stack<br>\n  gyp ERR! stack     at ChildProcess.exithandler (child_process.js:294:12)<br>\n  gyp ERR! stack     at ChildProcess.emit (events.js:189:13)<br>\n  gyp ERR! stack     at maybeClose (internal/child_process.js:970:16)<br>\n  gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)<br>\n  gyp ERR! System Windows_NT 10.0.17134<br>\n  gyp ERR! command \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js\" \"rebuild\"<br>\n  gyp ERR! cwd D:_src.git\\electron-rust\\node_modules\\ref-napi<br>\n  gyp ERR! node -v v10.15.1<br>\n  gyp ERR! node-gyp -v v3.8.0<br>\n  gyp ERR! not ok<br>\n  npm WARN electron-rust@1.0.0 No repository field.<br>\n  <br>\n  npm ERR! code ELIFECYCLE<br>\n  npm ERR! errno 1<br>\n  npm ERR! ref-napi@1.4.1 install: <code>node-gyp rebuild</code><br>\n  npm ERR! Exit status 1<br>\n  npm ERR!<br>\n  npm ERR! Failed at the ref-napi@1.4.1 install script.<br>\n  npm ERR! This is probably not a problem with npm. There is likely additional logging output above.<br>\n  <br>\n  npm ERR! A complete log of this run can be found in:<br>\n  npm ERR!     C:\\Users\\Chaokuo\\AppData\\Roaming\\npm-cache_logs\\2019-05-05T14_44_35_607Z-debug.log<br></p>\n</blockquote>\n\n<p>I also tried \"electron .\" Then electron app showed up. However, it may not call Rust program. The developer mode console showed that cannot find module 'ffi-napi'.</p>\n"}, {"tags": ["sorting", "rust", "hashmap"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1557051997, "post_id": 55989927, "comment_id": 98629871, "body": "you don&#39;t have a problem stackoverflow is about fix problem, consider post this question on stack code review."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1557052424, "post_id": 55989927, "comment_id": 98629964, "body": "<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0c2caff55a6c38660e60fe4c367ceadc\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}, {"owner": {"reputation": 305, "user_id": 1362584, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0979f4ba4647bb61e2d33b208de4c9f?s=128&d=identicon&r=PG", "display_name": "hanmomhanda", "link": "https://stackoverflow.com/users/1362584/hanmomhanda"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1557057387, "post_id": 55989927, "comment_id": 98631113, "body": "@Stargateur Thanks. I know the code above works. I just want better solution to learn Rust."}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 0, "creation_date": 1557064978, "post_id": 55989927, "comment_id": 98633232, "body": "<code>split(&#39;\\n&#39;)</code> can (and should) be replaced with <code>lines()</code>"}], "answers": [{"tags": [], "owner": {"reputation": 305, "user_id": 1362584, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0979f4ba4647bb61e2d33b208de4c9f?s=128&d=identicon&r=PG", "display_name": "hanmomhanda", "link": "https://stackoverflow.com/users/1362584/hanmomhanda"}, "is_accepted": false, "score": 0, "last_activity_date": 1557156313, "creation_date": 1557156313, "answer_id": 56008184, "question_id": 55989927, "link": "https://stackoverflow.com/questions/55989927/print-nba-mvp-list-in-rust/56008184#56008184", "title": "Print NBA MVP list in rust", "body": "<p>Finally I got better one.</p>\n\n<pre><code>use itertools::Itertools;\n\nconst MVPS: &amp;str = concat!(\n        \"2017-18     James Harden, Houston Rockets (Voting)\\n\",\n        \"2016-17     Russell Westbrook, Oklahoma City Thunder (Voting)\\n\",\n        ... omitted for brevity\n);\n\nfn main() {\n\n    let mvps_count = MVPS.lines()\n        .map(|line| &amp;line[12..line.find(',').unwrap_or(line.len())])\n        .into_iter()\n        .sorted()\n        .group_by(|name| *name)\n        .into_iter()\n        .map(|(key, group)| (key, group.count()))\n        .sorted_by(|a, b| (b.1).cmp(&amp;a.1))\n        .inspect(|(key, count)| println!(\"{}: {}\", key, count))\n        .map(|(_key, count)| count)\n        .fold(0 as usize, |a, b| a + b);\n\n    println!(\"{}\", MVPS.lines().count() == mvps_count);\n}\n\n</code></pre>\n"}], "owner": {"reputation": 305, "user_id": 1362584, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c0979f4ba4647bb61e2d33b208de4c9f?s=128&d=identicon&r=PG", "display_name": "hanmomhanda", "link": "https://stackoverflow.com/users/1362584/hanmomhanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 41, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1557156313, "creation_date": 1557042932, "question_id": 55989927, "link": "https://stackoverflow.com/questions/55989927/print-nba-mvp-list-in-rust", "title": "Print NBA MVP list in rust", "body": "<p>I was reading <a href=\"https://www.nba.com/history/awards/mvp\" rel=\"nofollow noreferrer\">https://www.nba.com/history/awards/mvp</a>.\nAnd I tried to print out the name and count in descending order.</p>\n\n<pre><code>Kareem Abdul-Jabbar: 6\nBill Russell: 5\nMichael Jordan: 5\nLeBron James: 4\nWilt Chamberlain: 4\nMagic Johnson: 3\n...\n</code></pre>\n\n<p>As a beginner, I managed to do it like below.<br>\nI used a <code>HashMap</code> to count by name and a <code>Vec</code> to sort by value.<br>\nBut I think there might be a better solution.<br>\nI will appreciate any advice to improve this.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nconst MVPS: &amp;str = concat!(\n        \"2017-18     James Harden, Houston Rockets (Voting)\\n\",\n        \"2016-17     Russell Westbrook, Oklahoma City Thunder (Voting)\\n\",\n        ... omitted for brevity\n);\n\nfn main() {\n\n    let lines: Vec&lt;&amp;str&gt; = MVPS.split('\\n')\n        .map(|line| &amp;line[12..line.find(',').unwrap_or(line.len())])\n        .collect();\n\n    let mut mvp_map = HashMap::new();\n    for name in &amp;lines {\n        mvp_map.insert(name, mvp_map.get(name).unwrap_or(&amp;0) + 1);\n    }\n\n    let mut mvp_entry_list = Vec::new();\n    for entry in &amp;mvp_map {\n        mvp_entry_list.push(entry);\n    }\n    mvp_entry_list.sort_by(|a, b| (b.1).cmp(a.1));\n\n    for e in &amp;mvp_entry_list {\n        println!(\"{}: {}\", e.0, e.1);\n    }\n\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "edited": false, "score": 1, "creation_date": 1557064231, "post_id": 55988573, "comment_id": 98633018, "body": "I suppose you meant <code>rust let ref2: &amp;MaybeSized&lt;str&gt; = &amp;sized; </code> <code>ref</code> is a reserved keyword. <code>str</code> won&#39;t work either, though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557092625, "post_id": 55988573, "comment_id": 98640328, "body": "See also <a href=\"https://stackoverflow.com/q/52288980/155423\">How does the mechanism behind the creation of boxed traits work?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1557084487, "creation_date": 1557084487, "answer_id": 55995613, "question_id": 55988573, "link": "https://stackoverflow.com/questions/55988573/how-does-rust-handle-converting-sizedtype-to-unsizedtype/55995613#55995613", "title": "How does Rust handle converting &amp;SizedType to &amp;UnsizedType?", "body": "<p>The conversion from <code>&amp;MaybeSized&lt;String&gt;</code> to <code>&amp;MaybeSized&lt;dyn Display&gt;</code> is called an <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\" rel=\"nofollow noreferrer\">unsized coercion</a>. Concrete types can be coerced into trait objects for the traits they implement, and this coercion extends to a generic struct under certain conditions:</p>\n\n<blockquote>\n  <p><code>Foo&lt;..., T, ...&gt;</code> to <code>Foo&lt;..., U, ...&gt;</code>, when:</p>\n  \n  <ul>\n  <li><code>Foo</code> is a struct.</li>\n  <li><code>T</code> implements <code>Unsize&lt;U&gt;</code>.</li>\n  <li>The last field of <code>Foo</code> has a type involving <code>T</code>.</li>\n  <li>If that field has type <code>Bar&lt;T&gt;</code>, then <code>Bar&lt;T&gt;</code> implements <code>Unsized&lt;Bar&lt;U&gt;&gt;</code>.</li>\n  <li><code>T</code> is not part of the type of any other fields.</li>\n  </ul>\n</blockquote>\n\n<p>(For the full details follow the link to the language reference above.)</p>\n\n<p>The variable <code>sized</code> is stored on the stack, but the data of the <code>String</code> is allocated on the heap. The reference <code>ref1</code> is stored on the stack as a <em>fat pointer</em> \u2013 a pointer to <code>sized</code> together with a pointer to the virtual method table for <code>String as dyn Display</code> to allow dynamically calling the right methods if necessary.</p>\n\n<p>This doesn't work for <code>MaybeSized&lt;str&gt;</code> because there is no unsized coercion that converts to <code>str</code>. You can convert and <code>&amp;String</code> to a <code>&amp;str</code> using a <em>deref coercion</em>, but that's not what we need here \u2013 unsizing a sized type requires an unsized coercion. The unsized type <code>MaybeSized&lt;str&gt;</code> consists of the <em>actual string data</em>, while <code>MaybeSized&lt;String&gt;</code> consists of a length, a capacity and a pointer to the heap, so there is no way to make the memory layouts match.</p>\n\n<p>There are other cases that work, though, e.g.</p>\n\n<pre><code>let a = MaybeSized { v: [65u8, 66, 67]};\nlet b: &amp;MaybeSized&lt;[u8]&gt; = &amp;a;\n</code></pre>\n\n<p>works fine, since there is an unsized coercion from <code>[u8; 3]</code> to <code>[u8]</code>. With unsafe code you can convert this to <code>&amp;MaybeSized&lt;str&gt;</code> if you really want to:</p>\n\n<pre><code>let c: &amp;MaybeSized&lt;str&gt; = unsafe { &amp;*(b as *const _ as *const _) };\n</code></pre>\n\n<p>I can't think of a safe way of creating a <code>&amp;MaybeSized&lt;str&gt;</code>.</p>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6c7c80d1ffed5fa59865083f530a34d0\" rel=\"nofollow noreferrer\">Code on the playground</a>)</p>\n"}], "owner": {"reputation": 2826, "user_id": 1575632, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/SPw2f.jpg?s=128&g=1", "display_name": "amin", "link": "https://stackoverflow.com/users/1575632/amin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 55995613, "answer_count": 1, "score": 1, "last_activity_date": 1557092541, "creation_date": 1557026566, "last_edit_date": 1557092541, "question_id": 55988573, "link": "https://stackoverflow.com/questions/55988573/how-does-rust-handle-converting-sizedtype-to-unsizedtype", "title": "How does Rust handle converting &amp;SizedType to &amp;UnsizedType?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>struct MaybeSized&lt;T: ?Sized&gt; {\n    v: T,\n}\n\nfn main() {\n    let sized = MaybeSized {\n        v: \"sized\".to_string(),\n    };\n\n    use std::fmt::Display;\n\n    {\n        // what exactly happens here?\n        let ref1: &amp;MaybeSized&lt;Display&gt; = &amp;sized;\n    }\n    {\n        // why this fails to compile?\n        let ref2: &amp;MaybeSized&lt;str&gt; = &amp;sized;\n    }\n}\n</code></pre>\n\n<p><code>MaybeSize&lt;String&gt;</code> is a sized type; what is on the stack and heap when <code>ref1 : &amp;MaybeSized&lt;Display&gt;</code>) is created? Why this \"magic\" doesn't work for another unsized type like <code>MaybeSized&lt;str&gt;</code>?</p>\n"}, {"tags": ["rust", "rust-decl-macros"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1557019812, "creation_date": 1557019812, "answer_id": 55988158, "question_id": 55987950, "link": "https://stackoverflow.com/questions/55987950/macro-matching-tokens-recursive-expansion/55988158#55988158", "title": "Macro matching tokens recursive expansion", "body": "<p>The last pattern in your macro matches <em>anything</em>, so if your <code>@impl</code> cases fail to match an expected input, the macro will fall back to the last pattern and essentially start over.</p>\n\n<p>Let's make it not match everything to debug the issue. I'll add <code>@start</code> at the start of the pattern:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! brainfuck {\n    // @impl cases elided\n\n    (@start $($all_tokens:tt)*) =&gt; {\n        let mut cell = CellData::new();\n        brainfuck!(@impl cell; $($all_tokens)*);\n    };\n}\n\nfn hello_world() {\n    brainfuck!(@start ++++++++++[&gt;+++++++&gt;++++++++++&gt;+++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;&lt;-]&gt;++.&gt;&gt;+.---.&lt;---.&gt;&gt;++.&lt;+.++++++++.-------.&lt;+++.&gt;+.&gt;+.&gt;.);\n}\n</code></pre>\n\n<p>Now we can clearly see what's wrong:</p>\n\n<pre><code>error: no rules expected the token `&lt;&lt;`\n   --&gt; src/main.rs:124:71\n    |\n77  | macro_rules! brainfuck {\n    | ---------------------- when calling this macro\n...\n124 |     brainfuck!(@start ++++++++++[&gt;+++++++&gt;++++++++++&gt;+++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;&lt;-]&gt;++.&gt;&gt;+.---.&lt;---.&gt;&gt;++.&lt;+.++++++++.-------.&lt;+++.&gt;+.&gt;+.&gt;.);\n    |                                                                       ^^ no rules expected this token in macro call\n\nerror: no rules expected the token `&gt;&gt;`\n   --&gt; src/main.rs:124:82\n    |\n77  | macro_rules! brainfuck {\n    | ---------------------- when calling this macro\n...\n124 |     brainfuck!(@start ++++++++++[&gt;+++++++&gt;++++++++++&gt;+++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;&lt;-]&gt;++.&gt;&gt;+.---.&lt;---.&gt;&gt;++.&lt;+.++++++++.-------.&lt;+++.&gt;+.&gt;+.&gt;.);\n    |                                                                                  ^^ no rules expected this token in macro call\n</code></pre>\n\n<p>The problem is that the sequences <code>&lt;&lt;</code> and <code>&gt;&gt;</code> are a single token in Rust (at least for <code>macro_rules!</code> macros). You can easily fix your macro by adding these rules:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! brainfuck {\n    // ...\n\n    (@impl $var:ident; &gt;&gt; $($t:tt)*) =&gt; {\n        $var.next();\n        $var.next();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    (@impl $var:ident; &lt;&lt; $($t:tt)*) =&gt; {\n        $var.prev();\n        $var.prev();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    // ...\n}\n</code></pre>\n\n<p>This reveals another problematic sequence:</p>\n\n<pre><code>error: no rules expected the token `&lt;-`\n   --&gt; src/main.rs:136:75\n    |\n77  | macro_rules! brainfuck {\n    | ---------------------- when calling this macro\n...\n109 |         brainfuck!(@impl $var; $($t)*);\n    |                               - help: missing comma here\n...\n136 |     brainfuck!(@start ++++++++++[&gt;+++++++&gt;++++++++++&gt;+++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;&lt;-]&gt;++.&gt;&gt;+.---.&lt;---.&gt;&gt;++.&lt;+.++++++++.-------.&lt;+++.&gt;+.&gt;+.&gt;.);\n    |                                                                           ^^ no rules expected this token in macro call\n</code></pre>\n\n<p>Not shown in your example is <code>-&gt;</code>, which is also a single token. Again, this needs additional rules:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! brainfuck {\n    // ...\n\n    (@impl $var:ident; &lt;- $($t:tt)*) =&gt; {\n        $var.prev();\n        $var.dec();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    (@impl $var:ident; -&gt; $($t:tt)*) =&gt; {\n        $var.dec();\n        $var.next();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    // ...\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/reference/procedural-macros.html\" rel=\"nofollow noreferrer\">Procedural macros</a> don't have this problem because they always receive punctuation as one <a href=\"https://doc.rust-lang.org/stable/proc_macro/struct.Punct.html\" rel=\"nofollow noreferrer\"><code>Punct</code></a> for each character. A <code>Punct</code> knows whether it is joint with the next token or not; that's how a macro can tell <code>&lt; &lt;</code> apart from <code>&lt;&lt;</code> (because spaces are not tokens). Procedural macros also don't suffer from the recursion limit.</p>\n"}], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 446, "favorite_count": 1, "accepted_answer_id": 55988158, "answer_count": 1, "score": 0, "last_activity_date": 1557019812, "creation_date": 1557016665, "question_id": 55987950, "link": "https://stackoverflow.com/questions/55987950/macro-matching-tokens-recursive-expansion", "title": "Macro matching tokens recursive expansion", "body": "<p>I'm triying to implement a macro that will expand a <a href=\"https://en.wikipedia.org/wiki/Brainfuck\" rel=\"nofollow noreferrer\"><strong>brainfuck</strong></a> program (after starting with some simpler code, in which I had problems coming up with a solution already: <a href=\"https://stackoverflow.com/q/55980724/1695172\">How to parse single tokens in rust macros</a>). The problem is that at some point of the recursive matching it can never match the end:</p>\n\n<pre><code>error: recursion limit reached while expanding the macro `brainfuck`\n   --&gt; src/lib.rs:119:9\n    |\n119 |         brainfuck!(@impl cell; $($all_tokens)*);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n124 |     brainfuck!(++++++++++[&gt;+++++++&gt;++++++++++&gt;+++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;&lt;-]&gt;++.&gt;&gt;+.---.&lt;---.&gt;&gt;++.&lt;+.++++++++.-------.&lt;+++.&gt;+.&gt;+.&gt;.);\n    |     --------------------------------------------------------------------------------------------------------------------------- in this macro invocation\n    |\n    = help: consider adding a `#![recursion_limit=\"2000\"]` attribute to your crate\n</code></pre>\n\n<p>Here is the macro code:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! brainfuck {\n    (@impl $var:ident;) =&gt; {};\n\n    (@impl $var:ident; + $($t:tt)*) =&gt; {\n        $var.inc();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    (@impl $var:ident; - $($t:tt)*) =&gt; {\n        $var.dec();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    (@impl $var:ident; &gt; $($t:tt)*) =&gt; {\n        $var.next();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    (@impl $var:ident; &lt; $($t:tt)*) =&gt; {\n        $var.prev();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    (@impl $var:ident; . $($t:tt)*) =&gt; {\n        $var.printVal();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    (@impl $var:ident; , $($t:tt)*) =&gt; {\n        $var.getInput();\n        brainfuck!(@impl $var; $($t)*);\n    };\n\n    (@impl $var:ident; [$($t:tt)*] $($ts:tt)*) =&gt; {\n        while $var.getVal() != 0 {\n            brainfuck!(@impl $var; $($t)*);\n        }\n        brainfuck!(@impl $var; $($ts)*);\n    };\n\n    ($($all_tokens:tt)*) =&gt; {\n        let mut cell = CellData::new();\n        brainfuck!(@impl cell; $($all_tokens)*);\n    };\n}\n</code></pre>\n\n<p>It is based on expanding methods from a custom <code>struct</code>.\nThe full code compilation problem can be reproduced in this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1d01cfc1bfc8d001d82a9648e95c2d07\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I'm not really confident in this matching:</p>\n\n<pre><code>    (@impl $var:ident; [$($t:tt)*] $($ts:tt)*) =&gt; {\n        while $var.getVal() != 0 {\n            brainfuck!(@impl $var; $($t)*);\n        }\n        brainfuck!(@impl $var; $($ts)*);\n    };\n</code></pre>\n\n<p>I thought of this <code>[$($t:tt)*] $($ts:tt)*</code> to match portions of code enclosed by <code>[]</code> with whatever tokens have inside, followed by whatever tokens. But I'm not sure if it should work.</p>\n\n<p>I've been dealing with this for some time and I am completly stuck.\nAny kind of help is welcome. Thanks in advance!</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4970, "user_id": 1726797, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a76b9e0b9a393201d9897082bf70bf07?s=128&d=identicon&r=PG", "display_name": "nnnmmm", "link": "https://stackoverflow.com/users/1726797/nnnmmm"}, "edited": false, "score": 3, "creation_date": 1556997720, "post_id": 55984907, "comment_id": 98621120, "body": "Why <code>Vec&lt;&amp;mut Vec&lt;String&gt;&gt;</code> instead of <code>Vec&lt;Vec&lt;String&gt;&gt;</code>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1557052627, "post_id": 55984907, "comment_id": 98630018, "body": "best practice is to avoid them"}], "answers": [{"tags": [], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "is_accepted": false, "score": 0, "last_activity_date": 1557001611, "last_edit_date": 1557001611, "creation_date": 1557001249, "answer_id": 55986487, "question_id": 55984907, "link": "https://stackoverflow.com/questions/55984907/what-is-the-best-practice-when-manipulating-2d-vector-of-strings/55986487#55986487", "title": "What is the best practice when manipulating 2D Vector of Strings?", "body": "<p>It depends what you plan to do with it (i.e. what 'optimal' means here), but if you know the expected size of your grid, you could flatten your <code>Vec</code>. Instead of a n-length <code>Vec</code> containing m-length <code>&amp;mut Vec&lt;String&gt;</code>s, you could use a single (n x m)-length <code>Vec&lt;&amp;mut String&gt;</code> then work out where the equivalent indices would be, e.g. instead of <code>grid[2][5]</code>, you'd <code>grid[2*m + 5]</code>.</p>\n\n<p>You'd need either a sentinel to signify unassigned: perhaps <code>\"\"</code>, or you could <code>Vec&lt;&amp;mut Option&lt;String&gt;&gt;</code> and use <code>None</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 500, "user_id": 9061909, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dyipU.jpg?s=128&g=1", "display_name": "Josep", "link": "https://stackoverflow.com/users/9061909/josep"}, "is_accepted": true, "score": 0, "last_activity_date": 1608801037, "last_edit_date": 1608801037, "creation_date": 1557051714, "answer_id": 55990975, "question_id": 55984907, "link": "https://stackoverflow.com/questions/55984907/what-is-the-best-practice-when-manipulating-2d-vector-of-strings/55990975#55990975", "title": "What is the best practice when manipulating 2D Vector of Strings?", "body": "<p>You're doing everything almost right. The first question that comes to mind is why you're using a <code>Vec&lt;&amp;mut Vec&lt;String&gt;&gt;</code>. In that case, the vecs v0 and v1 have to outlive the grid, which is not necessarily a great idea. I would suggest a <code>Vec&lt;Vec&lt;String&gt;&gt;</code>.</p>\n<p>Joel Berkeley suggests in his answer that you could flatten the Vector, but he doesn't explain why you would want to do that in a grid. The reason is that rust 2D Vectors will always point to other vectors, making the CPU take two indirections to get to the real data, which is bad for cache-locality, which depending on what you're doing you may care or not about. If you're writing really high-performance code you would want to do that, but also depending on the kind of application you're designing you shouldn't <a href=\"https://softwareengineering.stackexchange.com/questions/80084/is-premature-optimization-really-the-root-of-all-evil\">pre-optimize your code beforehand</a>.</p>\n<p>I would also suggest using the <a href=\"https://doc.rust-lang.org/std/macro.vec.html\" rel=\"nofollow noreferrer\"><code>vec!</code></a> macro to define your vectors if possible.</p>\n"}], "owner": {"reputation": 145, "user_id": 8874957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMxdN.png?s=128&g=1", "display_name": "the duck", "link": "https://stackoverflow.com/users/8874957/the-duck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 55990975, "answer_count": 2, "score": -1, "last_activity_date": 1608801037, "creation_date": 1556989631, "last_edit_date": 1608766595, "question_id": 55984907, "link": "https://stackoverflow.com/questions/55984907/what-is-the-best-practice-when-manipulating-2d-vector-of-strings", "title": "What is the best practice when manipulating 2D Vector of Strings?", "body": "<p>I need to store a 2D grid of strings of random size. I'm struggling to manipulate the vectors. Here's what I did:</p>\n<pre><code>let mut grid: Vec&lt;&amp;mut Vec&lt;String&gt;&gt; = Vec::new();\nlet mut v0: Vec&lt;String&gt; = Vec::new();\nlet mut v1: Vec&lt;String&gt; = Vec::new();\n\nv0.push(&quot;first string into v0&quot;.to_string());\nv1.push(&quot;first string into v1&quot;.to_string());\n\ngrid.push(&amp;mut v0); // in position 0\ngrid.push(&amp;mut v1);\n\nprintln!(&quot;{:?}&quot;, &amp;grid);\n</code></pre>\n<p>And it returns (as expected):</p>\n<pre class=\"lang-none prettyprint-override\"><code>[[&quot;first string into v0&quot;], [&quot;first string into v1&quot;]]\n</code></pre>\n<p>Later on, I want to add a string to v0:</p>\n<pre><code>let t1 = grid.get_mut(0);\nlet t2 = t1.unwrap();\nt2.push(&quot;A new string into v0&quot;.to_string());\n\nprintln!(&quot;{:?}&quot;, &amp;grid);\n</code></pre>\n<p>The output is then:</p>\n<pre class=\"lang-none prettyprint-override\"><code>[[&quot;first string into v0&quot;, &quot;A new string into v0&quot;], [&quot;first string into v1&quot;]]\n</code></pre>\n<p>So, it worked but is it the optimal solution when using a 2D vector?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1557094008, "creation_date": 1557094008, "answer_id": 55996820, "question_id": 55984384, "link": "https://stackoverflow.com/questions/55984384/how-to-use-lazy-static-inside-a-struct-impl/55996820#55996820", "title": "How to use lazy_static! inside a struct impl?", "body": "<p>You cannot. lazy-static works by creating a new hidden type as well as a <code>static</code> variable of that type. Neither of those are allowed to be created in an <code>impl</code> block:</p>\n\n<pre><code>struct Foo;\n\nimpl Foo {\n    static BAR: u8;\n\n    struct Bar;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `async`, `const`, `crate`, `default`, `existential`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found `static`\n --&gt; src/lib.rs:4:5\n  |\n3 | impl Foo {\n  |           - expected one of 11 possible tokens here\n4 |     static BAR: u8;\n  |     ^^^^^^ unexpected token\n\nerror: expected one of `async`, `const`, `crate`, `default`, `existential`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found `struct`\n --&gt; src/lib.rs:6:5\n  |\n4 |     static BAR: u8;\n  |                    - expected one of 11 possible tokens here\n5 |     \n6 |     struct Bar;\n  |     ^^^^^^ unexpected token\n</code></pre>\n\n<p>Instead, use it outside of the <code>impl</code> block or inside of a function.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/48114390/155423\">Why does a lazy-static value claim to not implement a trait that it clearly implements?</a></li>\n</ul>\n"}], "owner": {"reputation": 222, "user_id": 10084665, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-FnOW9iD0N1U/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7pwrO--yv-cnkbhPgCtsqaJLa8xhQ/mo/photo.jpg?sz=128", "display_name": "FireCubez", "link": "https://stackoverflow.com/users/10084665/firecubez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 759, "favorite_count": 0, "accepted_answer_id": 55996820, "answer_count": 1, "score": 0, "last_activity_date": 1557094008, "creation_date": 1556986108, "last_edit_date": 1557093705, "question_id": 55984384, "link": "https://stackoverflow.com/questions/55984384/how-to-use-lazy-static-inside-a-struct-impl", "title": "How to use lazy_static! inside a struct impl?", "body": "<pre><code>#[derive(Serialize)]\npub struct SLPInfoVersion {\n    name: String,\n    protocol: i32\n}\n\nimpl SLPInfoVersion {\n    lazy_static! {\n        pub static ref V1_13: MyStruct = (SLPInfoVersion {\n            name: \"1.13\".to_string(),\n            protocol: 404\n        });\n    }\n}\n</code></pre>\n\n<p>The <code>lazy_static!</code> call gives me this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `(`, `async`, `const`, `default`, `existential`, `extern`, `fn`, `type`, or `unsafe`, found `struct`                      \n   --&gt; src\\protocol\\packet\\mod.rs:244:2                                                                                                          \n    |                                                                                                                                            \n244 |         lazy_static! {                                                                                                                     \n    |    _____^                                                                                                                                  \n    |   |_____|                                                                                                                                  \n    |  ||_____|                                                                                                                                  \n    | |||                                                                                                                                        \n245 | |||         pub static ref V1_13: SLPInfoVersion = (SLPInfoVersion {                                                                       \n246 | |||             name: \"1.13\".to_string(),                                                                                                  \n247 | |||             protocol: 404                                                                                                              \n248 | |||         });                                                                                                                            \n249 | |||     }                                                                                                                                  \n    | |||     ^                                                                                                                                  \n    | |||_____|                                                                                                                                  \n    | ||______expected one of 9 possible tokens here                                                                                             \n    | |_______unexpected token                                                                                                                   \n    |         in this macro invocation                                                                                                           \n    |                                                                                                                                            \n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>I am using Rust 1.32.0.</p>\n"}, {"tags": ["struct", "rust", "add"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556983754, "post_id": 55983951, "comment_id": 98617288, "body": "There is an <code>impl std::ops::Add</code> for <code>LinearCombination</code> that takes this tuple kind defined somewhere where <code>LinearCombination</code> comes from. Implementing <code>std::ops::Add</code> allows you to write <code>foo + bar</code>."}, {"owner": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556984880, "post_id": 55983951, "comment_id": 98617659, "body": "@user2722968 yes, but what would be a definition for doing it on arbitrary types? Also, I read things incorrectly <code>(cur, b.0)</code> isn\u2019t an addition so what does it mean?"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556985314, "post_id": 55983951, "comment_id": 98617788, "body": "The code <code>lc + (cur, b.0)</code> desugars to <code>&lt;lc as std::ops::Add&gt;.add((cur, b.0))</code>. There is an impl for <code>Add</code> where the right hand side is <code>(Engine::Fr, Variable)</code> in <code>bellman</code> <a href=\"https://github.com/zkcrypto/bellman/blob/10c5010fd9c2ca69442dc9775ea271e286e776d8/src/lib.rs#L78\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556985363, "post_id": 55983951, "comment_id": 98617807, "body": "<code>(cur, b.0)</code> is a tuple, most likely of type <code>(Engine::Fr, Variable)</code>, where <code>Engine::Fr</code> is whatever is defined via your instance of <code>Engine</code>."}], "owner": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 72, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1556983088, "creation_date": 1556983088, "question_id": 55983951, "link": "https://stackoverflow.com/questions/55983951/what-does-it-mean-to-add-struct-of-different-types-in-rust", "title": "What does it mean to add struct of different types in rust?", "body": "<p>I\u2019m tyring to understand the <a href=\"https://github.com/Electric-Coin-Company/jubjub-prototype/blob/master/src/lib.rs#L193\" rel=\"nofollow noreferrer\">following code</a> which is <code>lc = lc + (cur, b.0)</code>;</p>\n\n<p>And I\u2019m getting this in gdb:</p>\n\n<pre><code>(gdb) pt cur\ntype = struct pairing::bls12_381::fr::Fr (\n  pairing::bls12_381::fr::FrRepr,\n)\n(gdb) pt b\ntype = struct jubjub::Bit {\n    bellman::Variable __0;\n    jubjub::Assignment&lt;bool&gt; __1;\n} *\n(gdb) pt lc\ntype = struct bellman::LinearCombination&lt;pairing::bls12_381::Bls12&gt; (\n  alloc::vec::Vec&lt;(bellman::Index, pairing::bls12_381::fr::Fr)&gt;,\n)\n(gdb)\n</code></pre>\n\n<p>While I know it\u2019s about Integers, I definitely don\u2019t understand the addition of between 3 different types. I mean that as I came from python or Java syntax, I don\u2019t understand at all (also that it\u2019s members who could be additionned instead of the struct itself).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556983508, "post_id": 55983824, "comment_id": 98617226, "body": "The compiler is slightly overzealous here. <code>PSRunning</code> is not defined as a free-standing identifier but only via its path <code>ProcStat::PSRunning</code>, since it&#39;s part of that enum. The line should therefor read <code>... =&gt; Ok(ProcStat::PSRunning)</code>. You can - since a few versions back - import enum members into the local scope, that&#39;s what the compiler is suggesting."}, {"owner": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556983596, "post_id": 55983824, "comment_id": 98617249, "body": "Ah, I thought this is about mod. Thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1557094776, "post_id": 55983824, "comment_id": 98640753, "body": "And by &quot;a few versions back&quot;, the previous commenter means since Rust 1.0."}], "owner": {"reputation": 733, "user_id": 1025192, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/134f2acc9c6343574969a9fa937175c1?s=128&d=identicon&r=PG", "display_name": "Magicloud", "link": "https://stackoverflow.com/users/1025192/magicloud"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 47, "favorite_count": 0, "closed_date": 1557094753, "answer_count": 0, "score": 0, "last_activity_date": 1557094388, "creation_date": 1556982231, "last_edit_date": 1557094388, "question_id": 55983824, "link": "https://stackoverflow.com/questions/55983824/why-does-the-compiler-suggest-to-use-itself-in-the-module", "closed_reason": "Duplicate", "title": "Why does the compiler suggest to use itself in the module?", "body": "<p>I have following module:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod types {\n    use std::str::FromStr;\n\n    struct StringParseError;\n\n    pub enum ProcStat {\n        PSRunning,\n    }\n\n    impl FromStr for ProcStat {\n        type Err = StringParseError;\n\n        fn from_str(s: &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n            match s {\n                \"R\" =&gt; Ok(PSRunning),\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>While building, I got:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find value `PSRunning` in this scope\n  --&gt; src/lib.rs:15:27\n   |\n15 |                 \"R\" =&gt; Ok(PSRunning),\n   |                           ^^^^^^^^^ not found in this scope\nhelp: possible candidate is found in another module, you can import it into scope\n   |\n2  |     use crate::types::ProcStat::PSRunning;\n   |\n</code></pre>\n\n<p>What is the correct usage here? I may have missed this part in the documentation.</p>\n"}, {"tags": ["rust", "macros"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556979409, "post_id": 55983268, "comment_id": 98616019, "body": "Is this the real code? The error message says &quot;a_cursor_restore&quot;, the example says &quot;cursor_restore&quot;."}, {"owner": {"reputation": 505, "user_id": 2507054, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b93ba5c0e4829faafbf3c30389a8c6d2?s=128&d=identicon&r=PG", "display_name": "DavidBittner", "link": "https://stackoverflow.com/users/2507054/davidbittner"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556979551, "post_id": 55983268, "comment_id": 98616063, "body": "Sorry, it is. I already had the parser declared, so when using the macro I temporarily added an &#39;a&#39;. I removed it in the examples, but forgot it in the error. Other than that, everything is identical, so yes it&#39;s the real code. Good catch!"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556980024, "post_id": 55983268, "comment_id": 98616204, "body": "Stripped of it&#39;s body, the macro invocation works fine. What&#39;s the context of line 95? Are you inside another macro invocation?"}, {"owner": {"reputation": 505, "user_id": 2507054, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b93ba5c0e4829faafbf3c30389a8c6d2?s=128&d=identicon&r=PG", "display_name": "DavidBittner", "link": "https://stackoverflow.com/users/2507054/davidbittner"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556980106, "post_id": 55983268, "comment_id": 98616225, "body": "Nope, no context. Where a standard function definition would be."}], "answers": [{"comments": [{"owner": {"reputation": 505, "user_id": 2507054, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b93ba5c0e4829faafbf3c30389a8c6d2?s=128&d=identicon&r=PG", "display_name": "DavidBittner", "link": "https://stackoverflow.com/users/2507054/davidbittner"}, "edited": false, "score": 0, "creation_date": 1556980915, "post_id": 55983624, "comment_id": 98616483, "body": "How strange. I thought I even tried that already. Oh well, very weird. Thank you for the help!"}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 1, "last_activity_date": 1556980987, "last_edit_date": 1556980987, "creation_date": 1556980781, "answer_id": 55983624, "question_id": 55983268, "link": "https://stackoverflow.com/questions/55983268/putting-a-new-function-name-in-an-internal-macro/55983624#55983624", "title": "Putting a new function name in an internal macro", "body": "<p>I can't tell why the macro expansion fails in the way it does. It does, however, get hung up on the full path to the nom-macro being called in the expansion. If you add <code>use nom::*;</code> to bring <code>do_parse</code> and <code>named</code> into scope beforehand and strip the two <code>nom::</code>-fragments (<code>nom::named!...</code> -> <code>named!...</code>) from the macro-body, it works.</p>\n"}], "owner": {"reputation": 505, "user_id": 2507054, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b93ba5c0e4829faafbf3c30389a8c6d2?s=128&d=identicon&r=PG", "display_name": "DavidBittner", "link": "https://stackoverflow.com/users/2507054/davidbittner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 55983624, "answer_count": 1, "score": 0, "last_activity_date": 1556980987, "creation_date": 1556978350, "last_edit_date": 1556979520, "question_id": 55983268, "link": "https://stackoverflow.com/questions/55983268/putting-a-new-function-name-in-an-internal-macro", "title": "Putting a new function name in an internal macro", "body": "<p>trying to write a really basic macro in Rust. I'm trying to turn a multi-line declaration (using nom) into a single line as it's replicated a huge amount. The following is the macro I'm trying to define:</p>\n\n<pre><code>macro_rules! tag_parser {\n    ($name:ident, $tag:expr, $ret:expr) =&gt; {\n        nom::named!(\n            $name&lt;&amp;str, AnsiSequence&gt;,\n            nom::do_parse!(\n                nom::tag!($tag) &gt;&gt;\n                ($ret)\n            )\n        );\n    }\n}\n</code></pre>\n\n<p>And here is an example invocation:</p>\n\n<pre><code>tag_parser!(cursor_restore, \"u\", AnsiSequence::CursorRestore);\n</code></pre>\n\n<p>The error I'm getting is the following:</p>\n\n<pre><code>error: no rules expected the token `cursor_restore`\n  --&gt; src/parsers.rs:95:13\n   |\n95 | tag_parser!(cursor_restore, \"u\", AnsiSequence::CursorRestore);\n   |             ^^^^^^^^^^^^^^^^ no rules expected this token in macro call\n</code></pre>\n\n<p>Really, the issue is focused around the first parameter. For some reason it will not let me place it the way I have inside the macro. I'm not sure if this is due to me calling another macro (named!) or something else. Any help would be greatly appreciated, thanks!</p>\n"}, {"tags": ["rust", "message-queue"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 1, "creation_date": 1556979897, "post_id": 55983112, "comment_id": 98616158, "body": "The problem here is that <code>nannou</code> expects a plain function pointer (<code>fn</code>). A closure that captures it&#39;s environment by definition is not a plain function pointer. You can therefore not pass any context by capturing context (that&#39;s the reason for the error message). I dont see any way around this besides <code>nannou</code> lifting the requirement from <code>fn</code> to <code>impl Fn</code> or something similar, allowing closures to be passed."}], "answers": [{"comments": [{"owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "edited": false, "score": 1, "creation_date": 1556986867, "post_id": 55983762, "comment_id": 98618175, "body": "Thanks. I suppose, I need to report this as a bug to nannou. My version (with global static mut) uses Option&lt;ExtraData&gt; with <code>.as_ref().unwrap()</code> inside my view function."}], "tags": [], "owner": {"reputation": 4970, "user_id": 1726797, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a76b9e0b9a393201d9897082bf70bf07?s=128&d=identicon&r=PG", "display_name": "nnnmmm", "link": "https://stackoverflow.com/users/1726797/nnnmmm"}, "is_accepted": false, "score": 2, "last_activity_date": 1556983246, "last_edit_date": 1556983246, "creation_date": 1556981745, "answer_id": 55983762, "question_id": 55983112, "link": "https://stackoverflow.com/questions/55983112/passing-value-to-function-outside-of-arguments/55983762#55983762", "title": "Passing value to function outside of arguments", "body": "<p>It seems like <code>nannou</code>'s API is just very restrictive. If it used the <code>Fn*</code> traits in the callback type, you could use a closure and capture your extra argument. With the API being a function pointer, you're forced to using global state to pass the data in.</p>\n\n<p>Here is another way of doing it. I'm assuming your data and function look like this:</p>\n\n<pre><code>#[derive(Debug)]\nstruct ExtraData {\n    data: usize,\n}\n\ntype MyViewFn = fn(app: &amp;nannou::App, frame: nannou::Frame, extra: &amp;mut ExtraData) -&gt; nannou::Frame;\n\nfn my_callback(app: &amp;nannou::App, frame: nannou::Frame, extra: &amp;mut ExtraData) -&gt; nannou::Frame {\n    println!(\"{:?}\", extra);\n    frame\n}\n\nfn main() {\n    call_view_with(my_callback, ExtraData { data: 42 });\n}\n</code></pre>\n\n<p>That is, <code>call_view_with</code> wraps <code>view</code> to take an extra argument. What makes it work is this:</p>\n\n<pre><code>// This function is unsafe and should not be called concurrently to avoid difficult bugs\nfn call_view_with(callback: MyViewFn, extra: ExtraData) {\n    // static mut needs to be initialized with a constant expression for some reason\n    static mut static_extra: ExtraData = ExtraData::default();\n    // Using mutable static requires unsafe\n    unsafe {\n        static_extra.data = extra.data;\n    }\n    static mut static_func_ptr: MyViewFn = default_callback;\n    unsafe {\n        static_func_ptr = callback;\n    }\n    // Rust allows nested function definitions. They can not capture dynamic local variables,\n    // only const and static variables.\n    fn view_fn(app: &amp;nannou::App, frame: nannou::Frame) -&gt; nannou::Frame {\n        unsafe { return static_func_ptr(app, frame, &amp;mut static_extra) }\n    }\n    nannou::view(view_fn);\n}\n\n\nimpl ExtraData {\n    const fn default() -&gt; Self {\n        ExtraData { data: 0 }\n    }\n}\n\nfn default_callback(\n    app: &amp;nannou::App,\n    frame: nannou::Frame,\n    extra: &amp;mut ExtraData,\n) -&gt; nannou::Frame {\n    frame\n}\n</code></pre>\n\n<p>As stated in the comments, it is not much less dangerous than defining the <code>static mut</code> globally. I suppose other functions cannot modify the data this way, at least, but you still must be careful to avoid concurrency bugs.</p>\n"}, {"tags": [], "owner": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "is_accepted": true, "score": 2, "last_activity_date": 1560391840, "last_edit_date": 1560391840, "creation_date": 1560386366, "answer_id": 56571977, "question_id": 55983112, "link": "https://stackoverflow.com/questions/55983112/passing-value-to-function-outside-of-arguments/56571977#56571977", "title": "Passing value to function outside of arguments", "body": "<p>I think the issue here is that we use the <code>view(..)</code> function as a callback internally to draw the graphics. So a bare minimum setup would look like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    nannou::sketch(view);\n}\n\nfn view(app: &amp;App, frame: Frame) -&gt; Frame {\n    // Draw stuff\n}\n</code></pre>\n\n<p>However you want to pass data in then we need to use a <code>Model</code> like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    nannou::app(model).update(update).run();\n}\n\nstruct Model {\n    my_data: MyData,\n}\n\nfn model(app: &amp;App) -&gt; Model {\n    app\n        .new_window()\n        .with_dimensions(720, 720)\n        .view(view)\n        .build()\n        .unwrap();\n    let my_data = MyData::new();\n    Model { my_data }\n}\n\nfn update(_app: &amp;App, _model: &amp;mut Model, _update: Update) {}\n\nfn view(app: &amp;App, model: &amp;Model, frame: Frame) -&gt; Frame {\n    // Draw stuff\n}\n</code></pre>\n\n<p>Notice the view function has a different signature when setup like this. It includes a <code>Model</code> which you can put your own data in. It is immutable while you want to update it in the <code>update()</code> function, but you can get around this with <code>RefCell</code> if needed.</p>\n\n<p>What I normally do is launch my other threads from the <code>model()</code> function then use channels in the <code>Model</code> to communicate back to the nannou loop, like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn model(app: &amp;App) -&gt; Model {\n    let (talk_to_nannou, data_from_my_thread) = mpsc::channel();\n    thread::spawn(|| {\n        //All the stuff I want to do\n        talk_to_nannou.send(\"Hey\");\n    });\n    Model {\n        data_from_my_thread,\n    };\n}\n\nfn view(app: &amp;App, model: &amp;Model, frame: Frame) -&gt; Frame {\n    if let Some(msg) = model.data_from_my_thread.try_recv() {\n        dbg!(msg);\n    }\n}\n</code></pre>\n\n<p>You could think of it a different way if you were adding it to an existing application like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    // My awesome app that has heaps of cool stuff\n    thread::spawn(|| {\n        nannou::app(model).update(update).run();\n    });\n    // Do more stuff in my cool app\n}\n\nstruct Model {\n    my_data: MyData,\n}\n\nfn model(app: &amp;App) -&gt; Model {\n    app.new_window()\n        .with_dimensions(720, 720)\n        .view(view)\n        .build()\n        .unwrap();\n    let my_data = MyData::new();\n    Model { my_data }\n}\n\nfn update(_app: &amp;App, _model: &amp;mut Model, _update: Update) {}\n\nfn view(app: &amp;App, model: &amp;Model, frame: Frame) -&gt; Frame {\n    // Draw stuff\n}\n</code></pre>\n\n<p>Then you could tuck all the nannou stuff in a module but it's kinda up to you how you want to arrange things. The only thing is nannou needs to run its internal loop to do all the work but it's happy to be on another thread.</p>\n\n<p>Checkout the <a href=\"https://github.com/nannou-org/nannou/tree/master/examples\" rel=\"nofollow noreferrer\">examples</a> and <a href=\"https://guide.nannou.cc/\" rel=\"nofollow noreferrer\">guide</a> for more info</p>\n"}], "owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 318, "favorite_count": 0, "accepted_answer_id": 56571977, "answer_count": 2, "score": 1, "last_activity_date": 1560391840, "creation_date": 1556977244, "last_edit_date": 1556978458, "question_id": 55983112, "link": "https://stackoverflow.com/questions/55983112/passing-value-to-function-outside-of-arguments", "title": "Passing value to function outside of arguments", "body": "<p>I got a library (nannou) which <a href=\"https://docs.rs/nannou/0.8.0/nannou/fn.view.html\" rel=\"nofollow noreferrer\">wants to call a function</a> with signature <code>fn(&amp;'r nannou::App, nannou::Frame) -&gt; nannou::Frame</code>.</p>\n\n<p>I need to pass some additional value into this function (my image buffer). </p>\n\n<p>My app looks like this:</p>\n\n<pre><code>fn main {\n    let buff = Buff::generate(..);\n    nannou::view(view);\n}\n\nfn view(app: &amp;App, frame: Frame) -&gt; Frame {...}\n</code></pre>\n\n<p>I need to pass <code>buff</code> to <code>view</code>. I've tried to use <a href=\"https://docs.rs/partial_application/0.1.0/partial_application/\" rel=\"nofollow noreferrer\">partial_application</a>, but Rust complains that <code>expected fn pointer, found closure</code>.</p>\n\n<p>How can I do this? One, wrong and ugly way I knew - using a global variable.</p>\n\n<p>Are there better ways? What's the best practice for that in Rust?</p>\n"}, {"tags": ["rust", "rust-decl-macros"], "answers": [{"comments": [{"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1556967021, "post_id": 55981064, "comment_id": 98612908, "body": "Thank you so much! I even was wondering about if using var in different macros were gonna work and you post it in advance! I&#39;m taking alook at the internal rules. Thank you for the links too!"}, {"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1557016892, "post_id": 55981064, "comment_id": 98624547, "body": "I tried to step forward and found another (and more complicated I think) wall. In case you are interested: <a href=\"https://stackoverflow.com/q/55987950/1695172\">stackoverflow.com/q/55987950/1695172</a>"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1556960993, "creation_date": 1556960993, "answer_id": 55981064, "question_id": 55980724, "link": "https://stackoverflow.com/questions/55980724/how-to-parse-single-tokens-in-rust-macros/55981064#55981064", "title": "How to parse single tokens in rust macros", "body": "<p>You're actually very close! There are only a couple of minor errors left. (<em>If you want to learn more about macros, only read one bullet point at a time and try to progress on your own from there!</em>)</p>\n\n<ul>\n<li><p>When using (repeated) meta variables, you don't specify the meta-variable type again. So it's <code>$($t:tt)*</code> in the pattern of the macro, but if you want to use it, it's <code>$($t)*</code>!</p></li>\n<li><p>If you have multiple rules in a macro definition, you need to end every rule with a semicolon. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! {\n    (+ $(t:tt)*) =&gt; { ... };\n    (- $(t:tt)*) =&gt; { ... };\n}\n</code></pre></li>\n<li><p>The Rust compiler always needs to know whether you want to expand your macro into an expression or statement(s). Since you are generating a list of statements and not a single expression, you have to add a semicolon to the invocation of your macros! That means, in <code>main()</code> but also all macro invocation of helper macros inside your macro definition.</p></li>\n<li><p>Since yeah macro invocation creates a new <em>syntax context</em> and all identifiers (names) are only accessible in their syntax context, the helper macro cannot use <code>var</code> (even after fixing the typo <code>val</code> -> <code>var</code>). So instead, you have to pass that name to the helper macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! operate_integer {\n    ($($all_tokens:tt)*) =&gt; {\n        let mut var: i32 = 0;\n        operate_integer_helper![var $($all_tokens)*];  // &lt;-- pass identifier \n        println!(\"{}\", var);\n    }\n}\n\nmacro_rules! operate_integer_helper {\n    ($var:ident +$($t:tt)*) =&gt; {              // &lt;- accept identifier\n        $var += 1;                            // &lt;- use identifier\n        operate_integer_helper![$var $($t)*]\n    };\n\n    ($var:ident -$($t:tt)*) =&gt; {\n        $var -= 1;\n        operate_integer_helper![$var $($t)*]\n    };\n}\n</code></pre></li>\n<li><p>Having done all that you get the error \"unexpected end of macro invocation\". This is because you don't have a recursion stop rule! So you have to add a new rule to your helper macro: <code>($var:ident) =&gt; {};</code>. This rule is used when there is only the name and no <code>+</code> or <code>-</code> tokens left.</p></li>\n</ul>\n\n<p>And now: <strong>it works!</strong> </p>\n\n<p>I would still change one last thing: usually it's not a good idea to have a second helper macro, because that macro might not be in scope where the main macro is called. Instead, one usually uses internal rules. You can read more about those <a href=\"https://danielkeep.github.io/tlborm/book/pat-internal-rules.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>With this, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3df018a5e04be52d58605886faa48b4c\" rel=\"nofollow noreferrer\">this is the resulting code</a>.</p>\n"}], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 402, "favorite_count": 1, "accepted_answer_id": 55981064, "answer_count": 1, "score": 3, "last_activity_date": 1556960993, "creation_date": 1556957467, "last_edit_date": 1556960711, "question_id": 55980724, "link": "https://stackoverflow.com/questions/55980724/how-to-parse-single-tokens-in-rust-macros", "title": "How to parse single tokens in rust macros", "body": "<p>I'm starting playing with Rust macros and I came to try this little practice example. I want to define a macro that expands into a variable initialization (name doesn't matter) of type <code>i32</code> (for example, but not really important) and a series of operations to that variable, in this case a <code>var += 1</code> or a <code>var -= 1</code> and finally it will call <code>println!(\"{}\", var)</code>.\nThe macro will take a series of tokens based on <code>+</code> and <code>-</code> that matches the operations described above.</p>\n\n<p>So for example:</p>\n\n<pre><code>operate_integer![+++---]\n</code></pre>\n\n<p>would expand to:</p>\n\n<pre><code>let mut var: i32 = 0;\nvar += 1;\nvar += 1;\nvar += 1;\nvar -= 1;\nvar -= 1;\nvar -= 1;\nprint!(\"{}\", var);\n</code></pre>\n\n<p>I decided to use 2 macros for this, one for wrapping the initialization and the printing and the other to evaluate the <code>+-</code> tokens:</p>\n\n<p>The base one would be:</p>\n\n<pre><code>macro_rules! operate_integer {\n    // $($all_tokens:tt)* should match everything, it will be forward to the helper macro\n    ($($all_tokens:tt)*) =&gt; {\n        let mut var : i32 = 0;\n        operate_integer_helper![$($all_tokens:tt)*]\n        print!(\"{}\", var);\n    }\n}\n</code></pre>\n\n<p>The helper would expand the operations:</p>\n\n<pre><code>macro_rules! operate_integer_helper {\n    // the idea is that it matches a `+` followed by more tokens\n    (+$($t:tt)*) =&gt; {\n        val += 1;\n        operate_integer_helper![$($t:tt)*] // we recursively handle the remaining tokens\n    }\n\n    (-$($t:tt)*) =&gt; {\n        val -= 1;\n        operate_integer_helper![$($t:tt)*]\n    }\n}\n</code></pre>\n\n<p>This of course do not work, it fails compilation with the following error (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f44214a6da9698e8b783b6858cce76b7\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>error: no rules expected the token `(`\n   --&gt; src/lib.rs:102:5\n    |\n102 |     (+$($t:tt)*) =&gt; {\n    |     ^ no rules expected this token in macro call\n</code></pre>\n\n<p>I'm kind of stuck. I know I may be missing many concepts since I just started and I would really appreciate some help understanding how to work with macros.\nThank you in advance!</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2826, "user_id": 1575632, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/SPw2f.jpg?s=128&g=1", "display_name": "amin", "link": "https://stackoverflow.com/users/1575632/amin"}, "edited": false, "score": 0, "creation_date": 1556955665, "post_id": 55980354, "comment_id": 98610526, "body": "No the compiler won&#39;t be able to inline <code>r</code> into println call, simply because we have a pointer to <code>r</code> used later."}, {"owner": {"reputation": 2826, "user_id": 1575632, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/SPw2f.jpg?s=128&g=1", "display_name": "amin", "link": "https://stackoverflow.com/users/1575632/amin"}, "edited": false, "score": 0, "creation_date": 1556955761, "post_id": 55980354, "comment_id": 98610545, "body": "&quot;Immutable references used as mutable&quot; is illegal but not necessary UB. Think of how RefCell is implemented? basically treating immutable memory as mutable."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1556958286, "post_id": 55980354, "comment_id": 98611016, "body": "RefCell uses UnsafeCell internally. See: <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/cell/struct.UnsafeCell.html</a>"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1556959844, "post_id": 55980354, "comment_id": 98611312, "body": "&quot;we have a pointer to r used later&quot; - but we can use it only for reading (from the compiler&#39;s point of view), since as the same time we have an immutable reference alive."}], "tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 2, "last_activity_date": 1556953652, "creation_date": 1556953652, "answer_id": 55980354, "question_id": 55980289, "link": "https://stackoverflow.com/questions/55980289/is-it-ub-to-mutate-t-through-a-mut-t-in-unsafe-rust/55980354#55980354", "title": "Is it UB to mutate &amp;T through a *mut T in unsafe rust?", "body": "<p>Both cases are definitely UB.</p>\n\n<p>The main problem here is the fact that any changes to the value behind the shared reference are illegal, with the exception of <code>UnsafeCell</code> internal values. The compiler can easily optimize away the change in first case and just substitute <code>r</code> into <code>println</code> call.</p>\n\n<p>The second case is a bit more tricky, but it is based on the same fact. Note that the expression <code>&amp;*r</code>, where <code>r</code> is of type <code>Rc&lt;T&gt;</code>, is of type &amp;T (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7bd09f54896324bb7e0fc4780c26a75a\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use std::rc::Rc;\n\nfn test&lt;T&gt;(r: Rc&lt;T&gt;) {\n    let _: () = &amp;*r; // error: expected (), found &amp;T\n}\n</code></pre>\n\n<p>The trick is in the fact that <code>Rc&lt;T&gt;</code> derefs to <code>T</code>, so <code>*r</code> has type <code>T</code>.</p>\n\n<p>So, it is again the immutable reference being treated as mutable. </p>\n"}], "owner": {"reputation": 2826, "user_id": 1575632, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/SPw2f.jpg?s=128&g=1", "display_name": "amin", "link": "https://stackoverflow.com/users/1575632/amin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 55980354, "answer_count": 1, "score": 0, "last_activity_date": 1556956976, "creation_date": 1556953016, "last_edit_date": 1556956976, "question_id": 55980289, "link": "https://stackoverflow.com/questions/55980289/is-it-ub-to-mutate-t-through-a-mut-t-in-unsafe-rust", "title": "Is it UB to mutate &amp;T through a *mut T in unsafe rust?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>let r = 42;\nunsafe {\n    let p = &amp;r as *const i32 as *mut i32;\n    *p += 1;\n}\nprintln!(\"{}\", r);\n</code></pre>\n\n<p>Is the above code <code>UB</code>? Is there a chance <code>rustc</code> (while assuming <code>r</code> is a <code>&amp;i32</code>) would optimize this in a way that will end up as <code>UB</code>?</p>\n\n<p>What about this \u2193 </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let rc = Rc::new(42);\nunsafe {\n    let p = &amp;*rc as *const i32 as *mut i32;\n    *p += 1;\n}\nprintln!(\"{}\", rc);\n</code></pre>\n\n<p>Rc is a <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\">single-threaded</a> reference-counting pointer, therefore it's not thread safe.<br>\nAssuming the above is executed in a single thread, could it end up as <code>UB</code>?</p>\n"}, {"tags": ["rust", "command-line-interface"], "answers": [{"comments": [{"owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "edited": false, "score": 2, "creation_date": 1556953969, "post_id": 55980297, "comment_id": 98610183, "body": "wouldn&#39;t this create a new bash session which would terminate as soon as the <code>Command</code> will also terminate. This will mean only within that session the file will be sourced."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "edited": false, "score": 0, "creation_date": 1556956560, "post_id": 55980297, "comment_id": 98610679, "body": "@leoOrion I&#39;m unaware of what this command do. But yes this will do that."}, {"owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "edited": false, "score": 1, "creation_date": 1556965887, "post_id": 55980297, "comment_id": 98612621, "body": "I am looking for a way to source a file within the same session that I call <code>cargo run</code> from"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "edited": false, "score": 0, "creation_date": 1556989799, "post_id": 55980297, "comment_id": 98619019, "body": "@leoOrion It&#39;s not possible by design"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 3, "last_activity_date": 1556953080, "creation_date": 1556953080, "answer_id": 55980297, "question_id": 55980006, "link": "https://stackoverflow.com/questions/55980006/source-a-file-from-rust-using-command/55980297#55980297", "title": "Source a file from rust using Command", "body": "<p><a href=\"https://linux.die.net/man/1/bash\" rel=\"nofollow noreferrer\"><code>source</code></a> is a bash command, it's not a program so you can't invoke it like that you need to use bash:</p>\n\n<pre><code>Command::new(\"bash\")\n    .arg(\"-c\")\n    .arg(format!(\"source {}\", alias_file))\n    .spawn()\n    .expect(\"Failed to source alias file\");\n</code></pre>\n"}], "owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1556953080, "creation_date": 1556950332, "question_id": 55980006, "link": "https://stackoverflow.com/questions/55980006/source-a-file-from-rust-using-command", "title": "Source a file from rust using Command", "body": "<p>I am using the Command crate to source a file. I am doing a <code>ls -a</code>using the same Command crate before I source. The file that is to be sourced is present when I list directory contents. But when I source I get a file not found error.</p>\n\n<p><strong>Error and log:</strong></p>\n\n<pre><code>     Running `target/debug/alias_cli h htop`\n.       .alias      Cargo.lock  src\n..      .idea       Cargo.toml  target\nthread 'main' panicked at 'Failed to source alias file: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }', libcore/result.rs:1009:5\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n./.alias%\n</code></pre>\n\n<p><strong>Code:</strong></p>\n\n<pre><code>fn source_alias_file(alias_file: &amp;String) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    print!(\"{}\", alias_file);\n    Command::new(\"ls\")\n        .arg(\"-a\")\n        .spawn()\n        .expect(\"Failed to list\");\n\n    Command::new(\"source\")\n        .arg(alias_file)\n        .spawn()\n        .expect(\"Failed to source alias file\");\n\n    Ok(())\n}\n</code></pre>\n\n<p>What is going wrong here?</p>\n\n<p>I am able to source the file directly from the terminal without any errors.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 2, "creation_date": 1556950030, "post_id": 55979703, "comment_id": 98609562, "body": "<code>!(start &gt;= latest_id)</code> - Why so complicated? Why not <code>start &lt; latest_id</code>?"}, {"owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1556955588, "post_id": 55979703, "comment_id": 98610516, "body": "Woops.. Good point. I missed that one."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1556962239, "post_id": 55979703, "comment_id": 98611830, "body": "Note: you can simplify the second version to just <code>(current_id+1..latest_id).collect()</code>. No need for the <code>let</code> binding. Just have the <code>collect()</code> expression be the last one in your function."}], "answers": [{"comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 4, "creation_date": 1556950001, "post_id": 55979821, "comment_id": 98609559, "body": "Your reasoning on the slowdown is correct. You can make the <code>push</code> version faster (though probably still not quite as fast as the <code>collect</code> version) by using <code>vec::with_capacity(LATEST_ID - CURRENT_ID)</code> instead of <code>vec![]</code>."}, {"owner": {"reputation": 166, "user_id": 6323476, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8756a0c871428668f0a7dc6222c9da9e?s=128&d=identicon&r=PG&f=1", "display_name": "frick", "link": "https://stackoverflow.com/users/6323476/frick"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1556950822, "post_id": 55979821, "comment_id": 98609672, "body": "@SebastianRedl that makes sense, but why is <code>collect</code> so much faster though? What does it do different?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 3, "creation_date": 1556951077, "post_id": 55979821, "comment_id": 98609718, "body": "@EvilRobotOverlord It calls <code>size_hint</code> on the range iterator, and since that iterator knows exactly how many elements it has, this allows the vec to precisely allocate enough space and copy the elements without any range checks."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1556962449, "post_id": 55979821, "comment_id": 98611871, "body": "While the conclusion is correct (AFAICT), the benchmarks are incorrect. The created vectors are never used, so the compiler could just remove everything, leading to a phenomenal time of 0 ns (yes, it didn&#39;t in this case, but it&#39;s still dangerous). In benchmarks you always have to make sure that your result is used or dummy-used. There is <code>test::black_box</code> exactly for that purpose. Even better: you can return a value from the closure in <code>iter()</code> which is put into a black box. So just return <code>ids</code> from that closure to fix the benchmark."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1556974298, "post_id": 55979821, "comment_id": 98614672, "body": "@SebastianRedl Additionally, <code>collect</code> may use <code>memcpy</code>, depending on the <code>Iterator</code>."}], "tags": [], "owner": {"reputation": 166, "user_id": 6323476, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8756a0c871428668f0a7dc6222c9da9e?s=128&d=identicon&r=PG&f=1", "display_name": "frick", "link": "https://stackoverflow.com/users/6323476/frick"}, "is_accepted": true, "score": 1, "last_activity_date": 1556948758, "last_edit_date": 1556948758, "creation_date": 1556948432, "answer_id": 55979821, "question_id": 55979703, "link": "https://stackoverflow.com/questions/55979703/is-creating-a-large-vec-full-of-sequential-u64-faster-via-loop-and-push-or-via/55979821#55979821", "title": "Is creating a large Vec full of sequential u64 faster via loop and push() or via collect()?", "body": "<p>If you're ever in doubt about performance in Rust, don't forget about <a href=\"https://doc.rust-lang.org/1.16.0/book/benchmark-tests.html\" rel=\"nofollow noreferrer\">benchmarks</a>.</p>\n\n<pre><code>#![feature(test)]\n\nextern crate test;\n\n#[cfg(test)]\nmod tests {\n    use test::Bencher;\n\n    const CURRENT_ID: u64 = 1;\n    const LATEST_ID: u64 = 60000;\n\n    #[bench]\n    fn push(b: &amp;mut Bencher) {\n        b.iter(|| {\n            let mut ids: Vec&lt;u64&gt; = vec![];\n            let mut start = CURRENT_ID;\n\n            while !(start &gt;= LATEST_ID) {\n                start += 1;\n                ids.push(start);\n            }\n        });\n    }\n\n    #[bench]\n    fn collect(b: &amp;mut Bencher) {\n        b.iter(|| {\n            let _ids: Vec&lt;u64&gt; = (CURRENT_ID + 1..LATEST_ID).collect();\n        });\n    }\n}\n</code></pre>\n\n<p>Running <code>cargo bench</code>,</p>\n\n<pre><code>running 2 tests\ntest tests::collect ... bench:      29,931 ns/iter (+/- 6,842)\ntest tests::push    ... bench:      85,701 ns/iter (+/- 18,096)\n</code></pre>\n\n<p>You can see that <code>collect</code> is actually faster than <code>push</code> (by a lot). I'm guessing this has to do with <code>push</code> sometimes having to clone the whole <code>Vec</code> and move it to a different location in memory (don't quote me on that though).</p>\n"}], "owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 55979821, "answer_count": 1, "score": 2, "last_activity_date": 1556962179, "creation_date": 1556947165, "last_edit_date": 1556962179, "question_id": 55979703, "link": "https://stackoverflow.com/questions/55979703/is-creating-a-large-vec-full-of-sequential-u64-faster-via-loop-and-push-or-via", "title": "Is creating a large Vec full of sequential u64 faster via loop and push() or via collect()?", "body": "<p>I am looking for the most efficient way of doing this as I have to create a vector of about 600,000 <code>u64</code> integers.</p>\n\n<p>Here is my first attempt:</p>\n\n<pre><code>fn latest_ids(current_id: u64, latest_id: u64) -&gt; Vec&lt;u64&gt; {\n    let mut ids: Vec&lt;u64&gt; = vec![];\n    let mut start = current_id;\n    while !(start &gt;= latest_id) {\n        start += 1;\n        ids.push(start);\n    }\n    ids\n}\n</code></pre>\n\n<p>Second attempt:</p>\n\n<pre><code>fn latest_ids(current_id: u64, latest_id: u64) -&gt; Vec&lt;u64&gt; {\n    let ids: Vec&lt;u64&gt; = (current_id+1..latest_id).collect();\n    ids\n}\n</code></pre>\n\n<p>The second version is much shorter/cleaner, but I am not sure how efficient <code>collect()</code> is going to be? Or perhaps there is a better way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 92118, "user_id": 1217358, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2aafb97833979e3668c61d36e697bfc?s=128&d=identicon&r=PG", "display_name": "Warren Weckesser", "link": "https://stackoverflow.com/users/1217358/warren-weckesser"}, "edited": false, "score": 1, "creation_date": 1556944460, "post_id": 55979463, "comment_id": 98608784, "body": "FYI: <a href=\"https://en.wikipedia.org/wiki/NaN#Comparison_with_NaN\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/NaN#Comparison_with_NaN</a>"}, {"owner": {"reputation": 92118, "user_id": 1217358, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2aafb97833979e3668c61d36e697bfc?s=128&d=identicon&r=PG", "display_name": "Warren Weckesser", "link": "https://stackoverflow.com/users/1217358/warren-weckesser"}, "edited": false, "score": 1, "creation_date": 1556944680, "post_id": 55979463, "comment_id": 98608815, "body": "More FYI: <a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.is_nan\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.f32.html#method.is_nan</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556957147, "post_id": 55979722, "comment_id": 98610791, "body": "Yes @Stargateur. I use <code>let _mean = aa.iter().fold(0., |sum: f32, x| sum + *x)</code>. Initially I had <code>sum</code> a mutable variable as <code>mut sum</code> however compiler suggested me that doesn&#39;t need to be. I am trying to understand why though. Your insight is welcome here on this."}], "tags": [], "owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "is_accepted": true, "score": 1, "last_activity_date": 1556967680, "last_edit_date": 1556967680, "creation_date": 1556947391, "answer_id": 55979722, "question_id": 55979463, "link": "https://stackoverflow.com/questions/55979463/value-of-f32nan-rust-closure-for-omitting-nan-values/55979722#55979722", "title": "value of f32::NAN rust closure for omitting &#39;NaN&#39; values", "body": "<p>With the right directional help of <code>Warren Weckesser</code> Managed to make the closure work.</p>\n\n<p>Here is the solution for those who might need.</p>\n\n<pre><code>let ss = aa.iter().fold(0., |sum: f32, x| if x.is_nan() { sum + 0. } else { sum + x });\n</code></pre>\n\n<p>Alternatively,</p>\n\n<pre><code>let ss = aa.iter().fold(0., |sum: f32, x| if x.is_nan() { sum } else { sum + x });\n</code></pre>\n\n<p>if one cares about a unnecessary <code>+</code> operation.</p>\n\n<p><strong>Performance Comparison</strong></p>\n\n<pre><code>extern crate rand;\n\nuse rand::Rng;\nfn main() {\n    let mut a [f32; 1000] = [0.; 1000];\n    for i in 0..1000 {\n        a[i] = rand::thread_rng().gen_range(1,11);\n    }\n}\n</code></pre>\n\n<p><strong>Approach-I:</strong></p>\n\n<pre><code>let ss = a.iter()\n        .filter(|n| !n.is_nan())\n        .sum::&lt;f32&gt;();\n</code></pre>\n\n<p><strong><em>Callgrind</em></strong></p>\n\n<pre><code>&gt;&gt; cargo profiler callgrind -n 10\n\nCompiling playground in debug mode...\n\nProfiling playground with callgrind...\n\nTotal Instructions...3,959,454\n\n177,532 (4.5%) isaac64.rs:rand::prng::isaac64::Isaac64Rng::isaac64\n-----------------------------------------------------------------------\n121,742 (3.1%) memmove-vec-unaligned-erms.S:memcpy@GLIBC_2.2.5\n-----------------------------------------------------------------------\n104,224 (2.6%) dl-lookup.c:do_lookup_x\n-----------------------------------------------------------------------\n102,982 (2.6%) ptr.rs:core::ptr::swap_nonoverlapping_one\n-----------------------------------------------------------------------\n99,660 (2.5%) intrinsics.rs:core::intrinsics::copy_nonoverlapping\n-----------------------------------------------------------------------\n76,555 (1.9%) strcmp.S:strcmp\n-----------------------------------------------------------------------\n72,997 (1.8%) local.rs:_..std..thread..local..LocalKey..T....::try_with\n-----------------------------------------------------------------------\n72,063 (1.8%) ptr.rs:_..core..ptr..NonNull..T....::as_ref\n-----------------------------------------------------------------------\n70,028 (1.8%) rc.rs:alloc::rc::RcBoxPtr::strong\n-----------------------------------------------------------------------\n62,000 (1.6%) ptr.rs:core::ptr::swap_nonoverlapping_one\n-----------------------------------------------------------------------\n</code></pre>\n\n<p><strong>Approach-II:</strong></p>\n\n<pre><code>let ss = a.iter()\n        .fold(0., |sum: f32, x| if x.is_nan() { sum } else { sum + x });\n</code></pre>\n\n<p><strong>Callgrind</strong></p>\n\n<pre><code>&gt;&gt; cargo profiler callgrind -n 10\n\nCompiling playground in debug mode...\n\nProfiling playground with callgrind...\n\nTotal Instructions...3,938,312\n\n177,532 (4.5%) isaac64.rs:rand::prng::isaac64::Isaac64Rng::isaac64\n-----------------------------------------------------------------------\n121,766 (3.1%) memmove-vec-unaligned-erms.S:memcpy@GLIBC_2.2.5\n-----------------------------------------------------------------------\n104,224 (2.6%) dl-lookup.c:do_lookup_x\n-----------------------------------------------------------------------\n102,982 (2.6%) ptr.rs:core::ptr::swap_nonoverlapping_one\n-----------------------------------------------------------------------\n99,660 (2.5%) intrinsics.rs:core::intrinsics::copy_nonoverlapping\n-----------------------------------------------------------------------\n76,555 (1.9%) strcmp.S:strcmp\n-----------------------------------------------------------------------\n72,997 (1.9%) local.rs:_..std..thread..local..LocalKey..T....::try_with\n-----------------------------------------------------------------------\n72,063 (1.8%) ptr.rs:_..core..ptr..NonNull..T....::as_ref\n-----------------------------------------------------------------------\n70,028 (1.8%) rc.rs:alloc::rc::RcBoxPtr::strong\n-----------------------------------------------------------------------\n62,000 (1.6%) ptr.rs:core::ptr::swap_nonoverlapping_one\n-----------------------------------------------------------------------\n</code></pre>\n\n<p>Looking at the <em>Total Instructions</em>, <strong>Approach-II</strong> fares well in terms of run-time performance with <code>~20,000</code> instructions less than <strong>Approach-I</strong> for <code>1000</code> element array. Anticipating this difference will positively translate in to enhanced run-time performance for <strong>Approach-II</strong>. Investigating, from where the difference stem from.</p>\n"}, {"comments": [{"owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "edited": false, "score": 0, "creation_date": 1556964793, "post_id": 55981270, "comment_id": 98612378, "body": "Thanks @Lukas Kalbertodt. I learnt <code>sum::&lt;T&gt;</code> method from your answer. Using <code>filter</code> chained with <code>sum::&lt;T&gt;</code> looks more idiomatic."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 3, "last_activity_date": 1556962869, "creation_date": 1556962869, "answer_id": 55981270, "question_id": 55979463, "link": "https://stackoverflow.com/questions/55979463/value-of-f32nan-rust-closure-for-omitting-nan-values/55981270#55981270", "title": "value of f32::NAN rust closure for omitting &#39;NaN&#39; values", "body": "<p>You cannot check for NaN that way, since <code>NaN == NaN</code> evaluates to <code>false</code>. Use <a href=\"https://doc.rust-lang.org/stable/std/primitive.f32.html#method.is_nan\" rel=\"nofollow noreferrer\"><code>f32::is_nan</code></a> instead. Furthermore, you can use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.filter\" rel=\"nofollow noreferrer\"><code>Iterator::filter</code></a> to filter out elements of an iterator and <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.sum\" rel=\"nofollow noreferrer\"><code>Iterator::sum</code></a> to sum all values.</p>\n\n<p>This results in this code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=526ae9e1b18e32fca5d9667a7671a9ed\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let aa = [3.14f32, std::f32::NAN, 2.71, 27.99];\nlet ss = aa.iter()\n    .filter(|n| !n.is_nan())\n    .sum::&lt;f32&gt;();\n\nprintln!(\"{}\", ss);\n</code></pre>\n"}], "owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 0, "accepted_answer_id": 55979722, "answer_count": 2, "score": 0, "last_activity_date": 1556967680, "creation_date": 1556944401, "last_edit_date": 1556957414, "question_id": 55979463, "link": "https://stackoverflow.com/questions/55979463/value-of-f32nan-rust-closure-for-omitting-nan-values", "title": "value of f32::NAN rust closure for omitting &#39;NaN&#39; values", "body": "<p>I have the following closure. </p>\n\n<pre><code>let ss = aa.iter().fold(0., |sum: f32,x| if *x != f32::NAN { sum + e } else { sum + 0. })\n</code></pre>\n\n<p>I am trying to sum all the values omitting <code>f32::NAN</code> if any in the vector(I have couple of <code>NaN</code> values in the vector). </p>\n\n<p>But, My return gives me <code>NaN</code> value because my condition <code>if *x != f32::NAN</code> does not seem to be valid. Because, the following closure yields the original vector instead of omitting <code>NaN</code> value.</p>\n\n<pre><code>let bb = aa.iter().filter(|x| **x != f32::NAN).map(|x| x)\n</code></pre>\n\n<p>My question is, how do I match <code>f32::NAN</code> value in a <code>if</code> condition?\nIn a broader perspective, How do I omit <code>NaN</code> values in a vector?</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1556953403, "post_id": 55979338, "comment_id": 98610075, "body": "Are you sure you compile on <code>#[cfg(all(target_os = &quot;win32&quot;, target_arch = &quot;x86&quot;))]</code> ?"}, {"owner": {"reputation": 259, "user_id": 1646801, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5169cc1ea88eb525f93cbd1187508290?s=128&d=identicon&r=PG", "display_name": "user1646801", "link": "https://stackoverflow.com/users/1646801/user1646801"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556981323, "post_id": 55979338, "comment_id": 98616602, "body": "I&#39;m on windows, so win32 and x86 should produce a compatible binary."}], "answers": [{"tags": [], "owner": {"reputation": 259, "user_id": 1646801, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5169cc1ea88eb525f93cbd1187508290?s=128&d=identicon&r=PG", "display_name": "user1646801", "link": "https://stackoverflow.com/users/1646801/user1646801"}, "is_accepted": true, "score": 1, "last_activity_date": 1557093174, "last_edit_date": 1557093174, "creation_date": 1557037348, "answer_id": 55989371, "question_id": 55979338, "link": "https://stackoverflow.com/questions/55979338/cannot-find-function-when-trying-to-follow-ffi-example/55989371#55989371", "title": "&quot;cannot find function&quot; when trying to follow FFI example", "body": "<p>The comment from Stargateur was the right direction.  Removing the following line fixed the problem:</p>\n\n<pre><code>#[cfg(all(target_os = \"win32\", target_arch = \"x86\"))]\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html\" rel=\"nofollow noreferrer\"><code>cfg</code> attribute</a> was used in the \"Foreign calling conventions\" section of the tutorial, so I figured it was somehow part of the magic to get the linking and calling convention to work. That's not how <code>cfg</code> works at all.   The URL of the documentation alone explains why I was getting the \"cannot find function\" error: \"conditional compilation\".</p>\n\n<p>I was able to extend the example into a sort of hello world:</p>\n\n<pre><code>#[link(name = \"kernel32\")]\n#[allow(non_snake_case)]\nextern \"stdcall\" {\n    fn SetEnvironmentVariableA(n: *const u8, v: *const u8) -&gt; i32;\n    fn GetEnvironmentVariableA(n: *const u8, v: *mut u8, s : u32) -&gt; i32;\n}\n\nfn main() {\n    println!(\"Enter main\");\n    unsafe {\n        let ret = SetEnvironmentVariableA(\"HELLO_WORLD_VAR\\0\".as_ptr(),\"hellow world!\\0\".as_ptr());\n        println!(\"ret: {}\", ret);\n        let mut dummy : u8 = 0;\n        let ret1 = GetEnvironmentVariableA(\"HELLO_WORLD_VAR\\0\".as_ptr(), &amp;mut dummy, 0);\n        println!(\"ret1: {}\", ret1);\n        if ret1 &gt; 0 {\n            let mut read = vec![0; ret1 as usize];\n            let ret2 = GetEnvironmentVariableA(\"HELLO_WORLD_VAR\\0\".as_ptr(),read.as_mut_ptr(), ret1 as u32);\n            let read_str = String::from_utf8(read).unwrap();\n            println!(\"ret2: {}\", ret2);\n            println!(\"read_str: {}\", read_str);\n            println!(\"read_str.len(): {}\", read_str.len());\n        }\n    }\n    println!(\"Exit main\");\n}\n</code></pre>\n"}], "owner": {"reputation": 259, "user_id": 1646801, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5169cc1ea88eb525f93cbd1187508290?s=128&d=identicon&r=PG", "display_name": "user1646801", "link": "https://stackoverflow.com/users/1646801/user1646801"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 282, "favorite_count": 0, "accepted_answer_id": 55989371, "answer_count": 1, "score": 1, "last_activity_date": 1557093314, "creation_date": 1556942547, "last_edit_date": 1557093314, "question_id": 55979338, "link": "https://stackoverflow.com/questions/55979338/cannot-find-function-when-trying-to-follow-ffi-example", "title": "&quot;cannot find function&quot; when trying to follow FFI example", "body": "<p>I'm trying to get started with Rust FFI, so I went to <a href=\"https://doc.rust-lang.org/nomicon/ffi.html\" rel=\"nofollow noreferrer\">the nomicon's documentation on FFI</a> and tried replicate the \"Foreign calling conventions\" example.</p>\n\n<p>I made a simple bit of code that just copy-pastes the example and tries to use the function that's declared:</p>\n\n<pre><code>extern crate libc;\n\n#[cfg(all(target_os = \"win32\", target_arch = \"x86\"))]\n#[link(name = \"kernel32\")]\n#[allow(non_snake_case)]\nextern \"stdcall\" {\n    fn SetEnvironmentVariableA(n: *const u8, v: *const u8) -&gt; libc::c_int;\n}\n\nfn main() {\n    println!(\"Enter main\");\n    unsafe {\n        let ret = SetEnvironmentVariableA(\"SOME_NEW_ENV_VAR\\0\", \"NEW_ENV_VAR_VAL\\0\");\n        println!(\"ret: {}\", ret);\n    }\n    println!(\"Exit main\");\n}\n</code></pre>\n\n<p>This doesn't really do anything useful, I just wanted to see if I could link to and call a function without everything exploding.</p>\n\n<p>I get this error from the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find function `SetEnvironmentVariableA` in this scope\n  --&gt; src\\main.rs:13:19\n   |\n13 |         let ret = SetEnvironmentVariableA(\"SOME_NEW_ENV_VAR\\0\",\"NEW_ENV_VAR_VAL\\0\");\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n</code></pre>\n\n<p>Is the example out of date?  Am I missing something obvious? It seems like no matter what, the <code>SetEnvironmentVariableA</code> that I declare should be in scope.</p>\n\n<p>I'm aware of the winapi crate, but I'm trying to learn Rust FFI; using an existing crate that solves the problem would defeat the purpose.</p>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1556917780, "post_id": 55977067, "comment_id": 98604779, "body": "Considering that it is <code>static</code>, you can just make it a static string slice (<code>&amp;&#39;static str</code>), rather than a heap allocated <code>String</code>. See also <a href=\"https://stackoverflow.com/q/32956050/1233251\">stackoverflow.com/q/32956050/1233251</a> and <a href=\"https://stackoverflow.com/q/27791532/1233251\">stackoverflow.com/q/27791532/1233251</a>"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 1, "creation_date": 1556918872, "post_id": 55977067, "comment_id": 98605089, "body": "There may be a misunderstanding of what a <code>static String</code> is (or would be). A <code>static</code> is something that is globally addressable (aka can be seen everywhere, including by objects from other libraries). A <code>&#39;static</code> (notice the <code>&#39;</code>) denotes a lifetimes that can span the lifetime of the entire program; any <code>static</code> has a lifetime <code>&#39;static</code>. A <code>String</code> is, by definition, a heap-allocated structure that holds a <code>str</code> but can also extend in size (through reallocation). A <code>static String</code>  therefor does not make much sense. You may want a <code>&#39;static String</code>, see the other comment for that"}, {"owner": {"reputation": 500, "user_id": 9061909, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dyipU.jpg?s=128&g=1", "display_name": "Josep", "link": "https://stackoverflow.com/users/9061909/josep"}, "edited": false, "score": 2, "creation_date": 1557067864, "post_id": 55977067, "comment_id": 98634106, "body": "As a comment to the original question, it feels harsh to mark this question as a duplicate of the singleton pattern. Two question with the same answer are not the same question. Specially in this case when it comes down to strings, which are owned and mutable, and have a different treatment than &amp;&#39;static str."}], "answers": [{"tags": [], "owner": {"reputation": 500, "user_id": 9061909, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dyipU.jpg?s=128&g=1", "display_name": "Josep", "link": "https://stackoverflow.com/users/9061909/josep"}, "is_accepted": false, "score": 5, "last_activity_date": 1598266677, "last_edit_date": 1598266677, "creation_date": 1556979023, "answer_id": 55983365, "question_id": 55977067, "link": "https://stackoverflow.com/questions/55977067/how-can-i-create-a-static-string-in-rust/55983365#55983365", "title": "How can I create a static String in Rust?", "body": "<p>Don't confuse the <code>String</code> type with the <code>str</code> type.</p>\n<p><a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust&#39;s `String` and `str`?</a></p>\n<p>A String is mutable and always heap-allocated.</p>\n<p>A str, usually presented as &amp;str is not mutable and is simply a view into a string.</p>\n<p>Your question seems to confuse the idea of <strong>static</strong> and <strong>globally adressable</strong>. You may refer to (&amp;'static str) as a string with a 'static lifetime. Strings with  'static lifetimes are common because they (mostly) represent hardcoded strings in the program. A 'static lifetime means the object (in this case, a string) will live until the end of the program. Most 'static objects are known at compile time. This should be natural to think about, because hardcoded strings are known at compile time. These strings can not mutate.</p>\n<p>Strings on the other hand, are mutable. And you can make a String from a &amp;'static str.</p>\n<p>Given the lack of context in the question, if what you want is a String that is globally adressable and want to define it <em>static</em> I may suggest the macro lazy-static:</p>\n<p><a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\">https://crates.io/crates/lazy_static</a></p>\n<p>As sugested by mcarton, this question seems to boil down to the singleton pattern. You can learn more about its implementation in Rust here: <a href=\"https://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\">How do I create a global, mutable singleton?</a></p>\n"}], "owner": {"reputation": 329, "user_id": 10883424, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hNtWr.png?s=128&g=1", "display_name": "LJ Germain", "link": "https://stackoverflow.com/users/10883424/lj-germain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3864, "favorite_count": 1, "closed_date": 1557048927, "answer_count": 1, "score": 1, "last_activity_date": 1598266677, "creation_date": 1556917303, "last_edit_date": 1556919226, "question_id": 55977067, "link": "https://stackoverflow.com/questions/55977067/how-can-i-create-a-static-string-in-rust", "closed_reason": "Duplicate", "title": "How can I create a static String in Rust?", "body": "<p>Is there a way I can create a static String in Rust?</p>\n\n<p>I tried this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>static somestring: String = String::new();\n</code></pre>\n\n<p>but I got this error: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error: `std::string::String::new` is not yet stable as a const fn\n --&gt; src/main.rs:2:29\n  |\n2 | static somestring: String = String::new();\n  |\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/32956050/how-to-create-a-static-string-at-compile-time?noredirect=1&amp;lq=1\">How to create a static string at compile time</a> does not solve my problem because it's about <code>&amp;'static str</code>, not <code>String</code>. I need the <code>String</code> to be globally addressable.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1556967315, "post_id": 55975234, "comment_id": 98612982, "body": "It would be useful if you could clarify (1) whether <code>a</code> and <code>b</code> should retain the non-intersecting values, or it does not matter and (2) what algorithmic complexity you are aiming for."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 5, "last_activity_date": 1556913391, "last_edit_date": 1556913391, "creation_date": 1556910979, "answer_id": 55975912, "question_id": 55975234, "link": "https://stackoverflow.com/questions/55975234/how-do-i-intersect-two-hashsets-while-moving-values-in-common-into-a-new-set/55975912#55975912", "title": "How do I intersect two HashSets while moving values in common into a new set?", "body": "<p>The aliasing rules imposed by the compiler requires you to move the values back and forth. Values can be drained out of a set, although unconditionally. However, we can send certain values back if we keep track of which should be moved and which should stay in a new set. Afterwards, <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html#method.retain\" rel=\"noreferrer\"><code>retain</code></a> allows us to remove the common values from the second set.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashSet;\nuse std::hash::Hash;\n\n/// Extracts the common values in `a` and `b` into a new set.\nfn inplace_intersection&lt;T&gt;(a: &amp;mut HashSet&lt;T&gt;, b: &amp;mut HashSet&lt;T&gt;) -&gt; HashSet&lt;T&gt;\nwhere\n    T: Hash,\n    T: Eq,\n{\n    let x: HashSet&lt;(T, bool)&gt; = a\n        .drain()\n        .map(|v| {\n            let intersects = b.contains(&amp;v);\n            (v, intersects)\n        })\n        .collect();\n\n    let mut c = HashSet::new();\n    for (v, is_inter) in x {\n        if is_inter {\n            c.insert(v);\n        } else {\n            a.insert(v);\n        }\n    }\n\n    b.retain(|v| !c.contains(&amp;v));\n\n    c\n}\n</code></pre>\n\n<p>Using:</p>\n\n<pre><code>use itertools::Itertools;  // for .sorted()\n\nlet mut a: HashSet&lt;_&gt; = [1, 2, 3].iter().cloned().collect();\nlet mut b: HashSet&lt;_&gt; = [4, 2, 3].iter().cloned().collect();\n\nlet c = inplace_intersection(&amp;mut a, &amp;mut b);\n\nlet a: Vec&lt;_&gt; = a.into_iter().sorted().collect();\nlet b: Vec&lt;_&gt; = b.into_iter().sorted().collect();\nlet c: Vec&lt;_&gt; = c.into_iter().sorted().collect();\nassert_eq!(&amp;a, &amp;[1]);\nassert_eq!(&amp;b, &amp;[4]);\nassert_eq!(&amp;c, &amp;[2, 3]);\n\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b9020cc133fda82800fe47e7932f6997\" rel=\"noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 11449669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78df678959c155a596b06eae6114df8d?s=128&d=identicon&r=PG&f=1", "display_name": "SoWhich", "link": "https://stackoverflow.com/users/11449669/sowhich"}, "is_accepted": false, "score": 2, "last_activity_date": 1556913885, "last_edit_date": 1556913885, "creation_date": 1556913512, "answer_id": 55976367, "question_id": 55975234, "link": "https://stackoverflow.com/questions/55975234/how-do-i-intersect-two-hashsets-while-moving-values-in-common-into-a-new-set/55976367#55976367", "title": "How do I intersect two HashSets while moving values in common into a new set?", "body": "<p>Alternatively, if you can take ownership over the sets themselves and don't care about retaining the non-intersecting values in the other sets, you can do the following:</p>\n\n<pre><code>use std::hash::Hash;\nuse std::collections::HashSet;\n\nfn intersection&lt;T: Eq + Hash&gt;(a: HashSet&lt;T&gt;, b: &amp;HashSet&lt;T&gt;) -&gt; HashSet&lt;T&gt; {\n    a.into_iter().filter(|e| b.contains(e)).collect()\n}\n</code></pre>\n\n<p>This takes the elements in a which are contained in b and collects them into a new HashSet</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1556967503, "post_id": 55977965, "comment_id": 98613027, "body": "I would note that if the state of <code>a</code> and <code>b</code> after intersection do no matter, then the <code>a.retain(...)</code> step is unnecessary, and we have an optimally efficient, single-pass, one-liner."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": false, "score": 3, "last_activity_date": 1593114823, "last_edit_date": 1593114823, "creation_date": 1556923972, "answer_id": 55977965, "question_id": 55975234, "link": "https://stackoverflow.com/questions/55975234/how-do-i-intersect-two-hashsets-while-moving-values-in-common-into-a-new-set/55977965#55977965", "title": "How do I intersect two HashSets while moving values in common into a new set?", "body": "<p>Another solution, <a href=\"https://stackoverflow.com/a/55975912/2766908\">similar to E_net4's</a>, but this one does not involve draining and then repopulating the first set. IMHO it is slightly easier to read as well.</p>\n<pre><code>fn inplace_intersection&lt;T&gt;(a: &amp;mut HashSet&lt;T&gt;, b: &amp;mut HashSet&lt;T&gt;) -&gt; HashSet&lt;T&gt;\nwhere\n    T: Hash,\n    T: Eq,\n{\n    let mut c = HashSet::new();\n    \n    for v in a.iter() {\n        if let Some(found) = b.take(v) {\n            c.insert(found);\n        }\n    }\n    \n    a.retain(|v| !c.contains(&amp;v));\n\n    c\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1e5bcf032e3c260373873c474c8cd637\" rel=\"nofollow noreferrer\">Playground Link</a></p>\n<p>After writing this I realized it could be made even simpler:</p>\n<pre><code>fn inplace_intersection&lt;T&gt;(a: &amp;mut HashSet&lt;T&gt;, b: &amp;mut HashSet&lt;T&gt;) -&gt; HashSet&lt;T&gt;\nwhere\n    T: Hash,\n    T: Eq,\n{\n    let c: HashSet&lt;T&gt; = a.iter().filter_map(|v| b.take(v)).collect();\n    \n    a.retain(|v| !c.contains(&amp;v));\n\n    c\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c288c0ef82527edf764adefc1f0e5978\" rel=\"nofollow noreferrer\">Playground Link</a></p>\n"}], "owner": {"reputation": 4210, "user_id": 1078199, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3bd82fe90f48f98ed74852edf3c7d531?s=128&d=identicon&r=PG", "display_name": "charmoniumQ", "link": "https://stackoverflow.com/users/1078199/charmoniumq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 793, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1593114823, "creation_date": 1556907532, "last_edit_date": 1557091996, "question_id": 55975234, "link": "https://stackoverflow.com/questions/55975234/how-do-i-intersect-two-hashsets-while-moving-values-in-common-into-a-new-set", "title": "How do I intersect two HashSets while moving values in common into a new set?", "body": "<pre><code>use std::collections::HashSet;\nlet mut a: HashSet&lt;T&gt; = HashSet::new();\nlet mut b: HashSet&lt;T&gt; = HashSet::new();\nlet mut c: HashSet&lt;T&gt; = a.intersection(&amp;b).collect();\n// Error: a collection of type `std::collections::HashSet&lt;T&gt;` cannot be built from an iterator over elements of type `&amp;T`\n</code></pre>\n\n<p>I no longer need the non-intersecting values. \nHow do I steal/move the data from the sets <code>a</code> and <code>b</code> into <code>c</code> without copying or cloning? Ideally, this would have the theoretically optimal time-complexity: O(min(a, b)).</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556908143, "post_id": 55973312, "comment_id": 98601284, "body": "The proposed duplicate target is indeed applicable to owned values of a struct. Please read the answer again. What you can do is implement <code>Iterator</code> for a reference to <code>MyIter</code>, but not <code>MyIter</code> itself."}, {"owner": {"reputation": 4210, "user_id": 1078199, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3bd82fe90f48f98ed74852edf3c7d531?s=128&d=identicon&r=PG", "display_name": "charmoniumQ", "link": "https://stackoverflow.com/users/1078199/charmoniumq"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556911228, "post_id": 55973312, "comment_id": 98602450, "body": "Do you mean <code>impl&lt;&#39;a, T&gt; Iterator for &amp; mut MyIter&lt;&#39;a, T&gt;</code>? That has the same error."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556911382, "post_id": 55973312, "comment_id": 98602510, "body": "You&#39;ll have to make a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> of that attempt, otherwise were unlikely to understand what went wrong."}], "owner": {"reputation": 4210, "user_id": 1078199, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3bd82fe90f48f98ed74852edf3c7d531?s=128&d=identicon&r=PG", "display_name": "charmoniumQ", "link": "https://stackoverflow.com/users/1078199/charmoniumq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 567, "favorite_count": 0, "closed_date": 1557193479, "answer_count": 0, "score": 0, "last_activity_date": 1556911566, "creation_date": 1556898737, "last_edit_date": 1556911566, "question_id": 55973312, "link": "https://stackoverflow.com/questions/55973312/rust-return-reference-to-member-variable-in-a-function-in-an-impl", "closed_reason": "Duplicate", "title": "Rust: return reference to member variable in a function in an `impl`", "body": "<p>How do I scope the lifetime for a function that returns a reference to a member variable? The reference will be valid as long as the struct is alive.</p>\n\n<p>Here is an example where one might want this:</p>\n\n<pre><code>struct CountUpIter&lt;'a, T&gt; {\n    output: &amp;'a mut T,\n}\n\nfn next&lt;'a, T&gt;(selff: &amp;'a mut CountUpIter&lt;'a, T&gt;) -&gt; Option&lt;&amp;'a T&gt; {\n    Some(&amp;selff.output)\n}\n\n// This does not work\n// first, the lifetime cannot outlive the lifetime '_ as defined on the impl so that reference does not outlive borrowed content\n// but, the lifetime must be valid for the lifetime 'a as defined on the impl\nimpl&lt;'a, T&gt; Iterator for CountUpIter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        Some(&amp;self.output)\n    }\n}\n\n// Neither does this. It fails with the same error\nimpl&lt;'a, T&gt; Iterator for &amp;mut CountUpIter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        Some(&amp;self.output)\n    }\n}\n</code></pre>\n\n<p>I have matched as much as possible the solution to <a href=\"https://stackoverflow.com/a/30422716/1078199\">this question</a>, but I want to iterate over <code>&amp;T</code> not <code>Vec&lt;&amp;T&gt;</code>.</p>\n"}, {"tags": ["enums", "rust"], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556897116, "post_id": 55972819, "comment_id": 98596432, "body": "Please, do not answer to duplicates. Your solution is already there: <a href=\"https://stackoverflow.com/a/28029667/4498831\">stackoverflow.com/a/28029667/4498831</a>"}], "tags": [], "owner": {"reputation": 91, "user_id": 8061723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6310f7906da4f68341fdef33e42c25c3?s=128&d=identicon&r=PG", "display_name": "Erik Tate", "link": "https://stackoverflow.com/users/8061723/erik-tate"}, "is_accepted": true, "score": 0, "last_activity_date": 1556896948, "creation_date": 1556896948, "answer_id": 55972819, "question_id": 55972621, "link": "https://stackoverflow.com/questions/55972621/how-to-create-a-field-less-enum-variant-from-its-discriminant/55972819#55972819", "title": "How to create a Field-Less Enum variant from its discriminant?", "body": "<p>There isn't a concise, built in way to do this in Rust. There are crates that help out with this sort of thing, such as <a href=\"https://crates.io/crates/enum_primitive\" rel=\"nofollow noreferrer\">enum_primitive</a>, but depending on the number of enums you have, you might be better off implementing it yourself.</p>\n\n<p>I've done this sort of thing a few times:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(u8)]\npub enum Mode {\n    Text,\n    Code,\n    Digits,\n    AlphaNumeric,\n}\n\nimpl Mode {\n    pub fn from(mode: u8) -&gt; Mode {\n        match mode {\n            0 =&gt; Mode::Text,\n            1 =&gt; Mode::Code,\n            2 =&gt; Mode::Digits,\n            3 =&gt; Mode::AlphaNumeric,\n            _ =&gt; Mode::Text,\n        }\n    }\n}\n</code></pre>\n\n<p>Edit:</p>\n\n<p><a href=\"https://internals.rust-lang.org/t/pre-rfc-enum-from-integer/6348\" rel=\"nofollow noreferrer\">This thread</a> has some additional context about why this isn't possible by default.</p>\n"}], "owner": {"reputation": 23, "user_id": 5065366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d48a342bc5a323d99ec30fbc48700226?s=128&d=identicon&r=PG&f=1", "display_name": "StyMaar", "link": "https://stackoverflow.com/users/5065366/stymaar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 577, "favorite_count": 0, "closed_date": 1556908276, "accepted_answer_id": 55972819, "answer_count": 1, "score": 1, "last_activity_date": 1557220232, "creation_date": 1556896209, "last_edit_date": 1557220232, "question_id": 55972621, "link": "https://stackoverflow.com/questions/55972621/how-to-create-a-field-less-enum-variant-from-its-discriminant", "closed_reason": "Duplicate", "title": "How to create a Field-Less Enum variant from its discriminant?", "body": "<p>If I want to know the discriminant of an enum variant, all I need to do is <code>my_variant as usize</code> (or whatever <code>{integer}</code> type). What if I have the discriminant, and I want to get the corresponding variant ?</p>\n\n<p>I obviously tried the reverse <code>my_int as MyEnum</code>, but it (unsurprisingly) didn't work.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Enu {\n    X,\n    Y,\n}\n\nfn main() {\n    let discr_x = Enu::X as usize;\n    let x = magic(discr_x);\n}\n</code></pre>\n\n<p><code>x</code> should be <code>Enu::X</code></p>\n"}, {"tags": ["rust", "idioms"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 8, "creation_date": 1556886451, "post_id": 55969723, "comment_id": 98590221, "body": "You were close: <code>.filter(|&amp;x| x == Some(1))</code>"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1556886734, "post_id": 55969723, "comment_id": 98590359, "body": "Do you want to count None ones also ?"}, {"owner": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "edited": false, "score": 0, "creation_date": 1556886814, "post_id": 55969723, "comment_id": 98590387, "body": "sorry i chose a simplified example. My x is a struct and I need to compare it to a passed value in the rhs. Like <code>x.is_some() &amp;&amp; x.unwrap().value() == id</code>"}, {"owner": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "edited": false, "score": 0, "creation_date": 1556887214, "post_id": 55969723, "comment_id": 98590629, "body": "I don&#39;t care about the <code>None</code>s"}], "answers": [{"comments": [{"owner": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "edited": false, "score": 0, "creation_date": 1556888943, "post_id": 55969946, "comment_id": 98591663, "body": "what does <code>flatten</code> on None return?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "edited": false, "score": 0, "creation_date": 1556889551, "post_id": 55969946, "comment_id": 98592008, "body": "@pd176 removes the <code>None</code> values from the iterator, this behavior exist for <code>Option</code> Iterator. (Same for <code>Err</code> values of <code>Result</code> Iterator)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "edited": false, "score": 1, "creation_date": 1556890970, "post_id": 55969946, "comment_id": 98592882, "body": "@pd176 <code>flatten</code> works here because an <code>Option</code> can behave like an iterator with either 0 or 1 element(s); it implements <code>IntoIterator</code>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1556891270, "post_id": 55969946, "comment_id": 98593074, "body": "@E_net4 thanks, this is a better explanation, i\u2019ll edit the answer  whenever i can."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 12, "last_activity_date": 1556911537, "last_edit_date": 1556911537, "creation_date": 1556886882, "answer_id": 55969946, "question_id": 55969723, "link": "https://stackoverflow.com/questions/55969723/idiomatic-way-to-count-occurrences-in-a-collection-of-options/55969946#55969946", "title": "Idiomatic way to count occurrences in a collection of Options", "body": "<p>You can use <code>flatten</code> to get rid of <code>None</code> and unwrap the <code>Some(...)</code> values. </p>\n\n<p>Code: </p>\n\n<pre><code>let one_count = v.iter().flatten().filter(|x| **x == 1).count();\n</code></pre>\n\n<p>To count <code>None</code> s you can simply use this:</p>\n\n<pre><code>let none_count = v.len() - v.iter().flatten().count();\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=10ebc428725ff19562326c5a9d638051\" rel=\"noreferrer\">Playground</a></p>\n\n<p><strong>Why Flatten works for <code>Option</code>s ?</strong></p>\n\n<p>From <a href=\"https://stackoverflow.com/questions/55969723/idiomatic-way-to-count-occurrences-in-a-collection-of-options/55969946#comment98592882_55969946\">@E_net4 's comment</a>: Since <code>Option</code> implements <code>IntoIterator</code> it can behave like an empty iterator or iterator with a single element . </p>\n\n<ul>\n<li>Empty <code>Iterator</code> for <code>None</code></li>\n<li><code>Iterator</code> with single element for <code>Some(...)</code></li>\n</ul>\n"}], "owner": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 911, "favorite_count": 0, "accepted_answer_id": 55969946, "answer_count": 1, "score": 6, "last_activity_date": 1556911537, "creation_date": 1556886064, "question_id": 55969723, "link": "https://stackoverflow.com/questions/55969723/idiomatic-way-to-count-occurrences-in-a-collection-of-options", "title": "Idiomatic way to count occurrences in a collection of Options", "body": "<p>I want to count number of occurrences of a value in a collection of Options.</p>\n\n<pre><code>let v = vec![Some(1), Some(1), Some(3), None];\nv.iter()\n .filter(|Some(x)| x == &amp;1)\n .count();\n</code></pre>\n\n<p>Doing this gives <code>refutable pattern not covered</code> error which makes sense. </p>\n\n<p>I got around this by doing</p>\n\n<pre><code>v.iter()\n .filter(|x| x.is_some() &amp;&amp; x.unwrap() == &amp;1)\n .count()\n</code></pre>\n\n<p>What's the idiomatic way to do this in rust?</p>\n"}, {"tags": ["rust", "rust-crates"], "answers": [{"comments": [{"owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "edited": false, "score": 0, "creation_date": 1556890331, "post_id": 55969214, "comment_id": 98592504, "body": "Thanks for the suggestion! The first one I cannot use because that iterator can be huge and/or infinite. The second one I was trying to avoid because I thought that the compile method would be a slow process, no? Also, the second option works because the cloned <code>FilterAst&lt;&#39;s&gt;</code> and its <code>Filter&lt;&#39;s&gt;</code> only exist in that small scope?"}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "reply_to_user": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "edited": false, "score": 0, "creation_date": 1556894769, "post_id": 55969214, "comment_id": 98595087, "body": "@JaysonReis yes, you&#39;re right about filter. Check my edit"}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 1, "last_activity_date": 1556894083, "last_edit_date": 1556894083, "creation_date": 1556884095, "answer_id": 55969214, "question_id": 55966092, "link": "https://stackoverflow.com/questions/55966092/rust-lifetimes-data-flows-into-other-references/55969214#55969214", "title": "Rust lifetimes, data flows into other references", "body": "<p>I see 2 ways to solve this problem:<br>\n1) extend lifetime of <code>self.name</code>. This can be achieved by collecting <code>expensive_data_iterator</code> into, say, Vec.  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>--- let data = expensive_data_iterator();\n+++ let data: Vec&lt;_&gt; = expensive_data_iterator().collect();\n</code></pre>\n\n<p>2) reduce lifetime of <code>filter</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>--- let filter = scheme.parse(\"...\")?.compile();\n+++ let filter = scheme.parse(\"...\")?;\n\n--- .filter(|my_struct| my_struct.filter_matches(&amp;filter))\n+++ .filter(|my_struct| my_struct.filter_matches(&amp;filter.clone().compile()))\n</code></pre>\n\n<p>I omitted some other minor changes. And yes, <code>filter_matches&lt;'s&gt;(&amp;'s self, ...)</code> is mandatory in either case.  </p>\n\n<p>PS yes, 2nd option works because <code>my_struct</code> outlives <code>filter</code>. Well, if both approaches are somewhat bad, then you can combine them! Process <code>data</code> by chunks, collecting each one into vector.  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const N: usize = 10; // or any other size\nloop {\n    let cur_chunk: Vec&lt;_&gt; = data.by_ref().take(N).collect();\n    if cur_chunk.is_empty() {\n        break;\n    }\n    let cur_filter = filter.clone().compile();\n    // etc\n}\n</code></pre>\n\n<p>it uses only O(N) memory and compiles filter N times less</p>\n"}], "owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 0, "accepted_answer_id": 55969214, "answer_count": 1, "score": 0, "last_activity_date": 1556894083, "creation_date": 1556872483, "last_edit_date": 1556872810, "question_id": 55966092, "link": "https://stackoverflow.com/questions/55966092/rust-lifetimes-data-flows-into-other-references", "title": "Rust lifetimes, data flows into other references", "body": "<p>I wrote the following code that filters a stream of data which worked fine until I changed from parsing simple numbers to also have types that are bound to lifetimes like <code>&amp;str</code> and <code>&amp;[u8]</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use wirefilter::{ExecutionContext, Filter, Scheme};\n\nlazy_static::lazy_static! {\n    static ref SCHEME: Scheme = Scheme! {\n        port: Int,\n        name: Bytes,\n    };\n}\n\n#[derive(Debug)]\nstruct MyStruct {\n    port: i32,\n    name: String,\n}\n\nimpl MyStruct {\n    fn scheme() -&gt; &amp;'static Scheme {\n        &amp;SCHEME\n    }\n\n    fn filter_matches&lt;'s&gt;(&amp;self, filter: &amp;Filter&lt;'s&gt;) -&gt; bool {\n        let mut ctx = ExecutionContext::new(Self::scheme());\n        ctx.set_field_value(\"port\", self.port).unwrap();\n        ctx.set_field_value(\"name\", self.name.as_str()).unwrap();\n\n        filter.execute(&amp;ctx).unwrap()\n    }\n}\n\nfn main() -&gt; Result&lt;(), failure::Error&gt; {\n    let data = expensive_data_iterator();\n    let scheme = MyStruct::scheme();\n    let filter = scheme\n        .parse(\"port in {2 5} &amp;&amp; name matches \\\"http.*\\\"\")?\n        .compile();\n\n    for my_struct in data\n        .filter(|my_struct| my_struct.filter_matches(&amp;filter))\n        .take(2)\n    {\n        println!(\"{:?}\", my_struct);\n    }\n\n    Ok(())\n}\n\nfn expensive_data_iterator() -&gt; impl Iterator&lt;Item = MyStruct&gt; {\n    (0..).map(|port| MyStruct {\n        port,\n        name: format!(\"http {}\", port % 2),\n    })\n}\n\n</code></pre>\n\n<p>If I try to compile it the compiler will fail with this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0623]: lifetime mismatch\n  --&gt; src/main.rs:26:16\n   |\n21 |     fn filter_matches&lt;'s&gt;(&amp;self, filter: &amp;Filter&lt;'s&gt;) -&gt; bool {\n   |                           -----           ----------\n   |                           |\n   |                           these two types are declared with different lifetimes...\n...\n26 |         filter.execute(&amp;ctx).unwrap()\n   |                ^^^^^^^ ...but data from `self` flows into `filter` here\n\nerror: aborting due to previous error\n\nerror: Could not compile `wirefilter_playground`.\n\nTo learn more, run the command again with --verbose.\n\nProcess finished with exit code 101\n</code></pre>\n\n<p>my first thought was that self and filter should have the same lifetime in <code>fn filter_matches&lt;'s&gt;(&amp;self, filter: &amp;Filter&lt;'s&gt;) -&gt; bool</code> but if I change the signature to <code>fn filter_matches&lt;'s&gt;(&amp;'s self, filter: &amp;Filter&lt;'s&gt;) -&gt; bool</code> I will start getting this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed data cannot be stored outside of its closure\n  --&gt; src/main.rs:38:29\n   |\n33 |     let filter = scheme\n   |         ------ ...so that variable is valid at time of its declaration\n...\n38 |         .filter(|my_struct| my_struct.filter_matches(&amp;filter))\n   |                 ----------- ^^^^^^^^^ -------------- cannot infer an appropriate lifetime...\n   |                 |           |\n   |                 |           cannot be stored outside of its closure\n   |                 borrowed data cannot outlive this closure\n\nerror: aborting due to previous error\n\nerror: Could not compile `wirefilter_playground`.\n\nTo learn more, run the command again with --verbose.\n\nProcess finished with exit code 101\n\n</code></pre>\n\n<p>I am failing to understand the reason, <code>Filter&lt;'s&gt;</code> is bound to <code>SCHEME</code> which is lazily generated and is bound to <code>'static</code> which makes sense not allowing filter.execute to take reference to <code>&amp;self.name.as_str()</code> because it would be outlived but, isn't <code>filter.execute(&amp;ctx)</code> which the signature is <code>pub fn execute(&amp;self, ctx: &amp;ExecutionContext&lt;'s&gt;) -&gt; Result&lt;bool, SchemeMismatchError&gt;</code> supposed to drop the references as soon as it finishes as the result of it has not other lifetimes?</p>\n\n<p>In order to try and compile the code above, you can use this <code>Cargo.toml</code>:</p>\n\n<pre><code>[package]\nname = \"wirefilter_playground\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nwirefilter-engine = \"0.6.1\"\nfailure = \"0.1.5\"\nlazy_static = \"1.3.0\"\n\n</code></pre>\n\n<p>PS: That could be solved by compiling the as inside <code>filter_matches</code> method but that would be sort of bad because the user would only get the parse error when trying to filter and it could potentially be slower.</p>\n"}, {"tags": ["for-loop", "rust", "iterator", "integer"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1556868842, "post_id": 55965160, "comment_id": 98581173, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/9271970/how-do-you-make-a-range-in-rust\">How do you make a range in Rust?</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556868868, "post_id": 55965160, "comment_id": 98581187, "body": "Also worth reading: <a href=\"https://stackoverflow.com/q/27893223/\">stackoverflow.com/q/27893223</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1556871308, "post_id": 55965160, "comment_id": 98582305, "body": "Also relevant: <a href=\"https://stackoverflow.com/questions/29932503/what-is-the-idiomatic-way-to-write-a-for-loop-without-using-the-iterator-value\">What is the idiomatic way to write a for loop without using the iterator value?</a>."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556869380, "post_id": 55965220, "comment_id": 98581421, "body": "How does your answer differ from the suggest duplicate? Please avoid adding redundant information. That&#39;s whats the duplicate flag is for. For more information see <a href=\"https://stackoverflow.com/help/duplicates\">help/duplicates</a>."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556869474, "post_id": 55965220, "comment_id": 98581477, "body": "sorry, that i haven&#39;t seen the comment while i was typing this."}], "tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": false, "score": 0, "last_activity_date": 1556868928, "creation_date": 1556868928, "answer_id": 55965220, "question_id": 55965160, "link": "https://stackoverflow.com/questions/55965160/how-to-loop-certain-variable-number-of-times/55965220#55965220", "title": "How to loop certain (variable) number of times?", "body": "<p>Rust for-loops take an iterator (actually anything that can be <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\">converted into an iterator</a>). An sole integer can not be converted into an iterator, but a <a href=\"https://doc.rust-lang.org/std/ops/struct.Range.html\" rel=\"nofollow noreferrer\">range</a> can.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let number = 10; // Any value is ok\n    for num in 0..number {\n        println!(\"success\");\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=029803cf8ac6efaa3113b2f32ae6ef0d\" rel=\"nofollow noreferrer\">https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=029803cf8ac6efaa3113b2f32ae6ef0d</a></p>\n"}, {"tags": [], "owner": {"reputation": 623, "user_id": 10962821, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-2LR2CPhrhu0/AAAAAAAAAAI/AAAAAAAAAAc/OGsF9pFiFOU/photo.jpg?sz=128", "display_name": "sn99", "link": "https://stackoverflow.com/users/10962821/sn99"}, "is_accepted": true, "score": 2, "last_activity_date": 1556871000, "last_edit_date": 1556871000, "creation_date": 1556869830, "answer_id": 55965420, "question_id": 55965160, "link": "https://stackoverflow.com/questions/55965160/how-to-loop-certain-variable-number-of-times/55965420#55965420", "title": "How to loop certain (variable) number of times?", "body": "<p>This is because you are saying to the compiler for a <code>num</code> contained in <code>number</code> where <code>number</code> is not an iterator and neither does implement <a href=\"https://doc.rust-lang.org/stable/std/iter/\" rel=\"nofollow noreferrer\">iter</a>, rather than for a <code>num</code> in the <a href=\"https://doc.rust-lang.org/stable/std/ops/struct.Range.html\" rel=\"nofollow noreferrer\">range</a> <code>0..number</code> which is an iterator.</p>\n\n<p>The documentation describes the <code>for</code> loop as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for loop_variable in iterator {\n    code()\n}\n</code></pre>\n\n<p>Change the code to: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let number = 10; \n    for num in 0..number { // change it to get range\n        println!(\"success\");\n    }\n}\n</code></pre>\n\n<p>You can also change it to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let number = 10; \n    for num in 1..=number { // inclusive range\n        println!(\"success\");\n    }\n}\n</code></pre>\n\n<p>Or to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let number = 10; \n    for _ in 0..number { // where _ is a \"throw away\" variable\n        println!(\"success\");\n    }\n}\n</code></pre>\n\n<p>Also see <a href=\"https://doc.rust-lang.org/stable/std/keyword.for.html\" rel=\"nofollow noreferrer\">for documentation</a></p>\n"}], "owner": {"reputation": 236, "user_id": 9224183, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zn9IF.jpg?s=128&g=1", "display_name": "Khushraj Rathod", "link": "https://stackoverflow.com/users/9224183/khushraj-rathod"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 700, "favorite_count": 0, "accepted_answer_id": 55965420, "answer_count": 2, "score": 2, "last_activity_date": 1556871000, "creation_date": 1556868644, "question_id": 55965160, "link": "https://stackoverflow.com/questions/55965160/how-to-loop-certain-variable-number-of-times", "title": "How to loop certain (variable) number of times?", "body": "<p>This question may seem extremely basic, but I'm having a hard time figuring out how to do this. I have an integer, and I need to use a for loop to loop integer number of times.</p>\n\n<p>First, I tried - </p>\n\n<pre><code>fn main() {\n    let number = 10; // Any value is ok\n    for num in number {\n        println!(\"success\");\n    }\n}\n</code></pre>\n\n<p>this prints the error</p>\n\n<pre><code>error[E0277]: `{integer}` is not an iterator\n --&gt; src/main.rs:3:16\n  |\n3 |     for num in number{\n  |                ^^^^^^ `{integer}` is not an iterator\n  |\n  = help: the trait `std::iter::Iterator` is not implemented for `{integer}`\n  = note: if you want to iterate between `start` until a value `end`, use the exclusive range syntax `start..end` or the inclusive range syntax `start..=end`\n  = note: required by `std::iter::IntoIterator::into_iter`\n</code></pre>\n\n<p>Next, I tried - </p>\n\n<pre><code>fn main() {\n    let number = 10; // Any value is ok\n    for num in number.iter() {\n        println!(\"success\");\n    }\n}\n</code></pre>\n\n<p>the compiler says there is no method iter for integer</p>\n\n<pre><code>error[E0599]: no method named `iter` found for type `{integer}` in the current scope\n --&gt; src/main.rs:3:23\n  |\n3 |     for num in number.iter() {\n  |                       ^^^^\n</code></pre>\n\n<p>How am I supposed to do this?</p>\n"}, {"tags": ["docker", "security", "rust", "system-calls", "busybox"], "comments": [{"owner": {"reputation": 1848, "user_id": 3215929, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nwUj2.png?s=128&g=1", "display_name": "Ente", "link": "https://stackoverflow.com/users/3215929/ente"}, "edited": false, "score": 0, "creation_date": 1556866750, "post_id": 55964625, "comment_id": 98580241, "body": "Maybe worth mentioning: I first thought that  the privilege  downgrade happens on <code>fork(2)</code>, but i implemented <a href=\"https://github.com/Enteee/kamikaze/tree/0f81d2e844223a85cd93960cfbc1e667ea4147ad\" rel=\"nofollow noreferrer\">a version of <code>kamikaze</code> which should not fork</a> and I see the same behavior."}, {"owner": {"reputation": 3295, "user_id": 481528, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2e5b86097f5b890f1f7dc18a07924875?s=128&d=identicon&r=PG", "display_name": "selalerer", "link": "https://stackoverflow.com/users/481528/selalerer"}, "edited": false, "score": 0, "creation_date": 1556868226, "post_id": 55964625, "comment_id": 98580897, "body": "Maybe this part of the man page can explain:  <a href=\"https://linux.die.net/man/2/execve\" rel=\"nofollow noreferrer\">linux.die.net/man/2/execve</a>  If the set-user-ID bit is set on the program file pointed to by filename, and the underlying file system is not mounted nosuid (the MS_NOSUID flag for mount(2)), and the calling process is not being ptraced, then the effective user ID of the calling process is changed to that of the owner of the program file. Similarly, when the set-group-ID bit of the program file is set the effective group ID of the calling process is set to the group of the program file."}, {"owner": {"reputation": 1848, "user_id": 3215929, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nwUj2.png?s=128&g=1", "display_name": "Ente", "link": "https://stackoverflow.com/users/3215929/ente"}, "reply_to_user": {"reputation": 3295, "user_id": 481528, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2e5b86097f5b890f1f7dc18a07924875?s=128&d=identicon&r=PG", "display_name": "selalerer", "link": "https://stackoverflow.com/users/481528/selalerer"}, "edited": false, "score": 0, "creation_date": 1556874134, "post_id": 55964625, "comment_id": 98583793, "body": "Thank you. From what I understand, that section of the man page explains how setuid works. Which is exactly what I see outside the container, but not inside. Or am I missing something?"}, {"owner": {"reputation": 1848, "user_id": 3215929, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nwUj2.png?s=128&g=1", "display_name": "Ente", "link": "https://stackoverflow.com/users/3215929/ente"}, "reply_to_user": {"reputation": 3295, "user_id": 481528, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2e5b86097f5b890f1f7dc18a07924875?s=128&d=identicon&r=PG", "display_name": "selalerer", "link": "https://stackoverflow.com/users/481528/selalerer"}, "edited": false, "score": 0, "creation_date": 1556874283, "post_id": 55964625, "comment_id": 98583859, "body": "Also maybe worth noticing: docker mounts the root file system <b>without</b> the nosuid flag: <code>$ docker run -ti  alpine sh -c &#39;mount | grep -i &quot;on &#47; &quot;&#39;</code> yields <code>overlay on &#47; type overlay (rw,relatime,lowerdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;GXDHPBDM7TS&zwnj;&#8203;YZS5OP43RJVSOWM:&#47;var&zwnj;&#8203;&#47;lib&#47;docker&#47;overlay2&zwnj;&#8203;&#47;l&#47;C57DZORPIGMSUEOFG&zwnj;&#8203;6YYSBNATK,upperdir=&#47;&zwnj;&#8203;var&#47;lib&#47;docker&#47;overl&zwnj;&#8203;ay2&#47;c9f27caebcbff131&zwnj;&#8203;d58137067feb75b941b5&zwnj;&#8203;d7ad4d5677a8140334dc&zwnj;&#8203;e75ad576&#47;diff,workdi&zwnj;&#8203;r=&#47;var&#47;lib&#47;docker&#47;ov&zwnj;&#8203;erlay2&#47;c9f27caebcbff&zwnj;&#8203;131d58137067feb75b94&zwnj;&#8203;1b5d7ad4d5677a814033&zwnj;&#8203;4dce75ad576&#47;work)</code>"}, {"owner": {"reputation": 3295, "user_id": 481528, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2e5b86097f5b890f1f7dc18a07924875?s=128&d=identicon&r=PG", "display_name": "selalerer", "link": "https://stackoverflow.com/users/481528/selalerer"}, "edited": false, "score": 0, "creation_date": 1556875353, "post_id": 55964625, "comment_id": 98584452, "body": "There are 3 conditions specified here for setuid to work. You should check if these are different between the regular environment and the container. Specifically what seems most likely is the mount parameters."}, {"owner": {"reputation": 1848, "user_id": 3215929, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nwUj2.png?s=128&g=1", "display_name": "Ente", "link": "https://stackoverflow.com/users/3215929/ente"}, "reply_to_user": {"reputation": 3295, "user_id": 481528, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2e5b86097f5b890f1f7dc18a07924875?s=128&d=identicon&r=PG", "display_name": "selalerer", "link": "https://stackoverflow.com/users/481528/selalerer"}, "edited": false, "score": 0, "creation_date": 1556886395, "post_id": 55964625, "comment_id": 98590181, "body": "From what I can see, 1. and 2. are met. 1. setuid set = yes, see installer script 2. mount without nosuid = yes, see my last comment. But I am not quite sure if 3. could be triggering the issue. How are processes started when run inside a container?"}, {"owner": {"reputation": 3295, "user_id": 481528, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2e5b86097f5b890f1f7dc18a07924875?s=128&d=identicon&r=PG", "display_name": "selalerer", "link": "https://stackoverflow.com/users/481528/selalerer"}, "edited": false, "score": 0, "creation_date": 1556888707, "post_id": 55964625, "comment_id": 98591493, "body": "One thing to check is the status code after running the commands $?. Maybe chmod fails or something else"}, {"owner": {"reputation": 1848, "user_id": 3215929, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nwUj2.png?s=128&g=1", "display_name": "Ente", "link": "https://stackoverflow.com/users/3215929/ente"}, "reply_to_user": {"reputation": 3295, "user_id": 481528, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2e5b86097f5b890f1f7dc18a07924875?s=128&d=identicon&r=PG", "display_name": "selalerer", "link": "https://stackoverflow.com/users/481528/selalerer"}, "edited": false, "score": 0, "creation_date": 1556890118, "post_id": 55964625, "comment_id": 98592349, "body": "I don&#39;t think that there is an error in <code>install.sh</code>. Also:  <code>$ docker run kamikaze ls -l kamikaze</code> yields <code>-rwsr-xr-x    1 root     root        361624 May  1 14:28 kamikaze</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1848, "user_id": 3215929, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nwUj2.png?s=128&g=1", "display_name": "Ente", "link": "https://stackoverflow.com/users/3215929/ente"}, "is_accepted": true, "score": 1, "last_activity_date": 1557064819, "last_edit_date": 1557064819, "creation_date": 1557063764, "answer_id": 55992569, "question_id": 55964625, "link": "https://stackoverflow.com/questions/55964625/why-is-setuid-dropped-on-execve-in-an-alpine-container/55992569#55992569", "title": "Why is setuid dropped on execve in an alpine container?", "body": "<p>BusyBox, which implements the <code>ps</code> command in alpine, drops privileges acquired by setuid by setting the effective user id to the real user id.</p>\n\n<p><a href=\"https://github.com/mirror/busybox/blob/b097a84d62dcfcf201a695b54bcfafae70cac8a6/libbb/appletlib.c#L677\" rel=\"nofollow noreferrer\">libbb/appletlib.c [b097a84]</a>:</p>\n\n<pre><code>    } else if (APPLET_SUID(applet_no) == BB_SUID_DROP) {\n        /*\n         * Drop all privileges.\n         *\n         * Don't check for errors: in normal use, they are impossible,\n         * and in special cases, exiting is harmful. Example:\n         * 'unshare --user' when user's shell is also from busybox.\n         *\n         * 'unshare --user' creates a new user namespace without any\n         * uid mappings. Thus, busybox binary is setuid nobody:nogroup\n         * within the namespace, as that is the only user. However,\n         * since no uids are mapped, calls to setgid/setuid\n         * fail (even though they would do nothing).\n         */\n        setgid(rgid);\n        setuid(ruid);\n    }\n</code></pre>\n\n<p><a href=\"https://github.com/mirror/busybox/blob/b097a84d62dcfcf201a695b54bcfafae70cac8a6/procps/ps.c#L53\" rel=\"nofollow noreferrer\">procps/ps.c [b097a84]</a>: Defines <code>BB_SUID_DROP</code>.</p>\n\n<pre><code>//                 APPLET_NOEXEC:name    main location    suid_type     help\n//applet:IF_PS(    APPLET_NOEXEC(ps,     ps,  BB_DIR_BIN, BB_SUID_DROP, ps))\n//applet:IF_MINIPS(APPLET_NOEXEC(minips, ps,  BB_DIR_BIN, BB_SUID_DROP, ps))\n</code></pre>\n\n<p>The fix for this was simple. <code>kamikaze</code> just has to set the real user id to the effective user id before <code>execve(2)</code>.</p>\n\n<p><a href=\"https://github.com/Enteee/kamikaze/blob/f4c5501ec12746d482b37db453691a1be1871e78/src/main.rs\" rel=\"nofollow noreferrer\">src/main.rs [f4c5501]</a>:</p>\n\n<pre><code>extern crate exec;\nextern crate users;\n\nuse std::env;\n\nuse std::fs;\n\nuse std::process::exit;\n\nuse users::{get_effective_uid, get_effective_gid};\nuse users::switch::{set_current_uid, set_current_gid};\n\nfn usage() {\n    println!(\"usage: kamikaze &lt;command&gt; &lt;arguments&gt;\");\n}\n\nfn main() {\n\n    // Kill myself\n    fs::remove_file(\n        env::current_exe().expect(\"failed to get path to executable\")\n    ).expect(\"kamikaze failed\");\n\n    set_current_uid(\n        get_effective_uid()\n    ).expect(\"failed setting current uid\");\n\n    set_current_gid(\n        get_effective_gid()\n    ).expect(\"failed setting current gid\");\n\n    let mut args: Vec&lt;String&gt; = env::args().collect();\n    match args.len() {\n        0 =&gt; usage(),\n        1 =&gt; usage(),\n        _ =&gt; {\n            args.remove(0);\n            let err = exec::Command::new(args.remove(0))\n                .args(&amp;args)\n                .exec();\n            println!(\"Error: {}\", err);\n        },\n    }\n    // Should never get here\n    exit(1);\n}\n</code></pre>\n\n<p>with the newly released <a href=\"https://github.com/Enteee/kamikaze/releases/tag/1.0.0\" rel=\"nofollow noreferrer\"><code>kamikaze [1.0.0]</code></a> we now get:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ docker build -t kamikaze - &lt;&lt;EOF\n  FROM alpine\n  RUN set -exuo pipefail \\\n    &amp;&amp; apk add curl \\\n    &amp;&amp; curl https://raw.githubusercontent.com/Enteee/kamikaze/master/install.sh | sh\n\n  USER nobody\n  CMD [\"/kamikaze\", \"ps\"]\nEOF\n$ docker run kamikaze\nPID   USER     TIME  COMMAND\n    1 root      0:00 ps\n</code></pre>\n"}], "owner": {"reputation": 1848, "user_id": 3215929, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nwUj2.png?s=128&g=1", "display_name": "Ente", "link": "https://stackoverflow.com/users/3215929/ente"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 936, "favorite_count": 1, "accepted_answer_id": 55992569, "answer_count": 1, "score": 2, "last_activity_date": 1557064819, "creation_date": 1556866223, "last_edit_date": 1557064641, "question_id": 55964625, "link": "https://stackoverflow.com/questions/55964625/why-is-setuid-dropped-on-execve-in-an-alpine-container", "title": "Why is setuid dropped on execve in an alpine container?", "body": "<p>In an alpine container only: When running a setuid binary which starts an other executable (<code>execve(2)</code>), <strike>the kernel</strike><sup>[1]</sup>  BusyBox seems to drop privileges acquired by setuid. I think this might be by design because of security implications.</p>\n\n<p><em>Question</em>: I would like to understand why this is happening and what is responsible for this?</p>\n\n<p>I am working on a one-shot setuid runner called <a href=\"https://github.com/Enteee/kamikaze\" rel=\"nofollow noreferrer\"><code>kamikaze</code></a> written in <code>rust</code>. <code>kamikaze</code> is a very simple binary that <a href=\"https://linux.die.net/man/2/unlink\" rel=\"nofollow noreferrer\"><code>unlink(2)</code></a> itself and then starts a new process using <a href=\"http://man7.org/linux/man-pages/man2/fork.2.html\" rel=\"nofollow noreferrer\"><code>fork(2)</code></a> and <a href=\"http://man7.org/linux/man-pages/man2/execve.2.html\" rel=\"nofollow noreferrer\"><code>execve(2)</code></a>.</p>\n\n<p>The main components are:</p>\n\n<p><a href=\"https://github.com/Enteee/kamikaze/tree/a47dedc1e7cff10c188383914d707ab38b7a6bdf/src/main.rs\" rel=\"nofollow noreferrer\"><code>src/main.rs</code> [a47dedc]</a>: Implements the <code>unlink(2)</code> and process spawning.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::env;\n\nuse std::fs;\n\nuse std::process::{Command, exit};\n\nfn usage() {\n    println!(\"usage: kamikaze &lt;command&gt; &lt;arguments&gt;\");\n    exit(1);\n}\n\nfn main() {\n\n    // Kill myself\n    fs::remove_file(\n        env::current_exe().expect(\"failed to get path to executable\")\n    ).expect(\"kamikaze failed\");\n\n    let mut args: Vec&lt;String&gt; = env::args().collect();\n    match args.len() {\n        0 =&gt; usage(),\n        1 =&gt; usage(),\n        _ =&gt; {\n            args.remove(0);\n            let mut child = Command::new(args.remove(0))\n                .args(&amp;args)\n                .spawn()\n                .expect(\"failed to execute process\");\n            exit(\n                child\n                    .wait()\n                    .expect(\"wait failed\")\n                        .code().unwrap()\n            );\n        },\n    }\n\n}\n</code></pre>\n\n<p><a href=\"https://github.com/Enteee/kamikaze/tree/a47dedc1e7cff10c188383914d707ab38b7a6bdf/install.sh\" rel=\"nofollow noreferrer\"><code>install.sh</code> [a47dedc]</a>: A simple installer which downloads <code>kamikaze</code>, changes ownership to <code>root</code> and sets the setuid bit. </p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>#!/usr/bin/env sh\nset -euo pipefail\nREPO=\"Enteee/kamikaze\"\nINSTALL=\"install -m 755 -o root kamikaze-download kamikaze &amp;&amp; chmod u+s kamikaze\"\n\ncurl -s \"https://api.github.com/repos/${REPO}/releases/latest\" \\\n   | grep \"browser_download_url\" \\\n   | cut -d '\"' -f 4 \\\n   | xargs -n1 curl -s -L --output kamikaze-download\n\ntrap 'rm kamikaze-download' EXIT\n\nif [[ $(id -u) -ne 0 ]]; then\n  sudo sh -c \"${INSTALL}\"\nelse\n  eval \"${INSTALL}\"\nfi\n</code></pre>\n\n<p>When I run <code>kamikaze</code> outside a container<sup>[2]</sup>: </p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ curl https://raw.githubusercontent.com/Enteee/kamikaze/master/install.sh | sh\n$ ./kamikaze ps -f\nUID        PID  PPID  C STIME TTY          TIME CMD\nroot      3223  9587  0 08:17 pts/0    00:00:00 ./kamikaze ps -f\nroot      3224  3223  0 08:17 pts/0    00:00:00 ps -f\n</code></pre>\n\n<p>I get the expected behavior. The child process (<code>PID=3224</code>) runs as <code>root</code>. On the other hand, inside a container<sup>[2]</sup>:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ docker build -t kamikaze - &lt;&lt;EOF\n  FROM alpine\n  RUN set -exuo pipefail \\\n    &amp;&amp; apk add curl \\\n    &amp;&amp; curl https://raw.githubusercontent.com/Enteee/kamikaze/master/install.sh | sh\n\n  USER nobody\n  CMD [\"/kamikaze\", \"ps\"]\nEOF\n$ docker run kamikaze\nPID   USER     TIME  COMMAND\n    1 root      0:00 /kamikaze ps\n    6 nobody    0:00 ps\n</code></pre>\n\n<p><code>ps</code> runs as <code>nobody</code>.</p>\n\n<hr>\n\n<p><sup>[1]</sup> I first thought that this was because of some security mechanism implemented by docker and the Linux kernel. But after a deep dive into <a href=\"https://docs.docker.com/engine/security/non-events/\" rel=\"nofollow noreferrer\">Docker Security</a>, <a href=\"https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html\" rel=\"nofollow noreferrer\"><code>NO_NEW_PRIVILEGES</code></a> and <a href=\"http://man7.org/linux/man-pages/man2/seccomp.2.html\" rel=\"nofollow noreferrer\"><code>seccomp(2)</code></a> I finally realized that BusyBox is simply dropping privileges.</p>\n\n<p><sup>[2]</sup> <code>kamikaze [1.0.0]</code> fixed and changed this behavior. Therefore this example does no longer work. For reproducing the example use the <a href=\"https://github.com/Enteee/kamikaze/releases/tag/0.0.0\" rel=\"nofollow noreferrer\"><code>kamikaze</code> [0.0.0]</a> release.</p>\n"}, {"tags": ["rust", "rustup"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1556864579, "post_id": 55961953, "comment_id": 98579349, "body": "Check with <code>getfacl</code> on the file and all parent folders. Check if <code>xdg-open file:&#47;&#47;&#47;home&#47;ken&#47;.rustup&#47;toolchains&#47;stable-x86_64-unknown-li&zwnj;&#8203;nux-gnu&#47;share&#47;doc&#47;ru&zwnj;&#8203;st&#47;html&#47;index.html</code> works."}, {"owner": {"reputation": 413, "user_id": 2837229, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/86Mni.jpg?s=128&g=1", "display_name": "kfrncs", "link": "https://stackoverflow.com/users/2837229/kfrncs"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556903043, "post_id": 55961953, "comment_id": 98599347, "body": "xdg_open results in the same access denied in browser. getfacl output indicates that the folders are owned by my user, and my username is under &quot;group&quot; as well as owner."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556994130, "post_id": 55961953, "comment_id": 98620274, "body": "Can you try <code>xdg-open</code> with some other HTML file on your system? And can you try <code>xdg-mime query default text&#47;html</code>?"}, {"owner": {"reputation": 413, "user_id": 2837229, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/86Mni.jpg?s=128&g=1", "display_name": "kfrncs", "link": "https://stackoverflow.com/users/2837229/kfrncs"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1557084382, "post_id": 55961953, "comment_id": 98638417, "body": "default is firefox, xdg-open works fine with other HTML files"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1557126659, "post_id": 55961953, "comment_id": 98647187, "body": "I&#39;m a bit lost there. Last idea, can you try <code>xdg-mime query filetype index.html</code> and <code>xdg-mime query default $(xdg-mime query filetype index.html)</code>?"}, {"owner": {"reputation": 413, "user_id": 2837229, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/86Mni.jpg?s=128&g=1", "display_name": "kfrncs", "link": "https://stackoverflow.com/users/2837229/kfrncs"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1557160674, "post_id": 55961953, "comment_id": 98663679, "body": "first returns: <code>text&#47;html</code>, the second: <code>firefox_firefox.desktop</code>. again these are not on files in the Rust book dir. I had installed Rust via apt and then uninstalled, then reinstalled with the .sh script on the website. Baffling problem"}], "answers": [{"tags": [], "owner": {"reputation": 1, "user_id": 12990587, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/7ddd5588a4bc3b38cb0f8993bdc01311?s=128&d=identicon&r=PG", "display_name": "Hsequeda", "link": "https://stackoverflow.com/users/12990587/hsequeda"}, "is_accepted": false, "score": 0, "last_activity_date": 1583109654, "creation_date": 1583109654, "answer_id": 60481171, "question_id": 55961953, "link": "https://stackoverflow.com/questions/55961953/access-denied-when-i-run-rustup-doc/60481171#60481171", "title": "Access Denied when I run &#39;rustup doc&#39;", "body": "<p>What browser do you use?. I use Brave and the same error occured to me. I solved it changing the default browser to Chromium. After that, all work perfectly.</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 3278107, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F09Jl.jpg?s=128&g=1", "display_name": "Rachit Ranjan", "link": "https://stackoverflow.com/users/3278107/rachit-ranjan"}, "is_accepted": false, "score": 0, "last_activity_date": 1617407586, "creation_date": 1617407586, "answer_id": 66926507, "question_id": 55961953, "link": "https://stackoverflow.com/questions/55961953/access-denied-when-i-run-rustup-doc/66926507#66926507", "title": "Access Denied when I run &#39;rustup doc&#39;", "body": "<p>Try changing your browser.\nIt didn't work for me with Chromium but Firefox works like a charm</p>\n"}], "owner": {"reputation": 413, "user_id": 2837229, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/86Mni.jpg?s=128&g=1", "display_name": "kfrncs", "link": "https://stackoverflow.com/users/2837229/kfrncs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 238, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1617407586, "creation_date": 1556844500, "last_edit_date": 1556848577, "question_id": 55961953, "link": "https://stackoverflow.com/questions/55961953/access-denied-when-i-run-rustup-doc", "title": "Access Denied when I run &#39;rustup doc&#39;", "body": "<p>When I run <code>rustup doc --book</code> I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Access to the file was denied.\n\nThe file at file:///home/ken/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/share/doc/rust/html/index.html is not readable. It may have been removed, moved or file permissions may be preventing access.\n</code></pre>\n\n<p>I've reinstalled, I've tried using <code>chmod -R 777</code> on the directory. What else is there to try? The files are there. </p>\n"}, {"tags": ["rust", "rayon"], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556865197, "post_id": 55960248, "comment_id": 98579614, "body": "Or even use <code>.next()</code> instead of <code>.find_any (|_| true)</code>"}, {"owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556895219, "post_id": 55960248, "comment_id": 98595364, "body": "@Jmb Unfortunately there was <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=66f65832e495e9bf2b4e4ee0efaa81ff\" rel=\"nofollow noreferrer\"><code>no method named `next` found for type `rayon::iter::flat_map::FlatMap`</code></a> (or <a href=\"https://docs.rs/rayon/1.0.3/rayon/iter/trait.ParallelIterator.html\" rel=\"nofollow noreferrer\">in <code>ParallelIterator</code></a>)."}], "tags": [], "owner": {"reputation": 1, "user_id": 1114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/FFE8V.gif?s=128&g=1", "display_name": "Jeremy", "link": "https://stackoverflow.com/users/1114/jeremy"}, "is_accepted": true, "score": 1, "last_activity_date": 1556895698, "last_edit_date": 1556895698, "creation_date": 1556831223, "answer_id": 55960248, "question_id": 55959715, "link": "https://stackoverflow.com/questions/55959715/rayon-find-any-and-return-the-found-items-value/55960248#55960248", "title": "Rayon find_any, and return the found item&#39;s value", "body": "<p><a href=\"https://docs.rs/rayon/1.0.3/rayon/iter/trait.ParallelIterator.html#method.flat_map\" rel=\"nofollow noreferrer\">Rayon's <code>.flat_map(\u2026)</code> method</a> will apply <code>f</code> to each element, treat each return value as an iterator, and flatten all of those results into a single new iterator. <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.iter\" rel=\"nofollow noreferrer\"><code>Result</code>s can be used as iterables of one (if <code>Ok</code>) or zero (if <code>Err</code>) elements</a>, so this has the effect of unwrapping <code>Ok</code> results and discarding <code>Err</code>s. You can then apply <code>.find_any(|_| true)</code> to get the first available resulting value without requiring a second call to <code>f(\u2026)</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rayon::prelude::*;\n\nfn my_function(v: Vec&lt;u8&gt;) -&gt; Option&lt;bool&gt; {\n    v.par_iter().flat_map(|x| f(*x)).find_any(|_| true)\n}\n\nfn f(a: u8) -&gt; Result&lt;bool, SomeError&gt; {\n    if a == 42 {\n        Ok(true)\n    } else {\n        Err(SomeError {})\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", my_function(vec![0, 1, 2, 42, 3, 42, 0]));\n}\n\n#[derive(Debug)]\nstruct SomeError {}\nimpl std::error::Error for SomeError {}\nimpl std::fmt::Display for SomeError {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {\n        write!(f, \"{:?}\", self)\n    }\n}\n</code></pre>\n\n<h3><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5c80d2b79834de148d66a93a53b57063\" rel=\"nofollow noreferrer\">Playground Output</a></h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>Some(true)\n</code></pre>\n"}], "owner": {"reputation": 6209, "user_id": 1935318, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/ftlsb.jpg?s=128&g=1", "display_name": "amaurym", "link": "https://stackoverflow.com/users/1935318/amaurym"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 1, "accepted_answer_id": 55960248, "answer_count": 1, "score": 1, "last_activity_date": 1556895698, "creation_date": 1556828494, "question_id": 55959715, "link": "https://stackoverflow.com/questions/55959715/rayon-find-any-and-return-the-found-items-value", "title": "Rayon find_any, and return the found item&#39;s value", "body": "<p>Let's say I have a function <code>f</code> with signature</p>\n\n<pre><code>fn f(a: u8) -&gt; Result&lt;bool, SomeError&gt; {}\n</code></pre>\n\n<p>Now I have a <code>Vec&lt;u8&gt;</code> and I wish to find if there's any element in this Vec whose value by <code>f</code> is <code>Ok(b)</code>, and, in that case, return the value <code>b</code> (and stop calculating <code>f</code> for the rest of the Vec). I wish to have a function with signature</p>\n\n<pre><code>fn my_function(v: Vec&lt;u8&gt;) -&gt; Option&lt;bool&gt; {}\n</code></pre>\n\n<p>Here's my first implementation:</p>\n\n<pre><code>fn my_function(v: Vec&lt;u8&gt;) -&gt; Option&lt;bool&gt; {\n  let found = v.par_iter().find_any(|a| f(a).is_ok());\n\n  match found {\n    Some(a) =&gt; Some(f(a).unwrap()),\n    None =&gt; None\n  }\n}\n</code></pre>\n\n<p>But I'm doing one useless <code>f</code> calculation at the end. How could I refactor the code to avoid this additional <code>f</code> calling?</p>\n\n<p>Rayon's <code>map</code>, <code>filter</code>, <code>reduce</code> won't work because they go through the whole Vec, which I want to avoid.</p>\n"}, {"tags": ["casting", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556906009, "post_id": 55964226, "comment_id": 98600497, "body": "Wow. Didn&#39;t know that a trait declaration and definition can differ in their &quot;signature&quot;. Sometimes I have this feeling that i&#39;m looking at very obscure corners of Rust."}, {"owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556910655, "post_id": 55964226, "comment_id": 98602264, "body": "I think there is a downside with this solution. Since I can&#39;t create a TraitAB trait object, this means <code>MyType</code> needs to be known at compile time. So if I have multiple types, like <code>MyType1</code>, <code>MyType2</code>, etc, declaring a variable like this won&#39;t work: <code>let ab: Rc&lt;RefCell&lt;TraitAB&gt;&gt;;</code> Do you think there could be a work around this too?"}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "reply_to_user": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556931387, "post_id": 55964226, "comment_id": 98607393, "body": "@dospro To be able to make objects of a trait, it must have at least one non-static method (i.e. method with a receiver). Simply adding a method that takes <code>self</code>, <code>&amp;self</code> or <code>&amp;mut self</code> to the trait will let you achieve this."}, {"owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556942170, "post_id": 55964226, "comment_id": 98608539, "body": "I tried adding a dummy method that receives <code>&amp;self</code> but doesn&#39;t make any difference. I tried binding Self to sized: <code>fn as_a(this: Rc&lt;RefCell&lt;Self&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitA&gt;&gt;  where Self: Sized;</code> but again, I get: <code>the size for values of type </code>dyn TraitAB` cannot be known at compilation time` I&#39;m out of ideas."}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "reply_to_user": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556948186, "post_id": 55964226, "comment_id": 98609307, "body": "Apologies, my previous comment was inaccurate. <i>All</i> methods, not just one or more, that a trait object can be used must be non-static. If you must use a <code>TraitAB</code> trait object, it&#39;d be better to abstract away the usage of <code>RefCell</code> by implementing <code>TraitA</code>, <code>TraitB</code> (<code>T: TraitX + ?Sized</code>) and <code>TraitAB</code> (<code>T: TraitA + TraitB</code>) for <code>RefCell&lt;T&gt;</code>, where a method impl for <code>RefCell&lt;T&gt;</code> calls the corresponding method on the  <code>RefCell</code> borrowed value. The trait objects will then be wrapped in just an <code>Rc&lt;&gt;</code> and not a <code>Rc&lt;RefCell&lt;&gt;&gt;</code>. <a href=\"https://play.rust-lang.org/?gist=29bece160f90087629b0fc32a8ed0222\" rel=\"nofollow noreferrer\">play.rust-lang.org/?gist=29bece160f90087629b0fc32a8ed0222</a>"}, {"owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1557114420, "post_id": 55964226, "comment_id": 98643874, "body": "can you please expand a bit on that last comment? What I understand is that I should make <code>T</code> be <code>RefCell&lt;TheType&gt;</code> instead of just the type and let rust now it&#39;s a dynamically sized type. I&#39;ve been playing with the code, but I can&#39;t get it to work yet."}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "reply_to_user": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1557116889, "post_id": 55964226, "comment_id": 98644317, "body": "I sent the wrong playground link in the last comment, this is the one I wanted to send: <a href=\"https://play.rust-lang.org/?gist=b2d98735a7602ec5fcce3afbf7d3cbc3\" rel=\"nofollow noreferrer\">play.rust-lang.org/?gist=b2d98735a7602ec5fcce3afbf7d3cbc3</a>. You&#39;ve understood correctly; implement <code>TraitA</code> and <code>TraitB</code> on <code>RefCell&lt;T&gt;</code> (<code>T: ?Sized</code> to allow <code>T</code> to be a trait) so that you can do <code>let x: &amp;TraitA = &amp;RefCell::new(MyType)</code> (i.e. cast <code>RefCell&lt;MyType&gt;</code> to <code>TraitA</code>). This allows you to cast a <code>Rc&lt;RefCell&lt;T&gt;&gt;</code> to <code>Rc&lt;dyn TraitA&gt;</code> where <code>T: TraitA</code>. The only problem with this approach is that the <code>Rc</code> cast hides the fact that a <code>RefCell</code> is being used."}], "tags": [], "owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "is_accepted": true, "score": 2, "last_activity_date": 1556865259, "last_edit_date": 1556865259, "creation_date": 1556864270, "answer_id": 55964226, "question_id": 55959384, "link": "https://stackoverflow.com/questions/55959384/clone-an-rcrefcellmytype-trait-object-and-cast-it/55964226#55964226", "title": "Clone an Rc&lt;RefCell&lt;MyType&gt; trait object and cast it", "body": "<p>You can work around this issue by <em>not</em> using a receiver in <code>TraitAB</code>'s casting methods (i.e. by declaring them as <em>associated functions</em>):</p>\n\n<pre><code>trait TraitAB : TraitA + TraitB {\n    fn as_a(it: Rc&lt;RefCell&lt;Self&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitA&gt;&gt;;\n    fn as_b(it: Rc&lt;RefCell&lt;Self&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitB&gt;&gt;;\n}\n</code></pre>\n\n<p>The trait can then be implemented as</p>\n\n<pre><code>impl TraitAB for MyType {\n    fn as_a(it: Rc&lt;RefCell&lt;MyType&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitA&gt;&gt; {it}\n    fn as_b(it: Rc&lt;RefCell&lt;MyType&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitB&gt;&gt; {it}\n}\n</code></pre>\n\n<p>These functions can then be called using the fully qualified syntax.</p>\n\n<pre><code>a = TraitAB::as_a(ab.clone());\nb = TraitAB::as_b(ab.clone());\n</code></pre>\n\n<p>The <code>TraitAB</code> implementation for all types will be the same. To make this implementation available for all types implementing <code>TraitA</code> and <code>TraitB</code>, you can use a generic <code>impl</code>:</p>\n\n<pre><code>impl&lt;T: TraitA + TraitB + 'static&gt; TraitAB for T {\n    fn as_a(it: Rc&lt;RefCell&lt;T&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitA&gt;&gt; {it}\n    fn as_b(it: Rc&lt;RefCell&lt;T&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitB&gt;&gt; {it}\n}\n</code></pre>\n\n<p>Note that <code>T: 'static</code> because the trait objects in the function return types have an implicit <code>'static</code> lifetime bound.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=29bece160f90087629b0fc32a8ed0222\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 756, "favorite_count": 2, "accepted_answer_id": 55964226, "answer_count": 1, "score": 1, "last_activity_date": 1556865259, "creation_date": 1556826994, "last_edit_date": 1556827435, "question_id": 55959384, "link": "https://stackoverflow.com/questions/55959384/clone-an-rcrefcellmytype-trait-object-and-cast-it", "title": "Clone an Rc&lt;RefCell&lt;MyType&gt; trait object and cast it", "body": "<p>This question is related to <a href=\"https://stackoverflow.com/questions/55927766/rust-clone-and-cast-rc-pointer\">Rust: Clone and Cast Rc pointer</a></p>\n\n<p>Let's say I have this piece of code which works fine:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::rc::Rc;\n\ntrait TraitAB : TraitA + TraitB {\n    fn as_a(self: Rc&lt;Self&gt;) -&gt; Rc&lt;dyn TraitA&gt;;\n    fn as_b(self: Rc&lt;Self&gt;) -&gt; Rc&lt;dyn TraitB&gt;;\n}\n\ntrait TraitA {}\ntrait TraitB {}\n\nstruct MyType {}\n\nimpl TraitAB for MyType {\n    fn as_a(self: Rc&lt;Self&gt;) -&gt; Rc&lt;dyn TraitA&gt; {self}\n    fn as_b(self: Rc&lt;Self&gt;) -&gt; Rc&lt;dyn TraitB&gt; {self}\n}\n\nimpl TraitA for MyType {}\nimpl TraitB for MyType {}\n\nfn main() {\n    let a: Rc&lt;dyn TraitA&gt;;\n    let b: Rc&lt;dyn TraitB&gt;;\n    {\n        let mut ab: Rc&lt;dyn TraitAB&gt; = Rc::new(MyType{});\n        a = ab.clone().as_a();\n        b = ab.clone().as_b();\n    }\n    // Use a and b.\n}\n</code></pre>\n\n<p>Explaining the code a bit: </p>\n\n<ul>\n<li>I have type called <code>MyType</code> which implements <code>TraitA</code> and <code>TraitB</code>.</li>\n<li>The goal is to have a trait object <code>TraitA</code> be able to get casted to <code>TraitB</code> and viceversa.</li>\n<li>So I uses a supertrait that holds the methods to do the conversions.</li>\n<li>This works great for <code>std::Rc</code> smart pointers.</li>\n</ul>\n\n<p>So far so good. But now I need a mutable reference of both <code>a</code> and <code>b</code>, but since <code>a</code> and <code>b</code>are actually the same type instance, Rust won't let me have 2 mutable references of the same thing.</p>\n\n<p>So, the common pattern for this kind of problems is <code>std::cell::RefCell</code>.</p>\n\n<p>Note: I believe this pattern is correct in this particular case because it's a common <strong>interior mutability</strong> problem. I'm not willing to actually change the reference, but the internal state of the type only.</p>\n\n<p>So following that idea I changed the following lines:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait TraitAB : TraitA + TraitB {\n    fn as_a(self: Rc&lt;RefCell&lt;Self&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitA&gt;&gt;;\n    fn as_b(self: Rc&lt;RefCell&lt;Self&gt;&gt;) -&gt; Rc&lt;RefCell&lt;dyn TraitB&gt;&gt;;\n}\n//...\nlet mut ab: Rc&lt;RefCell&lt;dyn TraitAB&gt;&gt; = Rc::new(RefCell::new(MyType{}));\n</code></pre>\n\n<p>But this changes won't compile. After some reading, I found that self can only be:</p>\n\n<ul>\n<li><code>self: Self // self</code></li>\n<li><code>self: &amp;Self // &amp;self</code></li>\n<li><code>self: &amp;mut Self // &amp;mut self</code></li>\n<li><code>self: Box&lt;Self&gt; // No short form</code></li>\n<li><code>self: Rc&lt;Self&gt; // No short form / Recently supported</code></li>\n</ul>\n\n<p>So this means I can't use </p>\n\n<p><code>self: Rc&lt;RefCell&lt;Self&gt;&gt;</code></p>\n\n<p>for the self param.</p>\n\n<p>So, the main question is: Is there a way to cast an <code>Rc&lt;RefCell&lt;TraitA&gt;&gt;</code> to an <code>Rc&lt;RefCell&lt;TraitB&gt;</code> ?\nThanks</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 11633, "user_id": 34806, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/d07730fff34f9fff3cbf1c72d5dfe74a?s=128&d=identicon&r=PG", "display_name": "Dexygen", "link": "https://stackoverflow.com/users/34806/dexygen"}, "edited": false, "score": 6, "creation_date": 1556824920, "post_id": 55958941, "comment_id": 98569597, "body": "You mention that you tried.  Please share that attempt."}], "answers": [{"comments": [{"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "edited": false, "score": 1, "creation_date": 1556837230, "post_id": 55959254, "comment_id": 98573827, "body": "I don&#39;t even think you need <code>Arc</code> in your example; just using <code>Mutex</code> alone should suffice."}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 1, "creation_date": 1556866226, "post_id": 55959254, "comment_id": 98580037, "body": "rust docs say this is actually unspecified behavior: &quot;The exact behavior on locking a mutex in the thread which already holds the lock is left unspecified. However, this function will not return on the second call (it might panic or deadlock, for example)&quot;"}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 5, "last_activity_date": 1556826422, "creation_date": 1556826422, "answer_id": 55959254, "question_id": 55958941, "link": "https://stackoverflow.com/questions/55958941/how-can-i-create-a-deadlock-with-rust/55959254#55959254", "title": "How can I create a deadlock with Rust?", "body": "<p>A very simple variant:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\n\nfn main() {\n    let data = Arc::new(Mutex::new(0));\n    let d1 = data.lock();\n    let d2 = data.lock(); // cannot lock, since d1 is still active\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2925, "user_id": 2544873, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1B6wh.png?s=128&g=1", "display_name": "Tinmarino", "link": "https://stackoverflow.com/users/2544873/tinmarino"}, "is_accepted": false, "score": 0, "last_activity_date": 1615418481, "creation_date": 1615418481, "answer_id": 66574315, "question_id": 55958941, "link": "https://stackoverflow.com/questions/55958941/how-can-i-create-a-deadlock-with-rust/66574315#66574315", "title": "How can I create a deadlock with Rust?", "body": "<p>Same as in other programming languages, Rust can have silent killer deadlocks.</p>\n<p>If some thread locking a mutex is waiting for another, this is not a good sign: if that other cannot come, the first mutex will never be released.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{sync::{Mutex, MutexGuard}, thread};\nuse std::thread::sleep;\nuse std::time::Duration;\n\nuse lazy_static::lazy_static;\nlazy_static! {\n    static ref MUTEX1: Mutex&lt;i64&gt; = Mutex::new(0);\n    static ref MUTEX2: Mutex&lt;i64&gt; = Mutex::new(0);\n}\n\nfn main() {\n    // Spawn thread and store handles\n    let mut children = vec![];\n    for i_thread in 0..2 {\n        children.push(thread::spawn(move || {\n            for _ in 0..1 {\n                // Thread 1\n                if i_thread % 2 == 0 {\n                    // Lock mutex1\n                    // No need to specify type but yes create a dummy variable to prevent rust\n                    // compiler from being lazy\n                    let _guard: MutexGuard&lt;i64&gt; = MUTEX1.lock().unwrap();\n\n                    // Just log\n                    println!(&quot;Thread {} locked mutex1 and will try to lock the mutex2, after a nap !&quot;, i_thread);\n\n                    // Here I sleep to let Thread 2 lock mutex2\n                    sleep(Duration::from_millis(10));\n\n                    // Lock mutex 2\n                    let _guard = MUTEX2.lock().unwrap();\n                // Thread 2\n                } else {\n                    // Lock mutex 1\n                    let _guard = MUTEX2.lock().unwrap();\n\n                    println!(&quot;Thread {} locked mutex2 and will try to lock the mutex1&quot;, i_thread);\n\n                    // Here I freeze !\n                    let _guard = MUTEX1.lock().unwrap();\n                }\n            }\n        }));\n    }\n\n    // Wait\n    for child in children {\n        let _ = child.join();\n    }\n\n    println!(&quot;This is not printed&quot;);\n}\n</code></pre>\n<p>Which outputs</p>\n<pre><code>Thread 0 locked mutex1 and will try to lock the mutex2, after a nap !\nThread 1 locked mutex2 and will try to lock the mutex1\n</code></pre>\n<p>and then waits forever</p>\n"}], "owner": {"reputation": 61, "user_id": 11025333, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/050e9b124eb34b97626d6b2c624e0a0d?s=128&d=identicon&r=PG&f=1", "display_name": "StevenProgramadorCrack", "link": "https://stackoverflow.com/users/11025333/stevenprogramadorcrack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 792, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1615418481, "creation_date": 1556824860, "last_edit_date": 1556848528, "question_id": 55958941, "link": "https://stackoverflow.com/questions/55958941/how-can-i-create-a-deadlock-with-rust", "title": "How can I create a deadlock with Rust?", "body": "<p>I would like to know how to create a deadlock.</p>\n\n<p>I tried to create a program in Rust that has a deadlock.</p>\n\n<p>How to create one?</p>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 2, "creation_date": 1556806305, "post_id": 55954249, "comment_id": 98560542, "body": "You can return the <i>mac_result</i> to the caller. If you want a prettier interface for that, you could make a wrapper for mac_result, that <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\">derefs</a> to the hash code."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1556807473, "post_id": 55954249, "comment_id": 98561221, "body": "You can pass byte array&#39;s reference as parameter then you can fill it with <code>hmac::raw_result</code>  or just return the <code>MacResult</code>, only way to increase it&#39;s life time is to create it&#39;s clone"}, {"owner": {"reputation": 139, "user_id": 9999594, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-mx_ExdFozcA/AAAAAAAAAAI/AAAAAAAABDU/yBIunoTUiEw/photo.jpg?sz=128", "display_name": "Ben", "link": "https://stackoverflow.com/users/9999594/ben"}, "edited": false, "score": 0, "creation_date": 1556808844, "post_id": 55954249, "comment_id": 98561997, "body": "Thanks. It makes sense that I wouldn&#39;t be able to access a variable outside its scope, but I&#39;m not steady on lifetimes yet, so I wanted to make sure I wasn&#39;t missing something obvious."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1556821903, "post_id": 55954249, "comment_id": 98568224, "body": "Another thing is that you do not want or need <code>_message</code> and <code>_key</code> to have the same lifetime. You can remove any lifetime annotation and it will just work (other than for returning a reference to a local variable, of course)."}], "owner": {"reputation": 139, "user_id": 9999594, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-mx_ExdFozcA/AAAAAAAAAAI/AAAAAAAABDU/yBIunoTUiEw/photo.jpg?sz=128", "display_name": "Ben", "link": "https://stackoverflow.com/users/9999594/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "closed_date": 1556849308, "answer_count": 0, "score": 0, "last_activity_date": 1556849284, "creation_date": 1556805908, "last_edit_date": 1556849284, "question_id": 55954249, "link": "https://stackoverflow.com/questions/55954249/value-ownership-in-rust-functions", "closed_reason": "Duplicate", "title": "Value ownership in Rust functions", "body": "<p>I have the following function:</p>\n\n<pre><code>fn hmac_sha1&lt;'a&gt;(_message: &amp;'a str, _key: &amp;'a str) -&gt; &amp;'a [u8] {\n    let key: &amp;[u8] = _key.as_bytes();\n    let message: &amp;[u8] = _message.as_bytes();\n\n    let mut mac: Hmac&lt;Sha1&gt; = Hmac::new(Sha1::new(), key);\n    mac.input(message);\n\n    let mac_result: MacResult = mac.result();\n\n    mac_result.code()\n}\n</code></pre>\n\n<p>In essence, I want to encode my message using SHA1, and return a pointer to the resulting byte array. When compiling this code, I get the following error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  --&gt; src/main.rs:81:5\n   |\n81 |     mac_result.code()\n   |     ----------^^^^^^^\n   |     |\n   |     returns a value referencing data owned by the current function\n   |     `mac_result` is borrowed here\n</code></pre>\n\n<p>Now, I understand what is wrong here, I just don't know how to fix it. The <code>mac_result</code> variable's lifetime expires once the function is finished, and a pointer to its internal result will of course not live any longer.</p>\n\n<p>Is there a way extend the lifetime of the <code>mac_result</code> variable so that I can return the byte array it contains, without converting it to a <code>Vec&lt;u8&gt;</code>? That's a workable solution, but I'd rather not convert the array if at all possible.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1556797845, "post_id": 55951780, "comment_id": 98555535, "body": "Ask yourself: what does <code>&#39;static</code> mean. Is it possible to create a <code>&#39;static</code> lifetime during runtime?"}, {"owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556798479, "post_id": 55951780, "comment_id": 98555850, "body": "I have and the answer is yes because I know there&#39;s a lazy_static crate :) but I&#39;m not familiar with it so would want to know if there&#39;s better ways of achieving this?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556798483, "post_id": 55951780, "comment_id": 98555854, "body": "You must leak memory to do that. Check my proposed duplicate."}, {"owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "edited": false, "score": 0, "creation_date": 1556799465, "post_id": 55951780, "comment_id": 98556390, "body": "Thanks French, it&#39;s similar for sure but mines aimed at the Clap crate in particular. I thought there might be a way to request it as <code>static</code> via that crate&#39;s API. I know lazy_static exists, but thought there might be a solution available without needing another crate."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556800098, "post_id": 55951780, "comment_id": 98556802, "body": "@willsquire Clap builds this string at runtime, thus it won&#39;t leak any memory behind your back to give you a static string."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1556800527, "post_id": 55951780, "comment_id": 98557054, "body": "At your place, I wouldn&#39;t leak the memory if you have a lot of configuration. I would create a struct with the configuration and pass it to every function that needs it."}, {"owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "edited": false, "score": 0, "creation_date": 1556800815, "post_id": 55951780, "comment_id": 98557236, "body": "I have, see: <a href=\"https://github.com/WillSquire/Graphy/blob/master/api/src/main.rs\" rel=\"nofollow noreferrer\">github.com/WillSquire/Graphy/blob/master/api/src/main.rs</a> and <a href=\"https://github.com/WillSquire/Graphy/blob/master/api/src/config/mod.rs\" rel=\"nofollow noreferrer\">github.com/WillSquire/Graphy/blob/master/api/src/config/mod.&zwnj;&#8203;rs</a>. But it needs thread safety and I want to pass a ref to everything that needs it rather than copy. I&#39;m open to ideas? :)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "edited": false, "score": 0, "creation_date": 1556801732, "post_id": 55951780, "comment_id": 98557813, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/192723/discussion-between-french-boiethios-and-willsquire\">continue this discussion in chat</a>."}], "owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 139, "favorite_count": 0, "closed_date": 1556800266, "answer_count": 0, "score": 1, "last_activity_date": 1556797606, "creation_date": 1556797606, "question_id": 55951780, "link": "https://stackoverflow.com/questions/55951780/can-i-get-a-static-lifetime-from-claps-arg-parser", "closed_reason": "Duplicate", "title": "Can I get a static lifetime from Clap&#39;s arg parser?", "body": "<p>Is it possible to get <code>static</code> lifetimes from Clap's arg parser?</p>\n\n<pre><code>let args = App::new(env!(\"CARGO_PKG_NAME\"))\n      .version(env!(\"CARGO_PKG_VERSION\"))\n      .author(env!(\"CARGO_PKG_AUTHORS\"))\n      .about(env!(\"CARGO_PKG_DESCRIPTION\"))\n      .bin_name(env!(\"CARGO_PKG_NAME\"))\n      .arg(\n        Arg::with_name(\"db-name\")\n          .short(\"d\")\n          .long(\"db-name\")\n          .value_name(\"NAME\")\n          .help(\"Sets database name\")\n          .takes_value(true),\n      )\n      .get_matches();\n\nlet db_name = args.value_of(val)?; // &lt;-- want as &amp;'static str\n</code></pre>\n\n<p>Currently getting them as <code>&amp;str</code>. The end goal is to have a single config object that lasts for the lifetime of the program. I don't really want to copy the values around either, just to remain in a single location.</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556799496, "post_id": 55951472, "comment_id": 98556411, "body": "<i>&quot;Can anyone point me in the right direction?&quot;</i> This is a dangerous statement to make in a SO question. It is best to make some attempts of your own and narrow the problem down to a more specific concern."}, {"owner": {"reputation": 601, "user_id": 196116, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/bcdf2e7d5c2b0bd28b7cdcf951d7ae3b?s=128&d=identicon&r=PG", "display_name": "hoheinzollern", "link": "https://stackoverflow.com/users/196116/hoheinzollern"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556800860, "post_id": 55951472, "comment_id": 98557267, "body": "Thanks! however I made my own attempt at a solution using <code>macro_rules!</code>, which is the one that&#39;s most documented. I got stuck exactly at that point, not being able to find a way to do this matching. Shall I share my attempt?"}], "answers": [{"comments": [{"owner": {"reputation": 601, "user_id": 196116, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/bcdf2e7d5c2b0bd28b7cdcf951d7ae3b?s=128&d=identicon&r=PG", "display_name": "hoheinzollern", "link": "https://stackoverflow.com/users/196116/hoheinzollern"}, "edited": false, "score": 0, "creation_date": 1556803594, "post_id": 55953279, "comment_id": 98558914, "body": "Nice tricks! Thanks, that&#39;s very illuminating. Nice that I can continue building my solution with <code>macro_rules!</code>, I guess implementing this as a function that processes <code>TokenStream</code>s is a lot more work."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 601, "user_id": 196116, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/bcdf2e7d5c2b0bd28b7cdcf951d7ae3b?s=128&d=identicon&r=PG", "display_name": "hoheinzollern", "link": "https://stackoverflow.com/users/196116/hoheinzollern"}, "edited": false, "score": 0, "creation_date": 1556805489, "post_id": 55953279, "comment_id": 98560076, "body": "@hoheinzollern I added an implementation for proc macros. I wouldn&#39;t say it&#39;s &quot;a lot more work&quot;; it&#39;s actually easier to understand IMO since it doesn&#39;t require as many hacks. But sure, setting up a proc-macro sadly still requires a separate crate and doing proper error handling adds boilerplate code."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556809071, "post_id": 55953279, "comment_id": 98562143, "body": "Note that your <code>macro_rules!</code> solution does not handle parentheses (eg. <code>replace!(foo, bar, (foo))</code>) a special rule would need to be added for that."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556815360, "post_id": 55953279, "comment_id": 98565444, "body": "@Jmb Well spotted! I didn&#39;t think of that at all. I fixed it in the answer now (I think)."}, {"owner": {"reputation": 601, "user_id": 196116, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/bcdf2e7d5c2b0bd28b7cdcf951d7ae3b?s=128&d=identicon&r=PG", "display_name": "hoheinzollern", "link": "https://stackoverflow.com/users/196116/hoheinzollern"}, "edited": false, "score": 0, "creation_date": 1556875394, "post_id": 55953279, "comment_id": 98584472, "body": "@Lukas what changes would I need to make for your code to parse blocks instead of expressions? For example I&#39;d like to make this call: <code>dbg!(replace!(abc, foo, { let x = 100; foo * x + z }));</code>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 601, "user_id": 196116, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/bcdf2e7d5c2b0bd28b7cdcf951d7ae3b?s=128&d=identicon&r=PG", "display_name": "hoheinzollern", "link": "https://stackoverflow.com/users/196116/hoheinzollern"}, "edited": false, "score": 0, "creation_date": 1556877818, "post_id": 55953279, "comment_id": 98585869, "body": "@hoheinzollern Mhh. Good question. Quite honestly, that&#39;s one reason more to use the proc-macro version. Decl macros expanding into expressions vs. statements is an annoying topic. I&#39;m pretty sure it can be solved with <code>macro_rules</code> somehow, but I won&#39;t spend my time trying to figure that out right now, sorry! And I can&#39;t even give you any useful hints right now, sorry :/"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 16, "last_activity_date": 1556815334, "last_edit_date": 1556815334, "creation_date": 1556802681, "answer_id": 55953279, "question_id": 55951472, "link": "https://stackoverflow.com/questions/55951472/how-to-replace-one-identifier-in-an-expression-with-another-one-via-rust-macro/55953279#55953279", "title": "How to replace one identifier in an expression with another one via Rust macro?", "body": "<h1>Solution with <code>macro_rules!</code> macro</h1>\n\n<p>To implement this with declarative macros (<code>macro_rules!</code>) is a bit tricky but possible. However, it's necessary to use a few tricks. </p>\n\n<p>But first, here is the code (<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=17836362facb0996a3dd1d6ce9d29087\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! replace {\n    // This is the \"public interface\". The only thing we do here is to delegate\n    // to the actual implementation. The implementation is more complicated to\n    // call, because it has an \"out\" parameter which accumulates the token we\n    // will generate.\n    ($x:ident, $y:ident, $($e:tt)*) =&gt; {\n        replace!(@impl $x, $y, [], $($e)*)\n    };\n\n    // Recursion stop: if there are no tokens to check anymore, we just emit\n    // what we accumulated in the out parameter so far.\n    (@impl $x:ident, $y:ident, [$($out:tt)*], ) =&gt; {\n        $($out)*\n    };\n\n    // This is the arm that's used when the first token in the stream is an\n    // identifier. We potentially replace the identifier and push it to the\n    // out tokens.\n    (@impl $x:ident, $y:ident, [$($out:tt)*], $head:ident $($tail:tt)*) =&gt; {{\n        replace!(\n            @impl $x, $y, \n            [$($out)* replace!(@replace $x $y $head)],\n            $($tail)*\n        )\n    }};\n\n    // These arms are here to recurse into \"groups\" (tokens inside of a \n    // (), [] or {} pair)\n    (@impl $x:ident, $y:ident, [$($out:tt)*], ( $($head:tt)* ) $($tail:tt)*) =&gt; {{\n        replace!(\n            @impl $x, $y, \n            [$($out)* ( replace!($x, $y, $($head)*) ) ], \n            $($tail)*\n        )\n    }};\n    (@impl $x:ident, $y:ident, [$($out:tt)*], [ $($head:tt)* ] $($tail:tt)*) =&gt; {{\n        replace!(\n            @impl $x, $y, \n            [$($out)* [ replace!($x, $y, $($head)*) ] ], \n            $($tail)*\n        )\n    }};\n    (@impl $x:ident, $y:ident, [$($out:tt)*], { $($head:tt)* } $($tail:tt)*) =&gt; {{\n        replace!(\n            @impl $x, $y, \n            [$($out)* { replace!($x, $y, $($head)*) } ], \n            $($tail)*\n        )\n    }};\n\n    // This is the standard recusion case: we have a non-identifier token as\n    // head, so we just put it into the out parameter.\n    (@impl $x:ident, $y:ident, [$($out:tt)*], $head:tt $($tail:tt)*) =&gt; {{\n        replace!(@impl $x, $y, [$($out)* $head], $($tail)*)\n    }};\n\n    // Helper to replace the identifier if its the needle. \n    (@replace $needle:ident $replacement:ident $i:ident) =&gt; {{\n        // This is a trick to check two identifiers for equality. Note that \n        // the patterns in this macro don't contain any meta variables (the \n        // out meta variables $needle and $i are interpolated).\n        macro_rules! __inner_helper {\n            // Identifiers equal, emit $replacement\n            ($needle $needle) =&gt; { $replacement };\n            // Identifiers not equal, emit original\n            ($needle $i) =&gt; { $i };                \n        }\n\n        __inner_helper!($needle $i)\n    }}\n}\n\n\nfn main() {\n    let foo = 3;\n    let bar = 7;\n    let z = 5;\n\n    dbg!(replace!(abc, foo, bar * 100 + z));  // no replacement\n    dbg!(replace!(bar, foo, bar * 100 + z));  // replace `bar` with `foo`\n}\n</code></pre>\n\n<p>It outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[src/main.rs:56] replace!(abc , foo , bar * 100 + z) = 705\n[src/main.rs:57] replace!(bar , foo , bar * 100 + z) = 305\n</code></pre>\n\n<hr>\n\n<h3>How does this work?</h3>\n\n<p>There are two main tricks one need to understand before understanding this macro: <strong>push down accumulation</strong> and <strong>how to check two identifiers for equality</strong>. </p>\n\n<p>Furthermore, just to be sure: the <code>@foobar</code> things at the start of the macro pattern are not a special feature, but simply a convention to mark internal helper macros (also see: <a href=\"https://danielkeep.github.io/tlborm/book/pat-internal-rules.html\" rel=\"noreferrer\">\"The little book of Macros\"</a>, <a href=\"https://stackoverflow.com/questions/54406388/what-does-an-symbol-mean-in-a-declarative-macro\">StackOverflow question</a>).</p>\n\n<hr>\n\n<p><strong>Push down accumulation</strong> is well described in <a href=\"https://danielkeep.github.io/tlborm/book/pat-push-down-accumulation.html\" rel=\"noreferrer\">this chapter of \"The little book of Rust macros\"</a>. The important part is:</p>\n\n<blockquote>\n  <p>All macros in Rust <strong>must</strong> result in a complete, supported syntax element (such as an expression, item, etc.). This means that it is impossible to have a macro expand to a partial construct.</p>\n</blockquote>\n\n<p>But often it is necessary to have partial results, for example when dealing token for token with some input. To solve this, one basically has an \"out\" parameter which is just a list of tokens that grows with each recursive macro call. This works, because macro input can be arbitrary tokens and don't have to be a valid Rust construct.</p>\n\n<p>This pattern only makes sense for macros that work as \"incremental TT munchers\", which my solution does. There is also <a href=\"https://danielkeep.github.io/tlborm/book/pat-incremental-tt-munchers.html\" rel=\"noreferrer\">a chapter about this pattern in TLBORM</a>.</p>\n\n<hr>\n\n<p>The second key point is to <strong>check two identifiers for equality</strong>. This is done with an interesting trick: the macro defines a new macro which is then immediately used. Let's take a look at the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>(@replace $needle:ident $replacement:ident $i:ident) =&gt; {{\n    macro_rules! __inner_helper {\n        ($needle $needle) =&gt; { $replacement };\n        ($needle $i) =&gt; { $i };                \n    }\n\n    __inner_helper!($needle $i)\n}}\n</code></pre>\n\n<p>Let's go through two different invocations:</p>\n\n<ul>\n<li><p><code>replace!(@replace foo bar baz)</code>: this expands to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! __inner_helper {\n    (foo foo) =&gt; { bar };\n    (foo baz) =&gt; { baz };\n}\n\n__inner_helper!(foo baz)\n</code></pre>\n\n<p>And the <code>inner_helper!</code> invocation now clearly takes the second pattern, resulting in <code>baz</code>.</p></li>\n<li><p><code>replace!(@replace foo bar foo)</code> on the other hand expands to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! __inner_helper {\n    (foo foo) =&gt; { bar };\n    (foo foo) =&gt; { foo };\n}\n\n__inner_helper!(foo foo)\n</code></pre>\n\n<p>This time, the <code>inner_helper!</code> invocation takes the first pattern, resulting in <code>bar</code>.</p></li>\n</ul>\n\n<p>I learned this trick from a crate that offers basically only exactly that: a macro checking two identifiers for equality. But unfortunately, I cannot find this crate anymore. Let me know if you know the name of that crate!</p>\n\n<hr>\n\n<p>This implementation has a few limitations, however:</p>\n\n<ul>\n<li><p>As an incremental TT muncher, it recurses for each token in the input. So it's easy to reach the recursion limit (which can be increased, but it's not optimal). It could be possible to write a non-recursive version of this macro, but so far I haven't found a way to do that.</p></li>\n<li><p><code>macro_rules!</code> macros are a bit strange when it comes to identifiers. The solution presented above might behave strange with <code>self</code> as identifier. See <a href=\"https://danielkeep.github.io/tlborm/book/mbe-min-non-identifier-identifiers.html\" rel=\"noreferrer\">this chapter</a> for more information on that topic.</p></li>\n</ul>\n\n<p><br> </p>\n\n<h1>Solution with proc-macro</h1>\n\n<p>Of course this can also be done via a proc-macro. It also involves less strange tricks. My solution looks like this:</p>\n\n<pre><code>extern crate proc_macro;\n\nuse proc_macro::{\n    Ident, TokenStream, TokenTree,\n    token_stream,\n};\n\n\n#[proc_macro]\npub fn replace(input: TokenStream) -&gt; TokenStream {\n    let mut it = input.into_iter();\n\n    // Get first parameters\n    let needle = get_ident(&amp;mut it);\n    let _comma = it.next().unwrap();\n    let replacement = get_ident(&amp;mut it);\n    let _comma = it.next().unwrap();\n\n    // Return the remaining tokens, but replace identifiers.\n    it.map(|tt| {\n        match tt {\n            // Comparing `Ident`s can only be done via string comparison right\n            // now. Note that this ignores syntax contexts which can be a\n            // problem in some situation.\n            TokenTree::Ident(ref i) if i.to_string() == needle.to_string() =&gt; {\n                TokenTree::Ident(replacement.clone())\n            }\n\n            // All other tokens are just forwarded\n            other =&gt; other,\n        }\n    }).collect()\n}\n\n/// Extract an identifier from the iterator.\nfn get_ident(it: &amp;mut token_stream::IntoIter) -&gt; Ident {\n    match it.next() {\n        Some(TokenTree::Ident(i)) =&gt; i,\n        _ =&gt; panic!(\"oh noes!\"),\n    }\n}\n</code></pre>\n\n<p>Using this proc macro with the <code>main()</code> example from above works exactly the same. </p>\n\n<p><strong>Note</strong>: error handling was ignored here to keep the example short. Please see <a href=\"https://stackoverflow.com/questions/54392702/how-to-report-errors-in-a-procedural-macro-using-the-quote-macro\">this question</a> on how to do error reporting in proc macros.</p>\n\n<p>Apart from this, that code doesn't need as much explanations, I think. This proc macro version also doesn't suffer from the recursion limit problem as the <code>macro_rules!</code> macro.</p>\n"}], "owner": {"reputation": 601, "user_id": 196116, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/bcdf2e7d5c2b0bd28b7cdcf951d7ae3b?s=128&d=identicon&r=PG", "display_name": "hoheinzollern", "link": "https://stackoverflow.com/users/196116/hoheinzollern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1425, "favorite_count": 2, "accepted_answer_id": 55953279, "answer_count": 1, "score": 12, "last_activity_date": 1556815334, "creation_date": 1556796537, "last_edit_date": 1556799234, "question_id": 55951472, "link": "https://stackoverflow.com/questions/55951472/how-to-replace-one-identifier-in-an-expression-with-another-one-via-rust-macro", "title": "How to replace one identifier in an expression with another one via Rust macro?", "body": "<p>I'm trying to build a macro that does some code transformation, and should be able to parse its own syntax.\nHere is the simplest example I can think of:</p>\n\n<pre><code>replace!(x, y, x * 100 + z) ~&gt; y * 100 + z\n</code></pre>\n\n<p>This macro should be able to replace the first identifier with the second in the expression provided as third parameter. The macro should have some understanding of the language of the third parameter (which in my particular case, as opposed to the example, wouldn't parse in Rust) and apply recursively over it.</p>\n\n<p>What's the most effective way to build such a macro in Rust? I'm aware of the <code>proc_macro</code> approach and the <code>macro_rules!</code> one. However I am not sure whether <code>macro_rules!</code> is powerful enough to handle this and I couldn't find much documentation in how to build my own transformations using <code>proc_macro</code>. Can anyone point me in the right direction?</p>\n"}, {"tags": ["rust", "unsafe"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1556793890, "post_id": 55950452, "comment_id": 98553590, "body": "maybe <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.align_to\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.slice.html#method.align_to</a> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=29ed3775cc87d01504624d2e94cc45f3\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1556794309, "post_id": 55950452, "comment_id": 98553809, "body": "Seeing as there is no definitive specification of behavior for <code>unsafe</code> Rust, it seems an answer could demonstrate unsafety but could not demonstrate safety."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1556795309, "post_id": 55950452, "comment_id": 98554299, "body": "I think you&#39;re in the clear, because <code>bytes</code> is derived from <code>data</code> -- it&#39;s not that different from just doing <code>let foo = &amp;*data</code>, which also gives you a <code>&amp;</code> slice from a <code>&amp;mut</code> slice. Whether one can prove that is sound according to Rust&#39;s execution model, I&#39;m not sure."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556801684, "post_id": 55950452, "comment_id": 98557789, "body": "Why is it a mut slice in the first place? As trentcl already mentioned, it is more reasonable to think about turning one immutable slice to another immutable slice: a <code>&amp;[u32]</code> into a <code>&amp;[u8]</code>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556806371, "post_id": 55950452, "comment_id": 98560584, "body": "@E_net4 It&#39;s mutable because the endianness should be changed in-place. That way we can make sure to call <code>write_all</code> only once. With as much data as possible."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1556806408, "post_id": 55950452, "comment_id": 98560599, "body": "@MatthieuM. Yeah, I worried that would be a problem :/ We really need the unsafe code guidelines. Soon."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1556806520, "post_id": 55950452, "comment_id": 98560683, "body": "My suspicion is that you do indeed need to have <code>let bytes = &amp;data[..];</code> before casting to a raw pointer. In particular, your cast to a raw pointer drops the lifetime, and allows your <code>&amp;mut [u32]</code> to alias with an <code>&amp;[u8]</code>, and that <i>seems</i> like UB to me. It would be nice to get @RalfJung&#39;s take on this."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1556806591, "post_id": 55950452, "comment_id": 98560722, "body": "@BurntSushi5: Is it still UB if you don&#39;t use data as mutable in the lifespan of the derived pointer :) ? I would have intuitively say that it&#39;s fine because &quot;time-wise&quot; there&#39;s no overlap."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1556820339, "post_id": 55950452, "comment_id": 98567529, "body": "Don&#39;t know. My guess would be &quot;yes,&quot; but that&#39;s mostly just me being conservative. Having <code>let bytes = &amp;data[..];</code> before the raw pointer cast feels like it puts this pretty firmly in &quot;that&#39;s safe&quot; territory."}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1556899036, "post_id": 55950452, "comment_id": 98597494, "body": "My $0.02:  See Rob Pike&#39;s classic blog post <a href=\"https://commandcenter.blogspot.com/2012/04/byte-order-fallacy.html\" rel=\"nofollow noreferrer\">The Byte Order Fallacy</a>."}], "answers": [{"comments": [{"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1564181673, "post_id": 57180429, "comment_id": 100959886, "body": "I&#39;ve missed the <code>u32</code> twist the first time. Updated answer."}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 3, "last_activity_date": 1564437641, "last_edit_date": 1564437641, "creation_date": 1563962990, "answer_id": 57180429, "question_id": 55950452, "link": "https://stackoverflow.com/questions/55950452/how-to-safely-get-an-immutable-byte-slice-from-a-mut-u32/57180429#57180429", "title": "How to safely get an immutable byte slice from a `&amp;mut [u32]`?", "body": "<p>In general, creation of slices that violate Rust's safety rules, even briefly, is unsafe. If you cheat the borrow checker and make independent slices borrowing the same data as <code>&amp;</code> and <code>&amp;mut</code> at the same time, it will make Rust specify incorrect aliasing information in LLVM, and this may lead to actually miscompiled code. <a href=\"https://github.com/rust-lang/miri\" rel=\"nofollow noreferrer\">Miri</a> doesn't flag this case, because you're not using <code>data</code> afterwards, but the exact details of what is unsafe <a href=\"https://github.com/rust-lang/unsafe-code-guidelines\" rel=\"nofollow noreferrer\">are still being worked out</a>.</p>\n\n<p>To be safe, you should to explain the sharing situation to the borrow checker:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let shared_data = &amp;data[..];\n</code></pre>\n\n<p><code>data</code> will be temporarily reborrowed as shared/read-only for the duration <code>shared_data</code> is used. In this case it shouldn't cause any limitations. The <code>data</code> will keep being mutable after exiting this scope.</p>\n\n<p>Then you'll have <code>&amp;[u32]</code>, but you need <code>&amp;[u8]</code>. Fortunately, <em>this</em> conversion is safe to do, because both are shared, and <code>u8</code> has lesser alignment requirement than <code>u32</code> (if it was the other way, you'd have to use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.align_to\" rel=\"nofollow noreferrer\"><code>align_to</code></a>!).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let shared_data = &amp;data[..];\nlet bytes = unsafe {\n    let len = shared_data.len() * mem::size_of::&lt;u32&gt;();\n    let ptr = data.as_ptr() as *const u8;\n    slice::from_raw_parts(ptr, len)\n};\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 458, "favorite_count": 0, "accepted_answer_id": 57180429, "answer_count": 1, "score": 10, "last_activity_date": 1564437641, "creation_date": 1556792940, "last_edit_date": 1556802628, "question_id": 55950452, "link": "https://stackoverflow.com/questions/55950452/how-to-safely-get-an-immutable-byte-slice-from-a-mut-u32", "title": "How to safely get an immutable byte slice from a `&amp;mut [u32]`?", "body": "<p>In a rather low level part of a project of mine, a function receives a mutable slice of primitive data (<code>&amp;mut [u32]</code> in this case). This data should be written to a writer in little endian. </p>\n\n<p>Now, this alone wouldn't be a problem, but all of this has to be fast. I measured my application and identified this as one of the critical paths. In particular, if the endianness doesn't need to be changed (since we're already on a little endian system), there shouldn't be any overhead.</p>\n\n<p>This is my code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8c87ec453e0a255c723f7a20fab1e290\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{io, mem, slice};\n\nfn write_data(mut w: impl io::Write, data: &amp;mut [u32]) -&gt; Result&lt;(), io::Error&gt; {\n    adjust_endianness(data);\n\n    // Is this safe?\n    let bytes = unsafe {\n        let len = data.len() * mem::size_of::&lt;u32&gt;();\n        let ptr = data.as_ptr() as *const u8;\n        slice::from_raw_parts(ptr, len)\n    };\n\n    w.write_all(bytes)\n}\n\nfn adjust_endianness(_: &amp;mut [u32]) {\n    // implementation omitted\n}\n</code></pre>\n\n<p><code>adjust_endianness</code> changes the endianness in place (which is fine, since a wrong-endian <code>u32</code> is garbage, but still a valid <code>u32</code>).</p>\n\n<p>This code works, but the critical question is: <strong>Is this safe?</strong> In particular, at some point, <code>data</code> and <code>bytes</code> both exist, being one mutable and one immutable slice to the same data. That sounds very bad, right? </p>\n\n<p>On the other hand, I can do this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let bytes = &amp;data[..];\n</code></pre>\n\n<p>That way, I also have those two slices. The difference is just that <code>data</code> is now borrowed. </p>\n\n<p><strong>Is my code safe or does it exhibit UB? Why? If it's not safe, how to safely do what I want to do?</strong></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": false, "score": 1, "last_activity_date": 1593114602, "last_edit_date": 1593114602, "creation_date": 1556785886, "answer_id": 55948477, "question_id": 55948343, "link": "https://stackoverflow.com/questions/55948343/how-to-pass-iteratorstring-as-iteratorstr/55948477#55948477", "title": "How to pass Iterator&lt;String&gt; as Iterator&lt;&amp;str&gt;?", "body": "<blockquote>\n<p>How do i convert <code>Iterator&lt;T&gt;</code> to <code>Iterator&lt;U&gt;</code> and pass it to another function?</p>\n</blockquote>\n<p>You use the <code>map</code> adapter function of <code>Iterator</code>.</p>\n<hr />\n<p>In your particular case, you need to:</p>\n<ol>\n<li>use <code>iter</code> instead of <code>into_iter</code>, that makes the vec live longer than the function call</li>\n<li><code>map</code> the <code>String</code>s to <code>&amp;str</code></li>\n</ol>\n<pre class=\"lang-rust prettyprint-override\"><code>fn my_print&lt;'a&gt;(args: impl Iterator&lt;Item = &amp;'a str&gt;) {\n    for arg in args {\n        println!(&quot;=&gt; {}&quot;, arg);\n    }\n}\n\nfn main() {\n    let vec = vec![&quot;one&quot;.to_string(), &quot;two&quot;.to_string()];\n    my_print(vec.iter().map(|s| s.as_ref()));\n}\n</code></pre>\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d290d17d0bb7b4ce1460c082e9064851\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 8, "last_activity_date": 1556789078, "last_edit_date": 1556789078, "creation_date": 1556785935, "answer_id": 55948490, "question_id": 55948343, "link": "https://stackoverflow.com/questions/55948343/how-to-pass-iteratorstring-as-iteratorstr/55948490#55948490", "title": "How to pass Iterator&lt;String&gt; as Iterator&lt;&amp;str&gt;?", "body": "<p>An even better way would be to write the function in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=48bec044e2ba59f319dee2f53163c7eb\" rel=\"nofollow noreferrer\">a way such as it doesn't actually care</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn my_print&lt;T: AsRef&lt;str&gt;&gt;(args: impl Iterator&lt;Item = T&gt;) {\n    for arg in args {\n        println!(\"=&gt; {}\", arg.as_ref());\n    }\n}\n\nfn main() {\n    let vec = vec![\"one\".to_string(), \"two\".to_string()];\n    my_print(vec.into_iter()); // works!\n}\n</code></pre>\n\n<hr>\n\n<p>If you cannot change the function signature, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ce0479a082c0ef5e7b6bbd0795a3bc67\" rel=\"nofollow noreferrer\">you have to convert the iterator beforehand</a>:</p>\n\n<pre><code>fn my_print&lt;'a&gt;(args: impl Iterator&lt;Item = &amp;'a str&gt;) {\n    for arg in args {\n        println!(\"=&gt; {}\", arg);\n    }\n}\n\nfn main() {\n    let vec = vec![\"one\".to_string(), \"two\".to_string()];\n    my_print(vec.iter().map(|s| s.as_ref()));\n}\n</code></pre>\n\n<p>Note that in that case you cannot use <code>into_iter</code> because no-one would own the strings.</p>\n"}], "owner": {"reputation": 2826, "user_id": 1575632, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/SPw2f.jpg?s=128&g=1", "display_name": "amin", "link": "https://stackoverflow.com/users/1575632/amin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 531, "favorite_count": 0, "accepted_answer_id": 55948490, "answer_count": 2, "score": 2, "last_activity_date": 1593114685, "creation_date": 1556785389, "last_edit_date": 1593114685, "question_id": 55948343, "link": "https://stackoverflow.com/questions/55948343/how-to-pass-iteratorstring-as-iteratorstr", "title": "How to pass Iterator&lt;String&gt; as Iterator&lt;&amp;str&gt;?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>fn my_print&lt;'a&gt;(args: impl Iterator&lt;Item=&amp;'a str&gt;) {\n    for arg in args {\n        println!(&quot;=&gt; {}&quot;, arg);\n    }\n}\n\nfn main() {\n    let vec = vec![&quot;one&quot;.to_string(), &quot;two&quot;.to_string()];\n    my_print(vec.into_iter()); // how to pass vec here?\n}\n</code></pre>\n<p>How do I convert <code>Iterator&lt;T&gt;</code> to <code>Iterator&lt;U&gt;</code> and pass it to another function?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1556774278, "post_id": 55945929, "comment_id": 98544683, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/45664392/is-it-possible-to-create-a-macro-that-implements-ord-by-delegating-to-a-struct-m\">Is it possible to create a macro that implements Ord by delegating to a struct member?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1556774328, "post_id": 55945929, "comment_id": 98544697, "body": "what do you want simplify ? There is 3 lines of code"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556774556, "post_id": 55945929, "comment_id": 98544773, "body": "you can do <code>Some(self.cmp(other))</code> in <code>PartialOrd</code>"}, {"owner": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556779303, "post_id": 55945929, "comment_id": 98546459, "body": "@Stargateur I can\u2019t use <code>Some(self.cmp(other))</code> in <code>PartialOrd</code> because I only constrain <code>K</code> to be <code>PartialOrd</code>, not <code>Ord</code>, and <code>PartialOrd</code> doesn\u2019t have <code>cmp</code>."}, {"owner": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556779562, "post_id": 55945929, "comment_id": 98546573, "body": "@Stargateur The linked solution uses macros, which doesn\u2019t reduce the code size because it still do 4 trait implementations in the macro definition."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556792574, "post_id": 55945929, "comment_id": 98552933, "body": "Yes, that the point, there is nothing to simplify."}], "owner": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1556773231, "creation_date": 1556773231, "question_id": 55945929, "link": "https://stackoverflow.com/questions/55945929/is-there-a-simple-way-to-implement-ord-trait-for-a-key-value-pair-whose-order", "title": "Is there a simple way to implement `Ord` trait for a key value pair whose order is only determined by its key?", "body": "<p>I want to implement a <code>KeyValuePair&lt;K, V&gt;</code> data structure that implements <code>Ord</code> if <code>K</code> implements <code>Ord</code>. Currently, this is my implementation:</p>\n\n<pre><code>use std::cmp::Ordering;\n\nstruct KeyValuePair&lt;K, V&gt; {\n    key: K,\n    value: V,\n}\n\nimpl&lt;K: PartialEq, V&gt; PartialEq for KeyValuePair&lt;K, V&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        self.key.eq(&amp;other.key)\n    }\n}\n\nimpl&lt;K: Eq, V&gt; Eq for KeyValuePair&lt;K, V&gt; {}\n\nimpl&lt;K: PartialOrd, V&gt; PartialOrd for KeyValuePair&lt;K, V&gt; {\n    fn partial_cmp(&amp;self, other: &amp;Self) -&gt; Option&lt;Ordering&gt; {\n        self.key.partial_cmp(&amp;other.key)\n    }\n}\n\nimpl&lt;K: Ord, V&gt; Ord for KeyValuePair&lt;K, V&gt; {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        self.key.cmp(&amp;other.key)\n    }\n}\n</code></pre>\n\n<p>Other than <code>Ord</code>, I also have to implement <code>PartialEq</code>, <code>Eq</code> and <code>PartialOrd</code>, which is a bit too much. I don\u2019t want to use <code>#[derive]</code> because that will compare <code>value</code> as well.</p>\n\n<p>So is there any way I can simplify my code?</p>\n"}, {"tags": ["rust", "x86", "bit-shift", "carryflag"], "comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1556770103, "post_id": 55945381, "comment_id": 98543711, "body": "I guess alias analysis can&#39;t prove that <code>cf</code> and <code>foo</code> aren&#39;t both pointing to the same byte.  If you save <code>*foo &amp; 1</code> in a local var and assign to <code>*cf</code> 2nd, that would allow the compiler to load, shift, store the shift result, then store the AND or SETC result.  <i>Then</i> you&#39;d have a real <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> for a missed optimization that you could report as an LLVM bug.  Whether or not the language needs features to expose the CF result of right-shifting is not clear; not all ISAs have flags at all (e.g. MIPS) so you don&#39;t get it for free on all CPUs.  But that could maybe help compilers some."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1556770348, "post_id": 55945381, "comment_id": 98543756, "body": "Using <code>shr [mem]</code>/<code>setc [mem]</code> would be a slight optimization, but memory-dest <code>shr</code> is a 3-uop instruction on Intel (e.g. Skylake), and memory destination <code>setcc</code> is 2 uops, so that&#39;s a total of 5 uops, the same as you can do with <code>movzx eax, byte [rdi]</code> / <code>rorx edx, eax, 1</code> to copy-and-shift / <code>and al,1</code> / 2x stores.  But without BMI2 rorx (or if the compiler fails to use it for a right shift when the upper bits will be ignored) your way is 1 uop better, and definitely smaller code size either way."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556772767, "post_id": 55945381, "comment_id": 98544250, "body": "I don&#39;t think you can have better assembly that you already have."}], "owner": {"reputation": 33, "user_id": 9059048, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RewVtgyVMkg/AAAAAAAAAAI/AAAAAAAAA9I/S5BG6yEsQbg/photo.jpg?sz=128", "display_name": "Marshall Mohror", "link": "https://stackoverflow.com/users/9059048/marshall-mohror"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 304, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1556768489, "creation_date": 1556768489, "question_id": 55945381, "link": "https://stackoverflow.com/questions/55945381/how-to-get-the-value-of-the-carry-flag-in-rust", "title": "How to get the value of the carry flag in Rust", "body": "<p>I want to get the value of the carry flag after performing a bit-shift.</p>\n\n<p>Rust has stable functions that check for overflow like so:</p>\n\n<pre><code>pub fn add_with_carry(foo : &amp;mut u8, bar : u8, cf : &amp;mut u8) {\n    let(result, overflow) = foo.overflowing_add(bar);\n    *foo = result;\n    *cf = overflow as u8;\n}\n</code></pre>\n\n<p>which generates assembly like this:</p>\n\n<pre><code>example::add_with_carry:\n  add byte ptr [rdi], sil\n  setb byte ptr [rdx]\n  ret\n</code></pre>\n\n<p>however <code>overflowing_shr</code> only returns true when the value is shifted by its size or more, I only care about the least significant bit, which would be stored in CF, currently the best i've come up with is:</p>\n\n<pre><code>pub fn shr(foo : &amp;mut u8, cf : &amp;mut u8) {\n    *cf = *foo &amp; 1;\n    *foo &gt;&gt;=1\n}\n</code></pre>\n\n<p>however that is somewhat less efficient:</p>\n\n<pre><code>example::shr:\n  mov al, byte ptr [rdi]\n  and al, 1\n  mov byte ptr [rsi], al\n  shr byte ptr [rdi]\n  ret\n</code></pre>\n\n<p>I would rather have something like:</p>\n\n<pre><code>example::shr:\n  shr byte ptr [rdi]\n  setc byte ptr [rdx]\n  ret\n</code></pre>\n\n<p>There doesn't seem to be an intrinsic to get CF and inline assembly is not stable at the moment.</p>\n"}]