[{"tags": ["http", "proxy", "rust", "hyper"], "comments": [{"owner": {"reputation": 51, "user_id": 547339, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/355a2b203154bf8a9423fcdecf9e44cc?s=128&d=identicon&r=PG", "display_name": "softprops", "link": "https://stackoverflow.com/users/547339/softprops"}, "edited": false, "score": 3, "creation_date": 1502159950, "post_id": 45330708, "comment_id": 78099325, "body": "You will probably find a good deal of inspiration in the authors separate higher level interface built on top of hyper 0.11 called reqwest <a href=\"https://github.com/seanmonstar/reqwest/blob/master/src/proxy.rs\" rel=\"nofollow noreferrer\">github.com/seanmonstar/reqwest/blob/master/src/proxy.rs</a>"}, {"owner": {"reputation": 138, "user_id": 2054726, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hM5QU.jpg?s=128&g=1", "display_name": "Mario Idival", "link": "https://stackoverflow.com/users/2054726/mario-idival"}, "edited": false, "score": 0, "creation_date": 1516199832, "post_id": 45330708, "comment_id": 83591902, "body": "Sergey, the example above can help?"}, {"owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "edited": false, "score": 0, "creation_date": 1516408911, "post_id": 45330708, "comment_id": 83689685, "body": "I abounded that topic and haven&#39;t tried them yet."}], "answers": [{"tags": [], "owner": {"reputation": 1168, "user_id": 222167, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/3f43f2219b24130cce31e06577d6cc8c?s=128&d=identicon&r=PG", "display_name": "Fei", "link": "https://stackoverflow.com/users/222167/fei"}, "is_accepted": false, "score": 0, "last_activity_date": 1549699701, "creation_date": 1549699701, "answer_id": 54604418, "question_id": 45330708, "link": "https://stackoverflow.com/questions/45330708/how-to-use-http-proxy-with-asynchronous-hyper-0-11-in-rust/54604418#54604418", "title": "How to use HTTP proxy with asynchronous Hyper 0.11 in Rust?", "body": "<p>You can use the <code>Client::configure()</code> method to build a proxy connector, and then build it with the <code>handle</code>, see below code snippet</p>\n\n<pre><code>let handle = core.handle();\nlet proxy = {\n    let proxy_uri =\"http://&lt;your proxy&gt;:port\".parse().unwrap();\n    let mut proxy = Proxy::new(Intercept::All, proxy_uri);\n    proxy.set_authorization(Basic{\n        username: \"your username\",\n        password: Some(\"your passwd\"),\n    }); \n    let http_connector = HttpConnector::new(4, &amp;handle);\n    ProxyConnector::from_proxy(http_connector, proxy).unwrap()\n};\nlet client = Client::configure().connector(proxy).build(&amp;handle)\n</code></pre>\n\n<p>Now you can use the client object to perform any REST calls.</p>\n"}], "owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1364, "favorite_count": 2, "answer_count": 1, "score": 19, "last_activity_date": 1549699701, "creation_date": 1501081223, "last_edit_date": 1501088808, "question_id": 45330708, "link": "https://stackoverflow.com/questions/45330708/how-to-use-http-proxy-with-asynchronous-hyper-0-11-in-rust", "title": "How to use HTTP proxy with asynchronous Hyper 0.11 in Rust?", "body": "<p>How do I send an HTTP request using a proxy with Hyper 0.11? I have the following working code that sends an HTTP request without proxy:</p>\n\n<pre><code>extern crate hyper;\nextern crate tokio_core;\nextern crate futures;\n\nuse futures::Future;\nuse hyper::Client;\nuse tokio_core::reactor::Core;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let client = Client::new(&amp;core.handle());\n\n    let uri = \"http://stackoverflow.com\".parse().unwrap();\n    let work = client.get(uri).map(|res| {\n        res.status()\n    });\n\n    match core.run(work) {\n        Ok(status) =&gt; println!(\"Status: {}\", status),\n        Err(e) =&gt; println!(\"Error: {:?}\", e)\n    }\n}\n</code></pre>\n\n<p>This is not a duplicate of <a href=\"https://stackoverflow.com/questions/41614923/how-to-reach-an-https-site-via-proxy-with-hyper\">How to reach an HTTPS site via proxy with Hyper?</a> because I am asking about the new version of Hyper 0.11 that has a totally different API which is not compatible with previous versions.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1501082441, "post_id": 45331172, "comment_id": 77624089, "body": "<code>step_value</code> is passed by reference for nothing but show an example with non-trivial lifetime."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1501082408, "creation_date": 1501082408, "answer_id": 45331172, "question_id": 45330614, "link": "https://stackoverflow.com/questions/45330614/how-to-understand-this-rust-function-that-returns-another-function/45331172#45331172", "title": "How to understand this Rust function that returns another function?", "body": "<p>There's a prohibition against asking more than one question, but since these all fall under \"what does this piece of code mean\", I won't complain.  Also, it <em>does</em> happen to compress quite a bit of weirdness into one relatively small, not terribly unusual snippet.</p>\n\n<blockquote>\n  <p>Why is <code>step_value</code> passed in as a reference?</p>\n</blockquote>\n\n<p>No idea.  It just is.  It <em>could</em> be passed by-value without significantly altering the semantics of the code.  But it <em>is</em> being passed by reference, and that's the cause of all the other lifetime-related issues.</p>\n\n<blockquote>\n  <p>Why is the function being returned boxed?</p>\n</blockquote>\n\n<p>It's not returning a function.  Functions are defined by <code>fn</code>.  It's returning a closure.  The problem there is that every closure is actually an instance of an anonymous type (sometimes called a \"Voldemort Type\") for performance reasons.  Anonymous types are a problem because you can't name them, but you <em>have</em> to name your return type.</p>\n\n<p>The way around this is to return a trait object instead.  In this case, it's returning a <code>Fn</code>.  There is also <code>FnMut</code> and <code>FnOnce</code>.  It's returning it boxed because bare trait objects can't be passed around by-value, so trait objects <em>always</em> have to be behind some kind of pointer (be that <code>Box</code>, <code>&amp;</code>, <code>Rc</code>, <em>etc.</em>).</p>\n\n<p>They can't be passed around by-value because the compiler can't work out how big it's going to be, which makes moving them around almost impossible.  After that, the train of logic diverts straight into \"how the compiler is implemented\" territory which is somewhat out of scope here.</p>\n\n<blockquote>\n  <p>How to interpret the unconventional way to write a function type (as <code>Fn(i32) -&gt; i32 + 'a</code>) ?</p>\n</blockquote>\n\n<p>There's nothing unconventional about it.  Not for Rust, anyway, and since this is in Rust, other how other languages do it isn't relevant.</p>\n\n<p>Let's ignore the <code>+ 'a</code> for a moment, since that's actually something else.  The <code>Fn(i32) -&gt; i32</code> is the important part.  Every \"callable\" thing in Rust implements one or more of the <code>Fn</code>, <code>FnMut</code>, and <code>FnOnce</code> traits, which is how Rust expresses the idea of being able to call something.  The stuff inside the parens are the arguments, the thing after <code>-&gt;</code> is the return type, just like functions.</p>\n\n<p>You can learn more about these traits in the question <a href=\"https://stackoverflow.com/questions/30177395/when-does-a-closure-implement-fn-fnmut-and-fnonce\">\"When does a closure implement Fn, FnMut and FnOnce?\"</a>.</p>\n\n<blockquote>\n  <p>Why is <code>'a</code> written as a generic (<code>&lt;'a&gt;</code>) but \"added\" in the return type (<code>+ 'a</code>) ?</p>\n</blockquote>\n\n<p>Firstly, because lifetimes are part of the type system.  Hence, they go in the generic parameter list (the thing inside <code>&lt;...&gt;</code>).</p>\n\n<p>Secondly, because the compiler has to understand how long the trait object inside the <code>Box</code> is going to be valid for.  If you have <code>Box&lt;SomeTrait&gt;</code>, how long is the compiler allowed to let that value exist?  Normally, that information would be part of the type, but if you're using a trait, then the compiler doesn't <em>know</em> which type is being used.  Remember, you can make a <code>Box&lt;SomeTrait&gt;</code> out of <em>any</em> <code>Box&lt;T&gt;</code> where <code>T</code> implements <code>SomeTrait</code>.</p>\n\n<p>In this case, the closure is going to hold on to the <code>step_value</code> borrow, meaning it <em>must not</em> outlive the lifetime of that borrow (which is <code>'a</code>).  But if the type was <em>just</em> <code>Box&lt;Fn(i32) -&gt; i32&gt;</code>, the compiler wouldn't have that information.  So, there is syntax for specifying that whatever the type hiding behind a trait object is, it <em>cannot</em> outlive a given lifetime.</p>\n\n<p>That's what the <code>+ 'a</code> is saying: \"this is a boxed value that implements the <code>Fn(i32) -&gt; i32</code> trait, and it <em>cannot</em> outlive the lifetime <code>'a</code>\".</p>\n\n<blockquote>\n  <p>What is the meaning of the move and what is being moved here?</p>\n</blockquote>\n\n<p>Normally, the compiler tries to guess what it has to do to make a closure work, but it can't always get it right.  Where possible, it tries to borrow things captured by the closure.  So when you use <code>step_value</code> inside the closure, the compiler would normally just borrow it.</p>\n\n<p>That wouldn't be an issue, <em>except</em> that you're returning the closure out of the function.  This automatic borrow would only last for the lifetime of the function, which isn't long enough.  To fix this, instead of borrowing <code>step_value</code>, you can <em>move</em> it into the closure.</p>\n\n<p><strong>Bonus thing you might be wondering.</strong></p>\n\n<blockquote>\n  <p>If you don't write the <code>+ 'a</code> in <code>Box&lt;Trait + 'a&gt;</code>, what would normally happen?</p>\n</blockquote>\n\n<p>Actually, the compiler has a heuristic here.  By default, <em>every</em> trait object has an attached lifetime.  It's inherited from the pointer that wraps it.  So, <code>&amp;'a Trait</code> is really <code>&amp;'a (Trait + 'a)</code>.  <code>Box</code> doesn't have a lifetime parameter of its own, so it gets <code>'static</code> (<em>i.e.</em> <code>Box&lt;Trait&gt;</code> is <code>Box&lt;Trait + 'static&gt;</code>), which means that by default, boxed trait objects cannot contain any non-<code>'static</code> borrows.</p>\n"}, {"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 2, "last_activity_date": 1501082486, "creation_date": 1501082486, "answer_id": 45331206, "question_id": 45330614, "link": "https://stackoverflow.com/questions/45330614/how-to-understand-this-rust-function-that-returns-another-function/45331206#45331206", "title": "How to understand this Rust function that returns another function?", "body": "<blockquote>\n  <p>Why is <code>step_value</code> passed in as a reference?</p>\n</blockquote>\n\n<p>There is no good reason for this. Passing it in by value makes everything much easier. However, the example in question might have done it because you can't do that for every type, just those that are <code>Copy</code>.</p>\n\n<blockquote>\n  <p>Why is the function being returned boxed?</p>\n</blockquote>\n\n<p>The type of a lambda cannot be named, and thus it can't be returned from a function. So you must return a trait object (<code>Fn</code> is a trait) and to do that you need a box. (With <code>impl Trait</code> you won't need the box anymore.)</p>\n\n<blockquote>\n  <p>How to interpret the unconventional way to write a function type (as <code>Fn(i32) -&gt; i32 + 'a)</code> ?</p>\n</blockquote>\n\n<p><code>Fn</code> has a bit of syntactic sugar where the syntax <code>Fn(arg1, arg2) -&gt; ret</code> is shorthand for (I think) <code>Fn&lt;(arg1, arg2), Output=ret&gt;</code>. The <code>+</code> above has a lower precedence than the error and isn't part of the <code>Fn</code> constraint; instead it is a constraint combination, meaning that the type in the <code>Box</code> must be both a <code>Fn(i32) -&gt; i32</code> and have lifetime <code>'a</code>.</p>\n\n<blockquote>\n  <p>Why is <code>'a</code> written as a generic (<code>&lt;'a&gt;</code>) but \"added\" in the return type (<code>+ 'a</code>) ?</p>\n</blockquote>\n\n<p>Lifetime parameters must be declared in the generic parameter section of the function (or type), thus the <code>&lt;'a&gt;</code>. Then it occurs in the reference type of the argument (<code>&amp; 'a i32</code>), and finally as an additional constraint in the <code>Box</code>.</p>\n\n<blockquote>\n  <p>What is the meaning of <code>move</code> and what is being moved here?</p>\n</blockquote>\n\n<p>It makes the closure a move closure, which means the things it captures are moved into the closure instead of being captured by reference. In this example, however, note that what is being moved is <code>step_value</code>, which is itself a reference!</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 489, "favorite_count": 0, "accepted_answer_id": 45331172, "answer_count": 2, "score": 4, "last_activity_date": 1501084411, "creation_date": 1501080964, "last_edit_date": 1501084411, "question_id": 45330614, "link": "https://stackoverflow.com/questions/45330614/how-to-understand-this-rust-function-that-returns-another-function", "title": "How to understand this Rust function that returns another function?", "body": "<p>While <a href=\"http://blog.madhukaraphatak.com/functional-programming-in-rust-part-1/\" rel=\"nofollow noreferrer\">reading</a> about Rust, I ran into an example function that takes a number and returns a function that adds that number to another number. </p>\n\n<pre><code>fn higher_order_fn_return&lt;'a&gt;(step_value: &amp;'a i32) -&gt; Box&lt;Fn(i32) -&gt; i32 + 'a&gt; {\n    Box::new(move |x: i32| x + step_value)\n}\n</code></pre>\n\n<p>There are so many Rust-specific mechanisms here I can't make sense of it. I'm sure some of it has to do with lifetime management but the reasons why this must be written this way eludes me. A few questions:</p>\n\n<ul>\n<li>Why is <code>step_value</code> passed in as a reference?</li>\n<li>Why is the function being returned boxed?</li>\n<li>How to interpret the unconventional way to write a function type (as <code>Fn(i32) -&gt; i32 + 'a</code>) ?</li>\n<li>Why is <code>'a</code> written as a generic  (<code>&lt;'a&gt;</code>) but \"added\" in the return type (<code>+ 'a</code>) ?</li>\n<li>What is the meaning of <code>move</code> and what is being moved here?</li>\n</ul>\n"}, {"tags": ["iterator", "rust", "closures", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501084897, "post_id": 45331303, "comment_id": 77625996, "body": "This changes the (presumably desired) logic. I assume the filter should &quot;dynamically&quot; update with each iteration."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501086991, "post_id": 45331303, "comment_id": 77627487, "body": "@Shepmaster I was under the impression that the expectation was that by the time the body of the loop is executed the filter has already done its job (hence the question why the borrow is still in force inside it)."}, {"owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "edited": false, "score": 0, "creation_date": 1501092976, "post_id": 45331303, "comment_id": 77631269, "body": "Im my actually code <code>var</code> does not change, but it is a rather big struct, so using copy would be a bad move. Once I have some time I will test the performance with copy, as I only need a part of my struct for <code>filter()</code>. Thanks :)"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 2, "last_activity_date": 1501087649, "last_edit_date": 1501087649, "creation_date": 1501082726, "answer_id": 45331303, "question_id": 45330410, "link": "https://stackoverflow.com/questions/45330410/closures-keep-ownership-of-local-variables-for-longer-than-expected/45331303#45331303", "title": "Closures keep ownership of local variables for longer than expected", "body": "<p>Shepmaster's answer is correct (I didn't know iterators were <em>that</em> lazy), but if you don't want the <code>var</code> check (i.e. the <code>filter</code> condition) to change during the loop, you can use a <a href=\"https://doc.rust-lang.org/book/first-edition/closures.html#move-closures\" rel=\"nofollow noreferrer\"><code>move</code> closure</a>:</p>\n\n<pre><code>filter(move |&amp;x| *x &lt; var)\n</code></pre>\n\n<p>Since <code>i32</code> implements <code>Copy</code>, the value of <code>var</code> will just be copied for the purposes of the closure.</p>\n"}, {"comments": [{"owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "edited": false, "score": 0, "creation_date": 1501089018, "post_id": 45332068, "comment_id": 77628793, "body": "So if I undersand everything correctly, using filter() creates a new struct containing the closure( and borrowing val) which exists until it goes out of scope, which happens once the iterator gets called and returns None after case the for loop is over and the filter struct is out of scope, meanimg that it stops borrowing val and I can mutate it again. In case this is true, I now finally understand how iterators work. Thanks, and sry for my bad english, I&#39;m writing this on my phone."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "edited": false, "score": 1, "creation_date": 1501089193, "post_id": 45332068, "comment_id": 77628913, "body": "@SleepingPanda yes. It creates a <a href=\"https://doc.rust-lang.org/std/iter/struct.Filter.html\" rel=\"nofollow noreferrer\"><code>Filter</code></a> struct that contains the closure and the closure attempts to immutably borrow <code>var</code>. The body of the loop attempts to mutate <code>var</code>. Ownership of that struct is transferred to the <code>for</code> loop."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1501088693, "last_edit_date": 1501088693, "creation_date": 1501084861, "answer_id": 45332068, "question_id": 45330410, "link": "https://stackoverflow.com/questions/45330410/closures-keep-ownership-of-local-variables-for-longer-than-expected/45332068#45332068", "title": "Closures keep ownership of local variables for longer than expected", "body": "<blockquote>\n  <p>the closure should be over by the time I actually access</p>\n</blockquote>\n\n<p>No. <a href=\"https://doc.rust-lang.org/std/iter/index.html\" rel=\"nofollow noreferrer\">Iterators are <em>lazy</em></a>. That means that the order of operations here is:</p>\n\n<ol>\n<li>We call <code>next</code> on the combined iterator.</li>\n<li>This calls <code>next</code> on the iterator from the array. Repeat this step until the condition is passed.</li>\n<li>Run the body of the loop with the value.</li>\n<li>Repeat the whole process.</li>\n</ol>\n\n<p>You are capturing <code>val</code> inside the filter's closure. You also try to modify it in the loop. This would mean that there has to be a mutable reference and an immutable one at the same time, which is disallowed.</p>\n\n<p>You could use <code>Cell</code> to have interior mutability:</p>\n\n<pre><code>use std::cell::Cell;\n\nfn main() {\n    let array = [40];\n    let var = Cell::new(60);\n\n    for element in array.iter().filter(|&amp;&amp;x| x &lt; var.get()) {\n        var.set(var.get() + 1);\n    }\n\n    let mut var = var.get();\n    var += 1;\n}\n</code></pre>\n"}], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 45332068, "answer_count": 2, "score": 2, "last_activity_date": 1501088693, "creation_date": 1501080493, "last_edit_date": 1501084500, "question_id": 45330410, "link": "https://stackoverflow.com/questions/45330410/closures-keep-ownership-of-local-variables-for-longer-than-expected", "title": "Closures keep ownership of local variables for longer than expected", "body": "<pre><code>let array = [40];\nlet mut var = 60;\n\nfor element in array.iter().filter(|&amp;x| {*x &lt; var}) {\n    var += 1; // Error\n}\n\nvar += 1; // Fine again\n</code></pre>\n\n<p>To me this code seems completely legit, as the closure should be over by the time I actually access <code>var</code> outside of it.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `var` because it is borrowed\n --&gt; src/main.rs:6:9\n  |\n5 |     for element in array.iter().filter(|&amp;x| {*x &lt; var}) {\n  |                                        ---- borrow of `var` occurs here\n6 |         var += 1; // Error\n  |         ^^^^^^^^ assignment to borrowed `var` occurs here\n</code></pre>\n\n<p>Why is <code>var</code> still borrowed when calling <code>var += 1</code> even though the scope of the closure should be already over? The result is needed to get to <code>var += 1</code>. While it is possible to do something like this without <code>filter</code>, it causes my code to be a lot less clear, so I would like to keep using it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1501077702, "post_id": 45329011, "comment_id": 77620069, "body": "This seems unnecessarily complicated; why not just <code>let x: MyNode;</code>? Are there multiple node types?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1501084575, "post_id": 45329011, "comment_id": 77625758, "body": "@ljedrz Hmm, to prevent code duplication, such places with <code>let x: MyNode</code> a lot in my program, when I change <code>Node</code> type of this graph I have to fix all those places."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 7, "last_activity_date": 1501077817, "creation_date": 1501077817, "answer_id": 45329247, "question_id": 45329011, "link": "https://stackoverflow.com/questions/45329011/any-way-to-get-associated-type-from-struct/45329247#45329247", "title": "Any way to get associated type from struct?", "body": "<p>There are no associated type parameters in your code. <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html#associated-types\" rel=\"noreferrer\">Associated types</a> are applicable to traits only, which allow you to write this:</p>\n\n<pre><code>trait Graph {\n    type Node;\n    type Edge;\n}\n</code></pre>\n\n<p>In particular, you have ordinary type parameters in the struct (<code>N</code> and <code>E</code>). Without a common trait, you have to resolve the type manually. It's not something complicated to do here anyway.</p>\n\n<pre><code>struct GraphImpl&lt;N, E&gt; {\n    h: HashMap&lt;N, Vec&lt;E&gt;&gt;,\n}\n\ntype MyGraph = GraphImpl&lt;MyNode, MyEdge&gt;;\n\nlet x: MyNode;\n</code></pre>\n\n<p>However, if you <em>do</em> implement this <code>Graph</code> trait for your struct:</p>\n\n<pre><code>impl&lt;N, E&gt; Graph for GraphImpl&lt;N, E&gt; {\n    type Node = N;\n    type Edge = E;\n}\n</code></pre>\n\n<p>Then you can retrieve the associated type as shown in <a href=\"https://stackoverflow.com/q/35261912/1233251\">this question</a>:</p>\n\n<pre><code>let x: &lt;MyGraph as Graph&gt;::Node;\n</code></pre>\n\n<p><a href=\"https://gist.github.com/39acc531e26e79d9888a67e4135ba1f7\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1788, "favorite_count": 0, "accepted_answer_id": 45329247, "answer_count": 1, "score": 2, "last_activity_date": 1501084241, "creation_date": 1501077236, "last_edit_date": 1501084241, "question_id": 45329011, "link": "https://stackoverflow.com/questions/45329011/any-way-to-get-associated-type-from-struct", "title": "Any way to get associated type from struct?", "body": "<p>This code:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct MyNode;\nstruct MyEdge;\n\nstruct Graph&lt;N, E&gt; {\n    h: HashMap&lt;N, Vec&lt;E&gt;&gt;,\n}\n\ntype MyGraph = Graph&lt;MyNode, MyEdge&gt;;\n\nfn main() {\n\n    let x: MyGraph::N;//XXX\n\n    println!(\"Results:\")\n\n}\n</code></pre>\n\n<p>Fails to compile with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0223]: ambiguous associated type\n  --&gt; /home/xxx/.emacs.d/rust-playground/at-2017-07-26-164119/snippet.rs:21:12\n   |\n21 |     let x: MyGraph::N;\n   |            ^^^^^^^^^^ ambiguous associated type\n   |\n   = note: specify the type using the syntax `&lt;Graph&lt;MyNode, MyEdge&gt; as Trait&gt;::N`\n</code></pre>\n\n<p>Is there any way to get <code>N</code> type from <code>Graph&lt;MyNode, MyEdge&gt;</code>?</p>\n\n<p>I created an alias (<code>type =</code>) to not duplicate node type definitions,\nso it would be great at the point marked <code>XXX</code> I could write not <code>let x: MyNode</code>but <code>let x: expression with MyGraph as argument</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 2, "creation_date": 1501070124, "post_id": 45326178, "comment_id": 77614033, "body": "Please post a minimal example containing the relevant part of the code in the question itself. See <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 604, "user_id": 159995, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/01e1cfb38bd2f8b89682d19229b47786?s=128&d=identicon&r=PG", "display_name": "Werner Echezuria", "link": "https://stackoverflow.com/users/159995/werner-echezuria"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501073008, "post_id": 45326178, "comment_id": 77616215, "body": "@interjay I&#39;m a Rust newbie and this project use a lot of crates, so it&#39;s no easy for me to create the Minimal Complete and Verifiable example, I&#39;ll try to reformulate the question"}, {"owner": {"reputation": 604, "user_id": 159995, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/01e1cfb38bd2f8b89682d19229b47786?s=128&d=identicon&r=PG", "display_name": "Werner Echezuria", "link": "https://stackoverflow.com/users/159995/werner-echezuria"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501076506, "post_id": 45326178, "comment_id": 77619034, "body": "@interjay I&#39;ve manage to create the Minmal, Complete and Verifiable example (I think this fills the rule), any help will be greatly appreciate it."}], "answers": [{"comments": [{"owner": {"reputation": 604, "user_id": 159995, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/01e1cfb38bd2f8b89682d19229b47786?s=128&d=identicon&r=PG", "display_name": "Werner Echezuria", "link": "https://stackoverflow.com/users/159995/werner-echezuria"}, "edited": false, "score": 0, "creation_date": 1501089308, "post_id": 45330874, "comment_id": 77628996, "body": "Thanks, at the end it didn&#39;t work for me because the use case is more complicated that the example, however you make me understand better how macros works in Rust, giving you the right answer because it solves the problem in playground."}], "tags": [], "owner": {"reputation": 433, "user_id": 4958456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f57a7388ee6a853860e40a850c88edcc?s=128&d=identicon&r=PG&f=1", "display_name": "Viktor Chv&#225;tal", "link": "https://stackoverflow.com/users/4958456/viktor-chv%c3%a1tal"}, "is_accepted": true, "score": 1, "last_activity_date": 1501081620, "creation_date": 1501081620, "answer_id": 45330874, "question_id": 45326178, "link": "https://stackoverflow.com/questions/45326178/borrowing-error-using-macros/45330874#45330874", "title": "Borrowing error using macros", "body": "<p>The problem is that you are trying to return a reference to a <code>body</code> variable from a block which owns the <code>body</code> variable, but <code>body</code> is to be dropped at the end of that block, so the reference would outlive the data it references.</p>\n\n<p>If you want your example to compile, you can alter your code so that <code>body</code> is declared within the <code>main</code> function using ident parameter added to <code>get_body_as</code> macro:</p>\n\n<pre><code>macro_rules! get_body_as {\n    ($structure:ty, $req:expr, $error_fn:ident, $body: ident) =&gt; {\n            let $body = get_body!($req, $error_fn);\n\n            let raw_structure = borrow_function(&amp;$body);\n\n            match raw_structure {\n                Ok(structure) =&gt; structure,\n                Err(error) =&gt; \"Error\"\n            }\n    }\n}\n\nmacro_rules! get_body {\n    ($req:expr, $error_fn:ident) =&gt; {\n        {\n            let mut payload = String::new();\n\n            payload\n        }\n    }\n}\n\nfn borrow_function(s: &amp;str) -&gt; Result&lt;&amp;str, &amp;str&gt; {\n    Ok(s)\n}\n\nfn main() {\n    let function1 = |s: &amp;str| s;\n    get_body_as!(&amp;str, \"Hello\", function1, body);\n    println!(\"Hello\");\n}\n</code></pre>\n\n<p>This example compiles, but still has warnings about unused variables, I have made only minimal changes for compilation to succeed.</p>\n"}], "owner": {"reputation": 604, "user_id": 159995, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/01e1cfb38bd2f8b89682d19229b47786?s=128&d=identicon&r=PG", "display_name": "Werner Echezuria", "link": "https://stackoverflow.com/users/159995/werner-echezuria"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 45330874, "answer_count": 1, "score": 1, "last_activity_date": 1501081620, "creation_date": 1501069953, "last_edit_date": 1501080517, "question_id": 45326178, "link": "https://stackoverflow.com/questions/45326178/borrowing-error-using-macros", "title": "Borrowing error using macros", "body": "<p>I'm trying to use the code I found <a href=\"https://github.com/DavidBM/rust-webserver-example-with-iron-diesel-r2d2-serde/blob/master/src/controllers/utils.rs#L69\" rel=\"nofollow noreferrer\">here</a> with some problems, basically it's a borrowing error using some macros, the error: </p>\n\n<pre><code> Compiling playground v0.0.1 (file:///playground)\nerror[E0597]: `body` does not live long enough\n  --&gt; src/main.rs:12:3\n   |\n6  |            let raw_structure = borrow_function(&amp;body);\n   |                                                 ---- borrow occurs here\n...\n12 |        }\n   |        ^ `body` dropped here while still borrowed\n...\n31 |             let body = get_body_as!(&amp;str, \"Hello\", function1);\n   |                        -------------------------------------- in this macro invocation\n32 |             println!(\"Hello\");\n33 | }\n   | -  borrowed value needs to live until here\n</code></pre>\n\n<p>I manage to create a Minimal, Complete, and Verifiable example, I was thinking that a solution would be to transform the macros into functions, but I'm not completely sure how to do that either (<a href=\"https://play.rust-lang.org/?gist=69f73a2b9e157582121a6d7bd0d2cc1a&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a>\n):</p>\n\n<pre><code>macro_rules! get_body_as {\n    ($structure:ty, $req:expr, $error_fn:ident) =&gt; {\n        {\n            let body = get_body!($req, $error_fn);\n\n            let raw_structure = borrow_function(&amp;body);\n\n            match raw_structure {\n                Ok(structure) =&gt; structure,\n                Err(error) =&gt; \"Error\"\n            }\n        }\n    }\n}\n\nmacro_rules! get_body {\n    ($req:expr, $error_fn:ident) =&gt; {\n        {\n            let mut payload = String::new();\n\n            payload\n        }\n    }\n}\n\nfn borrow_function(s: &amp;str) -&gt; Result&lt;&amp;str, &amp;str&gt; {\n    Ok(s)\n}\nfn main() {\n    let function1 = |s: &amp;str| s;\n    let body = get_body_as!(&amp;str, \"Hello\", function1);\n    println!(\"Hello\");\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 587, "user_id": 449096, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/9cfd96e67fa9031947f36a230fec08c2?s=128&d=identicon&r=PG", "display_name": "Bob Bobbio", "link": "https://stackoverflow.com/users/449096/bob-bobbio"}, "edited": false, "score": 0, "creation_date": 1501051017, "post_id": 45319152, "comment_id": 77600219, "body": "ah, I see. I suppose that makes sense. I wonder if there is any way to stop this from being possible and force the box to live for the whole lifetime of &#39;a."}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 3, "last_activity_date": 1501102880, "last_edit_date": 1501102880, "creation_date": 1501050788, "answer_id": 45319152, "question_id": 45319021, "link": "https://stackoverflow.com/questions/45319021/lifetime-of-reference-to-boxed-value-does-not-live-long-enough/45319152#45319152", "title": "Lifetime of reference to boxed value does not live long enough", "body": "<blockquote>\n  <p>I think though that the value inside of the box does live for as long as 'a since it is a member of Foo which has exactly that lifetime.</p>\n</blockquote>\n\n<p>It is possible to assign a new box to the <code>derp</code> member, at which point the old box will be dropped and the lifetime of the value in it ends.</p>\n\n<p>I think what you are trying to do is impossible in safe Rust: cross-references between struct members are not supported.  This comes up regularly as a question, but it's just not available in the language.</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/25269597/how-to-initialize-struct-fields-which-reference-each-other\">How to initialize struct fields which reference each other</a></li>\n<li><a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></li>\n</ul>\n\n<p>You can use <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> to work around this, perhaps in combination with <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>.</p>\n"}], "owner": {"reputation": 587, "user_id": 449096, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/9cfd96e67fa9031947f36a230fec08c2?s=128&d=identicon&r=PG", "display_name": "Bob Bobbio", "link": "https://stackoverflow.com/users/449096/bob-bobbio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 0, "accepted_answer_id": 45319152, "answer_count": 1, "score": 3, "last_activity_date": 1501102972, "creation_date": 1501050358, "last_edit_date": 1501102972, "question_id": 45319021, "link": "https://stackoverflow.com/questions/45319021/lifetime-of-reference-to-boxed-value-does-not-live-long-enough", "title": "Lifetime of reference to boxed value does not live long enough", "body": "<p>The following code doesn't compile:</p>\n\n<pre><code>use std::borrow::Borrow;\n\nstruct Inner&lt;'a&gt; {\n    v: Vec&lt;&amp;'a u8&gt;,\n}\n\nstruct Foo&lt;'a&gt; {\n    inner: Inner&lt;'a&gt;,\n    derp: Box&lt;u8&gt;,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn new() -&gt; Foo&lt;'a&gt; {\n        let mut e = Foo {\n            inner: Inner { v: vec![] },\n            derp: Box::new(128),\n        };\n        e.inner.v.push(&amp;*e.derp);\n\n        return e;\n    }\n\n    fn derp(&amp;mut self) {\n        println!(\"{:?}\", self.inner.v);\n    }\n}\n\nfn main() {\n    let mut f = Foo::new();\n\n    f.derp();\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `*e.derp` does not live long enough\n  --&gt; src/main.rs:18:25\n   |\n18 |         e.inner.v.push(&amp;*e.derp);\n   |                         ^^^^^^^ does not live long enough\n...\n21 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 12:1...\n  --&gt; src/main.rs:12:1\n   |\n12 | / impl&lt;'a&gt; Foo&lt;'a&gt; {\n13 | |     fn new() -&gt; Foo&lt;'a&gt; {\n14 | |         let mut e = Foo {\n15 | |             inner: Inner { v: vec![] },\n...  |\n25 | |     }\n26 | | }\n   | |_^\n</code></pre>\n\n<p>I think that the value inside of the box does live for as long as <code>'a</code> since it is a member of <code>Foo</code>, which has exactly that lifetime.</p>\n\n<p>I wondered if the move of <code>Foo</code> at the end of the new function was confusing it, so if tried to do the append in <code>derp</code>. I get a different error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; main.rs:20:27\n   |\n20 |         self.inner.v.push(&amp; *self.derp);\n   |                           ^^^^^^^^^^\n</code></pre>\n\n<p>which gives me no indication of what lifetime the compiler thinks the boxed value has.</p>\n"}, {"tags": ["c", "rust", "inotify", "newtype"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1501029491, "post_id": 45315521, "comment_id": 77593520, "body": "Given that <code>Event</code> has <code>.name</code>, can&#39;t you use that to map back to the file already?"}, {"owner": {"reputation": 195, "user_id": 3818171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43695c967e20dac254e535ff08980858?s=128&d=identicon&r=PG&f=1", "display_name": "arsalan86", "link": "https://stackoverflow.com/users/3818171/arsalan86"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1501029592, "post_id": 45315521, "comment_id": 77593549, "body": "loganfsmyth: <code>.name</code> only returns a filename if a directory is being watched. Edited question to include that info."}], "answers": [{"comments": [{"owner": {"reputation": 195, "user_id": 3818171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43695c967e20dac254e535ff08980858?s=128&d=identicon&r=PG&f=1", "display_name": "arsalan86", "link": "https://stackoverflow.com/users/3818171/arsalan86"}, "edited": false, "score": 0, "creation_date": 1501037786, "post_id": 45316225, "comment_id": 77595562, "body": "Thanks for answer! Yes, it does seem like the library needs some work. I have managed to fork it and make a few changes that solve my use case (for now), but the issues you&#39;ve highlighted are making me think twice about deploying anything based on this library."}, {"owner": {"reputation": 3604, "user_id": 1643723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20e16eeec789c8b7281a9d7dd56b8030?s=128&d=identicon&r=PG", "display_name": "user1643723", "link": "https://stackoverflow.com/users/1643723/user1643723"}, "reply_to_user": {"reputation": 195, "user_id": 3818171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43695c967e20dac254e535ff08980858?s=128&d=identicon&r=PG&f=1", "display_name": "arsalan86", "link": "https://stackoverflow.com/users/3818171/arsalan86"}, "edited": false, "score": 0, "creation_date": 1501051584, "post_id": 45316225, "comment_id": 77600590, "body": "In defense of <code>inotify-rs</code>, many people have been hit by inotify trickiness in the past. Android <code>FileObserver</code> has precisely same issues. Java 7 <code>WatchService</code> reports inotify queue overflows, but does not properly account for the other issues. And even if the API can handle them transparently, everyone tends to forget about hardlinks\u2026"}, {"owner": {"reputation": 195, "user_id": 3818171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43695c967e20dac254e535ff08980858?s=128&d=identicon&r=PG&f=1", "display_name": "arsalan86", "link": "https://stackoverflow.com/users/3818171/arsalan86"}, "edited": false, "score": 0, "creation_date": 1501063521, "post_id": 45316225, "comment_id": 77609169, "body": "gotcha, but I&#39;m evaluating whether it would be better to just poll in my usecase"}], "tags": [], "owner": {"reputation": 3604, "user_id": 1643723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20e16eeec789c8b7281a9d7dd56b8030?s=128&d=identicon&r=PG", "display_name": "user1643723", "link": "https://stackoverflow.com/users/1643723/user1643723"}, "is_accepted": true, "score": 3, "last_activity_date": 1501089698, "last_edit_date": 1501089698, "creation_date": 1501034729, "answer_id": 45316225, "question_id": 45315521, "link": "https://stackoverflow.com/questions/45315521/how-do-i-use-the-watchdescriptor-struct-generated-by-inotify-rs-to-match-events/45316225#45316225", "title": "How do I use the WatchDescriptor struct generated by inotify-rs to match events to files that generated them?", "body": "<p>There are some substantial issues with this library:</p>\n\n<ul>\n<li>The poor choice of type to represent the inotify watch descriptor. Inotify watch descriptors are <em>not</em> Unix file descriptors, they are just some integral number, scoped per inotify file descriptor. Not a flaw by itself, but I certainly would view that as a red flag.</li>\n<li>As noted above, inotify watch descriptor values are scoped per parent inotify file descriptor. This makes the use of <code>[derive(Eq)]</code> on <code>WatchDescriptor</code> highly questionable. Looks like a straight-up bug.</li>\n<li>There is nothing to ensure that inotify watches are closed before closing the inotify descriptor. There is nothing to ensure that watch descriptors don't get reused behind your back (they can be reused after watch descriptor number wraps). Those issues probably won't bite you immediately, but\u2026 IMO, the entire inotify-rs should have been declared <code>unsafe</code>. It does not add any actual safety on top of inotify, just some sugar and pointless wrappers. It does not even implement <code>Drop</code> for the watch descriptor!</li>\n<li>The library does nothing to highlight major gotchas of inotify: event queue overflows, <code>IN_IGNORED</code> and hard links sharing the same inode (and the same inotify watch descriptors!)</li>\n</ul>\n\n<p>I recommend you to carefully read the inotify documentation and write your own wrapper if necessary. This library won't save you any trouble.</p>\n"}], "owner": {"reputation": 195, "user_id": 3818171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43695c967e20dac254e535ff08980858?s=128&d=identicon&r=PG&f=1", "display_name": "arsalan86", "link": "https://stackoverflow.com/users/3818171/arsalan86"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 2, "accepted_answer_id": 45316225, "answer_count": 1, "score": 3, "last_activity_date": 1501089698, "creation_date": 1501029021, "last_edit_date": 1501029658, "question_id": 45315521, "link": "https://stackoverflow.com/questions/45315521/how-do-i-use-the-watchdescriptor-struct-generated-by-inotify-rs-to-match-events", "title": "How do I use the WatchDescriptor struct generated by inotify-rs to match events to files that generated them?", "body": "<p>I'm using Inotify (through the inotify-rs wrapper) to watch a large number of files (not directories) across a filesystem.</p>\n\n<p>The following inotify-rs method returns a <code>WatchDescriptor</code> struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>add_watch&lt;P&gt;(&amp;mut self, path: P, mask: WatchMask) -&gt; io::Result&lt;WatchDescriptor&gt;\nwhere\n   P: AsRef&lt;Path&gt;\n</code></pre>\n\n<p><code>WatchDescriptor</code> is a newtype struct: <code>pub struct WatchDescriptor(RawFd);</code> where <code>std::os::unix::io::RawFd</code> is type <code>c_int</code>/<code>f32</code></p>\n\n<p>the Inotify subsystem returns an <code>inotify_event</code> struct each time a watch is triggered:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct inotify_event {\n        int      wd;       /* Watch descriptor */\n        uint32_t mask;     /* Mask describing event */\n        uint32_t cookie;   /* Unique cookie associating related\n                                events (for rename(2)) */\n        uint32_t len;      /* Size of name field */\n        char     name[];   /* Optional null-terminated name */\n    };\n</code></pre>\n\n<p>The \"Watch descriptor\" <code>int wd</code> matches the watch descriptor generated by the initial call to <code>add_watch()</code></p>\n\n<p>In turn, the inotify-rs wrapper returns the following event struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Event&lt;'a&gt; {    \n    pub wd    : WatchDescriptor,\n    pub mask  : EventMask,\n    pub cookie: u32,\n    pub name  : &amp;'a OsStr,\n}\n</code></pre>\n\n<p>I am trying to use <code>Event.wd</code> to match the event to a file from a list of files being watched. (<code>.name</code> only returns a filename if the event triggered on a watch for a directory) I have been unsuccessful at trying to use a <code>HashMap</code> because the struct <code>WatchDescriptor</code> does not derive the <code>Hash</code> trait. I tried to fork the crate and implement that myself, but that opened up an entirely new can of worms.</p>\n\n<p>The simplest way should be to use <code>Event.wd.0</code> to get a <code>c_int</code>/<code>i32</code> but then I have to deal with <code>error: field '0' of struct 'inotify::WatchDescriptor' is private</code></p>\n\n<p>Is there a simple way to do this, short of re-writing the wrapper to behave the way I want it, or to do a PR and wait for it to be merged?</p>\n\n<p>I have considered creating an <code>Inotify</code> for each file being watched, but in a scenario where hundreds of files could be watched, this will be prohibitively expensive.</p>\n"}, {"tags": ["forms", "rust", "http-post", "rust-rocket"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1501021376, "post_id": 45314187, "comment_id": 77591369, "body": "I&#39;m not sure, but have you tried with matching form fields in your <code>curl</code> command? You have <code>file</code> and <code>filename</code> in that <code>ConvertFile</code>, not <code>name</code> and <code>filename</code>."}, {"owner": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1501051927, "post_id": 45314187, "comment_id": 77600802, "body": "The fields in the struct was from an earlier draft auto-saved in SO. So I forgot to modify it with the current curl command when I submitted the question. Thank you for noticing this, I have modified it so it is correct."}], "answers": [{"comments": [{"owner": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "edited": false, "score": 0, "creation_date": 1501061453, "post_id": 45322046, "comment_id": 77607542, "body": "Thank you. But then the example at <a href=\"https://rocket.rs/guide/requests/#forms\" rel=\"nofollow noreferrer\">rocket.rs/guide/requests/#forms</a> must be inaccurate?"}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "reply_to_user": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "edited": false, "score": 0, "creation_date": 1501061784, "post_id": 45322046, "comment_id": 77607824, "body": "no, forms do work, just not the multipart Content-type."}, {"owner": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "edited": false, "score": 0, "creation_date": 1501062442, "post_id": 45322046, "comment_id": 77608324, "body": "Hmm, http form post using curl is what I have problems sending. <code>curl -X POST -f name=claus filename=claus.jpg</code>."}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "reply_to_user": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "edited": false, "score": 1, "creation_date": 1501063214, "post_id": 45322046, "comment_id": 77608938, "body": "this works fine for me: <code>curl -X POST --data &quot;name=clause&amp;filename=claus.jpg&quot; http:&#47;&#47;localhost:8000</code>:  <a href=\"https://gist.github.com/belst/21a6759f183cd031a2cac5846bd4bfbb\" rel=\"nofollow noreferrer\">gist.github.com/belst/21a6759f183cd031a2cac5846bd4bfbb</a>"}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "reply_to_user": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "edited": false, "score": 0, "creation_date": 1501063801, "post_id": 45322046, "comment_id": 77609395, "body": "It looks like Rocket tries to match <code>multipart&#47;form-data</code> to <code>multipart&#47;form-data; boundary=....</code> which obviously fails.    So as said in the answer, you need to use FromData and not FromForm and parse the body yourself."}, {"owner": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "edited": false, "score": 0, "creation_date": 1501064502, "post_id": 45322046, "comment_id": 77609932, "body": "I&#39;m able to upload and save a file using rocket::Data.stream_to_file(). But if I want to sent the filename as part of the form post it seems support for multipart/form-data must be added before that is possible I guess."}], "tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": true, "score": 3, "last_activity_date": 1501059290, "creation_date": 1501059290, "answer_id": 45322046, "question_id": 45314187, "link": "https://stackoverflow.com/questions/45314187/parsing-http-multipart-post-using-a-struct-in-rocket/45322046#45322046", "title": "Parsing HTTP multipart POST using a struct in Rocket", "body": "<p>Rocket does not yet support <code>multipart</code> forms.</p>\n\n<p>You can see the tracking issue here: <a href=\"https://github.com/SergioBenitez/Rocket/issues/106\" rel=\"nofollow noreferrer\">https://github.com/SergioBenitez/Rocket/issues/106</a></p>\n\n<p>A possible workaround is given in this answer: <a href=\"https://stackoverflow.com/questions/43424982/how-to-parse-multipart-forms-using-abonander-multipart-with-rocket/43427509#43427509\">How to parse multipart forms using abonander/multipart with Rocket?</a></p>\n"}], "owner": {"reputation": 4255, "user_id": 319826, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/TLA0j.jpg?s=128&g=1", "display_name": "kometen", "link": "https://stackoverflow.com/users/319826/kometen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 973, "favorite_count": 0, "closed_date": 1506694274, "accepted_answer_id": 45322046, "answer_count": 1, "score": 3, "last_activity_date": 1506694261, "creation_date": 1501019844, "last_edit_date": 1506694261, "question_id": 45314187, "link": "https://stackoverflow.com/questions/45314187/parsing-http-multipart-post-using-a-struct-in-rocket", "closed_reason": "Duplicate", "title": "Parsing HTTP multipart POST using a struct in Rocket", "body": "<p>I want to parse a HTTP POST in Rocket using a struct. Upon submitting the form it fails.</p>\n\n<p>I read the <a href=\"https://rocket.rs/guide/requests/#body-data\" rel=\"nofollow noreferrer\">body data</a> example and have this code.</p>\n\n<pre><code>#[derive(FromForm)]\nstruct ConvertFile {\n    name: String,\n    filename: String\n}\n\n#[post(\"/submit\", format = \"multipart/form-data\", data = \"&lt;form&gt;\")]\nfn submit(form: Form&lt;ConvertFile&gt;) {\n    println!(\"form field: {}\", form.get().name);\n}\n</code></pre>\n\n<p>I submit using curl:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>curl -H \"Content-Type: multipart/form-data\" -F \"name=Claus\" -F \"filename=claus.jpg\" http://localhost:8000/submit\n</code></pre>\n\n<p>and the Rocket console responds with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>multipart/form-data; boundary=------------------------8495649d6ed34d20:\n    =&gt; Matched: POST /submit multipart/form-data\n    =&gt; Warning: Form data does not have form content type.\n    =&gt; Outcome: Forward\n    =&gt; Error: No matching routes for POST /submit multipart/form-data; boundary=------------------------8495649d6ed34d2.\n    =&gt; Warning: Responding with 404 Not Found catcher.\n    =&gt; Response succeeded.\n</code></pre>\n\n<p>I want to submit a file hence the <code>multipart/form-data</code>. When trying to find the reason, I used a <code>String</code> in the struct to make it simpler. So first it responds with a <code>Matched:</code> and then no matching routes.</p>\n\n<p>This simpler POST works:</p>\n\n<pre><code>#[post(\"/convert\", format = \"text/plain\", data = \"&lt;file&gt;\")]\nfn convert_file(file: String) {\n    println!(\"file: {}\", file);\n}\n</code></pre>\n\n<p>I am using the latest nightly Rust with rustup.</p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["module", "rust", "public", "rust-crates"], "answers": [{"tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": true, "score": 2, "last_activity_date": 1501103078, "last_edit_date": 1501103078, "creation_date": 1501063018, "answer_id": 45323542, "question_id": 45313433, "link": "https://stackoverflow.com/questions/45313433/is-it-possible-to-have-a-module-which-is-partially-accessible-outside-of-a-crate/45323542#45323542", "title": "Is it possible to have a module which is partially accessible outside of a crate and partially only inside the crate?", "body": "<p>You could use the newly stabilized <a href=\"https://doc.rust-lang.org/reference/visibility-and-privacy.html#pubin-path-pubcrate-pubsuper-and-pubself\" rel=\"nofollow noreferrer\"><code>pub(restricted)</code> privacy</a>.</p>\n\n<p>This will allow you to expose types/functions to only a limited module tree, e.g.</p>\n\n<pre><code>pub struct GiantStruct { /* */ }\n\nimpl GiantStruct {\n    // Only visible to functions in the same crate\n    pub(crate) fn new() -&gt; GiantStruct { /* */ };\n\n    // this method needs to be called from outside of the crate.\n    pub fn do_stuff( /* */ ) { /* */ };\n}\n</code></pre>\n\n<p>Or you could apply this to fields on your <code>GiantStruct</code> to allow you to create it from <code>GiantStructBuilder</code>:</p>\n\n<pre><code>pub struct GiantStruct { \n    pub(crate) my_field: u32,\n}\n</code></pre>\n\n<p>Instead of <code>crate</code> you could also use <code>super</code> to specify it's only public to the parent module.</p>\n"}], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 45323542, "answer_count": 1, "score": 2, "last_activity_date": 1501103078, "creation_date": 1501016666, "last_edit_date": 1501019256, "question_id": 45313433, "link": "https://stackoverflow.com/questions/45313433/is-it-possible-to-have-a-module-which-is-partially-accessible-outside-of-a-crate", "title": "Is it possible to have a module which is partially accessible outside of a crate and partially only inside the crate?", "body": "<p>Is there any better way than just put everything in the same module?</p>\n\n<p><strong>sub_module.rs</strong></p>\n\n<pre><code>pub struct GiantStruct { /* */ }\n\nimpl GiantStruct {\n\n    // this method needs to be called from outside of the crate.\n    pub fn do_stuff( /* */ ) { /* */ };\n}\n</code></pre>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>pub mod sub_module;\nuse sub_module::GiantStruct;\n\npub struct GiantStructBuilder{ /* */ }\n\nimpl GiantStructBuilder{\n    pub fn new_giant_struct(&amp;mut self) -&gt; GiantStruct {\n        // Do stuff depending on the fields of the current\n        // GiantStructBuilder\n    }\n}\n</code></pre>\n\n<p>The problem is with <code>GiantStructBuilder::new_giant_struct()</code>; this method should create a new <code>GiantStruct</code> but to do this you either need <code>pub fn new() -&gt; GiantStruct</code> inside of <code>sub_module.rs</code> or all fields of <code>GiantStruct</code> have to be public. Both options allow for access from outside of my crate.</p>\n\n<p>While writing this question, I realized that I could do something like this:</p>\n\n<p><strong>sub_module.rs</strong></p>\n\n<pre><code>pub struct GiantStruct { /* */ }\n\nimpl GiantStruct {\n    // now you can't call this method without an appropriate\n    // GiantStructBuilder\n    pub fn new(&amp;mut GiantStructBuilder) -&gt; GiantStruct { /* */ };\n\n    pub fn do_stuff( /* */ ) { /* */ };\n}\n</code></pre>\n\n<p>However, this seems really counterintuitive as normally the caller is the thing that is acting while the function variables are what is is acted upon, which is obviously not the case when doing it like this. So I would still like to know if there is any better way...</p>\n"}, {"tags": ["http", "rust", "timeout", "hyper", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "is_accepted": true, "score": 6, "last_activity_date": 1548588521, "last_edit_date": 1548588521, "creation_date": 1501019875, "answer_id": 45314194, "question_id": 45313119, "link": "https://stackoverflow.com/questions/45313119/how-to-set-timeout-for-http-request-with-hyper-tokio-and-futures-in-rust/45314194#45314194", "title": "How to set timeout for HTTP request with hyper, tokio and futures in Rust?", "body": "<p>Answering my own question with a working code example, based on the link provided by seanmonstar to the <a href=\"https://github.com/hyperium/hyper/issues/1097\" rel=\"nofollow noreferrer\">Hyper Guide / General Timeout</a>:</p>\n\n<pre><code>extern crate hyper;\nextern crate tokio_core;\nextern crate futures;\n\nuse futures::Future;\nuse futures::future::Either;\nuse hyper::Client;\nuse tokio_core::reactor::Core;\nuse std::time::Duration;\nuse std::io;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n    let client = Client::new(&amp;handle);\n\n    let uri: hyper::Uri = \"http://stackoverflow.com\".parse().unwrap();\n    let request = client.get(uri.clone()).map(|res| res.status());\n\n    let timeout = tokio_core::reactor::Timeout::new(Duration::from_millis(170), &amp;handle).unwrap();\n\n    let work = request.select2(timeout).then(|res| match res {\n        Ok(Either::A((got, _timeout))) =&gt; Ok(got),\n        Ok(Either::B((_timeout_error, _get))) =&gt; {\n            Err(hyper::Error::Io(io::Error::new(\n                io::ErrorKind::TimedOut,\n                \"Client timed out while connecting\",\n            )))\n        }\n        Err(Either::A((get_error, _timeout))) =&gt; Err(get_error),\n        Err(Either::B((timeout_error, _get))) =&gt; Err(From::from(timeout_error)),\n    });\n\n    match core.run(work) {\n        Ok(status) =&gt; println!(\"OK: {:?}\", status),\n        Err(e) =&gt; println!(\"Error: {:?}\", e)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2548, "favorite_count": 2, "accepted_answer_id": 45314194, "answer_count": 1, "score": 4, "last_activity_date": 1548588521, "creation_date": 1501015214, "question_id": 45313119, "link": "https://stackoverflow.com/questions/45313119/how-to-set-timeout-for-http-request-with-hyper-tokio-and-futures-in-rust", "title": "How to set timeout for HTTP request with hyper, tokio and futures in Rust?", "body": "<p>How do I set a timeout for HTTP request using asynchronous Hyper (>= 0.11)?</p>\n\n<p>Here is the example of the code without timeout:</p>\n\n<pre><code>extern crate hyper;\nextern crate tokio_core;\nextern crate futures;\n\nuse futures::Future;\nuse hyper::Client;\nuse tokio_core::reactor::Core;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let client = Client::new(&amp;core.handle());\n\n    let uri = \"http://stackoverflow.com\".parse().unwrap();\n    let work = client.get(uri).map(|res| {\n        res.status()\n    });\n\n    match core.run(work) {\n        Ok(status) =&gt; println!(\"Status: {}\", status),\n        Err(e) =&gt; println!(\"Error: {:?}\", e)\n    }\n}\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "borrowing"], "comments": [{"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501053289, "post_id": 45312045, "comment_id": 77601706, "body": "@Shepmaster, all the threads will be sharing the shame iterator, with the chunks solutions all threads have a different iterator. But, if is the cheapest and/or simplest solution I&#39;ll go ahead with that :)"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1501056349, "post_id": 45312045, "comment_id": 77603832, "body": "@DanielSanchez, You can share iterator using <code>Arc&lt;Mutex&lt;...&gt;&gt;</code> <a href=\"https://play.rust-lang.org/?gist=f4026f8d8f7b4c6f250e5792c49d8dca&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1501062454, "post_id": 45312045, "comment_id": 77608332, "body": "Your code won&#39;t actually run in parallel: It will create and immediately join the threads one by one, because <code>map</code> is lazy. You should use a for loop instead, or <code>collect</code> the result."}, {"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501063267, "post_id": 45312045, "comment_id": 77608984, "body": "@interjay, ok, I&#39;ll try to collect and to just use chunks and iterate over it spamming the threads. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1501140791, "post_id": 45327907, "comment_id": 77649648, "body": "thank you so much, it really made me understand much more about rust."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1578323989, "last_edit_date": 1578323989, "creation_date": 1501074339, "answer_id": 45327907, "question_id": 45312045, "link": "https://stackoverflow.com/questions/45312045/how-can-multiple-threads-share-an-iterator/45327907#45327907", "title": "How can multiple threads share an iterator?", "body": "<p>Here's a <a href=\"/help/minimal-reproducible-example\">minimal, reproducible example</a> of your problem:</p>\n\n<pre><code>use std::thread;\n\nfn main() {\n    let src = vec![\"one\"];\n    let dst = vec![\"two\"];\n    let mut iter = src.iter().zip(dst);\n    thread::spawn(|| {\n        while let Some((s, d)) = iter.next() {\n            println!(\"{} -&gt; {}\", s, d);\n        }\n    });\n}\n</code></pre>\n\n<p>There are multiple related problems:</p>\n\n<ol>\n<li>The iterator lives on the stack and the thread's closure takes a reference to it.</li>\n<li>The closure takes a <strong>mutable</strong> reference to the iterator.</li>\n<li>The iterator itself has a reference to a <code>Vec</code> that lives on the stack.</li>\n<li>The <code>Vec</code> itself has references to string slices that <em>likely</em> live on the stack but are not guaranteed to live longer than the thread either way.</li>\n</ol>\n\n<p>Said another way, the Rust compiler has stopped you from executing four separate pieces of memory unsafety.</p>\n\n<p>A main thing to recognize is that any thread you spawn <em>might</em> outlive the place where you spawned it. Even if you call <code>join</code> right away, the compiler cannot statically verify that will happen, so it has to take the conservative path. This is the point of <a href=\"https://stackoverflow.com/q/32750829/155423\">scoped threads</a> \u2014 they <strong>guarantee</strong> the thread exits before the stack frame they were started in.</p>\n\n<p>Additionally, you are attempting to use a mutable reference in multiple concurrent threads. There's <strong>zero</strong> guarantee that the iterator (or any of the iterators it was built on) can be safely called in parallel. It's entirely possible that two threads call <code>next</code> at <em>exactly</em> the same time. The two pieces of code run in parallel and write to the same memory address. One thread writes half of the data and the other thread writes the other half, and now your program crashes at some arbitrary point in the future.</p>\n\n<p>Using a tool like <a href=\"https://crates.io/crates/crossbeam\" rel=\"nofollow noreferrer\">crossbeam</a>, your code would look something like:</p>\n\n<pre><code>use crossbeam; // 0.7.3\n\nfn main() {\n    let src = vec![\"one\"];\n    let dst = vec![\"two\"];\n\n    let mut iter = src.iter().zip(dst);\n    while let Some((s, d)) = iter.next() {\n        crossbeam::scope(|scope| {\n            scope.spawn(|_| {\n                println!(\"{} -&gt; {}\", s, d);\n            });\n        })\n        .unwrap();\n    }\n}\n</code></pre>\n\n<p>As mentioned, this will only spawn one thread at a time, waiting for it to finish. An alternative to get more parallelism (the usual point of this exercise) is to interchange the calls to <code>next</code> and <code>spawn</code>. This requires transferring ownership of <code>s</code> and <code>d</code> to the thread via the <code>move</code> keyword:</p>\n\n<pre><code>use crossbeam; // 0.7.3\n\nfn main() {\n    let src = vec![\"one\", \"alpha\"];\n    let dst = vec![\"two\", \"beta\"];\n\n    let mut iter = src.iter().zip(dst);\n    crossbeam::scope(|scope| {\n        while let Some((s, d)) = iter.next() {\n            scope.spawn(move |_| {\n                println!(\"{} -&gt; {}\", s, d);\n            });\n        }\n    })\n    .unwrap();\n}\n</code></pre>\n\n<p>If you add a sleep call inside the <code>spawn</code>, you can see the threads run in parallel.</p>\n\n<p>I'd have written it using a <code>for</code> loop, however:</p>\n\n<pre><code>let iter = src.iter().zip(dst);\ncrossbeam::scope(|scope| {\n    for (s, d) in iter {\n        scope.spawn(move |_| {\n            println!(\"{} -&gt; {}\", s, d);\n        });\n    }\n}).unwrap();\n</code></pre>\n\n<p>In the end, the iterator is exercised on the <em>current</em> thread, and each value returned from the iterator is then handed off to a new thread. The new threads are guaranteed to exit before the captured references.</p>\n\n<p>You may be interested in <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">Rayon</a>, a crate that allows easy parallelization of certain types of iterators.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28654978/155423\">Lifetime troubles sharing references between threads</a></li>\n<li><a href=\"https://stackoverflow.com/q/30562443/155423\">How do I use static lifetimes with threads?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32981382/155423\">Thread references require static lifetime?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27754877/155423\">Lifetime woes when using threads</a></li>\n<li><a href=\"https://stackoverflow.com/q/33938547/155423\">Cannot call a function in a spawned thread because it &quot;does not fulfill the required lifetime&quot;</a></li>\n</ul>\n"}], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1551, "favorite_count": 1, "accepted_answer_id": 45327907, "answer_count": 1, "score": 4, "last_activity_date": 1578323989, "creation_date": 1501011153, "last_edit_date": 1501074423, "question_id": 45312045, "link": "https://stackoverflow.com/questions/45312045/how-can-multiple-threads-share-an-iterator", "title": "How can multiple threads share an iterator?", "body": "<p>I've been working on a function that will copy a bunch of files from a source to a destination using Rust and threads. I'm getting some trouble making the threads share the iterator. I am not still used to the borrowing system:</p>\n\n<pre><code>extern crate libc;\nextern crate num_cpus;\n\nuse libc::{c_char, size_t};\nuse std::thread;\nuse std::fs::copy;\n\nfn python_str_array_2_str_vec&lt;T, U, V&gt;(_: T, _: U) -&gt; V {\n    unimplemented!()\n}\n\n#[no_mangle]\npub extern \"C\" fn copyFiles(\n    sources: *const *const c_char,\n    destinies: *const *const c_char,\n    array_len: size_t,\n) {\n    let src: Vec&lt;&amp;str&gt; = python_str_array_2_str_vec(sources, array_len);\n    let dst: Vec&lt;&amp;str&gt; = python_str_array_2_str_vec(destinies, array_len);\n    let mut iter = src.iter().zip(dst);\n    let num_threads = num_cpus::get();\n    let threads = (0..num_threads).map(|_| {\n        thread::spawn(|| while let Some((s, d)) = iter.next() {\n            copy(s, d);\n        })\n    });\n    for t in threads {\n        t.join();\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I'm getting this compilation error that I have not been able to solve:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `src` does not live long enough\n  --&gt; src/main.rs:20:20\n   |\n20 |     let mut iter = src.iter().zip(dst);\n   |                    ^^^ does not live long enough\n...\n30 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n\nerror[E0373]: closure may outlive the current function, but it borrows `**iter`, which is owned by the current function\n  --&gt; src/main.rs:23:23\n   |\n23 |         thread::spawn(|| while let Some((s, d)) = iter.next() {\n   |                       ^^                          ---- `**iter` is borrowed here\n   |                       |\n   |                       may outlive borrowed value `**iter`\n   |\nhelp: to force the closure to take ownership of `**iter` (and any other referenced variables), use the `move` keyword, as shown:\n   |         thread::spawn(move || while let Some((s, d)) = iter.next() {\n</code></pre>\n\n<p>I've seen the following questions already:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/30846340/value-does-not-live-long-enough-when-using-multiple-threads\">Value does not live long enough when using multiple threads</a>\nI'm not using <code>chunks</code>, I would like to try to share an <strong>iterator</strong> through the threads although creating chunks to pass them to the threads will be the classic solution.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/38940965/unable-to-send-a-str-between-threads-because-it-does-not-live-long-enough\">Unable to send a &amp;str between threads because it does not live long enough</a>\nI've seen some of the answers to use channels to communicate with the threads, but I'm not quite sure about using them. There should be an easier way of sharing just one object through threads.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/29983088/why-doesnt-a-local-variable-live-long-enough-for-threadscoped\">Why doesn&#39;t a local variable live long enough for thread::scoped</a>\nThis got my attention, <code>scoped</code> is supposed to fix my error, but since it is in the unstable channel I would like to see if there is another way of doing it just using <code>spawn</code>.</p>\n\n<p>Can someone explain how should I fix the lifetimes so the iterator can be accessed from the threads?</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 7957, "user_id": 243568, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6vWWf.jpg?s=128&g=1", "display_name": "Robert Hurst", "link": "https://stackoverflow.com/users/243568/robert-hurst"}, "edited": false, "score": 0, "creation_date": 1501011657, "post_id": 45312076, "comment_id": 77586720, "body": "Thanks for your help. That did the trick. I really appreciate it \ud83d\udc4d\ud83c\udffb"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1501018737, "post_id": 45312076, "comment_id": 77590409, "body": "I&#39;d say <code>self.components.keys().cloned().collect()</code> is preferred."}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 3, "last_activity_date": 1501047642, "last_edit_date": 1501047642, "creation_date": 1501011271, "answer_id": 45312076, "question_id": 45311896, "link": "https://stackoverflow.com/questions/45311896/rust-loop-on-hashmap-while-borrowing-self/45312076#45312076", "title": "Rust loop on HashMap while borrowing self", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.keys\" rel=\"nofollow noreferrer\"><code>keys()</code> method</a> returns an iterator over the keys in the hashmap.  The <code>clone()</code> call only duplicates the iterator, but not the keys themselves.  Your original approach with the <code>map</code> function looks promising.  You probably need to collect the result in a <code>Vec</code> using the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>collect()</code> method of the iterator</a>:</p>\n\n<pre><code>let keys = self.components.keys().cloned().collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>And then:</p>\n\n<pre><code>for key in keys {\n    self.components.remove(&amp;key).unwrap();\n}\n</code></pre>\n\n<p>This ensures that all the keys are copied before the removal operation starts.</p>\n"}], "owner": {"reputation": 7957, "user_id": 243568, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6vWWf.jpg?s=128&g=1", "display_name": "Robert Hurst", "link": "https://stackoverflow.com/users/243568/robert-hurst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 815, "favorite_count": 0, "accepted_answer_id": 45312076, "answer_count": 1, "score": 0, "last_activity_date": 1501047642, "creation_date": 1501010564, "last_edit_date": 1501018542, "question_id": 45311896, "link": "https://stackoverflow.com/questions/45311896/rust-loop-on-hashmap-while-borrowing-self", "title": "Rust loop on HashMap while borrowing self", "body": "<p>I have a <code>Element</code> struct that implements an update method which takes a tick duration. The struct contains a vector of components. These components are allowed to modify the element on an update. I'm getting a borrow error here and I'm not sure what to do. I tried fixing it with a block, but the block doesn't seems to satisfy the borrow checker.</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::time::Duration;\n\npub struct Element {\n    pub id: String,\n    components: HashMap&lt;String, Box&lt;Component&gt;&gt;,\n}\n\npub trait Component {\n    fn name(&amp;self) -&gt; String;\n    fn update(&amp;mut self, &amp;mut Element, Duration) {}\n}\n\nimpl Element {\n    pub fn update(&amp;mut self, tick: Duration) {\n        let keys = {\n            (&amp;mut self.components).keys().clone()\n        };\n        for key in keys {\n            let mut component = self.components.remove(key).unwrap();\n            component.update(self, Duration::from_millis(0));\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><strong>The Error</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `self.components` as mutable more than once at a time\n  --&gt; src/main.rs:20:33\n   |\n17 |             (&amp;mut self.components).keys().clone()\n   |                   --------------- first mutable borrow occurs here\n...\n20 |             let mut component = self.components.remove(key).unwrap();\n   |                                 ^^^^^^^^^^^^^^^ second mutable borrow occurs here\n...\n23 |     }\n   |     - first borrow ends here\n\nerror[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/main.rs:21:30\n   |\n17 |             (&amp;mut self.components).keys().clone()\n   |                   --------------- first mutable borrow occurs here\n...\n21 |             component.update(self, Duration::from_millis(0));\n   |                              ^^^^ second mutable borrow occurs here\n22 |         }\n23 |     }\n   |     - first borrow ends here\n</code></pre>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"tags": [], "owner": {"reputation": 73, "user_id": 2418456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f914855558ee15a52fc11b1e322a0eb?s=128&d=identicon&r=PG", "display_name": "Tridius", "link": "https://stackoverflow.com/users/2418456/tridius"}, "is_accepted": true, "score": 4, "last_activity_date": 1501010944, "creation_date": 1501010944, "answer_id": 45311996, "question_id": 45311647, "link": "https://stackoverflow.com/questions/45311647/calling-an-fnmut-callback-from-another-thread/45311996#45311996", "title": "Calling an FnMut callback from another thread", "body": "<p>After doing some more research I realized that I just had to modify <code>Option&lt;Box&lt;FnMut(String)&gt;&gt;</code> to be <code>Option&lt;Box&lt;FnMut(String) + Send&gt;&gt;</code> and copy that around my code to everywhere that the callback might be set. Learning more about trait objects!</p>\n"}], "owner": {"reputation": 73, "user_id": 2418456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f914855558ee15a52fc11b1e322a0eb?s=128&d=identicon&r=PG", "display_name": "Tridius", "link": "https://stackoverflow.com/users/2418456/tridius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 846, "favorite_count": 0, "accepted_answer_id": 45311996, "answer_count": 1, "score": 2, "last_activity_date": 1501010944, "creation_date": 1501009608, "last_edit_date": 1501009965, "question_id": 45311647, "link": "https://stackoverflow.com/questions/45311647/calling-an-fnmut-callback-from-another-thread", "title": "Calling an FnMut callback from another thread", "body": "<p>I am writing a Phoenix client library for Rust, taking advantage of the async websocket client from <a href=\"https://github.com/cyderize/rust-websocket\" rel=\"nofollow noreferrer\" title=\"rust-websockets\">rust-websockets</a>. Right now I am having trouble figuring out how to pass callback functions in to the thread that is handling the websocket traffic. I have a simplified struct:</p>\n\n<pre><code>pub struct Socket {\n    endpoint:               String,\n    connected:              Arc&lt;AtomicBool&gt;,\n    state_change_close:     Option&lt;Box&lt;FnMut(String)&gt;&gt;,\n}\n</code></pre>\n\n<p>This struct has a <code>connect</code> function laid out as follows:</p>\n\n<pre><code>pub fn connect(&amp;mut self) -&gt; Result&lt;(), String&gt; {\n    if self.connected.load(Ordering::Relaxed) {\n        return Ok(())\n    }\n\n    // Copy endpoint string, otherwise we get an error on thread::spawn\n    let connection_string = self.endpoint.clone();\n    let (usr_msg, stdin_ch) = mpsc::channel(0);\n\n    let connection_thread = thread::spawn(move || {\n        // tokio core for running event loop\n        let mut core = Core::new().unwrap();\n        let runner = ClientBuilder::new(&amp;connection_string)\n            .unwrap()\n            .add_protocol(\"rust-websocket\")\n            .async_connect_insecure(&amp;core.handle())\n            .and_then(|(duplex, _)| {\n                let (sink, stream) = duplex.split();\n                stream.filter_map(|message| {\n                    println!(\"Received Message: {:?}\", message);\n                    match message {\n                        OwnedMessage::Close(e) =&gt; {\n                            // This is the line where I am trying to call the callback\n                            if let Some(ref mut func) = self.state_change_close {\n                                (func)(e.unwrap().reason);\n                            }\n                            Some(OwnedMessage::Close(e))\n                        },\n                        _ =&gt; None,\n                    }\n                })\n                .select(stdin_ch.map_err(|_| WebSocketError::NoDataAvailable))\n                .forward(sink)\n            });\n\n        // Start the event loop\n        core.run(runner).unwrap();\n    });\n    self.connected.store(true, Ordering::Relaxed);\n    return Ok(())\n}\n</code></pre>\n\n<p>When I try to compile this code I get the following error:</p>\n\n<pre><code>error[E0277]: the trait bound `std::ops::FnMut(std::string::String) + 'static: std::marker::Send` is not satisfied\n  --&gt; src\\socket.rs:99:29\n   |\n99 |     let connection_thread = thread::spawn(move || {\n   |                             ^^^^^^^^^^^^^ the trait `std::marker::Send` is not implemented for `std::ops::FnMut(std::string::String) + 'static`\n   |\n</code></pre>\n\n<p>I have tried changing the type of <code>state_change_close</code> to a <code>Mutex&lt;Option&lt;...&gt;&gt;</code> to avoid thread safety issues, but that did not help with this problem. Is what I'm trying to do possible?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1501003147, "post_id": 45309789, "comment_id": 77581685, "body": "What would be the difference between <code>FooStruct</code> and <code>BarStruct</code>? Usually, different structs require distinct implementations."}, {"owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "edited": false, "score": 0, "creation_date": 1501007703, "post_id": 45309789, "comment_id": 77584487, "body": "Usually I use marcos for this."}], "answers": [{"comments": [{"owner": {"reputation": 925, "user_id": 4701228, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a51e05717e2b8a78ae0876d705757d41?s=128&d=identicon&r=PG&f=1", "display_name": "semore_1267", "link": "https://stackoverflow.com/users/4701228/semore-1267"}, "edited": false, "score": 1, "creation_date": 1535785118, "post_id": 45310502, "comment_id": 91202149, "body": "@ Shepmaster I have been searching for a way to do this for the longest time! Thank you"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1501005718, "last_edit_date": 1501005718, "creation_date": 1501005392, "answer_id": 45310502, "question_id": 45309789, "link": "https://stackoverflow.com/questions/45309789/implement-one-trait-for-multiple-structs-at-once/45310502#45310502", "title": "Implement one trait for multiple structs at once", "body": "<p>No, there is no way to implement one trait for multiple structs at the same time without metaprogramming like macros.</p>\n\n<p>I'd go so far as to say that there's no reason to, either. If you actually had \"the methods doing exactly the same\", then you should extract the common member variables into a <em>different</em> struct and implement the trait for that struct (if you even need the trait anymore). You can then add the new struct as a member of the originals.</p>\n\n<p>If you had something like</p>\n\n<pre><code>struct Dog {\n    hunger: u8,\n    wagging: bool,\n}\n\nstruct Cat {\n    hunger: u8,\n    meowing: bool,\n}\n\ntrait Hungry {\n    fn is_hungry(&amp;self) -&gt; bool;\n}\n</code></pre>\n\n<p>You could have </p>\n\n<pre><code>struct Dog {\n    hunger: Hunger,\n    wagging: bool,\n}\n\nstruct Cat {\n    hunger: Hunger,\n    meowing: bool,\n}\n\nstruct Hunger {\n    level: u8,\n}\n\nimpl Hunger {\n    fn is_hungry(&amp;self) -&gt; bool {\n        self.level &gt; 100\n    }\n}\n</code></pre>\n\n<p>If you needed the trait for other reasons, you can just delegate it:</p>\n\n<pre><code>trait Hungry {\n    fn is_hungry(&amp;self) -&gt; bool;\n}\n\nimpl Hungry for Hunger {\n    fn is_hungry(&amp;self) -&gt; bool {\n        self.level &gt; 100\n    }\n}\n\nimpl Hungry for Dog {\n    fn is_hungry(&amp;self) -&gt; bool { self.hunger.is_hungry() }\n}\n\nimpl Hungry for Cat {\n    fn is_hungry(&amp;self) -&gt; bool { self.hunger.is_hungry() }\n}\n</code></pre>\n\n<p>These last two implementations are still the same, but it's a minimal amount of duplication. Even then, I still hold out hope for a form of delegation to be introduced at the syntax level.</p>\n"}], "owner": {"reputation": 160, "user_id": 7512448, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/OgLAI.png?s=128&g=1", "display_name": "Zonico", "link": "https://stackoverflow.com/users/7512448/zonico"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1003, "favorite_count": 0, "closed_date": 1525731203, "accepted_answer_id": 45310502, "answer_count": 1, "score": 3, "last_activity_date": 1501005718, "creation_date": 1501002890, "last_edit_date": 1501005287, "question_id": 45309789, "link": "https://stackoverflow.com/questions/45309789/implement-one-trait-for-multiple-structs-at-once", "closed_reason": "Duplicate", "title": "Implement one trait for multiple structs at once", "body": "<p>I have trait <code>FooTrait</code> which has a bunch of functions. I also have structs <code>FooStruct</code> and <code>BarStruct</code> and want to implement <code>FooTrait</code> for both structs with the methods doing exactly the same. </p>\n\n<p>Is there a way to implement <code>FooTrait</code> for both <code>FooStruct</code> and <code>BarStruct</code> at once? I imagined something like the following:</p>\n\n<pre><code>impl FooTrait for FooStruct + BarStruct {\n    // implement methods here\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1501003788, "post_id": 45309240, "comment_id": 77582122, "body": "Quick notes: 1. An <code>i32</code> can hold values greater than <code>f32</code> can represent accurately, so you probably want to use <code>f64</code>. 2. You&#39;re adding an unknown number of values to this, so you could overflow <code>sum</code>, so you should really use an approach that will work, e.g. <a href=\"https://stackoverflow.com/a/1934266/785065\">stackoverflow.com/a/1934266/785065</a>"}], "answers": [{"tags": [], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "is_accepted": false, "score": 1, "last_activity_date": 1501006030, "last_edit_date": 1501006030, "creation_date": 1501003403, "answer_id": 45309935, "question_id": 45309240, "link": "https://stackoverflow.com/questions/45309240/how-do-i-perform-operations-on-different-numeric-types-while-computing-the-avera/45309935#45309935", "title": "How do I perform operations on different numeric types while computing the average in an idiomatic Rust manner?", "body": "<p><code>.iter()</code> returns an <code>&amp;i32</code> and Rust does not automatically dereference for type conversions \u2014 you are currently trying to change the pointer (<code>&amp;</code>) instead of changing what it's pointing to.</p>\n\n<p>Changing your code to look like this is the simplest way to make it work:</p>\n\n<pre><code>pub mod vector_calculations {\n     pub fn mean(vec: &amp;Vec&lt;i32&gt;) -&gt; f32 {\n        let mut sum: f32 = 0.0;\n\n        for el in vec.iter() {\n            sum = *el as f32 + sum; // first dereference the pointer, than cast to f32\n        }\n\n        sum / vec.len() as f32 // cast to f32\n    }\n}\n</code></pre>\n\n<p>But there are some ways to improve this kind of code:</p>\n\n<pre><code>pub mod vector_calculations {\n     pub fn mean(vec: &amp;[i32]) -&gt; f32 { // accept a slice instead of a vector\n                                       // it now allows arrays, slices, and vectors\n                                       // but now you can't add or remove items \n                                       // during this function call.\n\n        let mut sum: i32 = 0;   // as the sum is still a whole number, changing the type\n                                // should make it slightly easier to understand.\n\n        for el in vec.iter() {\n            sum = el + sum;     // now this works without changing the type of el\n                                // you don't even need to dereference el anymore\n                                // as Rust does it automatically.\n        }\n\n        sum as f32 / vec.len() as f32 // now you need to cast to f32 twice at the end\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1501005107, "last_edit_date": 1501005107, "creation_date": 1501004679, "answer_id": 45310306, "question_id": 45309240, "link": "https://stackoverflow.com/questions/45309240/how-do-i-perform-operations-on-different-numeric-types-while-computing-the-avera/45310306#45310306", "title": "How do I perform operations on different numeric types while computing the average in an idiomatic Rust manner?", "body": "<p>Yes, dereferencing values and converting numeric types is normal in Rust. These conversions help the programmer recognize that edge cases are possible. As <a href=\"https://stackoverflow.com/questions/45309240/operations-on-different-numeric-types#comment77582122_45309240\">loganfsmyth points out</a>:</p>\n\n<blockquote>\n  <p>An <code>i32</code> can hold values greater than <code>f32</code> can represent accurately</p>\n</blockquote>\n\n<p>Unfortunately, the compiler can't tell what's \"correct\" for your case, so you still have to be on guard.</p>\n\n<p>For what it's worth, I'd write your current implementation using <code>Iterator::sum</code>:</p>\n\n<pre><code>fn mean(items: &amp;[i32]) -&gt; f64 {\n    let sum: f64 = items.iter().map(|&amp;v| v as f64).sum();\n    sum / (items.len() as f64)\n}\n</code></pre>\n\n<p>You should also probably handle the case where the input is empty to avoid dividing by zero:</p>\n\n<pre><code>fn mean(items: &amp;[i32]) -&gt; Option&lt;f64&gt; {\n    let len = items.len();\n\n    if len == 0 {\n        None\n    } else {\n        let sum: f64 = items.iter().map(|&amp;v| v as f64).sum();\n        Some(sum / (len as f64))\n    }\n}\n</code></pre>\n\n<p>Using the method from <a href=\"https://stackoverflow.com/questions/1930454/what-is-a-good-solution-for-calculating-an-average-where-the-sum-of-all-values-e/1934266#1934266\">What is a good solution for calculating an average where the sum of all values exceeds a double&#39;s limits?</a>, but made a bit more iterator-heavy:</p>\n\n<pre><code>fn mean2(ary: &amp;[i32]) -&gt; f64 {\n    ary.iter().enumerate().fold(0.0, |avg, (i, &amp;x)| {\n        avg + ((x as f64 - avg) / (i + 1) as f64)\n    })\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String) or Vec (&amp;Vec) as a function argument?</a></li>\n</ul>\n"}], "owner": {"reputation": 838, "user_id": 4293498, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh4.googleusercontent.com/-vL0LI3fnVaQ/AAAAAAAAAAI/AAAAAAAAAHk/XNooT0Gtww0/photo.jpg?sz=128", "display_name": "Chris", "link": "https://stackoverflow.com/users/4293498/chris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 830, "favorite_count": 0, "accepted_answer_id": 45310306, "answer_count": 2, "score": 1, "last_activity_date": 1501006030, "creation_date": 1501001119, "last_edit_date": 1501004389, "question_id": 45309240, "link": "https://stackoverflow.com/questions/45309240/how-do-i-perform-operations-on-different-numeric-types-while-computing-the-avera", "title": "How do I perform operations on different numeric types while computing the average in an idiomatic Rust manner?", "body": "<p>I tried to implement a small module where I calculate the mean of a vector:</p>\n\n<pre><code>pub mod vector_calculations {\n    pub fn mean(vec: &amp;Vec&lt;i32&gt;) -&gt; f32 {\n        let mut sum: f32 = 0.0;\n\n        for el in vec.iter() {\n            sum = el + sum;\n        }\n\n        sum / vec.len()\n    }\n}\n</code></pre>\n\n<p>As far as I can tell from the compiler error, there are two problems with my code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;i32: std::ops::Add&lt;f32&gt;` is not satisfied\n --&gt; src/main.rs:6:22\n  |\n6 |             sum = el + sum;\n  |                      ^ no implementation for `&amp;i32 + f32`\n  |\n  = help: the trait `std::ops::Add&lt;f32&gt;` is not implemented for `&amp;i32`\n\nerror[E0277]: the trait bound `f32: std::ops::Div&lt;usize&gt;` is not satisfied\n --&gt; src/main.rs:9:13\n  |\n9 |         sum / vec.len()\n  |             ^ no implementation for `f32 / usize`\n  |\n  = help: the trait `std::ops::Div&lt;usize&gt;` is not implemented for `f32`\n</code></pre>\n\n<p>I'm trying to add a <code>&amp;i32</code> with a <code>f32</code> and I'm trying to divide a <code>f32</code> with an <code>usize</code>.</p>\n\n<p>I could solve the second error by changing the last line to:</p>\n\n<p><code>sum / (vec.len() as f32)</code></p>\n\n<p>Is this is actually how a Rust programmer would do this?</p>\n\n<p>Furthermore, I don't really know how to solve the first error. What has to be done and why?</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 1005, "user_id": 1250948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dff2715003554162c9212d2e703e4b4?s=128&d=identicon&r=PG", "display_name": "aseyboldt", "link": "https://stackoverflow.com/users/1250948/aseyboldt"}, "edited": false, "score": 0, "creation_date": 1501181836, "post_id": 45358273, "comment_id": 77679306, "body": "I don&#39;t think you are right in assuming that the design of <code>RefIter</code> itself is flawed. We can easily iterate through the iterators one at a time: <a href=\"https://gist.github.com/anonymous/b43d24bbd5649b62d0b9612cfa9bc01a\" rel=\"nofollow noreferrer\">gist.github.com/anonymous/b43d24bbd5649b62d0b9612cfa9bc01a</a>. When using an <code>Rc</code> I could just as well use an ordinary iterator, but in my use case I&#39;d like to return references to different slices of the same buffer (which also changes as new data is read)."}, {"owner": {"reputation": 1005, "user_id": 1250948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dff2715003554162c9212d2e703e4b4?s=128&d=identicon&r=PG", "display_name": "aseyboldt", "link": "https://stackoverflow.com/users/1250948/aseyboldt"}, "edited": false, "score": 0, "creation_date": 1501181933, "post_id": 45358273, "comment_id": 77679356, "body": "The problem seems to be more related to non-lexical lifetimes. We take a mutable reference to <code>current1</code> in the beginning of <code>each_zipped</code>. We then use the value to call the callback. At this point we don&#39;t need the reference anymore. We <i>should</i> be free to call <code>next_ref</code> again, but the compiler doesn&#39;t seem to notice that."}, {"owner": {"reputation": 3126, "user_id": 1290530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cec3156142d4e3e4842eb0dae1f6fce4?s=128&d=identicon&r=PG", "display_name": "Aaron Hill", "link": "https://stackoverflow.com/users/1290530/aaron-hill"}, "reply_to_user": {"reputation": 1005, "user_id": 1250948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dff2715003554162c9212d2e703e4b4?s=128&d=identicon&r=PG", "display_name": "aseyboldt", "link": "https://stackoverflow.com/users/1250948/aseyboldt"}, "edited": false, "score": 0, "creation_date": 1501182263, "post_id": 45358273, "comment_id": 77679548, "body": "I think you&#39;re right about non-lexical lifetimes - the lifetimes of <code>current1</code> and <code>current2</code> extend to the end of the function, even though they&#39;re not used after <code>callback</code>."}], "tags": [], "owner": {"reputation": 3126, "user_id": 1290530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cec3156142d4e3e4842eb0dae1f6fce4?s=128&d=identicon&r=PG", "display_name": "Aaron Hill", "link": "https://stackoverflow.com/users/1290530/aaron-hill"}, "is_accepted": false, "score": 1, "last_activity_date": 1501180775, "last_edit_date": 1501180775, "creation_date": 1501179471, "answer_id": 45358273, "question_id": 45308963, "link": "https://stackoverflow.com/questions/45308963/borrow-checker-issue-in-zip-like-function-with-a-callback/45358273#45358273", "title": "Borrow checker issue in `zip`-like function with a callback", "body": "<p>The issue with this code is that <code>RefIter</code> is being used in two ways, which are fundamentally at odds with one another:</p>\n\n<ul>\n<li>Callers of <code>next_ref</code> recieve a reference to the stored value, which is tied to the lifetime of <code>RefIter</code></li>\n<li><code>RefIter</code>'s value needs to be mutable, so that it can be incremented on each call</li>\n</ul>\n\n<p>This perfectly describes mutable aliasing (you're trying to modify 'value' while a reference to it is being held) - something which Rust is explicitly designed to prevent.</p>\n\n<p>In order to make <code>each_zipped</code> work, you'll need to modify <code>RefIter</code> to avoid handing out references to data that you wish to mutate.\nI've implemented one possibility below using a combination of <code>RefCell</code> and <code>Rc</code>:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\n// An iterator-like type, that returns references to itself\n// in next_ref\nstruct RefIter {\n    value: RefCell&lt;Rc&lt;u64&gt;&gt;\n}\n\n\nimpl RefIter {\n    fn next_ref(&amp;self) -&gt; Option&lt;Rc&lt;u64&gt;&gt; {\n        let new_val = Rc::new(**self.value.borrow() + 1);\n        *self.value.borrow_mut() = new_val;\n        Some(Rc::clone(&amp;*self.value.borrow()))\n    }\n}\n\n\n// Iterate over two RefIter simultaniously and call a callback\n// for each pair. The callback returns a tuple of bools\n// that indicate which iterators should be advanced.\nfn each_zipped&lt;F&gt;(iter1: RefIter, iter2: RefIter, callback: F)\n    where F: Fn(&amp;Option&lt;Rc&lt;u64&gt;&gt;, &amp;Option&lt;Rc&lt;u64&gt;&gt;) -&gt; (bool, bool)\n{\n    let mut current1 = iter1.next_ref();\n    let mut current2 = iter2.next_ref();\n    loop {\n        let advance_flags = callback(&amp;current1, &amp;current2);\n        match advance_flags {\n            (true, true) =&gt; {\n                current1 = iter1.next_ref();\n                current2 = iter2.next_ref();\n            },\n            (true, false) =&gt; {\n                current1 = iter1.next_ref();\n            },\n            (false, true) =&gt; {\n                current2 = iter1.next_ref();\n            },\n            (false, false) =&gt; {\n                return\n            }\n        }\n    }\n}\n\nfn main() {\n    let iter1 = RefIter { value: RefCell::new(Rc::new(3)) };\n    let iter2 = RefIter { value: RefCell::new(Rc::new(4)) };\n    each_zipped(iter1, iter2, |val1, val2| {\n        // We can't use unwrap() directly, since we're only passed a reference to an Option\n        let val1 = **val1.iter().next().unwrap();\n        let val2 = **val2.iter().next().unwrap();\n        println!(\"{}, {}\", val1, val2);\n        (val1 &lt; 10, val2 &lt; 10)\n    });\n}\n</code></pre>\n\n<p>This version of <code>RefIter</code> hands out <code>Rc</code>s to consumers, instead of references. This avoids the issue of mutable aliasing - updating <code>value</code> is done by placing\na new <code>Rc</code> into the outer <code>RefCell</code>. A side effect of this is that consumers are able to hold onto an 'old' reference to the buffer (through the returned <code>Rc</code>), even after <code>RefIter</code> has advanced.</p>\n"}, {"comments": [{"owner": {"reputation": 32230, "user_id": 119271, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a6919c8388bc3d388da7806ab415ef54?s=128&d=identicon&r=PG", "display_name": "Douglas", "link": "https://stackoverflow.com/users/119271/douglas"}, "edited": false, "score": 0, "creation_date": 1501233959, "post_id": 45359021, "comment_id": 77699993, "body": "Should the last <code>iter1.advance();</code> be <code>iter2.advance();</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 32230, "user_id": 119271, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a6919c8388bc3d388da7806ab415ef54?s=128&d=identicon&r=PG", "display_name": "Douglas", "link": "https://stackoverflow.com/users/119271/douglas"}, "edited": false, "score": 0, "creation_date": 1501247615, "post_id": 45359021, "comment_id": 77710023, "body": "@Douglas it certainly seems like it, but I was just following OP&#39;s logic. Presumably they had a method to their madness."}, {"owner": {"reputation": 1005, "user_id": 1250948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dff2715003554162c9212d2e703e4b4?s=128&d=identicon&r=PG", "display_name": "aseyboldt", "link": "https://stackoverflow.com/users/1250948/aseyboldt"}, "edited": false, "score": 2, "creation_date": 1501252708, "post_id": 45359021, "comment_id": 77713884, "body": "There&#39;s no method to that particular madness, it is a copy and paste error I made when removing stuff from the actual code. The reason for that particular version of <code>zip</code> is that fastq records (information about a snippet of DNA) often come in pairs, that are split into two different files. But sometimes those files contain a couple of unpaired records, which would lead to an ordinary zip going out of sync. Splitting the iterator is a great idea by the way. I guess I was missing the keyword <code>streaming iterator</code>, which made googling quite hard. Thanks."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1501182135, "creation_date": 1501182135, "answer_id": 45359021, "question_id": 45308963, "link": "https://stackoverflow.com/questions/45308963/borrow-checker-issue-in-zip-like-function-with-a-callback/45359021#45359021", "title": "Borrow checker issue in `zip`-like function with a callback", "body": "<blockquote>\n  <p>Since the iterators take a reference to a buffer in my use case, they can't implement the <code>Iterator</code> trait from the stdlib, but instead are used though a <code>next_ref</code> function, which is identical to <code>Iterator::next</code>, but takes an additional lifetime parameter.</p>\n</blockquote>\n\n<p>You are describing a <em>streaming iterator</em>. There is a crate for this, aptly called <a href=\"https://crates.io/crates/streaming_iterator\" rel=\"noreferrer\">streaming_iterator</a>. The documentation describes your problem (emphasis mine):</p>\n\n<blockquote>\n  <p>While the standard <code>Iterator</code> trait's functionality is based off of\n  the <code>next</code> method, <code>StreamingIterator</code>'s functionality is based off of\n  a pair of methods: <code>advance</code> and <code>get</code>. This essentially splits the\n  logic of <code>next</code> in half (in fact, <code>StreamingIterator</code>'s <code>next</code> method\n  does nothing but call <code>advance</code> followed by <code>get</code>).</p>\n  \n  <p>This is required because of Rust's lexical handling of borrows (more\n  specifically a lack of single entry, multiple exit borrows). <strong>If\n  <code>StreamingIterator</code> was defined like <code>Iterator</code> with just a required\n  <code>next</code> method, operations like <code>filter</code> would be impossible to define.</strong></p>\n</blockquote>\n\n<p>The crate does not currently have a <code>zip</code> function, and certainly not the variant you have described. However, it's easy enough to implement:</p>\n\n<pre><code>extern crate streaming_iterator;\n\nuse streaming_iterator::StreamingIterator;\n\nfn each_zipped&lt;A, B, F&gt;(mut iter1: A, mut iter2: B, callback: F)\nwhere\n    A: StreamingIterator,\n    B: StreamingIterator,\n    F: for&lt;'a&gt; Fn(Option&lt;&amp;'a A::Item&gt;, Option&lt;&amp;'a B::Item&gt;) -&gt; (bool, bool),\n{\n    iter1.advance();\n    iter2.advance();\n\n    loop {\n        let advance_flags = callback(iter1.get(), iter2.get());\n        match advance_flags {\n            (true, true) =&gt; {\n                iter1.advance();\n                iter2.advance();\n            }\n            (true, false) =&gt; {\n                iter1.advance();\n            }\n            (false, true) =&gt; {\n                iter1.advance();\n            }\n            (false, false) =&gt; return,\n        }\n    }\n}\n\nstruct RefIter {\n    value: u64\n}\n\nimpl StreamingIterator for RefIter {\n    type Item = u64;\n\n    fn advance(&amp;mut self) {\n        self.value += 1;\n    }\n\n    fn get(&amp;self) -&gt; Option&lt;&amp;Self::Item&gt; {\n        Some(&amp;self.value)\n    }\n}\n\nfn main() {\n    let iter1 = RefIter { value: 3 };\n    let iter2 = RefIter { value: 4 };\n    each_zipped(iter1, iter2, |val1, val2| {\n        let val1 = *val1.unwrap();\n        let val2 = *val2.unwrap();\n        println!(\"{}, {}\", val1, val2);\n        (val1 &lt; 10, val2 &lt; 10)\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 1005, "user_id": 1250948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dff2715003554162c9212d2e703e4b4?s=128&d=identicon&r=PG", "display_name": "aseyboldt", "link": "https://stackoverflow.com/users/1250948/aseyboldt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 2, "accepted_answer_id": 45359021, "answer_count": 2, "score": 3, "last_activity_date": 1501182135, "creation_date": 1501000310, "last_edit_date": 1501006906, "question_id": 45308963, "link": "https://stackoverflow.com/questions/45308963/borrow-checker-issue-in-zip-like-function-with-a-callback", "title": "Borrow checker issue in `zip`-like function with a callback", "body": "<p>I'm trying to implement a function that steps though two iterators at the same time, calling a function for each pair. This callback can control which of the iterators is advanced in each step by returning a <code>(bool, bool)</code> tuple. Since the iterators take a reference to a buffer in my use case, they can't implement the <code>Iterator</code> trait from the stdlib, but instead are used though a <code>next_ref</code> function, which is identical to <code>Iterator::next</code>, but takes an additional lifetime parameter.</p>\n\n<pre><code>// An iterator-like type, that returns references to itself\n// in next_ref\nstruct RefIter {\n    value: u64\n}\n\nimpl RefIter {\n    fn next_ref&lt;'a&gt;(&amp;'a mut self) -&gt; Option&lt;&amp;'a u64&gt; {\n        self.value += 1;\n        Some(&amp;self.value)\n    }\n}\n\n// Iterate over two RefIter simultaneously and call a callback\n// for each pair. The callback returns a tuple of bools\n// that indicate which iterators should be advanced.\nfn each_zipped&lt;F&gt;(mut iter1: RefIter, mut iter2: RefIter, callback: F)\n    where F: Fn(&amp;Option&lt;&amp;u64&gt;, &amp;Option&lt;&amp;u64&gt;) -&gt; (bool, bool)\n{\n    let mut current1 = iter1.next_ref();\n    let mut current2 = iter2.next_ref();\n    loop {\n        let advance_flags = callback(&amp;current1, &amp;current2);\n        match advance_flags {\n            (true, true) =&gt; {\n                current1 = iter1.next_ref();\n                current2 = iter2.next_ref();\n            },\n            (true, false) =&gt; {\n                current1 = iter1.next_ref();\n            },\n            (false, true) =&gt; {\n                current2 = iter1.next_ref();\n            },\n            (false, false) =&gt; {\n                return\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut iter1 = RefIter { value: 3 };\n    let mut iter2 = RefIter { value: 4 };\n    each_zipped(iter1, iter2, |val1, val2| {\n        let val1 = *val1.unwrap();\n        let val2 = *val2.unwrap();\n        println!(\"{}, {}\", val1, val2);\n        (val1 &lt; 10, val2 &lt; 10)\n    });\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `iter1` as mutable more than once at a time\n  --&gt; src/main.rs:28:28\n   |\n22 |     let mut current1 = iter1.next_ref();\n   |                        ----- first mutable borrow occurs here\n...\n28 |                 current1 = iter1.next_ref();\n   |                            ^^^^^ second mutable borrow occurs here\n...\n42 | }\n   | - first borrow ends here\n\nerror[E0499]: cannot borrow `iter2` as mutable more than once at a time\n  --&gt; src/main.rs:29:28\n   |\n23 |     let mut current2 = iter2.next_ref();\n   |                        ----- first mutable borrow occurs here\n...\n29 |                 current2 = iter2.next_ref();\n   |                            ^^^^^ second mutable borrow occurs here\n...\n42 | }\n   | - first borrow ends here\n\nerror[E0499]: cannot borrow `iter1` as mutable more than once at a time\n  --&gt; src/main.rs:32:28\n   |\n22 |     let mut current1 = iter1.next_ref();\n   |                        ----- first mutable borrow occurs here\n...\n32 |                 current1 = iter1.next_ref();\n   |                            ^^^^^ second mutable borrow occurs here\n...\n42 | }\n   | - first borrow ends here\n\nerror[E0499]: cannot borrow `iter1` as mutable more than once at a time\n  --&gt; src/main.rs:35:28\n   |\n22 |     let mut current1 = iter1.next_ref();\n   |                        ----- first mutable borrow occurs here\n...\n35 |                 current2 = iter1.next_ref();\n   |                            ^^^^^ second mutable borrow occurs here\n...\n42 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>I understand why it complains, but can't find a way around it. I'd appreciate any help on the subject.</p>\n\n<p>Link to this snippet in the <a href=\"https://play.rust-lang.org/?gist=4a506ba2c7d2320b8128c2f9e9f1ca32&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>.</p>\n"}, {"tags": ["rust", "heap", "dynamic-allocation"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500995499, "post_id": 45306575, "comment_id": 77576329, "body": "FWIW, <code>String</code> itself cannot use the SSO because of certain methods it exposes. You won&#39;t be able to replicate the complete API, but hopefully that doesn&#39;t prevent your use cases."}], "answers": [{"comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1500995237, "post_id": 45306868, "comment_id": 77576130, "body": "That allocates a single <code>u8</code>. OP wants a buffer of more than one."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1500995869, "post_id": 45306868, "comment_id": 77576605, "body": "@interjay that&#39;s true, but the question as asked is just how to allocate <i>a pointer</i>, and this is a valid answer to that. I&#39;d expect that people coming from search engines will find this question and answer useful."}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": false, "score": 3, "last_activity_date": 1500994897, "last_edit_date": 1500994897, "creation_date": 1500994459, "answer_id": 45306868, "question_id": 45306575, "link": "https://stackoverflow.com/questions/45306575/how-can-you-allocate-a-raw-mutable-pointer-in-stable-rust/45306868#45306868", "title": "How can you allocate a raw mutable pointer in stable Rust?", "body": "<p>What about <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.into_raw\" rel=\"nofollow noreferrer\"><code>Box::into_raw()</code></a>?</p>\n\n<pre><code>struct TypeMatches(*mut u8);\nTypeMatches(Box::into_raw(Box::new(0u8)));\n</code></pre>\n\n<p>But it's difficult to tell from your code snippet if this is what you really need.  You probably want a real allocator, and you could use <a href=\"https://doc.rust-lang.org/regex/libc/fn.malloc.html\" rel=\"nofollow noreferrer\"><code>libc::malloc</code></a> with an <code>as</code> cast, as in <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#3-get-it-from-c\" rel=\"nofollow noreferrer\">this example</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": false, "score": 2, "last_activity_date": 1500995158, "creation_date": 1500995158, "answer_id": 45307141, "question_id": 45306575, "link": "https://stackoverflow.com/questions/45306575/how-can-you-allocate-a-raw-mutable-pointer-in-stable-rust/45307141#45307141", "title": "How can you allocate a raw mutable pointer in stable Rust?", "body": "<p>There's a <a href=\"https://github.com/reem/rust-memalloc\" rel=\"nofollow noreferrer\">memalloc crate</a> which provides a stable allocation API. It's implemented by allocating memory with <code>Vec::with_capacity</code>, then extracting the pointer:</p>\n\n<pre><code>let vec = Vec::with_capacity(cap);\nlet ptr = buf.as_mut_ptr();\nmem::forget(vec);\n</code></pre>\n\n<p>To free the memory, use <code>Vec::from_raw_parts</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1500995312, "post_id": 45307156, "comment_id": 77576184, "body": "The length field is in <code>MyString</code> which also contains <code>Large</code> or <code>Small</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1500995377, "post_id": 45307156, "comment_id": 77576237, "body": "@interjay ah, indeed."}, {"owner": {"reputation": 23, "user_id": 8364344, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AK4pM.jpg?s=128&g=1", "display_name": "Anna Jokela", "link": "https://stackoverflow.com/users/8364344/anna-jokela"}, "edited": false, "score": 0, "creation_date": 1500995552, "post_id": 45307156, "comment_id": 77576361, "body": "This is exactly what I was looking for! Thank you! Somehow I did not realise I could use Vec for the allocation and deallocation."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1533234501, "last_edit_date": 1533234501, "creation_date": 1500995192, "answer_id": 45307156, "question_id": 45306575, "link": "https://stackoverflow.com/questions/45306575/how-can-you-allocate-a-raw-mutable-pointer-in-stable-rust/45307156#45307156", "title": "How can you allocate a raw mutable pointer in stable Rust?", "body": "<p>As of Rust 1.28, <a href=\"https://doc.rust-lang.org/std/alloc/fn.alloc.html\" rel=\"nofollow noreferrer\"><code>std::alloc::alloc</code></a> is stable.</p>\n\n<p>Here is an example which shows in general how it can be used.</p>\n\n<pre><code>use std::{\n    alloc::{self, Layout},\n    cmp, mem, ptr, slice, str,\n};\n\n// This really should **not** be copied\n#[derive(Copy, Clone)]\nstruct Large {\n    capacity: usize,\n    buffer: *mut u8,\n}\n\n// This really should **not** be copied\n#[derive(Copy, Clone, Default)]\nstruct Small([u8; 16]);\n\nunion Container {\n    large: Large,\n    small: Small,\n}\n\nstruct MyString {\n    len: usize,\n    container: Container,\n}\n\nimpl MyString {\n    fn new() -&gt; Self {\n        MyString {\n            len: 0,\n            container: Container {\n                small: Small::default(),\n            },\n        }\n    }\n\n    fn as_buf(&amp;self) -&gt; &amp;[u8] {\n        unsafe {\n            if self.len &lt;= 16 {\n                &amp;self.container.small.0[..self.len]\n            } else {\n                slice::from_raw_parts(self.container.large.buffer, self.len)\n            }\n        }\n    }\n\n    pub fn as_str(&amp;self) -&gt; &amp;str {\n        unsafe { str::from_utf8_unchecked(self.as_buf()) }\n    }\n\n    // Not actually UTF-8 safe!\n    fn push(&amp;mut self, c: u8) {\n        unsafe {\n            use cmp::Ordering::*;\n\n            match self.len.cmp(&amp;16) {\n                Less =&gt; {\n                    self.container.small.0[self.len] = c;\n                }\n                Equal =&gt; {\n                    let capacity = 17;\n                    let layout = Layout::from_size_align(capacity, mem::align_of::&lt;u8&gt;())\n                        .expect(\"Bad layout\");\n\n                    let buffer = alloc::alloc(layout);\n\n                    {\n                        let buf = self.as_buf();\n                        ptr::copy_nonoverlapping(buf.as_ptr(), buffer, buf.len());\n                    }\n\n                    self.container.large = Large { capacity, buffer };\n\n                    *self.container.large.buffer.offset(self.len as isize) = c;\n                }\n                Greater =&gt; {\n                    let Large {\n                        mut capacity,\n                        buffer,\n                    } = self.container.large;\n                    capacity += 1;\n\n                    let layout = Layout::from_size_align(capacity, mem::align_of::&lt;u8&gt;())\n                        .expect(\"Bad layout\");\n\n                    let buffer = alloc::realloc(buffer, layout, capacity);\n\n                    self.container.large = Large { capacity, buffer };\n\n                    *self.container.large.buffer.offset(self.len as isize) = c;\n                }\n            }\n\n            self.len += 1;\n        }\n    }\n}\n\nimpl Drop for MyString {\n    fn drop(&amp;mut self) {\n        unsafe {\n            if self.len &gt; 16 {\n                let Large { capacity, buffer } = self.container.large;\n                let layout =\n                    Layout::from_size_align(capacity, mem::align_of::&lt;u8&gt;()).expect(\"Bad layout\");\n                alloc::dealloc(buffer, layout);\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut s = MyString::new();\n\n    for _ in 0..32 {\n        s.push(b'a');\n        println!(\"{}\", s.as_str());\n    }\n}\n</code></pre>\n\n<p>I believe this code to be correct with respect to allocations, but not for anything else. Like all <code>unsafe</code> code, verify it yourself. It's also completely inefficient as it reallocates for every additional character.</p>\n\n<hr>\n\n<p>If you'd like to allocate a collection of <code>u8</code> instead of a single <code>u8</code>, you can create a <code>Vec</code> and then convert it into the constituent pieces, such as by calling <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.as_mut_ptr\" rel=\"nofollow noreferrer\"><code>as_mut_ptr</code></a>:</p>\n\n<pre><code>use std::mem;\n\nfn main() {\n    let mut foo = vec![0; 1024]; // or Vec::&lt;u8&gt;::with_capacity(1024);\n\n    let ptr = foo.as_mut_ptr();\n    let cap = foo.capacity();\n    let len = foo.len();\n    mem::forget(foo); // Avoid calling the destructor!\n\n    let foo_again = unsafe { Vec::from_raw_parts(ptr, len, cap) }; // Rebuild it to drop it\n    // Do *NOT* use `ptr` / `cap` / `len` anymore\n}\n</code></pre>\n\n<p><strong>Re</strong> allocating is a bit of a pain though; you'd have to convert back to a <code>Vec</code> and do the whole dance forwards and backwards</p>\n\n<p><del>That being said, your <code>Large</code> struct seems to be missing a <code>length</code>, which would be distinct from capacity. You could just use a <code>Vec</code> instead of writing it out.</del> I see now it's up a bit in the hierarchy.</p>\n\n<p>I wonder if having a full <code>String</code> wouldn't be a lot easier, even if it were a bit less efficient in that the length is double-counted...</p>\n\n<pre><code>union Container {\n    large: String,\n    small: Small,\n}\n</code></pre>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39550856/155423\">What is the right way to allocate data to pass to an FFI call?</a></li>\n<li><a href=\"https://stackoverflow.com/q/39250335/155423\">How do I use the Rust memory allocator for a C library that can be provided an allocator?</a></li>\n</ul>\n"}], "owner": {"reputation": 23, "user_id": 8364344, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AK4pM.jpg?s=128&g=1", "display_name": "Anna Jokela", "link": "https://stackoverflow.com/users/8364344/anna-jokela"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2983, "favorite_count": 0, "accepted_answer_id": 45307156, "answer_count": 3, "score": 2, "last_activity_date": 1533234501, "creation_date": 1500993720, "last_edit_date": 1500994642, "question_id": 45306575, "link": "https://stackoverflow.com/questions/45306575/how-can-you-allocate-a-raw-mutable-pointer-in-stable-rust", "title": "How can you allocate a raw mutable pointer in stable Rust?", "body": "<p>I was trying to build a naive implementation of a custom <code>String</code>-like struct with small string optimization. Now that unions are allowed in stable Rust, I came up with the following code:</p>\n\n<pre><code>struct Large {\n    capacity: usize,\n    buffer: *mut u8,\n}\n\nstruct Small([u8; 16]);\n\nunion Container {\n    large: Large,\n    small: Small,\n}\n\nstruct MyString {\n    len: usize,\n    container: Container,\n}\n</code></pre>\n\n<p>I can't seem to find a way how to allocate that <code>*mut u8</code>. Is it possible to do in stable Rust? It looks like using <code>alloc::heap</code> would work, but it is only available in nightly.</p>\n"}, {"tags": ["rust", "containers", "unsafe"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1500994482, "creation_date": 1500994482, "answer_id": 45306876, "question_id": 45306527, "link": "https://stackoverflow.com/questions/45306527/is-there-a-way-to-add-elements-to-a-container-while-immutably-borrowing-earlier/45306876#45306876", "title": "Is there a way to add elements to a container while immutably borrowing earlier elements?", "body": "<p>The absolute easiest thing is to introduce <em>shared ownership</em>:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let (cat, mouse, dog) = (42, 360, 420);\n    let mut container = vec![Rc::new(cat), Rc::new(mouse)];\n    let foo = container[0].clone();\n    container.push(Rc::new(dog));\n}\n</code></pre>\n\n<p>Now <code>container</code> <em>and</em> <code>foo</code> jointly own <code>cat</code>.</p>\n\n<blockquote>\n  <p>Is there any kind of existing structure that allows something like this, </p>\n</blockquote>\n\n<p>Yes, but there are always tradeoffs. Above, we used <code>Rc</code> to share ownership, which involves a reference counter.</p>\n\n<p>Another potential solution is to use an arena:</p>\n\n<pre><code>extern crate typed_arena;\n\nuse typed_arena::Arena;\n\nfn main() {\n    let container = Arena::new();\n    let cat = container.alloc(42);\n    let mouse = container.alloc(360);\n    let dog = container.alloc(420);\n}\n</code></pre>\n\n<p>This isn't indexable, you cannot take ownership of the value again, and you cannot remove a value.</p>\n\n<p>Being able to remove things from the collection <em>always</em> makes invalidating references dangerous.</p>\n\n<blockquote>\n  <p>can I implement something like this using raw pointers</p>\n</blockquote>\n\n<p>Almost certainly. Will you get it right is always the tricky point.</p>\n\n<blockquote>\n  <p>but I have to add new textures while older textures are already immutably borrowed</p>\n</blockquote>\n\n<p>Many times, you don't <em>have</em> to do any such thing. For example, you can split up your logic into phases. You have two containers; one that people take references into, and another to collect new values. At the end of the phase, you combine the two collections into one. You have to ensure that no references are used after the end of the phase, of course.</p>\n"}], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 45306876, "answer_count": 1, "score": 1, "last_activity_date": 1500994482, "creation_date": 1500993569, "last_edit_date": 1500993855, "question_id": 45306527, "link": "https://stackoverflow.com/questions/45306527/is-there-a-way-to-add-elements-to-a-container-while-immutably-borrowing-earlier", "title": "Is there a way to add elements to a container while immutably borrowing earlier elements?", "body": "<p>I'm building a GUI and I want to store all used textures in one place, but I have to add new textures while older textures are already immutably borrowed.</p>\n\n<pre><code>let (cat, mouse, dog) = (42, 360, 420); // example values\n\nlet mut container = vec![cat, mouse]; // new container\n\nlet foo = &amp;container[0]; // now container is immutably borrowed\n\ncontainer.push(dog); // error: mutable borrow\n</code></pre>\n\n<p>Is there any kind of existing structure that allows something like this,\nor can I implement something like this using raw pointers?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 1611, "user_id": 8132795, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/872a2440abf9ac210274ed3d78c40a3b?s=128&d=identicon&r=PG&f=1", "display_name": "yinnonsanders", "link": "https://stackoverflow.com/users/8132795/yinnonsanders"}, "edited": false, "score": 0, "creation_date": 1500989304, "post_id": 45304658, "comment_id": 77571173, "body": "Looks like it&#39;s been open for a while :("}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 1611, "user_id": 8132795, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/872a2440abf9ac210274ed3d78c40a3b?s=128&d=identicon&r=PG&f=1", "display_name": "yinnonsanders", "link": "https://stackoverflow.com/users/8132795/yinnonsanders"}, "edited": false, "score": 0, "creation_date": 1501051462, "post_id": 45304658, "comment_id": 77600508, "body": "@yinnonsanders the GitHub issue is now closed - you can download crates directly with the browser (see updated answer). A very swift resolution from the crates.io team :)."}, {"owner": {"reputation": 1611, "user_id": 8132795, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/872a2440abf9ac210274ed3d78c40a3b?s=128&d=identicon&r=PG&f=1", "display_name": "yinnonsanders", "link": "https://stackoverflow.com/users/8132795/yinnonsanders"}, "edited": false, "score": 0, "creation_date": 1501071051, "post_id": 45304658, "comment_id": 77614682, "body": "Wow, sounds like I should start commenting on github issues more. So glad this happened! Thank you!"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 10, "last_activity_date": 1501051301, "last_edit_date": 1501051301, "creation_date": 1500988926, "answer_id": 45304658, "question_id": 45304541, "link": "https://stackoverflow.com/questions/45304541/downloading-rust-crates-using-a-web-browser/45304658#45304658", "title": "Downloading Rust crates using a web browser", "body": "<p>You can use the following address:</p>\n\n<p><code>https://crates.io/api/v1/crates/name/version/download</code></p>\n\n<p>To download crates directly from <a href=\"https://crates.io/\" rel=\"noreferrer\">crates.io</a> - just change the <code>name</code> and <code>version</code> to download a specific version of a crate.</p>\n\n<p>The downloaded file has a .crate extension, but it's actually a tarball (.tar.gz).</p>\n"}], "owner": {"reputation": 1611, "user_id": 8132795, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/872a2440abf9ac210274ed3d78c40a3b?s=128&d=identicon&r=PG&f=1", "display_name": "yinnonsanders", "link": "https://stackoverflow.com/users/8132795/yinnonsanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1224, "favorite_count": 1, "accepted_answer_id": 45304658, "answer_count": 1, "score": 8, "last_activity_date": 1501071187, "creation_date": 1500988628, "last_edit_date": 1501071187, "question_id": 45304541, "link": "https://stackoverflow.com/questions/45304541/downloading-rust-crates-using-a-web-browser", "title": "Downloading Rust crates using a web browser", "body": "<p>Is there any way to download Rust dependencies using a web browser? I currently have internet access through my web browser but not through the command prompt (Windows).</p>\n\n<p>I know that I can set up a local fileserver and <a href=\"https://gmjosack.github.io/posts/dissecting-cratesio-minimum-mirror/\" rel=\"noreferrer\">set Cargo to use a mirror</a>, but that doesn't help if I can't get the crates in the first place.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>See related <a href=\"https://github.com/rust-lang/crates.io/issues/65\" rel=\"noreferrer\">Github issue</a>, now closed.</p>\n"}, {"tags": ["string", "vector", "rust", "swap"], "comments": [{"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1500969800, "post_id": 45297318, "comment_id": 77556241, "body": "how about a vector of string references and just change the references?"}, {"owner": {"reputation": 23, "user_id": 6408836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5417e280c4117a73664b3a3c015a696b?s=128&d=identicon&r=PG&f=1", "display_name": "PaulStrom", "link": "https://stackoverflow.com/users/6408836/paulstrom"}, "reply_to_user": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1500970212, "post_id": 45297318, "comment_id": 77556498, "body": "tried but no success"}, {"owner": {"reputation": 23, "user_id": 6408836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5417e280c4117a73664b3a3c015a696b?s=128&d=identicon&r=PG&f=1", "display_name": "PaulStrom", "link": "https://stackoverflow.com/users/6408836/paulstrom"}, "edited": false, "score": 0, "creation_date": 1500970688, "post_id": 45297318, "comment_id": 77556805, "body": "Error: cannot move out of indexed content"}], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": -1, "last_activity_date": 1500970343, "creation_date": 1500970343, "answer_id": 45297530, "question_id": 45297318, "link": "https://stackoverflow.com/questions/45297318/how-to-swap-non-copyable-elements-in-a-vector/45297530#45297530", "title": "How to swap non-copyable elements in a vector?", "body": "<p>You can use the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.swap\" rel=\"nofollow noreferrer\"><code>swap()</code> method of <code>Vec</code></a> to swap two elements directly:</p>\n\n<pre><code>v_sa_ib(j, j+1);\n</code></pre>\n\n<p>There is also a generic swap function called <a href=\"https://doc.rust-lang.org/std/mem/fn.swap.html\" rel=\"nofollow noreferrer\"><code>std::mem::swap</code></a> but it is difficult to use here because obtaining two mutable references two different elements of the same <code>Vec</code> is quite involved.</p>\n\n<p>The reason why it worked with integers is that integers implement the <code>Copy</code> trait, so Rust can automatically create new copies.</p>\n"}], "owner": {"reputation": 23, "user_id": 6408836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5417e280c4117a73664b3a3c015a696b?s=128&d=identicon&r=PG&f=1", "display_name": "PaulStrom", "link": "https://stackoverflow.com/users/6408836/paulstrom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "closed_date": 1500971136, "accepted_answer_id": 45297530, "answer_count": 1, "score": 0, "last_activity_date": 1500971246, "creation_date": 1500969700, "last_edit_date": 1500971246, "question_id": 45297318, "link": "https://stackoverflow.com/questions/45297318/how-to-swap-non-copyable-elements-in-a-vector", "closed_reason": "Duplicate", "title": "How to swap non-copyable elements in a vector?", "body": "<p>I would like to swap <code>String</code> elements of a vector</p>\n\n<pre><code>let mut v_sa: Vec&lt;String&gt; = vec![];\n...\nlet temp_a = v_sa_ib[j];\nv_sa_ib[j] = v_sa_ib[j+1];\nv_sa_ib[j+1] = temp_a;\n</code></pre>\n\n<p>It works with integers but not with <code>String</code>s. I also tried to create a second vector <code>temp_b</code> (same type of <code>temp_a</code>) and to populate it instead of swapping but i got always the same error: <code>the type of this value must be known in this context</code>.</p>\n\n<p>How can I fix it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1500944059, "post_id": 45292104, "comment_id": 77546540, "body": "@ildjarn As you can see <code>f</code> is in module, not in <code>lib.rs</code>, and <code>lib.rs</code> not reexport it, so it is not visible outside of crate."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1500944086, "post_id": 45292104, "comment_id": 77546548, "body": "Is making <code>f</code> <code>pub(crate)</code> not sufficient..?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 2, "creation_date": 1500944329, "post_id": 45292104, "comment_id": 77546612, "body": "@ildjarn Sufficient, but that is confusing. Why <code>pub</code> is not consistent."}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 2, "last_activity_date": 1500981262, "creation_date": 1500981262, "answer_id": 45301616, "question_id": 45292104, "link": "https://stackoverflow.com/questions/45292104/how-can-i-make-a-struct-non-public-and-not-move-it-from-lib-rs/45301616#45301616", "title": "How can I make a struct non-public and not move it from lib.rs?", "body": "<p>While it's not hard to catch this case, it would actually be inconsistent for <code>pub</code> to allow private types. <code>pub</code> means that the item <em>may</em> be usable outside the crate. It doesn't matter that you aren't reexporting it, it could be that you reexport it.</p>\n\n<p>The decision is local to the item declaration in order to make it easy to see whether some item could be exposed. If you are in a random file in your project, you can see whether an item is definitely not exposed by either a missing <code>pub</code> specifier or by a constraint on <code>pub</code>. This significantly increases code readability.</p>\n\n<p>For more detailed information, read the relevant <a href=\"https://github.com/rust-lang/rfcs/pull/1422\" rel=\"nofollow noreferrer\">RFC</a> or in the <a href=\"https://github.com/rust-lang/rust/issues/34537\" rel=\"nofollow noreferrer\">tracking issue for the <code>private_in_public</code> lint</a></p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 225, "favorite_count": 1, "accepted_answer_id": 45301616, "answer_count": 1, "score": 2, "last_activity_date": 1500993582, "creation_date": 1500943139, "last_edit_date": 1500993582, "question_id": 45292104, "link": "https://stackoverflow.com/questions/45292104/how-can-i-make-a-struct-non-public-and-not-move-it-from-lib-rs", "title": "How can I make a struct non-public and not move it from lib.rs?", "body": "<p>Consider this simple crate:</p>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>mod internal;\n\nuse internal::f;\n\npub(crate) struct Foo {}\n\npub fn g() {\n    f();\n}\n</code></pre>\n\n<p><strong>src/internal.rs</strong></p>\n\n<pre><code>use Foo;\n\npub fn f() -&gt; Foo {\n    unimplemented!();\n}\n</code></pre>\n\n<p>I want to export only the <code>g</code> function from the crate. I also want to define <code>Foo</code> in lib.rs to simplify reading of my source code. This is an important struct for the crate, so I want to move it to the first\nfile that any potential reader would open.</p>\n\n<p>The compiler reports:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0446]: private type `Foo` in public interface\n --&gt; src/internal.rs:3:1\n  |\n3 | / pub fn f() -&gt; Foo {\n4 | |     unimplemented!();\n5 | | }\n  | |_^ can't leak private type\n</code></pre>\n\n<p>How can I fix this issue? Why it is private, while it public for crate?</p>\n"}, {"tags": ["path", "rust", "filenames", "file-extension"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1500942035, "post_id": 45291832, "comment_id": 77546134, "body": "So you want to get everything after the leftmost dot? That would give the wrong result for e.g. &quot;Version 1.2.txt&quot;"}, {"owner": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1500943457, "post_id": 45291832, "comment_id": 77546409, "body": "@interjay, yes and therefore  I maintain a hashmap of allowed extensions, therefore <code>2.txt</code> would panic. My intention is to extract a possible extension,  in a generic way and compare against allowed-extensions hashmap."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1500944427, "post_id": 45291832, "comment_id": 77546630, "body": "<code>.tar.gz</code> isn&#39;t a standalone extension, it&#39;s a <code>.gz</code> file, and when uncompressed you get a <code>.tar</code> file. You should follow the same process. Extract the extension and the non-extension parts, and recursively process the non-extension part pulling extensions off of it."}], "answers": [{"comments": [{"owner": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "edited": false, "score": 0, "creation_date": 1500941313, "post_id": 45291872, "comment_id": 77545959, "body": "Thanks for your quick response, but I think this example would fail: <code>assert_eq!(get_extension_from_filename(&quot;abc.tar.gz&quot;.to_strin&zwnj;&#8203;g()) ,&quot;tar.gz&quot; );</code>"}, {"owner": {"reputation": 47412, "user_id": 3141234, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/78b45a835031f4ce03a6653b3262b5d3?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/3141234/alexander"}, "reply_to_user": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "edited": false, "score": 0, "creation_date": 1500998871, "post_id": 45291872, "comment_id": 77578937, "body": "@Sokio Oh, I missed that."}], "tags": [], "owner": {"reputation": 47412, "user_id": 3141234, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/78b45a835031f4ce03a6653b3262b5d3?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/3141234/alexander"}, "is_accepted": false, "score": 6, "last_activity_date": 1500941073, "creation_date": 1500941073, "answer_id": 45291872, "question_id": 45291832, "link": "https://stackoverflow.com/questions/45291832/extracting-a-file-extension-from-a-given-path-in-rust-idiomatically/45291872#45291872", "title": "Extracting a file extension from a given path in Rust idiomatically", "body": "<p>What's more idiomatic than using Rust's <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.extension\" rel=\"noreferrer\">builtin method</a> for it?</p>\n\n<pre><code>Path::new(&amp;filename).extension()\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 18, "last_activity_date": 1500945793, "last_edit_date": 1500945793, "creation_date": 1500942677, "answer_id": 45292067, "question_id": 45291832, "link": "https://stackoverflow.com/questions/45291832/extracting-a-file-extension-from-a-given-path-in-rust-idiomatically/45292067#45292067", "title": "Extracting a file extension from a given path in Rust idiomatically", "body": "<p>In idiomatic Rust the return type of a function that can fail should be an <code>Option</code> or a <code>Result</code>. In general, functions should also accept slices instead of <code>String</code>s and only create a new <code>String</code> where necessary. This reduces excessive copying and heap allocations.</p>\n\n<p>You can use the provided <code>extension()</code> method and then convert the resulting <code>OsStr</code> to a <code>&amp;str</code>:</p>\n\n<pre><code>use std::path::Path;\nuse std::ffi::OsStr;\n\nfn get_extension_from_filename(filename: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    Path::new(filename)\n        .extension()\n        .and_then(OsStr::to_str)\n}\n\nassert_eq!(get_extension_from_filename(\"abc.gz\"), Some(\"gz\"));\n</code></pre>\n\n<p>Using <code>and_then</code> is convenient here because it means you don't have to unwrap the <code>Option&lt;&amp;OsStr&gt;</code> returned by <code>extension()</code> and deal with the possibility of it being <code>None</code> before calling <code>to_str</code>. I also could have used a lambda <code>|s| s.to_str()</code> instead of <code>OsStr::to_str</code> - it might be a matter of preference or opinion as to which is more idiomatic.</p>\n\n<p>Notice that both the argument <code>&amp;str</code> and the return value are references to the original string slice created for the assertion. The returned slice cannot outlive the original slice that it is referencing, so you may need to create an owned <code>String</code> from this result if you need it to last longer.</p>\n"}], "owner": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7305, "favorite_count": 2, "accepted_answer_id": 45292067, "answer_count": 2, "score": 13, "last_activity_date": 1547550782, "creation_date": 1500940812, "last_edit_date": 1547550782, "question_id": 45291832, "link": "https://stackoverflow.com/questions/45291832/extracting-a-file-extension-from-a-given-path-in-rust-idiomatically", "title": "Extracting a file extension from a given path in Rust idiomatically", "body": "<p>I am trying to extract the extension of a file from a given String path.</p>\n\n<p>The following piece of code works, but I was wondering if there is a cleaner and more <strong>idiomatic Rust way</strong> to achieve this:</p>\n\n<pre><code>use std::path::Path;\n\nfn main() {\n\n    fn get_extension_from_filename(filename: String) -&gt; String {\n\n        //Change it to a canonical file path.\n        let path = Path::new(&amp;filename).canonicalize().expect(\n            \"Expecting an existing filename\",\n        );\n\n        let filepath = path.to_str();\n        let name = filepath.unwrap().split('/');\n        let names: Vec&lt;&amp;str&gt; = name.collect();\n        let extension = names.last().expect(\"File extension can not be read.\");\n        let extens: Vec&lt;&amp;str&gt; = extension.split(\".\").collect();\n\n        extens[1..(extens.len())].join(\".\").to_string()\n    }\n\n    assert_eq!(get_extension_from_filename(\"abc.tar.gz\".to_string()) ,\"tar.gz\" );\n    assert_eq!(get_extension_from_filename(\"abc..gz\".to_string()) ,\".gz\" );\n    assert_eq!(get_extension_from_filename(\"abc.gz\".to_string()) , \"gz\");\n\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1500928333, "post_id": 45289078, "comment_id": 77541443, "body": "Use a generic: <code>X&lt;K, H&gt;</code>, as you said. You can provide a default for the hasher e.g. <code>struct X&lt;K, H = SipHasher&gt;</code>, so that users of it don&#39;t have to provide it."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1500928704, "post_id": 45289078, "comment_id": 77541629, "body": "Ah. I think I realised what you meant. You wanted an existential type, so you can still vary the implementation and not have to pass that argument around."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1500930779, "creation_date": 1500930779, "answer_id": 45290157, "question_id": 45289078, "link": "https://stackoverflow.com/questions/45289078/how-can-i-put-a-stdhashhasher-within-a-box/45290157#45290157", "title": "How can I put a std::hash::Hasher within a Box?", "body": "<blockquote>\n  <p>I find it strange that <code>std::hash::Hasher</code> is not implemented for <code>Box</code></p>\n</blockquote>\n\n<p>I assume you mean for <code>Box&lt;T&gt; where T: std::hash::Hasher</code>. I don't know why it wouldn't be implemented, but it's probably just because no one has yet.</p>\n\n<blockquote>\n  <p>it seems weird that the <code>deref_mut</code> error complains about size known at compile time</p>\n</blockquote>\n\n<p>The problem is that the generic type <code>H</code> has the implicit <code>Sized</code> bound (everything does by default):</p>\n\n<pre><code>fn hash&lt;H&gt;(&amp;self, state: &amp;mut H)\n    where\n        H: Hasher;\n</code></pre>\n\n<p>You'd need it to say:</p>\n\n<pre><code>fn hash&lt;H&gt;(&amp;self, state: &amp;mut H)\n    where\n        H: ?Sized + Hasher;\n</code></pre>\n\n<p>Again, I don't see any reason it couldn't be changed to do this, it's just most likely that no one needed it to.</p>\n\n<hr>\n\n<p>You can add a newtype to work around the problem:</p>\n\n<pre><code>use std::hash;\n\npub struct X&lt;K&gt; {\n    hasher: BoxedHasher,\n    phantom: std::marker::PhantomData&lt;K&gt;,\n}\n\nstruct BoxedHasher(Box&lt;hash::Hasher&gt;);\n\nimpl hash::Hasher for BoxedHasher {\n    fn finish(&amp;self) -&gt; u64 {\n        self.0.finish()\n    }\n\n    fn write(&amp;mut self, bytes: &amp;[u8]) {\n        self.0.write(bytes)\n    }\n}\n\nimpl&lt;K&gt; X&lt;K&gt;\nwhere\n    K: hash::Hash,\n{\n    fn function(&amp;mut self, key: &amp;K) -&gt; usize {\n        key.hash(&amp;mut self.hasher);\n        0\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1282, "user_id": 807631, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/3120b244b19cab8e1c52845139b3fc23?s=128&d=identicon&r=PG&f=1", "display_name": "Misguided", "link": "https://stackoverflow.com/users/807631/misguided"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 225, "favorite_count": 0, "accepted_answer_id": 45290157, "answer_count": 1, "score": 2, "last_activity_date": 1500930840, "creation_date": 1500926410, "last_edit_date": 1500930840, "question_id": 45289078, "link": "https://stackoverflow.com/questions/45289078/how-can-i-put-a-stdhashhasher-within-a-box", "title": "How can I put a std::hash::Hasher within a Box?", "body": "<p>I have a data structure that looks something like this:</p>\n\n<pre><code>pub struct X&lt;K&gt; {\n    hasher: Box&lt;std::hash::Hasher&gt;,\n    phantom: std::marker::PhantomData&lt;K&gt;,\n}\n</code></pre>\n\n<p>And this is used as follows:</p>\n\n<pre><code>impl&lt;K: std::hash::Hash&gt; Trait&lt;K&gt; for X&lt;K&gt; {\n    fn function(&amp;mut self, key: &amp;K) -&gt; usize {\n        ...\n        key.hash(&amp;mut *self.hasher);\n        ...\n    }\n}\n</code></pre>\n\n<p>I am getting the following compiler error in the nightly:</p>\n\n<blockquote>\n  <p>The trait <code>std::hash::Hasher</code> is not implemented for <code>std::boxed::Box&lt;std::hash::Hasher + 'static&gt;</code></p>\n</blockquote>\n\n<p>Another approach is to use <code>key.hash(self.hasher.deref_mut())</code>, which triggers the following error:</p>\n\n<blockquote>\n  <p><code>std::hash::Hasher + 'static</code> does not have a constant size known at compile-time</p>\n</blockquote>\n\n<p>Both errors are in the <code>hash</code> call. I find it strange that <code>std::hash::Hasher</code> is not implemented for <code>Box</code>, but I wonder if this is not something done to protect me from myself. Aside from that, it seems weird that the <code>deref_mut</code> error complains about size known at compile time, considering that the <code>Box</code> <em>should be</em> a fixed size structure.</p>\n\n<p>I know that a way to fix this would be to use a template parameter, but I am avoiding this since <code>X</code> will be used in other data structures which wouldn't need the parameter, and that would mean I would have to pass around an unnecessary parameter. It seems that this is the approach taken by <code>HashMap</code>, as it uses the <code>RandomState</code> template parameter, but I would prefer to avoid that if possible.</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1500978821, "post_id": 45287134, "comment_id": 77562737, "body": "It might be worth involving people with more specialized knowledge here; maybe you should consider cross-posting the question to r/rust or the rust user forum, or even opening a bug on the cargo github repository."}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1500979135, "post_id": 45287134, "comment_id": 77562960, "body": "@MatthieuM. I posted <a href=\"https://github.com/rust-lang/cargo/issues/4323\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/4323</a> some time ago"}], "answers": [{"tags": [], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "is_accepted": true, "score": 1, "last_activity_date": 1501011893, "last_edit_date": 1501011893, "creation_date": 1501009833, "answer_id": 45311709, "question_id": 45287134, "link": "https://stackoverflow.com/questions/45287134/how-can-i-prevent-cargo-from-merging-the-same-dependency-with-different-features/45311709#45311709", "title": "How can I prevent Cargo from merging the same dependency with different features?", "body": "<p>It is known issue, related links:</p>\n\n<p><a href=\"https://github.com/rust-lang/cargo/issues/4323\" rel=\"nofollow noreferrer\">cargo issue 1</a></p>\n\n<p><a href=\"https://github.com/rust-lang/cargo/issues/3620\" rel=\"nofollow noreferrer\">cargo issue 2</a></p>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/pull/1841\" rel=\"nofollow noreferrer\">cargo rfc</a></p>\n\n<p>the short summary:</p>\n\n<blockquote>\n  <p>crate's features are supposed to be additive</p>\n</blockquote>\n\n<p>In other words each feature in crate should only append functionality,\nnot change API. Unfortunately there no good documentation descrbing this problem,\nand no automation for testing of this invariant at least at this moment.\nThis particular issue is related to <code>nom</code> bug (<a href=\"https://github.com/Geal/nom/issues/544\" rel=\"nofollow noreferrer\">github issue</a>),\nquote from there:</p>\n\n<blockquote>\n  <p>The problem here is that, when using \"simple errors\", the type <code>nom::simple_errors::Err&lt;E&gt;</code> is simply a type alias of <code>nom::ErrorKind&lt;E&gt;</code>, while with \"verbose errors\" the type <code>nom::verbose_errors::Err&lt;E&gt;</code> is a dedicated enum, so the \"with-feature\" and \"without-feature\" interfaces are incompatible.</p>\n</blockquote>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 2, "accepted_answer_id": 45311709, "answer_count": 1, "score": 9, "last_activity_date": 1501011893, "creation_date": 1500919245, "last_edit_date": 1500924271, "question_id": 45287134, "link": "https://stackoverflow.com/questions/45287134/how-can-i-prevent-cargo-from-merging-the-same-dependency-with-different-features", "title": "How can I prevent Cargo from merging the same dependency with different features?", "body": "<p>After figuring out <a href=\"https://stackoverflow.com/questions/45281538/cargo-build-of-the-same-code-spurious-compile-time-errors\">cargo build of the same code: spurious compile time errors?</a>, I want to know how to prevent such a problem:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo new feature_merge\n$ cargo add nmea\n$ cargo check &gt; /dev/null 2&gt;&amp;1 &amp;&amp; echo \"success\"\nsuccess\n$ cargo add cexpr\n$ cargo check &gt; /dev/null 2&gt;&amp;1 || echo \"failed\"\nfailed\n$ cargo rm cexpr &amp;&amp; cargo check &gt; /dev/null 2&gt;&amp;1 &amp;&amp; echo \"success\"\nsuccess\n</code></pre>\n\n<p>I remove/add the dependency without any code modification and this influences the build result.</p>\n\n<p>The source of problem, <a href=\"https://stackoverflow.com/questions/45281538/cargo-build-of-the-same-code-spurious-compile-time-errors\">as I described</a>, is that <a href=\"https://github.com/jethrogb/rust-cexpr\" rel=\"noreferrer\">cexpr</a> depends on nom like this:</p>\n\n<pre><code>nom = {version = \"^3\", features = [\"verbose-errors\"] }\n</code></pre>\n\n<p>while <a href=\"https://github.com/Dushistov/rust-nmea\" rel=\"noreferrer\">nmea</a> describes the dependency like this:</p>\n\n<pre><code>nom = \"3.1.0\"\n</code></pre>\n\n<p>With only nmea as a dependency, Cargo builds nom with one set of features,\nwhile Cargo builds cexpr and nmea against nom with another set of features.</p>\n\n<p>I want a way to prevent such wrong usage of the nmea crate which I maintain.</p>\n\n<p>I'd like a compile time error like <code>\"`nom` compiled with wrong features\"</code>, or force Cargo to build two variants of nom.</p>\n\n<p>I tried such thing in <code>nmea/Cargo.toml</code>:</p>\n\n<pre><code>nom = { version = \"3.1.0\", default-features = false }\n</code></pre>\n\n<p>This changed nothing; there's still a compile time error when cexpr and nmea are combined.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1500909689, "post_id": 45284132, "comment_id": 77531042, "body": "What did you expect? What kind of error has occurred?"}, {"owner": {"reputation": 1, "user_id": 8211994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86a941ccad17b5fd45d95239843d0566?s=128&d=identicon&r=PG&f=1", "display_name": "yue", "link": "https://stackoverflow.com/users/8211994/yue"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1500910292, "post_id": 45284132, "comment_id": 77531425, "body": "I want to use the differential dataflow for the CSV file. IT can not run . the error : <code>record</code> does not live long enough   --&gt; examples\\main.rs:44:27    | 44 |                 vec.push(&amp;record[i]);    |                           ^^^^^^ does not live long enough ... 49 |         }    |         - borrowed value only lives until here    |    = note: borrowed value must be valid for the static lifetime..."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1500979853, "post_id": 45284132, "comment_id": 77563492, "body": "Please provide a minimally reproducible code sample that other people can run. As it stands, this question leaves out crucial details, such as the type of <code>record</code>."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 8211994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86a941ccad17b5fd45d95239843d0566?s=128&d=identicon&r=PG&f=1", "display_name": "yue", "link": "https://stackoverflow.com/users/8211994/yue"}, "edited": false, "score": 0, "creation_date": 1500910880, "post_id": 45284591, "comment_id": 77531770, "body": "Thanks,  first one: String cannot use in the vector. It use &amp;str.  2: the erroe is this type don&#39;t have this methos.  3: same error: record cannot live long enough. 4: mismathched types."}, {"owner": {"reputation": 4680, "user_id": 1687321, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/eca95633fe8133df17abebc47dd4b3cb?s=128&d=identicon&r=PG", "display_name": "Janito Vaqueiro Ferreira Filho", "link": "https://stackoverflow.com/users/1687321/janito-vaqueiro-ferreira-filho"}, "reply_to_user": {"reputation": 1, "user_id": 8211994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86a941ccad17b5fd45d95239843d0566?s=128&d=identicon&r=PG&f=1", "display_name": "yue", "link": "https://stackoverflow.com/users/8211994/yue"}, "edited": false, "score": 0, "creation_date": 1500911645, "post_id": 45284591, "comment_id": 77532246, "body": "What is the type of <code>input</code>? If <code>vec</code> is a vector of strings, you could also try <code>vec.push(String::from(&amp;record[i]))</code>. Also, what are the mismatched types in 4?"}, {"owner": {"reputation": 1, "user_id": 8211994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86a941ccad17b5fd45d95239843d0566?s=128&d=identicon&r=PG&f=1", "display_name": "yue", "link": "https://stackoverflow.com/users/8211994/yue"}, "edited": false, "score": 0, "creation_date": 1500926331, "post_id": 45284591, "comment_id": 77540469, "body": "the type of input could be the vec, tuple or just the number which I have test. I&#39;m also not sure, because this is a operator  of  a framework. I think vec only can use for &amp;str. it cannot have string.  Type 4:examples\\main.rs:44:44    | 44 |                 vec.push(std::mem::replace(&amp;record[i], Default::default()));    |                                            ^^^^^^^^^^ types differ in mutability    |    = note: expected type <code>&amp;mut _</code>               found type <code>&amp;str</code>    = help: here are some functions which might fulfill your needs:            - .slice_mut_unchecked(...)"}, {"owner": {"reputation": 1, "user_id": 8211994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86a941ccad17b5fd45d95239843d0566?s=128&d=identicon&r=PG&f=1", "display_name": "yue", "link": "https://stackoverflow.com/users/8211994/yue"}, "edited": false, "score": 0, "creation_date": 1500926384, "post_id": 45284591, "comment_id": 77540502, "body": "Sorry, I don&#39;t know how to put the code in the comment.T-T"}, {"owner": {"reputation": 1, "user_id": 8211994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86a941ccad17b5fd45d95239843d0566?s=128&d=identicon&r=PG&f=1", "display_name": "yue", "link": "https://stackoverflow.com/users/8211994/yue"}, "edited": false, "score": 0, "creation_date": 1500938967, "post_id": 45284591, "comment_id": 77545469, "body": "I have solved this problem. use\uff1ainsert(*vec),  because insert(vec), vec use the record. record&#39;s life finished after push."}], "tags": [], "owner": {"reputation": 4680, "user_id": 1687321, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/eca95633fe8133df17abebc47dd4b3cb?s=128&d=identicon&r=PG", "display_name": "Janito Vaqueiro Ferreira Filho", "link": "https://stackoverflow.com/users/1687321/janito-vaqueiro-ferreira-filho"}, "is_accepted": true, "score": 1, "last_activity_date": 1500910300, "creation_date": 1500910300, "answer_id": 45284591, "question_id": 45284132, "link": "https://stackoverflow.com/questions/45284132/not-live-long-enough-with-csv-and-dataflow/45284591#45284591", "title": "Not live long enough with CSV and dataflow", "body": "<p>The problem is that you are pushing to the Vec a borrowed value: <code>&amp;record[i]</code>. The <code>&amp;</code> means borrow, and as a consequence the original value <code>record</code> must outlive the borrower <code>vec</code>.</p>\n\n<p>That might seem fine (both are in the <code>for</code> body, and thus both have the same lifetime, i.e., they both live inside the <code>for</code> body and therefore none outlive each other), but this doesn't happen because the line <code>input.insert(vec)</code> is <em>moving</em> <code>vec</code>. What this means is that <code>vec</code> now becomes owned by <code>input</code> and hence it lives as long as <code>input</code> (as far as I understand). Now, because <code>input</code> is outside the <code>for</code> body, the moved <code>vec</code> lives as long as <code>input</code> and therefore outlives the <code>record[i]</code>s.</p>\n\n<p>There are a few solutions, but all of them try to remove the dependency between <code>record</code> and <code>input</code>:</p>\n\n<ol>\n<li>If the <code>record</code> is an array of primitive values, or something that implements the <code>Copy</code> trait, you can simply omit the borrow and the value will be copied into the vector: <code>vec.push(record[i])</code>.</li>\n<li>Clone the <code>record</code> value into the vector: <code>vec.push(record[i].clone())</code>. This forces the creation of a clone, which as above, the <code>vec</code> becomes the owner, avoiding the borrow.</li>\n<li><p>If the elements in the <code>record</code> array don't implement <code>Copy</code> nor <code>Clone</code>, you have to move it. Because the value is in an array, you have to move the array fully (it can't have elements that haven't been removed). One solution is to transform it into an iterator that moves out the values one by one, and then push them into the vector:</p>\n\n<pre><code>for element in record.into_iter().take(13) {\n    vec.push(element)\n}\n</code></pre></li>\n<li><p>Replace the <code>record</code> value with a different value. One final solution in order to move only parts of the array is to replace the element in the array with something else. This means that although you remove an element from the array, you replace it with something else, and the array continues to be valid.</p>\n\n<pre><code>for i in 0..13 {\n    vec.push(std::mem::replace(&amp;record[i], Default::default()));\n}\n</code></pre>\n\n<p>You can replace <code>Default::default()</code> with another value if you want to.</p></li>\n</ol>\n\n<p>I hope this helps. I'm still a noob in Rust, so improvements and critique on the answer are accepted :)</p>\n"}], "owner": {"reputation": 1, "user_id": 8211994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86a941ccad17b5fd45d95239843d0566?s=128&d=identicon&r=PG&f=1", "display_name": "yue", "link": "https://stackoverflow.com/users/8211994/yue"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "accepted_answer_id": 45284591, "answer_count": 1, "score": -2, "last_activity_date": 1500910300, "creation_date": 1500909016, "last_edit_date": 1500909171, "question_id": 45284132, "link": "https://stackoverflow.com/questions/45284132/not-live-long-enough-with-csv-and-dataflow", "title": "Not live long enough with CSV and dataflow", "body": "<pre><code>fn main() {\n    timely::execute_from_args(std::env::args().skip(0), move |worker| {\n\n        let (mut input, probe) = worker.dataflow::&lt;_, _, _&gt;(|scope| {\n            let (input, data) = scope.new_collection();\n            let probe = data.inspect(|x| println!(\"observed data: {:?}\", x)).probe();\n\n            (input, probe)\n        });\n\n        let mut rdr = csv::ReaderBuilder::new()\n            .has_headers(false)\n            .flexible(true)\n            .delimiter(b'\\t')\n            .from_reader(io::stdin());\n\n        for result in rdr.deserialize() {\n            let record = result.expect(\"a CSV record\");\n\n            let mut vec = Vec::new();\n            for i in 0..13 {\n                vec.push(&amp;record[i]);\n\n            }\n\n            input.insert(vec);\n        }\n    });\n}\n</code></pre>\n\n<p>The error is record can not live long enough. I try to read the CSV record and read it as a vector. Then insert records in to the data flow.  I can run them separate. I can read the CSv as vector and use the data flow in other place. </p>\n"}, {"tags": ["syntax", "rust", "list-comprehension", "iterable"], "answers": [{"comments": [{"owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "edited": false, "score": 0, "creation_date": 1500906936, "post_id": 45283083, "comment_id": 77529041, "body": "Do you know about complexity ? Does appling filter and then map force too iterate twice and so double the computation time ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "edited": false, "score": 13, "creation_date": 1500907010, "post_id": 45283083, "comment_id": 77529101, "body": "@Darkaird no. Iterators are lazy and process each element only once."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 42, "last_activity_date": 1500906393, "last_edit_date": 1500906393, "creation_date": 1500906220, "answer_id": 45283083, "question_id": 45282970, "link": "https://stackoverflow.com/questions/45282970/does-rust-have-an-equivalent-to-pythons-list-comprehension-syntax/45283083#45283083", "title": "Does Rust have an equivalent to Python&#39;s list comprehension syntax?", "body": "<p>You can just use iterators:</p>\n\n<pre><code>fn main() {\n    let v1 = (0u32..9).filter(|x| x % 2 == 0).map(|x| x.pow(2)).collect::&lt;Vec&lt;_&gt;&gt;();\n    let v2 = (1..10).filter(|x| x % 2 == 0).collect::&lt;Vec&lt;u32&gt;&gt;();\n\n    println!(\"{:?}\", v1); // [0, 4, 16, 36, 64]\n    println!(\"{:?}\", v2); // [2, 4, 6, 8]\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "edited": false, "score": 1, "creation_date": 1500906668, "post_id": 45283194, "comment_id": 77528845, "body": "I had already seen this and found it really interesting but what I want is more a built-in function/syntax like @ljedrz answered."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "edited": false, "score": 3, "creation_date": 1500918740, "post_id": 45283194, "comment_id": 77536227, "body": "@Darkaird rust has a fairly lean std lib so you might not get far without additional crates."}], "tags": [], "owner": {"reputation": 25596, "user_id": 3140, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/84dbc773c808111cc4ce138bff33f482?s=128&d=identicon&r=PG", "display_name": "Jacob Krall", "link": "https://stackoverflow.com/users/3140/jacob-krall"}, "is_accepted": false, "score": 32, "last_activity_date": 1500907048, "last_edit_date": 1500907048, "creation_date": 1500906509, "answer_id": 45283194, "question_id": 45282970, "link": "https://stackoverflow.com/questions/45282970/does-rust-have-an-equivalent-to-pythons-list-comprehension-syntax/45283194#45283194", "title": "Does Rust have an equivalent to Python&#39;s list comprehension syntax?", "body": "<p><a href=\"https://docs.rs/cute/0.3.0/cute/\" rel=\"noreferrer\">cute</a> is a macro for Python-esque list and dictionary (<code>HashMap</code>) comprehensions in Rust.</p>\n\n<pre><code>#[macro_use(c)]\nextern crate cute;\n\nlet vector = c![x, for x in 1..10, if x % 2 == 0];\n</code></pre>\n"}], "owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7777, "favorite_count": 4, "accepted_answer_id": 45283083, "answer_count": 2, "score": 34, "last_activity_date": 1570517896, "creation_date": 1500905931, "last_edit_date": 1570517896, "question_id": 45282970, "link": "https://stackoverflow.com/questions/45282970/does-rust-have-an-equivalent-to-pythons-list-comprehension-syntax", "title": "Does Rust have an equivalent to Python&#39;s list comprehension syntax?", "body": "<p>Python list comprehension is really simple:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>&gt;&gt;&gt; l = [x for x in range(1, 10) if x % 2 == 0]\n&gt;&gt;&gt; [2, 4, 6, 8] \n</code></pre>\n\n<p>Does Rust have an equivalent syntax like:</p>\n\n<pre><code>let vector = vec![x for x in (1..10) if x % 2 == 0]\n// [2, 4, 6, 8]\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1500902381, "post_id": 45281538, "comment_id": 77525873, "body": "Blind shot in the dark: are you using rustup, and if you are, have you set local overrides that might be interfering?"}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1500902586, "post_id": 45281538, "comment_id": 77526012, "body": "@DK. Yes I used <code>rustup</code>, but last override command was: <code>grep -a override ~&#47;.bash_history | grep rustup | tail -n 1</code> <code>rustup override unset</code>. Any way to check if <code>override</code> still active?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1500907508, "post_id": 45281538, "comment_id": 77529439, "body": "There&#39;s <code>rustup override list</code>."}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1500908493, "post_id": 45281538, "comment_id": 77530211, "body": "@DK. <code>$ rustup override list no overrides</code>"}, {"owner": {"reputation": 4490, "user_id": 2529026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d2478ed8325bd7e5fa3aed9c27fd945?s=128&d=identicon&r=PG", "display_name": "J David Smith", "link": "https://stackoverflow.com/users/2529026/j-david-smith"}, "edited": false, "score": 0, "creation_date": 1500908891, "post_id": 45281538, "comment_id": 77530461, "body": "Another blind shot: have you tried <code>cargo clean</code> followed by <code>cargo update</code> before running <code>cargo build</code> again?  While given the <code>cargo tree</code> output it&#39;d be a bit surprising, this could be a case of a stale dependency."}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "reply_to_user": {"reputation": 4490, "user_id": 2529026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d2478ed8325bd7e5fa3aed9c27fd945?s=128&d=identicon&r=PG", "display_name": "J David Smith", "link": "https://stackoverflow.com/users/2529026/j-david-smith"}, "edited": false, "score": 0, "creation_date": 1500909359, "post_id": 45281538, "comment_id": 77530832, "body": "@JDavidSmith Yeah I do clean rebuild (removed <code>Cargo.lock</code> and <code>target</code> directory), also I check <code>nom</code> version via <code>Cargo.lock</code> in case <code>cargo tree</code> bug"}], "answers": [{"tags": [], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "is_accepted": false, "score": 2, "last_activity_date": 1500917303, "creation_date": 1500917303, "answer_id": 45286617, "question_id": 45281538, "link": "https://stackoverflow.com/questions/45281538/cargo-build-of-the-same-code-spurious-compile-time-errors/45286617#45286617", "title": "cargo build of the same code: spurious compile time errors?", "body": "<p>I found source of problem,\ncrate <code>A</code> has second level dependicies with <code>cexpr</code>,\n<code>cexpr</code> has <code>nom = {version = \"^3\", features = [\"verbose-errors\"] }</code> in <code>Cargo.toml</code>,\n<code>rust-nmea</code> also depend on <code>nom</code>, so we have compile time error. </p>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 188, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1500917303, "creation_date": 1500901781, "question_id": 45281538, "link": "https://stackoverflow.com/questions/45281538/cargo-build-of-the-same-code-spurious-compile-time-errors", "title": "cargo build of the same code: spurious compile time errors?", "body": "<p>I have crate <code>A</code> that depend on <code>B</code> and <code>B</code> depend on <a href=\"https://github.com/Dushistov/rust-nmea\" rel=\"nofollow noreferrer\">rust-nmea</a> crate.</p>\n\n<p>If I build crate <code>A</code> I got bunch of errors (all of them that missed <code>use std::error::Error;</code>) during build of <a href=\"https://github.com/Dushistov/rust-nmea\" rel=\"nofollow noreferrer\">rust-nmea</a> dependency:</p>\n\n<pre><code>error[E0599]: no method named `description` found for type `nom::Err&lt;&amp;[u8]&gt;` in the current scope\n   --&gt; /home/evgeniy/.cargo/registry/src/github.com-1ecc6299db9ec823/nmea-0.0.6/src/parse.rs:100:44\n    |\n100 |                      IError::Error(e) =&gt; e.description().to_string(),\n    |                                            ^^^^^^^^^^^\n    |\n    = help: items from traits can only be used if the trait is in scope\n    = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n            candidate #1: `use std::error::Error;`\n</code></pre>\n\n<p>But if I go to source tree of <code>B</code> crate and run <code>cargo build</code>,\nall build without any error (if you follow me <code>A</code> depend on <code>B</code> and <code>B</code> depend on <a href=\"https://github.com/Dushistov/rust-nmea\" rel=\"nofollow noreferrer\">rust-nmea</a>),</p>\n\n<p>also if go to <code>/home/evgeniy/.cargo/registry/src/github.com-1ecc6299db9ec823/nmea-0.0.6/</code> (see compile error) and run <code>cargo build</code> then all good.</p>\n\n<p>cargo tree show for <code>A</code>:</p>\n\n<pre><code>\u2502   \u251c\u2500\u2500 chrono v0.4.0\n\u2502   \u2502   \u251c\u2500\u2500 num v0.1.40\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 num-integer v0.1.35\n\u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 num-traits v0.1.40\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 num-iter v0.1.34\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 num-integer v0.1.35 (*)\n\u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 num-traits v0.1.40 (*)\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 num-traits v0.1.40 (*)\n\u2502   \u2502   \u2514\u2500\u2500 time v0.1.38\n\u2502   \u2502       \u2514\u2500\u2500 libc v0.2.27\n \u251c\u2500\u2500 nmea v0.0.6\n    \u2502   \u251c\u2500\u2500 chrono v0.4.0 (*)\n    \u2502   \u2514\u2500\u2500 nom v3.2.0\n    \u2502       \u2514\u2500\u2500 memchr v1.0.1 (*)\n</code></pre>\n\n<p>and for cached by <code>cargo</code> <a href=\"https://github.com/Dushistov/rust-nmea\" rel=\"nofollow noreferrer\">rust-nmea</a>:</p>\n\n<pre><code>\u251c\u2500\u2500 chrono v0.4.0\n\u2502   \u251c\u2500\u2500 num v0.1.40\n\u2502   \u2502   \u251c\u2500\u2500 num-integer v0.1.35\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 num-traits v0.1.40\n\u2502   \u2502   \u251c\u2500\u2500 num-iter v0.1.34\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 num-integer v0.1.35 (*)\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 num-traits v0.1.40 (*)\n\u2502   \u2502   \u2514\u2500\u2500 num-traits v0.1.40 (*)\n\u2502   \u2514\u2500\u2500 time v0.1.38\n\u2502       \u2514\u2500\u2500 libc v0.2.27\n\u2514\u2500\u2500 nom v3.2.0\n    \u2514\u2500\u2500 memchr v1.0.1\n        \u2514\u2500\u2500 libc v0.2.27 (*)\n</code></pre>\n\n<p>so for both good and bad case used the same dependencies.</p>\n\n<p>If run <code>cargo build -v -j1</code>, I got <code>rustc</code> command line for both cases.</p>\n\n<p>The only difference for good and bad case is this part:</p>\n\n<pre><code>-L dependency=/home/evgeniy/.cargo/registry/src/github.com-1ecc6299db9ec823/nmea-0.0.6/target/debug/deps --extern chrono=/home/evgeniy/.cargo/registry/src/github.com-1ecc6299db9ec823/nmea-0.0.6/target/debug/deps/libchrono-8e9e54e691d9b988.rlib --extern nom=/home/evgeniy/.cargo/registry/src/github.com-1ecc6299db9ec823/nmea-0.0.6/target/debug/deps/libnom-b72336f662b090c1.rlib\n</code></pre>\n\n<p>bad case have different path to libraries and <code>libnom-e2ec53418967eac0.rlib</code> instead of <code>libnom-b72336f662b090c1.rlib</code>, while <code>libchrono-8e9e54e691d9b988.rlib</code> match.</p>\n\n<p>The crates <code>A</code> and <code>B</code> are close sourced and I can not reduce problem to more simple case. <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">nom</a> crates not used in <code>A</code> and <code>B</code> except via <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">rust-nmea</a>.\n<a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">rust-nmea</a> is used in simple way, just <code>nmea = 0.0.6</code> in <code>Cargo.toml</code>.\nNo flags or so on things. </p>\n\n<p>Any idea why crate dependecy with the same flags (no flags at all)\nmay produce or not produce syntax error?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 3, "creation_date": 1500899964, "post_id": 45280718, "comment_id": 77524049, "body": "I don&#39;t see any actual use of <code>&#39;z</code> lifetime for <code>Person</code>; nothing weird here."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1500900465, "post_id": 45280718, "comment_id": 77524422, "body": "Why don&#39;t you use <code>String::new()</code> instead of <code>&quot;&quot;.to_string()</code>?"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 1, "creation_date": 1500901061, "post_id": 45280718, "comment_id": 77524827, "body": "Also, you should use <code>to_owned</code> instead of <code>to_string</code> to convert &amp;str to String."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 1, "creation_date": 1500901135, "post_id": 45280718, "comment_id": 77524885, "body": "@JanNilsFerner that&#39;s outdated information. There&#39;s no performance difference between the two, and arguably <code>to_string</code> is more obvious what it does."}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500901464, "post_id": 45280718, "comment_id": 77525128, "body": "@Shepmaster <a href=\"https://github.com/rust-lang/rust/pull/32586\" rel=\"nofollow noreferrer\">Wow, you&#39;re right!</a> Thank you for letting me know :)"}], "answers": [{"comments": [{"owner": {"reputation": 20901, "user_id": 9476, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/f01cbd2238e2a78e4c43fa596f51d6a1?s=128&d=identicon&r=PG", "display_name": "Dmitri Nesteruk", "link": "https://stackoverflow.com/users/9476/dmitri-nesteruk"}, "edited": false, "score": 0, "creation_date": 1500900961, "post_id": 45280917, "comment_id": 77524765, "body": "I tried removing the lifetime, but then other parts break. Self-contained example here: <a href=\"https://gist.github.com/nesteruk/8b6e967affbd27e6c099f20be18d157a\" rel=\"nofollow noreferrer\">gist.github.com/nesteruk/8b6e967affbd27e6c099f20be18d157a</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20901, "user_id": 9476, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/f01cbd2238e2a78e4c43fa596f51d6a1?s=128&d=identicon&r=PG", "display_name": "Dmitri Nesteruk", "link": "https://stackoverflow.com/users/9476/dmitri-nesteruk"}, "edited": false, "score": 0, "creation_date": 1500901247, "post_id": 45280917, "comment_id": 77524966, "body": "@DmitriNesteruk please go back and re-read my answer. My <b>third</b> and <b>fourth</b> sentences explain that error: <i>One you remove that, what you are trying to do is impossible. See <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>.</i> Then my <b>fifth</b> sentence explains how to fix it: <i>Remove all lifetimes and references from your code and it will work.</i>"}, {"owner": {"reputation": 20901, "user_id": 9476, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/f01cbd2238e2a78e4c43fa596f51d6a1?s=128&d=identicon&r=PG", "display_name": "Dmitri Nesteruk", "link": "https://stackoverflow.com/users/9476/dmitri-nesteruk"}, "edited": false, "score": 0, "creation_date": 1500902275, "post_id": 45280917, "comment_id": 77525793, "body": "that, by itself, did not help: <a href=\"https://gist.github.com/nesteruk/d1fcfbd8d9fbedce27a478a26a8d65cf\" rel=\"nofollow noreferrer\">gist.github.com/nesteruk/d1fcfbd8d9fbedce27a478a26a8d65cf</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1500901446, "last_edit_date": 1500901446, "creation_date": 1500900071, "answer_id": 45280917, "question_id": 45280718, "link": "https://stackoverflow.com/questions/45280718/why-is-a-lifetime-unused-on-a-struct-that-i-have-a-reference-to/45280917#45280917", "title": "Why is a lifetime unused on a struct that I have a reference to?", "body": "<p>The compiler is completely correct here; <code>'z</code> is not used on <code>Person</code>. Remove it from <code>Person</code> and from <code>PersonBuilder</code>:</p>\n\n<pre><code>struct Person { /* ... */ }\n\nstruct PersonBuilder&lt;'z&gt; {\n    person: &amp;'z Person,\n}\n</code></pre>\n\n<p>One you remove that, <strong>what you are trying to do is impossible</strong>. See <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>. Remove all lifetimes and references from your code and it will work.</p>\n\n<hr>\n\n<blockquote>\n  <p><code>PersonBuilder</code> keeps a reference to a person</p>\n</blockquote>\n\n<p>Yes, that's what <code>&amp;Person</code> would be.</p>\n\n<blockquote>\n  <p>as <code>Person&lt;'z&gt;</code></p>\n</blockquote>\n\n<p><code>Person&lt;'z&gt;</code> indicates that the <code>Person</code> struct <em>contains</em> a reference of the specified lifetime. <code>&amp;'z Person</code> is a reference to a person with the specified lifetime.</p>\n\n<blockquote>\n  <p>instantiate it with <code>PersonBuilder::new()</code>, clearly the type parameter</p>\n</blockquote>\n\n<p>Which \"type parameter\" are you referring to, as I don't see any in this code. While it's true that lifetimes and type parameters are both <em>kinds</em> of generics, they are different kinds of generics and are not treated the same.</p>\n\n<hr>\n\n<p>You may also be interested in the <a href=\"https://doc.rust-lang.org/std/default/trait.Default.html\" rel=\"nofollow noreferrer\"><code>Default</code></a> trait:</p>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Person { /* ... */ }\n\nimpl PersonBuilder {\n    fn new() -&gt; PersonBuilder {\n        PersonBuilder {\n            person: Person::default(),\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 20901, "user_id": 9476, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/f01cbd2238e2a78e4c43fa596f51d6a1?s=128&d=identicon&r=PG", "display_name": "Dmitri Nesteruk", "link": "https://stackoverflow.com/users/9476/dmitri-nesteruk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1500905655, "creation_date": 1500899465, "last_edit_date": 1500905655, "question_id": 45280718, "link": "https://stackoverflow.com/questions/45280718/why-is-a-lifetime-unused-on-a-struct-that-i-have-a-reference-to", "title": "Why is a lifetime unused on a struct that I have a reference to?", "body": "<p>The following won't compile:</p>\n\n<pre><code>struct Person&lt;'z&gt; {\n    street_address: String,\n    postcode: String,\n    city: String,\n\n    company_name: String,\n    position: String,\n    annual_income: usize,\n}\n\nstruct PersonBuilder&lt;'z&gt; {\n    person: &amp;'z Person&lt;'z&gt;,\n}\n\nimpl&lt;'z&gt; PersonBuilder&lt;'z&gt; {\n    fn new() -&gt; PersonBuilder&lt;'z&gt; {\n        PersonBuilder {\n            person: Person {\n                street_address: \"\".to_string(),\n                postcode: \"\".to_string(),\n                city: \"\".to_string(),\n                company_name: \"\".to_string(),\n                position: \"\".to_string(),\n                annual_income: 0,\n            },\n        }\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0392]: parameter `'z` is never used\n --&gt; src/main.rs:1:15\n  |\n1 | struct Person&lt;'z&gt; {\n  |               ^^ unused type parameter\n  |\n  = help: consider removing `'z` or using a marker such as `std::marker::PhantomData`\n</code></pre>\n\n<p>But that's not true, is it? I mean, <code>PersonBuilder</code> keeps a reference to a person as <code>Person&lt;'z&gt;</code> and when I instantiate it with <code>PersonBuilder::new()</code>, clearly the type parameter is in play to tie the two lifetimes together. So what's going on here?</p>\n"}, {"tags": ["rust", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 7, "last_activity_date": 1500911663, "last_edit_date": 1500911663, "creation_date": 1500884228, "answer_id": 45275458, "question_id": 45275362, "link": "https://stackoverflow.com/questions/45275362/how-do-i-copy-a-string-from-a-string-while-iterating-through-a-vector/45275458#45275458", "title": "How do I copy a String from a &amp;String while iterating through a Vector?", "body": "<p><code>std::string::String</code> implements the <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.clone\" rel=\"nofollow noreferrer\"><code>clone()</code> method</a>, so you could achieve the same thing in a more direct way using:</p>\n\n<pre><code>let thisfile_path = file.filepath.clone();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1500899548, "post_id": 45276751, "comment_id": 77523698, "body": "<i>Cloning a reference yields a reference</i> \u2014 only if the referred-to type does not implement <code>Clone</code>. <i>I have no means to try the code right now</i> \u2014  <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a>"}, {"owner": {"reputation": 462, "user_id": 3191035, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sqUZV.jpg?s=128&g=1", "display_name": "Frederick Ollinger", "link": "https://stackoverflow.com/users/3191035/frederick-ollinger"}, "edited": false, "score": 0, "creation_date": 1528304071, "post_id": 45276751, "comment_id": 88459584, "body": "I have a similar problem. I prefer this answer, personally, to the one above because I don&#39;t want to pay the price of cloning a string. I want to move the string to a struct. After I move the string, I have no use for it anymore because I&#39;m looping."}, {"owner": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "reply_to_user": {"reputation": 462, "user_id": 3191035, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sqUZV.jpg?s=128&g=1", "display_name": "Frederick Ollinger", "link": "https://stackoverflow.com/users/3191035/frederick-ollinger"}, "edited": false, "score": 0, "creation_date": 1581027232, "post_id": 45276751, "comment_id": 106302888, "body": "@FrederickOllinger does <code>to_owned()</code> not clone the string?"}], "tags": [], "owner": {"reputation": 362, "user_id": 6575507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e31ade8688aaab8e5ac3ccd6093d338b?s=128&d=identicon&r=PG&f=1", "display_name": "mmatous", "link": "https://stackoverflow.com/users/6575507/mmatous"}, "is_accepted": false, "score": 3, "last_activity_date": 1500899484, "last_edit_date": 1500899484, "creation_date": 1500888074, "answer_id": 45276751, "question_id": 45275362, "link": "https://stackoverflow.com/questions/45275362/how-do-i-copy-a-string-from-a-string-while-iterating-through-a-vector/45276751#45276751", "title": "How do I copy a String from a &amp;String while iterating through a Vector?", "body": "<p>I have no means to try the code right now and I am not that knowledgeable about Rust myself, but I think <a href=\"https://doc.rust-lang.org/std/borrow/trait.ToOwned.html\" rel=\"nofollow noreferrer\"><code>.to_owned()</code></a> is what you are looking for. Cloning a reference yields a reference; <code>.to_owned()</code> returns the desired datatype.</p>\n"}], "owner": {"reputation": 195, "user_id": 3818171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43695c967e20dac254e535ff08980858?s=128&d=identicon&r=PG&f=1", "display_name": "arsalan86", "link": "https://stackoverflow.com/users/3818171/arsalan86"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8274, "favorite_count": 1, "accepted_answer_id": 45275458, "answer_count": 2, "score": 5, "last_activity_date": 1500911663, "creation_date": 1500883945, "last_edit_date": 1500899453, "question_id": 45275362, "link": "https://stackoverflow.com/questions/45275362/how-do-i-copy-a-string-from-a-string-while-iterating-through-a-vector", "title": "How do I copy a String from a &amp;String while iterating through a Vector?", "body": "<p>I'm trying to get my head around ownership and the borrow checker. I've run into an issue I've managed to 'solve' but I think there should be a more ergonomic way to do it.</p>\n\n<p>The following code trips the borrow checker, because I'm trying to move <code>file.filepath</code> to <code>thisfile_path</code> while it is in a borrowed context.</p>\n\n<pre><code>for file in &amp;self.filelist {\n    let thisfile_path = String::from(file.filepath);\n    let this_wd = self.notifier.add_watch(Path::new(&amp;file.filepath), watch_mask::CLOSE_WRITE).unwrap();\n    let this_watch = Watchlist {configfile: thisfile_path, watchd: this_wd};\n    watches.push(this_watch);\n}\n</code></pre>\n\n<p><code>&amp;self.filelist</code> is <code>Vec&lt;ConfigFiles&gt;</code> where ConfigFiles is a <code>struct</code>.</p>\n\n<p>I'm iterating through <code>filelist</code>, and I want to copy a field from the ConfigFiles struct to a new <code>Vec</code>.</p>\n\n<p>If I replace that line with\n<code>let thisfile_path = String::from(&amp;file.filepath);</code>\nit doesn't work because the trait convert is not implemented for <code>&amp;String</code>.</p>\n\n<p>I've found a workaround, but I don't think it's the ideal way to do this: </p>\n\n<pre><code>let thisfile_path = String::from(&amp;file.filepath[..]);\n</code></pre>\n\n<p>Is this the only way I can resolve this?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1500882032, "post_id": 45274404, "comment_id": 77511989, "body": "Could we cause unsafe behavior if the function call to <code>test</code> were allowed in OP&#39;s code? I tried <code>swap</code>ing fields (<a href=\"https://play.rust-lang.org/?gist=791b16918ffb93ccc5b4099f7164d52b&amp;version=stable\" rel=\"nofollow noreferrer\">click</a>) (which is legal in the function, because the two <code>R</code>s are the same) to create a dangling reference. But I didn&#39;t quite succeed. I wonder if it&#39;s possible."}, {"owner": {"reputation": 83, "user_id": 2914847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b767ccd513a40b86d97de13965bbdb02?s=128&d=identicon&r=PG&f=1", "display_name": "Philip Craig", "link": "https://stackoverflow.com/users/2914847/philip-craig"}, "edited": false, "score": 0, "creation_date": 1500960641, "post_id": 45274404, "comment_id": 77550849, "body": "I ended up solving by changing <code>Header</code> to <code>struct Header&lt;R: Reader&lt;Offset=O&gt;, O: Offset&gt;(R, O);</code>. Is this semantically equivalent? If so, I would expect the compiler to treat them the same."}], "tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 5, "last_activity_date": 1500880778, "creation_date": 1500880778, "answer_id": 45274404, "question_id": 45273361, "link": "https://stackoverflow.com/questions/45273361/wrong-inferred-lifetime-due-to-associated-type/45274404#45274404", "title": "Wrong inferred lifetime due to associated type", "body": "<h2>Cause</h2>\n\n<p><a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" rel=\"noreferrer\">Variance</a> is the cause of the problem.</p>\n\n<ul>\n<li>In <code>struct Header&lt;R: Reader&gt;(R, usize);</code>, <code>Header&lt;R&gt;</code> is <strong>covariant</strong> w.r.t. <code>R</code>.</li>\n<li>However, in <code>struct Header&lt;R: Reader&gt;(R, R::Offset);</code>, <code>Header&lt;R&gt;</code> is <strong>invariant</strong> w.r.t. <code>R</code>.</li>\n</ul>\n\n<p><strong>Subtyping</strong> is a safe conversion of lifetimes. For example, <code>&amp;'static [u8]</code> can be converted to <code>&amp;'a [u8]</code>.</p>\n\n<p><strong>Variance</strong> describes how subtyping is lifted to complex types. For example, if <code>Header&lt;_&gt;</code> is covariant and <code>R</code> is a subtype of <code>S</code>, <code>Header&lt;R&gt;</code> is a subtype of <code>Header&lt;S&gt;</code>. This is not the case with invariant structs.</p>\n\n<p>In current Rust, <strong>traits are always invariant</strong>, because trait variance can't be inferred nor specified in the current syntax. Same restrictions apply to projected types like <code>R::Offset</code>.</p>\n\n<p>In your code, since <code>Header</code> is invariant, <code>Header&lt;&amp;'a [u8]&gt;</code> can't be upcasted to <code>Header&lt;&amp;'b [u8]&gt;</code> even if <code>'a: 'b</code>. Since <code>fn test</code> requires the same type for both arguments, the compiler required the same lifetime for <code>slice1</code> and <code>slice2</code>.</p>\n\n<h2>Solution</h2>\n\n<p>One possible ad-hoc solution is to generalize the signature for <code>fn test</code>, if it is feasible.</p>\n\n<pre><code>fn test&lt;R: Reader, S: Reader&gt;(_: Header&lt;R&gt;, _: Header&lt;S&gt;) {}\n</code></pre>\n\n<p>Another solution is to make <code>Header</code> covariant somehow.</p>\n\n<p>Maybe it is safe to assume <code>Header</code> to be covariant if <code>type Offset</code> has <code>'static</code> bound, but the current compiler doesn't do such a clever inference.</p>\n\n<p>Perhaps you can split out lifetimes as a parameter for <code>Header</code>. This recovers covariance.</p>\n\n<pre><code>trait Offset: Default {}\n\ntrait Reader {\n    type Offset: Offset;\n}\n\nimpl Offset for usize {}\n\nimpl Reader for [u8] {\n    type Offset = usize;\n}\n\nstruct Header&lt;'a, R: Reader + ?Sized + 'a&gt;(&amp;'a R, R::Offset);\n\nimpl &lt;'a, R: Reader&lt;Offset=usize&gt; + ?Sized&gt; Header&lt;'a, R&gt; {\n    fn new(r: &amp;'a R) -&gt; Self {\n        Header(r, 0)\n    }\n}\n\nfn test&lt;R: Reader + ?Sized&gt;(_: Header&lt;R&gt;, _: Header&lt;R&gt;) {}\n\nfn main() {\n    let buf1 = [0u8];\n    let slice1 = &amp;buf1[..];\n    let header1 = Header::new(slice1);\n\n    let buf2 = [0u8];\n    let slice2 = &amp;buf2[..];\n    let header2 = Header::new(slice2);\n\n    test(header1, header2);\n}\n</code></pre>\n"}], "owner": {"reputation": 83, "user_id": 2914847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b767ccd513a40b86d97de13965bbdb02?s=128&d=identicon&r=PG&f=1", "display_name": "Philip Craig", "link": "https://stackoverflow.com/users/2914847/philip-craig"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 45274404, "answer_count": 1, "score": 5, "last_activity_date": 1500880778, "creation_date": 1500875030, "question_id": 45273361, "link": "https://stackoverflow.com/questions/45273361/wrong-inferred-lifetime-due-to-associated-type", "title": "Wrong inferred lifetime due to associated type", "body": "<p>The following code sample is a minified version of a problem I have.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Offset: Default {}\n\ntrait Reader {\n    type Offset: Offset;\n}\n\nimpl Offset for usize {}\n\nimpl&lt;'a&gt; Reader for &amp;'a [u8] {\n    type Offset = usize;\n}\n\n// OK\n// struct Header&lt;R: Reader&gt;(R, usize);\n\n// Bad\nstruct Header&lt;R: Reader&gt;(R, R::Offset);\n\nimpl &lt;R: Reader&lt;Offset=usize&gt;&gt; Header&lt;R&gt; {\n    fn new(r: R) -&gt; Self {\n        Header(r, 0)\n    }\n}\n\nfn test&lt;R: Reader&gt;(_: Header&lt;R&gt;, _: Header&lt;R&gt;) {}\n\nfn main() {\n    let buf1 = [0u8];\n    let slice1 = &amp;buf1[..];\n    let header1 = Header::new(slice1);\n\n    let buf2 = [0u8];\n    let slice2 = &amp;buf2[..];\n    let header2 = Header::new(slice2);\n\n    test(header1, header2);\n}\n</code></pre>\n\n<p>I currently have the code working using <code>usize</code> instead of the <code>Offset</code> associated type. I'm trying to generalize my code so it can work with other types for offset. However, adding this associated type has caused lots of existing code to stop compiling with errors like this:</p>\n\n<pre><code>error[E0597]: `buf2` does not live long enough\n  --&gt; src/main.rs:37:1\n   |\n33 |     let slice2 = &amp;buf2[..];\n   |                   ---- borrow occurs here\n...\n37 | }\n   | ^ `buf2` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>Reversing the order of <code>header1</code> and <code>buf2</code> fixes the problem for this example, but I don't want to have to make this change everywhere (and may not be able to), and I don't understand why it is a problem.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1500881417, "post_id": 45269206, "comment_id": 77511657, "body": "Duplicate of <a href=\"https://stackoverflow.com/q/31362206/2731452\">stackoverflow.com/q/31362206/2731452</a> In your case you can use <code>fn constrain_handler&lt;F&gt;(f: F) -&gt; F where F: for&lt;&#39;a&gt; Fn(&amp;&#39;a mut S1, &amp;[TT]) -&gt; Box&lt;MyRes + &#39;a&gt; { f }</code>"}], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": false, "score": 1, "last_activity_date": 1510479564, "last_edit_date": 1510479564, "creation_date": 1510413967, "answer_id": 47239527, "question_id": 45269206, "link": "https://stackoverflow.com/questions/45269206/how-to-use-closure-instead-of-trait/47239527#47239527", "title": "How to use closure instead of trait?", "body": "<p>This is a known issue:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/41078\" rel=\"nofollow noreferrer\">Confusing type error due to strange inferred type for a closure argument</a></li>\n</ul>\n\n<p>The Rust compiler currently cannot infer that a closure is valid for any lifetime (which is what the type of <code>Foo::g</code> requires). It will infer any concrete lifetime, but does not generalize beyond that.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1510479564, "creation_date": 1500838737, "last_edit_date": 1500844926, "question_id": 45269206, "link": "https://stackoverflow.com/questions/45269206/how-to-use-closure-instead-of-trait", "title": "How to use closure instead of trait?", "body": "<p>I want to register <code>Gen::my_g</code> as a callback. The simple way is to implement <code>trait Foo</code> for <code>Gen</code>, but I do not want to implement <code>trait Foo</code> for <code>Gen</code>.</p>\n\n<p>In other words, I want to comment out the code marked as <code>B!!!</code> and uncomment the code marked as <code>A!!!</code>.</p>\n\n<p>This is not my code; I can not modify this:</p>\n\n<pre><code>struct S1;\n\nstruct TT;\ntrait MyRes {}\n\ntrait Foo {\n    fn g&lt;'a&gt;(&amp;self, ecx: &amp;'a mut S1, tt: &amp;[TT]) -&gt; Box&lt;MyRes + 'a&gt;;\n}\n\nimpl&lt;F&gt; Foo for F\nwhere\n    F: for&lt;'a&gt; Fn(&amp;'a mut S1, &amp;[TT]) -&gt; Box&lt;MyRes + 'a&gt;,\n{\n    fn g&lt;'a&gt;(&amp;self, ecx: &amp;'a mut S1, tt: &amp;[TT]) -&gt; Box&lt;MyRes + 'a&gt; {\n        (*self)(ecx, tt)\n    }\n}\n\nfn f1&lt;F&gt;(name: &amp;str, extension: F)\nwhere\n    F: Foo + 'static,\n{\n}\n</code></pre>\n\n<p>This is my code:</p>\n\n<pre><code>struct Gen {}\nimpl Gen {\n    fn register(self) {\n\n        //        f1(\"aaa\", move |ecx, tt| self.my_g(ecx, tt));//A!!!\n\n        f1(\"aaa\", self); //B!!!\n    }\n\n    fn my_g&lt;'a&gt;(&amp;self, ecx: &amp;'a mut S1, tt: &amp;[TT]) -&gt; Box&lt;MyRes + 'a&gt; {\n        unimplemented!();\n    }\n}\n\nimpl Foo for Gen {\n    fn g&lt;'a&gt;(&amp;self, ecx: &amp;'a mut S1, tt: &amp;[TT]) -&gt; Box&lt;MyRes + 'a&gt; {\n        self.my_g(ecx, tt)\n    }\n}\n</code></pre>\n\n<p>If I uncomment <code>//A!!!</code>, the compiler tells me something that I do not understand:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `for&lt;'a, 'r&gt; &lt;[closure@src/main.rs:29:19: 29:52 self:_] as std::ops::FnOnce&lt;(&amp;'a mut S1, &amp;'r [TT])&gt;&gt;::Output == std::boxed::Box&lt;MyRes + 'a&gt;`\n  --&gt; src/main.rs:29:9\n   |\n29 |         f1(\"aaa\", move |ecx, tt| self.my_g(ecx, tt)); //A!!!\n   |         ^^ expected bound lifetime parameter, found concrete lifetime\n   |\n   = note: concrete lifetime that was found is lifetime '_#12r\n   = note: required because of the requirements on the impl of `Foo` for `[closure@src/main.rs:29:19: 29:52 self:_]`\n   = note: required by `f1`\n\nerror[E0281]: type mismatch: `[closure@src/main.rs:29:19: 29:52 self:_]` implements the trait `std::ops::Fn&lt;(&amp;mut S1, &amp;[TT])&gt;`, but the trait `for&lt;'a, 'r&gt; std::ops::Fn&lt;(&amp;'a mut S1, &amp;'r [TT])&gt;` is required\n  --&gt; src/main.rs:29:9\n   |\n29 |         f1(\"aaa\", move |ecx, tt| self.my_g(ecx, tt)); //A!!!\n   |         ^^        --------------------------------- implements `std::ops::Fn&lt;(&amp;mut S1, &amp;[TT])&gt;`\n   |         |\n   |         requires `for&lt;'a, 'r&gt; std::ops::Fn&lt;(&amp;'a mut S1, &amp;'r [TT])&gt;`\n   |         expected concrete lifetime, found bound lifetime parameter\n   |\n   = note: required because of the requirements on the impl of `Foo` for `[closure@src/main.rs:29:19: 29:52 self:_]`\n   = note: required by `f1`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1500819314, "post_id": 45265842, "comment_id": 77494954, "body": "Note that OP is asking <b>why</b>, not <b>how</b>. How is already covered in <a href=\"https://stackoverflow.com/q/44377657/155423\">How to convert float to binary without using unsafe code?</a> as integers can be printed in binary."}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1500819571, "post_id": 45265842, "comment_id": 77495037, "body": "@Shepmaster, I think the other question refers to conversion to the underlying bit pattern, not formatting the floating point value as text, in radix 2."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1500820007, "post_id": 45265842, "comment_id": 77495170, "body": "@FlorianWeimer good point! However, OP is still asking for <b>why</b>, so any answer <i>must</i> address that point. Usually these types of questions rely on internal knowledge of one or more Rust developers and thus can never be answered. However, my mistake adds one potential reason: because there are multiple incompatible ways of parsing &quot;print this value as binary&quot;."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 3, "creation_date": 1500820041, "post_id": 45265842, "comment_id": 77495182, "body": "I don&#39;t think there is any fundamental reason. It just wasn&#39;t implemented because it isn&#39;t very useful. I don&#39;t know any language which implements it."}, {"owner": {"reputation": 617, "user_id": 3146662, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/RWuBJ.png?s=128&g=1", "display_name": "jean553", "link": "https://stackoverflow.com/users/3146662/jean553"}, "edited": false, "score": 0, "creation_date": 1500838334, "post_id": 45265842, "comment_id": 77501012, "body": "Got it. Thanks for your replies."}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1500840411, "post_id": 45265842, "comment_id": 77501645, "body": "<code>f32</code> is almost certainly IEEE 754 single precision, which is a binary floating point format. As such, any f32 number can be written in binary, but <code>0.1</code> in decimal can not be exactly stored in either. Some languages have hexadecimal literals for exact floating point values."}], "owner": {"reputation": 617, "user_id": 3146662, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/RWuBJ.png?s=128&g=1", "display_name": "jean553", "link": "https://stackoverflow.com/users/3146662/jean553"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 553, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1500839664, "creation_date": 1500817922, "last_edit_date": 1500839664, "question_id": 45265842, "link": "https://stackoverflow.com/questions/45265842/why-does-f32-not-implement-stdfmtbinary", "title": "Why does f32 not implement std::fmt::Binary?", "body": "<p>I try to display a <code>f32</code> in binary format:</p>\n\n<pre><code>let value: f32 = 0.45;                                                      \nlet my_string = format!(\"{:b}\", value);\n</code></pre>\n\n<p>I get the following error: \"the trait bound <code>f32: std::fmt::Binary</code> is not satisfied\".</p>\n\n<p>I think we have to implement the trait by ourselves when we want to have a binary representation of a <code>f32</code> into a <code>String</code>. In fact, Rust doesn't know what to do for some <code>f32</code> values that cannot be represented in binary. For example, what to do with <code>0.1</code> ? Should the trait return the string <code>0.00011</code> or <code>0.0001100110011</code>? Is this the reason why there is no definition of <code>std::fmt::Binary</code> for <code>f32</code>?</p>\n"}, {"tags": ["performance", "rust"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 11, "last_activity_date": 1500818428, "last_edit_date": 1500818428, "creation_date": 1500810241, "answer_id": 45264690, "question_id": 45264588, "link": "https://stackoverflow.com/questions/45264588/why-is-the-performance-of-while-said-to-be-slower-than-for-when-iterating-ov/45264690#45264690", "title": "Why is the performance of `while` said to be slower than `for` when iterating over an array?", "body": "<blockquote>\n  <p>In C++ I would expect a compiler/optimizer to produce something with equivalent run-time performance.</p>\n</blockquote>\n\n<p>Because the two snippets are <em>not</em> equivalent. The use of <code>a[i]</code> in Rust maps to <code>a.at(i)</code> and the use of <code>unsafe { a.get_unchecked(i) }</code> in Rust maps to <code>a[i]</code> in C++.</p>\n\n<p>That is, C++ does <em>not</em> perform bounds-checking by default, which is how you get <strong>buffer overflows</strong>. </p>\n\n<blockquote>\n  <p>Why is this not the case in Rust?</p>\n</blockquote>\n\n<p>Rust, when not using the <code>unsafe</code> keyword, should be memory safe. In many situations this is achieved by compile-time checks, but bounds checking require runtime checks in general.</p>\n\n<p>This does not mean that the <code>while</code> case will always be slower: it just means that you submit yourself to the whims of the optimizer, and sometimes it lets you down (eliminating bounds-checks is a hard problem).</p>\n\n<p>Thus, the recommendation is to use idioms which are known to optimize well.</p>\n"}], "owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 271, "favorite_count": 0, "accepted_answer_id": 45264690, "answer_count": 1, "score": 5, "last_activity_date": 1500818499, "creation_date": 1500809585, "last_edit_date": 1500818499, "question_id": 45264588, "link": "https://stackoverflow.com/questions/45264588/why-is-the-performance-of-while-said-to-be-slower-than-for-when-iterating-ov", "title": "Why is the performance of `while` said to be slower than `for` when iterating over an array?", "body": "<p>The second edition of <em>The Rust Programming Language</em> <a href=\"https://doc.rust-lang.org/book/second-edition/ch03-05-control-flow.html#looping-through-a-collection-with-for\" rel=\"nofollow noreferrer\">states the following</a> about while loops for iterating over an array:</p>\n\n<pre><code>fn main() {\n    let a = [10, 20, 30, 40, 50];\n    let mut index = 0;\n\n    while index &lt; 5 {\n        println!(\"the value is: {}\", a[index]);\n\n        index = index + 1;\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>[...] It\u2019s also slow, because the compiler adds runtime code to perform the conditional check on every element on every iteration through the loop.</p>\n  \n  <p>As a more efficient alternative, you can use a for loop and execute some code for each item in a collection.</p>\n</blockquote>\n\n<pre><code>fn main() {\n    let a = [10, 20, 30, 40, 50];\n\n    for element in a.iter() {\n        println!(\"the value is: {}\", element);\n    }\n}\n</code></pre>\n\n<p>In C++ I would expect a compiler/optimizer to produce something with equivalent run-time performance.</p>\n\n<p>Why is this not the case in Rust?</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1500803914, "post_id": 45262628, "comment_id": 77490571, "body": "You create generic function that should return any type user want <code>fn new() -&gt; MyApp&lt;F&gt;</code>, but you return concrete type instead of <code>F</code>"}, {"owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1500811987, "post_id": 45262628, "comment_id": 77492750, "body": "@E_net4 Your suggested duplicate does not deal with closures. I don&#39;t think it is a duplicate."}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 1, "creation_date": 1500812165, "post_id": 45262628, "comment_id": 77492805, "body": "@AndrewStraw closure or not is not important. Import that you tell  <code>fn new() -&gt; MyApp&lt;F&gt;</code> I return any type you want, and then you return conrete type. Note that your signature allow too call like this <code>let a = MyApp::&lt;String&gt;::new()</code>, while your <code>new</code> obviouse return not <code>MyApp&lt;String&gt;</code>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1500812280, "post_id": 45262628, "comment_id": 77492852, "body": "@AndrewStraw As mentioned by user103479, the closure is not the root of the problem here. Parameter types are defined by the caller, not the callee. If you want the function to always return <code>MyApp&lt;Server&gt;</code>, then the return type of that method must be fixed."}, {"owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "edited": false, "score": 0, "creation_date": 1500812846, "post_id": 45262628, "comment_id": 77493048, "body": "I have updated my attempt to implement MyApp:new() with a concrete type. Indeed with something other than a closure, I would expect this would fix the issue. However, in this case, the compilation still fails with the message I listed. This is why I think there is a specific issue with closures and why I do not think the other questions you listed are duplicates."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1500813250, "post_id": 45262628, "comment_id": 77493198, "body": "Right. Now it&#39;s a duplicate of <a href=\"https://stackoverflow.com/q/25445761/1233251\">Returning a closure from a function</a>."}, {"owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "edited": false, "score": 0, "creation_date": 1500813466, "post_id": 45262628, "comment_id": 77493263, "body": "I have read that one about 20 times but still cannot get my example to work. Here is <a href=\"https://play.rust-lang.org/?gist=0b0d96958d4438e10bbc0b025f7682c7&amp;version=nightly\" rel=\"nofollow noreferrer\">a link to the problem on the playground</a>."}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 1, "creation_date": 1500818506, "post_id": 45262628, "comment_id": 77494702, "body": "@AndrewStraw You should redo your code, the most simple way is remove <code>F</code> completly make <code>MyBoxedClosure</code> concrete type with <code>Box&lt;Fn(..&gt;</code> something as field."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 1, "creation_date": 1500822005, "post_id": 45262628, "comment_id": 77495804, "body": "<a href=\"https://play.integer32.com/?gist=549c3d879dcdb6beb114466cad7d2413&amp;version=stable\" rel=\"nofollow noreferrer\">Here&#39;s one solution</a>. As @user1034749 mentions, replacing the type parameter with a boxed trait object is currently the best way to return a closure."}, {"owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "edited": false, "score": 0, "creation_date": 1500822432, "post_id": 45262628, "comment_id": 77495940, "body": "Wonderful, thank you. Now if one of you will answer the question I will accept it. :)"}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500824116, "post_id": 45262628, "comment_id": 77496461, "body": "Not good idea to answer, because of if anyone answer this question marked as duplicate @Shepmaster ban him :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1500824255, "post_id": 45262628, "comment_id": 77496500, "body": "@user1034749 once it&#39;s a duplicate you <i>can&#39;t</i> answer. I also don&#39;t have the power to ban anyone, and I can&#39;t think of a single case over the last ~3 years I&#39;d have wanted to. I will certainly chide people or up/downvote to try and uphold quality on Stack Overflow, but that&#39;s the same power that anyone who can comment or vote holds."}, {"owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "edited": false, "score": 0, "creation_date": 1500835640, "post_id": 45262628, "comment_id": 77500136, "body": "Well, thank you all for the help. I must say that I don&#39;t see this as &quot;marked as an exact duplicate of an existing question&quot; because closures are different than primitive types. The one &quot;exact duplicate&quot; dealing with closures has the specific problem &quot;missing lifetime specifier&quot;. Surely all of them are useful, but reading them several times each still wasn&#39;t enough for me to solve my problem."}], "owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 364, "favorite_count": 0, "closed_date": 1500822020, "answer_count": 0, "score": 4, "last_activity_date": 1500822037, "creation_date": 1500795098, "last_edit_date": 1500820928, "question_id": 45262628, "link": "https://stackoverflow.com/questions/45262628/how-to-store-hyperserverserver-with-a-default-handler-as-a-struct-field-in-a", "closed_reason": "Duplicate", "title": "How to store hyper::server::Server with a default handler as a struct field in a constructor?", "body": "<p>I am trying to store a <code>hyper::server::Server</code> as a member of my struct (<code>struct MyApp</code> below). I can do this from, for example, my program's <code>main()</code> function.</p>\n\n<p>How can I do this in my struct's <code>MyApp::new()</code> method? I think I need the <em>concrete type</em> for <code>F</code> in <code>MyApp&lt;F&gt;</code>. However, despite trying, I am unable to (correctly) specify a concrete type for this closure.</p>\n\n<p>I can't figure out how to do this. I thought <code>Box</code>ing the closure would work by allowing me to pass the closure as a concrete type, and indeed it does when I do this in <code>main()</code>, but not <code>MyApp::new()</code>. I am hoping there is a way to do this in stable rust, as I would really like to implement a structure which contains a hyper Server.</p>\n\n<p>Here is my struct:</p>\n\n<pre><code>struct MyApp&lt;F&gt; {\n    hyper_server: Server&lt;MyBoxedClosure&lt;F&gt;, hyper::Body&gt;,\n}\n</code></pre>\n\n<p>And here is the full code that works -- it sets the <code>MyApp.hyper_server</code> field in <code>main()</code>:</p>\n\n<pre><code>extern crate hyper;\nextern crate futures;\nuse hyper::Error;\nuse hyper::server::{Http, Server, NewService, Service, Request, Response};\nuse hyper::header::ContentLength;\n\npub struct HelloWorld;\n\nconst PHRASE: &amp;'static str = \"Hello, World!\";\n\nimpl Service for HelloWorld {\n    type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = futures::future::FutureResult&lt;Self::Response, Self::Error&gt;;\n\n    fn call(&amp;self, _req: Request) -&gt; Self::Future {\n        futures::future::ok(\n            Response::new()\n                .with_header(ContentLength(PHRASE.len() as u64))\n                .with_body(PHRASE),\n        )\n    }\n}\n\npub struct MyBoxedClosure&lt;F&gt; {\n    value: Box&lt;F&gt;,\n}\n\nimpl&lt;F&gt; NewService for MyBoxedClosure&lt;F&gt;\nwhere\n    F: Fn() -&gt; std::result::Result&lt;HelloWorld, std::io::Error&gt;,\n{\n    type Request = Request;\n    type Response = Response;\n    type Error = Error;\n    type Instance = HelloWorld;\n\n    fn new_service(&amp;self) -&gt; std::result::Result&lt;Self::Instance, std::io::Error&gt; {\n        self.value.new_service()\n    }\n}\n\nstruct MyApp&lt;F&gt; {\n    hyper_server: Server&lt;MyBoxedClosure&lt;F&gt;, hyper::Body&gt;,\n}\n\nfn main() {\n    let mbc = MyBoxedClosure { value: Box::new(|| Ok(HelloWorld)) };\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n    let hyper_server = Http::new().bind(&amp;addr, mbc).unwrap();\n    let my_app = MyApp { hyper_server: hyper_server };\n\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>If I create a <code>MyApp::new()</code> function and call that from the <code>main()</code> instead, I can't figure out how to avoid a compiler error.</p>\n\n<pre><code>impl&lt;F&gt; MyApp&lt;F&gt;\nwhere\n    F: Fn() -&gt; std::result::Result&lt;HelloWorld, std::io::Error&gt; + Send + Sync,\n{\n    fn new() -&gt; MyApp&lt;F&gt; {\n        let mbc = MyBoxedClosure { value: Box::new(|| Ok(HelloWorld)) };\n        let addr = \"127.0.0.1:3000\".parse().unwrap();\n        let hyper_server = Http::new().bind(&amp;addr, mbc).unwrap();\n        MyApp { hyper_server: hyper_server }\n    }\n}\n\nfn main() {\n    let _my_app = MyApp::new();\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>The compiler error is this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:56:9\n   |\n56 |         MyApp { hyper_server: hyper_server }\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected type parameter, found closure\n   |\n   = note: expected type `MyApp&lt;F&gt;`\n              found type `MyApp&lt;[closure@src/main.rs:53:52: 53:69]&gt;`\n</code></pre>\n"}, {"tags": ["compiler-errors", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1500746847, "post_id": 45256504, "comment_id": 77478818, "body": "Possibly related: <a href=\"https://stackoverflow.com/questions/43590162/when-returning-the-outcome-of-consuming-a-stdinlock-why-was-the-borrow-to-stdin\" title=\"when returning the outcome of consuming a stdinlock why was the borrow to stdin\">stackoverflow.com/questions/43590162/&hellip;</a>; <a href=\"https://github.com/rust-lang/rust/issues/21114\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/21114</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1500880872, "post_id": 45256504, "comment_id": 77511367, "body": "Maybe this is related to this: <a href=\"http://smallcultfollowing.com/babysteps/blog/2017/07/11/non-lexical-lifetimes-draft-rfc-and-prototype-available/\" rel=\"nofollow noreferrer\">smallcultfollowing.com/babysteps/blog/2017/07/11/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1504704332, "creation_date": 1504704332, "answer_id": 46076527, "question_id": 45256504, "link": "https://stackoverflow.com/questions/45256504/why-would-the-borrow-checker-reject-an-inline-expression-but-accept-its-broken-d/46076527#46076527", "title": "Why would the borrow checker reject an inline expression but accept its broken down form?", "body": "<p>Because the inline version is equivalent to the following code:</p>\n\n<pre><code>fn try_drain_inline_broken_down(&amp;self) {\n    {   // Implicit block around the whole expression\n        let mut guard = self.map.borrow_mut();\n        guard.drain()    // No semicolon here\n    };                   // The semicolon is here\n}\n</code></pre>\n\n<p>Once written like this you'll notice that the value returned by <code>drain</code> needs to live long enough to be returned from the block, but it keeps a reference to <code>guard</code> which only lives until the end of the block.</p>\n\n<p>In your broken down version, the value returned by <code>drain</code> only lives until the semicolon whereas <code>guard</code> lives until the end of the block so everything is fine.</p>\n"}], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 46076527, "answer_count": 1, "score": 4, "last_activity_date": 1504704332, "creation_date": 1500739123, "last_edit_date": 1500771272, "question_id": 45256504, "link": "https://stackoverflow.com/questions/45256504/why-would-the-borrow-checker-reject-an-inline-expression-but-accept-its-broken-d", "title": "Why would the borrow checker reject an inline expression but accept its broken down form?", "body": "<p>I would naively expect the two function <code>try_drain_*</code> below to have the same behavior, yet the first fails to compile while the second is executed without issue.</p>\n\n<pre><code>struct Container {\n    map: RefCell&lt;HashMap&lt;i32, i32&gt;&gt;,\n}\n\nimpl Container {\n    fn try_drain_inline(&amp;self) {\n        self.map.borrow_mut().drain();\n    }\n\n    fn try_drain_broken_down(&amp;self) {\n        let mut guard = self.map.borrow_mut();\n        guard.drain();\n    }\n}\n</code></pre>\n\n<p>The borrow checker complains about <code>try_drain_inline</code> <a href=\"https://play.rust-lang.org/?gist=5bfc851fe072d7945bff772212b32ff5&amp;version=stable\" rel=\"nofollow noreferrer\">on the playground</a>:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:15:5\n   |\n14 |         self.map.borrow_mut().drain();\n   |         ---------------------        ^ temporary value dropped here while still borrowed\n   |         |\n   |         temporary value created here\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n</blockquote>\n\n<p>whereas it is fine with <code>try_drain_broken_down</code>.</p>\n\n<p>It seems that there is an issue with the order in which the temporaries it created are destroyed; and \"manually\" materializing the temporaries rectifies the situation...</p>\n\n<p><strong>Why would the borrow checker reject the inline form and accept the broken down one?</strong></p>\n\n<hr>\n\n<p><em>Note: my real code is a <code>try_pop</code> function which requires TWO intermediate variables:</em></p>\n\n<pre><code>fn try_pop(&amp;self) -&gt; Option&lt;i32&gt; {\n    let mut guard = self.map.borrow_mut();\n    let mut drain = guard.drain();\n    drain.next().map(|(_, t)| t)\n}\n</code></pre>\n"}, {"tags": ["syntax", "macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 987, "user_id": 3078304, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bAVgP.jpg?s=128&g=1", "display_name": "mattgathu", "link": "https://stackoverflow.com/users/3078304/mattgathu"}, "edited": false, "score": 0, "creation_date": 1500737906, "post_id": 45256267, "comment_id": 77476216, "body": "can you at least explain why it&#39;s not possible. Just saying no is a bit insufficient."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 987, "user_id": 3078304, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bAVgP.jpg?s=128&g=1", "display_name": "mattgathu", "link": "https://stackoverflow.com/users/3078304/mattgathu"}, "edited": false, "score": 2, "creation_date": 1500738615, "post_id": 45256267, "comment_id": 77476434, "body": "@mattgathu There&#39;s nothing to explain.  It just isn&#39;t possible.  No one has implemented any way to do it, there&#39;s nothing planned, nothing proposed.  It&#39;s not that it&#39;s forbidden or can&#39;t be implemented, it just hasn&#39;t been."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 1, "last_activity_date": 1500739297, "last_edit_date": 1500739297, "creation_date": 1500737617, "answer_id": 45256267, "question_id": 45256034, "link": "https://stackoverflow.com/questions/45256034/can-you-tell-how-a-macro-got-invoked-in-rust/45256267#45256267", "title": "Can you tell how a macro got invoked in Rust?", "body": "<p>No.</p>\n\n<p>Since I have to enter at least 30 characters: <em>really</em> no.  There are no hacks, workarounds, or One Weird Tricks to get around this.  It just isn't possible. No one has implemented any way to do it, there's nothing planned, nothing proposed. It's not that it's forbidden or can't be implemented, it just hasn't been.</p>\n"}], "owner": {"reputation": 987, "user_id": 3078304, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bAVgP.jpg?s=128&g=1", "display_name": "mattgathu", "link": "https://stackoverflow.com/users/3078304/mattgathu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1500739297, "creation_date": 1500736174, "last_edit_date": 1500737611, "question_id": 45256034, "link": "https://stackoverflow.com/questions/45256034/can-you-tell-how-a-macro-got-invoked-in-rust", "title": "Can you tell how a macro got invoked in Rust?", "body": "<p>Rust's macro support three forms of call syntax</p>\n\n<pre><code>macro! {...} \n\nmacro! (...)\n\nmacro! [...]\n</code></pre>\n\n<p>Can tell which syntax was used to call the macro, from within the macro? </p>\n"}, {"tags": ["rust", "lifetime", "ownership"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500732937, "post_id": 45255478, "comment_id": 77474820, "body": "Can you explain what exactly you find confusing about the error message? Why do you think that lifetimes have anything to do with the problem? Why do you think borrowing is coming into play here?"}, {"owner": {"reputation": 1966, "user_id": 62857, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9385a51f42561bf5c17e22d054d55efe?s=128&d=identicon&r=PG", "display_name": "Wouter", "link": "https://stackoverflow.com/users/62857/wouter"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500733157, "post_id": 45255478, "comment_id": 77474884, "body": "The error message is clear, but I&#39;m having trouble getting around the issue at hand. I guess the best course of action is to move all the logic of the try_wrap method into do_stuff to keep ownership or maybe return the instance inside a tuple with a result value?"}, {"owner": {"reputation": 1966, "user_id": 62857, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9385a51f42561bf5c17e22d054d55efe?s=128&d=identicon&r=PG", "display_name": "Wouter", "link": "https://stackoverflow.com/users/62857/wouter"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500733661, "post_id": 45255478, "comment_id": 77475013, "body": "My question is probably confusing because lifetimes relate to borrowed types, not to owned objects."}], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": false, "score": 1, "last_activity_date": 1500734247, "creation_date": 1500734247, "answer_id": 45255716, "question_id": 45255478, "link": "https://stackoverflow.com/questions/45255478/lifetime-issues-with-non-copyable-owned-values-when-trying-to-use-them-after-pas/45255716#45255716", "title": "Lifetime issues with non-copyable owned values when trying to use them after passing them to a function", "body": "<p>I think <code>Option&lt;NonCopyable&gt;</code> is simply the wrong return type for <code>try_wrap</code>.  You need a two-armed sum type here like <code>Result</code>, so that the caller can recover the argument in case of an error, perhaps like this:</p>\n\n<pre><code>fn do_stuff() -&gt; NonCopyable {\n    let x = NonCopyable::new();\n    match try_wrap(x) {\n        Ok(val) =&gt; val,\n        Err(x) =&gt; x,\n    }\n}\n\nfn try_wrap(x: NonCopyable) -&gt; Result&lt;NonCopyable, NonCopyable&gt; {\n    Err(x)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1966, "user_id": 62857, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9385a51f42561bf5c17e22d054d55efe?s=128&d=identicon&r=PG", "display_name": "Wouter", "link": "https://stackoverflow.com/users/62857/wouter"}, "edited": false, "score": 0, "creation_date": 1500821348, "post_id": 45255927, "comment_id": 77495586, "body": "Thanks for the clear explanation. I ended up returning a tuple from <code>try_wrap</code> to return ownership."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1966, "user_id": 62857, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9385a51f42561bf5c17e22d054d55efe?s=128&d=identicon&r=PG", "display_name": "Wouter", "link": "https://stackoverflow.com/users/62857/wouter"}, "edited": false, "score": 0, "creation_date": 1500822262, "post_id": 45255927, "comment_id": 77495886, "body": "@Wouter I&#39;m not sure I understand <i>how</i> you are able to do that. A tuple requires all of the members to be present, regardless if it was the success or failure case. If you are doing something like <code>(Option&lt;Foo&gt;, Option&lt;Foo&gt;)</code>, that would be a really bad idea because that allows for four possibilities instead of just the two."}, {"owner": {"reputation": 1966, "user_id": 62857, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9385a51f42561bf5c17e22d054d55efe?s=128&d=identicon&r=PG", "display_name": "Wouter", "link": "https://stackoverflow.com/users/62857/wouter"}, "edited": false, "score": 0, "creation_date": 1500823118, "post_id": 45255927, "comment_id": 77496136, "body": "<code>try_wrap</code> returns the same type for either case so I can use one field in a tuple to return the wrapped/original object and I can augment the tuple with a boolean to indicate if it was wrapped. <a href=\"https://gist.github.com/wldevries/6d1b3824b26914e114cf257f0a55b963\" rel=\"nofollow noreferrer\">gist.github.com/wldevries/6d1b3824b26914e114cf257f0a55b963</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1500737310, "last_edit_date": 1500737310, "creation_date": 1500735519, "answer_id": 45255927, "question_id": 45255478, "link": "https://stackoverflow.com/questions/45255478/lifetime-issues-with-non-copyable-owned-values-when-trying-to-use-them-after-pas/45255927#45255927", "title": "Lifetime issues with non-copyable owned values when trying to use them after passing them to a function", "body": "<blockquote>\n  <p>with lifetime of variables </p>\n</blockquote>\n\n<p>There are no lifetimes involved here</p>\n\n<blockquote>\n  <p>The <code>x</code> variable in <code>do_stuff</code> is borrowed</p>\n</blockquote>\n\n<p>No, it is not.</p>\n\n<blockquote>\n  <p>Am I thinking about this the wrong way?</p>\n</blockquote>\n\n<p>Yes. Borrowing is indicated by an ampersand <code>&amp;</code> and/or a lifetime parameter <code>'foo</code>:</p>\n\n<pre><code>&amp;i32    // a borrowed integer\n&amp;'a str // a borrowed string slice with a lifetime\nFoo&lt;'b&gt; // a type that contains a borrow of some kind\n</code></pre>\n\n<p>Your <code>try_wrap</code> function <em>takes ownership</em> of <code>x</code>:</p>\n\n<pre><code>fn try_wrap(x: NonCopyable) -&gt; Option&lt;NonCopyable&gt;\n</code></pre>\n\n<p>That means <code>x</code> is gone and the calling function cannot access it anymore. It has been <em>moved</em> into <code>try_wrap</code>, which is now free to do whatever it wants with the value, including <strong>destroy it</strong>. That is why the calling function is no longer able to safely access it and why you get the error.</p>\n\n<p>If the type implemented <code>Copy</code>, the compiler would have instead implicitly created a copy of the value and passed it in. If the type implemented <code>Clone</code>, you could have explicitly called <code>.clone()</code> on the argument to <code>try_wrap</code> in order to keep the local value.</p>\n\n<p>As <a href=\"https://stackoverflow.com/a/45255716/155423\">Florian Weimer</a> notes, you can use a type to return either the wrapped value or the original. It's difficult to tell based on your example, but I disagree with using <code>Result</code> <strong>unless it's an error</strong>. Instead, I'd create my own one-off enum or use something like <a href=\"https://crates.io/crates/either\" rel=\"nofollow noreferrer\"><code>Either</code></a>:</p>\n\n<pre><code>extern crate either;\n\nuse either::Either;\n\nfn do_stuff() -&gt; NonCopyable {\n    let x = NonCopyable::new();\n    match try_wrap(x) {\n        Either::Left(val) =&gt; val,\n        Either::Right(x) =&gt; x,\n    }\n}\n\nfn try_wrap(x: NonCopyable) -&gt; Either&lt;NonCopyable, NonCopyable&gt; {\n    Either::Right(x)\n}\n</code></pre>\n\n<p>You could also embed the logic of <code>try_wrap</code> back into <code>do_stuff</code>, or split up <code>try_wrap</code> so that the logic doesn't require ownership:</p>\n\n<pre><code>fn do_stuff() -&gt; NonCopyable {\n    let x = NonCopyable::new();\n    if should_wrap(&amp;x) { do_wrap(x) } else { x }\n}\n\nfn should_wrap(x: &amp;NonCopyable) -&gt; bool { false }\nfn do_wrap(x: NonCopyable) -&gt; NonCopyable { x }\n</code></pre>\n\n<p>Since you are returning the same type, it's also possible you would want to take a mutable reference to the value and just do whatever conditional changes need to happen:</p>\n\n<pre><code>fn do_stuff() -&gt; NonCopyable {\n    let mut x = NonCopyable::new();\n    try_wrap(&amp;mut x);\n    x\n}\n\nfn try_wrap(x: &amp;mut NonCopyable) {}\n</code></pre>\n"}], "owner": {"reputation": 1966, "user_id": 62857, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9385a51f42561bf5c17e22d054d55efe?s=128&d=identicon&r=PG", "display_name": "Wouter", "link": "https://stackoverflow.com/users/62857/wouter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 45255927, "answer_count": 2, "score": 2, "last_activity_date": 1500737310, "creation_date": 1500732562, "last_edit_date": 1500735903, "question_id": 45255478, "link": "https://stackoverflow.com/questions/45255478/lifetime-issues-with-non-copyable-owned-values-when-trying-to-use-them-after-pas", "title": "Lifetime issues with non-copyable owned values when trying to use them after passing them to a function", "body": "<p>I'm running into some problems with lifetime of variables in Rust. The <code>x</code> variable in <code>do_stuff</code> is borrowed to <code>try_wrap</code> and can thus not be returned in the <code>None</code> case. Am I thinking about this the wrong way?</p>\n\n<pre><code>struct NonCopyable;\n\nimpl NonCopyable {\n    fn new() -&gt; Self {\n        NonCopyable\n    }\n}\n\nfn do_stuff() -&gt; NonCopyable {\n    let x = NonCopyable::new();\n    match try_wrap(x) {\n        Some(val) =&gt; val,\n        None =&gt; x,\n    }\n}\n\nfn try_wrap(x: NonCopyable) -&gt; Option&lt;NonCopyable&gt; {\n    None\n}\n\nfn main() {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `x`\n  --&gt; src/main.rs:13:17\n   |\n11 |     match try_wrap(x) {\n   |                    - value moved here\n12 |         Some(val) =&gt; val,\n13 |         None =&gt; x,\n   |                 ^ value used here after move\n   |\n   = note: move occurs because `x` has type `NonCopyable`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["rust", "rust-crates"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1500729088, "creation_date": 1500729088, "answer_id": 45254955, "question_id": 45254863, "link": "https://stackoverflow.com/questions/45254863/how-can-i-find-out-whether-a-crate-is-compatible-with-a-specific-rust-version/45254955#45254955", "title": "How can I find out whether a crate is compatible with a specific Rust version?", "body": "<p>Right now, you either read the crate's documentation or test it yourself. Many larger crates test against an older pinned version of Rust in CI when they make a stability claim.</p>\n\n<p>There is a <a href=\"https://github.com/rust-lang/rfcs/pull/1709\" rel=\"nofollow noreferrer\">proposed RFC</a> that would add the Rust version to the Cargo.toml file.</p>\n"}], "owner": {"reputation": 584, "user_id": 4802126, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/33d22caf8c92ceb822fdf89b30a5ea13?s=128&d=identicon&r=PG&f=1", "display_name": "the-bass", "link": "https://stackoverflow.com/users/4802126/the-bass"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 45254955, "answer_count": 1, "score": 4, "last_activity_date": 1500729396, "creation_date": 1500728423, "last_edit_date": 1500728932, "question_id": 45254863, "link": "https://stackoverflow.com/questions/45254863/how-can-i-find-out-whether-a-crate-is-compatible-with-a-specific-rust-version", "title": "How can I find out whether a crate is compatible with a specific Rust version?", "body": "<p>If I find a crate I'd like to use, how can I find out with which versions of Rust the crate works as expected?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1500725609, "post_id": 45253784, "comment_id": 77472778, "body": "This has been asked many times \u2014 I found 3 exact duplicates by just searching for the error message. Please <b>search for your question</b> before asking it."}], "answers": [{"comments": [{"owner": {"reputation": 1169, "user_id": 5774900, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1d4a1b9f8a05b6ae616757fbeec30566?s=128&d=identicon&r=PG", "display_name": "Martin Fink", "link": "https://stackoverflow.com/users/5774900/martin-fink"}, "edited": false, "score": 0, "creation_date": 1500723682, "post_id": 45253864, "comment_id": 77472253, "body": "If I were to pass the logger as a parameter, would that work too? Then I wouldn&#39;t have to create a new impl block for every subtype of <code>Logger</code>."}, {"owner": {"reputation": 9465, "user_id": 278899, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f19a4807544338636bf12e76aff178af?s=128&d=identicon&r=PG", "display_name": "Jonah", "link": "https://stackoverflow.com/users/278899/jonah"}, "edited": false, "score": 0, "creation_date": 1564498106, "post_id": 45253864, "comment_id": 101046845, "body": "This answer saved me so much time debugging and and greatly enhanced my understanding of how generics work in Rust. I know &quot;thank you&quot; comments aren&#39;t allowed on SO, but thank you anyway."}], "tags": [], "owner": {"reputation": 20407, "user_id": 1017941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/yocPw.jpg?s=128&g=1", "display_name": "Hauleth", "link": "https://stackoverflow.com/users/1017941/hauleth"}, "is_accepted": true, "score": 10, "last_activity_date": 1500721852, "creation_date": 1500721852, "answer_id": 45253864, "question_id": 45253784, "link": "https://stackoverflow.com/questions/45253784/expected-type-parameter-found-struct/45253864#45253864", "title": "expected type parameter, found struct", "body": "<p>The problem is here:</p>\n\n<pre><code>impl&lt;L&gt; A&lt;L&gt; where L: Logger {\n    fn new() -&gt; Self {\n        let logger = DefaultLogger;\n\n        A {\n            logger: Box::new(logger),\n        }\n    }\n}\n</code></pre>\n\n<p>You want to return <code>A&lt;L&gt;</code> but you return <code>A&lt;DefaultLogger&gt;</code> where you cannot be sure that <code>L == DefaultLogger</code>.</p>\n\n<p>To fix that you can provide specialisation that will create method <code>A::new</code> only for <code>DefaultLogger</code>:</p>\n\n<pre><code>impl A&lt;DefaultLogger&gt; {\n    fn new() -&gt; Self {\n        let logger = DefaultLogger;\n\n        A {\n            logger: Box::new(logger),\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1169, "user_id": 5774900, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1d4a1b9f8a05b6ae616757fbeec30566?s=128&d=identicon&r=PG", "display_name": "Martin Fink", "link": "https://stackoverflow.com/users/5774900/martin-fink"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7319, "favorite_count": 1, "closed_date": 1500725305, "accepted_answer_id": 45253864, "answer_count": 1, "score": 10, "last_activity_date": 1500725380, "creation_date": 1500721345, "last_edit_date": 1500725380, "question_id": 45253784, "link": "https://stackoverflow.com/questions/45253784/expected-type-parameter-found-struct", "closed_reason": "Duplicate", "title": "expected type parameter, found struct", "body": "<p>I've encountered a problem which I reduced to the following code:</p>\n\n<pre><code>trait Logger {}\n\nstruct DefaultLogger;\n\nimpl Logger for DefaultLogger {}\n\nstruct A&lt;L&gt; where L: Logger {\n    logger: Box&lt;L&gt;,\n}\n\nimpl&lt;L&gt; A&lt;L&gt; where L: Logger {\n    fn new() -&gt; Self {\n        let logger = DefaultLogger;\n\n        A {\n            logger: Box::new(logger),\n                          // ^^^^^^ Here is the problem\n        }\n    }\n}\n\nfn main() {\n    let a = A::new();\n}\n</code></pre>\n\n<p>which produces the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:16:30\n   |\n16 |             logger: Box::new(logger),\n   |                              ^^^^^^ expected type parameter, found struct `DefaultLogger`\n   |\n   = note: expected type `L`\n              found type `DefaultLogger`\n</code></pre>\n\n<p>When I construct trait <code>A</code> in a normal function (like <code>main</code>), like I expected it to work. Example:</p>\n\n<pre><code>trait Logger {}\n\nstruct DefaultLogger;\n\nimpl Logger for DefaultLogger {}\n\nstruct A&lt;L&gt; where L: Logger {\n    logger: Box&lt;L&gt;,\n}\n\nfn main() {\n        let logger = DefaultLogger;\n\n        let _a = A {\n            logger: Box::new(logger),\n        };\n}\n</code></pre>\n"}, {"tags": ["image-processing", "rust", "nearest-neighbor"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1500702614, "post_id": 45249860, "comment_id": 77466941, "body": "You used a test image meant to show that simple scaling algorithms such as nearest neighbor are inadequate. And indeed it showed that. Everything is working as intended. If you want better results, use a better scaling algorithm."}, {"owner": {"reputation": 1461, "user_id": 1594918, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/69305d97391e6732df46b038ffbeaee5?s=128&d=identicon&r=PG", "display_name": "kosinix", "link": "https://stackoverflow.com/users/1594918/kosinix"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1500708408, "post_id": 45249860, "comment_id": 77468223, "body": "@interjay - No. I think you misunderstand the question. I used nearest neighbor in Photoshop and GD and the results are different with my nearest neighbor algorithm. I am not asking for a different interpolation method."}], "answers": [{"tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": false, "score": 1, "last_activity_date": 1500713811, "last_edit_date": 1500713811, "creation_date": 1500713067, "answer_id": 45252536, "question_id": 45249860, "link": "https://stackoverflow.com/questions/45249860/whats-wrong-with-this-nearest-neighbor-algorithm-for-image-scaling/45252536#45252536", "title": "Whats wrong with this nearest neighbor algorithm for image scaling?", "body": "<p>A slightly better way to do nearest neighbor interpolation is to make the interpolation go over the centers of the destination pixels instead of their top-left corner. In your code, that means adding <code>0.5</code> to <code>x2</code> and <code>y2</code> when calculating <code>x1</code> and <code>y1</code>.</p>\n\n<pre><code>let x1: i32 = ( (x2 as f64 + 0.5) * x_scale ).floor() as i32;\nlet y1: i32 = ( (y2 as f64 + 0.5) * y_scale ).floor() as i32;\n</code></pre>\n\n<p>When you scale by 1/2 this doesn't necessarily give a better result: each destination pixel is chosen from a 2x2 source area, so it doesn't matter which source pixel you choose. But when scaling by 1/3 this means that you choose the center of a 3x3 area instead of the top-left, which is better.</p>\n\n<p>Photoshop probably uses a method like this, which is why you see different results.</p>\n\n<p>Note that even if this makes the test image appear to scale better, another test image can be made that would look bad with the new algorithm. Offsetting your test image by (1,1) will probably do it.</p>\n"}, {"comments": [{"owner": {"reputation": 1461, "user_id": 1594918, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/69305d97391e6732df46b038ffbeaee5?s=128&d=identicon&r=PG", "display_name": "kosinix", "link": "https://stackoverflow.com/users/1594918/kosinix"}, "edited": false, "score": 0, "creation_date": 1500722923, "post_id": 45252916, "comment_id": 77472048, "body": "I want the algo to work similar as other image processing programs, preferably with photoshop and imagemagick. This is to not surprise users with the results being different than what these other libs do. Yes the test image is for gamma but I chose to use it here since it works well in highlighting this subtle problem. Thanks for the response."}], "tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 0, "last_activity_date": 1500715706, "creation_date": 1500715706, "answer_id": 45252916, "question_id": 45249860, "link": "https://stackoverflow.com/questions/45249860/whats-wrong-with-this-nearest-neighbor-algorithm-for-image-scaling/45252916#45252916", "title": "Whats wrong with this nearest neighbor algorithm for image scaling?", "body": "<p>Your algorithm isn't wrong, necessarily. It depends on how you choose to define your coordinates. The requested scaling is a halving of the image resolution, which means there are four pixels to consider for each target pixel; they're equidistant, covering a quarter of each target pixel, so \"nearest\" isn't a useful metric to make the choice. You could still claim nearest neighbour even if the choice was random per pixel, but that would be a poor implementation because it would use a noisy distribution. </p>\n\n<p>The image in this case is designed to show off which choice was actually made. Some rescaling procedures have made remarkable choices, in particular some versions of Microsoft Internet Explorer, and it can lead to weird biases. </p>\n\n<p>For instance, in VIPS, if I apply nearest neighbour downscaling to the image I get your result (biased to the darker pixels), but if I apply a one pixel diagonal offset first (by choosing an odd offset region) I get the Photoshop result (biased to the lighter pixels). This is merely a result of rounding 0.5 up or down. You can get either to be more correct by defining where subpixel coordinates hit, that is, if a given pixel's coordinates is in a corner or center of that pixel. </p>\n\n<p>The image appears to be designed to test not nearest neighbour, but gamma calculations for linear interpolation. Many image scalers incorrectly assume that the colour space is linear and straight average of pixel values can be used, but our vision is roughly logarithmic, so popular colour spaces like sRGB use a gamma curve to approximate it better. </p>\n"}], "owner": {"reputation": 1461, "user_id": 1594918, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/69305d97391e6732df46b038ffbeaee5?s=128&d=identicon&r=PG", "display_name": "kosinix", "link": "https://stackoverflow.com/users/1594918/kosinix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1728, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1500725918, "creation_date": 1500688308, "last_edit_date": 1500725918, "question_id": 45249860, "link": "https://stackoverflow.com/questions/45249860/whats-wrong-with-this-nearest-neighbor-algorithm-for-image-scaling", "title": "Whats wrong with this nearest neighbor algorithm for image scaling?", "body": "<p>I've been hunkered for days trying to find out what's wrong with my nearest neighbor interpolation when scaling an image half its size. Im using Rust but I don't think it matters as much as the algorithm:</p>\n\n<pre><code>/// Interpolate using nearest neighbor.\npub fn nearest(mut src: &amp;mut Image, w2: i32, h2: i32) -&gt; RasterResult&lt;()&gt; {\n\n    // Compute scale\n    let x_scale: f64 = src.width as f64 / w2 as f64;\n    let y_scale: f64 = src.height as f64 / h2 as f64;\n\n    // Create destination image\n    let mut dest = Image::blank(w2, h2);\n\n    // Loop thru destination image's pixels\n    for y2 in 0..h2 {\n        for x2 in 0..w2 {\n\n            // Get location from src using nearest neighbor\n            let x1: i32 = ( x2 as f64 * x_scale ).floor() as i32;\n            let y1: i32 = ( y2 as f64 * y_scale ).floor() as i32;\n            let pixel = try!(src.get_pixel(x1, y1));\n\n            // Apply the pixels\n            try!(dest.set_pixel(x2, y2, pixel));\n        }\n    }\n\n    // Update the source image\n    src.width = dest.width;\n    src.height = dest.height;\n    src.bytes = dest.bytes;\n\n    Ok(())\n}\n</code></pre>\n\n<p>My calling code:</p>\n\n<pre><code>// Open\nlet mut image = raster::open(r\"test.png\").unwrap();\n\n// Resize to half\nraster::interpolate::nearest(&amp;mut image, 256, 128).unwrap();\n\n// Save\nraster::save(&amp;image, r\"out.png\").unwrap();\n</code></pre>\n\n<p>It works fine for regular images but not on special cases. \nHere is the test image:\n<a href=\"https://i.stack.imgur.com/XQX3j.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/XQX3j.png\" alt=\"test image\"></a></p>\n\n<p>Scaled to half with my code:</p>\n\n<p><a href=\"https://i.stack.imgur.com/EUJsf.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/EUJsf.png\" alt=\"scaled to half with my code\"></a></p>\n\n<p>For comparison here is Photoshop's:</p>\n\n<p><a href=\"https://i.stack.imgur.com/0pP6d.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/0pP6d.png\" alt=\"Scaled to half with Photoshop&#39;s\"></a></p>\n\n<p>I tested with GD and it yields similar results to Photoshop.</p>\n\n<p>My investigation leads me to think that my computation of the source pixel (red squares) is off by one as compared to the others (green squares):</p>\n\n<p><a href=\"https://i.stack.imgur.com/qdTc6.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/qdTc6.png\" alt=\"zoom of problem area\"></a></p>\n\n<p>I also tried looking <a href=\"https://github.com/libgd/libgd/blob/00bbb69cc3fd7223e9fc7f01dd3d87c2956de93b/src/gd.c#L3229\" rel=\"nofollow noreferrer\">into GD's source code</a> to get a clue, but I don't fully understand what it does.</p>\n\n<p>To clarify, I am not talking about using a different interpolation method such as bilinear and bicubic. I am comparing my nearest neighbor algorithm and its result to the result of Photoshop and GD's nearest neighbor algorithm. I am not asking why my results in Photoshop are ugly because I used nearest neighbor algorithm.</p>\n\n<p>(Test image courtesy of Jonas Berlin via <a href=\"https://web.archive.org/web/20160112115812/http://www.4p8.com/eric.brasseur/gamma.html\" rel=\"nofollow noreferrer\">Eric Brasseur</a> )</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500725617, "post_id": 45249716, "comment_id": 77472785, "body": "This has been asked many times \u2014 I found 3 exact duplicates by just searching for the error message. Please <b>search for your question</b> before asking it."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500725551, "post_id": 45250768, "comment_id": 77472762, "body": "Please <b>do not answer duplicates</b>. Instead, search before answering and then mark them as such."}], "tags": [], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "is_accepted": false, "score": 1, "last_activity_date": 1562382825, "last_edit_date": 1562382825, "creation_date": 1500698550, "answer_id": 45250768, "question_id": 45249716, "link": "https://stackoverflow.com/questions/45249716/mismatched-type-while-returning-generic-struct/45250768#45250768", "title": "Mismatched Type while returning generic Struct", "body": "<p>The problem is that 1 mismatch to 2:</p>\n\n<pre><code>fn new()-&gt; DBPool&lt;M&gt;/*1*/  {\n    let manager = PostgresConnectionManager::new\n    let p =  r2d2::Pool::new(config, manager).unwrap() ;\n    DBPool { pool: p}/*2*/\n}\n</code></pre>\n\n<p>In <code>1</code> you tell I return any <code>DBPool&lt;M&gt;</code> where <code>M</code> any type that implement\n<code>ManageConnection</code>, but then at <code>2</code> you tell I change my mind I return specific <code>M</code> = <code>PostgresConnectionManager</code>,\nfor example such signature allow you to write:</p>\n\n<pre><code>let d = DBPoll::&lt;SqliteConnectionManager&gt;::new();\n</code></pre>\n\n<p>so <code>rustc</code> report syntax error, to fix this issue you should specify\nexact type:</p>\n\n<pre><code>fn new() -&gt; DBPool&lt;PostgresConnectionManager&gt; {\n</code></pre>\n"}], "owner": {"reputation": 29, "user_id": 5340295, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c897183b0d2737e28d951d9e12ca34cf?s=128&d=identicon&r=PG&f=1", "display_name": "abir", "link": "https://stackoverflow.com/users/5340295/abir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "closed_date": 1500725495, "answer_count": 1, "score": 1, "last_activity_date": 1562382825, "creation_date": 1500686523, "question_id": 45249716, "link": "https://stackoverflow.com/questions/45249716/mismatched-type-while-returning-generic-struct", "closed_reason": "Duplicate", "title": "Mismatched Type while returning generic Struct", "body": "<p>I am trying to create Connection Pool, using r2d2 postgres crate, and hold it in struct DBPool so that I can pass around this instance to different handlers for dbConn, but getting mismatch error during compilation. Unable to figure out the reason for this mismatch as PostgresConnectionManager implements ManageConnection trait so what is missing here. </p>\n\n<p>Thanks in advance.</p>\n\n<pre><code>extern crate r2d2;\nextern crate r2d2_postgres;\n\n use std::thread;\n use r2d2:: {Pool, ManageConnection};\n use r2d2_postgres::{TlsMode, PostgresConnectionManager};\n\nfn main() {\n\n    let pool = DBPool::&lt;PostgresConnectionManager&gt;::new();\n    println!(\"{:?}\", pool.pool);\n}\n\nstruct DBPool &lt;M: ManageConnection&gt;{\n    pool: Pool&lt;M&gt;\n}\n\nimpl&lt;M: ManageConnection&gt; DBPool&lt;M&gt; {\n    fn new()-&gt; DBPool&lt;M&gt;  {\n        let config = r2d2::Config::default();\n        let manager = PostgresConnectionManager::new(\"postgresql://root@localhost:26257/db?sslmode=disable\", TlsMode::None).unwrap();\n        let p =  r2d2::Pool::new(config, manager).unwrap() ;\n\n        println!(\"Pool p: {:?}\", p);\n        DBPool { pool: p}\n    }\n}\n</code></pre>\n\n<p>Compilation error:</p>\n\n<pre><code> dbcon git:(master) \u2717 cargo run\n   Compiling dbcon v0.1.0 (file:///Users/arvindbir/projects/rust/dbcon)\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:42:9\n   |\n42 |         DBPool { pool: p}\n   |         ^^^^^^^^^^^^^^^^^ expected type parameter, found struct `r2d2_postgres::PostgresConnectionManager`\n   |\n   = note: expected type `DBPool&lt;M&gt;`\n              found type `DBPool&lt;r2d2_postgres::PostgresConnectionManager&gt;`\n\nerror: aborting due to previous error\n\nerror: Could not compile `dbcon`.\n</code></pre>\n"}, {"tags": ["static", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1500684852, "post_id": 45249486, "comment_id": 77464074, "body": "because pow is not constant ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1500726309, "post_id": 45249486, "comment_id": 77472985, "body": "There&#39;s no such concept in Rust as a &quot;static fn&quot;, there is only &quot;const fn&quot;."}, {"owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500829237, "post_id": 45249486, "comment_id": 77498117, "body": "@Shepmaster In some literature, I see Thing::method() referred to as &quot;static methods&quot;, e.g. <a href=\"https://rustbyexample.com/fn/methods.html\" rel=\"nofollow noreferrer\">rustbyexample.com/fn/methods.html</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1500830260, "post_id": 45249486, "comment_id": 77498446, "body": "@marathon thank you for pointing that out. Those are called <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch05-03-method-syntax.html#associated-functions\" rel=\"nofollow noreferrer\">associated functions</a>. I&#39;ll see about a PR to fix that."}], "answers": [{"comments": [{"owner": {"reputation": 905, "user_id": 3025267, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/b304a447c1c17ed7baf22f270b85853b?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac Woods", "link": "https://stackoverflow.com/users/3025267/isaac-woods"}, "edited": false, "score": 0, "creation_date": 1517665027, "post_id": 45252788, "comment_id": 84192384, "body": "Update on this: hopefully as Miri is integrated into rustc more, more things will become possible and many more functions will be able to be marked <code>const</code>"}], "tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": true, "score": 8, "last_activity_date": 1500831578, "last_edit_date": 1500831578, "creation_date": 1500714911, "answer_id": 45252788, "question_id": 45249486, "link": "https://stackoverflow.com/questions/45249486/why-cant-const-functions-in-rust-make-calls-to-associated-functions/45252788#45252788", "title": "Why can&#39;t const functions in Rust make calls to associated functions?", "body": "<p>A const function cannot call a non-const function. This is because const functions need to be able to run during compilation, so they can't call a non-const function which can only be evaluated at runtime. Since <code>u32::pow</code> is not a const function, you can't call it from a const function.</p>\n\n<p>The question now becomes: Why isn't <code>u32::pow</code> a const function? And the reason for that is a current limitation of const functions: They can only contain a subset of the language. Notably, they can't contain loops or assignments. Since <a href=\"https://github.com/rust-lang/rust/blob/1.19.0/src/libcore/num/mod.rs#L1084-L1104\" rel=\"nofollow noreferrer\"><code>u32::pow</code> uses both of these</a>, it can't be marked as <code>const</code> and therefore can't be called from const functions.</p>\n\n<p>Note that there isn't any limitation of calling associated functions from const functions, as long as the associated function is marked <code>const</code>. And <code>u32::pow</code> is not an associated function in any case: you can call it as e.g. <code>x.pow(y)</code>.</p>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2585, "favorite_count": 0, "accepted_answer_id": 45252788, "answer_count": 1, "score": 2, "last_activity_date": 1500831578, "creation_date": 1500683812, "last_edit_date": 1500830389, "question_id": 45249486, "link": "https://stackoverflow.com/questions/45249486/why-cant-const-functions-in-rust-make-calls-to-associated-functions", "title": "Why can&#39;t const functions in Rust make calls to associated functions?", "body": "<p>This:</p>\n\n<pre><code>const fn pow2(exp: u32) -&gt; u32 {\n    u32::pow(exp, 2)\n}\n</code></pre>\n\n<p>Results in a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in constant functions are limited to constant functions, struct and enum constructors\n</code></pre>\n\n<p>Is there a way to do this?</p>\n\n<p>I'd like to do:</p>\n\n<pre><code>pub const MY_BITMASK: u32 = pow2(4);\n</code></pre>\n"}, {"tags": ["rust", "emscripten"], "answers": [{"comments": [{"owner": {"reputation": 1148, "user_id": 1718518, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/2e0bb9684b8efbf6aed5efa3fd883126?s=128&d=identicon&r=PG", "display_name": "Josh Hansen", "link": "https://stackoverflow.com/users/1718518/josh-hansen"}, "edited": false, "score": 1, "creation_date": 1509996870, "post_id": 45377859, "comment_id": 81238867, "body": "Help me understand why <code>worker.js</code> is necessary. If <code>loader.js</code> gets run within the <code>Worker</code>, why doesn&#39;t it just load the wasm file directly? Instead it uses <code>importScripts</code> to hand off to <code>worker.js</code> which is supposed to load the wasm file. Why this extra layer of indirection?"}], "tags": [], "owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "is_accepted": true, "score": 4, "last_activity_date": 1501258748, "last_edit_date": 1501258748, "creation_date": 1501257649, "answer_id": 45377859, "question_id": 45248078, "link": "https://stackoverflow.com/questions/45248078/creating-web-worker-from-rust-with-emscripten-target/45377859#45377859", "title": "Creating web worker from Rust with Emscripten target", "body": "<p>I fixed the problem by using <a href=\"https://github.com/koute/stdweb\" rel=\"nofollow noreferrer\"><code>stdweb</code></a> crate like this (Thanks <a href=\"https://users.rust-lang.org/t/calling-web-worker-function-from-emscripten/12077/4?u=afshin\" rel=\"nofollow noreferrer\">ivanceras</a>):</p>\n\n<p><strong>worker.rs</strong></p>\n\n<pre><code>#![feature(link_args)]\n#[link_args = \"-s BUILD_AS_WORKER=1\"]\n\n#[macro_use]\nextern crate stdweb;\n\nfn main(){\n    stdweb::initialize();\n\n    js! {\n        this.addEventListener(\"message\", (e) =&gt; {\n            console.log(\"The main thread said something\", e.data);\n        })\n    }\n    stdweb::event_loop();\n}\n</code></pre>\n\n<p><strong>loader.js</strong></p>\n\n<pre><code>var wasm_file = \"worker.wasm\"; // wasm file\nvar wjs_file = \"worker.js\"; // w.js file that links the wasm file\n\nModule = {}\nconsole.log(\"Loading webassembly version\");\n/// fetch wasm file and inject the js file\nfetch(wasm_file)\n  .then(response =&gt; response.arrayBuffer())\n  .then(bytes =&gt; {\n    Module.wasmBinary = bytes;\n    console.log(\"wasm has loaded..\");\n    console.log(\"attaching as script\");\n    self.importScripts(wjs_file);\n  });\n</code></pre>\n\n<p>and finally, the <strong>HTML file</strong>:  </p>\n\n<pre><code>&lt;script&gt;\n    var worker = new Worker(\"loader.js\");\n    setTimeout(function () {\n        worker.postMessage({\"cmd\":\"doSomething\"});\n    }, 1000);\n&lt;/script&gt;\n</code></pre>\n\n<p>Don't forget to add the <code>--target=wasm32-unknown-emscripten</code> flag when you build the Rust file.</p>\n"}], "owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 554, "favorite_count": 1, "accepted_answer_id": 45377859, "answer_count": 1, "score": 11, "last_activity_date": 1501258803, "creation_date": 1500679479, "last_edit_date": 1501258803, "question_id": 45248078, "link": "https://stackoverflow.com/questions/45248078/creating-web-worker-from-rust-with-emscripten-target", "title": "Creating web worker from Rust with Emscripten target", "body": "<p>I'm trying to create a web worker from Rust, calling a function in the worker file and passing some data to the main thread.</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>mod externs;\nextern crate libc;\n\nfn main() {\n    println!(\"starting worker\");\n    let worker = externs::create_worker(\"./worker.js\");\n    externs::call_worker(worker, \"worker_fn\", \"\", 0);\n    println!(\"worker called\");\n}\n</code></pre>\n\n<p><strong>worker.rs</strong></p>\n\n<pre><code>#![feature(link_args)]\n#[link_args = \"-s EXPORTED_FUNCTIONS=['_worker_fn'] -s BUILD_AS_WORKER=1\"]\n\nextern crate libc;\n\nmod externs;\n\nextern {}\n\nfn main() {\n    println!(\"worker main\");\n}\n\n#[no_mangle]\npub extern fn worker_fn() {\n    println!(\"hello from the other side!\");\n}\n</code></pre>\n\n<p>When I compile the worker and main files, I'm able to see the message from <code>main.rs</code> and even the \"worker main\" message in the worker file. I can also see that the browser sends a request to <code>worker.js</code>, but it seems like the main thread does not call the <code>worker_fn</code> inside the worker file.</p>\n\n<p>This is the <code>externs</code> file:</p>\n\n<pre><code>use std::ffi::CString;\nuse libc::*;\nuse std::str::FromStr;\n\n/// Creating web worker\npub fn create_worker(url: &amp;str) -&gt; ffi::worker_handle {\n    let url = CString::new(url).unwrap();\n    let ptr = url.as_ptr();\n    unsafe { ffi::emscripten_create_worker(ptr) }\n}\n\nextern \"C\" fn do_something_handler(arg1: *mut c_char, arg2: c_int, arg3: *mut c_void) {\n    println!(\"worker done!\");\n}\n\n/// Creating web worker\npub fn call_worker(worker: ffi::worker_handle, func_name: &amp;str, data: &amp;str, size: i32) {\n    let func_name = CString::new(func_name).unwrap();\n\n    let mut string = String::from_str(data).unwrap();\n    let bytes = string.into_bytes();\n    let mut cchar : Vec&lt;c_char&gt; = bytes.iter().map(|&amp;w| w as c_char).collect();\n    let data_slice = cchar.as_mut_slice();\n\n    let mut state = 42;\n    let state_ptr: *mut c_void = &amp;mut state as *mut _ as *mut c_void;\n\n    unsafe {\n        ffi::emscripten_call_worker(\n            worker,\n            func_name.as_ptr(),\n            data_slice.as_mut_ptr(),\n            size as c_int,\n            Some(do_something_handler),\n            state_ptr\n        )\n    };\n}\n\n// This is mostly standard Rust-C FFI stuff.\nmod ffi {\n    use libc::*;\n    pub type worker_handle = c_int;\n    pub type em_worker_callback_func = Option&lt;unsafe extern \"C\" fn(arg1: *mut c_char,\n                                                                   arg2: c_int,\n                                                                   arg3: *mut c_void)&gt;;\n\n    extern \"C\" {\n        pub fn emscripten_run_script_int(x: *const c_char) -&gt; c_int;\n        pub fn emscripten_create_worker(url: *const c_char) -&gt; worker_handle;\n        pub fn emscripten_call_worker(\n            worker: worker_handle,\n            funcname: *const c_char,\n            data: *mut c_char,\n            size: c_int,\n            callback: em_worker_callback_func,\n            arg: *mut c_void\n        );\n        pub fn emscripten_worker_respond(data: *mut c_char, size: c_int);\n        pub fn emscripten_worker_respond_provisionally(data: *mut c_char, size: c_int);\n    }\n}\n</code></pre>\n\n<p>I don't understand what the problem is. Should I somehow change the worker file or maybe even the <code>link_args</code>?</p>\n"}, {"tags": ["functional-programming", "rust", "immutability"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1500664338, "post_id": 45245038, "comment_id": 77456280, "body": "You are asking for people&#39;s opinions on how to structure your code, even worse, what &quot;good&quot; functional programming is. This is not on-topic for Stack Overflow: <i>Many good questions generate some degree of opinion based on expert experience, but answers to this question will tend to be almost entirely based on opinions</i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1500664427, "post_id": 45245038, "comment_id": 77456327, "body": "If you have working code, this <i>may</i> be a good fit for <a href=\"https://codereview.meta.stackexchange.com/q/5777/32521\">Code Review</a>. As an additional nit, Rust doesn&#39;t have &quot;classes&quot;. It&#39;s also not required to write in a fully functional style in Rust, although you often can."}], "owner": {"reputation": 167, "user_id": 4610716, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/318e46619794c838204b4c6acc4775dd?s=128&d=identicon&r=PG&f=1", "display_name": "lesurp", "link": "https://stackoverflow.com/users/4610716/lesurp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 167, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1500664247, "creation_date": 1500663868, "last_edit_date": 1500664247, "question_id": 45245038, "link": "https://stackoverflow.com/questions/45245038/functional-programming-and-immutability-in-rust", "title": "Functional programming and immutability in Rust", "body": "<p>I'm writing a small Sudoku game in Rust.\nA class named <code>GameState</code> holds all information necessary for the game to be (dis)played, a class named <code>Renderer</code> uses a <code>GameState</code> to display the GUI, and a class named <code>Controller</code> receives the user input, and converts those into data to update the <code>GameState</code>.</p>\n\n<p>I am having issues understanding how to apply \"good\" functional programming practices when it comes to updating those values.</p>\n\n<p>As of now, my controller owns the <code>GameState</code>:</p>\n\n<pre><code>pub struct Controller {\n     pub game_state: GameState,\n}\n</code></pre>\n\n<p>My <code>Renderer</code> simply uses a reference to a <code>GameState</code> when necessary:</p>\n\n<pre><code>window.draw_2d(&amp;e, |c, g| {\n    clear([1.0; 4], g);\n\n    let t = c.transform;\n\n    renderer.draw_all(&amp;controller.game_state, t, g);\n});\n</code></pre>\n\n<p>When I update my <code>GameState</code> (from my <code>Controller</code>'s method that receives user input), should I simply have everything mutable (which is not what I \"should\" be doing in FP), like this: </p>\n\n<pre><code>fn button(&amp;mut self, key: Key) {\n    use piston_window::Key::*;\n    let new_val;\n\n    match key {\n        D1 =&gt; new_val = 1,\n        D2 =&gt; new_val = 2,\n        D3 =&gt; new_val = 3,\n        D4 =&gt; new_val = 4,\n        D5 =&gt; new_val = 5,\n        D6 =&gt; new_val = 6,\n        D7 =&gt; new_val = 7,\n        D8 =&gt; new_val = 8,\n        D9 =&gt; new_val = 9,\n        _ =&gt; return,\n    }\n\n    let cell = self.game_state.selected_cell_index;\n    self.game_state.grid[cell.row][cell.col] = Cell::Value(new_val);\n}\n</code></pre>\n\n<p>Or have only a mutable <code>Controller</code>, with a new <code>GameState</code>:</p>\n\n<pre><code>fn button(&amp;mut self, key: Key) {\n    use piston_window::Key::*;\n    let new_val;\n\n    match key {\n        D1 =&gt; new_val = 1,\n        D2 =&gt; new_val = 2,\n        D3 =&gt; new_val = 3,\n        D4 =&gt; new_val = 4,\n        D5 =&gt; new_val = 5,\n        D6 =&gt; new_val = 6,\n        D7 =&gt; new_val = 7,\n        D8 =&gt; new_val = 8,\n        D9 =&gt; new_val = 9,\n        _ =&gt; return,\n    }\n\n    let cell = self.game_state.selected_cell_index;\n    self.game_state = self.game_state.play(cell, new_val);\n}\n</code></pre>\n\n<p>Or should I just have both data structures immutable and recreated ? In my case I guess in the end not having the <code>Controller</code> owning the <code>GameState</code> is probably as good, but in general I wonder how people deal with this issue. Shouldn't it be obvious, or am I simply missing the point of functional programming as a whole?</p>\n"}, {"tags": ["macros", "rust", "documentation", "documentation-generation", "rust-crates"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 2, "last_activity_date": 1500695935, "creation_date": 1500695935, "answer_id": 45250506, "question_id": 45244645, "link": "https://stackoverflow.com/questions/45244645/how-to-include-documentation-for-unique-match-cases-in-macros/45250506#45250506", "title": "How to include documentation for unique match cases in macros?", "body": "<p>You can't.  The only place you can attach documentation to a macro is to the macro as a whole.</p>\n"}], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 45, "favorite_count": 0, "accepted_answer_id": 45250506, "answer_count": 1, "score": 0, "last_activity_date": 1500695935, "creation_date": 1500662370, "last_edit_date": 1500675113, "question_id": 45244645, "link": "https://stackoverflow.com/questions/45244645/how-to-include-documentation-for-unique-match-cases-in-macros", "title": "How to include documentation for unique match cases in macros?", "body": "<p>Is is possible to write documentation for individual match cases of an exported macro.</p>\n\n<pre><code>/// This macro does stuff // this works\n#[macro_export]\nmacro_rules! macro{\n    /// Today it's time for cats // error: no rules expected the token `[`\n    (cat) =&gt; { ... };\n    /// Today it's time for dogs // error: no rules expected the token `[`\n    (dog) =&gt; { ... };\n    /// Why not both // error: no rules expected the token `[`\n    (cats and dogs) =&gt; { ... };\n}\n</code></pre>\n\n<p>Is something like this possible or do I have to do it like this:</p>\n\n<pre><code>/// This macro does stuff\n/// `(cat)` - Today it's time for cats\n/// `(dog)` - Today it's time for dogs\n/// `(cats and dogs)` - Why not both\n#[macro_export]\nmacro_rules! macro{\n    (cat) =&gt; { ... }; \n    (dog) =&gt; { ... };\n    (cats and dogs) =&gt; { ... };\n}\n</code></pre>\n"}, {"tags": ["json", "rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 5045, "user_id": 329496, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/92ab9af5b2597efeee9eab0f0d782409?s=128&d=identicon&r=PG", "display_name": "simbo1905", "link": "https://stackoverflow.com/users/329496/simbo1905"}, "edited": false, "score": 0, "creation_date": 1500669727, "post_id": 45244822, "comment_id": 77458845, "body": "Coming from a GCed language I would instinctively shy away from using my own structures that mirror someone else&#39;s with coping between the two. Is it the case that with Rust that the compiler can optimise things away such that the &quot;own type&quot; approach you suggest can be a zero overhead technique like the newtype pattern?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5045, "user_id": 329496, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/92ab9af5b2597efeee9eab0f0d782409?s=128&d=identicon&r=PG", "display_name": "simbo1905", "link": "https://stackoverflow.com/users/329496/simbo1905"}, "edited": false, "score": 1, "creation_date": 1500671301, "post_id": 45244822, "comment_id": 77459567, "body": "@simbo1905 I don&#39;t believe that there&#39;s any such optimization here, or if there is it&#39;s incidental. I don&#39;t think that GC or not matters here though. In the end, you deserialize to the local <code>Mine</code> struct, then transfer ownership of the bits to the real struct, which should be the same as if you were returning the real struct. I would expect the optimizer to coalesce the move to <code>Mine</code> and then the move to <code>Real</code>, making it equally efficient. I&#39;d expect much the same from a language like Java or C#."}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1538732149, "post_id": 45244822, "comment_id": 92255225, "body": "Is it possible to pattern match on <code>serde_json::Value::Object(json!({&quot;a&quot; : a, &quot;b&quot; : b})) =&gt; {  use(a, b); }</code> ?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1500663508, "last_edit_date": 1500663508, "creation_date": 1500663077, "answer_id": 45244822, "question_id": 45244559, "link": "https://stackoverflow.com/questions/45244559/how-can-i-pattern-match-to-get-at-the-numbers-that-serde-json-has-parsed/45244822#45244822", "title": "How can I pattern match to get at the numbers that serde_json has parsed?", "body": "<p>You cannot pattern match on private fields because they are private. You have to use the accessors the library decides to provide. The serde_json documentation for <a href=\"https://docs.serde.rs/serde_json/struct.Number.html\" rel=\"nofollow noreferrer\"><code>Number</code></a> shows that it has methods like <a href=\"https://docs.serde.rs/serde_json/struct.Number.html#method.as_u64\" rel=\"nofollow noreferrer\"><code>as_u64</code></a>:</p>\n\n<pre><code>let value = e.as_u64().expect(\"not a u64\");\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>As I don't want to edit the 3rd party source code I don't want to use the derive macros.</p>\n</blockquote>\n\n<p>You may be suffering from the <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">X-Y problem</a>. For example, the Serde docs describe how to <a href=\"https://serde.rs/remote-derive.html\" rel=\"nofollow noreferrer\">implement the traits for a \"remote type\"</a>. </p>\n\n<p>You could also create your own type that you deserialize into and construct a transformation to and from the library type:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\n#[derive(Deserialize)]\nstruct Mine {\n    e: u64,\n    c: u64,\n    n: u64,\n}\n\n#[test]\nfn test_parse_from_json() {\n    let s = r#\"{\n        \"e\": 0,\n        \"c\": 1,\n        \"n\": 2\n    }\"#;\n\n    let v: Mine = serde_json::from_str(&amp;s).unwrap();\n    println!(\"{:?}\", (v.e, v.c, v.n));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5045, "user_id": 329496, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/92ab9af5b2597efeee9eab0f0d782409?s=128&d=identicon&r=PG", "display_name": "simbo1905", "link": "https://stackoverflow.com/users/329496/simbo1905"}, "is_accepted": false, "score": 0, "last_activity_date": 1500669377, "creation_date": 1500669377, "answer_id": 45246338, "question_id": 45244559, "link": "https://stackoverflow.com/questions/45244559/how-can-i-pattern-match-to-get-at-the-numbers-that-serde-json-has-parsed/45246338#45246338", "title": "How can I pattern match to get at the numbers that serde_json has parsed?", "body": "<p>Based on @Shepmaster's answer I got a lot further along: </p>\n\n<pre><code>let v: Map&lt;String, Value&gt; = serde_json::from_str(&amp;s).unwrap();\n\nlet bn: Option&lt;BallotNumber&gt;;\n\nmatch (&amp;v[\"e\"],&amp;v[\"c\"],&amp;v[\"n\"]) {\n    (&amp;Value::Number(ref e),&amp;Value::Number(ref c),&amp;Value::Number(ref n)) =&gt; {\n        match ( &amp;e.as_u64(), &amp;c.as_u64(), &amp;n.as_u64() ) {\n            (&amp;Some(era), &amp;Some(count), &amp;Some(number)) =&gt; \n                bn = Some(BallotNumber::new(era, count, number)),\n            _ =&gt; \n                bn = None\n        }\n    },\n    _ =&gt; \n        bn = None\n} \n</code></pre>\n\n<p>That does the trick only it looks like a bit of a train smash. Given that @Shepmaster's answer points out that serde provided a way around the Orphan rule I will use that approach. </p>\n"}], "owner": {"reputation": 5045, "user_id": 329496, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/92ab9af5b2597efeee9eab0f0d782409?s=128&d=identicon&r=PG", "display_name": "simbo1905", "link": "https://stackoverflow.com/users/329496/simbo1905"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 696, "favorite_count": 0, "accepted_answer_id": 45244822, "answer_count": 2, "score": 2, "last_activity_date": 1500669377, "creation_date": 1500662105, "last_edit_date": 1500669336, "question_id": 45244559, "link": "https://stackoverflow.com/questions/45244559/how-can-i-pattern-match-to-get-at-the-numbers-that-serde-json-has-parsed", "title": "How can I pattern match to get at the numbers that serde_json has parsed?", "body": "<p>I want to convert 3rd party library enums to and from JSON. As I don't want to edit the 3rd party source code I don't want to use the derive macros.</p>\n\n<p>I want to handwrite the serde_json <code>deserialize</code> method. I am thinking that pattern matching is the way to go but the things I need to match on are not public: </p>\n\n<pre><code>extern crate serde_json;\n\n#[test]\nfn test_parse_from_json() {\n    let s = r#\"{\n                    \"e\": 0,\n                    \"c\": 1,\n                    \"n\": 2\n                  }\"#;\n\n    let v: Map&lt;String, Value&gt; = serde_json::from_str(&amp;s).unwrap();\n\n    match (&amp;v[\"e\"], &amp;v[\"c\"], &amp;v[\"n\"]) {\n        (&amp;Value::Number(ref e), &amp;Value::Number(ref c), &amp;Value::Number(ref n)) =&gt; {\n            // e is a PosInt(u64) but that isn't public to match one nor access its methods!\n            let value = e.n; // error[E0616]: field `n` of struct `serde_json::Number` is private\n        }\n        _ =&gt; (),\n    }\n\n}\n</code></pre>\n\n<p>That doesn't compile. If I replace that inner bit with something I can set a breakpoint on, I can see in the debugger that <code>e</code> is a <code>Number</code> which contains a <code>PosInt(0)</code>. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1500640654, "post_id": 45237801, "comment_id": 77441505, "body": "Thanks, I missed that."}], "tags": [], "owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "is_accepted": false, "score": 11, "last_activity_date": 1500644245, "last_edit_date": 1500644245, "creation_date": 1500640349, "answer_id": 45237801, "question_id": 45237680, "link": "https://stackoverflow.com/questions/45237680/should-i-return-optionfoo-or-optionfoo-from-a-getter/45237801#45237801", "title": "Should I return &amp;Option&lt;Foo&gt; or Option&lt;&amp;Foo&gt; from a getter?", "body": "<p>Use <code>Option&lt;&amp;T&gt;</code> instead of <code>&amp;Option&lt;T&gt;</code>. Callers are interested in the wrapped value, not in <code>Option</code>.</p>\n\n<p>Also, the common way to implement a getter like this is as follows:</p>\n\n<pre><code>impl Boo {\n    pub fn get_foo(&amp;self) -&gt; Option&lt;&amp;Foo&gt; { self.foo.as_ref() }\n}\n</code></pre>\n\n<p>This way you don't need to check the wrapped value in the getter. If you want to return a mutable value, use <code>as_mut()</code> instead.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 10, "last_activity_date": 1500640810, "creation_date": 1500640810, "answer_id": 45237975, "question_id": 45237680, "link": "https://stackoverflow.com/questions/45237680/should-i-return-optionfoo-or-optionfoo-from-a-getter/45237975#45237975", "title": "Should I return &amp;Option&lt;Foo&gt; or Option&lt;&amp;Foo&gt; from a getter?", "body": "<p>When in doubt, pick the most flexible solution. This leaves you the most leeway in the future to change the internals of the struct without altering its API.</p>\n\n<p>In this case, this means picking <code>Option&lt;&amp;T&gt;</code>:</p>\n\n<ul>\n<li><code>&amp;Option&lt;T&gt;</code> forces you to have a reference to an option,</li>\n<li><code>Option&lt;&amp;T&gt;</code> only requires a reference to a <code>T</code>.</li>\n</ul>\n\n<p>So, for example, in the latter case I could store a <code>Vec&lt;T&gt;</code> or a <code>Result&lt;T, Error&gt;</code> and still be able to hand out a <code>Option&lt;&amp;T&gt;</code>. It is more flexible.</p>\n\n<p><em>Note: this is why interfaces generally use <code>&amp;str</code> instead of <code>&amp;String</code>, <code>&amp;[T]</code> instead of <code>&amp;Vec&lt;T&gt;</code>, ... more flexibility!</em></p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 299, "favorite_count": 0, "answer_count": 2, "score": 8, "last_activity_date": 1500644328, "creation_date": 1500640000, "last_edit_date": 1500644328, "question_id": 45237680, "link": "https://stackoverflow.com/questions/45237680/should-i-return-optionfoo-or-optionfoo-from-a-getter", "title": "Should I return &amp;Option&lt;Foo&gt; or Option&lt;&amp;Foo&gt; from a getter?", "body": "<p>I have a struct:</p>\n\n<pre><code>struct Foo {}\nstruct Boo {\n    foo: Option&lt;Foo&gt;,\n}\n</code></pre>\n\n<p>I want to create getter for it, so user cannot modify it but can read it:</p>\n\n<pre><code>impl Boo {\n    pub fn get_foo(&amp;self) -&gt; ? { unimplemented!(); }\n}\n</code></pre>\n\n<p>Should I return <code>&amp;Option&lt;Foo&gt;</code> or <code>Option&lt;&amp;Foo&gt;</code>? Are there any advantages between these two variants?</p>\n\n<p>I use both variants in my program, and it became an inconvenience to mix them, so I want to choose one of them for the entire program.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1500640135, "post_id": 45237658, "comment_id": 77441107, "body": "What do you want to do in the <code>Err</code> branch? You have to return <i>something</i>, or call <code>panic!(\u2026)</code>."}, {"owner": {"reputation": 696, "user_id": 2129644, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8feb0a34801725042b245cd1158fda48?s=128&d=identicon&r=PG", "display_name": "Olof", "link": "https://stackoverflow.com/users/2129644/olof"}, "reply_to_user": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1500640626, "post_id": 45237658, "comment_id": 77441487, "body": "@FlorianWeimer I want o return 2  to set a default value. It&#39;s in a comment because I got the error expected (), found integral variable"}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1500640708, "post_id": 45237658, "comment_id": 77441552, "body": "But with <code>return 2</code>, it does compile, right? If not, please show the error for that, not error for the code variant you are not actually interested in."}, {"owner": {"reputation": 696, "user_id": 2129644, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8feb0a34801725042b245cd1158fda48?s=128&d=identicon&r=PG", "display_name": "Olof", "link": "https://stackoverflow.com/users/2129644/olof"}, "reply_to_user": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1500640804, "post_id": 45237658, "comment_id": 77441626, "body": "Nope I&#39;ll get the first error you see on the top."}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1500640890, "post_id": 45237658, "comment_id": 77441699, "body": "It&#39;s hard to tell what&#39;s going on because your example is incomplete. You need to show at least the complete function. It looks like it returns <code>()</code> and not <code>usize</code>."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1500641143, "post_id": 45237658, "comment_id": 77441902, "body": "Blind guess: @Olof is trying to &quot;return&quot; from the match.  If that&#39;s the case: you can&#39;t.  <code>return</code> returns from the function.  There is no way to &quot;early exit&quot; a match with a value."}, {"owner": {"reputation": 696, "user_id": 2129644, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8feb0a34801725042b245cd1158fda48?s=128&d=identicon&r=PG", "display_name": "Olof", "link": "https://stackoverflow.com/users/2129644/olof"}, "edited": false, "score": 0, "creation_date": 1500641168, "post_id": 45237658, "comment_id": 77441919, "body": "I added now all the code in my project. Which is almost the same."}, {"owner": {"reputation": 696, "user_id": 2129644, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8feb0a34801725042b245cd1158fda48?s=128&d=identicon&r=PG", "display_name": "Olof", "link": "https://stackoverflow.com/users/2129644/olof"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1500641379, "post_id": 45237658, "comment_id": 77442074, "body": "@DK then how is the intended way to do it if you want to set a default value when you get an error?"}, {"owner": {"reputation": 696, "user_id": 2129644, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8feb0a34801725042b245cd1158fda48?s=128&d=identicon&r=PG", "display_name": "Olof", "link": "https://stackoverflow.com/users/2129644/olof"}, "edited": false, "score": 0, "creation_date": 1500642449, "post_id": 45237658, "comment_id": 77442802, "body": "I somehow solved it."}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1500643786, "post_id": 45237658, "comment_id": 77443846, "body": "@Olof Glad to hear! Would you consider accepting my answer if it helped you somehow?"}], "answers": [{"tags": [], "owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "is_accepted": true, "score": 2, "last_activity_date": 1549472901, "last_edit_date": 1549472901, "creation_date": 1500642235, "answer_id": 45238446, "question_id": 45237658, "link": "https://stackoverflow.com/questions/45237658/match-arms-mismatched-types-expected-found-integral-variable/45238446#45238446", "title": "match arms: &quot;mismatched types expected (), found integral variable&quot;", "body": "<p>Change</p>\n\n<pre><code>amount_workers = match section.get(\"gateway_threads\") {\n    Some(t) =&gt; {\n        return match t.parse::&lt;usize&gt;() {\n            Ok(n) =&gt; n,\n            Err(e) =&gt; {\n                println!(\"Couldn't parse the value for gateway_threads {}\", e); //TODO: Log this\n                return 2; //ERROR HERE; //Default value is set to 2\n            }\n        };\n    }\n    None =&gt; 2, //Default value is set to 2\n};\n</code></pre>\n\n<p>to</p>\n\n<pre><code>amount_workers = match section.get(\"gateway_threads\") {\n    Some(t) =&gt; {\n        match t.parse::&lt;usize&gt;() {  // No return\n            Ok(n) =&gt; n,\n            Err(e) =&gt; {\n                println!(\"Couldn't parse the value for gateway_threads {}\", e); //TODO: Log this\n                2  // No semicolon, no return\n            }\n        } // No semicolon\n    }\n    None =&gt; 2, //Default value is set to 2\n};\n</code></pre>\n\n<p>Not ending a statement with <code>;</code> is how you return values in Rust. The <code>return</code> keyword is used when you want an entire function to return a value before the last line, which is why you call it an \"early return\".  </p>\n\n<p>You find more information about how Rust treats expressions <a href=\"https://barafael.github.io/Statements-and-Expressions-in-Rust/\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 696, "user_id": 2129644, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8feb0a34801725042b245cd1158fda48?s=128&d=identicon&r=PG", "display_name": "Olof", "link": "https://stackoverflow.com/users/2129644/olof"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1773, "favorite_count": 1, "accepted_answer_id": 45238446, "answer_count": 1, "score": 2, "last_activity_date": 1549472901, "creation_date": 1500639937, "last_edit_date": 1500644138, "question_id": 45237658, "link": "https://stackoverflow.com/questions/45237658/match-arms-mismatched-types-expected-found-integral-variable", "title": "match arms: &quot;mismatched types expected (), found integral variable&quot;", "body": "<p>I wrote the following code to parse a string to get the integer encoded in it, and check for errors using <code>match</code>. If I get an <code>Err(e)</code> I want to print out the error <code>e</code>, and return a default value.</p>\n\n<pre><code>return match t.parse::&lt;usize&gt;() {\n    Ok(n) =&gt; n,\n    Err(e) =&gt; {\n        println!(\"Couldn't parse the value for gateway_threads {}\", e);\n        // Return two as a default value\n        return 2;\n    },\n};\n</code></pre>\n\n<p>However, that code fails to compile, as it expects type <code>()</code> but got an integer:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:37:32\n   |\n37 |                         return 2;\n   |                                ^ expected (), found integral variable\n   |\n   = note: expected type `()`\n              found type `{integer}\n</code></pre>\n\n<p>If I remove the return of a default value I get the error <code>expected usize but got `()`</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: match arms have incompatible types\n  --&gt; src/main.rs:33:24\n   |\n33 |                   return match t.parse::&lt;usize&gt;() {\n   |  ________________________^\n34 | |                     Ok(n) =&gt; n,\n35 | |                     Err(e) =&gt; {\n36 | |                         println!(\"Couldn't parse the value for gateway_threads {}\", e); //TODO: Log this\n37 | |                         //return 2;\n38 | |                     },\n39 | |                 };\n   | |_________________^ expected usize, found ()\n   |\n   = note: expected type `usize`\n              found type `()`\nnote: match arm with an incompatible type\n  --&gt; src/main.rs:35:31\n   |\n35 |                       Err(e) =&gt; {\n   |  _______________________________^\n36 | |                         println!(\"Couldn't parse the value for gateway_threads {}\", e); //TODO: Log this\n37 | |                         //return 2;\n38 | |                     },\n   | |_____________________^\n</code></pre>\n\n<p>Full code (I'm parsing an INI config file to get some of my values):</p>\n\n<pre><code>extern crate threadpool;\nextern crate ini;\n\nuse std::net::{TcpListener, TcpStream};\nuse std::io::Read;\nuse std::process;\nuse threadpool::ThreadPool;\nuse ini::Ini;\n\nfn main() {\n\n    let mut amount_workers: usize;\n    let mut network_listen = String::with_capacity(21);\n    //Load INI\n    {\n        let conf: Ini = match Ini::load_from_file(\"/etc/iotcloud/conf.ini\") {\n            Ok(t) =&gt; t,\n            Err(e) =&gt; {\n                println!(\"Error load ini file {}\", e);\n                process::exit(0);\n            },\n        };\n        let section = match conf.section(Some(\"network\".to_owned())) {\n            Some(t) =&gt; t,\n            None =&gt; {\n                println!(\"Couldn't find the network \");\n                process::exit(0);\n            },\n        };\n        //amount_workers = section.get(\"gateway_threads\").unwrap().parse().unwrap();\n        amount_workers = match section.get(\"gateway_threads\") {\n            Some(t) =&gt; {\n                return match t.parse::&lt;usize&gt;() {\n                    Ok(n) =&gt; n,\n                    Err(e) =&gt; {\n                        println!(\"Couldn't parse the value for gateway_threads {}\", e);\n                        // Return two as a default value\n                        return 2; //ERROR HERE;\n                    },\n                };\n            },\n            None =&gt; 2, // Return two as a default value\n        };\n        let ip = section.get(\"bind_ip\").unwrap();\n        let port = section.get(\"bind_port\").unwrap();\n        network_listen.push_str(ip);\n        network_listen.push_str(\":\");\n        network_listen.push_str(port);\n    }\n}\n</code></pre>\n\n<p>What causes this error?</p>\n"}, {"tags": ["linux", "windows", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1500637423, "post_id": 45235758, "comment_id": 77439087, "body": "More precisely, if someone had a computer with windows, he could test if something like <code>&#47;c&#47;users&#47;johndoe</code> is parsed as <code>C:\\Users\\JohnDoe</code>"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1500639698, "post_id": 45235758, "comment_id": 77440743, "body": "@Boiethios Or somebody have knowledge how std lib implementing on windows"}], "answers": [{"tags": [], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "is_accepted": false, "score": 3, "last_activity_date": 1500644362, "last_edit_date": 1500644362, "creation_date": 1500641168, "answer_id": 45238082, "question_id": 45235758, "link": "https://stackoverflow.com/questions/45235758/is-pathnewmany-subdirs-good-enough-for-both-linux-and-windows/45238082#45238082", "title": "Is Path::new(many-subdirs) good enough for both Linux and Windows?", "body": "<p><code>Path::new(\"dir1/dir2/dir3\")</code> should be completely valid on Windows.</p>\n\n<p>For example:</p>\n\n<pre><code>fn main() {\n    let path = Path::new(\"test/add_folder/hello.txt\");\n\n    let mut file = File::create(path).unwrap();\n    file.write_all(b\"Hello, world!\").unwrap();\n}\n</code></pre>\n\n<p>is working without a problem on Windows, as long as the required folders exist.</p>\n\n<hr>\n\n<p><strong>However,</strong> to access something like </p>\n\n<blockquote>\n  <p>C:\\Users\\JohnDoe</p>\n</blockquote>\n\n<p><code>/c/users/johndoe</code> does not work, you need to write <code>c:/users/johndoe</code> instead.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1500649386, "creation_date": 1500649386, "answer_id": 45240919, "question_id": 45235758, "link": "https://stackoverflow.com/questions/45235758/is-pathnewmany-subdirs-good-enough-for-both-linux-and-windows/45240919#45240919", "title": "Is Path::new(many-subdirs) good enough for both Linux and Windows?", "body": "<p>\"Good enough\" is a tricky question. Both of them work to identify a path because Windows treats forward slashes (<code>/</code>) the same as backwards slashes (<code>\\</code>).</p>\n\n<p>However, if you ever <em>show</em> the path to your user (remember about error messages too!), then you should strive to meet the expectations of the platform:</p>\n\n<pre><code>use std::path::Path;\n\nfn main() {\n    let p = Path::new(\"target/debug\");\n    println!(\"{}\", p.exists());\n    println!(\"{}\", p.display());\n\n    let p = Path::new(\"target\").join(\"debug\");\n    println!(\"{}\", p.exists());\n    println!(\"{}\", p.display());\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>true\ntarget/debug\ntrue\ntarget\\debug\n</code></pre>\n\n<p>Additionally, if you were to build on another path, mixing the two styles looks <em>really</em> bad:</p>\n\n<pre><code>fn main() {\n    let cwd = std::env::current_dir().expect(\"No CWD\");\n\n    let p = cwd.join(\"target/debug\");\n    println!(\"{}\", p.exists());\n    println!(\"{}\", p.display());\n\n    let p = cwd.join(\"target\").join(\"debug\");\n    println!(\"{}\", p.exists());\n    println!(\"{}\", p.display());\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>true\nc:\\Rust\\dirs\\target/debug\ntrue\nc:\\Rust\\dirs\\target\\debug\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1500649386, "creation_date": 1500634157, "last_edit_date": 1500644405, "question_id": 45235758, "link": "https://stackoverflow.com/questions/45235758/is-pathnewmany-subdirs-good-enough-for-both-linux-and-windows", "title": "Is Path::new(many-subdirs) good enough for both Linux and Windows?", "body": "<p>I have no Windows machine right now, but I want to make my code cross-platform. I have working code from <code>build.rs</code> that works on Linux:</p>\n\n<pre><code>Path::new(\"dir1/dir2/dir3\")\n</code></pre>\n\n<p>Is this correct for Windows or should I use something like:</p>\n\n<pre><code>Path::new(\"dir1\").join(\"dir2\").join(\"dir3\")\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 2, "creation_date": 1500632387, "post_id": 45234980, "comment_id": 77435895, "body": "You should probably update to the latest stable compiler. Also, which line does this error trigger on?"}], "answers": [{"comments": [{"owner": {"reputation": 10637, "user_id": 3102968, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/1XKm3.png?s=128&g=1", "display_name": "joesan", "link": "https://stackoverflow.com/users/3102968/joesan"}, "edited": false, "score": 0, "creation_date": 1500632990, "post_id": 45235188, "comment_id": 77436295, "body": "Would you mind also sharing how to update it on a Mac? I installed Rust on my Mac using the rustup script!"}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 7, "last_activity_date": 1500647363, "last_edit_date": 1500647363, "creation_date": 1500632546, "answer_id": 45235188, "question_id": 45234980, "link": "https://stackoverflow.com/questions/45234980/how-do-i-get-rid-of-the-error-struct-field-shorthands-are-unstable/45235188#45235188", "title": "How do I get rid of the error &quot;struct field shorthands are unstable&quot;?", "body": "<p><a href=\"https://github.com/rust-lang/rust/blob/rust-1.17-relnotes/RELEASES.md#version-1170-2017-04-27\" rel=\"nofollow noreferrer\">Struct field shorthands went into Rust 1.17.0</a> (as <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1682-field-init-shorthand.md\" rel=\"nofollow noreferrer\">RFC 1682</a>), so you'll have to upgrade your Rust installation.</p>\n\n<p>If you use Rustup, see <a href=\"https://github.com/rust-lang-nursery/rustup.rs#keeping-rust-up-to-date\" rel=\"nofollow noreferrer\">these instructions how to keep your Rust installation up-to-date</a>.</p>\n"}], "owner": {"reputation": 10637, "user_id": 3102968, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/1XKm3.png?s=128&g=1", "display_name": "joesan", "link": "https://stackoverflow.com/users/3102968/joesan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 345, "favorite_count": 0, "accepted_answer_id": 45235188, "answer_count": 1, "score": 1, "last_activity_date": 1500647517, "creation_date": 1500631877, "last_edit_date": 1500647517, "question_id": 45234980, "link": "https://stackoverflow.com/questions/45234980/how-do-i-get-rid-of-the-error-struct-field-shorthands-are-unstable", "title": "How do I get rid of the error &quot;struct field shorthands are unstable&quot;?", "body": "<p>I'm trying out a Hello World application with the Iron framework. This is what I have in my main.rs:</p>\n\n<pre><code>extern crate iron;\nextern crate router;\n\nuse iron::prelude::*;\nuse iron::status;\nuse router::Router;\n\nfn main() {\n    let mut router = Router::new();\n\n    router.get(\"/\", hello_world);\n    router.post(\"/data\", randomfriend);\n\n    fn hello_world(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n        Ok(Response::with((status::Ok, \"Hello World!\")))\n    }\n\n    fn data(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n        Ok(Response::with((status::Ok, \"Got some data\")))\n    }\n\n    Iron::new(router).http(\"localhost:3000\").unwrap();\n    println!(\"On 3000\");\n}\n</code></pre>\n\n<p>Here is my Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"webserver-iron\"\nversion = \"0.1.0\"\n\n[[bin]]\nname = \"webapp_demo_server\"\n\n[dependencies]\niron = \"*\"\nrouter = \"*\"\n</code></pre>\n\n<p>When I run <code>cargo run</code>, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: struct field shorthands are unstable (see issue #37340)\n</code></pre>\n\n<p>Seems like this issue has been fixed, but how can I get rid of it? I have the following Rust version:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.16.0 (30cf806ef 2017-03-10)\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 1, "creation_date": 1500626847, "post_id": 45233061, "comment_id": 77431865, "body": "In other words, those extra lines are printed because they&#39;re part of <code>srcunit</code>. <code>read_line</code> keeps adding the new data to the end of it."}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 2, "creation_date": 1500627294, "post_id": 45233061, "comment_id": 77432196, "body": "The key example in <a href=\"https://doc.rust-lang.org/book/second-edition/ch02-00-guessing-game-tutorial.html#allowing-multiple-guesses-with-looping\" rel=\"nofollow noreferrer\">that example</a> (hope I got the link right) is that the variable is declared in the loop, so it is automatically recreated for each iteration."}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 13, "last_activity_date": 1542749767, "last_edit_date": 1542749767, "creation_date": 1500626569, "answer_id": 45233061, "question_id": 45232943, "link": "https://stackoverflow.com/questions/45232943/weird-behaviour-when-using-read-line-in-a-loop/45233061#45233061", "title": "Weird behaviour when using read_line in a loop", "body": "<p>From the <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_line\" rel=\"noreferrer\">documentation for <code>read_line</code></a>:</p>\n\n<blockquote>\n  <p>Read all bytes until a newline (the 0xA byte) is reached, and <strong>append</strong> them to the provided buffer.</p>\n</blockquote>\n\n<p>(Emphasis mine.)  You need to clear the string before reading the next line, for example by calling the <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.clear\" rel=\"noreferrer\"><code>clear()</code></a> method on the string, otherwise the answers are accumulated in the variable.</p>\n\n<p>Alternatively, you can define the variable in the loop (but this is slightly less efficient because this way, <code>String</code> will not be able to reuse the already allocated storage for the next answer, it has to be deallocated and reallocated again).</p>\n\n<p>See also <a href=\"https://stackoverflow.com/questions/45220448/why-is-read-line-much-slower-than-lines\">this question</a>, asked recently.  Looks like this is a common trap.</p>\n"}], "owner": {"reputation": 46522, "user_id": 447489, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ZBqSB.jpg?s=128&g=1", "display_name": "fancyPants", "link": "https://stackoverflow.com/users/447489/fancypants"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1388, "favorite_count": 0, "accepted_answer_id": 45233061, "answer_count": 1, "score": 8, "last_activity_date": 1542749767, "creation_date": 1500626229, "last_edit_date": 1500647199, "question_id": 45232943, "link": "https://stackoverflow.com/questions/45232943/weird-behaviour-when-using-read-line-in-a-loop", "title": "Weird behaviour when using read_line in a loop", "body": "<p>My first program in Rust is supposed to take input from the user in the form of characters, either C or F:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut srcunit = String::new();\n\n    let mut switch = true;\n    while switch {\n        println!(\"source unit? F or C?\");\n        io::stdin().read_line(&amp;mut srcunit).expect(\n            \"failed to read src unit\",\n        );\n\n        if srcunit.trim() == \"F\" || srcunit.trim() == \"C\" {\n            println!(\"doing things right with {}\", srcunit);\n            switch = false;\n        } else {\n            println!(\"either F or C, not {}\", srcunit);\n        }\n    }\n\n    println!(\"you pressed {}\", srcunit);\n}\n</code></pre>\n\n<p>When I start the program and press either F or C, it works right, so I'm skipping this here. The weird part comes when I press another character. I expect my program to ask again for either F or C until I press one of those characters. When I do, it should leave the while loop and tell me what I've pressed.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>source unit? F or C?\nG\neither F or C, not G //so far so good\n\nsource unit? F or C?\nF\neither F or C, not G //why is F not assigned to the srcunit variable? It's supposed to leave the loop now.\nF                    //why does it print this line? I didn't press a key or have a println function/macro that does this\n\nsource unit? F or C?\nV\neither F or C, not G //it's still G, wtf\nF                    //again, why are those two lines printed? Where does it store, that I pressed F previously?\nV\n</code></pre>\n"}, {"tags": ["struct", "macros", "rust", "field", "traits"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1500627879, "post_id": 45232838, "comment_id": 77432625, "body": "To auto implement some trait, you should use procedural macros <a href=\"https://doc.rust-lang.org/beta/book/first-edition/procedural-macros.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/beta/book/first-edition/&hellip;</a> . You can then use <code>#[derive(MyTrait)]</code>"}, {"owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1500633761, "post_id": 45232838, "comment_id": 77436809, "body": "hmm, while most certainly being something to keep in mind for the future it doesn&#39;t seem like <code>#[derive(Trait)]</code> allows for forced struct fields. So it doesn&#39;t quite solve my problem..."}], "answers": [{"tags": [], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "is_accepted": true, "score": 4, "last_activity_date": 1506187569, "last_edit_date": 1506187569, "creation_date": 1500658295, "answer_id": 45243528, "question_id": 45232838, "link": "https://stackoverflow.com/questions/45232838/is-it-possible-to-automatically-define-fields-of-a-struct/45243528#45243528", "title": "Is it possible to automatically define fields of a struct?", "body": "<p>I ended up solving the problem with 2 different macros:</p>\n\n<pre><code>// I simply copied it from my project and changed some names,\n// But due to the fact that I couldn't think of better names for my macros,\n// I just ended up using the original names, even though they don't quite fit\n\nmacro_rules! new_object_type {\n    ($struct:ident {$( $field:ident:$type:ty ),*}) =&gt;{\n        pub struct $struct {\n            var: bool,\n            $(\n                $field: $type,\n            )*\n        }\n\n        impl Trait for $struct {\n            pub fn access_var(&amp;mut self, var: bool) {\n                self.var = var;\n            }\n        }\n    };\n}\n\nmacro_rules! construct_object {\n    ($struct:ident {$( $field:ident:$value:expr ),*}) =&gt; {\n        $struct {\n           var: false,\n           $(\n               $field: $value, \n           )*\n       }\n    };\n}\n</code></pre>\n\n<p>To create a new struct implementing <code>Trait</code> you now write:</p>\n\n<pre><code>new_object_type!(Foo {\n    additional_var: i64,\n    other_var: u64,\n});\n</code></pre>\n\n<p>And to create a new instance of <code>Foo</code> you write:</p>\n\n<pre><code>construct_object!(Foo {\n    additional_var: 42,\n    other_var: 82000,\n})\n</code></pre>\n\n<p>Now it is possible to use <code>Trait</code> without ever having to interact with <code>var</code>.</p>\n\n<h2>Problems with this approach:</h2>\n\n<ul>\n<li><p>It is not as clean as I hoped it would be and without proper documentation it is hard to use, especially if the user is fairly new to Rust.</p></li>\n<li><p>There might be some problem with having two identical fields, as the user does not see all implemented variables (This could be solved by changing the name of var to something like <code>T7dkD3S3O8</code> which would most certainly make it quite unlikely that this ever happens)</p></li>\n<li><p>As the definition and the construction of the struct are both inside a macro, error messages could be harder to understand</p></li>\n</ul>\n"}], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1645, "favorite_count": 0, "accepted_answer_id": 45243528, "answer_count": 1, "score": 5, "last_activity_date": 1506187569, "creation_date": 1500625908, "last_edit_date": 1500651453, "question_id": 45232838, "link": "https://stackoverflow.com/questions/45232838/is-it-possible-to-automatically-define-fields-of-a-struct", "title": "Is it possible to automatically define fields of a struct?", "body": "<p>I'm using a macro to implement a trait as part of my library. This implementation requires the struct to have at least one additional field.</p>\n\n<pre><code>pub trait Trait {\n    fn access_var(&amp;mut self, var: bool);\n}\n\nmacro_rules! impl_trait {\n    (for $struct:ident) =&gt; {\n        impl Trait for $struct {\n            pub fn access_var(&amp;mut self, var: bool) {\n                self.var = var; // requires self to have a field 'var'\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I want to prevent the user from having to add those additional fields every time. Due to the fact that the Rust compiler does not allow macros in field definitions (I have no source for this, so please correct me if I'm wrong), something like this does not work.</p>\n\n<pre><code>macro_rules! variables_for_trait {\n    () =&gt; {\n        var: bool,\n    }   \n};\n\nstruct Foo {\n    variables_for_trait!(); // error: expected ':' found '!'\n    additional_var: i64,\n}\n</code></pre>\n\n<hr>\n\n<p>I guess that I could create a macro which enables something like this</p>\n\n<pre><code>bar!(Foo with additional_var: i64, other_var: u64);\n</code></pre>\n\n<p>to look like that after resolving the macro:</p>\n\n<pre><code>pub struct Foo {\n   var: bool,\n   additional_var: i64,\n   other_var: u64,\n}\n\nimpl Trait for Foo {\n   pub fn access_var(&amp;mut self, var: bool) {\n        self.var = var;\n   }\n}\n</code></pre>\n\n<p>Is there a better way to solve this, and if not, can you give me an example syntax for <code>bar!</code>?</p>\n\n<p>P.S: What would be a good name for something like <code>bar!</code>?</p>\n"}, {"tags": ["c", "struct", "rust", "bit-fields"], "comments": [{"owner": {"reputation": 6288, "user_id": 5167682, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/2vexc.jpg?s=128&g=1", "display_name": "roottraveller", "link": "https://stackoverflow.com/users/5167682/roottraveller"}, "edited": false, "score": 2, "creation_date": 1500613315, "post_id": 45229167, "comment_id": 77424360, "body": "i think bool is 1 byte not 1 bit."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 2, "creation_date": 1500614349, "post_id": 45229167, "comment_id": 77424674, "body": "Did you look at <a href=\"https://crates.io/crates/bitfield\" rel=\"nofollow noreferrer\">this crate</a>?"}, {"owner": {"reputation": 27438, "user_id": 4756299, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e38adc5559df095cfe10c664916e8ffa?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew Henle", "link": "https://stackoverflow.com/users/4756299/andrew-henle"}, "edited": false, "score": 4, "creation_date": 1500625647, "post_id": 45229167, "comment_id": 77431028, "body": "<i>How would <code>flag_a</code> and <code>flag_b</code> be represented?</i>  There&#39;s no standard way that bit fields are represented in just C alone, let alone a standard cross-language representation.  If you care about portability at all - even between different compilers on the exact same system - you don&#39;t use bit fields."}, {"owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "reply_to_user": {"reputation": 27438, "user_id": 4756299, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e38adc5559df095cfe10c664916e8ffa?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew Henle", "link": "https://stackoverflow.com/users/4756299/andrew-henle"}, "edited": false, "score": 0, "creation_date": 1500652703, "post_id": 45229167, "comment_id": 77450037, "body": "@AndrewHenle - I don&#39;t really know much about bitfields, I&#39;m trying to interop with existing code that uses them (nginx internals).  Thanks."}], "answers": [{"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 8, "last_activity_date": 1500623630, "last_edit_date": 1500623630, "creation_date": 1500614381, "answer_id": 45229521, "question_id": 45229167, "link": "https://stackoverflow.com/questions/45229167/how-does-a-c-style-struct-with-a-bitfield-get-represented-in-a-rust-reprc-s/45229521#45229521", "title": "How does a C-style struct with a bitfield get represented in a Rust #[repr(C)] struct?", "body": "<p>No, you can't.</p>\n\n<p>There is <a href=\"https://github.com/rust-lang/rfcs/issues/314\" rel=\"noreferrer\">an open issue</a> about supporting bitfields, which doesn't seem to be active. In the issue, <a href=\"https://github.com/rust-lang/rfcs/issues/314#issuecomment-253099578\" rel=\"noreferrer\">@retep998 explains how bitfields are handled in <code>winapi</code></a>. That might be helpful if you need to handle bitfields in C interface.</p>\n\n<p>OP seems to aim at C interoperation, but if you just need bitfields functionality, there are several solutions.</p>\n\n<ul>\n<li>You should always consider simple redundant solution: avoid bitfields and let fields align naturally.</li>\n<li><a href=\"https://crates.io/crates/bitfield\" rel=\"noreferrer\"><code>bitfield</code></a>, according to <a href=\"https://stackoverflow.com/questions/45229167/how-does-a-c-style-unsigned-field1-struct-field-get-represented-in-a-rust#comment77424674_45229167\">the comment</a> -- I didn't know that, but it seems to provide C bitfields equivalent.</li>\n<li><a href=\"https://crates.io/crates/bitflags\" rel=\"noreferrer\"><code>bitflags</code></a>. This seems suitable for bit-based flags, which typically represented as <code>enum</code> in C.</li>\n<li><code>#[repr(packed)]</code> if you just want to pack fields to some degree, ignoring alignment. The fields will still be aligned to byte boundary.</li>\n<li><a href=\"https://crates.io/crates/bit-vec\" rel=\"noreferrer\"><code>bit-vec</code></a> if you need homogenious arrays of bits.</li>\n</ul>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2147, "favorite_count": 0, "accepted_answer_id": 45229521, "answer_count": 1, "score": 5, "last_activity_date": 1500644462, "creation_date": 1500612491, "last_edit_date": 1500644462, "question_id": 45229167, "link": "https://stackoverflow.com/questions/45229167/how-does-a-c-style-struct-with-a-bitfield-get-represented-in-a-rust-reprc-s", "title": "How does a C-style struct with a bitfield get represented in a Rust #[repr(C)] struct?", "body": "<p>I have a C struct defined as:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct my_c_s {\n    u_char          *ptr;\n    unsigned        flag_a:1;\n    unsigned        flag_b:1;\n    int             some_num;\n}\n</code></pre>\n\n<p>How would <code>flag_a</code> and <code>flag_b</code> be represented?</p>\n\n<pre><code>#[repr(C)]\npub struct my_rust_s {\n    pub ptr: *const u_char,\n    //pub flag_a: ?,\n    //pub flag_b: ?,\n    pub some_num: ::libc::c_int,\n}\n</code></pre>\n\n<p><strike>Can I declare them as <code>bool</code>s?</strike>  Or does that whole thing need to be some sort of set of bits with a single field, and then I bitmask them out?</p>\n\n<p>e.g.  <code>pub flag_bits: ::libc::c_uint,</code></p>\n"}, {"tags": ["html", "web", "rust", "iron"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 8256889, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/79ccfe6d2366c94de1a87102823860e2?s=128&d=identicon&r=PG&f=1", "display_name": "Posh344", "link": "https://stackoverflow.com/users/8256889/posh344"}, "edited": false, "score": 0, "creation_date": 1500623010, "post_id": 45231659, "comment_id": 77429317, "body": "how can I set html content-type by default?"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 33, "user_id": 8256889, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/79ccfe6d2366c94de1a87102823860e2?s=128&d=identicon&r=PG&f=1", "display_name": "Posh344", "link": "https://stackoverflow.com/users/8256889/posh344"}, "edited": false, "score": 1, "creation_date": 1500628282, "post_id": 45231659, "comment_id": 77432921, "body": "You unfortunately can&#39;t, as far as I know. What you can is wrap <code>Ok(Response::with((content_type, iron::status::Ok, content)))</code> into an own function that takes only <code>content</code> as a parameter.  If this has answered your question about why your template wasn&#39;t displaying as HTML, consider selecting my answer as accepted :)"}], "tags": [], "owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "is_accepted": true, "score": 2, "last_activity_date": 1500623066, "last_edit_date": 1500623066, "creation_date": 1500622239, "answer_id": 45231659, "question_id": 45227519, "link": "https://stackoverflow.com/questions/45227519/iron-renders-html-as-text/45231659#45231659", "title": "Iron renders html as text", "body": "<p>That's because you didn't set your content's <a href=\"https://stackoverflow.com/questions/3828352/what-is-a-mime-type#3828381\">MIME</a> type.<br>\nFor full examples on how to fix this, see <a href=\"https://github.com/iron/iron/blob/master/examples/content_type.rs\" rel=\"nofollow noreferrer\">Iron's own examples</a>. </p>\n\n<p>One possibility would be:</p>\n\n<pre><code>use iron::headers::ContentType;\n\nfn index(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    let ctx = Context::new();\n    let content_type = ContentType::html().0;\n    let content = TEMPLATES.render(\"home/index.html\", &amp;ctx).unwrap();\n    Ok(Response::with((content_type, iron::status::Ok, content)))\n}\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 8256889, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/79ccfe6d2366c94de1a87102823860e2?s=128&d=identicon&r=PG&f=1", "display_name": "Posh344", "link": "https://stackoverflow.com/users/8256889/posh344"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 45231659, "answer_count": 1, "score": 1, "last_activity_date": 1500643852, "creation_date": 1500600188, "last_edit_date": 1500643852, "question_id": 45227519, "link": "https://stackoverflow.com/questions/45227519/iron-renders-html-as-text", "title": "Iron renders html as text", "body": "<p>A part of my Iron web application:</p>\n\n<pre><code>lazy_static! {\n    pub static ref TEMPLATES: Tera = {\n        let mut tera = compile_templates!(\"templates/**/*\");\n        tera.autoescape_on(vec![\"html\", \".sql\"]);\n        tera\n    };\n}\n\nfn index(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    let ctx = Context::new();\n    Ok(Response::with((iron::status::Ok, TEMPLATES.render(\"home/index.html\", &amp;ctx).unwrap())))\n}\n</code></pre>\n\n<p>It renders an HTML template as text in a browser. Why not HTML?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1500596315, "post_id": 45227023, "comment_id": 77420417, "body": "You will find a lot of duplicate of this problem, here the fix, <a href=\"https://play.rust-lang.org/?gist=31b82f9856dfe3695468e1d350632b32&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>."}, {"owner": {"reputation": 1982, "user_id": 23584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7304771f4f4f40784b90d6d4f0855654?s=128&d=identicon&r=PG", "display_name": "Scott Lamb", "link": "https://stackoverflow.com/users/23584/scott-lamb"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1500605308, "post_id": 45227023, "comment_id": 77422394, "body": "Hmm, that&#39;s not what I was hoping for. In my real logic, the equivalent of <code>FooRef(f)</code> does something non-trivial; I want to ensure that <code>FooRef::drop</code> runs when the <code>FooRef</code> goes out of scope. Is that really the only option?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1500608960, "post_id": 45227023, "comment_id": 77423187, "body": "You could declare the variable before the loop, I&#39;m not fully qualified to know if there are other options. Maybe use RefCell. Maybe your <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is too minimal to represent your situation ?"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1500625786, "post_id": 45227023, "comment_id": 77431131, "body": "I couldn&#39;t find a dupe on SO but here&#39;s a discussion of the same issue: <a href=\"https://github.com/rust-lang/rust/issues/21906\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/21906</a>. It&#39;s a borrow checker limitation that should be fixed by <a href=\"https://github.com/rust-lang/rust-roadmap/issues/16\" rel=\"nofollow noreferrer\">non-lexical lifetimes</a> if that ever gets implemented."}, {"owner": {"reputation": 1982, "user_id": 23584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7304771f4f4f40784b90d6d4f0855654?s=128&d=identicon&r=PG", "display_name": "Scott Lamb", "link": "https://stackoverflow.com/users/23584/scott-lamb"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1500646360, "post_id": 45227023, "comment_id": 77445816, "body": "@Stargateur to answer your question about my example, the difference between this and the real one is essentially ref-counting. The details don&#39;t seem that relevant to me, but if you really want them: I&#39;m trying to make my own ffmpeg wrapper. This function is being passed a (wrapper around an) <code>AVPacket</code>, which gets filled by a call to <code>av_read_frame</code>. Once it&#39;s filled, the packet has a reference which must be released via <code>av_packet_unref</code>; <code>FooRef</code> does that. The loop is discarding packets that aren&#39;t of interest; there may be both audio and video packets, and I only want the video ones."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1500648239, "post_id": 45227023, "comment_id": 77447076, "body": "Here&#39;s the duplicate&#39;s answer <a href=\"https://play.integer32.com/?gist=8017bb807514fdd410ebdbf9a8798b00&amp;version=stable\" rel=\"nofollow noreferrer\">applied to your code</a>. TL;DR: you need to hold the compilers hand a little bit and be explicit about the moves of the mutable reference."}], "owner": {"reputation": 1982, "user_id": 23584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7304771f4f4f40784b90d6d4f0855654?s=128&d=identicon&r=PG", "display_name": "Scott Lamb", "link": "https://stackoverflow.com/users/23584/scott-lamb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 105, "favorite_count": 0, "closed_date": 1500648171, "answer_count": 0, "score": 2, "last_activity_date": 1500643698, "creation_date": 1500595833, "last_edit_date": 1500643698, "question_id": 45227023, "link": "https://stackoverflow.com/questions/45227023/mutable-borrow-return-within-a-loop", "closed_reason": "Duplicate", "title": "Mutable borrow + return within a loop", "body": "<p>I have a segment of Rust code which, simplified, looks something like this:</p>\n\n<pre><code>struct FooRef&lt;'f&gt;(&amp;'f mut i32);\n\nfn blah&lt;'f&gt;(f: &amp;'f mut i32) -&gt; FooRef&lt;'f&gt; {\n    let mut i = 0;\n    loop {\n        let fr = FooRef(f);\n        if i == *fr.0 {\n            return fr;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let mut f = 5;\n    blah(&amp;mut f);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=24f19aa1d75bbd31cef6c5cc78b7c3e9&amp;version=stable\" rel=\"nofollow noreferrer\">playground link</a></p>\n\n<p>It doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*f` as mutable more than once at a time\n  --&gt; test.rs:6:25\n   |\n6  |         let fr = FooRef(f);\n   |                         ^\n   |                         |\n   |                         second mutable borrow occurs here\n   |                         first mutable borrow occurs here\n...\n12 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>If I understand this error, it's saying that <code>f</code> can be borrowed until the end of the function on one loop iteration, then borrowed again on a second iteration, which doesn't work.</p>\n\n<p>This doesn't seem right to me; either <code>fr</code> goes out of scope (and thus is returned before it says) or it returns (and there's no subsequent borrow).</p>\n\n<p>Is there any way to express this that will compile?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1500587464, "post_id": 45224563, "comment_id": 77417837, "body": "See also <a href=\"https://stackoverflow.com/q/30826513/155423\">stackoverflow.com/q/30826513/155423</a>"}], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 5, "creation_date": 1500589235, "post_id": 45224619, "comment_id": 77418486, "body": "There&#39;s an excellent, and depressingly common, reason: because someone in the dependency graph broke compatibility.  But in that case, I generally specify a <i>maximum</i> version instead; there might be some other reason that specific dependency is being limited by some other package."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1577993449, "last_edit_date": 1592644375, "creation_date": 1500582549, "answer_id": 45224619, "question_id": 45224563, "link": "https://stackoverflow.com/questions/45224563/how-to-specify-the-exact-version-of-a-dependency/45224619#45224619", "title": "How to specify the exact version of a dependency?", "body": "<p>TL;DR:</p>\n<pre class=\"lang-none prettyprint-override\"><code>my-crate = &quot;=1.2.3&quot;\n</code></pre>\n<hr />\n<p>Reading the documentation is generally a great idea. In this case, the <a href=\"https://doc.rust-lang.org/cargo/\" rel=\"noreferrer\">Cargo documentation</a> has an entire section on <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html\" rel=\"noreferrer\">specifying dependencies</a>:</p>\n<blockquote>\n<p>Since this string does not have any operators in it, it is interpreted the same way as if we had specified <code>&quot;^0.1.12&quot;</code>, which is called a caret requirement.</p>\n<p><strong>Caret requirements</strong> allow SemVer compatible updates to a specified version. An update is allowed if the new version number does not modify the left-most non-zero digit in the major, minor, patch grouping.</p>\n</blockquote>\n<p>As well as</p>\n<blockquote>\n<p><strong>Inequality requirements</strong> allow manually specifying a version range or an exact version to depend on.</p>\n<p>Here are some examples of inequality requirements:</p>\n   <pre class=\"lang-none prettyprint-override\"><code>= 1.2.3\n</code></pre>\n</blockquote>\n<hr />\n<blockquote>\n<p>What am I doing wrong?</p>\n</blockquote>\n<p>I'd say that, without <em>extenuating circumstances</em>, trying to specify an exact version is wrong. There's generally very little reason to force the users of your code to be stuck to an older version of a crate and prevent them from getting bug fixes.</p>\n<p><a href=\"https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html\" rel=\"noreferrer\">Cargo.lock</a> is the correct tool to avoid deploying your application with an inconsistent set of dependencies.</p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 11, "last_activity_date": 1618245992, "last_edit_date": 1618245992, "creation_date": 1500582665, "answer_id": 45224646, "question_id": 45224563, "link": "https://stackoverflow.com/questions/45224563/how-to-specify-the-exact-version-of-a-dependency/45224646#45224646", "title": "How to specify the exact version of a dependency?", "body": "<p>Exact versions are prepended by <code>=</code>. It's one of the <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#comparison-requirements\" rel=\"nofollow noreferrer\">comparison requirements</a> (formerly called inequality requirement).</p>\n<pre><code>lazy_static = &quot;= 0.2.2&quot;\n</code></pre>\n<p>The default is the caret requirement (e.g. <code>0.2.2</code> is equivalent to <code>^0.2.2</code> ), which accepts minor and patch version updates (or just patch updates if the major is <code>0</code>). Unless you have a very good reason to disallow this, it is often recommended to leave the default specifier as it is.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2180, "favorite_count": 0, "accepted_answer_id": 45224619, "answer_count": 2, "score": 6, "last_activity_date": 1618245992, "creation_date": 1500582341, "last_edit_date": 1500582659, "question_id": 45224563, "link": "https://stackoverflow.com/questions/45224563/how-to-specify-the-exact-version-of-a-dependency", "title": "How to specify the exact version of a dependency?", "body": "<p>I'm using</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo --version\ncargo 0.21.0-beta (7e00b82d9 2017-07-17)\n</code></pre>\n\n<p>I created a simple project with <code>cargo new --bin test1</code>, and then I added a dependency:</p>\n\n<pre><code>[dependencies]\nlazy_static = \"0.2.2\"\n</code></pre>\n\n<p>to Cargo.toml (according to <a href=\"https://crates.io/crates/lazy_static/versions\" rel=\"noreferrer\">this</a> such version exists) and </p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n</code></pre>\n\n<p>to <code>src/main.rs</code></p>\n\n<p>When I run <code>cargo build</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\n   Compiling lazy_static v0.2.8\n   Compiling test1 v0.1.0 (file:///tmp/test1)\nwarning: unused `#[macro_use]` import\n --&gt; src/main.rs:1:1\n  |\n1 | #[macro_use]\n  | ^^^^^^^^^^^^\n  |\n  = note: #[warn(unused_imports)] on by default\n\n    Finished dev [unoptimized + debuginfo] target(s) in 0.49 secs\n</code></pre>\n\n<p>Why does <code>cargo build</code> compile last version <code>0.2.8</code> instead of <code>0.2.2</code> that I specified? What am I doing wrong?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2658, "user_id": 1616210, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/pKBwj.jpg?s=128&g=1", "display_name": "qweruiop", "link": "https://stackoverflow.com/users/1616210/qweruiop"}, "edited": false, "score": 0, "creation_date": 1500577758, "post_id": 45223115, "comment_id": 77412794, "body": "Two follow-up: 1) how do one know the function is not making a copy internally from the signature? Because it doesn&#39;t require Item to be Copy? 2) moving ownership means Args doesn&#39;t own the arguments anymore. Isn&#39;t this a big side effect that I have to remember throughout the project? I guess I&#39;m just verifying I understand how it works, setting aside whether it&#39;s a good practice."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2658, "user_id": 1616210, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/pKBwj.jpg?s=128&g=1", "display_name": "qweruiop", "link": "https://stackoverflow.com/users/1616210/qweruiop"}, "edited": false, "score": 0, "creation_date": 1500578107, "post_id": 45223115, "comment_id": 77412997, "body": "@qweruiop ah, I slightly misread your question. Let me fix up my answer."}, {"owner": {"reputation": 2658, "user_id": 1616210, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/pKBwj.jpg?s=128&g=1", "display_name": "qweruiop", "link": "https://stackoverflow.com/users/1616210/qweruiop"}, "edited": false, "score": 0, "creation_date": 1500582126, "post_id": 45223115, "comment_id": 77415271, "body": "But why is using references only middle-efficient? When reference items, no allocation for items is needed at all, no?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2658, "user_id": 1616210, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/pKBwj.jpg?s=128&g=1", "display_name": "qweruiop", "link": "https://stackoverflow.com/users/1616210/qweruiop"}, "edited": false, "score": 2, "creation_date": 1500582160, "post_id": 45223115, "comment_id": 77415293, "body": "@qweruiop because you are still allocating the vector for no reason."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1500657468, "last_edit_date": 1500657468, "creation_date": 1500576956, "answer_id": 45223115, "question_id": 45222910, "link": "https://stackoverflow.com/questions/45222910/does-next-move-or-clone-elements/45223115#45223115", "title": "Does `next()` move or clone elements?", "body": "<blockquote>\n  <p>Does <code>args.next()</code> move or clone</p>\n</blockquote>\n\n<p>Start by looking at the function signature for <code>Iterator::next</code>:</p>\n\n<pre><code>pub trait Iterator {\n    type Item;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;\n}\n</code></pre>\n\n<p><code>next</code> transfers ownership of whatever type <code>Self::Item</code> is to the caller. It has no extra restrictions on <code>Self</code>, but it can modify the inner properties of the iterator. </p>\n\n<p>Next, inspect the inputs and outputs of the specific iterator. For example, this one always returns strings, but has no input values:</p>\n\n<pre><code>struct Greet;\n\nimpl Iterator for Greet {\n    type Item = String;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        Some(String::from(\"hello\"))\n    }\n}\n</code></pre>\n\n<p>In this case <a href=\"https://doc.rust-lang.org/std/env/struct.Args.html\" rel=\"nofollow noreferrer\"><code>Args</code> defines <code>Item</code> to be a <code>String</code></a>, so each value from calling <code>next</code> is an <code>Option&lt;String&gt;</code>.</p>\n\n<p>We know that <code>String</code> requires an allocation. However, since we can't provide any arguments for <code>env::args()</code> to take allocation from, only two possibilities exist:</p>\n\n<ol>\n<li>The iterator allocates the value.</li>\n<li>Some kind of global state is being modified behind the scenes.</li>\n</ol>\n\n<p>Rust generally <em>abhors</em> global state, so anything that actually changes global state is going to be really common (printing to stdout) or marked with Big Warning Text.</p>\n\n<p>Checking the documentation, we see no such Big Warning Text, so it is safe to assume that the iterator allocates.</p>\n\n<p>You can check this by iterating through it twice; you'll see the same values repeated. The argument list is not secretly mutated underneath you.</p>\n\n<hr>\n\n<p>Even though this iterator allocates strings, it's <em>still</em> more efficient to use the iterator's value directly. When you collect into the vector, you are allocating memory for the vector. You also then clone the value inside the vector again to use it. Both of those allocations are unneeded.</p>\n\n<p>A middle-efficiency version would be to use references to the items in the vector, specifically a <code>&amp;str</code>:</p>\n\n<pre><code>let query = &amp;args[1];\nlet filename = &amp;args[2];\n</code></pre>\n\n<p>This still has the \"overhead\" of allocating the vector, which may or may not be needed outside of this function.</p>\n\n<hr>\n\n<p>I like being overly fancy, so I might write something like this:</p>\n\n<pre><code>fn main() {\n    let config = Config::new(std::env::args().skip(1));\n}\n\nimpl Config {\n    fn new&lt;I, S&gt;(args: I) -&gt; Result&lt;Config, &amp;'static str&gt; \n    where\n        I: IntoIterator&lt;Item = S&gt;,\n        S: Into&lt;String&gt;,\n    {\n        let mut args = args.into_iter();\n\n        let query = args.next().ok_or(\"Didn't get a query string\")?;\n        let filename = args.next().ok_or(\"Didn't get a file name\")?;\n\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p>The <code>ok_or</code> is generally useful, as is making the iterator type generic and skipping the program name outside of <code>Config::new</code>. This allows for testing <code>Config</code> without having an actual argument string.</p>\n\n<p>The <code>Into&lt;String&gt;</code> is purely showing off.</p>\n"}], "owner": {"reputation": 2658, "user_id": 1616210, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/pKBwj.jpg?s=128&g=1", "display_name": "qweruiop", "link": "https://stackoverflow.com/users/1616210/qweruiop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 45223115, "answer_count": 1, "score": 3, "last_activity_date": 1500657468, "creation_date": 1500576350, "question_id": 45222910, "link": "https://stackoverflow.com/questions/45222910/does-next-move-or-clone-elements", "title": "Does `next()` move or clone elements?", "body": "<p>I'm reading the <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-03-improving-our-io-project.html\" rel=\"nofollow noreferrer\">Chapter 13 of the Rust book</a>. It says that <code>clone</code>ing strings is less efficient than accessing them through an iterator (i.e. <code>next()</code>). Comparing the following examples, I've got two questions:</p>\n\n<ul>\n<li>Does <code>args.next()</code> move or clone the string into <code>query</code> and <code>filename</code>?</li>\n<li>If it was a move, it would transfer the ownership from something in <code>env::args()</code> to <code>query</code>, wouldn't this break other code? If it was a clone, why could be it more efficient than cloning the string directly?</li>\n</ul>\n\n<hr>\n\n<p>Definition:</p>\n\n<pre><code>struct Config {\n    query: String,\n    filename: String,\n}\n</code></pre>\n\n<p><strong>Inefficient Version</strong></p>\n\n<pre><code>fn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();  \n    let config = Config::new(&amp;args)\n}\n\nimpl Config {\n    fn new(args: &amp;[String]) -&gt; Result&lt;Config, &amp;'static str&gt; {\n        // [...]\n        let query = args[1].clone();\n        let filename = args[2].clone();\n        // [...]\n    }\n}\n</code></pre>\n\n<p><strong>Better Version</strong></p>\n\n<pre><code>fn main() {\n    let config = Config::new(env::args())\n}\n\nimpl Config {\n    fn new(mut args: std::env::Args) -&gt; Result&lt;Config, &amp;'static str&gt; {\n        args.next();\n\n        let query = match args.next() {\n            Some(arg) =&gt; arg,\n            None =&gt; return Err(\"Didn't get a query string\"),\n        };\n\n        let filename = match args.next() {\n            Some(arg) =&gt; arg,\n            None =&gt; return Err(\"Didn't get a file name\"),\n        };\n        // [...]\n    }\n}\n</code></pre>\n"}, {"tags": ["dependencies", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1500577687, "post_id": 45222791, "comment_id": 77412758, "body": "I&#39;m by no means a Docker expert, but wouldn&#39;t it be easier and more idiomatic to maintain a cache outside of the container and mount it? The crates downloaded by cargo end up somewhere in <code>~&#47;.cargo&#47;registry</code>. You could mount an external cache to <code>~&#47;.cargo</code> or something like that to cache the downloads."}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500581282, "post_id": 45222791, "comment_id": 77414741, "body": "@Shepmaster I&#39;m talking about the Docker build. I&#39;m running the cargo build after the Docker build."}, {"owner": {"reputation": 3352, "user_id": 1711186, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/34b8d93bb3c95c7af4be4863a6830cc0?s=128&d=identicon&r=PG", "display_name": "humanityANDpeace", "link": "https://stackoverflow.com/users/1711186/humanityandpeace"}, "edited": false, "score": 0, "creation_date": 1518339219, "post_id": 45222791, "comment_id": 84458633, "body": "Needed to know the same thing, to have <code>cargo fetch</code> all dependencies into the repo, as to start a review/audit of the codebase, therefore happy to have found this question already asked"}], "answers": [{"comments": [{"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1500587532, "post_id": 45224818, "comment_id": 77417860, "body": "I&#39;m getting a weird error &quot;warning: spurious network error (2 tries remaining): [2/-1] failed to mmap. Could not write data: Invalid argument&quot; I&#39;m not sure if it is related to Docker?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1500587677, "post_id": 45224818, "comment_id": 77417915, "body": "@OmarAbid yes. If you put the error message into Google, the first result for me has <a href=\"https://github.com/rust-lang/cargo/issues/2808#issuecomment-279698324\" rel=\"nofollow noreferrer\">a comment</a> about how this doesn&#39;t work on Docker on macOS. The good news is that the question and answer, as you requested, is unrelated to Docker. ^_^"}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1500587818, "post_id": 45224818, "comment_id": 77417971, "body": "yes I was just reading into it. I marked this as an answer. Sorry for the trouble :/"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1500588005, "post_id": 45224818, "comment_id": 77418052, "body": "@OmarAbid haha, don&#39;t mind me, I&#39;m just grumpy! Were I in your shoes, I&#39;d follow <a href=\"https://stackoverflow.com/questions/39661138\">stackoverflow.com/questions/39661138</a>, build the container with all the dependencies, then layer on my local code and build."}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1500588556, "post_id": 45224818, "comment_id": 77418239, "body": "this means that I have to &quot;re-build&quot; every time I add a dependency. Good thing docker saves the previous steps, so it won&#39;t take that long. But I guess I don&#39;t have much of choice now with this bug."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1500586961, "last_edit_date": 1500586961, "creation_date": 1500583405, "answer_id": 45224818, "question_id": 45222791, "link": "https://stackoverflow.com/questions/45222791/is-it-possible-to-install-cargo-dependencies-in-the-same-directory-as-my-project/45224818#45224818", "title": "Is it possible to install Cargo dependencies in the same directory as my project?", "body": "<p>The dependencies are already <em>built</em> inside every project; in the <code>target</code> directory. The dependencies source code is cached in your user directory at <code>$HOME/.cargo</code>.</p>\n\n<p>If you wish to <em>not use</em> the user-wide download cache, you can specify the <code>CARGO_HOME</code> environment variable and have a separate cache:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>CARGO_HOME=$PWD/cargo cargo build\n</code></pre>\n\n<hr>\n\n<p>As you drew the analogy to npm, note that Cargo's solution is basically what yarn does \u2014 a global cache of downloads and the project's specific dependencies are built / linked into the <code>node_modules</code> directory.</p>\n"}], "owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1280, "favorite_count": 0, "accepted_answer_id": 45224818, "answer_count": 1, "score": 6, "last_activity_date": 1500586961, "creation_date": 1500575950, "last_edit_date": 1500583505, "question_id": 45222791, "link": "https://stackoverflow.com/questions/45222791/is-it-possible-to-install-cargo-dependencies-in-the-same-directory-as-my-project", "title": "Is it possible to install Cargo dependencies in the same directory as my project?", "body": "<p>I'm running my Rust project with Docker. It is fast, but there is a problem when I add an external dependency. Since Docker starts a new every time I run the \"cargo run\" command, it then fetches the external dependencies from the Internet again.   </p>\n\n<p>While this is related to an issue I have with Docker, I don't believe this is restricted to Docker as it can be an issue for a broad range of setups. What I'm looking for is simple regardless of Docker or anything else: Install the dependencies in the Rust project folder instead of having it installed globally, like in Node package manager.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500584079, "post_id": 45222482, "comment_id": 77416349, "body": "Do you also have a command called <code>cargo-rm</code>?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500633728, "post_id": 45222482, "comment_id": 77436787, "body": "@Shepmaster Yes, I have, but <code>cargo-rm cargo-add</code> tells <code>Invalid argument</code>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1500644073, "creation_date": 1500644073, "answer_id": 45239078, "question_id": 45222482, "link": "https://stackoverflow.com/questions/45222482/how-do-i-uninstall-cargo-add/45239078#45239078", "title": "How do I uninstall cargo-add?", "body": "<blockquote>\n  <p>Yes, I have [a binary called <code>cargo-rm</code>]</p>\n</blockquote>\n\n<p>The <a href=\"https://github.com/withoutboats/cargo-add\" rel=\"nofollow noreferrer\">cargo-add</a> tool <em>never</em> had a binary called <code>cargo-rm</code>.</p>\n\n<p>cargo-edit installs three binaries: <code>cargo-add</code>, <code>cargo-list</code>, <code>cargo-rm</code>. \ncargo-add only installs itself: <code>cargo-add</code>.</p>\n\n<p>If you have <code>cargo-rm</code>, then you've already installed cargo-edit. Since they provide the same binary name, you cannot install one over the other. I therefore deduce you don't actually have cargo-add installed but have already switched to cargo-edit.</p>\n\n<p>You can check the help text of the two to verify.</p>\n\n<p><strong>cargo-add</strong></p>\n\n<pre><code>cargo add --help\n</code></pre>\n\n<blockquote>\n  <p>Add a dependency to the crate's Cargo.toml file. If no source is\n  specified, the source will be set to a wild-card version dependency\n  from the source's default crate registry.</p>\n</blockquote>\n\n<p><strong>cargo-edit</strong></p>\n\n<pre><code>cargo add --help\n</code></pre>\n\n<blockquote>\n  <p>This command allows you to add a dependency to a Cargo.toml manifest\n  file. If  is a github or gitlab repository URL, or a local\n  path, <code>cargo add</code> will try to automatically get the crate name and set\n  the appropriate <code>--git</code> or <code>--path</code> value.</p>\n</blockquote>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 724, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1500644073, "creation_date": 1500574978, "last_edit_date": 1500643332, "question_id": 45222482, "link": "https://stackoverflow.com/questions/45222482/how-do-i-uninstall-cargo-add", "title": "How do I uninstall cargo-add?", "body": "<p>I installed <code>cargo-add</code> with the command <code>cargo install cargo-add</code>. Now that <code>cargo-add</code> is a deprecated project, I want to remove it. I tried</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo uninstall cargo-add\nerror: package id specification `cargo-add` matched no packages\n</code></pre>\n\n<p>I also tried <code>git clone https://github.com/withoutboats/cargo-add &amp;&amp; cd cargo-add &amp;&amp; cargo uninstall</code>, but also failed:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo uninstall\nerror: Invalid arguments.\n\nUsage:\n    cargo uninstall [options] &lt;spec&gt;\n    cargo uninstall (-h | --help)\n</code></pre>\n\n<p>what kind of spec does <code>cargo uninstall</code> want to remove <code>cargo-add</code>?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ which cargo-add\n$HOME/.cargo/bin/cargo-add\n</code></pre>\n"}, {"tags": ["memory-management", "rust", "page-tables"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500571608, "post_id": 45221232, "comment_id": 77409109, "body": "Out of curiosity, what kind of speedup do you see with such a pre-population?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1500572063, "post_id": 45221232, "comment_id": 77409357, "body": "@Shepmaster: As someone working in HFT, my typical answer is that it&#39;s not so much the throughput than the predictability of the latency. A single page fault will cause a long tail distribution in the latency (over many executions) that is really irking, as in up to a factor 100x/1000x over the median."}, {"owner": {"reputation": 147, "user_id": 6139957, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/K4Wxj.jpg?s=128&g=1", "display_name": "J. Dunne", "link": "https://stackoverflow.com/users/6139957/j-dunne"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1500572296, "post_id": 45221232, "comment_id": 77409492, "body": "To add to what @MatthieuM. said it is more about controlling the latency during startup. Over the course of the lifetime of the program it makes no difference (assuming you have eventually filled the page table). But when doing millions of packets per second any blocking behaviour that involves a interrupt/system call is very costly and can result in packets being dropped until the page table is populated"}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 1, "creation_date": 1500572743, "post_id": 45221232, "comment_id": 77409731, "body": "Could you just use <code>mlockall</code>?"}, {"owner": {"reputation": 147, "user_id": 6139957, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/K4Wxj.jpg?s=128&g=1", "display_name": "J. Dunne", "link": "https://stackoverflow.com/users/6139957/j-dunne"}, "reply_to_user": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1500573168, "post_id": 45221232, "comment_id": 77410006, "body": "Thanks @FlorianWeimer I&#39;ll use that for now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1500573235, "post_id": 45221232, "comment_id": 77410046, "body": "I assume that you are going to have a platform-specific answer, so it might be worth adding yours to the question."}, {"owner": {"reputation": 32065, "user_id": 90002, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/717b51c0020d2a527975a5ee44026d12?s=128&d=identicon&r=PG", "display_name": "Phil Miller", "link": "https://stackoverflow.com/users/90002/phil-miller"}, "edited": false, "score": 0, "creation_date": 1567197551, "post_id": 45221232, "comment_id": 101905896, "body": "Besides controlling latency, there&#39;s also the value in attributing execution cost. Pre-population would cleanly separate &#39;memory allocation&#39; from the rest of your computation."}], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 4, "last_activity_date": 1500573890, "last_edit_date": 1500573890, "creation_date": 1500573735, "answer_id": 45222087, "question_id": 45221232, "link": "https://stackoverflow.com/questions/45221232/is-there-a-way-to-pre-populate-the-operating-systems-page-table-for-a-large-rus/45222087#45222087", "title": "Is there a way to pre-populate the operating system&#39;s page table for a large Rust allocation?", "body": "<p>You could invoke <code>mlockall</code> if you can afford to pre-populate <em>everything</em>.  This should work on GNU/Linux and on systems which implement the POSIX Realtime (Process Memory Locking) extensions.</p>\n\n<p>Whether this is acceptable really depends on your application.</p>\n"}], "owner": {"reputation": 147, "user_id": 6139957, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/K4Wxj.jpg?s=128&g=1", "display_name": "J. Dunne", "link": "https://stackoverflow.com/users/6139957/j-dunne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 1, "accepted_answer_id": 45222087, "answer_count": 1, "score": 3, "last_activity_date": 1500573890, "creation_date": 1500571014, "last_edit_date": 1500573747, "question_id": 45221232, "link": "https://stackoverflow.com/questions/45221232/is-there-a-way-to-pre-populate-the-operating-systems-page-table-for-a-large-rus", "title": "Is there a way to pre-populate the operating system&#39;s page table for a large Rust allocation?", "body": "<p>If you try allocate a large chunk of memory using any of Rust's memory allocation mechanisms (including nightly <code>alloc_api</code>) you cannot pre-populate the page table i.e. you cant recreate the MAP_POPULATE option of mmap. Instead, I just use <code>libc::mmap</code> when I need to allocate large areas of memory.</p>\n\n<p>Is there another way to pre-populate the page table in Rust other than looping through a <code>Vec&lt;usize&gt;</code> or <code>Vec&lt;SomeTypeOfPageSize&gt;</code> and triggering page faults?</p>\n\n<p>As <a href=\"https://stackoverflow.com/questions/45221232/is-there-a-way-to-pre-populate-the-operating-systems-page-table-for-a-large-rus#comment77409731_45221232\">pointed out by @FlorianWeimer</a>, there are platform specific ways of doing this. I will scan the Rust RFCs to see if the new allocator API includes any pre-populate options.</p>\n"}, {"tags": ["io", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1500568934, "post_id": 45220448, "comment_id": 77407537, "body": "<b>Did you test using the <code>--release</code> flag</b>? That&#39;s the #1 issue whenever someone says that Rust code isn&#39;t &quot;fast enough&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 2304, "user_id": 645599, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/NQKcH.jpg?s=128&g=1", "display_name": "dten", "link": "https://stackoverflow.com/users/645599/dten"}, "edited": false, "score": 1, "creation_date": 1500571076, "post_id": 45220670, "comment_id": 77408816, "body": "Genius! Thanks a lot"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1542735423, "post_id": 45220670, "comment_id": 93672237, "body": "15 years of programming, and this caught me too. Feels like this mistake should be a lot harder to make in Rust than it currently is."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 13, "last_activity_date": 1500569216, "last_edit_date": 1500569216, "creation_date": 1500569062, "answer_id": 45220670, "question_id": 45220448, "link": "https://stackoverflow.com/questions/45220448/why-is-read-line-much-slower-than-lines/45220670#45220670", "title": "Why is read_line(..) much slower than lines()?", "body": "<p>Let's take a look at the output of your program:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1 \n2 \n...\n999\n1000\n1\n\n1\n2\n\n1\n2\n3\n\n1\n2\n3\n4\n\n1\n2\n3\n4\n5\n\n...\n</code></pre>\n\n<p>Ooops. It's just a simple bug in your code: you never <code>clear()</code> the string. Each <code>read_line()</code> call appends to your string. When I add a <code>s.clear()</code> in your <code>while</code> loop, the timings are more comparable:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>lines()     took Duration { secs: 0, nanos: 7323617 }\nread_line() took Duration { secs: 0, nanos: 2877078 }\n</code></pre>\n\n<p>In your buggy program, most of the time was probably wasted reallocating the string and printing it to the terminal.</p>\n"}], "owner": {"reputation": 2304, "user_id": 645599, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/NQKcH.jpg?s=128&g=1", "display_name": "dten", "link": "https://stackoverflow.com/users/645599/dten"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 762, "favorite_count": 0, "accepted_answer_id": 45220670, "answer_count": 1, "score": 3, "last_activity_date": 1500647254, "creation_date": 1500568320, "last_edit_date": 1500647254, "question_id": 45220448, "link": "https://stackoverflow.com/questions/45220448/why-is-read-line-much-slower-than-lines", "title": "Why is read_line(..) much slower than lines()?", "body": "<p>The code below runs much slower when calling <code>read_line(..)</code> than <code>lines()</code>\nYou can't run it in the playground but for me this prints the following</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>lines()     took Duration { secs: 0, nanos: 41660031 }\nread_line() took Duration { secs: 2, nanos: 379397138 }\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/src/std/io/mod.rs.html#1960\" rel=\"nofollow noreferrer\">implementation of <code>Lines</code></a> does pretty much what I wrote (but more!) why is there such a difference?</p>\n\n<pre><code>use std::net::{TcpListener, TcpStream};\nuse std::io::{BufRead, BufReader, Write};\nuse std::thread;\n\nfn main() {\n\n    let listener = TcpListener::bind(\"127.0.0.1:80\")\n        .expect(\"listen failed\");\n    thread::spawn(move || {\n        for stream in listener.incoming() {\n            let mut stream = stream.unwrap();\n            thread::spawn(move || {\n                for x in 1..1000 + 1 {\n                    stream.write_all(format!(\"{}\\n\", x).as_bytes())\n                        .expect(\"write failed\");\n                }\n            });\n        }\n    });\n\n    let start_a = std::time::Instant::now();\n    {\n        let stream_a = TcpStream::connect(\"127.0.0.1:80\")\n            .expect(\"connect_a failed\");\n        let br = BufReader::new(stream_a);\n        for l in br.lines() {\n            println!(\"{}\", l.unwrap());\n        }\n    }\n    let end_a = std::time::Instant::now();\n\n    let start_b = std::time::Instant::now();\n    {\n        let stream_b = TcpStream::connect(\"127.0.0.1:80\")\n            .expect(\"connect_b failed\");\n        let mut br = BufReader::new(stream_b);\n        let mut s = String::with_capacity(10);\n        while br.read_line(&amp;mut s).unwrap_or(0) &gt; 0 {\n            println!(\"{}\", s);\n        }\n    }\n    let end_b = std::time::Instant::now();\n\n    let dur_a = end_a - start_a;\n    let dur_b = end_b - start_b;\n\n    println!(\"lines()     took {:?}\", dur_a);\n    println!(\"read_line() took {:?}\", dur_b);\n\n}\n</code></pre>\n\n<p><a href=\"http://%20https://play.rust-lang.org/?gist=04d0b1b99c9260f9cbcec6c6edac0d0a&amp;version=nightly\" rel=\"nofollow noreferrer\">same code on the playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1500560423, "post_id": 45216799, "comment_id": 77401187, "body": "Concretely, you must box your data."}, {"owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1500642426, "post_id": 45216799, "comment_id": 77442787, "body": "@Boiethios Thanks, this helped me out!"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1500642486, "post_id": 45216799, "comment_id": 77442823, "body": "You&#39;re welcome :)"}], "owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 26, "favorite_count": 0, "closed_date": 1500559516, "answer_count": 0, "score": 0, "last_activity_date": 1500559729, "creation_date": 1500558845, "last_edit_date": 1500559729, "question_id": 45216799, "link": "https://stackoverflow.com/questions/45216799/struct-with-member-that-refers-to-another-member", "closed_reason": "Duplicate", "title": "Struct with member that refers to another member", "body": "<p>I am trying to use the <code>permutohedron</code> package and I ran into some issues with borrowing. This minimal example of how to use the package will likely be enough to understand my issue:</p>\n\n<pre><code>use permutohedron::Heap;\n\nlet mut data = vec![1, 2, 3];\nlet heap = Heap::new(&amp;mut data);\n</code></pre>\n\n<p>I want to put both <code>data</code> and <code>heap</code> into the same structure and let a function return it, but I cannot figure out a way to do it. I would think something like this should be possible lifetime-wise, since the heap cannot outlive the data.</p>\n\n<p>I am not allowed to use <code>data</code> anymore once <code>heap</code> is still in the scope, which is probably what causes my attempts to not compile. Is there some way to put <code>data</code> in the struct, but make it inaccessible?</p>\n"}]