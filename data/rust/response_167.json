[{"tags": ["rust", "config", "mutability"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 0, "last_activity_date": 1521666999, "creation_date": 1521666999, "answer_id": 49416653, "question_id": 49416521, "link": "https://stackoverflow.com/questions/49416521/how-do-i-set-values-nested-within-multiple-options-if-they-are-not-already-set/49416653#49416653", "title": "How do I set values nested within multiple Options if they are not already set?", "body": "<p>I think the best way would be to use pattern matching:</p>\n\n<pre><code>if let Some(Config { defaults: Some(Default { duration: Some(ref mut millis) }) }) = cfg {\n    *millis = 1234;\n}\n</code></pre>\n\n<p>Or, alternatively, with nested <code>if let</code>s:</p>\n\n<pre><code>if let Some(Config { ref mut defaults }) = cfg {\n    if let Some(Default { ref mut duration }) = *defaults {\n        *duration = Some(Millis(1234))\n    }\n}\n</code></pre>\n\n<p>This won't create values on demand, however. There is no simple boilerplate-less way to do it, as far as I'm aware. One of the approaches would be defining your own accessor methods which would handle defaults instantiation upon access:</p>\n\n<pre><code>impl Config {\n    fn defaults(&amp;mut self) -&gt; &amp;mut Default {\n        if let Some(ref mut defaults) = *self.defaults {\n            defaults\n        } else {\n            self.defaults = Some(Defaults::new());  // assuming that Defaults::new() exists\n            self.defaults.as_mut().unwrap()\n        }\n    }\n}\n</code></pre>\n\n<p>If you have such a method for every field of every structure, you will be able to do this:</p>\n\n<pre><code>*cfg.defaults().duration() = 1234;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1521704957, "post_id": 49422076, "comment_id": 85847018, "body": "Nice! And there&#39;s also a <code>get_or_insert_with</code> if the computation to obtain the default is expensive."}, {"owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "edited": false, "score": 0, "creation_date": 1521705489, "post_id": 49422076, "comment_id": 85847294, "body": "Noice. Exactly what I was looking for, thank you! Although the last get_or_insert can insert the actual data, but I suspect it was written like that for demonstration purposes"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1521724209, "last_edit_date": 1521724209, "creation_date": 1521700643, "answer_id": 49422076, "question_id": 49416521, "link": "https://stackoverflow.com/questions/49416521/how-do-i-set-values-nested-within-multiple-options-if-they-are-not-already-set/49422076#49422076", "title": "How do I set values nested within multiple Options if they are not already set?", "body": "<p>This is what the <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.get_or_insert\" rel=\"nofollow noreferrer\"><code>get_or_insert</code></a> method is for:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Config {\n    defaults: Option&lt;Default&gt;,\n}\n\n#[derive(Debug)]\nstruct Default {\n    duration: Option&lt;Millis&gt;,\n}\n\n#[derive(Debug)]\nstruct Millis(u64);\n\nfn main() {\n    let mut config = Config { defaults: None };\n\n    config\n        .defaults\n        .get_or_insert(Default { duration: None })\n        .duration\n        .get_or_insert(Millis(0))\n        .0 = 42;\n\n    // Config { defaults: Some(Default { duration: Some(Millis(42)) }) }\n    println!(\"{:?}\", config);\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=0b59ae42db6a5011da196718598e4c8c&amp;version=stable\" rel=\"nofollow noreferrer\">(link to playground)</a></p>\n"}], "owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 49422076, "answer_count": 2, "score": 4, "last_activity_date": 1521724209, "creation_date": 1521666406, "last_edit_date": 1521668705, "question_id": 49416521, "link": "https://stackoverflow.com/questions/49416521/how-do-i-set-values-nested-within-multiple-options-if-they-are-not-already-set", "title": "How do I set values nested within multiple Options if they are not already set?", "body": "<p>I have a configuration setup such as this:</p>\n\n<pre><code>#[derive(Debug, Deserialize, Serialize)]\nstruct Config {\n    defaults: Option&lt;Default&gt;,\n}\n\n#[derive(Debug, Deserialize, Serialize)]\nstruct Default {\n    duration: Option&lt;Millis&gt;,\n}\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Millis(u64);\n</code></pre>\n\n<p>Having a value of <code>let cfg: &amp;mut Config</code>, how could I easily set the duration of this value?</p>\n\n<p>I tried this, which panics if the value is not there to begin with:</p>\n\n<pre><code>*cfg.default.as_mut().unwrap().duration.as_mut().unwrap() = Millis(1234)\n</code></pre>\n\n<p>I  have not found a way around those <code>unwrap</code>s to create the values on demand other than this, which is even more verbose...</p>\n\n<pre><code>if cfg.defaults.is_none() {\n    cfg.defaults = Some(Default { duration: None });\n}\n\nif cfg.defaults.as_mut().unwrap().duration.is_none() {\n    cfg.defaults.as_mut().unwrap().duration = Some(Millis(1234));\n}\n</code></pre>\n\n<p>What's \"The Way\" to do this?</p>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521665068, "post_id": 49416082, "comment_id": 85834166, "body": "The error you have here is not <a href=\"https://play.rust-lang.org/?gist=3b3aeb252dc73484645534863cbfc2d0&amp;version=stable\" rel=\"nofollow noreferrer\">the error that your code creates</a>. Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> that accurately recreates your problem. Namely, the error has nothing about <code>&#39;static</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521665192, "post_id": 49416082, "comment_id": 85834219, "body": "Do you feel that <a href=\"https://stackoverflow.com/q/37264396/155423\">error: <code>line</code> does not live long enough but it&#39;s ok in playground</a> answers your question?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521665241, "post_id": 49416082, "comment_id": 85834243, "body": "Or even better: <a href=\"https://stackoverflow.com/q/37264396/155423\">\u201cborrowed value does not live long enough\u201d seems to blame the wrong thing</a>. If not, please <a href=\"https://stackoverflow.com/posts/49416082/edit\">edit</a> your question to explain the difference."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521672801, "post_id": 49416082, "comment_id": 85837353, "body": "Perhaps you could <a href=\"https://stackoverflow.com/posts/49416082/edit\">edit</a> your question to explain what you don&#39;t understand about the error message that you get from the compiler? For whatever reason, you have been only pasting one line of each of the error messages; I&#39;ve pasted the entire error in, which seems pretty lucid and descriptive. Also, you are asking about an error that mentions the <code>&#39;static</code> lifetime, but <i>none of the code you&#39;ve provided has that error</i>. We cannot help you fix an error that we cannot see."}], "answers": [{"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": false, "score": 1, "last_activity_date": 1521689470, "creation_date": 1521689470, "answer_id": 49420072, "question_id": 49416082, "link": "https://stackoverflow.com/questions/49416082/lack-of-lifetime-of-line-from-buffered-reader-prevents-splitting-line/49420072#49420072", "title": "Lack of lifetime of line from buffered reader prevents splitting line", "body": "<p>The error your original code gives when compiled is:</p>\n\n<pre><code>error[E0597]: `ln` does not live long enough\n  --&gt; src/main.rs:11:13\n   |\n11 |             ln.split(' ').collect()\n   |             ^^ borrowed value does not live long enough\n12 |         };\n   |         - `ln` dropped here while still borrowed\n13 |     }\n   |     - borrowed value needs to live until here\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>As per @shepmasters comments it is a good idea to provide the full error when posting a question.</p>\n\n<p>Anyway, it highlights the problem:</p>\n\n<pre><code>let split: Vec&lt;&amp;str&gt; = {\n    let ln: String = line.unwrap();\n    ln.split(' ').collect()\n};\n</code></pre>\n\n<p>You are creating a <code>Vec</code> containing references to <code>str</code> slices; slices don't own the data that they are sliced from, they are effectively pointers into data which has to be owned by another variable. Therefore the variable that they are sliced from have to outlive the slices.</p>\n\n<p>Inside the expression you are using to initialise the  <code>Vec</code>, you create a <code>String</code> containing the line of text that you are processing. The scope of this string is the variable <code>ln</code> is the initialisation expression - it will be dropped as soon as you leave that scope.</p>\n\n<p>Then you <code>split</code> the string, which returns an iterator to string slices, one per substring. Remember though, the iterator is returning slices, which are pointers to the substrings in the <code>String</code> <code>ln</code>. Those slices are not allowed to outlive <code>ln</code> itself.</p>\n\n<p>Hopefully you can see the problem now. As soon as you exit the initialisation expression, <code>ln</code> is dropped, but the <code>Vec</code> would still contain the <code>str</code> slices. What are they pointing to?</p>\n\n<p>The fix is very simple. Why declare <code>ln</code> inside that block? In fact why have a block there at all? This works:</p>\n\n<pre><code>for line in f.lines() {\n    let ln: String = line.unwrap();\n    let split: Vec&lt;&amp;str&gt; = ln.split(' ').collect();\n    // Now do something with split\n}\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 9388478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5b90f37d2fa09a56b478ccb6aa8957da?s=128&d=identicon&r=PG&f=1", "display_name": "Tstone", "link": "https://stackoverflow.com/users/9388478/tstone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1521689470, "creation_date": 1521664780, "last_edit_date": 1521672669, "question_id": 49416082, "link": "https://stackoverflow.com/questions/49416082/lack-of-lifetime-of-line-from-buffered-reader-prevents-splitting-line", "title": "Lack of lifetime of line from buffered reader prevents splitting line", "body": "<p>I am banging my head trying to figure out Rust's borrowing/lifetime/ownership properties. Namely, when using a buffered reader, and attempting to split a line. The code</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufRead, BufReader};\n\nfn main() {\n    let f = File::open(\"foo.txt\").expect(\"file not found\");\n    let f = BufReader::new(f);\n\n    for line in f.lines() {\n        let split: Vec&lt;&amp;str&gt; = {\n            let ln: String = line.unwrap();\n            ln.split(' ').collect()\n        };\n    }\n}\n</code></pre>\n\n<p>or any variation of (with or without specifying variable type, futile attempts to make it mutable, etc) results in: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>'ln' does not live long enough; borrowed value must only be valid for the static lifetime...\n</code></pre>\n\n<p>yet trying to maybe fake an extended lifetime and grab some data out of the line via a slice</p>\n\n<pre><code>let nm = line;\nname = &amp;line[..];\n</code></pre>\n\n<p>or even just trying to operate the <code>split()</code> on the unmodified line variable results in:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cannot index into a value of type 'std::result::Result&lt;std::string::String, std::io::Error&gt;'\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/37264396/borrowed-value-does-not-live-long-enough-seems-to-blame-the-wrong-thing\">&quot;borrowed value does not live long enough&quot; seems to blame the wrong thing</a> suggests that the lifetime lasts long enough to put each word into its own string, but modifying my original code on <a href=\"https://play.rust-lang.org/?gist=3208b6f3b653176aa3ee6bb3c68eb335&amp;version=stable\" rel=\"nofollow noreferrer\">the  Playground</a> to include that nested for loop still results in a </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:11:18\n   |\n11 |         for w in line.unwrap().split_whitespace() {\n   |                  ^^^^^^^^^^^^^ temporary value does not live long enough\n...\n14 |         }\n   |         - temporary value dropped here while still borrowed\n15 |     }\n   |     - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>in reference to the <code>line.unwrap()</code></p>\n\n<p>Ultimately, what am I misunderstanding here about Rust's lifetime or borrowing properties?</p>\n"}, {"tags": ["mysql", "rust", "rust-diesel", "rust-chrono"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521653633, "post_id": 49412797, "comment_id": 85827796, "body": "Did you enable the <code>chrono</code> feature of Diesel?"}, {"owner": {"reputation": 51, "user_id": 9507111, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-xuFuWxPvZG0/AAAAAAAAAAI/AAAAAAAAAGw/rApuhslfE5s/photo.jpg?sz=128", "display_name": "Leonel S&#225;", "link": "https://stackoverflow.com/users/9507111/leonel-s%c3%a1"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1521654013, "post_id": 49412797, "comment_id": 85828014, "body": "diesel = { version = &quot;1.0&quot;, features = [&quot;mysql&quot;, &quot;chrono&quot;] } on the dependencies"}, {"owner": {"reputation": 344, "user_id": 8381551, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Tshja5lubyg/AAAAAAAAAAI/AAAAAAAAA3I/zaJcCvK5Nss/photo.jpg?sz=128", "display_name": "IamSaquib", "link": "https://stackoverflow.com/users/8381551/iamsaquib"}, "edited": false, "score": 0, "creation_date": 1581684164, "post_id": 49412797, "comment_id": 106528412, "body": "@LeonelS&#225; I have this and when i am using use chrono::NaiveDateTime; inside model.rs i am getting error that module is not found. Is it now removed from diesel?"}], "answers": [{"comments": [{"owner": {"reputation": 187, "user_id": 1712906, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kJnZY.jpg?s=128&g=1", "display_name": "fvildoso", "link": "https://stackoverflow.com/users/1712906/fvildoso"}, "edited": false, "score": 0, "creation_date": 1589254144, "post_id": 61181370, "comment_id": 109213154, "body": "after looking for an hour, I found you answer and it perfectly works. \u270c\ud83c\udffd"}], "tags": [], "owner": {"reputation": 101, "user_id": 9970487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/grcyx.png?s=128&g=1", "display_name": "pylint", "link": "https://stackoverflow.com/users/9970487/pylint"}, "is_accepted": false, "score": 6, "last_activity_date": 1606720200, "last_edit_date": 1606720200, "creation_date": 1586750495, "answer_id": 61181370, "question_id": 49412797, "link": "https://stackoverflow.com/questions/49412797/retrieve-datetime-from-mysql-database-using-diesel/61181370#61181370", "title": "Retrieve datetime from mySQL database using Diesel", "body": "<p>diesel Create/Read/Update/Delete example with datetime</p>\n<p>Cargo.toml:</p>\n<pre><code>[dependencies]\ndiesel = { version = &quot;1.4&quot;, features = [&quot;sqlite&quot;, &quot;chrono&quot;] }\nchrono = &quot;0.4&quot;\n</code></pre>\n<p>schema of users:</p>\n<pre class=\"lang-sql prettyprint-override\"><code>CREATE TABLE users (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    email TEXT NOT NULL UNIQUE,\n    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n</code></pre>\n<pre class=\"lang-rust prettyprint-override\"><code>mod schema {\n    table! {\n        users (id) {\n            id -&gt; Integer,\n            email -&gt; Text,\n            created_at -&gt; Timestamp,\n        }\n    }\n}\nmod models {\n    use super::schema::users;\n    #[derive(Queryable, Debug)]\n    pub struct User {\n        pub id: i32,\n        pub email: String,\n        /// deisel create must enable chrono feature\n        /// Timestamp without timezone, the memory align of Timestamp type in sqlite is same as libc::timeval?\n        pub created_at: chrono::NaiveDateTime,\n    }\n\n    #[derive(Insertable)]\n    #[table_name = &quot;users&quot;]\n    pub struct UserInsert {\n        pub email: String,\n    }\n}\n#[macro_use]\nextern crate diesel;\nuse diesel::{\n    result::Error as DieselError, sql_types::BigInt, sqlite::SqliteConnection, Connection,\n    ExpressionMethods, QueryDsl, RunQueryDsl,\n};\nuse models::{User, UserInsert};\nuse schema::users::dsl::{created_at, id, users};\n\nfn create_user(conn: &amp;SqliteConnection, new_user_form: UserInsert) -&gt; Result&lt;User, DieselError&gt; {\n    // use sqlite(last_insert_rowid)/mysql(last_insert_id) to get current connection's last_insert_id\n    // use .order(id.desc()).last() will get the wrong id when multi db_connections insert at same time\n    no_arg_sql_function!(last_insert_rowid, BigInt);\n    diesel::insert_into(users)\n        .values(&amp;new_user_form)\n        .execute(conn)?;\n    let new_user_id: i64 = diesel::select(last_insert_rowid).first(conn)?;\n    let last_insert_user: User = users.filter(id.eq(new_user_id as i32)).first(conn)?;\n    Ok(last_insert_user)\n}\n\nfn read_users(conn: &amp;SqliteConnection) -&gt; Result&lt;Vec&lt;User&gt;, DieselError&gt; {\n    Ok(users.load::&lt;User&gt;(conn)?)\n}\n\nfn update_user_created_at(conn: &amp;SqliteConnection, user_id: i32) -&gt; Result&lt;(), DieselError&gt; {\n    diesel::update(users.filter(id.eq(user_id)))\n        .set(created_at.eq(chrono::Utc::now().naive_utc()))\n        .execute(conn)?;\n    Ok(())\n}\n\nfn delete_user_by_user_id(conn: &amp;SqliteConnection, user_id: i32) -&gt; Result&lt;(), DieselError&gt; {\n    diesel::delete(users.filter(id.eq(user_id))).execute(conn)?;\n    Ok(())\n}\n\n/// diesel CRUD(Create, Read, Update, Delete) example with datetime\nfn main() -&gt; Result&lt;(), DieselError&gt; {\n    // TODO use r2d2 db_pool to enhance diesel performance\n    let conn = SqliteConnection::establish(&quot;file:db.sqlite&quot;).unwrap();\n    // clear all data before test\n    diesel::delete(users).execute(&amp;conn)?;\n    let test_user_email = format!(\n        &quot;test+{}@example.com&quot;,\n        std::time::SystemTime::now()\n            .duration_since(std::time::UNIX_EPOCH)\n            .unwrap()\n            .as_secs()\n    );\n    // CRUD - Create\n    println!(&quot;\\nCRUD - Create&quot;);\n    let last_insert_user = create_user(\n        &amp;conn,\n        UserInsert {\n            email: test_user_email,\n        },\n    )?;\n    dbg!(&amp;last_insert_user);\n    // CRUD - Read\n    println!(&quot;\\nCRUD - Read&quot;);\n    dbg!(read_users(&amp;conn)?);\n    assert_eq!(read_users(&amp;conn)?[0].id, last_insert_user.id);\n    // CRUD - Update\n    println!(&quot;\\nCRUD - Update&quot;);\n    update_user_created_at(&amp;conn, last_insert_user.id)?;\n    dbg!(read_users(&amp;conn)?);\n    assert_ne!(read_users(&amp;conn)?[0].created_at, last_insert_user.created_at);\n    // CRUD - Delete\n    println!(&quot;\\nCRUD - Delete&quot;);\n    delete_user_by_user_id(&amp;conn, last_insert_user.id)?;\n    dbg!(read_users(&amp;conn)?);\n    assert!(read_users(&amp;conn)?.is_empty());\n    Ok(())\n}\n</code></pre>\n<p>Output Example:</p>\n<pre><code>CRUD - Create\n[src/main.rs:85] &amp;last_insert_user = User {\n    id: 1,\n    email: &quot;test+1606720099@example.com&quot;,\n    created_at: 2020-11-30T07:08:19,\n}\n\nCRUD - Read\n[src/main.rs:88] read_users(&amp;conn)? = [\n    User {\n        id: 1,\n        email: &quot;test+1606720099@example.com&quot;,\n        created_at: 2020-11-30T07:08:19,\n    },\n]\n\nCRUD - Update\n[src/main.rs:93] read_users(&amp;conn)? = [\n    User {\n        id: 1,\n        email: &quot;test+1606720099@example.com&quot;,\n        created_at: 2020-11-30T07:08:19.386513,\n    },\n]\n\nCRUD - Delete\n[src/main.rs:98] read_users(&amp;conn)? = []\n</code></pre>\n"}], "owner": {"reputation": 51, "user_id": 9507111, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-xuFuWxPvZG0/AAAAAAAAAAI/AAAAAAAAAGw/rApuhslfE5s/photo.jpg?sz=128", "display_name": "Leonel S&#225;", "link": "https://stackoverflow.com/users/9507111/leonel-s%c3%a1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1794, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1606720200, "creation_date": 1521652820, "last_edit_date": 1539963291, "question_id": 49412797, "link": "https://stackoverflow.com/questions/49412797/retrieve-datetime-from-mysql-database-using-diesel", "title": "Retrieve datetime from mySQL database using Diesel", "body": "<p>I can't retrieve datetime from a populated mySQL database using Rocket and Diesel.</p>\n\n<p>Here is my model:</p>\n\n<pre><code>extern crate chrono;\n\nuse diesel::prelude::*;\nuse diesel::mysql::MysqlConnection;\nuse schema::chrisms;\nuse diesel::sql_types::Datetime;\nuse self::chrono::{DateTime, Duration, NaiveDate, NaiveDateTime, NaiveTime, TimeZone, Utc};\n\n#[derive(Serialize, Deserialize, Queryable)]\npub struct Chrisms {\n    pub entity_ekklesia_location_id: i32,\n    pub serie_number: Option&lt;String&gt;,\n    pub seat_number: Option&lt;String&gt;,\n    pub date: Datetime,\n    pub year: i32,\n    pub deleted: bool,\n    pub entity_chrism_location_id: Option&lt;i32&gt;,\n    pub entity_chrism_location_description: Option&lt;String&gt;,\n    pub entity_rel_mec_id: Option&lt;i32&gt;,\n    pub entity_rel_mec_description: Option&lt;String&gt;,\n    pub created_by_user_id: Option&lt;i32&gt;,\n    pub updated_by_user_id: Option&lt;i32&gt;,\n    pub deleted_by_user_id: Option&lt;i32&gt;,\n    pub created_at: Datetime,\n    pub updated_at: Datetime,\n    pub id: i32,\n}\n\nimpl Chrisms {\n    pub fn read(connection: &amp;MysqlConnection) -&gt; Vec&lt;Chrisms&gt; {\n        chrisms::table.load::&lt;Chrisms&gt;(connection).unwrap()\n    }\n}\n</code></pre>\n\n<p>My schema:</p>\n\n<pre><code>table! {\n    chrisms (id) {\n        entity_ekklesia_location_id -&gt; Integer,\n        serie_number -&gt; Nullable&lt;Varchar&gt;,\n        seat_number -&gt; Nullable&lt;Varchar&gt;,\n        date -&gt; Datetime,\n        year -&gt; Integer,\n        deleted -&gt; Bool,\n        entity_chrism_location_id -&gt; Nullable&lt;Integer&gt;,\n        entity_chrism_location_description -&gt; Nullable&lt;Varchar&gt;,\n        entity_rel_mec_id -&gt; Nullable&lt;Integer&gt;,\n        entity_rel_mec_description -&gt; Nullable&lt;Varchar&gt;,\n        created_by_user_id -&gt; Nullable&lt;Integer&gt;,\n        updated_by_user_id -&gt; Nullable&lt;Integer&gt;,\n        deleted_by_user_id -&gt; Nullable&lt;Integer&gt;,\n        created_at -&gt; Datetime,\n        updated_at -&gt; Datetime,\n        id -&gt; Integer,\n    }\n}\n</code></pre>\n\n<p>This produces the errors:</p>\n\n<pre><code>1. the trait `_IMPL_SERIALIZE_FOR_TemplateContext::_serde::Serialize` is not \nimplemented for `diesel::sql_types::Datetime`\n-required by `_IMPL_SERIALIZE_FOR_TemplateContext::_serde::ser::SerializeStruct::serialize_field`\n\n2. the trait `_IMPL_SERIALIZE_FOR_TemplateContext::_serde::Deserialize&lt;'_&gt;` is \nnot implemented for `diesel::sql_types::Datetime`\n- required by `_IMPL_SERIALIZE_FOR_TemplateContext::_serde::de::SeqAccess::next_element`\n- required by `_IMPL_SERIALIZE_FOR_TemplateContext::_serde::de::MapAccess::next_value`\n\n3. the trait `diesel::Queryable&lt;diesel::sql_types::Datetime, \ndiesel::mysql::Mysql&gt;` is not implemented for `diesel::sql_types::Datetime`\n- required because of the requirements on the impl of `diesel::query_dsl::LoadQuery&lt;_, models::chrisms::Chrisms&gt;` for `schema::chrisms::table`\n</code></pre>\n\n<p>How do I fix this? I tested a bunch of uses like <code>diesel:mysql_types</code>, <code>rocket:config</code> and so on, doesn't seem to be that the issue.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1521641036, "post_id": 49408177, "comment_id": 85818129, "body": "I&#39;d <i>strongly</i> encourage you to produce a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> that produces these errors. There are some tips for producing a Rust MCVE on the <a href=\"https://stackoverflow.com/tags/rust/info\">tag wiki page</a>. We aren&#39;t mystical gurus that magically divine error messages; we need code to look at the same as anyone else. While you are at it, please <a href=\"https://stackoverflow.com/posts/49408177/edit\">edit</a> your question to explain why existing questions that talk about these error messages aren&#39;t good enough."}, {"owner": {"reputation": 1302, "user_id": 2491528, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/723f1b1cb73fa871f360bdea9bd17a8a?s=128&d=identicon&r=PG", "display_name": "Federico", "link": "https://stackoverflow.com/users/2491528/federico"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521642903, "post_id": 49408177, "comment_id": 85819676, "body": "I think I clarified a bit the question. The focus is more on the error message than on the code itself (that I would like to fix, sure, but later)."}, {"owner": {"reputation": 1302, "user_id": 2491528, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/723f1b1cb73fa871f360bdea9bd17a8a?s=128&d=identicon&r=PG", "display_name": "Federico", "link": "https://stackoverflow.com/users/2491528/federico"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521645558, "post_id": 49408177, "comment_id": 85821832, "body": "There is no MCVE, but on purpose: my question is how to parse the error message, that seems very specific (&quot;<i>the</i> lifetime&quot;, &quot;<i>that</i> reference&quot;...) but I personally can&#39;t tell what it is referring to. Is the error message so useless without the code?"}], "answers": [{"tags": [], "owner": {"reputation": 13169, "user_id": 967945, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/47244a17f72cee237f57f4c4b9613ea1?s=128&d=identicon&r=PG", "display_name": "Dan Hulme", "link": "https://stackoverflow.com/users/967945/dan-hulme"}, "is_accepted": true, "score": 6, "last_activity_date": 1521659287, "last_edit_date": 1521659287, "creation_date": 1521658048, "answer_id": 49414372, "question_id": 49408177, "link": "https://stackoverflow.com/questions/49408177/how-to-read-a-lifetime-error-without-looking-at-the-code/49414372#49414372", "title": "How to read a lifetime error without looking at the code?", "body": "<blockquote>\n  <p>cannot infer an appropriate lifetime for autoref due to conflicting requirements</p>\n</blockquote>\n\n<p>This is the key part of the error. There are two (or more) requirements on a lifetime, and they conflict. The \"autoref\" means the reference that's taken by calling a method that takes <code>&amp;self</code>. The quoted line of code indicates which method call is erroneous.</p>\n\n<blockquote>\n  <p>note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 40:5</p>\n</blockquote>\n\n<p>This is the first conflicting requirement. \"The lifetime\" means the one referred to in the first message: the one it's trying to infer, for this autoref. It can't outlive the object you're calling the method on. The quoted code indicates the lifetime of that object. In this case, the lifetime is the whole method that the erroneous line is in, because the object you're borrowing is a member of that method's <code>&amp;mut self</code>.</p>\n\n<blockquote>\n  <p>note: ...so that reference does not outlive borrowed content</p>\n</blockquote>\n\n<p>This just explains that a bit further. \"That reference\" - the autoref you're trying to take - can't outlive the object that <code>&amp;mut self</code> refers to.</p>\n\n<blockquote>\n  <p>note: but, the lifetime must be valid for the lifetime 'v as defined on the impl at 22:1...</p>\n</blockquote>\n\n<p>The \"but\" here introduces the second requirement, which conflicts with the first requirement.</p>\n\n<p>You ask \"why these constraints?\", and the compiler explains right away:</p>\n\n<blockquote>\n  <p>note: ...so that the expression is assignable:<br>\n             expected viper::Method&lt;'v><br>\n                found viper::Method&lt;'_></p>\n</blockquote>\n\n<p>The assignment in question is the one in the erroneous line. You're assigning the result of <code>new_cfg_method</code> to <code>cfg</code>. The \"expected\" is the left hand-side of the assignment, <code>cfg</code>, which must be of type <code>viper::Method&lt;'v&gt;</code>. The \"found\" is the right-hand side, the result of the method call, which has type <code>viper::Method&lt;'_&gt;</code>. <code>'_</code> means the lifetime the compiler is trying to infer. That is, it's the way you subsequently use <code>cfg</code> that means it must have the lifetime <code>'v</code>. Why that is depends on the code that's not quoted in the error message.</p>\n\n<p>To fix this, you need to do one of the following:</p>\n\n<ol>\n<li>Cut out the first requirement. Change <code>new_cfg_method</code> so that the lifetime of its result is not tied to the lifetime of the object you call it on: perhaps by removing some references it contains.</li>\n<li>Cut out the second requirement. Change the code that uses <code>cfg</code> so it doesn't need to have the lifetime <code>'v</code>. Again, this might be achieved by removing some references in <code>viper::Method</code>.</li>\n</ol>\n\n<p>If you can't do either, you might need to introduce <code>Cell</code> or something else to manage lifetimes dynamically instead of statically.</p>\n"}], "owner": {"reputation": 1302, "user_id": 2491528, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/723f1b1cb73fa871f360bdea9bd17a8a?s=128&d=identicon&r=PG", "display_name": "Federico", "link": "https://stackoverflow.com/users/2491528/federico"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "accepted_answer_id": 49414372, "answer_count": 1, "score": -1, "last_activity_date": 1521659299, "creation_date": 1521640328, "last_edit_date": 1521659299, "question_id": 49408177, "link": "https://stackoverflow.com/questions/49408177/how-to-read-a-lifetime-error-without-looking-at-the-code", "title": "How to read a lifetime error without looking at the code?", "body": "<p>I'm getting the following lifetime error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; prusti-viper/src/procedures_table.rs:42:40\n   |\n42 |         let mut cfg = self.cfg_factory.new_cfg_method(\n   |                                        ^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 40:5...\n  --&gt; prusti-viper/src/procedures_table.rs:40:5\n   |\n40 | /     pub fn set_used(&amp;mut self, proc_def_id: ProcedureDefId) {\n41 | |         let procedure = self.env.get_procedure(proc_def_id);\n42 | |         let mut cfg = self.cfg_factory.new_cfg_method(\n43 | |             // method name\n...  |\n135| |         self.procedures.insert(proc_def_id, method);\n136| |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; prusti-viper/src/procedures_table.rs:42:23\n   |\n42 |         let mut cfg = self.cfg_factory.new_cfg_method(\n   |                       ^^^^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'v as defined on the impl at 22:1...\n  --&gt; prusti-viper/src/procedures_table.rs:22:1\n   |\n22 | impl&lt;'v, P: Procedure&gt; ProceduresTable&lt;'v, P&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = note: ...so that the expression is assignable:\n           expected viper::Method&lt;'v&gt;\n              found viper::Method&lt;'_&gt;\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Without looking at the code, just by reading the error message, is it possible to understand to which lifetimes/references/borrows is the error message referring to? Here is the message annotated with my questions:</p>\n\n<blockquote>\n  <p>error[E0495]: cannot infer an appropriate lifetime for autoref <strong>(what is autoref?)</strong> due to conflicting requirements</p>\n  \n  <p>note: first, the lifetime <strong>(which lifetime?)</strong> cannot outlive the anonymous lifetime #1 <strong>(the one of <code>&amp;mut self</code>, ok)</strong> defined on the method body at 40:5...</p>\n  \n  <p>...so that reference <strong>(which reference?)</strong> does not outlive borrowed content <strong>(which borrowed content?)</strong></p>\n  \n  <p>but, the lifetime must be valid for the lifetime 'v as defined on the impl at 22:1... <strong>(why these constraints?)</strong></p>\n</blockquote>\n\n<p>For example, I'm looking for an explanation like \"In error message E0495 the lifetime that cannot outlive the anonymous lifetime #1 is always the lifetime of <code>self</code>, in other words #1 again\".</p>\n\n<p>By looking at existing answers to similar questions (<a href=\"https://stackoverflow.com/a/35519236/2491528\">https://stackoverflow.com/a/35519236/2491528</a>, <a href=\"https://stackoverflow.com/a/30869059/2491528\">https://stackoverflow.com/a/30869059/2491528</a>, <a href=\"https://stackoverflow.com/a/41271422/2491528\">https://stackoverflow.com/a/41271422/2491528</a>), I can't find an explanation of what the error message is referring to. Sometimes the answer just writes \"in this case the lifetime is <code>'a</code>\", but I'm wondering how to understand that it's <code>'a</code> and not some other <code>'b</code>. Other times the answer involves reasoning on the source code, but that would be one of the following steps for me: first of all read the message and understand what it's referring to, then understand the error (in this case, probably conflicting lifetime requirements), then look at the code and try to fix the error.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1521635932, "post_id": 49406517, "comment_id": 85814104, "body": "Might be related to <a href=\"https://stackoverflow.com/questions/31101915/how-to-implement-trim-for-vecu8\" title=\"how to implement trim for vecu8\">stackoverflow.com/questions/31101915/&hellip;</a>"}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1521651539, "post_id": 49406517, "comment_id": 85826471, "body": "Is the padding all <code>\\0</code>? Usually C strings contain one <code>\\0</code> right after the string and every character after that might be garbage."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 3, "creation_date": 1521654213, "post_id": 49406517, "comment_id": 85828132, "body": "I&#39;m glad you got the answer, but it really seems like the right answer here might be to not put the null bytes there to begin with. I&#39;m assuming your snippet is not your actual real code, and only an example?"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user1094865"}, "edited": false, "score": 0, "creation_date": 1521639380, "post_id": 49406848, "comment_id": 85816766, "body": "Awesome! I knew there had to be an easy way to do this!"}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1521704033, "post_id": 49406848, "comment_id": 85846497, "body": "@T-Pane Btw, if the 0-bytes are there because you pre-allocate a data buffer you may be able to avoid them altogether by initializing the data with <code>Vec::with_capacity(512)</code> and filling it as required."}], "tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 16, "last_activity_date": 1598237490, "last_edit_date": 1598237490, "creation_date": 1521636775, "answer_id": 49406848, "question_id": 49406517, "link": "https://stackoverflow.com/questions/49406517/how-to-remove-trailing-null-characters-from-string/49406848#49406848", "title": "How to remove trailing null characters from String?", "body": "<p>You can trim custom patterns from a string using <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.trim_matches\" rel=\"nofollow noreferrer\"><code>trim_matches</code></a>. The pattern can be a null character:</p>\n<pre><code>fn main() {\n    let mut data: Vec&lt;u8&gt;  = vec![0; 8];\n    \n    data[0] = 104;\n    data[1] = 105;\n    \n    let res = String::from_utf8(data).expect(&quot;Found invalid UTF-8&quot;);\n    println!(&quot;{}: {:?}&quot;, res.len(), res);\n    // 8: &quot;hi\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}&quot;\n    \n    let res = res.trim_matches(char::from(0));\n    println!(&quot;{}: {:?}&quot;, res.len(), res);\n    // 2: &quot;hi&quot;\n}\n</code></pre>\n<p>This removes 0 from both sides. If you only want to remove trailing 0s use <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.trim_end_matches\" rel=\"nofollow noreferrer\"><code>trim_end_matches</code></a> instead.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user1094865"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4446, "favorite_count": 1, "accepted_answer_id": 49406848, "answer_count": 1, "score": 9, "last_activity_date": 1598237490, "creation_date": 1521635751, "last_edit_date": 1521637590, "question_id": 49406517, "link": "https://stackoverflow.com/questions/49406517/how-to-remove-trailing-null-characters-from-string", "title": "How to remove trailing null characters from String?", "body": "<p>I am having issues with removing trailing null characters from UTF-8 encoded strings:</p>\n\n<p><a href=\"https://i.stack.imgur.com/31Qyi.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/31Qyi.png\" alt=\"enter image description here\"></a></p>\n\n<p>How would one go about removing these characters from a <code>String</code>? </p>\n\n<p>Here is the code I use to create the <code>String</code> from a <code>Vec</code>:</p>\n\n<pre><code>let mut data: Vec&lt;u8&gt; = vec![0; 512];\n// populate data\nlet res = String::from_utf8(data).expect(\"Found invalid UTF-8\");\n</code></pre>\n"}, {"tags": ["rust", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 7, "creation_date": 1521637641, "post_id": 49401930, "comment_id": 85815323, "body": "The actual important part is that <code>&amp;str: Copy</code>, like all immutable references."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 4, "last_activity_date": 1521623173, "last_edit_date": 1521623173, "creation_date": 1521622724, "answer_id": 49401930, "question_id": 49401756, "link": "https://stackoverflow.com/questions/49401756/why-is-the-string-literal-not-moved/49401930#49401930", "title": "Why is the string literal not moved?", "body": "<p>The signature of <code>push_str</code> is:</p>\n\n<pre><code>pub fn push_str(&amp;mut self, string: &amp;str)\n</code></pre>\n\n<p>Which means its argument is a reference. This matches the type of <code>s2</code>, which is a reference to a static string slice:</p>\n\n<pre><code>let s2: &amp;'static str = \"bar\";\n</code></pre>\n\n<p>The compiler is able to dereference the argument of <code>push_str</code> as much as necessary, so <code>s1.push_str(s2)</code> works just as well as <code>s1.push_str(&amp;&amp;&amp;&amp;&amp;s2)</code>. </p>\n\n<p>Since in the end you are always passing a reference, the argument is not moved (only borrowed), and <code>s2</code> is still available after it is pushed.</p>\n"}], "owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 2, "accepted_answer_id": 49401930, "answer_count": 1, "score": 3, "last_activity_date": 1521637563, "creation_date": 1521622213, "last_edit_date": 1521637563, "question_id": 49401756, "link": "https://stackoverflow.com/questions/49401756/why-is-the-string-literal-not-moved", "title": "Why is the string literal not moved?", "body": "<p>I was going through <a href=\"https://doc.rust-lang.org/book/second-edition/ch08-02-strings.html\" rel=\"nofollow noreferrer\">Rust second edition ebook</a> and in a piece of code from the linked chapter, if I remove the reference operator (<code>&amp;</code>) in line 3, the program still works perfectly fine. </p>\n\n<pre><code>let mut s1 = String::from(\"foo\");\nlet s2 = \"bar\";\ns1.push_str(&amp;s2); // here\nprintln!(\"s2 is {}\", s2);\n</code></pre>\n\n<p>The value of <code>s2</code> should be moved as per the book. However, if I change </p>\n\n<pre><code>s1.push_str(&amp;s2);\n</code></pre>\n\n<p>to</p>\n\n<pre><code>s1.push_str(s2);\n</code></pre>\n\n<p>the following line should trigger an error, but it doesn't happen:</p>\n\n<pre><code>println!(\"s2 is {}\", s2);\n</code></pre>\n\n<p>A fragment from the documentation:</p>\n\n<blockquote>\n  <p>Listing 8-16: Using a string slice after appending its contents to a\n  String\n  <em>If the push_str method took ownership of s2 , we wouldn\u2019t be able to print out its value on the last line. However, this code works as we\u2019d\n  expect!</em></p>\n</blockquote>\n\n<p>I am using Rust 1.24.1.</p>\n"}, {"tags": ["reflection", "rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1521625277, "post_id": 49401403, "comment_id": 85806636, "body": "I am confused by your question. I see no dynamic dispatch in it, nor any suggestion on how you want the <code>Foo</code> trait to be used in general. Note that the trait is not <a href=\"https://doc.rust-lang.org/book/first-edition/trait-objects.html#object-safety\" rel=\"nofollow noreferrer\">object-safe</a>, so you cannot dynamically dispatch through it. Also, your question title mentions &quot;reflection&quot;, which Rust doesn&#39;t have and which has nothing to do with trait object dynamic dispatch."}, {"owner": {"reputation": 1160, "user_id": 1395536, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5feed9a5b3d1ace6ab77479fd5669139?s=128&d=identicon&r=PG&f=1", "display_name": "Ricky Han", "link": "https://stackoverflow.com/users/1395536/ricky-han"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1521626659, "post_id": 49401403, "comment_id": 85807615, "body": "You are right this cannot be a trait object, though, correct me if I&#39;m wrong, dynamic dispatch happens when <code>Box&lt;Any&gt;</code> gets downcast to appropriate trait objects ie <code>Box&lt;Bar&gt;</code>. Basically I am trying to hide the associated type of the <code>Foo</code> trait and store this information for later use. Is this even possible? What about <code>qux.add_baz(GetBar::&lt;&amp;str&gt;::new(1), GetBaz::&lt;i32, i32&gt;::new(3));</code> and use that type information to recursively get from <code>qux</code>? Sorry for the contrived example, the real repo is <a href=\"https://github.com/rickyhan/spandex-rs/blob/master/src/lib.rs\" rel=\"nofollow noreferrer\">github.com/rickyhan/spandex-rs/blob/master/src/lib.rs</a>"}, {"owner": {"reputation": 13169, "user_id": 967945, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/47244a17f72cee237f57f4c4b9613ea1?s=128&d=identicon&r=PG", "display_name": "Dan Hulme", "link": "https://stackoverflow.com/users/967945/dan-hulme"}, "edited": false, "score": 0, "creation_date": 1521629245, "post_id": 49401403, "comment_id": 85809483, "body": "What are you actually trying to achieve? What&#39;s the code that you would like to write to <i>use</i> this trait?"}, {"owner": {"reputation": 1160, "user_id": 1395536, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5feed9a5b3d1ace6ab77479fd5669139?s=128&d=identicon&r=PG&f=1", "display_name": "Ricky Han", "link": "https://stackoverflow.com/users/1395536/ricky-han"}, "reply_to_user": {"reputation": 13169, "user_id": 967945, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/47244a17f72cee237f57f4c4b9613ea1?s=128&d=identicon&r=PG", "display_name": "Dan Hulme", "link": "https://stackoverflow.com/users/967945/dan-hulme"}, "edited": false, "score": 0, "creation_date": 1521629899, "post_id": 49401403, "comment_id": 85809888, "body": "@DanHulme I&#39;d like to achieve something like this: <a href=\"https://play.rust-lang.org/?gist=9c752a5c8a477ae08e8b2532e07c3168&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1521639728, "post_id": 49401403, "comment_id": 85817044, "body": "Wow, I completely failed to scroll down in the code box. I&#39;ll have  closer look now."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1521640043, "post_id": 49401403, "comment_id": 85817303, "body": "So if I understand you correctly, you want type-aware keys that you can use to get the typed values out again. But it&#39;s extra tricky, because you have two different kinds of values, and you want to use a single key interface to support either of them."}], "owner": {"reputation": 1160, "user_id": 1395536, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5feed9a5b3d1ace6ab77479fd5669139?s=128&d=identicon&r=PG&f=1", "display_name": "Ricky Han", "link": "https://stackoverflow.com/users/1395536/ricky-han"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 89, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1521638034, "creation_date": 1521621023, "last_edit_date": 1521638034, "question_id": 49401403, "link": "https://stackoverflow.com/questions/49401403/reflection-requies-type-annotation", "title": "Reflection requies type annotation", "body": "<p>I am trying to hide the type information of the <code>impl Foo</code> and store this information for later use. Is this even possible? </p>\n\n<pre><code>#![feature(universal_impl_trait)]\n\nuse std::any::Any;\nuse std::marker::PhantomData;\n\ntrait Foo {\n    type Item;\n    fn get(&amp;self) -&gt; Self::Item;\n}\n\n#[derive(Clone, Debug)]\nstruct Bar&lt;T: Clone&gt;(T);\nimpl&lt;T: Clone&gt; Bar&lt;T&gt; {\n    fn new(t: T) -&gt; Self {\n        Bar(t)\n    }\n}\nimpl&lt;T: 'static + Clone&gt; Foo for Bar&lt;T&gt; {\n    type Item = T;\n    fn get(&amp;self) -&gt; Self::Item {\n        self.0.clone()\n    }\n}\n\n#[derive(Clone, Debug)]\nstruct Baz&lt;T: Clone, F: Clone&gt;(T, F);\nimpl&lt;T: Clone, F: Clone&gt; Baz&lt;T, F&gt; {\n    fn new(t: T, f: F) -&gt; Self {\n        Baz(t, f)\n    }\n}\nimpl&lt;T: 'static + Clone, F: 'static + Clone&gt; Foo for Baz&lt;T, F&gt; {\n    type Item = (T, F);\n    fn get(&amp;self) -&gt; Self::Item {\n        (self.0.clone(), self.1.clone())\n    }\n}\n\ntrait Get {\n    type Item;\n    fn idx(&amp;self) -&gt; usize;\n}\n\nstruct GetBar&lt;T&gt; {\n    id: usize,\n    _t: PhantomData&lt;T&gt;,\n}\nimpl&lt;T&gt; Get for GetBar&lt;T&gt; {\n    type Item = T;\n    fn idx(&amp;self) -&gt; usize {\n        self.id\n    }\n}\nimpl&lt;T&gt; GetBar&lt;T&gt; {\n    fn new(id: usize) -&gt; Self {\n        Self {\n            id,\n            _t: PhantomData,\n        }\n    }\n}\n\nstruct GetBaz&lt;T, F&gt; {\n    id: usize,\n    _t: PhantomData&lt;T&gt;,\n    _f: PhantomData&lt;F&gt;,\n}\nimpl&lt;T, F&gt; Get for GetBaz&lt;T, F&gt; {\n    type Item = T;\n    fn idx(&amp;self) -&gt; usize {\n        self.id\n    }\n}\nimpl&lt;T, F&gt; GetBaz&lt;T, F&gt; {\n    fn new(id: usize) -&gt; Self {\n        GetBaz {\n            id,\n            _t: PhantomData,\n            _f: PhantomData,\n        }\n    }\n}\n\nstruct Qux {\n    v: Vec&lt;Box&lt;Any&gt;&gt;,\n}\nimpl Qux {\n    fn new() -&gt; Self {\n        Qux { v: vec![] }\n    }\n\n    fn add_bar&lt;T: 'static + Clone&gt;(&amp;mut self, a: T) -&gt; GetBar&lt;T&gt; {\n        self.v.push(Box::new(Bar::new(a)) as Box&lt;Any&gt;);\n        GetBar::new(self.v.len())\n    }\n\n    fn add_baz&lt;T: 'static + Clone, F: 'static + Clone&gt;(&amp;mut self, a: T, b: F) -&gt; GetBaz&lt;T, F&gt; {\n        self.v.push(Box::new(Baz::new(a, b)) as Box&lt;Any&gt;);\n        GetBaz::new(self.v.len())\n    }\n\n    fn get&lt;T: 'static + Clone, F: 'static + Clone&gt;(&amp;self, val: &amp;'static impl Get) -&gt; Option&lt;T&gt; {\n        let node = &amp;self.v[val.idx()];\n        if let Some(foo) = node.downcast_ref::&lt;Bar&lt;T&gt;&gt;() {\n            Some(foo.get())\n        } else if let Some(foo) = node.downcast_ref::&lt;Baz&lt;T, F&gt;&gt;() {\n            Some(foo.get().0)\n        } else {\n            None\n        }\n    }\n}\n\nfn main() {\n    let mut qux = Qux::new();\n\n    let a = qux.add_bar(1_i32);\n    let b = qux.add_bar(\"1\");\n    let c = qux.add_baz(Bar::new('A'), Bar::new('B'));\n\n    assert_eq!(qux.get(&amp;a).unwrap(), 1);\n    assert_eq!(qux.get(&amp;b).unwrap(), \"i\");\n    assert_eq!(qux.get(&amp;c).unwrap(), Bar::new('A'));\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `_: std::clone::Clone`\n   --&gt; src/main.rs:121:20\n    |\n121 |     assert_eq!(qux.get(&amp;a).unwrap(), 1);\n    |                    ^^^\n</code></pre>\n\n<p>Sorry for the long example but this is the best I can do. </p>\n\n<p>I'm trying to reconcile the Rust static type system with dynamically dispatched trait objects. However, in many occasions I am unable to provide type annotations. What is the best way to achieve this? How can I dynamically supply type information to the trait object system?</p>\n\n<p>What about <code>qux.add_baz(GetBar::&lt;&amp;str&gt;::new(1), GetBaz::&lt;i32, i32&gt;::new(3));</code> and use that type information to recursively get from <code>qux</code>? </p>\n\n<p>Sorry for the contrived example; the <a href=\"https://github.com/rickyhan/spandex-rs/blob/0bc3d4c4aff8b6cbedda9702e3c741e2f9ece443/src/lib.rs\" rel=\"nofollow noreferrer\">real code is available on GitHub</a>.</p>\n"}, {"tags": ["generics", "rust", "option", "rust-result"], "answers": [{"comments": [{"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1521625706, "post_id": 49398283, "comment_id": 85806907, "body": "I mean, the explanation is correct,  but I was more wondering &quot;Why&quot; this the difference in implementation between unwrap_or and match (e.g. why can&#39;t we have unwrap_or behave like match) ? Also, you&#39;r example works if I want to return a <code>String</code> but not if I want a <code>&amp;String</code> (lieftime issues), which is what I&#39;d want from something like .get in a map"}, {"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1521626073, "post_id": 49398283, "comment_id": 85807197, "body": "Also, I&#39;ve edited my post to explain how to use .map. Apparently .map(|s| s.as_ref()) is what you need"}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "reply_to_user": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1521671498, "post_id": 49398283, "comment_id": 85836954, "body": "I think I did the best I could to explain what the difference in implementation is: In the <code>match</code> case, you&#39;re converting an <code>&amp;String</code> into an <code>&amp;str</code>, which is acceptable, while in the <code>unwrap_or</code> case, you&#39;re trying to convert an <code>&amp;str</code> into an <code>&amp;String</code>, which isn&#39;t. <code>unwrap_or</code> requires an <code>&amp;String</code> for type-checking purposes."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "reply_to_user": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1521672305, "post_id": 49398283, "comment_id": 85837194, "body": "If you need an <code>&amp;String</code> then the simple answer is pretty much no, you would need to <code>let default_string = &quot;&quot;.to_string()</code> in the same scope as the <code>unwrap_or</code> so that you could create a reference to it. At least, as far as I can tell."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "reply_to_user": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1521672463, "post_id": 49398283, "comment_id": 85837243, "body": "Again, just to be clear. In your <code>match</code> case, <code>b</code> is an <code>&amp;str</code>, but in your <code>unwrap_or</code> case, <code>b</code> is an <code>&amp;String</code>. And it&#39;s that way by necessity of how Rust defines functions, and which types can coerce into other types. That&#39;s why they&#39;re different."}], "tags": [], "owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "is_accepted": false, "score": 2, "last_activity_date": 1521607062, "creation_date": 1521607062, "answer_id": 49398283, "question_id": 49396869, "link": "https://stackoverflow.com/questions/49396869/difference-between-match-and-unwrap-or-when-determining-types/49398283#49398283", "title": "Difference between match and unwrap_or when determining types", "body": "<p>Loosely speaking, you're half correct.</p>\n\n<p><code>a</code> is an <code>Option&lt;&amp;String&gt;</code>. An <code>&amp;String</code> can be coerced into an <code>&amp;str</code>, but an <code>&amp;str</code> cannot be coerced into an <code>&amp;String</code>. See this code:</p>\n\n<pre><code>fn main() {\n    let a = String::from(\"This is a String\");\n    let a_r = &amp;a;\n    foo(a_r);\n    bar(a_r);\n\n    let b = \"This is an &amp;str\";\n    // Next line will cause a compilation error if uncommented\n    // foo(b);\n    bar(b);\n}\n\nfn foo(s: &amp;String) {\n    println!(\"Foo: {}\", s);\n}\n\nfn bar(s: &amp;str) {\n    println!(\"Bar: {}\", s);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=01ee6fac74938ef9d92a3250f5eac250&amp;version=stable\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>If <code>foo(b);</code> is uncommented, it'll tell you that it expected <code>String</code>, got <code>str</code>.</p>\n\n<p>The <code>match</code> statement returns an <code>&amp;str</code> (converted from an <code>&amp;String</code>), but <code>unwrap_or</code> expects the same type as the <code>Option</code> that you're calling, an <code>&amp;String</code>, which an <code>&amp;str</code> cannot become without a manual change (<code>String::from</code>, <code>to_string</code>, <code>to_owned</code>, etc)</p>\n\n<p>Now, I'm going to try to give a brief explanation for <em>why</em> this is, but take it with a grain of salt because <strong>I am not an expert in this field</strong>.</p>\n\n<hr>\n\n<p>When using a string literal (<code>\"foo\"</code>), the program, on compilation, creates some segment of memory which represents this text in binary form. This is why a string literal is an <code>&amp;str</code> and not just a <code>str</code>: It isn't raw text, but instead, it's a <em>reference to text that already exists at startup</em>. This means that string literals live in a specific portion of memory which <em>cannot be modified</em>, because they're wedged up beside some other object - (<code>\"fooquxegg\"</code>) - and attempting to add characters to a string literal would cause you to <em>overwrite the next object in line</em>, which is Very Bad.</p>\n\n<p>A <code>String</code>, however, is modifiable. Since we can't determine how many characters are in a String, it has to live in the \"heap\", where objects <em>can</em> be shifted around if something attempts to \"grow into\" something else, and the <code>String</code> type basically serves as a pointer to that text in the heap, much like a <code>Box&lt;T&gt;</code> points to a <code>T</code> in the heap.</p>\n\n<p>For this reason, while an <code>&amp;String</code> can become an <code>&amp;str</code> (it's pointing to a certain amount of text <em>somewhere</em>, in this case, somewhere in the heap rather than the static memory), an <code>&amp;str</code> <em>cannot be guaranteed to become an</em> <code>&amp;String</code>. If you converted an string literal (like our <code>\"foo\"</code>), which lives in a portion of memory that can't be modified, into an <code>&amp;String</code> which <em>could potentially be modified</em>, and then attempted to append some characters to it (say <code>\"bar\"</code>), it would overwrite something else.</p>\n\n<hr>\n\n<p>With that being said, look at this code:</p>\n\n<pre><code>fn main() {\n   let s = \"this is an &amp;str\";\n   let b = String::from(\"this is a String\");\n   let s_o : Option&lt;&amp;str&gt; = Some(s);\n\n   let s_or_def = s_o.unwrap_or(&amp;b);\n   println!(\"{}\", s_or_def);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=f1b69e34ab3ac730495f26a82223adf2&amp;version=stable\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>This code is effectively the inverse of your <code>unwrap_or</code> example: An <code>Option&lt;&amp;str&gt;</code> which is being unwrapped with an <code>&amp;String</code> as a default. This will compile, because <code>&amp;String =&gt; &amp;str</code> is a valid conversion, and the compiler will automatically insert the necessary conversion without needing it to be explicit. So no, <code>unwrap_or</code> is not implemented to accept <em>the exact same</em> object type; any object which can coerce to <code>T</code> (In this case, <code>T</code> is <code>&amp;str</code>) is valid.</p>\n\n<p>In other words, your <code>unwrap_or</code> example fails because <em>an <code>&amp;str</code> cannot become an <code>&amp;String</code></em>, rather than because the <code>unwrap_or</code> method is unusually picky. No, there is likely no way to <code>unwrap_or</code> without using a <code>String</code>. Your best bet is to simply use <code>to_string</code> on a string literal, as per:</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"Hello, world!\");\n    let o = Some(s);\n    let r = o.unwrap_or(\"Goodbye, world!\".to_string());\n\n    println!(\"{}\", r);\n}\n</code></pre>\n\n<p>because <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or\" rel=\"nofollow noreferrer\"><code>map_or</code></a>, while seeming promising, will not simply allow you to input <code>|s| &amp;s</code> for a map (reference is dropped at the end of the closure).</p>\n"}], "owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 353, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1556752446, "creation_date": 1521596710, "last_edit_date": 1556752446, "question_id": 49396869, "link": "https://stackoverflow.com/questions/49396869/difference-between-match-and-unwrap-or-when-determining-types", "title": "Difference between match and unwrap_or when determining types", "body": "<p>The following is a valid file I can compile with Rust 1.23.0:</p>\n\n<pre><code>fn main() {\n    let r = String::from(\"a\");\n    let a = Some(&amp;r);\n    let b = match a {\n        Some(name) =&gt; name,\n        None =&gt; \"\",\n    };\n    println!(\"{}\", b);\n}\n</code></pre>\n\n<p>Whilst the following code </p>\n\n<pre><code>fn main() {\n    let r = String::from(\"a\");\n    let a = Some(&amp;r);\n    let b = a.unwrap_or(\"\");\n    println!(\"{}\", b);\n}\n</code></pre>\n\n<p>Fails with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:25\n  |\n4 |     let b = a.unwrap_or(\"\");\n  |                         ^^ expected struct `std::string::String`, found str\n  |\n  = note: expected type `&amp;std::string::String`\n             found type `&amp;'static str`\n</code></pre>\n\n<p>As far as I can see, the compilers reasoning when determining types here is as follows:</p>\n\n<ol>\n<li><p>In the case with the <code>match</code> it determines <code>b</code> is a <code>&amp;str</code>, since <code>None =&gt; \"\"</code> is a <code>&amp;str</code> and <code>Some(name) =&gt; name</code> is a <code>&amp;String</code> so it can become a <code>&amp;str</code>.</p></li>\n<li><p>In the case where the argument to <code>unwrap_or</code> is a  <code>&amp;str</code>, instead of typing <code>b</code> as a <code>&amp;str</code>, it sees there's a difference between the type held in <code>a</code> (namely <code>&amp;String</code>) and the type of the parameter to <code>unwrap_or</code>.</p></li>\n</ol>\n\n<p>What is the difference between these two cases that makes type deduction work this way? </p>\n\n<p>Is <code>unwrap_or</code> implemented to accept the exact same type as the one wrapped by the option instead of just accepting a generic value it place inside a match ? </p>\n\n<p>Furthermore, is there any way to make the <code>unwrap_or</code> work in this case, without having to declare a <code>String</code> in the external scope  or change the type wrapped by the option ?</p>\n\n<p>One answer I got somewhere else for making them work is this:</p>\n\n<pre><code>let b = a.map(|s| s.as_ref()).unwrap_or(\"\")\n</code></pre>\n\n<p>Same effect as the <code>match</code>, somewhat shorter, more explicit than the <code>match</code> about what's happening to the types.</p>\n"}, {"tags": ["rust", "parser-combinators", "nom"], "answers": [{"tags": [], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "is_accepted": false, "score": 0, "last_activity_date": 1521624706, "creation_date": 1521624706, "answer_id": 49402576, "question_id": 49395281, "link": "https://stackoverflow.com/questions/49395281/what-is-the-right-way-to-return-a-simple-custom-error-with-nom-errorkind/49402576#49402576", "title": "What is the right way to return a simple custom error with nom errorkind?", "body": "<p>The solution to the <code>cannot infer type for E</code> error is to separate out the parsing steps so the compiler does not get so confused. </p>\n\n<p>Rewriting the parser-combinator as</p>\n\n<pre><code>named!(\n    entity_name&lt;Vec&lt;u8&gt;&gt;,\n    many1!(alt!(alphanumeric =&gt; { |x : &amp;[u8]| x[0] } | char!('_') =&gt; {|_| b'_'}))\n);\nnamed!(\n    entity&lt;&amp;[u8],&amp;str,i32&gt;,\n    add_return_error!(\n        ErrorKind::Custom(2),\n        map!(recognize!(entity_name),|v| str::from_utf8(v).unwrap())\n    )\n);\n</code></pre>\n\n<p>And the corresponding test</p>\n\n<pre><code>#[test]\nfn parse_pdl_error_test() {\n    assert_eq!(entity(b\"_error_stack\").to_result(), Ok(\"_error_stack\"));\n    assert_eq!(entity(b\"[];']\").to_result(), Err(ErrorKind::Custom(2)));\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1231, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1521624706, "creation_date": 1521585559, "question_id": 49395281, "link": "https://stackoverflow.com/questions/49395281/what-is-the-right-way-to-return-a-simple-custom-error-with-nom-errorkind", "title": "What is the right way to return a simple custom error with nom errorkind?", "body": "<p>A simple error handler added to nom</p>\n\n<p>The first one compiles with no errors, the second one errors out</p>\n\n<pre><code>use nom::*;\nuse std::str;\n// This works\nnamed!(\n    field&lt;&amp;str&gt;,\n    map!(\n        complete!(add_return_error!(\n            ErrorKind::Custom(1),\n            preceded!(\n                tag!(\".\"),\n                recognize!(many1!(\n                    alt!(alphanumeric =&gt; { |_| true } | char!('_') =&gt; {|_| true})\n                ))\n            )\n        )),\n        |v| str::from_utf8(v).unwrap()\n    )\n);\n\n// This doesn't compile\nnamed!(\n    entity&lt;&amp;str&gt;,\n    add_return_error!(\n        ErrorKind::Custom(2),\n        map!(\n            recognize!(many1!(\n                alt!(alphanumeric =&gt; { |_| true } | char!('_') =&gt; {|_| true})\n            )),\n            |v| str::from_utf8(v).unwrap()\n        )\n    )\n);\n</code></pre>\n\n<p>Error is</p>\n\n<pre><code>cargo build\n   Compiling pdl_parser v0.1.0 (file:///H:/parser)\nerror[E0282]: type annotations needed\n  --&gt; src\\pdl_parser.rs:72:1\n   |\n72 | / named!(\n73 | |     entity&lt;&amp;str&gt;,\n74 | |     add_return_error!(\n75 | |         ErrorKind::Custom(2),\n...  |\n82 | |     )\n83 | | );\n   | |__^ cannot infer type for `E`\n   |\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>Why does the first one work and second one not? And what can I do to fix it? I tried changing the signature of the second one to <code>entity&lt;&amp;[u8],&amp;str,ErrorKind&gt;</code> and then to <code>i32</code> and <code>u32</code> but no success.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521638660, "post_id": 49395257, "comment_id": 85816143, "body": "<a href=\"https://stackoverflow.com/q/46472082/155423\">Why does a mutable borrow of a closure through DerefMut not work?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521638657, "post_id": 49395435, "comment_id": 85816141, "body": "<a href=\"https://stackoverflow.com/q/46472082/155423\">Why does a mutable borrow of a closure through DerefMut not work?</a>"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 3, "last_activity_date": 1521586376, "creation_date": 1521586376, "answer_id": 49395435, "question_id": 49395257, "link": "https://stackoverflow.com/questions/49395257/vector-holding-mutable-functions/49395435#49395435", "title": "Vector holding mutable functions", "body": "<p>For the first problem, I don't really know why no mutable dereference happens here (in my opinion, it should), but there is a simple workaround: just do the dereference and then reference manually:</p>\n\n<pre><code>(&amp;mut *v[0])();\n</code></pre>\n\n<p>Your second problem is more complex, though. There is no simple solution, because what you're trying to do violates Rust aliasing guarantees, and since you did not describe the purpose of it, I can't suggest alternatives properly. In general, however, you can overcome this error by switching to runtime borrow-checking with <code>Cell</code>/<code>RefCell</code> or <code>Mutex</code> (the latter is when you need concurrent access). With <code>Cell</code> (works nice for primitives):</p>\n\n<pre><code>use std::cell::Cell;\n\nfn main() {\n    let c = Cell::new(0);\n    {\n        let f = || { c.set(c.get() + 1); };\n        let mut v: Vec&lt;&amp;Fn()&gt; = vec![];\n        v.push(&amp;f);\n        v.push(&amp;f);\n\n        v[0]();\n        v[1]();\n    }\n    println!(\"c {}\", c.get());\n}\n</code></pre>\n\n<p>With <code>RefCell</code> (works nice for more complex types):</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    let c = RefCell::new(0);\n    {\n        let f = || { *c.borrow_mut() += 1; };\n        let mut v: Vec&lt;&amp;Fn()&gt; = vec![];\n        v.push(&amp;f);\n        v.push(&amp;f);\n\n        v[0]();\n        v[1]();\n    }\n    println!(\"c {}\", *c.borrow());\n}\n</code></pre>\n\n<p>As you can see, now you have <code>&amp;Fn()</code> instead of <code>&amp;mut FnMut()</code>, which can be aliased freely, and whose captured environment may also contain aliased references (immutable, of course).</p>\n"}], "owner": {"reputation": 27429, "user_id": 497208, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/f53ec83b7a4a74ef31eabd1d86b716e0?s=128&d=identicon&r=PG", "display_name": "Jakub M.", "link": "https://stackoverflow.com/users/497208/jakub-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 49395435, "answer_count": 1, "score": 1, "last_activity_date": 1521586376, "creation_date": 1521585436, "question_id": 49395257, "link": "https://stackoverflow.com/questions/49395257/vector-holding-mutable-functions", "title": "Vector holding mutable functions", "body": "<p>I would like to have a vector with functions. Then I would like to iterate on this vector and execute functions one by one. The functions would mutate an external state. Additionally, I would like to be able to place the same function twice in the vector.</p>\n\n<p>The problems I have are:</p>\n\n<ul>\n<li>I cannot dereference and execute the function from the vector,</li>\n<li>Adding the same function to the vector twice fails with, understandable, error that I cannot have two mutable references.</li>\n</ul>\n\n<p>The closest I got is:</p>\n\n<pre><code>fn main() {\n    let mut c = 0;\n    {\n        let mut f = ||{c += 1};\n        let mut v: Vec&lt;&amp;mut FnMut()&gt; = vec![];\n        v.push(&amp;mut f);\n\n        // How to execute the stored function? The following complains about\n        // an immutable reference:\n        //    assignment into an immutable reference\n        // (v[0])();\n\n        // How to store the same function twice? The following will fail with:\n        //     cannot borrow `f` as mutable more than once at a time\n        // v.push(&amp;mut f);\n    }\n    println!(\"c {}\", c);\n}\n</code></pre>\n"}, {"tags": ["string", "pointers", "rust"], "answers": [{"comments": [{"owner": {"reputation": 8757, "user_id": 9634, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/6181812b2747dc091b4b7ec97fb67c2f?s=128&d=identicon&r=PG", "display_name": "Brent.Longborough", "link": "https://stackoverflow.com/users/9634/brent-longborough"}, "edited": false, "score": 0, "creation_date": 1521633454, "post_id": 49394501, "comment_id": 85812322, "body": "Than you. Special additional thanks for the pointer to string padding, which I&#39;ll investigate shortly. A language like Rust or Python, with it&#39;s lovely, vast, almost-built-in libraries, is a slightly two-edged sword. Still got a lot to learn..."}, {"owner": {"reputation": 27770, "user_id": 476074, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/3ad32697402bb21379768728e8640a22?s=128&d=identicon&r=PG", "display_name": "AndreKR", "link": "https://stackoverflow.com/users/476074/andrekr"}, "edited": false, "score": 1, "creation_date": 1583846118, "post_id": 49394501, "comment_id": 107244425, "body": "&quot;What it means is harder to explain succinctly.&quot; Then goes on to explain it succinctly."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 27770, "user_id": 476074, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/3ad32697402bb21379768728e8640a22?s=128&d=identicon&r=PG", "display_name": "AndreKR", "link": "https://stackoverflow.com/users/476074/andrekr"}, "edited": false, "score": 0, "creation_date": 1583846750, "post_id": 49394501, "comment_id": 107244729, "body": "@AndreKR Thanks (I think)! However, that part of the answer is pretty weak, as it doesn&#39;t really explain <i>how</i> something can be &quot;unsized&quot; or why such a concept is useful, not to mention glossing over what the stack is."}, {"owner": {"reputation": 27770, "user_id": 476074, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/3ad32697402bb21379768728e8640a22?s=128&d=identicon&r=PG", "display_name": "AndreKR", "link": "https://stackoverflow.com/users/476074/andrekr"}, "edited": false, "score": 0, "creation_date": 1583847371, "post_id": 49394501, "comment_id": 107245076, "body": "I think most languages store their local variables on a stack, so it&#39;s a familiar concept. And why it&#39;s unsized is in the error message - it doesn&#39;t implement <code>Sized</code>. I just didn&#39;t make the connection until I read your post."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 31, "last_activity_date": 1540763025, "last_edit_date": 1540763025, "creation_date": 1521581796, "answer_id": 49394501, "question_id": 49393462, "link": "https://stackoverflow.com/questions/49393462/what-does-str-does-not-have-a-constant-size-known-at-compile-time-mean-and/49394501#49394501", "title": "What does \u201c`str` does not have a constant size known at compile-time\u201d mean, and what&#39;s the simplest way to fix it?", "body": "<p><strong>TL;DR</strong> Don't use <code>str</code>, use <code>&amp;str</code>. The reference is important.</p>\n\n<hr>\n\n<p>The issue can be simplified to this:</p>\n\n<pre><code>fn main() {\n    let demo = \"demo\"[..];\n}\n</code></pre>\n\n<p>You are attempting to slice a <code>&amp;str</code> (but the same would happen for a <code>String</code>, <code>&amp;[T]</code>, <code>Vec&lt;T&gt;</code>, etc.), but have not taken a reference to the result. This means that the type of <code>demo</code> would be <code>str</code>. To fix it, add an <code>&amp;</code>:</p>\n\n<pre><code>let demo = &amp;\"demo\"[..];\n</code></pre>\n\n<p>In your broader example, you are also running into the fact that you are creating an allocated <code>String</code> inside of the <code>match</code> statement (via <code>join</code>) and then attempting to return a reference to it. This is disallowed because the <code>String</code> will be dropped at the end of the <code>match</code>, invalidating any references. In another language, this could lead to memory unsafety.</p>\n\n<p>One potential fix is to store the created <code>String</code> for the duration of the function, preventing its deallocation until after the new string is created:</p>\n\n<pre><code>fn choose(s: &amp;str, pad: u8) -&gt; String {\n    let tmp;\n\n    match pad {\n        0 =&gt; {\n            tmp = [\"000000000000000\", s].join(\"\");\n            &amp;tmp[s.len()..]\n        }\n        1 =&gt; {\n            tmp = [s, \"000000000000000\"].join(\"\");\n            &amp;tmp[..16]\n        }\n        _ =&gt; {\n            tmp = [\"00\", s, \"0000000000000\"].join(\"\");\n            &amp;tmp[..16]\n        }\n    }.to_string()\n}\n</code></pre>\n\n<p>Editorially, there's probably more efficient ways of writing this function. The <a href=\"https://doc.rust-lang.org/std/fmt/index.html\" rel=\"noreferrer\">formatting machinery</a> has options for padding strings. You might even be able to just truncate the string returned from <code>join</code> without creating a new one.</p>\n\n<hr>\n\n<p>What it means is harder to explain succinctly. Rust has a number of types that are <em>unsized</em>. The most prevalent ones are <code>str</code> and <code>[T]</code>. Contrast these types to how you normally see them used: <code>&amp;str</code> or <code>&amp;[T]</code>. You might even see them as <code>Box&lt;str&gt;</code> or <code>Arc&lt;[T]&gt;</code>. The commonality is that they are always used behind a reference of some kind.</p>\n\n<p>Because these types don't have a size, they cannot be stored in a variable on the stack \u2014\u00a0the compiler wouldn't know how much stack space to reserve for them! That's the essence of the error message.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27879161/155423\">What is the return type of the indexing operation?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a></li>\n<li><a href=\"https://chrismorgan.info/blog/rust-fizzbuzz.html\" rel=\"noreferrer\">Why your first FizzBuzz implementation may not work</a></li>\n</ul>\n"}], "owner": {"reputation": 8757, "user_id": 9634, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/6181812b2747dc091b4b7ec97fb67c2f?s=128&d=identicon&r=PG", "display_name": "Brent.Longborough", "link": "https://stackoverflow.com/users/9634/brent-longborough"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13428, "favorite_count": 3, "accepted_answer_id": 49394501, "answer_count": 1, "score": 21, "last_activity_date": 1540763025, "creation_date": 1521577291, "last_edit_date": 1521581881, "question_id": 49393462, "link": "https://stackoverflow.com/questions/49393462/what-does-str-does-not-have-a-constant-size-known-at-compile-time-mean-and", "title": "What does \u201c`str` does not have a constant size known at compile-time\u201d mean, and what&#39;s the simplest way to fix it?", "body": "<p>I'm trying to manipulate a string derived from a function parameter and then return the result of that manipulation:</p>\n\n<pre><code>fn main() {\n    let a: [u8; 3] = [0, 1, 2]; \n    for i in a.iter() {\n        println!(\"{}\", choose(\"abc\", *i));\n    }\n}\n\nfn choose(s: &amp;str, pad: u8) -&gt; String {\n    let c = match pad {\n        0 =&gt; [\"000000000000000\", s].join(\"\")[s.len()..],\n        1 =&gt; [s, \"000000000000000\"].join(\"\")[..16],\n        _ =&gt; [\"00\", s, \"0000000000000\"].join(\"\")[..16],\n    };\n    c.to_string()\n}\n</code></pre>\n\n<p>On building, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n --&gt; src\\main.rs:9:9\n  |\n9 |     let c = match pad {\n  |         ^ `str` does not have a constant size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `str`\n  = note: all local variables must have a statically known size\n</code></pre>\n\n<p>What's wrong here, and what's the simplest way to fix it?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1521577308, "post_id": 49393406, "comment_id": 85788523, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28512394/how-to-lookup-from-and-insert-into-a-hashmap-efficiently\">How to lookup from and insert into a HashMap efficiently?</a>"}, {"owner": {"reputation": 9817, "user_id": 1467997, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/6c72d7139086df4435a1067a66b02fff?s=128&d=identicon&r=PG", "display_name": "limp_chimp", "link": "https://stackoverflow.com/users/1467997/limp-chimp"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1521578083, "post_id": 49393406, "comment_id": 85788953, "body": "It&#39;s related, but the solution in that thread unfortunately did not solve my problem. I changed the body of <code>f_cached</code> to <code>self.memo.entry(x).or_insert_with(|| { self.f(x) })</code>, but the borrow checker still complains about the immutable borrow of <code>self</code> in the closure."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521579559, "post_id": 49393406, "comment_id": 85789696, "body": "How about <a href=\"https://stackoverflow.com/q/24287434/155423\">HashMap borrow issue when trying to implement find or insert</a>. You&#39;ll need a separate variable to show it&#39;s a disjoint borrow."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1521581048, "post_id": 49393406, "comment_id": 85790388, "body": "Not a duplicate per-se, but related to <a href=\"https://stackoverflow.com/questions/27335252/how-can-i-call-a-mutating-method-while-holding-a-reference-to-self/27335844#27335844\" title=\"how can i call a mutating method while holding a reference to self\">stackoverflow.com/questions/27335252/&hellip;</a>. There&#39;s no guarantee that <code>self.f</code> won&#39;t try to access <code>self.memo</code> which would be a bug."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521587172, "post_id": 49395531, "comment_id": 85792934, "body": "<i>compilable as it is</i> \u2014 true, but less efficient than the linked solutions, which only compute the hashcode once."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 0, "last_activity_date": 1521587133, "last_edit_date": 1521587133, "creation_date": 1521586946, "answer_id": 49395531, "question_id": 49393406, "link": "https://stackoverflow.com/questions/49393406/borrow-checker-complains-when-adding-memoization-to-a-function/49395531#49395531", "title": "Borrow checker complains when adding memoization to a function", "body": "<p>While other references are correct, note that in the nightly version of the compiler a feature called non-lexical lifetimes is available, which, when enabled, makes your code compilable as it is:</p>\n\n<pre><code>#![feature(nll)]\n\nuse std::collections::{HashMap};\n\nstruct Foo {\n    data: i64,\n    memo: HashMap&lt;i64, String&gt;\n}\n\nimpl Foo {\n    fn new(data: i64) -&gt; Foo {\n        let memo = HashMap::new();\n        Foo {data, memo}\n    }\n\n    fn f(&amp;self, x: i64) -&gt; String {\n        (self.data + x).to_string()\n    }\n\n    fn f_cached(&amp;mut self, x: i64) -&gt; String {\n        match self.memo.get(&amp;x) {\n            Some(result) =&gt; result.clone(),\n            None =&gt; {\n                let result = self.f(x);\n                self.memo.insert(x, result.clone());\n                result\n            }\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=434b579b6fd9d98919d721aef53979da&amp;version=nightly\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The tracking issue for the NLL feature is <a href=\"https://github.com/rust-lang/rust/issues/43234\" rel=\"nofollow noreferrer\">here</a>. It is currently in active development and probably won't be stable in the nearest future, but it is the direction where Rust is going, and if you're okay with using the nightly version of the compiler, you can just use <code>#![feature(nll)]</code>.</p>\n"}], "owner": {"reputation": 9817, "user_id": 1467997, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/6c72d7139086df4435a1067a66b02fff?s=128&d=identicon&r=PG", "display_name": "limp_chimp", "link": "https://stackoverflow.com/users/1467997/limp-chimp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1521587133, "creation_date": 1521577073, "question_id": 49393406, "link": "https://stackoverflow.com/questions/49393406/borrow-checker-complains-when-adding-memoization-to-a-function", "title": "Borrow checker complains when adding memoization to a function", "body": "<p>I want to add memoization to a function which can be kind of costly. I tried to make a minimum example below which demonstrates the error.</p>\n\n<pre><code>use std::collections::{HashMap};\n\nstruct Foo {\n    data: i64,\n    memo: HashMap&lt;i64, String&gt;\n}\n\nimpl Foo {\n    fn new(data: i64) -&gt; Foo {\n        let memo = HashMap::new();\n        Foo {data, memo}\n    }\n\n    fn f(&amp;self, x: i64) -&gt; String {\n        (self.data + x).to_string()\n    }\n\n    fn f_cached(&amp;mut self, x: i64) -&gt; String {\n        match self.memo.get(&amp;x) {\n            Some(result) =&gt; result.clone(),\n            None =&gt; {\n                let result = self.f(x);\n                self.memo.insert(x, result.clone());\n                result\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I remove the <code>f_cached</code> function below then everything compiles, but the cached version refuses to compile; the error I get is:</p>\n\n<pre><code>error[E0502]: cannot borrow `self.memo` as mutable because it is also borrowed as immutable\n   --&gt; src/main.rs:173:17\n    |\n169 |         match self.memo.get(&amp;x) {\n    |               --------- immutable borrow occurs here\n...\n173 |                 self.memo.insert(x, result.clone());\n    |                 ^^^^^^^^^ mutable borrow occurs here\n...\n176 |         }\n    |         - immutable borrow ends here\n</code></pre>\n\n<p>I've tried various reworkings of the basic logic, such as assigning <code>self.memo.get(&amp;x)</code> to a variable, using <code>if let</code>, etc etc, but everything produces the same or a different kind of error. Certainly it doesn't <em>look</em> like there's anything unsafe going on in the code.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521580449, "post_id": 49393139, "comment_id": 85790097, "body": "<a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521582181, "post_id": 49393139, "comment_id": 85790889, "body": "<i>would be if all nodes could simply contain slices into the original source string</i> \u2014 This is a very effective parsing technique (which I use in almost all of my parsers), but this is not what your code does."}], "answers": [{"tags": [], "owner": {"reputation": 21, "user_id": 9524961, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8Vj3Z.png?s=128&g=1", "display_name": "Jack Byrne", "link": "https://stackoverflow.com/users/9524961/jack-byrne"}, "is_accepted": false, "score": 1, "last_activity_date": 1521580312, "creation_date": 1521580312, "answer_id": 49394167, "question_id": 49393139, "link": "https://stackoverflow.com/questions/49393139/how-to-construct-a-tree-structure-where-the-nodes-contain-references-to-a-field/49394167#49394167", "title": "How to construct a tree structure where the nodes contain references to a field of the containing tree struct", "body": "<p>The simplest solution to your problem is to store a <code>std::ops::Range&lt;usize&gt;</code> instead of a <code>&amp;str</code>. Then when you need to look at the actual string, provide a method on your AST that takes a <code>Range&lt;usize&gt;</code> and returns a <code>&amp;str</code>.</p>\n\n<p>Another approach is to not own the original String and instead tie your AST to the lifetime of the string it was parsed from, e.g.,</p>\n\n<pre><code>#[derive(Debug)]\nstruct Tree&lt;'source&gt; {\n    source: &amp;'source str,\n    nodes : Vec&lt;Node&lt;'source&gt;&gt;,\n}\n</code></pre>\n\n<p>You can't do it the way you have it setup because Rust doesn't know how to check sibling borrows. If you google around for the sibling borrow problem, you'll get more context.</p>\n\n<hr>\n\n<p><em>Source: <a href=\"https://www.reddit.com/r/rust/comments/85vm4k/building_a_tree_structure_where_the_nodes_contain/dw0jdzp/\" rel=\"nofollow noreferrer\">reddit post</a></em></p>\n"}], "owner": {"reputation": 21, "user_id": 9524961, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8Vj3Z.png?s=128&g=1", "display_name": "Jack Byrne", "link": "https://stackoverflow.com/users/9524961/jack-byrne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1521580312, "creation_date": 1521576085, "last_edit_date": 1521579293, "question_id": 49393139, "link": "https://stackoverflow.com/questions/49393139/how-to-construct-a-tree-structure-where-the-nodes-contain-references-to-a-field", "title": "How to construct a tree structure where the nodes contain references to a field of the containing tree struct", "body": "<p>I'm playing around with ASTs in Rust, and one thing which I thought would be neat would be if all nodes could simply contain slices into the original source string, rather than copying memory around. However, I can't quite work out how I should structure the lifetimes in my code such that this goal is achieved. My naive attempt yielded this program:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Node&lt;'source&gt; {\n    slice   : &amp;'source str,\n    nid     : usize       ,\n    parent  : usize       ,\n    children: Vec&lt;usize&gt;  ,\n}\n\n#[derive(Debug)]\nstruct Tree&lt;'source&gt; {\n    source: String            ,\n    nodes : Vec&lt;Node&lt;'source&gt;&gt;,\n}\n\nimpl&lt;'source&gt; Tree&lt;'source&gt; {\n    fn new() -&gt; Self {\n        Tree {source: String::from(\"Hello World\"), nodes: vec![]}\n    }\n\n    fn slice(&amp;'source mut self, from: usize, to: usize) {\n        let new_nid = self.nodes.len();\n        self.nodes.push(\n            Node { slice: &amp;self.source[from..to], nid: new_nid, parent: 0, children: vec![] }\n        );\n    }\n}\n\n\nfn main() {\n    let mut tree = Tree::new();\n    tree.slice(2, 6);\n    println!(\"{:?}\", tree);\n}\n</code></pre>\n\n<p>Compiler Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `tree` as immutable because it is also borrowed as mutable\n  --&gt; ast.rs:32:22\n   |\n31 |     tree.slice(2, 6);\n   |     ---- mutable borrow occurs here\n32 |     println!(\"{:?}\", tree);\n   |                      ^^^^ immutable borrow occurs here\n33 | }\n   | - mutable borrow ends here\n</code></pre>\n\n<p>This does not compile because:</p>\n\n<ul>\n<li><p>The slices contained by the nodes need to outlive the <code>slice()</code> function call</p></li>\n<li><p>Therefore, the mutable reference to <code>self</code> taken by <code>slice()</code> needs to outlive the <code>slice()</code> function call.</p></li>\n<li><p>Therefore, <code>tree</code> remains mutably borrowed after the <code>tree.slice()</code> call in the <code>main</code> function.</p></li>\n<li><p>Therefore, the <code>println!</code> macro cannot compile.</p></li>\n</ul>\n\n<p>Ideally, the slices within the nodes need to be able to outlive the <code>slice()</code> call, but the mutable reference <code>self</code> should not. I understand that this is forbidden by the borrow checker, as <code>self</code> contains the <code>source</code> string, into which the slices reference. </p>\n\n<p>With this in mind, how can I restructure my code to allow nodes to contain slices into source, without having to borrow <code>self</code> for longer than the length of the <code>slice</code> function? Is this feasible at all, or need I resort to <code>unsafe</code>?</p>\n"}, {"tags": ["rust", "ffi", "abi", "non-nullable"], "comments": [{"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 0, "creation_date": 1521588993, "post_id": 49392712, "comment_id": 85793518, "body": "Rust issue for this: <a href=\"https://github.com/rust-lang/rust/issues/49220\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/49220</a>"}], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1521584076, "post_id": 49392850, "comment_id": 85791652, "body": "In this case, <code>repr(C)</code> would be enough, since <code>NonNull</code> is not a newtype, however, since it&#39;s neither marked as <code>repr(C)</code> nor as <code>repr(transparent)</code> it isn&#39;t safe."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1521585095, "post_id": 49392850, "comment_id": 85792121, "body": "@Tim would you share why you say its not a newtype? it&#39;s a struct of a single field, which is the key component of a newtype AFAIK."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1521589520, "post_id": 49392850, "comment_id": 85793677, "body": "I assumed newtypes are structs of the form <code>struct Foo(Bar);</code> but correct me, if I got this wrong. At least in all literature I read so far, the term &quot;Newtype&quot; was in this context."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1544629760, "last_edit_date": 1544629760, "creation_date": 1521574883, "answer_id": 49392850, "question_id": 49392712, "link": "https://stackoverflow.com/questions/49392712/is-it-valid-to-use-ptrnonnull-in-ffi/49392850#49392850", "title": "Is it valid to use ptr::NonNull in FFI?", "body": "<p>It depends on what version of Rust you are compiling with.</p>\n\n<h3>Rust 1.29 and up</h3>\n\n<p><code>NonNull</code> <a href=\"https://github.com/rust-lang/rust/blob/1.29.0/src/libcore/ptr.rs#L2846-L2850\" rel=\"nofollow noreferrer\">now has <code>repr(transparent)</code></a>, so it is safe to use in FFI so long as the wrapped type is safe.</p>\n\n<pre><code>#[stable(feature = \"nonnull\", since = \"1.25.0\")]\n#[repr(transparent)]\npub struct NonNull&lt;T: ?Sized&gt; {\n    pointer: NonZero&lt;*const T&gt;,\n}\n</code></pre>\n\n<h3>Before Rust 1.29</h3>\n\n<p>I would <em>not</em> use it for such. The main reason is due to <a href=\"https://github.com/rust-lang/rust/blob/1.28.0/src/libcore/ptr.rs#L2842-L2845\" rel=\"nofollow noreferrer\">its definition</a>:</p>\n\n<pre><code>#[stable(feature = \"nonnull\", since = \"1.25.0\")]\npub struct NonNull&lt;T: ?Sized&gt; {\n    pointer: NonZero&lt;*const T&gt;,\n}\n</code></pre>\n\n<p>More specifically, I'm concerned about what's <em>not</em> in the definition: <a href=\"https://doc.rust-lang.org/stable/reference/type-layout.html#the-transparent-representation\" rel=\"nofollow noreferrer\"><code>#[repr(transparent)]</code></a> (emphasis mine):</p>\n\n<blockquote>\n  <p>Structs with this representation have the <strong>same layout and ABI</strong> as the single non-zero sized field.</p>\n</blockquote>\n\n<p>I've experienced miscompilation due to <a href=\"https://stackoverflow.com/a/49020435/155423\">putting newtypes in a FFI function</a> that were solved by <code>repr(transparent)</code>, so this isn't just an academic exercise.</p>\n"}], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 704, "favorite_count": 0, "accepted_answer_id": 49392850, "answer_count": 1, "score": 4, "last_activity_date": 1544629760, "creation_date": 1521574333, "last_edit_date": 1521574658, "question_id": 49392712, "link": "https://stackoverflow.com/questions/49392712/is-it-valid-to-use-ptrnonnull-in-ffi", "title": "Is it valid to use ptr::NonNull in FFI?", "body": "<p>Rust has the <a href=\"https://doc.rust-lang.org/beta/std/ptr/struct.NonNull.html\" rel=\"nofollow noreferrer\"><code>ptr::NonNull</code></a> type that represents a non-<code>NULL</code> pointer. Is it safe to use this type in FFI? </p>\n\n<p>Is it guaranteed to have same binary representation (ignoring non-FFI context such as <code>Option</code> optimizations), alignment, register usage as <code>*mut T</code>?</p>\n\n<p>For example, could I implement this interface:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>void call_me_from_c(char *without_nulls) __attribute__((nonnull));\n</code></pre>\n\n<p>with</p>\n\n<pre><code>extern \"C\" fn call_me_from_c(without_nulls: ptr::NonNull&lt;c_char&gt;)\n</code></pre>\n\n<p>I don't expect this to <em>do</em> anything (apart from causing UB when misused with <code>NULL</code> ;), but I would like the interface to document that the function requires non-<code>NULL</code> arguments.</p>\n"}, {"tags": ["for-loop", "scope", "rust", "enumerate"], "comments": [{"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 1, "creation_date": 1521569735, "post_id": 49390902, "comment_id": 85784420, "body": "Karl, it is okay to ask a separate question, but it&#39;s confusing to rewrite one question into a different question."}, {"owner": {"reputation": 1869, "user_id": 3805500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/L2aW1.jpg?s=128&g=1", "display_name": "Karl Anka", "link": "https://stackoverflow.com/users/3805500/karl-anka"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1521570167, "post_id": 49390902, "comment_id": 85784671, "body": "@DietrichEpp I understand this - but the question remains the same &quot;Using the index from enumerate outside the loop block&quot;. And given the sole answer I got I understood my example made it look like I was asking for a way to find the index of <code>d</code> in the alphabet, whereas this was just an example."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1521570605, "post_id": 49390902, "comment_id": 85784923, "body": "Okay, from context I think you&#39;re right about that. I&#39;ve reverted the rollback."}], "answers": [{"comments": [{"owner": {"reputation": 1869, "user_id": 3805500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/L2aW1.jpg?s=128&g=1", "display_name": "Karl Anka", "link": "https://stackoverflow.com/users/3805500/karl-anka"}, "edited": false, "score": 0, "creation_date": 1521569496, "post_id": 49391039, "comment_id": 85784297, "body": "Thanks - but I realise I should have made it more clear that I need to loop through the characters. I have updated the code example in the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1869, "user_id": 3805500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/L2aW1.jpg?s=128&g=1", "display_name": "Karl Anka", "link": "https://stackoverflow.com/users/3805500/karl-anka"}, "edited": false, "score": 0, "creation_date": 1521569601, "post_id": 49391039, "comment_id": 85784352, "body": "@KarlAnka editing the question to invalidate existing answers is <i>highly</i> frowned upon. Your edits have made it so that my answer is completely nonsensical and it would be reasonable for people to downvote it for being unhelpful."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1521570710, "post_id": 49391039, "comment_id": 85784991, "body": "Shepmaster... I don&#39;t think this answer actually addresses the question as it was <i>originally</i> written, before the edit. Karl is asking how to access a loop variable outside a loop, not asking you to give a better solution to the piece of code that happens to be used as an example."}, {"owner": {"reputation": 1869, "user_id": 3805500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/L2aW1.jpg?s=128&g=1", "display_name": "Karl Anka", "link": "https://stackoverflow.com/users/3805500/karl-anka"}, "edited": false, "score": 0, "creation_date": 1521570726, "post_id": 49391039, "comment_id": 85785002, "body": "I&#39;m sorry for this. However, I don&#39;t think this answers my question why I updated the example to one where a loop is needed. Finding index of <code>d</code> in that broken alphabet was just a simple example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 2, "creation_date": 1521570994, "post_id": 49391039, "comment_id": 85785174, "body": "@DietrichEpp The very first sentence of my answer is &quot;You cannot access a loop variable outside of the loop&#39;s scope.&quot;. That 100% answers the question asked. Anything beyond, by necessity, must be &quot;a better solution&quot;, since the posited solution is impossible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1521571565, "post_id": 49391039, "comment_id": 85785482, "body": "@DietrichEpp do you believe that the updated version of the answer is  significantly better now that it has applied the same logic a second time?"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1521577034, "post_id": 49391039, "comment_id": 85788361, "body": "While it&#39;s helpful to guide people to produce more idiomatic Rust code, there is a very obvious, simple, and correct alternative which only requires changing three lines of code. The alternative is so obvious, it&#39;s downright suspicious that it&#39;s absent from this answer. Of course the posited solution is impossible... that&#39;s why the OP has asked a question here. We can either interpret the question as, &quot;How can I use the value from a for loop outside the block?&quot; or, &quot;Please rewrite my code using idiomatic Rust.&quot;"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1521577233, "post_id": 49391039, "comment_id": 85788473, "body": "In the end, I feel that this answer serves more to showcase your skills at writing idiomatic Rust code, and does not give OP any of the tools they are lacking to solve similar problems in the future."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1521571388, "last_edit_date": 1521571388, "creation_date": 1521568228, "answer_id": 49391039, "question_id": 49390902, "link": "https://stackoverflow.com/questions/49390902/using-the-index-from-enumerate-outside-the-loop-block/49391039#49391039", "title": "Using the index from enumerate outside the loop block", "body": "<p>You <strong>cannot</strong> access a loop variable outside of the loop's scope. This isn't a \"problem\" unique to Rust; most programming languages in use today have similar scoping rules that would result in the same problem.</p>\n\n<hr>\n\n<p>To solve your <a href=\"https://stackoverflow.com/revisions/49390902/2\">first version of the problem</a>, you should \"return\" the index, but you don't need a function for that. Instead, you can use iterator adapters:</p>\n\n<pre><code>fn main() {\n    let maze = \"***#***\";\n\n    let i = maze\n        .chars()\n        .enumerate()\n        .find(|&amp;(_, c)| c == '#')\n        .map(|(i, _)| i);\n\n    println!(\"# is at position: {:?}\", i) // Some(3)\n}\n</code></pre>\n\n<p>Note that this returns an <code>Option</code> to handle the case where the letter was not found.</p>\n\n<hr>\n\n<p>To solve your <a href=\"https://stackoverflow.com/revisions/49390902/5\">second version of the problem</a>, you should \"return\" the index, but you don't need a function for that. Instead, you can use iterator adapters:</p>\n\n<pre><code>fn main() {\n    let instruction = \")))(((()))))\";\n    let mut floor = 0;\n\n    let i = instruction\n        .chars()\n        .enumerate()\n        .find(|&amp;(_, c)| {\n            if c == ')' {\n                floor += 1;\n            } else {\n                floor -= 1;\n            }\n\n            floor &lt; 0\n        })\n        .map(|(i, _)| i);\n\n    println!(\"floor: {:?}\", i) // Some(6)\n}\n</code></pre>\n\n<p>Note that this returns an <code>Option</code> to handle the case where the floor was not found.</p>\n\n<hr>\n\n<p>Of course, you can choose to use a function and return early. Do whatever is understandable for you.</p>\n"}, {"tags": [], "owner": {"reputation": 6847, "user_id": 1081569, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8682dc66d5900d9645a8dff1316495e1?s=128&d=identicon&r=PG", "display_name": "Paulo Almeida", "link": "https://stackoverflow.com/users/1081569/paulo-almeida"}, "is_accepted": true, "score": 2, "last_activity_date": 1521572722, "last_edit_date": 1521572722, "creation_date": 1521571760, "answer_id": 49392050, "question_id": 49390902, "link": "https://stackoverflow.com/questions/49390902/using-the-index-from-enumerate-outside-the-loop-block/49392050#49392050", "title": "Using the index from enumerate outside the loop block", "body": "<p>You don't need to put the code in a function to get <code>i</code>, you could just assign it to a new variable:</p>\n\n<pre><code>fn main() {\n    let instruction = \")))(((()))))\";\n    let mut floor = 0;\n    let mut breaking_index = None;\n\n    for (i, c) in instruction.chars().enumerate() {\n        if c.to_string() == \")\" {\n            floor += 1;\n        } else {\n            floor -= 1;\n        }\n        if floor &lt; 0 {\n            breaking_index = Some(i);\n            break;\n        }\n    }\n\n    // will not fail\n    println!(\"floor: {:?}\", breaking_index)\n}\n</code></pre>\n"}], "owner": {"reputation": 1869, "user_id": 3805500, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/L2aW1.jpg?s=128&g=1", "display_name": "Karl Anka", "link": "https://stackoverflow.com/users/3805500/karl-anka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "accepted_answer_id": 49392050, "answer_count": 2, "score": 0, "last_activity_date": 1521572722, "creation_date": 1521567750, "last_edit_date": 1521571748, "question_id": 49390902, "link": "https://stackoverflow.com/questions/49390902/using-the-index-from-enumerate-outside-the-loop-block", "title": "Using the index from enumerate outside the loop block", "body": "<p>Consider this example of solving <a href=\"https://adventofcode.com/2015/day/1\" rel=\"nofollow noreferrer\">Advent of Code 2015 1.2</a>. </p>\n\n<pre><code>fn main() {\n    // advent of code 1.2 2015\n    // you are at floor 0\n    // if instruction is ) go one floor up, else go one floor down\n    // what index has the character that makes you go below floor 0\n\n    let instruction = \")))(((()))))\";\n    let mut floor = 0;\n\n    for (i, c) in input.chars().enumerate() {\n        if c.to_string() == \")\" {\n            floor += 1;\n        } else {\n            floor -= 1;\n        }\n        if floor &lt; 0 {\n            break;\n        }\n    }\n\n    // will fail\n    println!(\"floor: {}\", i)\n}\n</code></pre>\n\n<p>How can <code>i</code> be accessed outside the loop block?</p>\n\n<p>Having read <a href=\"https://stackoverflow.com/questions/33422543/understanding-scope-and-shadowing-matches\">Understanding scope and shadowing matches</a> and <a href=\"https://doc.rust-lang.org/book/first-edition/variable-bindings.html\" rel=\"nofollow noreferrer\">this chapter of the book</a>, I understand <strong>why</strong> my code fails, but I can't figure out how to deal with it and use <code>i</code> outside the block.</p>\n\n<p>Is my problem that I have not understood the purpose of scopes in Rust? Should I put the loop inside of a function and return <code>i</code> if I want to use it outside the loop's scope?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 19159, "user_id": 3600709, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/731c8c4c0029d3414563333de16b8977?s=128&d=identicon&r=PG&f=1", "display_name": "ctwheels", "link": "https://stackoverflow.com/users/3600709/ctwheels"}, "edited": false, "score": 0, "creation_date": 1521567318, "post_id": 49390704, "comment_id": 85782872, "body": "So, just to be clear, you&#39;re trying to match <code>{this}</code>, <code>{these}</code>, and <code>{also}</code>, but <b>not</b> <code>{{escaped}}</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 19159, "user_id": 3600709, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/731c8c4c0029d3414563333de16b8977?s=128&d=identicon&r=PG&f=1", "display_name": "ctwheels", "link": "https://stackoverflow.com/users/3600709/ctwheels"}, "edited": false, "score": 0, "creation_date": 1521567497, "post_id": 49390704, "comment_id": 85783000, "body": "@ctwheels Yes, I will edit my question"}, {"owner": {"reputation": 658058, "user_id": 548225, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dab08478b226280d4a30894c9a7ed719?s=128&d=identicon&r=PG", "display_name": "anubhava", "link": "https://stackoverflow.com/users/548225/anubhava"}, "edited": false, "score": 0, "creation_date": 1521567504, "post_id": 49390704, "comment_id": 85783004, "body": "<a href=\"https://regex101.com/r/tIUycK/1\" rel=\"nofollow noreferrer\">You may use alternation: <code>{{.*?}}|\\{([^{}]*)\\}</code> and use captured group #1 as you&#39;re already using.</a>"}, {"owner": {"reputation": 43580, "user_id": 1020526, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Scjj8.jpg?s=128&g=1", "display_name": "revo", "link": "https://stackoverflow.com/users/1020526/revo"}, "edited": false, "score": 0, "creation_date": 1521567534, "post_id": 49390704, "comment_id": 85783029, "body": "Remove last <code>}</code> in your regex <code>(?:[^{]|^)\\\\{([^{}]+)</code>"}, {"owner": {"reputation": 19159, "user_id": 3600709, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/731c8c4c0029d3414563333de16b8977?s=128&d=identicon&r=PG&f=1", "display_name": "ctwheels", "link": "https://stackoverflow.com/users/3600709/ctwheels"}, "edited": false, "score": 2, "creation_date": 1521567549, "post_id": 49390704, "comment_id": 85783038, "body": "You can use the <a href=\"https://docs.rs/fancy-regex/0.1.0/fancy_regex/\" rel=\"nofollow noreferrer\"><code>fancy_regex</code></a> crate for lookarounds"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1521567977, "post_id": 49390819, "comment_id": 85783334, "body": "This is perfect. I didn&#39;t know one could do this &quot;discard technique&quot;, thanks."}], "tags": [], "owner": {"reputation": 27179, "user_id": 710099, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/0413774874b9baeccef7a5ba0344fec7?s=128&d=identicon&r=PG", "display_name": "Federico Piazza", "link": "https://stackoverflow.com/users/710099/federico-piazza"}, "is_accepted": true, "score": 4, "last_activity_date": 1521638187, "last_edit_date": 1521638187, "creation_date": 1521567515, "answer_id": 49390819, "question_id": 49390704, "link": "https://stackoverflow.com/questions/49390704/how-to-match-a-word-between-single-but-not-double-brackets-without-look-around/49390819#49390819", "title": "How to match a word between single but not double brackets without look-around?", "body": "<p>You can use the discard technique and use a pattern like this:</p>\n\n<pre><code>{{|}}|{([^}]+)}\n</code></pre>\n\n<p><strong><a href=\"https://regex101.com/r/elzoca/2\" rel=\"nofollow noreferrer\">Working demo</a></strong></p>\n\n<p><a href=\"https://i.stack.imgur.com/7y1zQ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/7y1zQ.png\" alt=\"enter image description here\"></a></p>\n\n<p>Or simpler to read if you need to match alphanumeric and underscore</p>\n\n<pre><code>{{|}}|{(\\w+)}     \n</code></pre>\n\n<hr>\n\n<p>In your code, you must now check if there is matching group 1:</p>\n\n<pre><code>extern crate regex;\n\nuse regex::Regex;\n\nfn main() {\n    let exp = Regex::new(r\"\\{\\{|\\}\\}|\\{([^}]+)\\}\").unwrap();\n    let text = \"{this} is a match, {{escaped}} is not, but {these}{also} are.\";\n\n    for capture in exp.captures_iter(text) {\n        if let Some(matched) = capture.get(1) {\n            println!(\"{}\", matched.as_str());\n        }\n    }\n    // printed: \"this\", \"these\", \"also\"\n}\n</code></pre>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 49390819, "answer_count": 1, "score": 2, "last_activity_date": 1521638187, "creation_date": 1521567187, "last_edit_date": 1521568699, "question_id": 49390704, "link": "https://stackoverflow.com/questions/49390704/how-to-match-a-word-between-single-but-not-double-brackets-without-look-around", "title": "How to match a word between single but not double brackets without look-around?", "body": "<p>The Rust <a href=\"https://doc.rust-lang.org/regex/regex/struct.Regex.html\" rel=\"nofollow noreferrer\"><code>Regex</code></a> crate has no look-around so I cannot use negative look-behind for <code>{</code> and a negative look-ahead for <code>}</code>.</p>\n\n<p>I tried:</p>\n\n<pre><code>extern crate regex;\n\nuse regex::Regex;\n\nfn main() {\n    let exp = Regex::new(\"(?:[^{]|^)\\\\{([^{}]*)\\\\}\").unwrap();\n    let text = \"{this} is a match, {{escaped}} is not, but {these}{also} are.\";\n\n    for capture in exp.captures_iter(text) {\n        println!(\"{}\", &amp;capture[1]);\n    }\n    // expected result: \"this\", \"these\", \"also\"\n}\n</code></pre>\n\n<p>This does not catch <code>\"also\"</code> because the matches do not overlap. Is there a way to do so without look-around?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 14292, "user_id": 2820, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/631713865b68894b6bf525e16d817f58?s=128&d=identicon&r=PG", "display_name": "Onorio Catenacci", "link": "https://stackoverflow.com/users/2820/onorio-catenacci"}, "edited": false, "score": 0, "creation_date": 1521560069, "post_id": 49388285, "comment_id": 85778114, "body": "You may find this <a href=\"https://stackoverflow.com/questions/45282970/does-rust-have-an-equivalent-to-pythons-list-comprehension-syntax\">Q &amp; A</a> helpful. Basically you can use a list comprehension to initialize your array."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 14292, "user_id": 2820, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/631713865b68894b6bf525e16d817f58?s=128&d=identicon&r=PG", "display_name": "Onorio Catenacci", "link": "https://stackoverflow.com/users/2820/onorio-catenacci"}, "edited": false, "score": 2, "creation_date": 1521560882, "post_id": 49388285, "comment_id": 85778731, "body": "@OnorioCatenacci: There is a fairly big difference between <code>Vec</code> and an array, though, so a <code>Vec</code> may not be suitable."}, {"owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "edited": false, "score": 0, "creation_date": 1521564459, "post_id": 49388285, "comment_id": 85781181, "body": "Thanks, I have edited it now."}, {"owner": {"reputation": 14292, "user_id": 2820, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/631713865b68894b6bf525e16d817f58?s=128&d=identicon&r=PG", "display_name": "Onorio Catenacci", "link": "https://stackoverflow.com/users/2820/onorio-catenacci"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1521567303, "post_id": 49388285, "comment_id": 85782861, "body": "@MatthieuM. Good point. Sorry--was just trying to assist."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 14292, "user_id": 2820, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/631713865b68894b6bf525e16d817f58?s=128&d=identicon&r=PG", "display_name": "Onorio Catenacci", "link": "https://stackoverflow.com/users/2820/onorio-catenacci"}, "edited": false, "score": 3, "creation_date": 1521568195, "post_id": 49388285, "comment_id": 85783481, "body": "@OnorioCatenacci: Oh! Please don&#39;t take it the wrong way, I am <i>glad</i> that you were trying to assist and the OP question is so underspecified that it&#39;s hard to know whether <code>Vec</code> would be appropriate or not."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1591814179, "last_edit_date": 1591814179, "creation_date": 1521573665, "answer_id": 49392548, "question_id": 49388285, "link": "https://stackoverflow.com/questions/49388285/is-there-a-more-idiomatic-way-to-initialize-an-array-with-random-numbers-than-a/49392548#49392548", "title": "Is there a more idiomatic way to initialize an array with random numbers than a for loop?", "body": "<p><a href=\"https://docs.rs/rand/0.7.3/rand/distributions/struct.Standard.html\" rel=\"nofollow noreferrer\">Various sized arrays</a> can be directly randomly generated:</p>\n\n<pre><code>use rand; // 0.7.3\n\nfn main() {\n    let my_array: [u64; 8] = rand::random();\n    println!(\"{:?}\", my_array);\n}\n</code></pre>\n\n<p>Currently, this only works for arrays of size from 0 to 32 (inclusive). Beyond that, you will want to see related questions:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/36925673/155423\">How can I initialize an array using a function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31360993/155423\">What is the proper way to initialize a fixed length array?</a></li>\n</ul>\n"}], "owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2605, "favorite_count": 1, "accepted_answer_id": 49392548, "answer_count": 1, "score": 7, "last_activity_date": 1591814179, "creation_date": 1521559871, "last_edit_date": 1521564657, "question_id": 49388285, "link": "https://stackoverflow.com/questions/49388285/is-there-a-more-idiomatic-way-to-initialize-an-array-with-random-numbers-than-a", "title": "Is there a more idiomatic way to initialize an array with random numbers than a for loop?", "body": "<p>Is there an idiomatic way of initialising arrays in Rust. I'm creating an array of random numbers and was wondering if there is a more idiomatic way then just doing a for loop. My current code works fine, but seems more like C than proper Rust:</p>\n\n<pre><code>let mut my_array: [u64; 8] = [0; 8];\nfor i in 0..my_array.len() {\n    my_array[i] = some_function();\n}\n</code></pre>\n"}, {"tags": ["rust", "dependencies", "rust-rocket"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1521553397, "post_id": 49385326, "comment_id": 85772600, "body": "Related issues: <a href=\"https://github.com/SergioBenitez/Rocket/issues/516\" rel=\"nofollow noreferrer\">github.com/SergioBenitez/Rocket/issues/516</a> <a href=\"https://github.com/briansmith/ring/issues/575\" rel=\"nofollow noreferrer\">github.com/briansmith/ring/issues/575</a> <a href=\"https://github.com/briansmith/ring/issues/535\" rel=\"nofollow noreferrer\">github.com/briansmith/ring/issues/535</a>"}], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 1949955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9Y6hf.jpg?s=128&g=1", "display_name": "drpytho", "link": "https://stackoverflow.com/users/1949955/drpytho"}, "edited": false, "score": 0, "creation_date": 1521554054, "post_id": 49385799, "comment_id": 85773159, "body": "Is there a way to force rocket to use a newer version (if I knew it would be  compatible)?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 115, "user_id": 1949955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9Y6hf.jpg?s=128&g=1", "display_name": "drpytho", "link": "https://stackoverflow.com/users/1949955/drpytho"}, "edited": false, "score": 0, "creation_date": 1521555649, "post_id": 49385799, "comment_id": 85774484, "body": "@drpytho: It might be possible with package replacement, but I don&#39;t know anything about that.  In general, you can&#39;t force a crate to use versions of dependencies it didn&#39;t specify."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 7, "last_activity_date": 1521553197, "creation_date": 1521553197, "answer_id": 49385799, "question_id": 49385326, "link": "https://stackoverflow.com/questions/49385326/how-do-i-fix-mismatching-dependencies-in-my-cargo-file-to-work-around-native-lib/49385799#49385799", "title": "How do I fix mismatching dependencies in my Cargo file to work around native library collisions?", "body": "<p>You have to fix this by not transitively depending on different versions of crates that link to a native library.</p>\n\n<p>There's no newer version of <code>rocket</code> available that depends on version <code>0.10</code> of <code>cookie</code>, which depends on <code>ring</code> <code>0.12</code>, so you'll need to downgrade <code>jsonwebtoken</code> to <code>2.0.3</code>.</p>\n\n<p>You can work this out by checking the <code>crates.io</code> pages for the crates in question (like with <a href=\"https://crates.io/crates/jsonwebtoken\" rel=\"noreferrer\"><code>jsonwebtoken</code></a>), going back through older versions, and looking to see what dependencies it needs.</p>\n"}], "owner": {"reputation": 115, "user_id": 1949955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9Y6hf.jpg?s=128&g=1", "display_name": "drpytho", "link": "https://stackoverflow.com/users/1949955/drpytho"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1043, "favorite_count": 0, "accepted_answer_id": 49385799, "answer_count": 1, "score": 2, "last_activity_date": 1566532118, "creation_date": 1521551892, "last_edit_date": 1566532118, "question_id": 49385326, "link": "https://stackoverflow.com/questions/49385326/how-do-i-fix-mismatching-dependencies-in-my-cargo-file-to-work-around-native-lib", "title": "How do I fix mismatching dependencies in my Cargo file to work around native library collisions?", "body": "<p>I'm setting up a Rust server with <a href=\"https://rocket.rs/guide/getting-started/\" rel=\"nofollow noreferrer\">Rocket</a> and I'm trying to use it with <a href=\"https://github.com/Keats/jsonwebtoken\" rel=\"nofollow noreferrer\">a JWT library</a>. They use different versions of the *ring* crate and I get an error during <code>cargo build</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: multiple packages link to native library `ring-asm`, but a native library can be linked only once\n\npackage `ring v0.12.1`\n    ... which is depended on by `jsonwebtoken v4.0.1`\n    ... which is depended on by `auther v0.1.0 (file:///home/drpytho/x/downloadble/auther)`\nlinks to native library `ring-asm`\n\npackage `ring v0.11.0`\n    ... which is depended on by `cookie v0.9.2`\n    ... which is depended on by `rocket v0.3.6`\n    ... which is depended on by `rocket_codegen v0.3.6`\n    ... which is depended on by `auther v0.1.0 (file:///home/drpytho/x/downloadble/auther)`\nalso links to native library `ring-asm`\n</code></pre>\n\n<p>My Cargo.toml</p>\n\n<pre><code>[package]\nname = \"auther\"\nversion = \"0.1.0\"\nauthors = [\"Name &lt;Email@mail.se&gt;\"]\n\n[dependencies]\nrocket = \"0.3.6\"\nrocket_codegen = \"0.3.6\"\njsonwebtoken = \"4\"\nserde_derive = \"1\"\nserde = \"1\"\n</code></pre>\n\n<p>I read that you are supposed to fix the mismatching dependencies in your Cargo file, but I can't figure out how to do it.</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521548721, "post_id": 49379145, "comment_id": 85769103, "body": "@Shepmaster Yes, I&#39;ve read all the guides, and looked at the examples provided in the repository; none of those cover this issue."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521549805, "post_id": 49379145, "comment_id": 85769827, "body": "@Shepmaster I&#39;ve included a complete, runnable example in my question. I have tried to keep it as minimal as it gets, but running a HTTP server &amp; client just requires some boilerplate code. Please feel free to shorten it wherever you see any potential."}], "answers": [{"comments": [{"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1521555163, "post_id": 49385982, "comment_id": 85774115, "body": "I must admit, I should have thought of simply working with the request body using the <code>Iterator</code> capabilities (I have seen <code>concat2</code> in the examples). Thank you very much, this is just what I wanted!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1521555557, "post_id": 49385982, "comment_id": 85774408, "body": "@PhilippLudwig <code>concat2</code> is not provided by <code>Iterator</code>; it&#39;s provided by <code>Stream</code>. There&#39;s a link to the appropriate docs above."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1521556049, "post_id": 49385982, "comment_id": 85774814, "body": "I see. Thanks to your detailed explanation, I also managed to inspect the response easily. I will have to read up on Streams and Futures though."}, {"owner": {"reputation": 329, "user_id": 2555197, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/2IExe.jpg?s=128&g=1", "display_name": "adv", "link": "https://stackoverflow.com/users/2555197/adv"}, "edited": false, "score": 0, "creation_date": 1597343164, "post_id": 49385982, "comment_id": 112109394, "body": "Is there a reason this code bit never made it into a <code>clone</code> trait on the request object?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 329, "user_id": 2555197, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/2IExe.jpg?s=128&g=1", "display_name": "adv", "link": "https://stackoverflow.com/users/2555197/adv"}, "edited": false, "score": 0, "creation_date": 1597668707, "post_id": 49385982, "comment_id": 112199913, "body": "@adv I don&#39;t know if any hyper maintainers ever saw this, or if anyone ever submitted a pull request to add it. Perhaps you can!"}, {"owner": {"reputation": 329, "user_id": 2555197, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/2IExe.jpg?s=128&g=1", "display_name": "adv", "link": "https://stackoverflow.com/users/2555197/adv"}, "edited": false, "score": 0, "creation_date": 1597756659, "post_id": 49385982, "comment_id": 112233169, "body": "I may do that after we finish this project.  Not having <code>clone</code> on the request object has made this project 10x harder than it needed to be.  I will definitely look at PRing the copy method.  Thanks."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1521555568, "last_edit_date": 1521555568, "creation_date": 1521553636, "answer_id": 49385982, "question_id": 49379145, "link": "https://stackoverflow.com/questions/49379145/copy-body-and-headers-from-hyper-http-request-to-a-new-request-while-inspecting/49385982#49385982", "title": "Copy body and headers from hyper HTTP request to a new request while inspecting the body", "body": "<blockquote>\n  <p>the request body can't be simply copied into something like an <code>Vec&lt;u8&gt;</code></p>\n</blockquote>\n\n<p>Sure it can. In the Rust standard library, it's worth memorizing the capabilities of the <code>Iterator</code> trait. When dealing with futures, you should also memorize the capabilities of <a href=\"https://docs.rs/futures/0.1.18/futures/future/trait.Future.html\" rel=\"nofollow noreferrer\"><code>Future</code></a> and <a href=\"https://docs.rs/futures/0.1.18/futures/stream/trait.Stream.html\" rel=\"nofollow noreferrer\"><code>Stream</code></a>.</p>\n\n<p>For example, hyper's <a href=\"https://docs.rs/hyper/0.11.22/hyper/struct.Body.html\" rel=\"nofollow noreferrer\"><code>Body</code></a> implements <code>Stream</code>. This means you can use the <a href=\"https://docs.rs/futures/0.1.18/futures/stream/trait.Stream.html#method.concat2\" rel=\"nofollow noreferrer\"><code>Stream::concat2</code></a> method:</p>\n\n<blockquote>\n  <p>Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.</p>\n</blockquote>\n\n<p>This creates one large <code>Chunk</code> which can be converted to a <code>Vec</code>:</p>\n\n<pre><code>extern crate hyper;\nextern crate futures;\n\nuse futures::{Future, Stream};\n\nfn example(req: hyper::Request) {\n    req.body().concat2().map(|chunk| {\n        let body = chunk.to_vec(); \n        println!(\"{:?}\", body);\n        ()\n    });\n    // Use this future somehow!\n}\n</code></pre>\n\n<p>Likewise, a <code>Vec&lt;u8&gt;</code> can be converted back into a <code>Body</code>.</p>\n\n<blockquote>\n  <p>since the deconstructed headers can't be added to a new request.</p>\n</blockquote>\n\n<pre><code>req_copy.headers_mut().extend(headers.iter());\n</code></pre>\n\n<hr>\n\n<p>All together:</p>\n\n<pre><code>fn create_localhost_request(req: Request) -&gt; (Request, Body) {\n    let (method, uri, version, headers, body) = req.deconstruct();\n\n    let req_uri_str = {\n        format!(\n            \"http://localhost{}?{}\",\n            uri.path(),\n            uri.query().unwrap_or_default()\n        )\n    };\n    let uri = req_uri_str.parse().unwrap();\n\n    let mut req_copy = Request::new(method, uri);\n    req_copy.set_version(version);\n    req_copy.headers_mut().extend(headers.iter());\n\n    (req_copy, body)\n}\n\nfn perform_proxy_request(\n    client: HttpClient,\n    req: Request,\n) -&gt; Box&lt;Future&lt;Item = Response, Error = hyper::Error&gt;&gt; {\n    Box::new(client.request(req).or_else(|err| {\n        let body = format!(\"{}\\n\", err);\n        Ok(Response::new()\n            .with_status(StatusCode::BadRequest)\n            .with_header(ContentType::plaintext())\n            .with_header(ContentLength(body.len() as u64))\n            .with_body(body))\n    }))\n}\n\nimpl Service for Server {\n    type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, req: Request) -&gt; Self::Future {\n        let (mut req, body) = create_localhost_request(req);\n        let client = self.client.clone();\n\n        let work = body\n            .concat2()\n            .map(|chunk| chunk.to_vec())\n            // Do whatever we need with the body here, but be careful\n            // about doing any synchronous work.\n            .map(move |body| {\n                req.set_body(body);\n                req\n            })\n            .and_then(|req| perform_proxy_request(client, req));\n\n        Box::new(work)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1965, "favorite_count": 2, "accepted_answer_id": 49385982, "answer_count": 1, "score": 1, "last_activity_date": 1521555568, "creation_date": 1521533375, "last_edit_date": 1521553730, "question_id": 49379145, "link": "https://stackoverflow.com/questions/49379145/copy-body-and-headers-from-hyper-http-request-to-a-new-request-while-inspecting", "title": "Copy body and headers from hyper HTTP request to a new request while inspecting the body", "body": "<p>I would like to create a small Rust HTTP proxy using hyper which accepts requests, forwards them and dumps the request + body.</p>\n\n<p>Based on <a href=\"https://gist.github.com/meganehouser/d5e1b47eb2873797ebdc440b0ed482df\" rel=\"nofollow noreferrer\">this example</a>, the proxy part works fine.</p>\n\n<p>However, I can't simply copy &amp; print the request body. My main problem is that the request body can't be simply copied into something like an <code>Vec&lt;u8&gt;</code>. I cannot <code>deconstruct</code> the request to read the body and then create it later since the deconstructed headers can't be added to a new request.</p>\n\n<p>The following code shows my minimal HTTP proxy example:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio_core;\n\nuse futures::{Future, Stream};\n\nuse hyper::{Body, Client, StatusCode};\nuse hyper::client::HttpConnector;\nuse hyper::header::{ContentLength, ContentType};\nuse hyper::server::{Http, Request, Response, Service};\n\nuse tokio_core::reactor::Core;\n\ntype HTTPClient = Client&lt;HttpConnector, Body&gt;;\n\nstruct Server {\n    client: HTTPClient,\n}\n\nimpl Server {\n    pub fn new(client: HTTPClient) -&gt; Server {\n        Server { client: client }\n    }\n}\n\nimpl Service for Server {\n    type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, mut req: Request) -&gt; Self::Future {\n        let req_uri_str = {\n            let uri = req.uri();\n            format!(\n                \"http://localhost{}?{}\",\n                uri.path(),\n                uri.query().unwrap_or_default()\n            )\n        };\n        req.set_uri(req_uri_str.parse().unwrap());\n\n        // Try to create a copy of the new request\n        /*\n        let (method, uri, version, headers, body) = req.deconstruct();\n        let mut req_copy: Request&lt;hyper::Body&gt; = Request::new(method, uri);\n\n        // Main problem: How can the request body be copied?\n        // &gt;&gt;&gt; let body_bytes: Vec&lt;u8&gt; = ...\n\n        req_copy.set_body(body);\n        req_copy.set_version(version);\n\n        // Try to copy the headers\n        for header in headers.iter() {\n            req_copy.headers_mut().set(header.value().unwrap());\n        }\n        */\n\n        // This works if the request is not deconstructed\n        let work = self.client\n            .request(req)\n            .and_then(|res| futures::future::ok(res))\n            .or_else(|err| {\n                let body = format!(\"{}\\n\", err);\n                futures::future::ok(\n                    Response::new()\n                        .with_status(StatusCode::BadRequest)\n                        .with_header(ContentType::plaintext())\n                        .with_header(ContentLength(body.len() as u64))\n                        .with_body(body),\n                )\n            });\n\n        Box::new(work)\n    }\n}\n\nfn main() {\n    // Create HTTP client core + handles\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n    let handle_clone = handle.clone();\n\n    // Create HTTP server\n    let server_addr = \"127.0.0.1:9999\".parse().unwrap();\n    let server = Http::new()\n        .serve_addr_handle(&amp;server_addr, &amp;handle, move || {\n            Ok(Server::new(Client::new(&amp;handle_clone)))\n        })\n        .unwrap();\n\n    // Connect HTTP client with server\n    let handle_clone2 = handle.clone();\n    handle.spawn(\n        server\n            .for_each(move |conn| {\n                handle_clone2.spawn(conn.map(|_| ()).map_err(|err| println!(\"Error: {:?}\", err)));\n                Ok(())\n            })\n            .map_err(|_| ()),\n    );\n\n    core.run(futures::future::empty::&lt;(), ()&gt;()).unwrap();\n}\n</code></pre>\n\n<p>Running this works fine, if you have any HTTP service running on Port 80, connecting with a browser to port 9999 will forward any responses and requests perfectly.</p>\n\n<p>However, if you re-enable the lines regarding the construction of a new, copied request, my approach fails since I don't understand how to copy the headers. (Furthermore, this doesn't really help me when it comes to copying the request body)</p>\n\n<p>I'm aware that there are similar questions here, but none of them match my requirement to re-use the request body after looking at it (or don't have answers at all).</p>\n"}, {"tags": ["rust", "reference-counting"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 24, "last_activity_date": 1521534367, "last_edit_date": 1521534367, "creation_date": 1521533610, "answer_id": 49379201, "question_id": 49377231, "link": "https://stackoverflow.com/questions/49377231/when-to-use-rc-vs-box/49379201#49379201", "title": "When to use Rc vs Box?", "body": "<p><a href=\"https://doc.rust-lang.org/std/rc/\" rel=\"noreferrer\"><code>Rc</code></a> provides shared ownership so by default its contents can't be mutated, while <a href=\"https://doc.rust-lang.org/std/boxed/\" rel=\"noreferrer\"><code>Box</code></a> provides exclusive ownership and thus mutation is allowed:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let mut a = Box::new(1);\n    let mut b = Rc::new(1);\n\n    *a = 2; // works\n    *b = 2; // doesn't\n}\n</code></pre>\n\n<p>In addition <code>Rc</code> cannot be sent between threads, because it doesn't implement <code>Send</code>.</p>\n\n<p>The bottom line is they are meant for different things: if you don't need shared access, use <code>Box</code>; otherwise, use <code>Rc</code> (or <code>Arc</code> for multi-threaded shared usage) and keep in mind you will be needing <code>Cell</code> or <code>RefCell</code> for internal mutability.</p>\n"}, {"tags": [], "owner": {"reputation": 1088, "user_id": 551779, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aa52c7459e3877aac0a638c2fcdb84f?s=128&d=identicon&r=PG", "display_name": "sitaktif", "link": "https://stackoverflow.com/users/551779/sitaktif"}, "is_accepted": false, "score": 2, "last_activity_date": 1615246341, "last_edit_date": 1615246341, "creation_date": 1611494765, "answer_id": 65871083, "question_id": 49377231, "link": "https://stackoverflow.com/questions/49377231/when-to-use-rc-vs-box/65871083#65871083", "title": "When to use Rc vs Box?", "body": "<p>Looking at the example given in the description, I think the real question here is &quot;when to use <code>Rc</code> versus <code>&amp;Box</code>&quot; (note the ampersand).</p>\n<p>Both <code>Rc</code> and <code>&amp;Box</code> store the underlying data on the heap, neither can be sent across threads, and both allow immutable sharing (demonstrated by the aforementioned example). However, the biggest difference is that <code>Rc</code> gives you a shared (immutable) <em>owned</em> value while with <code>&amp;Box</code> you get a shared (immutable) <em>reference</em>.</p>\n<p>In the <code>Rc</code> case, the underlying data will be dropped (freed/deallocated) whenever the last owner (whether the original one or any cloned one) gets dropped \u2013 that's the idea of reference counting. In the <code>&amp;Box</code> case, however, there is only one owner: any shared references to it will become invalid immediately after the owner gets out of scope.</p>\n<p>Said differently, contrary to a <code>Rc::clone()</code>, binding a variable to a new <code>&amp;Box</code> (<code>let a2 = &amp;a;</code> in the example) will not make it live any longer than it would otherwise.</p>\n<p>As a concrete example, the following is valid:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::rc::Rc;\n\nfn main() {\n    let rc_clone;\n    {\n        let rc = Rc::new(1);\n        rc_clone = rc.clone();\n        // rc gets out of scope here but as a &quot;shared owner&quot;, rc_clone\n        // keeps the underlying data alive.\n    }\n    println!(&quot;{}&quot;, rc_clone);  // Ok.\n}\n</code></pre>\n<p>But this isn't:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let b_ref;\n    {\n        let b = Box::new(1);\n        b_ref = &amp;b;\n        // b gets out of scope here and since it is the only owner,\n        // the underlying data gets dropped.\n    }\n    println!(&quot;{}&quot;, b_ref); // Compilation error: `b` does not live long enough.\n}\n</code></pre>\n"}], "owner": {"reputation": 2564, "user_id": 1125621, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/c1b3328f06ea4ab079677388658dae10?s=128&d=identicon&r=PG", "display_name": "o0omycomputero0o", "link": "https://stackoverflow.com/users/1125621/o0omycomputero0o"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6449, "favorite_count": 6, "accepted_answer_id": 49379201, "answer_count": 2, "score": 19, "last_activity_date": 1615246341, "creation_date": 1521525546, "last_edit_date": 1521534783, "question_id": 49377231, "link": "https://stackoverflow.com/questions/49377231/when-to-use-rc-vs-box", "title": "When to use Rc vs Box?", "body": "<p>I have the following code which uses both <code>Rc</code> and <code>Box</code>; what is the difference between those? Which one is better?</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let a = Box::new(1);\n    let a1 = &amp;a;\n    let a2 = &amp;a;\n    let b = Rc::new(1);\n    let b1 = b.clone();\n    let b2 = b.clone();\n\n    println!(\"{} {}\", a1, a2);\n    println!(\"{} {}\", b1, b2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=f969bf51c9ff678d7f7267794bf0218f&amp;version=stable\" rel=\"noreferrer\">playground link</a></p>\n"}, {"tags": ["mysql", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521481881, "post_id": 49369327, "comment_id": 85739644, "body": "It rather looks like you <i>cannot</i>."}, {"owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521483407, "post_id": 49369327, "comment_id": 85740531, "body": "Thank you. Is it intended behavior of crate or it is a bug? <code>Conn</code> looks too useless with this limitation. I have to use either Conn::query (without preparing statement) or pooled connection."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521483499, "post_id": 49369327, "comment_id": 85740569, "body": "I don&#39;t actually know if it&#39;s on purpose or not. It&#39;s fairly surprising, so I&#39;d tend to believe that I&#39;m just missing something. However, I&#39;d think that a pooled connection would be a better choice in most cases anyway..."}, {"owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521487085, "post_id": 49369327, "comment_id": 85742492, "body": "If I create pooled connection as <code>let conn = Pool::new_manual(1, 1, &quot;some_conn_string&quot;).unwrap();</code> then I can&#39;t create 2 prepared statements: 1st statement is prepared but the program freezes when preparing 2nd one. Similarly, if I create connection as <code>let conn = Pool::new_manual(1, 2, &quot;conn_string&quot;).unwrap();</code> then I can create only 2 statements and get the hang on 3rd one. I guess each connection in the pool can keep only one prepared statement. Now note that <code>Pool::new</code> method (I think most people use it) creates new pool with min = 10 and max = 100 so we can never prepare 101+ statements."}, {"owner": {"reputation": 161, "user_id": 818704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d80d54e2d74c0766d0c9d5153d284d5?s=128&d=identicon&r=PG", "display_name": "set", "link": "https://stackoverflow.com/users/818704/set"}, "edited": false, "score": 0, "creation_date": 1521636131, "post_id": 49369327, "comment_id": 85814255, "body": "I see no way (on protocol level) to execute multiple statements, prepared on the same connection, in parallel. And so i can&#39;t see practical benefits in having multiple prepared statements out of single <code>Conn</code> but this will definitely complicate things. Each statement, once prepared, goes to <code>Conn</code>&#39;s local cache which is fast enough (this is, in fact, &quot;creating multiple prepared statements without producing compile-time error&quot;). If your only <code>Conn</code> is in <code>lazy_static!</code> and you want to prepare 100+ statements on it, then just tweak <code>stmt_cache_size</code> accordingly."}], "answers": [{"tags": [], "owner": {"reputation": 6847, "user_id": 1081569, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8682dc66d5900d9645a8dff1316495e1?s=128&d=identicon&r=PG", "display_name": "Paulo Almeida", "link": "https://stackoverflow.com/users/1081569/paulo-almeida"}, "is_accepted": true, "score": 0, "last_activity_date": 1521499234, "creation_date": 1521499234, "answer_id": 49373563, "question_id": 49369327, "link": "https://stackoverflow.com/questions/49369327/how-can-i-create-multiple-prepared-statements-from-one-mysqlconn/49373563#49373563", "title": "How can I create multiple prepared statements from one mysql::Conn?", "body": "<p>The <a href=\"https://docs.rs/mysql/12.3.1/mysql/struct.Conn.html#method.prepare\" rel=\"nofollow noreferrer\">documentation</a> does state:</p>\n\n<blockquote>\n  <p>Stmt will borrow Conn until the end of its scope.</p>\n</blockquote>\n\n<p>There is a <a href=\"https://github.com/blackbeam/rust-mysql-simple/issues/57\" rel=\"nofollow noreferrer\">Github issue</a> that suggests using <a href=\"https://docs.rs/mysql/12.3.1/mysql/struct.Conn.html#method.prep_exec\" rel=\"nofollow noreferrer\">prep_exec</a>, claiming:</p>\n\n<blockquote>\n  <p>Overhead is negligible because of fast xxhash based statements cache.</p>\n</blockquote>\n"}], "owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 233, "favorite_count": 0, "accepted_answer_id": 49373563, "answer_count": 1, "score": 1, "last_activity_date": 1521499234, "creation_date": 1521481688, "last_edit_date": 1521481944, "question_id": 49369327, "link": "https://stackoverflow.com/questions/49369327/how-can-i-create-multiple-prepared-statements-from-one-mysqlconn", "title": "How can I create multiple prepared statements from one mysql::Conn?", "body": "<p>This code</p>\n\n<pre><code>extern crate mysql;\nuse mysql::*;\n\nfn main () {\n    let mut conn = Conn::new(\"mysql://root:password@127.0.0.1:3306/mydb?prefer_socket=false\").unwrap();\n    let _q1 = conn.prepare(\"some query\").unwrap();\n    let _q2 = conn.prepare(\"some query 2\").unwrap();\n}\n</code></pre>\n\n<p>produces the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow ``conn`` as mutable more than once at a time\n --&gt; src\\bin\\test.rs:8:12\n  |\n7 |  let _q1 = conn.prepare(\"some query\").unwrap();\n  |            ---- first mutable borrow occurs here\n8 |  let _q2 = conn.prepare(\"some query 2\").unwrap();\n  |            ^^^^ second mutable borrow occurs here\n9 | }\n  | - first borrow ends here\n</code></pre>\n\n<p>I suppose that the first borrow lives up to the line 9 because <code>conn.prepare(...).unwrap()</code>'s  result is <code>Stmt</code> and <code>Stmt</code> is declared as</p>\n\n<pre><code>pub struct Stmt&lt;'a&gt; {\n    stmt: InnerStmt,\n    conn: ConnRef&lt;'a&gt;,\n}\n</code></pre>\n\n<p>and <code>ConnRef</code> is declared as </p>\n\n<pre><code>enum ConnRef&lt;'a&gt; {\n    ViaConnRef(&amp;'a mut Conn), // It keeps mutable borrow as long as lifetime of connection?\n    ViaPooledConn(pool::PooledConn),\n}\n</code></pre>\n\n<p>so <code>_q1</code> keeps the mutable borrow until <code>conn</code> dies.</p>\n\n<p>How can I create multiple prepared statements without producing compile-time error?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4511, "user_id": 360840, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/ZPEpj.jpg?s=128&g=1", "display_name": "Sabuncu", "link": "https://stackoverflow.com/users/360840/sabuncu"}, "edited": false, "score": 0, "creation_date": 1521481675, "post_id": 49368388, "comment_id": 85739533, "body": "Not surprised that it has an Automake history.  I have always hated Autotools."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4511, "user_id": 360840, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/ZPEpj.jpg?s=128&g=1", "display_name": "Sabuncu", "link": "https://stackoverflow.com/users/360840/sabuncu"}, "edited": false, "score": 2, "creation_date": 1521539203, "post_id": 49368388, "comment_id": 85762395, "body": "@Sabuncu: Actually, it has no automake history. This is a fundamental building block of compilers, and automake just had to deal with it."}, {"owner": {"reputation": 4511, "user_id": 360840, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/ZPEpj.jpg?s=128&g=1", "display_name": "Sabuncu", "link": "https://stackoverflow.com/users/360840/sabuncu"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1521539614, "post_id": 49368388, "comment_id": 85762692, "body": "@MatthieuM. Oh, OK then.  Thanks for the clarification."}, {"owner": {"reputation": 11569, "user_id": 502399, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/ccf39757e9c47ae99df42bdb286c6e5c?s=128&d=identicon&r=PG", "display_name": "Tavian Barnes", "link": "https://stackoverflow.com/users/502399/tavian-barnes"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1521556868, "post_id": 49368388, "comment_id": 85775501, "body": "@MatthieuM. Are you sure about that?  I was under the impression that the specific cpu-vendor-os format was a GNU invention."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1521557234, "post_id": 49368388, "comment_id": 85775818, "body": "@TavianBarnes: I am not sure how being a GNU invention would not make it a compiler specificity? Triplets appear out of the need of cross-compiling, I would expect, as a compiler which only ever generates code for the platform it runs on need not be aware of any target triplet."}, {"owner": {"reputation": 11569, "user_id": 502399, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/ccf39757e9c47ae99df42bdb286c6e5c?s=128&d=identicon&r=PG", "display_name": "Tavian Barnes", "link": "https://stackoverflow.com/users/502399/tavian-barnes"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1521557535, "post_id": 49368388, "comment_id": 85776060, "body": "@MatthieuM. I&#39;m questioning whether they are a &quot;fundamental building block of compilers&quot; since compilers are much older than the GNU project.  There are also other compilers (MSVC for example) that don&#39;t use that format."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1521558128, "post_id": 49368388, "comment_id": 85776546, "body": "@TavianBarnes: Ah! You are trying to read way too much in my statement, I fear. (1) I was more talking about cross-compiling capabilities, and a way to indicate the target, than about platform triplets specifically to be honest. (2) Cross-compiling is only something native AOT compilers care about; JIT compilers don&#39;t care, compilers to IR don&#39;t care, ... So, yes, the sentence is not as precise as it could be; it&#39;s a careless comment, not a carefully thought-out answer."}, {"owner": {"reputation": 1151, "user_id": 5431545, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-6ADkP-1Q4TU/AAAAAAAAAAI/AAAAAAAAABM/yWacKGRnYbQ/photo.jpg?sz=128", "display_name": "Alexey Volodko", "link": "https://stackoverflow.com/users/5431545/alexey-volodko"}, "edited": false, "score": 2, "creation_date": 1552937931, "post_id": 49368388, "comment_id": 97192269, "body": "For my <code>Ubuntu</code> it shows: <code>x86_64-unknown-linux-gnu</code>. Now <a href=\"https://clang.llvm.org/docs/CrossCompilation.html#general-cross-compilation-options-in-clang\" rel=\"nofollow noreferrer\">I understand</a> what is it! <code>arch = x86_64</code>, <code>vendor = unknown</code>, <code>sys = linux</code>, <code>abi = gnu</code>"}], "tags": [], "owner": {"reputation": 11569, "user_id": 502399, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/ccf39757e9c47ae99df42bdb286c6e5c?s=128&d=identicon&r=PG", "display_name": "Tavian Barnes", "link": "https://stackoverflow.com/users/502399/tavian-barnes"}, "is_accepted": true, "score": 21, "last_activity_date": 1521481322, "last_edit_date": 1521481322, "creation_date": 1521478474, "answer_id": 49368388, "question_id": 49368232, "link": "https://stackoverflow.com/questions/49368232/what-is-a-default-host-triple-in-rust/49368388#49368388", "title": "What is a &quot;default host triple&quot; in Rust?", "body": "<p>Host triples identify the architecture and OS of the system that will ultimately run your executable.  Mine is <code>x86_64-pc-linux-gnu</code> for example.  The general form is <code>cpu-vendor-os</code>.  Windows might be something like <code>x86_64-pc-windows-msvc</code>.  You can read more at these links:</p>\n\n<ul>\n<li><a href=\"https://www.gnu.org/software/automake/manual/html_node/Cross_002dCompilation.html\" rel=\"noreferrer\">Automake cross compilation</a></li>\n<li><a href=\"https://clang.llvm.org/docs/CrossCompilation.html\" rel=\"noreferrer\">Clang cross compilation</a></li>\n</ul>\n"}], "owner": {"reputation": 4511, "user_id": 360840, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/ZPEpj.jpg?s=128&g=1", "display_name": "Sabuncu", "link": "https://stackoverflow.com/users/360840/sabuncu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6863, "favorite_count": 5, "accepted_answer_id": 49368388, "answer_count": 1, "score": 18, "last_activity_date": 1521481322, "creation_date": 1521478055, "last_edit_date": 1521481263, "question_id": 49368232, "link": "https://stackoverflow.com/questions/49368232/what-is-a-default-host-triple-in-rust", "title": "What is a &quot;default host triple&quot; in Rust?", "body": "<p>While doing a custom installation of Rust on Windows 10, I am asked \"Default host triple?\"</p>\n\n<p>I have no clue what this is, and <a href=\"https://github.com/rust-lang-nursery/rustup.rs\" rel=\"noreferrer\">the Rustup repository page</a>, which came up in a web search, does not really explain it. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1521470053, "post_id": 49365334, "comment_id": 85731383, "body": "Why don&#39;t you do <code>#[cfg(test)] #[macro_use] extern crate log;</code>?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1521470100, "post_id": 49365334, "comment_id": 85731415, "body": "@Boiethios I think he&#39;s using <code>log</code> outside tests too, but without macros."}], "answers": [{"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1521470429, "post_id": 49365559, "comment_id": 85731667, "body": "Handy; definitely much nicer than two separate imports."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1521470279, "creation_date": 1521470279, "answer_id": 49365559, "question_id": 49365334, "link": "https://stackoverflow.com/questions/49365334/is-there-a-way-to-import-macros-from-an-external-crate-during-tests-only-withou/49365559#49365559", "title": "Is there a way to import macros from an external crate during tests only, without any warnings?", "body": "<p>You can use <code>cfg_attr</code>:</p>\n\n<pre><code>#[cfg_attr(test, macro_use)]\nextern crate log;\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42551113/155423\">Is it possible to conditionally derive with features?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43744379/155423\">Can I conditionally compile my Rust program for a Windows subsystem?</a></li>\n<li><a href=\"https://stackoverflow.com/q/48583049/155423\">Run additional tests by using a feature flag to &quot;cargo test&quot;</a></li>\n</ul>\n"}], "owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 992, "favorite_count": 0, "accepted_answer_id": 49365559, "answer_count": 1, "score": 8, "last_activity_date": 1521470279, "creation_date": 1521469611, "last_edit_date": 1521470172, "question_id": 49365334, "link": "https://stackoverflow.com/questions/49365334/is-there-a-way-to-import-macros-from-an-external-crate-during-tests-only-withou", "title": "Is there a way to import macros from an external crate during tests only, without any warnings?", "body": "<p>I have something like:</p>\n\n<pre><code>#[macro_use] extern crate log;\n\npub fn do_nothing() { let _ = log::Level::Info; }\n\n#[cfg(test)]\nmod tests {\n    #[test]\n    fn test_a() { debug!(\"Message.\"); }\n}\n</code></pre>\n\n<p>this compiles with a warning:</p>\n\n<pre><code>warning: unused `#[macro_use]` import\n</code></pre>\n\n<p>If I remove the macro import, and change the 1st line to:</p>\n\n<pre><code>extern crate log;\n</code></pre>\n\n<p>then I get the following error at compile time:</p>\n\n<pre><code>error: cannot find macro `debug!` in this scope\n</code></pre>\n\n<p>If I then try and import the macros only for the tests module, i.e.:</p>\n\n<pre><code>extern crate log;\n\npub fn do_nothing() { let _ = log::Level::Info; }\n\n#[cfg(test)]\n\nmod tests {\n    #[macro_use] extern crate log;\n    #[test]\n    fn test_a() { debug!(\"Message.\"); }\n}\n</code></pre>\n\n<p>then I get the compiler error:</p>\n\n<pre><code>error[E0468]: an `extern crate` loading macros must be at the crate root\n</code></pre>\n\n<p>Is there a solution which avoids all warnings without just suppressing them?</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1521473035, "post_id": 49365248, "comment_id": 85733674, "body": "Consider measuring again with boxed messages (<code>Box&lt;Msg&gt;</code>). Unless you&#39;re willing to expose a fully reproducible example, we might not be able to be more useful than this."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1521473943, "post_id": 49365248, "comment_id": 85734367, "body": "@E_net4: I am also wondering if this could be a contention issue, exacerbated by the fact that the lock is held while copying the <code>Msg</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1521473958, "post_id": 49365248, "comment_id": 85734381, "body": "Of course, you profiled the <code>--release</code> version, right :) ?"}, {"owner": {"reputation": 87, "user_id": 6824409, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-BGV288dq0a4/AAAAAAAAAAI/AAAAAAAAAHM/OPEz7JaVsIc/photo.jpg?sz=128", "display_name": "Soocks", "link": "https://stackoverflow.com/users/6824409/soocks"}, "edited": false, "score": 0, "creation_date": 1521543341, "post_id": 49365248, "comment_id": 85765377, "body": "I&#39;ll try using <code>Box</code>. Yes I profiled with <code>--release</code> and using Valgrind"}, {"owner": {"reputation": 87, "user_id": 6824409, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-BGV288dq0a4/AAAAAAAAAAI/AAAAAAAAAHM/OPEz7JaVsIc/photo.jpg?sz=128", "display_name": "Soocks", "link": "https://stackoverflow.com/users/6824409/soocks"}, "edited": false, "score": 0, "creation_date": 1521544505, "post_id": 49365248, "comment_id": 85766165, "body": "Using <code>Box</code> did not change anything, it seems weird... I can see that <code>memcpy</code> is called a huge amount of time but I don&#39;t know where"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521638582, "post_id": 49395995, "comment_id": 85816084, "body": "@soocks \u2014 you <a href=\"https://stackoverflow.com/questions/49365248/what-tools-does-rust-provide-to-avoid-copies-when-using-mpsc-channels#comment85766165_49365248\">already stated that using a <code>Box</code> did <b>not</b> help</a>. Would you comment explaining what the actual solution was?"}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 2, "last_activity_date": 1521590067, "creation_date": 1521590067, "answer_id": 49395995, "question_id": 49365248, "link": "https://stackoverflow.com/questions/49365248/what-tools-does-rust-provide-to-avoid-copies-when-using-mpsc-channels/49395995#49395995", "title": "What tools does Rust provide to avoid copies when using MPSC channels?", "body": "<p>Move of a <code>Vec</code> doesn't move its content, but only the 3-word \"header\". Therefore, unless your <code>MsgBack</code> contains <em>a lot</em> of other fields or large  fixed-size arrays inline, it should be rather cheap to move.</p>\n\n<p>In general, you can put things in <code>Box</code> to allocate them on the heap, so then the <code>Box&lt;T&gt;</code> itself is only pointer-sized. \"Moving\" of the <code>Box</code> doesn't move any data, only copies the pointer.</p>\n\n<hr>\n\n<p>If your actual iterators are more complex than your example and don't have useful <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.size_hint\" rel=\"nofollow noreferrer\"><code>size_hint</code></a>, you may be seeing <code>memcpy</code> from <code>.collect()</code> reallocating the vector as it grows. You can avoid that by pre-allocating required size:</p>\n\n<p>Instead of:</p>\n\n<pre><code>let dst = iterator.collect();\n</code></pre>\n\n<p>use:</p>\n\n<pre><code>let mut dst = Vec::with_capacity(required_size);\ndst.extend(iterator);\n</code></pre>\n"}], "owner": {"reputation": 87, "user_id": 6824409, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-BGV288dq0a4/AAAAAAAAAAI/AAAAAAAAAHM/OPEz7JaVsIc/photo.jpg?sz=128", "display_name": "Soocks", "link": "https://stackoverflow.com/users/6824409/soocks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 529, "favorite_count": 0, "accepted_answer_id": 49395995, "answer_count": 1, "score": 3, "last_activity_date": 1521590067, "creation_date": 1521469348, "last_edit_date": 1521472813, "question_id": 49365248, "link": "https://stackoverflow.com/questions/49365248/what-tools-does-rust-provide-to-avoid-copies-when-using-mpsc-channels", "title": "What tools does Rust provide to avoid copies when using MPSC channels?", "body": "<p>I'm creating a multithreaded application using <code>mpsc</code> to share memory between my threads:</p>\n\n<pre><code>use std::thread;\nuse std::sync::mpsc::{Sender, Receiver};\n\n#[derive(Debug)]\nstruct Msg {\n    pub content: Vec&lt;i16&gt;,\n    /* ... */\n}\n\n#[derive(Debug)]\nstruct MsgBack {\n    pub content: Vec&lt;i16&gt;,\n    pub new_content: Vec&lt;i16&gt;,\n    /* ... */\n}\n\nfn child(rx: mpsc::Receiver&lt;Msg&gt;, tx: mpsc::Sender&lt;MsgBack&gt;) {\n    let message = rx.recv().unwrap();\n    let new_content = message.content.iter().map(|x| -x).collect();\n\n    tx.send(MsgBack { // The memory is moved/copied\n        content: message.content,\n        new_content: new_content,\n    });\n}\n\nfn main() {\n    let (tx, rx): (Sender&lt;Msg&gt;, Receiver&lt;Msg&gt;) = mpsc::channel();\n    let (tx_back, rx_back): (Sender&lt;MsgBack&gt;, Receiver&lt;MsgBack&gt;) = mpsc::channel();\n\n    thread::spawn(move || {\n        child(rx, tx_back);\n    });\n\n    let message = Msg {\n        content: (0..100).map(|x| x).collect(), // Dummy initialisation\n    };\n    println!(\"{:#?}\", message);\n    tx.send(message).unwrap(); // The memory is moved/copied\n\n    let answer = rx_back.recv().unwrap();\n    println!(\"{:#?}\", answer);\n}\n</code></pre>\n\n<p>I did some profiling and I saw that sending the data is responsible for 1/3 of the execution time in my real program (which sends more than just a <code>Vec</code>).</p>\n\n<p>I want to keep this code structure but avoid moves/copies when sending a message to save a lot of time.</p>\n"}, {"tags": ["pointers", "rust", "lifetime", "unsafe"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521466941, "post_id": 49364267, "comment_id": 85729166, "body": "<i>I wrote a small <code>Ref</code>-wrapper</i> \u2014 exactly what benefit to seek to gain by writing such a wrapper?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521467040, "post_id": 49364267, "comment_id": 85729223, "body": "With the wrapper, I can search the key in the map and store the Result. Dereferencing <code>Ref</code> would result in <code>&amp;HashMap</code>, dereferencing the wrapper results in <code>&amp;T</code>"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1521467273, "post_id": 49364267, "comment_id": 85729409, "body": "<code>Ref</code> has a <code>map</code> associated function that <i>should</i> be used to translate the reference to the whole map into a reference to one element. But its signature is not flexible enough; I can&#39;t make it work with the <code>Option</code> wrapper."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1521467622, "post_id": 49364267, "comment_id": 85729661, "body": "@SebastianRedl yeah, <a href=\"https://play.rust-lang.org/?gist=9f9cf1f85d18ec82a5153ea363043487&amp;version=stable\" rel=\"nofollow noreferrer\">I&#39;m stuck as well</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1521468485, "last_edit_date": 1521468485, "creation_date": 1521467962, "answer_id": 49364804, "question_id": 49364267, "link": "https://stackoverflow.com/questions/49364267/is-it-safe-to-use-a-raw-pointer-to-access-the-t-of-a-refcellhashmapt/49364804#49364804", "title": "Is it safe to use a raw pointer to access the &amp;T of a RefCell&lt;HashMap&lt;T&gt;&gt;?", "body": "<p>I'm going to ignore your direct question in favor of a definitely safe alternative:</p>\n\n<pre><code>impl Cache {\n    fn insert(&amp;self, k: u32, v: String) {\n        self.map.borrow_mut().insert(k, v);\n    }\n\n    fn borrow&lt;'a&gt;(&amp;'a self, k: u32) -&gt; Option&lt;Ref&lt;'a, String&gt;&gt; {\n        let borrow = self.map.borrow();\n\n        if borrow.contains_key(&amp;k) {        \n            Some(Ref::map(borrow, |hm| {\n                hm.get(&amp;k).unwrap()\n            }))\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/cell/struct.Ref.html#method.map\" rel=\"nofollow noreferrer\"><code>Ref::map</code></a> allows you to take a <code>Ref&lt;'a, T&gt;</code> and convert it into a <code>Ref&lt;'a, U&gt;</code>. The ugly part of this solution is that we have to lookup in the hashmap twice because I can't figure out how to make the ideal solution work:</p>\n\n<pre><code>Ref::map(borrow, |hm| {\n    hm.get(&amp;k) // Returns an `Option`, not a `&amp;...`\n})\n</code></pre>\n\n<p>This <em>might</em> require Generic Associated Types (GATs) and even then the return type might be a <code>Ref&lt;Option&lt;T&gt;&gt;</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1521535165, "post_id": 49365000, "comment_id": 85759700, "body": "I think this suites my needs the most. I updated the <a href=\"https://play.rust-lang.org/?gist=9a43346fc5bd3685fc58d89cb4ee5633&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a> and added a mutable version as well."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 2, "last_activity_date": 1521468585, "creation_date": 1521468585, "answer_id": 49365000, "question_id": 49364267, "link": "https://stackoverflow.com/questions/49364267/is-it-safe-to-use-a-raw-pointer-to-access-the-t-of-a-refcellhashmapt/49365000#49365000", "title": "Is it safe to use a raw pointer to access the &amp;T of a RefCell&lt;HashMap&lt;T&gt;&gt;?", "body": "<p>I'll complement @Shepmaster's safe but not quite as efficient answer with the unsafe version. For this, we'll pack some unsafe code in a utility function.</p>\n\n<pre><code>fn map_option&lt;'a, T, F, U&gt;(r: Ref&lt;'a, T&gt;, f: F) -&gt; Option&lt;Ref&lt;'a, U&gt;&gt;\nwhere\n    F: FnOnce(&amp;'a T) -&gt; Option&lt;&amp;'a U&gt;\n{\n    let stolen = r.deref() as *const T;\n    let ur = f(unsafe { &amp;*stolen }).map(|sr| sr as *const U);\n    match ur {\n        Some(u) =&gt; Some(Ref::map(r, |_| unsafe { &amp;*u })),\n        None =&gt; None\n    }\n}\n</code></pre>\n\n<p>I'm pretty sure this code is correct. Although the compiler is rather unhappy with the lifetimes, they work out. We just have to inject some raw pointers to make the compiler shut up.</p>\n\n<p>With this, the implementation of <code>borrow</code> becomes trivial:</p>\n\n<pre><code>fn borrow&lt;'a&gt;(&amp;'a self, k: u32) -&gt; Option&lt;Ref&lt;'a, String&gt;&gt; {\n    map_option(self.map.borrow(), |m| m.get(&amp;k))\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c0ce130dbfe1a6162658ba7d3940e65e&amp;version=nightly\" rel=\"nofollow noreferrer\">Updated playground link</a></p>\n\n<p>The utility function only works for <code>Option&lt;&amp;T&gt;</code>. Other containers (such as <code>Result</code>) would require their own modified copy, or else GATs or HKTs to implement generically.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 1, "last_activity_date": 1521468787, "creation_date": 1521468787, "answer_id": 49365067, "question_id": 49364267, "link": "https://stackoverflow.com/questions/49364267/is-it-safe-to-use-a-raw-pointer-to-access-the-t-of-a-refcellhashmapt/49365067#49365067", "title": "Is it safe to use a raw pointer to access the &amp;T of a RefCell&lt;HashMap&lt;T&gt;&gt;?", "body": "<p>As mentioned by Shepmaster, it is better to avoid unsafe when possible.</p>\n\n<p>There are multiple possibilities:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/cell/struct.Ref.html#method.map\" rel=\"nofollow noreferrer\"><code>Ref::map</code></a>, with double look-up (as illustrated by Shepmaster's answer),</li>\n<li><code>Ref::map</code> with sentinel value,</li>\n<li>Cloning the return value.</li>\n</ul>\n\n<p>Personally, I'd consider the latter first. Store <code>Rc&lt;String&gt;</code> into your map and your method can easily return a <code>Option&lt;Rc&lt;String&gt;&gt;</code> which completely sidesteps the issues:</p>\n\n<pre><code>fn get(&amp;self, k: u32) -&gt; Option&lt;Rc&lt;String&gt;&gt; {\n    self.map.borrow().get(&amp;k).cloned()\n}\n</code></pre>\n\n<p>As a bonus, your cache is not \"locked\" any longer while you use the result.</p>\n\n<p>Or, alternatively, you can work-around the fact that <code>Ref::map</code> does not like <code>Option</code> by using a sentinel value:</p>\n\n<pre><code>fn borrow&lt;'a&gt;(&amp;'a self, k: u32) -&gt; Ref&lt;'a, str&gt; {\n    let borrow = self.map.borrow();\n\n    Ref::map(borrow, |map| map.get(&amp;k).map(|s| &amp;s[..]).unwrap_or(\"\"))\n}\n</code></pre>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 267, "favorite_count": 0, "accepted_answer_id": 49365000, "answer_count": 3, "score": 0, "last_activity_date": 1521468787, "creation_date": 1521466417, "last_edit_date": 1521466693, "question_id": 49364267, "link": "https://stackoverflow.com/questions/49364267/is-it-safe-to-use-a-raw-pointer-to-access-the-t-of-a-refcellhashmapt", "title": "Is it safe to use a raw pointer to access the &amp;T of a RefCell&lt;HashMap&lt;T&gt;&gt;?", "body": "<p>I have a cache-like structure which internally uses a <code>HashMap</code>:</p>\n\n<pre><code>impl Cache {\n    fn insert(&amp;mut self, k: u32, v: String) {\n        self.map.insert(k, v);\n    }\n\n    fn borrow(&amp;self, k: u32) -&gt; Option&lt;&amp;String&gt; {\n        self.map.get(&amp;k)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c454143b5fba0a7e26850134b6bc78f9&amp;version=stable\" rel=\"nofollow noreferrer\">Playground with external mutability</a></p>\n\n<p>Now I need internal mutability. Since <code>HashMap</code> does not implement <code>Copy</code>, my guess is that <code>RefCell</code> is the path to follow. Writing the <code>insert</code> method is straight forward but I encountered problems with the borrow-function. I could return a <code>Ref&lt;String&gt;</code>, but since I'd like to cache the result, I wrote a small <code>Ref</code>-wrapper:</p>\n\n<pre><code>struct CacheRef&lt;'a&gt; {\n    borrow: Ref&lt;'a, HashMap&lt;u32, String&gt;&gt;,\n    value:  &amp;'a String,\n}\n</code></pre>\n\n<p>This won't work since <code>value</code> references <code>borrow</code>, so the struct can't be constructed. I know that the reference is always valid: The map can't be mutated, because <code>Ref</code> <em>locks</em> the map. Is it safe to use a raw pointer instead of a reference?</p>\n\n<pre><code>struct CacheRef&lt;'a&gt; {\n    borrow: Ref&lt;'a, HashMap&lt;u32, String&gt;&gt;,\n    value:  *const String,\n}\n</code></pre>\n\n<p>Am I overlooking something here? Are there better (or faster) options? I'm trying to avoid <code>RefCell</code> due to the runtime overhead.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=27c1d442e0cbbd0b507fae9aaa581940&amp;version=nightly\" rel=\"nofollow noreferrer\">Playground with internal mutability</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 1, "creation_date": 1521451405, "post_id": 49355391, "comment_id": 85718928, "body": "From a purely design standpoint, I believe it&#39;s <i>generally</i> more idiomatic to use <code>Option&lt;T&gt;</code> for single items that may or may not exist (and which inherently don&#39;t have a &quot;none&quot; representation), and an empty collection for collections (since an empty collection itself implies &quot;none&quot;). Ex. <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.into_bytes\" rel=\"nofollow noreferrer\"><code>as_bytes</code></a>, which returns an empty <code>Vec</code> if the <code>String</code> is empty, rather than a <code>None</code>. Especially in your case, with a struct - an <code>Option&lt;Vec&lt;T&gt;&gt;</code> would need to be converted from <code>None</code> if items are added to the <code>Vec</code> later."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 2, "creation_date": 1521460878, "post_id": 49355391, "comment_id": 85724924, "body": "Instead of checking for <code>.len()</code> you should check <code>.is_empty()</code>. See the <a href=\"https://rust-lang-nursery.github.io/rust-clippy/master/index.html#len_zero\" rel=\"nofollow noreferrer\"><code>len_zero</code>-lint</a>"}], "answers": [{"comments": [{"owner": {"reputation": 499, "user_id": 8550523, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6UROd.jpg?s=128&g=1", "display_name": "pepsighan", "link": "https://stackoverflow.com/users/8550523/pepsighan"}, "edited": false, "score": 0, "creation_date": 1521431514, "post_id": 49355497, "comment_id": 85711281, "body": "That means a value should be stored in a type which represents its semantics? Which is my case leads to a simple <code>Vec</code>. Thanks. Also the reason I thought it allocated is because it stores pointers, len and such whereas None is a simple <code>null</code> which is nothing."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 499, "user_id": 8550523, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6UROd.jpg?s=128&g=1", "display_name": "pepsighan", "link": "https://stackoverflow.com/users/8550523/pepsighan"}, "edited": false, "score": 2, "creation_date": 1521433205, "post_id": 49355497, "comment_id": 85711630, "body": "@csharad: It consumes space, yes, but it&#39;s the same amount of space that all <code>Vec</code>s consume, and it&#39;s not behind an allocation."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 13, "last_activity_date": 1521464264, "last_edit_date": 1521464264, "creation_date": 1521431121, "answer_id": 49355497, "question_id": 49355391, "link": "https://stackoverflow.com/questions/49355391/what-are-the-implications-of-using-vect-over-optionvect/49355497#49355497", "title": "What are the implications of using Vec&lt;T&gt; over Option&lt;Vec&lt;T&gt;&gt;?", "body": "<p>An empty <code>Vec</code> doesn't allocate, because there's nothing for it to store.</p>\n\n<p>The two are the same size because of an optimisation the compiler uses, but this has no bearing on what the types mean.  Even with this optimisation, an empty <code>Vec</code> and <code>None</code> aren't the same thing.  One indicates the presence of an empty <code>Vec</code>, the other indicates the absence of any <code>Vec</code> at all.  Depending on what exactly you're doing, the distinction could be important.</p>\n"}], "owner": {"reputation": 499, "user_id": 8550523, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6UROd.jpg?s=128&g=1", "display_name": "pepsighan", "link": "https://stackoverflow.com/users/8550523/pepsighan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 245, "favorite_count": 0, "accepted_answer_id": 49355497, "answer_count": 1, "score": 4, "last_activity_date": 1521464264, "creation_date": 1521430032, "question_id": 49355391, "link": "https://stackoverflow.com/questions/49355391/what-are-the-implications-of-using-vect-over-optionvect", "title": "What are the implications of using Vec&lt;T&gt; over Option&lt;Vec&lt;T&gt;&gt;?", "body": "<p>I am creating a lot of structs using <code>Option&lt;Vec&lt;T&gt;&gt;</code> instead of <code>Vec&lt;T&gt;</code> to not allocate memory when not needed. And I looked up <a href=\"https://stackoverflow.com/a/16515488/8550523\">this answer</a> about the sizes of both <code>Vec</code> &amp; <code>Option&lt;Vec&gt;&gt;</code> and both were same.</p>\n\n<p>So my question is this. Should I use <code>Vec&lt;T&gt;</code> and check its <code>.len()</code> for the same effect or continue using <code>Option</code>? Or are they equivalent?</p>\n\n<p>Also originally I am a JavaScript Developer. And getting paranoid over to allocate or not to allocate.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3648, "user_id": 1118660, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/aaef8abaea3dc9d8ad119ceba8900aac?s=128&d=identicon&r=PG", "display_name": "Jason Watkins", "link": "https://stackoverflow.com/users/1118660/jason-watkins"}, "edited": false, "score": 0, "creation_date": 1521431384, "post_id": 49355144, "comment_id": 85711263, "body": "In addition to the answer below, I think I should note that the value you originally claimed for 100! was incorrect. How did you calculate that value?"}, {"owner": {"reputation": 83, "user_id": 3976570, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ed325c6d0c8cc858c1d129804595acf?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Novoa", "link": "https://stackoverflow.com/users/3976570/daniel-novoa"}, "reply_to_user": {"reputation": 3648, "user_id": 1118660, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/aaef8abaea3dc9d8ad119ceba8900aac?s=128&d=identicon&r=PG", "display_name": "Jason Watkins", "link": "https://stackoverflow.com/users/1118660/jason-watkins"}, "edited": false, "score": 0, "creation_date": 1521444041, "post_id": 49355144, "comment_id": 85715175, "body": "@JasonWatkins c++ program but something went wrong apparently, thanks for fixing it."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1521465258, "post_id": 49355364, "comment_id": 85728006, "body": "Why don&#39;t you use <code>if number &lt; big_2</code> etc.?"}, {"owner": {"reputation": 3648, "user_id": 1118660, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/aaef8abaea3dc9d8ad119ceba8900aac?s=128&d=identicon&r=PG", "display_name": "Jason Watkins", "link": "https://stackoverflow.com/users/1118660/jason-watkins"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1521472881, "post_id": 49355364, "comment_id": 85733542, "body": "For some reason that wasn&#39;t working for me when I initially wrote the answer. Looks like it does work fine with the final version of the code, so I&#39;ll update the answer to use it."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1521474254, "post_id": 49355364, "comment_id": 85734602, "body": "Note that a tail-recursive version is better: <a href=\"https://gitlab.com/snippets/1705066\" rel=\"nofollow noreferrer\">gitlab.com/snippets/1705066</a>"}], "tags": [], "owner": {"reputation": 3648, "user_id": 1118660, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/aaef8abaea3dc9d8ad119ceba8900aac?s=128&d=identicon&r=PG", "display_name": "Jason Watkins", "link": "https://stackoverflow.com/users/1118660/jason-watkins"}, "is_accepted": true, "score": 11, "last_activity_date": 1553005021, "last_edit_date": 1553005021, "creation_date": 1521429844, "answer_id": 49355364, "question_id": 49355144, "link": "https://stackoverflow.com/questions/49355144/cannot-store-large-values-when-calculating-factorials/49355364#49355364", "title": "Cannot store large values when calculating factorials", "body": "<p>100! is a <em>really</em> big number. In fact, the largest factorial that will fit in a <code>u64</code> is just 20!. For numbers that don't fit in a <code>u64</code>, <a href=\"https://huonw.github.io/primal/num/bigint/struct.BigUint.html\" rel=\"nofollow noreferrer\"><code>num::bigint::BigUint</code></a> is an appropriate storage option.</p>\n\n<p>The following code calculates a value for 100!. You can run it in your browser <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=0d709ccaf80f0976ec04239e07e7e84f\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<pre><code>extern crate num;\n\nuse num::BigUint;\n\nfn factorial(number: BigUint) -&gt; BigUint {\n    let big_1 = 1u32.into();\n    let big_2 = 2u32.into();\n    if number &lt; big_2 {\n        big_1\n    } else {\n        let prev_factorial = factorial(number.clone() - big_1);\n        number * prev_factorial\n    }\n}\n\nfn main() {\n    let number = 100u32.into();\n    println!(\"{}\", factorial(number));\n}\n</code></pre>\n\n<p>To give some insight into why <code>u64</code> doesn't work, you can call the <code>bits</code> method on the result. If you do so, you will find that the value of 100! requires <strong>525</strong> bits to store. That's more than 8 <code>u64</code>'s worth of storage.</p>\n"}, {"tags": [], "owner": {"reputation": 21716, "user_id": 2401769, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/wkEbw.jpg?s=128&g=1", "display_name": "Matias Cicero", "link": "https://stackoverflow.com/users/2401769/matias-cicero"}, "is_accepted": false, "score": 0, "last_activity_date": 1583720209, "last_edit_date": 1583720209, "creation_date": 1583719885, "answer_id": 60593942, "question_id": 49355144, "link": "https://stackoverflow.com/questions/49355144/cannot-store-large-values-when-calculating-factorials/60593942#60593942", "title": "Cannot store large values when calculating factorials", "body": "<p>I wanted to complement @Jason Watkins answer with an iterative solution using <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\"><code>Iterator::fold</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate num;\n\nuse num::{bigint::BigUint, One};\n\nfn factorial(value: u32) -&gt; BigUint {\n    (2..=value).fold(BigUint::one(), |res, n| res * n)\n}\n\nfn main() {\n    let result = factorial(10);\n    assert_eq!(result, 3628800u32.into());\n}\n</code></pre>\n"}], "owner": {"reputation": 83, "user_id": 3976570, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ed325c6d0c8cc858c1d129804595acf?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Novoa", "link": "https://stackoverflow.com/users/3976570/daniel-novoa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 0, "accepted_answer_id": 49355364, "answer_count": 2, "score": 1, "last_activity_date": 1583720209, "creation_date": 1521427959, "last_edit_date": 1521464208, "question_id": 49355144, "link": "https://stackoverflow.com/questions/49355144/cannot-store-large-values-when-calculating-factorials", "title": "Cannot store large values when calculating factorials", "body": "<p>I'm implementing an algorithm to get the factorial of a certain number for a programming class.</p>\n\n<pre><code>fn factorial(number: u64) -&gt; u64 {\n    if number &lt; 2 {\n        1\n    } else {\n        number * factorial(number - 1)\n    }\n}\n</code></pre>\n\n<p>When I tried with 100 or even with 25 I get this error <code>\"thread 'main' panicked at 'attempt to multiply with overflow'\"</code>, so I tried wrapping, and the result function was:</p>\n\n<pre><code>fn factorial(number: u64) -&gt; u64 {\n    if number &lt; 2 {\n        1\n    } else {\n        number.wrapping_mul(factorial(number - 1))\n    }\n}\n</code></pre>\n\n<p>This way there is not panic but the result is always zero, so I tried using f64 and result was</p>\n\n<p>100! = 93326215443944100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</p>\n\n<p>instead of</p>\n\n<p>100! =  93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000</p>\n\n<p>Is there another way to store the result so the right value is returned?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521419558, "post_id": 49354237, "comment_id": 85708819, "body": "Could you please <a href=\"https://stackoverflow.com/posts/49354237/edit\">edit</a> your question to expand on why it is not also answered by the answers in <a href=\"https://stackoverflow.com/q/33818141/155423\">How do I pass disjoint slices from a vector to different threads?</a> or <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>. This is a pretty common question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521419727, "post_id": 49354237, "comment_id": 85708848, "body": "Please also include <a href=\"https://stackoverflow.com/q/31644152/155423\">Processing vec in parallel: how to do safely, or without using unstable features?</a>; <a href=\"https://stackoverflow.com/q/28599334/155423\">How do I run parallel threads of computation on a partitioned array?</a>; <a href=\"https://stackoverflow.com/q/34665293/155423\">Using crossbeam scoped threads with vector chunks</a>; <a href=\"https://stackoverflow.com/q/43428512/155423\">Concurrent access to vector from multiple threads using a mutex lock</a>; and <a href=\"https://stackoverflow.com/q/31121250/155423\">Consume non-overlapping vector chunks, and combine results</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521419829, "post_id": 49354237, "comment_id": 85708866, "body": "I find it very useful to perform a search using Google when asking a question like this. All of the above existing questions were found with the search query <code>site:stackoverflow.com rust split vec thread</code>. And to be clear, it&#39;s fine to ask your question. If it&#39;s answered by an answer in one of the above links, we can mark it as such. Right now, it appears as if you didn&#39;t do research before asking; explaining how it&#39;s different shows you&#39;ve done due diligence, read existing answers (that&#39;s why they are there!), thought about it, and come to the conclusion that your question is truly unique."}, {"owner": {"reputation": 2144, "user_id": 1642057, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b845e36d3a3560fae824cf6d536f849c?s=128&d=identicon&r=PG", "display_name": "Roger Allen", "link": "https://stackoverflow.com/users/1642057/roger-allen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521420293, "post_id": 49354237, "comment_id": 85708963, "body": "I did do a google search and did find some of these.  I am looking through all of these and will have to take some time to see if they answer my question as posed."}, {"owner": {"reputation": 2144, "user_id": 1642057, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b845e36d3a3560fae824cf6d536f849c?s=128&d=identicon&r=PG", "display_name": "Roger Allen", "link": "https://stackoverflow.com/users/1642057/roger-allen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521420858, "post_id": 49354237, "comment_id": 85709076, "body": "The first two suggestions require crossbeam &amp; scoped_threadpool -- is this such a complicated question that it requires external crates?  The next suggests simple_parallel, the next wants to send/receive the data (unecessary overhead). The <a href=\"https://stackoverflow.com/questions/43428512/concurrent-access-to-vector-from-multiple-threads-using-a-mutex-lock\" title=\"concurrent access to vector from multiple threads using a mutex lock\">stackoverflow.com/questions/43428512/&hellip;</a> seems like it might apply.  I will look at this one..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1521421087, "post_id": 49354237, "comment_id": 85709115, "body": "<i>is this such a complicated question that it requires external crates</i> \u2014 Rust doesn&#39;t even have random number generation in the standard library. Due to the wonderful Cargo ecosystem, the barrier for what belongs in the standard library is drastically different in Rust compared to other languages and it&#39;s something I highly encourage people to openly embrace. Otherwise, you are going to be rewriting a lot of code. And yes, sharing data across threads in a performant, safe manner is non-trivial. There was an implementation in the standard library that was <i>wrong</i>, originally, and thus removed."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1521457559, "post_id": 49354237, "comment_id": 85722880, "body": "<a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\"><code>split_at_mut</code></a>"}], "answers": [{"tags": [], "owner": {"reputation": 2144, "user_id": 1642057, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b845e36d3a3560fae824cf6d536f849c?s=128&d=identicon&r=PG", "display_name": "Roger Allen", "link": "https://stackoverflow.com/users/1642057/roger-allen"}, "is_accepted": true, "score": 0, "last_activity_date": 1521819562, "last_edit_date": 1521819562, "creation_date": 1521437660, "answer_id": 49356393, "question_id": 49354237, "link": "https://stackoverflow.com/questions/49354237/how-to-give-each-cpu-core-mutable-access-to-a-portion-of-a-vec/49356393#49356393", "title": "How to give each CPU core mutable access to a portion of a Vec?", "body": "<p>Thanks to @Shepmaster for the pointers and clarification that this is not an easy problem for Rust, and that I needed to consider crates to find a reasonable solution.  I'm only just starting out in Rust, so this really wasn't clear to me. </p>\n\n<p>I liked the ability to control the number of threads that <a href=\"https://crates.io/crates/scoped_threadpool\" rel=\"nofollow noreferrer\">scoped_threadpool</a> gives, so I went with that. Translating my code from above directly, I tried to use the 4D buffer with core as the most-significant-index and that ran into troubles because that 3D vector does not implement the <code>Copy</code> trait.  The fact that it implements <code>Copy</code> makes me concerned about performance, but I went back to the original problem and implemented it more directly &amp; found a reasonable speedup by making each row a thread.  Copying each row will not be a large memory overhead.</p>\n\n<p>The code that works for me is:</p>\n\n<pre><code>let mut buffer2 = vec![vec![0i32; WIDTH]; HEIGHT];\nlet mut pool = Pool::new(num_logical_cores as u32);\npool.scoped(|scope| {\n    let mut y = 0;\n    for e in &amp;mut buffer2 {\n        scope.execute(move || {\n            for x in 0..WIDTH {\n                (*e)[x] = compute(x as i32,y as i32);\n            }\n        });\n        y += 1;\n    }\n});\n</code></pre>\n\n<p>On a 6 core, 12 thread i7-8700K for 400000x4000 testcase this runs in 3.2 seconds serially &amp; 481ms in parallel--a reasonable speedup.</p>\n\n<p>EDIT: I continued to think about this issue and got a suggestion from Rustlang on twitter that I should consider <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">rayon</a>.  I converted my code to <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">rayon</a> and got similar speedup with the following code.  </p>\n\n<pre><code>let mut buffer2 = vec![vec![0i32; WIDTH]; HEIGHT];\nbuffer2\n    .par_iter_mut()\n    .enumerate()\n    .map(|(y,e): (usize, &amp;mut Vec&lt;i32&gt;)| {\n        for x in 0..WIDTH {\n            (*e)[x] = compute(x as i32,y as i32);\n        }\n    })\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n"}], "owner": {"reputation": 2144, "user_id": 1642057, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b845e36d3a3560fae824cf6d536f849c?s=128&d=identicon&r=PG", "display_name": "Roger Allen", "link": "https://stackoverflow.com/users/1642057/roger-allen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 227, "favorite_count": 0, "closed_date": 1521440957, "accepted_answer_id": 49356393, "answer_count": 1, "score": 1, "last_activity_date": 1521819562, "creation_date": 1521419355, "question_id": 49354237, "link": "https://stackoverflow.com/questions/49354237/how-to-give-each-cpu-core-mutable-access-to-a-portion-of-a-vec", "closed_reason": "Duplicate", "title": "How to give each CPU core mutable access to a portion of a Vec?", "body": "<p>I've got an embarrassingly parallel bit of graphics rendering code that I would like to run across my CPU cores.  I've coded up a test case (the function computed is nonsense) to explore how I might parallelize it.  I'd like to code this using std Rust in order to learn about using <code>std::thread</code>.  But, I don't understand how to give each thread a portion of the framebuffer.  I'll put the full testcase code below, but I'll try to break it down first.</p>\n\n<p>The sequential form is super simple:</p>\n\n<pre><code>let mut buffer0 = vec![vec![0i32; WIDTH]; HEIGHT];\nfor j in 0..HEIGHT {\n    for i in 0..WIDTH {\n        buffer0[j][i] = compute(i as i32,j as i32);\n    }\n}\n</code></pre>\n\n<p>I thought that it would help to make a buffer that was the same size, but re-arranged to be 3D &amp; indexed by core first.  This is the same computation, just a reordering of the data to show the workings.</p>\n\n<pre><code>let mut buffer1 = vec![vec![vec![0i32; WIDTH]; y_per_core]; num_logical_cores];\nfor c in 0..num_logical_cores {\n    for y in 0..y_per_core {\n        let j = y*num_logical_cores + c;\n        if j &gt;= HEIGHT {\n            break;\n        }\n        for i in 0..WIDTH {\n            buffer1[c][y][i] = compute(i as i32,j as i32)\n        }\n    }\n}\n</code></pre>\n\n<p>But, when I try to put the inner part of the code in a closure &amp; create a thread, I get errors about the buffer &amp; lifetimes.  I basically don't understand what to do &amp; could use some guidance.  I want <code>per_core_buffer</code> to just temporarily refer to the data in <code>buffer2</code> that belongs to that core &amp; allow it to be written, synchronize all the threads &amp; then read <code>buffer2</code> afterwards.  Is this possible?</p>\n\n<pre><code>let mut buffer2 = vec![vec![vec![0i32; WIDTH]; y_per_core]; num_logical_cores];\nlet mut handles = Vec::new();\nfor c in 0..num_logical_cores {\n    let per_core_buffer = &amp;mut buffer2[c]; // &lt;&lt;&lt; lifetime error\n    let handle = thread::spawn(move || {\n        for y in 0..y_per_core {\n            let j = y*num_logical_cores + c;\n            if j &gt;= HEIGHT {\n                break;\n            }\n            for i in 0..WIDTH {\n                per_core_buffer[y][i] = compute(i as i32,j as i32)\n            }\n        }\n    });\n    handles.push(handle)\n}\nfor handle in handles {\n    handle.join().unwrap();\n}\n</code></pre>\n\n<p>The error is this &amp; I don't understand:</p>\n\n<pre><code>error[E0597]: `buffer2` does not live long enough\n  --&gt; src/main.rs:50:36\n   |\n50 |         let per_core_buffer = &amp;mut buffer2[c]; // &lt;&lt;&lt; lifetime error\n   |                                    ^^^^^^^ borrowed value does not live long enough\n...\n88 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>The full testcase is:</p>\n\n<pre><code>extern crate num_cpus;\nuse std::time::Instant;\nuse std::thread;\n\nfn compute(x: i32, y: i32) -&gt; i32 {\n    (x*y) % (x+y+10000)\n}\n\nfn main() {\n    let num_logical_cores = num_cpus::get();\n    const WIDTH: usize = 40000;\n    const HEIGHT: usize = 10000;\n    let y_per_core = HEIGHT/num_logical_cores + 1;\n\n    // ------------------------------------------------------------\n    // Serial Calculation...\n    let mut buffer0 = vec![vec![0i32; WIDTH]; HEIGHT];\n    let start0 = Instant::now();\n    for j in 0..HEIGHT {\n        for i in 0..WIDTH {\n            buffer0[j][i] = compute(i as i32,j as i32);\n        }\n    }\n    let dur0 = start0.elapsed();\n\n    // ------------------------------------------------------------\n    // On the way to Parallel Calculation...\n    // Reorder the data buffer to be 3D with one 2D region per core.\n    let mut buffer1 = vec![vec![vec![0i32; WIDTH]; y_per_core]; num_logical_cores];\n    let start1 = Instant::now();\n    for c in 0..num_logical_cores {\n        for y in 0..y_per_core {\n            let j = y*num_logical_cores + c;\n            if j &gt;= HEIGHT {\n                break;\n            }\n            for i in 0..WIDTH {\n                buffer1[c][y][i] = compute(i as i32,j as i32)\n            }\n        }\n    }\n    let dur1 = start1.elapsed();\n\n    // ------------------------------------------------------------\n    // Actual Parallel Calculation...\n    let mut buffer2 = vec![vec![vec![0i32; WIDTH]; y_per_core]; num_logical_cores];\n    let mut handles = Vec::new();\n    let start2 = Instant::now();\n    for c in 0..num_logical_cores {\n        let per_core_buffer = &amp;mut buffer2[c]; // &lt;&lt;&lt; lifetime error\n        let handle = thread::spawn(move || {\n            for y in 0..y_per_core {\n                let j = y*num_logical_cores + c;\n                if j &gt;= HEIGHT {\n                    break;\n                }\n                for i in 0..WIDTH {\n                    per_core_buffer[y][i] = compute(i as i32,j as i32)\n                }\n            }\n        });\n        handles.push(handle)\n    }\n    for handle in handles {\n        handle.join().unwrap();\n    }\n    let dur2 = start2.elapsed();\n\n    println!(\"Runtime: Serial={0:.3}ms, AlmostParallel={1:.3}ms, Parallel={2:.3}ms\",\n             1000.*dur0.as_secs() as f64 + 1e-6*(dur0.subsec_nanos() as f64),\n             1000.*dur1.as_secs() as f64 + 1e-6*(dur1.subsec_nanos() as f64),\n             1000.*dur2.as_secs() as f64 + 1e-6*(dur2.subsec_nanos() as f64));\n\n    // Sanity check\n    for j in 0..HEIGHT {\n        let c = j % num_logical_cores;\n        let y = j / num_logical_cores;\n        for i in 0..WIDTH {\n            if buffer0[j][i] != buffer1[c][y][i] {\n                println!(\"wtf1? {0} {1} {2} {3}\",i,j,buffer0[j][i],buffer1[c][y][i])\n            }\n            if buffer0[j][i] != buffer2[c][y][i] {\n                println!(\"wtf2? {0} {1} {2} {3}\",i,j,buffer0[j][i],buffer2[c][y][i])\n            }\n        }\n    }\n\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 408, "user_id": 952722, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ce1d2044f1100c366901d92b5449c015?s=128&d=identicon&r=PG", "display_name": "Weltraumschaf", "link": "https://stackoverflow.com/users/952722/weltraumschaf"}, "edited": false, "score": 0, "creation_date": 1521402612, "post_id": 49351885, "comment_id": 85704401, "body": "Sorry, I stripped to much from the first example. The whole project is a bit larger."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521402901, "post_id": 49351885, "comment_id": 85704486, "body": "Removing things from the example is <b>good</b>; every word in <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is important, including &quot;Minimal&quot;. For example, your current code has many enum variants that don&#39;t come into play. Taking your example and reducing it to the bare minimum that still reproduces the problem is one way that you show us that you&#39;ve attempted to solve your own problem before asking it here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521403120, "post_id": 49351885, "comment_id": 85704533, "body": "Essentially a duplicate of <a href=\"https://stackoverflow.com/q/31067031/155423\">Cannot borrow as mutable more than once at a time in one code - but can in another very similar</a>; <a href=\"https://stackoverflow.com/q/30273850/155423\">Linking the lifetimes of self and a reference in method</a>; <a href=\"https://stackoverflow.com/q/31281155/155423\">Cannot borrow <code>x</code> as mutable more than once at a time</a>."}, {"owner": {"reputation": 408, "user_id": 952722, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ce1d2044f1100c366901d92b5449c015?s=128&d=identicon&r=PG", "display_name": "Weltraumschaf", "link": "https://stackoverflow.com/users/952722/weltraumschaf"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521403711, "post_id": 49351885, "comment_id": 85704717, "body": "Stripped the unnecessary enum variants."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521402714, "post_id": 49352170, "comment_id": 85704428, "body": "<i>Even better would be to use a dedicated error type</i> \u2014 OP is already using an <code>Error</code> type, so presumably they already understand the mechanics of doing so."}, {"owner": {"reputation": 1163, "user_id": 661509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253665016d569de90f26c0cbe89268f7?s=128&d=identicon&r=PG", "display_name": "fintelia", "link": "https://stackoverflow.com/users/661509/fintelia"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521402842, "post_id": 49352170, "comment_id": 85704461, "body": "Good point. Of course that only helps with the functions that return that error type..."}], "tags": [], "owner": {"reputation": 1163, "user_id": 661509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253665016d569de90f26c0cbe89268f7?s=128&d=identicon&r=PG", "display_name": "fintelia", "link": "https://stackoverflow.com/users/661509/fintelia"}, "is_accepted": false, "score": 0, "last_activity_date": 1521402521, "last_edit_date": 1521402521, "creation_date": 1521402388, "answer_id": 49352170, "question_id": 49351885, "link": "https://stackoverflow.com/questions/49351885/is-it-possible-to-mutate-a-structs-field-inside-a-loop/49352170#49352170", "title": "Is it possible to mutate a struct&#39;s field inside a loop?", "body": "<p>You probably do not want to be returning <code>Result&lt;_, &amp;str&gt;</code> from any of your functions. If you use <code>Result&lt;_, &amp;'static str&gt;</code> or <code>Result&lt;_, String&gt;</code> you should have much less fighting with the borrow checker. Even better would be to use a dedicated error type, but that is beyond the scope of this answer.</p>\n\n<p>The reason that returning a <code>Result&lt;_, &amp;str&gt;</code> is problematic is that it ends up tying the lifetime of the return value to the lifetime of <code>self</code>, which limits how you can use <code>self</code> during the lifetime of the result.</p>\n"}, {"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 3, "last_activity_date": 1555024203, "last_edit_date": 1555024203, "creation_date": 1521447615, "answer_id": 49358435, "question_id": 49351885, "link": "https://stackoverflow.com/questions/49351885/is-it-possible-to-mutate-a-structs-field-inside-a-loop/49358435#49358435", "title": "Is it possible to mutate a struct&#39;s field inside a loop?", "body": "<p>There are two things preventing your code sample from compiling.</p>\n\n<p>First, you have a number of methods declared as taking <code>&amp;mut self</code> when they don't need to be. </p>\n\n<ul>\n<li><p><code>VirtualMachine::fetch</code> only calls <code>CodeMemory::fetch</code> which does not require a mutable self.</p></li>\n<li><p><code>VirtualMachine::decode</code> does not even access any of the fields of <code>VirtualMachine</code></p></li>\n</ul>\n\n<p>Secondly, as pointed out in <a href=\"https://stackoverflow.com/a/49352170/155423\">@fintella's answer</a>, <code>CodeMemory::fetch</code> returns a string slice as an error. </p>\n\n<p>You don't specify a lifetime of this string slice so it is inferred to be the same as the lifetime of the <code>CodeMemory</code> instance, which in turn is tied back to the lifetime of the <code>VirtualMachine</code> instance. </p>\n\n<p>The effect of this is that the lifetime of the immutable borrow taken when you call <code>fetch</code> lasts for the whole scope of the return value from <code>fetch</code> - in this case pretty much the whole of your loop.</p>\n\n<p>In this case, the string slice you are returning as an error message is a string literal, which has static scope, so you can fix this by changing the definition of <code>CodeMemory::fetch</code> to:</p>\n\n<pre><code>fn fetch(&amp;self, index: usize) -&gt; Result&lt;u8, &amp;'static str&gt; { /* ... */ }\n</code></pre>\n\n<p>and <code>VirtualMachine::fetch</code> to:</p>\n\n<pre><code>fn fetch(&amp;self) -&gt; Result&lt;u8, &amp;'static str&gt; { /* ... */ }\n</code></pre>\n\n<p>After making those changes, it <a href=\"https://play.rust-lang.org/?gist=9df23505d0321acb269ab70bebba07e0&amp;version=nightly\" rel=\"nofollow noreferrer\">compiles for me</a>.</p>\n"}], "owner": {"reputation": 408, "user_id": 952722, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ce1d2044f1100c366901d92b5449c015?s=128&d=identicon&r=PG", "display_name": "Weltraumschaf", "link": "https://stackoverflow.com/users/952722/weltraumschaf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 328, "favorite_count": 0, "accepted_answer_id": 49358435, "answer_count": 2, "score": 3, "last_activity_date": 1555024203, "creation_date": 1521400637, "last_edit_date": 1555024176, "question_id": 49351885, "link": "https://stackoverflow.com/questions/49351885/is-it-possible-to-mutate-a-structs-field-inside-a-loop", "title": "Is it possible to mutate a struct&#39;s field inside a loop?", "body": "<p>Given is a struct which holds a struct with some byte code and an instruction pointer. It implements the pattern of fetch, decode, and execute:</p>\n\n<pre><code>use std::convert::TryFrom;\n\n/// Trait for a virtual machine.\npub struct VirtualMachine {\n    code: CodeMemory,\n    instruction_pointer: usize,\n}\n\nimpl VirtualMachine {\n    pub fn new(byte_code: Vec&lt;u8&gt;) -&gt; VirtualMachine {\n        VirtualMachine {\n            code: CodeMemory::new(byte_code),\n            instruction_pointer: 0,\n        }\n    }\n\n    /// Run a given program.\n    pub fn run(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n        loop {\n            let opcode = self.fetch();\n\n            if opcode.is_err() {\n                return Err(opcode.unwrap_err());\n            }\n\n            let instruction = self.decode(opcode.unwrap());\n\n            if instruction.is_err() {\n                return Err(\"Bad opcode!\");\n            }\n\n            let instruction = instruction.unwrap();\n\n            if instruction == Instruction::Halt {\n                return Ok(());\n            }\n\n            self.execute(instruction);\n        }\n    }\n\n    fn fetch(&amp;mut self) -&gt; Result&lt;u8, &amp;str&gt; {\n        self.code.fetch(self.instruction_pointer)\n    }\n\n    fn decode(&amp;mut self, opcode: u8) -&gt; Result&lt;Instruction, Error&gt; {\n        Instruction::try_from(opcode)\n    }\n\n    fn execute(&amp;mut self, instruction: Instruction) {\n        self.inc_instruction_pointer();\n\n        match instruction {\n            Instruction::Nop =&gt; (),\n            Instruction::Halt =&gt; panic!(\"The opcode 'halt' should exit the loop before execute!\"),\n        }\n    }\n\n    fn inc_instruction_pointer(&amp;mut self) {\n        self.instruction_pointer += 1;\n    }\n}\n\nstruct CodeMemory {\n    byte_code: Vec&lt;u8&gt;,\n}\n\nimpl CodeMemory {\n    fn new(byte_code: Vec&lt;u8&gt;) -&gt; CodeMemory {\n        CodeMemory { byte_code }\n    }\n\n    fn fetch(&amp;self, index: usize) -&gt; Result&lt;u8, &amp;str&gt; {\n        if index &lt; self.byte_code.len() {\n            Ok(self.byte_code[index])\n        } else {\n            Err(\"Index out of bounds!\")\n        }\n    }\n\n}\n\n#[derive(Debug, PartialEq)]\npub enum Error {\n    UnknownInstruction(u8),\n    UnknownMnemonic(String),\n}\n\n#[derive(Debug, Copy, Clone, PartialEq)]\npub enum Instruction {\n    Nop,\n    // ...\n    Halt,\n}\n\nimpl TryFrom&lt;u8&gt; for Instruction {\n    type Error = Error;\n\n    fn try_from(original: u8) -&gt; Result&lt;Self, Self::Error&gt; {\n        match original {\n            0x01 =&gt; Ok(Instruction::Nop),\n            0x0c =&gt; Ok(Instruction::Halt),\n            n =&gt; Err(Error::UnknownInstruction(n)),\n        }\n    }\n}\n</code></pre>\n\n<p>The compiler complains that:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/lib.rs:20:26\n   |\n18 |     pub fn run(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n   |                - let's call the lifetime of this reference `'1`\n19 |         loop {\n20 |             let opcode = self.fetch();\n   |                          ^^^^ mutable borrow starts here in previous iteration of loop\n...\n23 |                 return Err(opcode.unwrap_err());\n   |                        ------------------------ returning this value requires that `*self` is borrowed for `'1`\n\nerror[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/lib.rs:26:31\n   |\n18 |     pub fn run(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n   |                - let's call the lifetime of this reference `'1`\n19 |         loop {\n20 |             let opcode = self.fetch();\n   |                          ---- first mutable borrow occurs here\n...\n23 |                 return Err(opcode.unwrap_err());\n   |                        ------------------------ returning this value requires that `*self` is borrowed for `'1`\n...\n26 |             let instruction = self.decode(opcode.unwrap());\n   |                               ^^^^ second mutable borrow occurs here\n\nerror[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/lib.rs:38:13\n   |\n18 |     pub fn run(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n   |                - let's call the lifetime of this reference `'1`\n19 |         loop {\n20 |             let opcode = self.fetch();\n   |                          ---- first mutable borrow occurs here\n...\n23 |                 return Err(opcode.unwrap_err());\n   |                        ------------------------ returning this value requires that `*self` is borrowed for `'1`\n...\n38 |             self.execute(instruction);\n   |             ^^^^ second mutable borrow occurs here\n</code></pre>\n\n<p>I think I understand the problem described by the compiler, but I can't find a solution or pattern how to implement this in Rust in a safe way. Is it possible to mutate a struct field inside a loop?</p>\n\n<p>I'm using Rust 1.34 to use the <code>TryFrom</code> trait.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521384061, "post_id": 49349089, "comment_id": 85697941, "body": "Would you please <a href=\"https://stackoverflow.com/posts/49349089/edit\">edit</a> your question to expand on why it&#39;s not a duplicate of <a href=\"https://stackoverflow.com/q/36048741/155423\">Why does compilation not fail when a member of a moved value is assigned to?</a> and/or <a href=\"https://stackoverflow.com/q/46833271/155423\">Why is assigning to a member of a pointer still valid after the pointer is moved?</a>"}, {"owner": {"reputation": 3381, "user_id": 3964654, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/ITt1C.jpg?s=128&g=1", "display_name": "wingerse", "link": "https://stackoverflow.com/users/3964654/wingerse"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521386777, "post_id": 49349089, "comment_id": 85698904, "body": "Oh, I didn&#39;t see that first question. Looks a harmless bug it seems. Feel free to mark this as duplicate and thanks."}], "owner": {"reputation": 3381, "user_id": 3964654, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/ITt1C.jpg?s=128&g=1", "display_name": "wingerse", "link": "https://stackoverflow.com/users/3964654/wingerse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1521386833, "answer_count": 0, "score": 1, "last_activity_date": 1521386844, "creation_date": 1521383806, "question_id": 49349089, "link": "https://stackoverflow.com/questions/49349089/compiler-not-happy-with-reading-from-dropped-structs-field-after-writing-to-it", "closed_reason": "Duplicate", "title": "Compiler not happy with reading from dropped struct&#39;s field after writing to it", "body": "<pre><code>#[derive(Debug)]\nstruct A {\n    x: i32\n}\n\nfn main() {\n    let mut x = A{x: 1};\n    drop(x);\n    // this is fine?\n    x.x = 100;\n    // this is not? ERROR: \"use of moved value x.x\"\n    println!(\"{}\", x.x);\n}\n</code></pre>\n\n<p>I've read some answers here that says if you re-initialize the struct after move, then you can use it again. I am re-initializing it fully here and yet can't use it. Why is this feature (ability to write to struct fields after move) even there? </p>\n"}, {"tags": ["cuda", "linker", "rust", "ffi", "nvcc"], "comments": [{"owner": {"reputation": 66945, "user_id": 681865, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77320b8ddf13954ffb22aa22965d465e?s=128&d=identicon&r=PG&f=1", "display_name": "talonmies", "link": "https://stackoverflow.com/users/681865/talonmies"}, "edited": false, "score": 0, "creation_date": 1521386532, "post_id": 49348859, "comment_id": 85698810, "body": "You aren&#39;t linking cudart. The  output in your question shows you anren&quot;t"}, {"owner": {"reputation": 315, "user_id": 8466510, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-zru5XpowwEw/AAAAAAAAAAI/AAAAAAAAAE0/_klqoLMQYI0/photo.jpg?sz=128", "display_name": "Xavier P", "link": "https://stackoverflow.com/users/8466510/xavier-p"}, "reply_to_user": {"reputation": 66945, "user_id": 681865, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77320b8ddf13954ffb22aa22965d465e?s=128&d=identicon&r=PG&f=1", "display_name": "talonmies", "link": "https://stackoverflow.com/users/681865/talonmies"}, "edited": false, "score": 0, "creation_date": 1521387193, "post_id": 49348859, "comment_id": 85699063, "body": "I have this &quot;-l&quot; &quot;cudart&quot; in the command, but indeed it looks like I isn&#39;t linked, I wonder why"}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1521422019, "post_id": 49348859, "comment_id": 85709293, "body": "Does it work if you specify dynamic linkage explicitly, eg. <code>cargo:rustc-link-lib=dylib=cuda</code> ?"}, {"owner": {"reputation": 315, "user_id": 8466510, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-zru5XpowwEw/AAAAAAAAAAI/AAAAAAAAAE0/_klqoLMQYI0/photo.jpg?sz=128", "display_name": "Xavier P", "link": "https://stackoverflow.com/users/8466510/xavier-p"}, "edited": false, "score": 0, "creation_date": 1521422788, "post_id": 49348859, "comment_id": 85709456, "body": "No, the same error appears"}, {"owner": {"reputation": 188, "user_id": 2718757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/874cb98e9dd907c85b91614abd171800?s=128&d=identicon&r=PG", "display_name": "termoshtt", "link": "https://stackoverflow.com/users/2718757/termoshtt"}, "edited": false, "score": 0, "creation_date": 1521641140, "post_id": 49348859, "comment_id": 85818220, "body": "Could you paste &quot;kernel.cu&quot;? Your &quot;build.rs&quot; works with sample/vectorAdd.cu on my env."}, {"owner": {"reputation": 315, "user_id": 8466510, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-zru5XpowwEw/AAAAAAAAAAI/AAAAAAAAAE0/_klqoLMQYI0/photo.jpg?sz=128", "display_name": "Xavier P", "link": "https://stackoverflow.com/users/8466510/xavier-p"}, "edited": false, "score": 0, "creation_date": 1521644335, "post_id": 49348859, "comment_id": 85820860, "body": "I added my kernel.cu file to the post. Also I tried to build with vectorAdd.cu instead of my kernel.cu, but it gives me the same error! I think there is something I forgot to do in my Rust project"}, {"owner": {"reputation": 66945, "user_id": 681865, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77320b8ddf13954ffb22aa22965d465e?s=128&d=identicon&r=PG&f=1", "display_name": "talonmies", "link": "https://stackoverflow.com/users/681865/talonmies"}, "edited": false, "score": 0, "creation_date": 1593604665, "post_id": 49348859, "comment_id": 110838123, "body": "@XavierP: I have added a community wiki entry to replace the answer you added and which was moderator deleted. If you could be so kind as to modify it as you see fit and accept the answer, this question will fall off the unaswered queues for the CUDA and rust tags."}], "answers": [{"tags": [], "owner": {"reputation": 66945, "user_id": 681865, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77320b8ddf13954ffb22aa22965d465e?s=128&d=identicon&r=PG&f=1", "display_name": "talonmies", "link": "https://stackoverflow.com/users/681865/talonmies"}, "is_accepted": false, "score": 1, "last_activity_date": 1593068678, "creation_date": 1593068678, "answer_id": 62569675, "question_id": 49348859, "link": "https://stackoverflow.com/questions/49348859/how-would-you-link-a-custom-cuda-kernel-written-in-c-to-a-rust-project/62569675#62569675", "title": "How would you link a custom CUDA kernel written in C to a Rust project?", "body": "<p>The original poster diagnosed that this was a path issue and was able to modify <code>build.rs</code> to this (taken from <a href=\"https://github.com/Ltei/cumath\" rel=\"nofollow noreferrer\">here</a>):</p>\n<pre><code>extern crate cc;\nuse std::env;\n\n\nfn main() {\n\n    if let Ok(cuda_path) = env::var(&quot;CUDA_HOME&quot;) {\n        println!(&quot;cargo:rustc-link-search=native={}/lib64&quot;, cuda_path);\n    } else {\n        println!(&quot;cargo:rustc-link-search=native=/usr/local/cuda/lib64&quot;);\n    }\n\n    println!(&quot;cargo:rustc-link-lib=dylib=cuda&quot;);\n    println!(&quot;cargo:rustc-link-lib=dylib=cudart&quot;);\n    println!(&quot;cargo:rustc-link-lib=dylib=cublas&quot;);\n    println!(&quot;cargo:rustc-link-lib=dylib=curand&quot;);\n\n    cc::Build::new().cuda(true)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_52,code=sm_52&quot;) // Generate code for Maxwell (GTX 970, 980, 980 Ti, Titan X).\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_53,code=sm_53&quot;) // Generate code for Maxwell (Jetson TX1).\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_61,code=sm_61&quot;) // Generate code for Pascal (GTX 1070, 1080, 1080 Ti, Titan Xp).\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_60,code=sm_60&quot;) // Generate code for Pascal (Tesla P100).\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_62,code=sm_62&quot;) // Generate code for Pascal (Jetson TX2).\n        .file(&quot;kernels/vectorfragment.cu&quot;).compile(&quot;libvectorfragment.a&quot;);\n    cc::Build::new().cuda(true).cpp_link_stdlib(None)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_52,code=sm_52&quot;)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_53,code=sm_53&quot;)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_61,code=sm_61&quot;)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_60,code=sm_60&quot;)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_62,code=sm_62&quot;)\n        .file(&quot;kernels/vectorpacked.cu&quot;).compile(&quot;libvectorpacked.a&quot;);\n    cc::Build::new().cuda(true).cpp_link_stdlib(None)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_52,code=sm_52&quot;)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_53,code=sm_53&quot;)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_61,code=sm_61&quot;)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_60,code=sm_60&quot;)\n        .flag(&quot;-gencode&quot;).flag(&quot;arch=compute_62,code=sm_62&quot;)\n        .file(&quot;kernels/matrix.cu&quot;).compile(&quot;libmatrix.a&quot;);\n}\n</code></pre>\n<p>This apparently worked where the original did not.</p>\n<p>[Note: this answer added as a community wiki from comments and a now deleted answer to get this question off the unanswered question queue for the CUDA tag.]</p>\n"}], "owner": {"reputation": 315, "user_id": 8466510, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-zru5XpowwEw/AAAAAAAAAAI/AAAAAAAAAE0/_klqoLMQYI0/photo.jpg?sz=128", "display_name": "Xavier P", "link": "https://stackoverflow.com/users/8466510/xavier-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 286, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1593068678, "creation_date": 1521382545, "last_edit_date": 1521646543, "question_id": 49348859, "link": "https://stackoverflow.com/questions/49348859/how-would-you-link-a-custom-cuda-kernel-written-in-c-to-a-rust-project", "title": "How would you link a custom CUDA kernel written in C to a Rust project?", "body": "<p>I am struggling to link my CUDA kernel with my Rust project using a build.rs file with the crate cc:</p>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>extern crate cc;\n\nfn main() {\n    println!(\"cargo:rustc-link-lib=cuda\");\n    println!(\"cargo:rustc-link-lib=cudart\");\n    println!(\"cargo:rustc-link-lib=cudnn\");\n\n    cc::Build::new()\n        .cuda(true)\n        .flag(\"-cudart=shared\")\n        .flag(\"-gencode\")\n        .flag(\"arch=compute_61,code=sm_61\")\n        .file(\"kernel.cu\")\n        .compile(\"kernel\");\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-m64\" \"-L\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/rust_cudnn-c2a0c7c98bc21183.1y16o1qfye96o7m0.rcgu.o\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/rust_cudnn-c2a0c7c98bc21183.3rngp6bm2u2q5z0y.rcgu.o\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/rust_cudnn-c2a0c7c98bc21183.3vhdzx0ywzealo7m.rcgu.o\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/rust_cudnn-c2a0c7c98bc21183.4xq48u46a1pwiqn7.rcgu.o\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/rust_cudnn-c2a0c7c98bc21183.8xzrsc1ux72v29j.rcgu.o\" \"-o\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/rust_cudnn-c2a0c7c98bc21183\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/rust_cudnn-c2a0c7c98bc21183.crate.allocator.rcgu.o\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\" \"-L\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps\" \"-L\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/build/rust_cudnn-df924982e63c2363/out\" \"-L\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-l\" \"cudart\" \"-l\" \"cudnn\" \"-l\" \"cuda\" \"-Wl,-Bstatic\" \"-Wl,--whole-archive\" \"-l\" \"kernel\" \"-Wl,--no-whole-archive\" \"-Wl,-Bdynamic\" \"-l\" \"stdc++\" \"-Wl,-Bstatic\" \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/liblibc-dca5860987df25ef.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-0006dc6e9901bcad.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-8d1c3982c0670998.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-2a12cd93029b9807.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-a5d3ff19e13d9f37.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_system-c5f69e7df1f06d84.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-e2e7ce88a6c41eea.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-3d7473d271611dc2.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-58e7a51af24928de.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-6806ae6018eec5e7.rlib\" \"/home/ltei/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-85fd2d595ec0faf9.rlib\" \"-Wl,-Bdynamic\" \"-l\" \"util\" \"-l\" \"util\" \"-l\" \"dl\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"pthread\" \"-l\" \"gcc_s\" \"-l\" \"c\" \"-l\" \"m\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"util\" \"-l\" \"util\"\n  = note: /home/ltei/Dev/Workspaces/rust_cudnn/target/debug/deps/rust_cudnn-c2a0c7c98bc21183.3vhdzx0ywzealo7m.rcgu.o\u00a0: In fonction \u00ab\u00a0rust_cudnn::main\u00a0\u00bb\u00a0:\n          /home/ltei/Dev/Workspaces/rust_cudnn/src/main.rs:213\u00a0: undefined reference to \u00ab\u00a0Kernel_test\u00a0\u00bb\n          /home/ltei/Dev/Workspaces/rust_cudnn/target/debug/build/rust_cudnn-df924982e63c2363/out/libkernel.a(kernel.o)\u00a0: In fonction \u00ab\u00a0__sti____cudaRegisterAll_41_tmpxft_0000098e_00000000_7_kernel_cpp1_ii_a9220a05()\u00a0\u00bb\u00a0:\n          /tmp/tmpxft_0000098e_00000000-4_kernel.cudafe1.stub.c:7\u00a0: undefined reference to \u00ab\u00a0__cudaRegisterFatBinary\u00a0\u00bb\n          /home/ltei/Dev/Workspaces/rust_cudnn/target/debug/build/rust_cudnn-df924982e63c2363/out/libkernel.a(kernel.o)\u00a0: In fonction \u00ab\u00a0__cudaUnregisterBinaryUtil()\u00a0\u00bb\u00a0:\n          /usr/include/crt/host_runtime.h:238\u00a0: undefined reference to \u00ab\u00a0__cudaUnregisterFatBinary\u00a0\u00bb\n          collect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>Apparently, that is what happens when you don't link cudart, but I thought I did. Maybe I did it wrong? The error only occurs when I try to compile and link my CUDA kernel. When I don't, it works and I can use CUDA functions like <code>cudaMalloc</code> from Rust</p>\n\n<p>Here is my kernel.cu file:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include \"kernel.h\"\n\n__global__ void vectorAdd_ker(float* vector, int len, float value) {\n      int tid = blockIdx.x * blockDim.x + threadIdx.x;\n      if (tid &lt; len) { vector[tid] += value; }\n}\n\nvoid Kernel_vectorAdd(float* vector, int len, float value) {\n   dim3 gridDim;\n   dim3 blockDim;\n\n   blockDim.x = 1024;\n   gridDim.x = (len + blockDim.x - 1) / blockDim.x;\n\n  vectorAdd_ker &lt;&lt;&lt;gridDim, blockDim&gt;&gt;&gt; (vector, len, value);\n}\n\nint Kernel_test() {\n  return 7;\n}\n</code></pre>\n"}, {"tags": ["rust", "programming-languages", "computer-science"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521389763, "post_id": 49349781, "comment_id": 85699868, "body": "It may be worth pointing out that &quot;compile time&quot; is actually composed of <i>many</i> steps. Lexing, parsing, type inference, desugaring, inlining, monomorphization, optimization, machine code generation (and probably tens or hundreds of other steps) all occur during &quot;compile time&quot;. Knowing that types are assigned at compile time is akin to saying that a drop of water is in the Indian Ocean: it&#39;s more specific than &quot;in an ocean&quot;, but there&#39;s still a lot of space to cover."}, {"owner": {"reputation": 1953, "user_id": 6400614, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sp43M.jpg?s=128&g=1", "display_name": "Rahul Bharadwaj", "link": "https://stackoverflow.com/users/6400614/rahul-bharadwaj"}, "edited": false, "score": 0, "creation_date": 1521391699, "post_id": 49349781, "comment_id": 85700538, "body": "Ok, so if I&#39;m writing a parser for Rust, then should I put some dummy type for a variable and move ahead?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 1953, "user_id": 6400614, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sp43M.jpg?s=128&g=1", "display_name": "Rahul Bharadwaj", "link": "https://stackoverflow.com/users/6400614/rahul-bharadwaj"}, "edited": false, "score": 2, "creation_date": 1521413907, "post_id": 49349781, "comment_id": 85707565, "body": "@RahulBharadwaj why not have a look at how rustc itself <a href=\"https://github.com/rust-lang/rust/blob/master/src/libsyntax/ast.rs#L1578\" rel=\"nofollow noreferrer\">does it</a>? You can see it has a special type <code>Infer</code> that&#39;s made just for that kind of types that are not explicit in the source. Later on, while the compiler starts to checks the types, all the <code>Infer</code> get replaced by actual types."}, {"owner": {"reputation": 1953, "user_id": 6400614, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sp43M.jpg?s=128&g=1", "display_name": "Rahul Bharadwaj", "link": "https://stackoverflow.com/users/6400614/rahul-bharadwaj"}, "edited": false, "score": 0, "creation_date": 1521445779, "post_id": 49349781, "comment_id": 85715956, "body": "Okay, thank you for the suggestion. I will have a look at it."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1521424819, "last_edit_date": 1521424819, "creation_date": 1521387628, "answer_id": 49349781, "question_id": 49348726, "link": "https://stackoverflow.com/questions/49348726/when-does-type-binding-happen-in-rust/49349781#49349781", "title": "When does type binding happen in Rust?", "body": "<p>Type binding is performed at compile time. This is necessary so that the compiler can emit the proper machine instructions (for example, an <code>x86_64</code> processor doesn't multiply two <code>i32</code>s the same way it multiplies two <code>i64</code>s). </p>\n\n<p>Many dynamically-typed languages, such as Python or Lua, will carry type information along with the values (<em>not</em> the variables) and dispatch operations at runtime based on the type of each operand. On the other hand, statically-typed languages, such as C or Rust, usually discard most of the type information; it's not necessary because the machine instructions required to perform the operation were emitted directly in the executable (which makes the statically-typed program faster than the comparable dynamically-typed program).</p>\n\n<p>We can demonstrate that type binding is done at compile time by having the compiler tell us about type errors (this is known as <em>type checking</em>). Here's an example:</p>\n\n<pre><code>fn squared(x: f64) -&gt; f64 {\n    x * x\n}\n\nfn main() {\n    let a = 2i32;\n    println!(\"{}\", squared(a));\n}\n</code></pre>\n\n<p>Compiling this gives the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:7:28\n  |\n7 |     println!(\"{}\", squared(a));\n  |                            ^ expected f64, found i32\n</code></pre>\n\n<p>The Rust compiler can <em>infer</em> the type of many variables based on usage (similar to how <code>auto</code> works in C++). When it can't, it'll give an error. For example:</p>\n\n<pre><code>fn main() {\n    let a;\n}\n</code></pre>\n\n<p>gives this output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n --&gt; src/main.rs:2:9\n  |\n2 |     let a;\n  |         ^\n  |         |\n  |         cannot infer type for `_`\n  |         consider giving `a` a type\n</code></pre>\n\n<p>When the compiler encounters errors, it stops and doesn't produce a runnable executable. Since we don't have an executable form of our program, there is no \"run time\", so the above happens at compile time.</p>\n"}], "owner": {"reputation": 1953, "user_id": 6400614, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sp43M.jpg?s=128&g=1", "display_name": "Rahul Bharadwaj", "link": "https://stackoverflow.com/users/6400614/rahul-bharadwaj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 328, "favorite_count": 0, "accepted_answer_id": 49349781, "answer_count": 1, "score": 1, "last_activity_date": 1521424819, "creation_date": 1521381780, "last_edit_date": 1521390365, "question_id": 49348726, "link": "https://stackoverflow.com/questions/49348726/when-does-type-binding-happen-in-rust", "title": "When does type binding happen in Rust?", "body": "<p>From what I know: In C language, the \"type\" of a variable is bound during compile time and the value of that variable is bound during run time. </p>\n\n<p>For example, in <code>int a = 10;</code>, the type <code>int</code> is bound to the variable <code>a</code> during compile time and the actual value <code>10</code> is bound (or assigned) to it during run time.</p>\n\n<p>But in Rust, we have <code>let a = 2;</code>. Here, when does the type (say <code>i32</code> from any of the integer types in Rust) get bound to <code>a</code>? </p>\n\n<p>I am building a front-end Rust compiler and am currently writing the parser phase. At this point, what type should I assign to these variables?</p>\n"}, {"tags": ["arrays", "rust", "move"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521387076, "post_id": 49348654, "comment_id": 85699024, "body": "Did you have a chance to read the answers to the question, which <i>do</i> address the concerns of <code>Drop</code>? On Stack Overflow, a duplicate doesn&#39;t mean that the question was identical, but that <i>the same answers apply</i>. For example, I could copy and paste the accepted answer here and it would seemingly fit perfectly to answer the question in your title. You have a lot of <i>other</i> questions in the body that are ancillary to the question in the title, though."}, {"owner": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521387798, "post_id": 49348654, "comment_id": 85699260, "body": "It addresses <code>Drop</code> by saying the the first part of the answer doesn&#39;t handle it and then references a library that does. But I looked at the library and it moves individual values out of the array one at a time while keeping the rest of the array usable. Since I want to move all the values at once and don&#39;t care about keeping the array, I think this case is different."}, {"owner": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521388098, "post_id": 49348654, "comment_id": 85699363, "body": "As for the difference between using <code>replace</code> + <code>unitialized</code> vs <code>transmute_copy</code>, I could make that a separate question if you&#39;d like, but I don&#39;t think the rest of the questions are ancillary since i&#39;m asking for the minimal overhead way of doing this that&#39;s also safe in the general case."}], "answers": [{"comments": [{"owner": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "edited": false, "score": 1, "creation_date": 1521390416, "post_id": 49349938, "comment_id": 85700068, "body": "I&#39;d also note that the documentation for <code>ptr::read</code> states that it &quot;semantically moves the value out of <code>src</code>...&quot; which helps with my concern that a bitwise copy might not always be equivalent to a move."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1521458107, "post_id": 49349938, "comment_id": 85723225, "body": "In this case it&#39;s quite clear that panics won&#39;t happen in the critical parts of the code. In cases where I&#39;m less certain, I prefer using <code>std::mem::ManuallyDrop</code> over <code>mem::forget</code>, since it means that a panic will only leak memory and not cause undefined behaviour."}, {"owner": {"reputation": 81, "user_id": 6365228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a156dd8b5f223d700c997a4f326204?s=128&d=identicon&r=PG&f=1", "display_name": "Ph. Weier", "link": "https://stackoverflow.com/users/6365228/ph-weier"}, "edited": false, "score": 0, "creation_date": 1589109784, "post_id": 49349938, "comment_id": 109156839, "body": "@Shepmaster I&#39;m not sure if I understood correctly. In you first code snippet is the mem::forget(self) always necessary in this situation?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 81, "user_id": 6365228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a156dd8b5f223d700c997a4f326204?s=128&d=identicon&r=PG&f=1", "display_name": "Ph. Weier", "link": "https://stackoverflow.com/users/6365228/ph-weier"}, "edited": false, "score": 0, "creation_date": 1589209556, "post_id": 49349938, "comment_id": 109195241, "body": "@Ph.Weier make sure you see my update on the better way to write this now. Yes, the <code>mem::forget</code> is necessary, otherwise you can end up with two owners of the data inside the array. If <code>T</code> is a <code>String</code>, that would lead to an attempt to free the string multiple times, causing memory unsafety."}, {"owner": {"reputation": 81, "user_id": 6365228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a156dd8b5f223d700c997a4f326204?s=128&d=identicon&r=PG&f=1", "display_name": "Ph. Weier", "link": "https://stackoverflow.com/users/6365228/ph-weier"}, "edited": false, "score": 0, "creation_date": 1589244734, "post_id": 49349938, "comment_id": 109211195, "body": "Thanks for the update! Oh that looks very nice with the new version. What if we need to move an arbitrarly sized array, is then the <code>ptr::read</code> way still the way to go? I heard of <code>std::array::IntoIter::new(array)</code> to get a consuming iterator but this appears to still be a non stable feature."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 81, "user_id": 6365228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a156dd8b5f223d700c997a4f326204?s=128&d=identicon&r=PG&f=1", "display_name": "Ph. Weier", "link": "https://stackoverflow.com/users/6365228/ph-weier"}, "edited": false, "score": 0, "creation_date": 1589247791, "post_id": 49349938, "comment_id": 109211864, "body": "@Ph.Weier you <a href=\"https://stackoverflow.com/q/28136739/155423\">can&#39;t have an &quot;arbitrarily sized array&quot;</a>, so I don&#39;t know what you mean."}, {"owner": {"reputation": 81, "user_id": 6365228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a156dd8b5f223d700c997a4f326204?s=128&d=identicon&r=PG&f=1", "display_name": "Ph. Weier", "link": "https://stackoverflow.com/users/6365228/ph-weier"}, "edited": false, "score": 0, "creation_date": 1589254826, "post_id": 49349938, "comment_id": 109213278, "body": "@Shepmaster Yeah that was not a very precise question indead. I&#39;m refering to the GenericArray from the crate <a href=\"https://docs.rs/generic-array/0.14.1/generic_array/\" rel=\"nofollow noreferrer\">Inline Link</a>. In which case I cannot work use something like <code>let [a,b,c,d] = generic_array</code> as the size will only be known at compilation. To circumvent this I&#39;m using the <code>std::ptr::read(&amp;generic_array[i])</code> approach to get ownership. Note that I always go through the whole array to construct a new one. Maybe this has not it&#39;s place in comments and I should just open a new thread for my specific issue."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 81, "user_id": 6365228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a156dd8b5f223d700c997a4f326204?s=128&d=identicon&r=PG&f=1", "display_name": "Ph. Weier", "link": "https://stackoverflow.com/users/6365228/ph-weier"}, "edited": false, "score": 1, "creation_date": 1589288994, "post_id": 49349938, "comment_id": 109228887, "body": "@Ph.Weier that crate appears to have a <a href=\"https://docs.rs/generic-array/0.14.1/generic_array/iter/struct.GenericArrayIter.html#impl-Iterator\" rel=\"nofollow noreferrer\">by-value iterator</a>. Applied to an <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a37934f9e7759fbd5574908c053857ce\" rel=\"nofollow noreferrer\">example</a>."}, {"owner": {"reputation": 81, "user_id": 6365228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78a156dd8b5f223d700c997a4f326204?s=128&d=identicon&r=PG&f=1", "display_name": "Ph. Weier", "link": "https://stackoverflow.com/users/6365228/ph-weier"}, "edited": false, "score": 0, "creation_date": 1589320750, "post_id": 49349938, "comment_id": 109246879, "body": "Thank you very much that was it! I somehow tried that at some point but had a problem using a Deref trait implementation on the newtype on the GenericArray. After accessing the inner data directly without using any deref it works as expected :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1589209455, "last_edit_date": 1589209455, "creation_date": 1521388704, "answer_id": 49349938, "question_id": 49348654, "link": "https://stackoverflow.com/questions/49348654/method-for-safely-moving-all-elements-out-of-a-generic-array-into-a-tuple-with-m/49349938#49349938", "title": "Method for safely moving all elements out of a generic array into a tuple with minimal overhead", "body": "<h1>Rust 1.36 and up</h1>\n\n<p>This can now be done in completely safe code:</p>\n\n<pre><code>impl&lt;T&gt; Vec3&lt;T&gt; {\n    fn into_tuple(self) -&gt; (T, T, T) {\n        let [a, b, c] = self.underlying_array;\n        (a, b, c)\n    }\n}\n</code></pre>\n\n<h1>Previous versions</h1>\n\n<p>As you've mentioned and as discussed in <a href=\"https://stackoverflow.com/q/34406251/155423\">How do I move values out of an array?</a>, treating a generic type as a bag of bits can be very dangerous. Once we have copied those bits and they are \"live\", implementations of traits such as <code>Drop</code> can access the value when we least expect it.  </p>\n\n<p>That being said, your current code <em>appears</em> to be safe, but has needless flexibility. Using <code>transmute</code> or <code>transmute_copy</code> is The Big Hammer and is actually rarely needed. You don't want the ability to change the type of the value. Instead, use <a href=\"https://doc.rust-lang.org/std/ptr/fn.read.html\" rel=\"nofollow noreferrer\"><code>ptr::read</code></a>.</p>\n\n<p>It's conventional to expand <code>unsafe</code> blocks to cover the range of code that makes something safe and then to include a comment explaining <em>why</em> the block is actually safe. In this case, I'd expand it to cover the <code>mem::forget</code>; the returned expression has to come along for the ride too. </p>\n\n<p>You will need to ensure that it's <strong>impossible</strong> for a panic to occur between the time that you've moved the first value out and when you forget the array. Otherwise your array <em>will</em> be half-initialized and you <em>will</em> trigger uninitialized behavior. In this case, I like your structure of writing a single statement that creates the resulting tuple; it's harder to accidentally shoehorn in extra code in there. This is also worth adding comments for.</p>\n\n<pre><code>use std::{mem, ptr};\n\nstruct Vec3&lt;T&gt; {\n    underlying_array: [T; 3],\n}\n\nimpl&lt;T&gt; Vec3&lt;T&gt; {\n    fn into_tuple(self) -&gt; (T, T, T) {\n        // This is not safe because I copied it directly from Stack Overflow\n        // without reading the prose associated with it that said I should \n        // write my own rationale for why this is safe.\n        unsafe {\n            let result = (\n                ptr::read(&amp;self.underlying_array[0]),\n                ptr::read(&amp;self.underlying_array[1]),\n                ptr::read(&amp;self.underlying_array[2]),\n            );\n            mem::forget(self);\n            result\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<blockquote>\n  <p>every type is movable</p>\n</blockquote>\n\n<p>Yes, I believe this to be correct. You can <a href=\"https://stackoverflow.com/a/32300133/155423\">make certain values immovable though</a> (search for \"one specific case\".</p>\n\n<blockquote>\n  <p>there's no way to customize move semantics</p>\n</blockquote>\n\n<p>Yes, <a href=\"https://stackoverflow.com/q/37377250/155423\">I believe this to be correct</a>.</p>\n\n<blockquote>\n  <p>Is the Rust compiler smart enough to elide the actual bit copying </p>\n</blockquote>\n\n<p>In general, I would trust the compiler to do so, yes. However, optimization is a tricky thing. Ultimately, only looking at assembly and profiling in your real case will tell you the truth.</p>\n\n<blockquote>\n  <p>is there a faster way to do this?</p>\n</blockquote>\n\n<p>Not that I'm aware of.</p>\n\n<hr>\n\n<p>I'd normally write such code as:</p>\n\n<pre><code>extern crate arrayvec;\nextern crate itertools;\n\nuse arrayvec::ArrayVec;\nuse itertools::Itertools;\n\nstruct Vec3&lt;T&gt; {\n    underlying_array: [T; 3],\n}\n\nimpl&lt;T&gt; Vec3&lt;T&gt; {\n    fn into_tuple(self) -&gt; (T, T, T) {\n        ArrayVec::from(self.underlying_array).into_iter().next_tuple().unwrap()\n    }\n}\n</code></pre>\n\n<p>Investigating the assembly for both implementations, the first one takes 25 x86_64 instructions and the second takes 69. Again, I'd rely on profiling to know which was <em>actually</em> faster, since more instructions doesn't necessarily mean slower.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34406251/155423\">How do I move values out of an array?</a></li>\n<li><a href=\"https://stackoverflow.com/q/38290790/155423\">How do I move String values from an array to a tuple without copying?</a></li>\n</ul>\n"}], "owner": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 337, "favorite_count": 0, "accepted_answer_id": 49349938, "answer_count": 1, "score": 2, "last_activity_date": 1589209455, "creation_date": 1521381312, "last_edit_date": 1521390486, "question_id": 49348654, "link": "https://stackoverflow.com/questions/49348654/method-for-safely-moving-all-elements-out-of-a-generic-array-into-a-tuple-with-m", "title": "Method for safely moving all elements out of a generic array into a tuple with minimal overhead", "body": "<p>In Rust, I want to move all the elements out of a generic fixed-width array so I may then move them individually. The elements may but don't necessarily implement <code>Copy</code>. I've come up with the following solution:</p>\n\n<pre><code>struct Vec3&lt;T&gt; {\n    underlying_array: [T; 3]\n}\n\nimpl&lt;T&gt; Vec3&lt;T&gt; {\n    fn into_tuple(self) -&gt; (T, T, T) {\n        let result = (\n            unsafe { mem::transmute_copy(&amp;self.underlying_array[0]) },\n            unsafe { mem::transmute_copy(&amp;self.underlying_array[1]) },\n            unsafe { mem::transmute_copy(&amp;self.underlying_array[2]) },\n        );\n        mem::forget(self);\n        result\n    }\n}\n</code></pre>\n\n<p>It seems to work, but I want to know if it's safe in the general case. Coming from C++, it's not generally safe to move objects by copying their bit patterns and bypassing the source object's destructor, which I think is essentially what I'm doing here. But in Rust, every type is movable (I think) and there's no way to customize move semantics (I think), so I can't think of any other way Rust would implement moving objects in the un-optimized case than a bitwise copy.</p>\n\n<p>Is moving elements out of an array like this safe? Is there a more idiomatic way to do it? Is the Rust compiler smart enough to elide the actual bit copying <code>transmute_copy</code> does when possible, and if not, is there a faster way to do this?</p>\n\n<p>I think this is <strong>not</strong> a duplicate of <a href=\"https://stackoverflow.com/questions/34406251/how-do-i-move-values-out-of-an-array\">How do I move values out of an array?</a> because in that example, the array elements aren't generic and don't implement <code>Drop</code>. The library in the accepted answer moves individual values out of the array one at a time while keeping the rest of the array usable. Since I want to move all the values at once and don't care about keeping the array, I think this case is different.</p>\n"}, {"tags": ["multithreading", "concurrency", "rust", "concurrent-queue", "rust-crates"], "comments": [{"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 2, "creation_date": 1521376637, "post_id": 49347324, "comment_id": 85695536, "body": "Bounded or unbounded? And what kind of ordering guarantees do you need? Do you care about latency or only throughput?"}, {"owner": {"reputation": 193, "user_id": 5177296, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/74d8a88f1671531b2a6f2ff4218764d4?s=128&d=identicon&r=PG&f=1", "display_name": "asdetrefle", "link": "https://stackoverflow.com/users/5177296/asdetrefle"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 1, "creation_date": 1521379376, "post_id": 49347324, "comment_id": 85696336, "body": "Could be bounded or unbounded. I probably need Acquire-Release ordering if it is what you asked. And i care about latency as well."}], "answers": [{"tags": [], "owner": {"reputation": 2923, "user_id": 783912, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/98e9b626cf9e9e74ae50c190da325a5e?s=128&d=identicon&r=PG&f=1", "display_name": "FlyingFoX", "link": "https://stackoverflow.com/users/783912/flyingfox"}, "is_accepted": false, "score": 2, "last_activity_date": 1521379405, "last_edit_date": 1521379405, "creation_date": 1521378867, "answer_id": 49348276, "question_id": 49347324, "link": "https://stackoverflow.com/questions/49347324/what-is-the-rust-equivalent-to-intels-tbbconcurrent-queue/49348276#49348276", "title": "What is the Rust equivalent to Intel&#39;s tbb::concurrent_queue?", "body": "<p>I think the <a href=\"https://docs.rs/crossbeam/0.3.2/crossbeam/sync/struct.MsQueue.html\" rel=\"nofollow noreferrer\"><code>crossbeam::sync::MsQueue</code></a> and the <a href=\"https://docs.rs/crossbeam/0.3.2/crossbeam/sync/struct.SegQueue.html\" rel=\"nofollow noreferrer\"><code>crossbeam::sync::SegQueue</code></a> from the crossbeam crate have the same capabilities as the <a href=\"https://software.intel.com/en-us/node/506081\" rel=\"nofollow noreferrer\">concurrent_queue</a> you linked.</p>\n\n<p>They are lock free queues that can be used in a non blocking way with <a href=\"https://docs.rs/crossbeam/0.3.2/crossbeam/sync/struct.MsQueue.html#method.push\" rel=\"nofollow noreferrer\"><code>push</code></a> and <a href=\"https://docs.rs/crossbeam/0.3.2/crossbeam/sync/struct.MsQueue.html#method.try_pop\" rel=\"nofollow noreferrer\"><code>try_pop</code></a>.</p>\n\n<p><a href=\"https://aturon.github.io/blog/2015/08/27/epoch/#benchmarks\" rel=\"nofollow noreferrer\">This benchmark</a> indicates that <code>SegQueue</code> is faster than <code>MsQueue</code>, but that may still depend on your use case.</p>\n"}], "owner": {"reputation": 193, "user_id": 5177296, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/74d8a88f1671531b2a6f2ff4218764d4?s=128&d=identicon&r=PG&f=1", "display_name": "asdetrefle", "link": "https://stackoverflow.com/users/5177296/asdetrefle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 902, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1521380890, "creation_date": 1521372440, "last_edit_date": 1521380890, "question_id": 49347324, "link": "https://stackoverflow.com/questions/49347324/what-is-the-rust-equivalent-to-intels-tbbconcurrent-queue", "title": "What is the Rust equivalent to Intel&#39;s tbb::concurrent_queue?", "body": "<p>I am looking for an equivalent of the <a href=\"https://software.intel.com/en-us/node/506081\" rel=\"nofollow noreferrer\"><code>concurrent_queue</code></a> from Intel's <a href=\"https://www.threadingbuildingblocks.org/\" rel=\"nofollow noreferrer\">tbb</a> module in Rust. I have found some crates:</p>\n\n<ol>\n<li><p><a href=\"https://github.com/schets/multiqueue\" rel=\"nofollow noreferrer\">multiqueue</a></p></li>\n<li><p><a href=\"https://github.com/carllerche/two-lock-queue\" rel=\"nofollow noreferrer\">two-lock-queue</a></p></li>\n<li><p><a href=\"https://github.com/crossbeam-rs/crossbeam-deque\" rel=\"nofollow noreferrer\">crossbeam-deque</a></p></li>\n</ol>\n\n<p>and even</p>\n\n<ol start=\"4\">\n<li><p><a href=\"https://github.com/carllerche/futures-pool\" rel=\"nofollow noreferrer\">futures-pool</a></p></li>\n<li><p><a href=\"https://github.com/carllerche/thread-pool\" rel=\"nofollow noreferrer\">thread-pool</a></p></li>\n</ol>\n\n<p>I feel like they are all doing similar things, however in their docs it seems that they are using different algorithms for the implementation.</p>\n\n<p>Though I don't know a lot about programming in C++, I am pretty sure that tbb's <code>concurrent_queue</code> is a very fast MPMC queue implementation. You cannot be close to that performance if you only wrap a queue container in a <code>Mutex</code> (which is tested by one of my friends).</p>\n\n<p>Since the efficiency (both latency and throughput) is the main thing I care about, what should I use in Rust? The queue could be either bounded or unbounded and I probably need Acquire-Release ordering.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 3, "creation_date": 1521348856, "post_id": 49344054, "comment_id": 85689280, "body": "Why did you make your own <code>std</code> library?"}, {"owner": {"reputation": 3648, "user_id": 1118660, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/aaef8abaea3dc9d8ad119ceba8900aac?s=128&d=identicon&r=PG", "display_name": "Jason Watkins", "link": "https://stackoverflow.com/users/1118660/jason-watkins"}, "edited": false, "score": 0, "creation_date": 1521349998, "post_id": 49344054, "comment_id": 85689463, "body": "Can you clarify &quot;with crates dependencies&quot;? Are you saying you want to compile other crates using your standard library, or that you want to compile your code with your standard library and other crates with the regular standard library, or something else?"}, {"owner": {"reputation": 97, "user_id": 9510521, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d442cccf3b6689beefaef2bc0c555a3?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/9510521/david"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1521374424, "post_id": 49344054, "comment_id": 85694881, "body": "I want to compile the code with my standard library <code>my_std</code>, including the dependencies (which may use std library). @FrancisGagn&#233;: Because the std library might not be compatible within the environment I will be running the Rust binary (different sets of instructions)."}], "answers": [{"tags": [], "owner": {"reputation": 3648, "user_id": 1118660, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/aaef8abaea3dc9d8ad119ceba8900aac?s=128&d=identicon&r=PG", "display_name": "Jason Watkins", "link": "https://stackoverflow.com/users/1118660/jason-watkins"}, "is_accepted": true, "score": 4, "last_activity_date": 1521349052, "creation_date": 1521349052, "answer_id": 49344589, "question_id": 49344054, "link": "https://stackoverflow.com/questions/49344054/how-do-i-avoid-import-collisions-when-importing-my-own-standard-library/49344589#49344589", "title": "How do I avoid import collisions when importing my own standard library?", "body": "<p>You can compile your code without the Rust standard library by using <a href=\"https://doc.rust-lang.org/book/first-edition/using-rust-without-the-standard-library.html\" rel=\"nofollow noreferrer\"><code>#![no_std]</code></a> attribute in your crate root. Note that there are some caveats to doing this with an executable (as opposed to a library), and you will need to <a href=\"https://doc.rust-lang.org/unstable-book/language-features/lang-items.html#using-libc\" rel=\"nofollow noreferrer\">manually include libc</a> for a binary.</p>\n"}], "owner": {"reputation": 97, "user_id": 9510521, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d442cccf3b6689beefaef2bc0c555a3?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/9510521/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 49344589, "answer_count": 1, "score": 3, "last_activity_date": 1521380540, "creation_date": 1521341564, "last_edit_date": 1521380540, "question_id": 49344054, "link": "https://stackoverflow.com/questions/49344054/how-do-i-avoid-import-collisions-when-importing-my-own-standard-library", "title": "How do I avoid import collisions when importing my own standard library?", "body": "<p>I am trying to import my own <code>std</code> library, but when I am compiling with crates dependencies I have this issue:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: duplicate lang item in crate `std`: `f32`.\n  |\n  = note: first defined in crate `my_std`.\n\nerror: duplicate lang item in crate `std`: `f64`.\n  |\n  = note: first defined in crate `my_std`.\n\nerror: duplicate lang item in crate `std`: `panic_fmt`.\n  |\n  = note: first defined in crate `my_std`.\n</code></pre>\n\n<p>I tried to overwrite the library by writing <code>extern crate my_std as std</code></p>\n\n<p>What would be the easy way to fix that - and not modify this for all dependencies?</p>\n"}, {"tags": ["cuda", "linker", "rust", "ffi", "nvcc"], "comments": [{"owner": {"reputation": 66945, "user_id": 681865, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77320b8ddf13954ffb22aa22965d465e?s=128&d=identicon&r=PG&f=1", "display_name": "talonmies", "link": "https://stackoverflow.com/users/681865/talonmies"}, "edited": false, "score": 0, "creation_date": 1521328944, "post_id": 49342835, "comment_id": 85686028, "body": "Is your question how to change the compilation arguments pass to nvcc by rust?"}, {"owner": {"reputation": 315, "user_id": 8466510, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-zru5XpowwEw/AAAAAAAAAAI/AAAAAAAAAE0/_klqoLMQYI0/photo.jpg?sz=128", "display_name": "Xavier P", "link": "https://stackoverflow.com/users/8466510/xavier-p"}, "reply_to_user": {"reputation": 66945, "user_id": 681865, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77320b8ddf13954ffb22aa22965d465e?s=128&d=identicon&r=PG&f=1", "display_name": "talonmies", "link": "https://stackoverflow.com/users/681865/talonmies"}, "edited": false, "score": 0, "creation_date": 1521329105, "post_id": 49342835, "comment_id": 85686064, "body": "Yes! I could add arguments using .flag(&quot;...&quot;), but I couldn&#39;t change the -ccbin argument"}, {"owner": {"reputation": 66945, "user_id": 681865, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77320b8ddf13954ffb22aa22965d465e?s=128&d=identicon&r=PG&f=1", "display_name": "talonmies", "link": "https://stackoverflow.com/users/681865/talonmies"}, "edited": false, "score": 2, "creation_date": 1521329157, "post_id": 49342835, "comment_id": 85686080, "body": "So perhaps you could edit your question title and tags to reflect what you are asking"}], "answers": [{"comments": [{"owner": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "edited": false, "score": 0, "creation_date": 1546044225, "post_id": 49343806, "comment_id": 94769611, "body": "Is there a way to do this without having to write out the environment var every time, or putting it in my bash profile?  I&#39;d like to just be able to run &quot;cargo run&quot;, not &quot;CXX=/opt/cuda/bin cargo run&quot; every time"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1825, "user_id": 2016305, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/lwFqE.jpg?s=128&g=1", "display_name": "vcapra1", "link": "https://stackoverflow.com/users/2016305/vcapra1"}, "edited": false, "score": 0, "creation_date": 1546099413, "post_id": 49343806, "comment_id": 94779720, "body": "@vcapra1 you&#39;ll have to look at the <a href=\"https://docs.rs/cc/\" rel=\"nofollow noreferrer\">cc docs</a> to see if there&#39;s a way. Considering that it&#39;s an <i>environment</i> variable and will likely be different on every platform or machine, hardcoding any value seems unlikely to  be a good idea. You could also try <a href=\"https://doc.rust-lang.org/std/env/fn.set_var.html\" rel=\"nofollow noreferrer\">setting the environment variable</a> in your build script and see if that is picked up."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1521338263, "creation_date": 1521338263, "answer_id": 49343806, "question_id": 49342835, "link": "https://stackoverflow.com/questions/49342835/changing-the-compilation-arguments-passed-to-nvcc-by-rust-using-cc/49343806#49343806", "title": "Changing the compilation arguments passed to nvcc by Rust using cc", "body": "<p>You can set the <code>CXX</code> environment variable to whatever you want.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>CXX=this-is-my-cpp-compiler cargo build\n</code></pre>\n\n<p>This will be used as the argument to <code>ccbin</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"nvcc\" \"-ccbin=this-is-my-cpp-compiler\" \"-O0\" \"-Xcompiler\" \"-ffunction-sections\" \"-Xcompiler\" \"-fdata-sections\" \"-Xcompiler\" \"-fPIC\" \"-G\" \"-Xcompiler\" \"-g\" \"-m64\" \"-Xcompiler\" \"-Wall\" \"-Xcompiler\" \"-Wextra\" \"-cudart=shared\" \"-gencode\" \"arch=compute_61,code=sm_61\" \"-o\" \"/private/tmp/c/target/debug/build/c-67ec4fdcff2f35d1/out/kernel/kernel.o\" \"-c\" \"kernel/kernel.cu\"\n</code></pre>\n"}], "owner": {"reputation": 315, "user_id": 8466510, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-zru5XpowwEw/AAAAAAAAAAI/AAAAAAAAAE0/_klqoLMQYI0/photo.jpg?sz=128", "display_name": "Xavier P", "link": "https://stackoverflow.com/users/8466510/xavier-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 399, "favorite_count": 0, "accepted_answer_id": 49343806, "answer_count": 1, "score": 1, "last_activity_date": 1521338263, "creation_date": 1521328285, "last_edit_date": 1521337033, "question_id": 49342835, "link": "https://stackoverflow.com/questions/49342835/changing-the-compilation-arguments-passed-to-nvcc-by-rust-using-cc", "title": "Changing the compilation arguments passed to nvcc by Rust using cc", "body": "<p>I am using <code>cc</code> to link a CUDA kernel written in C to Rust.\nHere is my build.rs file:</p>\n\n<pre><code>extern crate cc;\n\nfn main() {\n    cc::Build::new()\n        .cuda(true)\n        .flag(\"-cudart=shared\")\n        .flag(\"-gencode\")\n        .flag(\"arch=compute_61,code=sm_61\")\n        .file(\"kernel/kernel.cu\")\n        .compile(\"kernel/kernel.a\");\n}\n</code></pre>\n\n<p>I have this error :</p>\n\n<blockquote>\n  <p>running: \"nvcc\" \"-ccbin=c++\" \"-O0\" \"-Xcompiler\" \"-ffunction-sections\"\n  \"-Xcompiler\" \"-fdata-sections\" \"-Xcompiler\" \"-fPIC\" \"-G\" \"-Xcompiler\"\n  \"-g\" \"-m64\" \"-Xcompiler\" \"-Wall\" \"-Xcompiler\" \"-Wextra\"\n  \"-cudart=shared\" \"-gencode\" \"arch=compute_61,code=sm_61\" \"-o\"\n  \"/home/ltei/Dev/Workspaces/rust_cudnn/target/debug/build/rust_cudnn-df924982e63c2363/out/kernel/kernel.o\"\n  \"-c\" \"kernel/kernel.cu\" cargo:warning=In file included from\n  /usr/include/cuda_runtime.h:78:0, cargo:warning=                 from\n  :0: cargo:warning=/usr/include/host_config.h:119:2:\n  error: #error -- unsupported GNU version! gcc versions later than 5\n  are not supported! cargo:warning= #error -- unsupported GNU version!\n  gcc versions later than 5 are not supported! cargo:warning=  ^~~~~\n  exit code: 1</p>\n</blockquote>\n\n<p>I know that it would work if I could change the <code>-ccbin=c++</code> in the command into <code>-ccbin=clang-3.8</code>, but I have no idea how to do it.</p>\n\n<p>I could also install another version of GCC, but I'd prefer the first solution.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1521387216, "last_edit_date": 1521387216, "creation_date": 1521336693, "answer_id": 49343667, "question_id": 49342806, "link": "https://stackoverflow.com/questions/49342806/what-are-the-possible-types-values-for-the-seedablerng-seed/49343667#49343667", "title": "What are the possible types/values for the SeedableRng Seed?", "body": "<p><code>Seed</code> can be any type that the implementer of the trait decides, it's a generic type defined as part of the trait itself:</p>\n\n<pre><code>pub trait SeedableRng&lt;Seed&gt;: Rng {\n//                    ^^^^\n    fn reseed(&amp;mut self, _: Seed);\n    fn from_seed(seed: Seed) -&gt; Self;\n}\n</code></pre>\n\n<p><a href=\"https://docs.rs/rand/0.4.2/rand/struct.Isaac64Rng.html#impl-SeedableRng%3C&amp;&#39;a%20[u64]%3E\" rel=\"nofollow noreferrer\"><code>Isaac64Rng</code></a> uses a slice of <code>u64</code>:</p>\n\n<pre><code>impl&lt;'a&gt; SeedableRng&lt;&amp;'a [u64]&gt; for Isaac64Rng\n//                   ^^^^^^^^^\n</code></pre>\n\n<p><a href=\"https://docs.rs/rand/0.4.2/rand/struct.XorShiftRng.html#impl-SeedableRng%3C[u32;%204]%3E\" rel=\"nofollow noreferrer\"><code>XorShiftRng</code></a> uses exactly 4 <code>u32</code>:</p>\n\n<pre><code>impl SeedableRng&lt;[u32; 4]&gt; for XorShiftRng\n//               ^^^^^^^^\n</code></pre>\n\n<p>You can see <a href=\"https://docs.rs/rand/0.4.2/rand/trait.SeedableRng.html#implementors\" rel=\"nofollow noreferrer\">all the implementers of <code>SeedableRng</code> from inside the rand crate in its documentation</a>:</p>\n\n<pre><code>impl&lt;S, R: SeedableRng&lt;S&gt;, Rsdr: Reseeder&lt;R&gt; + Default&gt; SeedableRng&lt;(Rsdr, S)&gt; for ReseedingRng&lt;R, Rsdr&gt;\nimpl&lt;'a&gt; SeedableRng&lt;&amp;'a [u32]&gt; for ChaChaRng\nimpl&lt;'a&gt; SeedableRng&lt;&amp;'a [u32]&gt; for IsaacRng\nimpl&lt;'a&gt; SeedableRng&lt;&amp;'a [u64]&gt; for Isaac64Rng\nimpl SeedableRng&lt;[u32; 4]&gt; for XorShiftRng\nimpl&lt;'a&gt; SeedableRng&lt;&amp;'a [usize]&gt; for StdRng\n</code></pre>\n\n<p>It's also possible for other crates to define random number generators with different seed types.</p>\n"}], "owner": {"reputation": 2144, "user_id": 1642057, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b845e36d3a3560fae824cf6d536f849c?s=128&d=identicon&r=PG", "display_name": "Roger Allen", "link": "https://stackoverflow.com/users/1642057/roger-allen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 712, "favorite_count": 0, "accepted_answer_id": 49343667, "answer_count": 1, "score": 5, "last_activity_date": 1521387216, "creation_date": 1521328058, "last_edit_date": 1521336354, "question_id": 49342806, "link": "https://stackoverflow.com/questions/49342806/what-are-the-possible-types-values-for-the-seedablerng-seed", "title": "What are the possible types/values for the SeedableRng Seed?", "body": "<p><code>SeedableRng</code> has <a href=\"https://docs.rs/rand/0.4.2/rand/trait.SeedableRng.html\" rel=\"noreferrer\">an example</a>, but there is no explanation for what the seed is.  <a href=\"https://docs.rs/rand/0.4.2/rand/trait.SeedableRng.html?search=Seed\" rel=\"noreferrer\">Searching for the <code>Seed</code> type</a> does not provide details.  Searching in the GitHub source directory also did not clear this up for me.</p>\n\n<pre><code>let seed: &amp;[_] = &amp;[1, 2, 3, 4];\nlet mut rng: StdRng = SeedableRng::from_seed(seed);\n</code></pre>\n\n<p>Does <code>seed</code> have to be a four element array of integers?  Why? Can it be anything else?  </p>\n"}, {"tags": ["3d", "rust", "linear-algebra", "quaternions"], "answers": [{"tags": [], "owner": {"reputation": 551, "user_id": 1296559, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/b830c4f4d495b0c943afb87827bb77c8?s=128&d=identicon&r=PG", "display_name": "Defcronyke", "link": "https://stackoverflow.com/users/1296559/defcronyke"}, "is_accepted": true, "score": 3, "last_activity_date": 1521325361, "creation_date": 1521325361, "answer_id": 49342482, "question_id": 49342163, "link": "https://stackoverflow.com/questions/49342163/quaternion-rotation-causes-scene-to-stretch/49342482#49342482", "title": "Quaternion rotation causes scene to stretch", "body": "<p>The reason for the stretching was because I was combining the initial and subsequent quaternions incorrectly. You can't just add them together, but the * operator works to concatenate rotations.</p>\n\n<p>So I changed the mouse input portion of the code to this and it works:</p>\n\n<pre><code>let diff_x = position.0 - last_x;\nif diff_x &gt; 0.0 {\n    // println!(\"turn right\");\n    let rotation_scalar = ((rotation_angle + rotation_speed) / 2.0 as f32).cos();\n    let rotation_vec = Vector3::new(\n        rotation_axis.x * ((rotation_angle + rotation_speed) / 2.0 as f32).sin(),\n        rotation_axis.y * ((rotation_angle + rotation_speed) / 2.0 as f32).sin(),\n        rotation_axis.z * ((rotation_angle + rotation_speed) / 2.0 as f32).sin());\n    let rotation_quat2 = Quaternion::from_sv(rotation_scalar, rotation_vec);\n    rotation_quat = rotation_quat * rotation_quat2;\n} else if diff_x &lt; 0.0 {\n    // println!(\"turn left\");\n    let rotation_scalar = ((rotation_angle - rotation_speed) / 2.0 as f32).cos();\n    let rotation_vec = Vector3::new(\n        rotation_axis.x * ((rotation_angle - rotation_speed) / 2.0 as f32).sin(),\n        rotation_axis.y * ((rotation_angle - rotation_speed) / 2.0 as f32).sin(),\n        rotation_axis.z * ((rotation_angle - rotation_speed) / 2.0 as f32).sin());\n    let rotation_quat2 = Quaternion::from_sv(rotation_scalar, rotation_vec);\n    rotation_quat = rotation_quat * rotation_quat2;\n}\nlast_x = position.0;\n</code></pre>\n"}], "owner": {"reputation": 551, "user_id": 1296559, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/b830c4f4d495b0c943afb87827bb77c8?s=128&d=identicon&r=PG", "display_name": "Defcronyke", "link": "https://stackoverflow.com/users/1296559/defcronyke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "accepted_answer_id": 49342482, "answer_count": 1, "score": 3, "last_activity_date": 1521325361, "creation_date": 1521322711, "last_edit_date": 1521323747, "question_id": 49342163, "link": "https://stackoverflow.com/questions/49342163/quaternion-rotation-causes-scene-to-stretch", "title": "Quaternion rotation causes scene to stretch", "body": "<p>I have adapted a <a href=\"https://github.com/vulkano-rs/vulkano\" rel=\"nofollow noreferrer\">Vulkano</a>, <a href=\"https://github.com/tomaka/vulkano-examples/tree/gltf/gltf\" rel=\"nofollow noreferrer\">GLTF viewer example</a>, to allow for keyboard and mouse input, to apply translation and rotation to the scene. The translation works fine, but the rotation causes the objects in the scene to move right up to the camera and stretch out until they look like garbage, as the rotation approaches between 90 - 180 degrees. </p>\n\n<p>This is what the scene looks like before rotation: </p>\n\n<p><a href=\"https://i.stack.imgur.com/TjZjA.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/TjZjA.png\" alt=\"This is what the scene looks like before rotation\"></a>. </p>\n\n<p>And this is when rotation is at approx 90 degrees: </p>\n\n<p><a href=\"https://i.stack.imgur.com/OqeEo.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/OqeEo.png\" alt=\"And this is when rotation is at approx 90 degrees\"></a>.</p>\n\n<p>I'm using <a href=\"https://github.com/brendanzab/cgmath\" rel=\"nofollow noreferrer\">cgmath</a> <a href=\"https://docs.rs/cgmath/0.16.0/cgmath/struct.Quaternion.html\" rel=\"nofollow noreferrer\">Quaternions</a> for the rotation. I haven't used quaternions before, so I'm wondering if anyone could tell me if I'm using them correctly, I suspect this is where the problem lies.</p>\n\n<p>This is how I'm creating the initial quaternion, using an equation I found <a href=\"http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-17-quaternions/\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre><code>let rotation_speed_deg = 0.01;\nlet rotation_speed = rotation_speed_deg * f32::consts::PI / 180.0;\nlet rotation_angle_deg = 0.0;\nlet rotation_angle = rotation_angle_deg * f32::consts::PI / 180.0;\nlet rotation_axis = Vector3::new(0.0, 1.0, 0.0);\nlet rotation_scalar = (rotation_angle / 2.0 as f32).cos();\nlet rotation_vec = Vector3::new(\n    rotation_axis.x * (rotation_angle / 2.0 as f32).sin(),\n    rotation_axis.y * (rotation_angle / 2.0 as f32).sin(),\n    rotation_axis.z * (rotation_angle / 2.0 as f32).sin());\nlet mut rotation_quat = Quaternion::from_sv(rotation_scalar, rotation_vec);\n</code></pre>\n\n<p>Then I'm modifying the quaternion to apply a rotation on mouse input like this:</p>\n\n<pre><code>let diff_x = position.0 - last_x;\nif diff_x &gt; 0.0 {\n    // println!(\"turn right\");\n    rotation_quat.v.x += rotation_axis.x * ((rotation_angle + rotation_speed) / 2.0 as f32).sin();\n    rotation_quat.v.y += rotation_axis.y * ((rotation_angle + rotation_speed) / 2.0 as f32).sin();\n    rotation_quat.v.z += rotation_axis.z * ((rotation_angle + rotation_speed) / 2.0 as f32).sin();\n    rotation_quat.s += ((rotation_angle + rotation_speed) / 2.0 as f32).cos();\n} else if diff_x &lt; 0.0 {\n    // println!(\"turn left\");\n    rotation_quat.v.x += rotation_axis.x * ((rotation_angle - rotation_speed) / 2.0 as f32).sin();\n    rotation_quat.v.y += rotation_axis.y * ((rotation_angle - rotation_speed) / 2.0 as f32).sin();\n    rotation_quat.v.z += rotation_axis.z * ((rotation_angle - rotation_speed) / 2.0 as f32).sin();\n    rotation_quat.s += ((rotation_angle - rotation_speed) / 2.0 as f32).cos();\n}\n\nlast_x = position.0;\n</code></pre>\n\n<p>To apply the translation and rotation, I'm multiplying my matrices like this:</p>\n\n<pre><code>let fovy = Rad(60.0 * f32::consts::PI / 180.0);\nlet mut aspect = viewport_dimensions[0] as f32 / viewport_dimensions[1] as f32;\nlet near = 0.1;\nlet far = 100.0;\nlet mut proj = perspective(fovy, aspect, near, far);\nlet view = Matrix4::look_at(Point3::new(0.0, 1.0, -5.0), Point3::new(0.0, 1.0, 0.0), Vector3::new(0.0, -1.0, 0.0));\nlet trans_mat = Matrix4::from_translation(trans);\nlet rot_mat = Matrix4::from(rot);\nbuilder = self.draw_node(node.index(), proj * view * trans_mat * rot_mat, viewport_dimensions, builder);\n</code></pre>\n\n<p>So you can see, I'm multiplying proj * view * trans_mat * rot_mat... Maybe that's the wrong order? </p>\n\n<p>Any help would be much appreciated. I don't have a strong math background, and have been trying to learn CG for years on my own, so I don't know where else to turn. Some reading resources about this type of stuff would be appreciated too.</p>\n"}, {"tags": ["generics", "reference", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "edited": false, "score": 0, "creation_date": 1521321044, "post_id": 49341863, "comment_id": 85683994, "body": "Ah, I didn&#39;t know &quot;HRTBs&quot; were a thing. They do exactly what I was hoping for; thank you! Also, is there a name for that <code>Output = R</code> syntax? Even in cases where it&#39;s not required like this, it&#39;ll seriously clean up some of my generic code with complicated return types and I want to read more about it."}, {"owner": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "edited": false, "score": 0, "creation_date": 1521321181, "post_id": 49341863, "comment_id": 85684037, "body": "Also, note, the non-reference version requires <code>T: Copy</code> but my original requirements explicitly stated I wanted to support non-<code>Copy</code> types."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "edited": false, "score": 0, "creation_date": 1521321184, "post_id": 49341863, "comment_id": 85684038, "body": "@JoBates hmm. I think I&#39;d just say that it&#39;s &quot;specifying the associated type&quot;. The downside of such a syntax is that it&#39;s kind of a &quot;lie&quot; in this case. The caller of the function cannot actually pass a second generic type to constrain the call, like you would in a situation like <code>Iterator::collect</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "edited": false, "score": 0, "creation_date": 1521321342, "post_id": 49341863, "comment_id": 85684084, "body": "@JoBates that&#39;s not a real &quot;requirement&quot; in this case, see my last update. Different generics are happening here."}, {"owner": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "edited": false, "score": 0, "creation_date": 1521321763, "post_id": 49341863, "comment_id": 85684209, "body": "oh, of course; you&#39;re right. I&#39;m in a different frame of mind because in the code I&#39;m really working on, the argument type (reference or not) is a <code>SpecificGenericStruct&lt;T&gt;</code>, not simply <code>T</code>. I was just trying to remove extraneous details from the core question."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1521321318, "last_edit_date": 1521321318, "creation_date": 1521320352, "answer_id": 49341863, "question_id": 49341520, "link": "https://stackoverflow.com/questions/49341520/how-to-specify-lifetime-bounds-for-a-closure-involving-references-to-intermediat/49341863#49341863", "title": "How to specify lifetime bounds for a closure involving references to intermediate local variables?", "body": "<p>Buckle up...</p>\n\n<pre><code>use std::ops::{Add, Mul};\n\nfn double_and_square&lt;'a, T, R&gt;(x: &amp;'a T) -&gt; R\nwhere\n    &amp;'a T: Add,\n    for&lt;'b&gt; &amp;'b &lt;&amp;'a T as Add&gt;::Output: Mul&lt;Output = R&gt;,\n{\n    let t = x + x;\n    &amp;t * &amp;t\n}\n</code></pre>\n\n<p>Easy enough, right? ;-)</p>\n\n<p>Let's take it step by step...</p>\n\n<ol>\n<li><p>You wish to take in a reference to a type, but the <em>reference</em> needs to implement <code>Add</code>. <code>where</code> clauses let you write complex types on either side of the <code>:</code>, so we use <code>&amp;'a T: Add</code>.</p></li>\n<li><p>This will return some value that we take another reference to. However, the <em>caller</em> of <code>double_and_square</code> cannot specify the lifetime, since it only exists inside the function. This means we need to use a <em>higher-ranked trait bound</em>: <code>for &lt;'b&gt;</code>.</p></li>\n<li><p>We have to use the type of the output of the <code>Add</code> operation, say that it implements <code>Mul</code>, and the output type is the generic <code>R</code>.</p></li>\n</ol>\n\n<hr>\n\n<p>I'd recommend not taking references in the original function as it's way easier to understand:</p>\n\n<pre><code>fn double_and_square&lt;T, R&gt;(x: T) -&gt; R\nwhere\n    T: Add + Copy,\n    for&lt;'a&gt; &amp;'a T::Output: Mul&lt;Output = R&gt;,\n{\n    let t = x + x;\n    &amp;t * &amp;t\n}\n</code></pre>\n\n<p><code>&amp;Foo</code> <em>is</em> a separate type from <code>Foo</code> and can be passed as the concrete type of <code>T</code>, so this should be able to be used in any place the original was, and probably usable in even more cases.</p>\n\n<blockquote>\n  <p>I want it to work on types where <code>T</code> is non-<code>Copy</code></p>\n</blockquote>\n\n<p>Immutable references to types are always <code>Copy</code>, even if the type itself doesn't implement <code>Copy</code>. Thus, you can call this function with e.g. <code>T = i32</code> <strong>or</strong> a <code>T = &amp;NonCopy</code>. The original case that <em>only</em> accepted references would only accept the second one.</p>\n\n<p>In an ideal world, you'd be able to avoid the generic type <code>R</code> and just say <code>&lt;...something...&gt;::Output</code>, but as far as I know that's not currently possible.</p>\n"}], "owner": {"reputation": 1612, "user_id": 1195206, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2ab66abdb13bc2575a785248776ea7ee?s=128&d=identicon&r=PG&f=1", "display_name": "jbatez", "link": "https://stackoverflow.com/users/1195206/jbatez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 49341863, "answer_count": 1, "score": 5, "last_activity_date": 1535405706, "creation_date": 1521317966, "last_edit_date": 1535405706, "question_id": 49341520, "link": "https://stackoverflow.com/questions/49341520/how-to-specify-lifetime-bounds-for-a-closure-involving-references-to-intermediat", "title": "How to specify lifetime bounds for a closure involving references to intermediate local variables?", "body": "<p>I'm trying to write a function like the following in Rust:</p>\n\n<pre><code>fn double_and_square&lt;'a, T&gt;(x: &amp;'a T) -&gt; /* whatever the output type of `&amp;t * &amp;t` is */ {\n    let t = x + x;\n    &amp;t * &amp;t\n}\n</code></pre>\n\n<p>I want it to work on types where <code>T</code> is non-<code>Copy</code>. I need to specify not only that <code>&amp;'a T</code> implements <code>Add</code> (easy), but also that a reference to its output type with the lifetime of local variable <code>t</code> implements <code>Mul</code>.</p>\n\n<p><strong>Attempt #1</strong> (no lifetime specified for the intermediate type):</p>\n\n<pre><code>fn double_and_square&lt;'a, T&gt;(x: &amp;'a T) -&gt; &lt;&amp;&lt;&amp;'a T as Add&gt;::Output as Mul&gt;::Output\nwhere\n    &amp;'a T: Add,\n    &amp;&lt;&amp;'a T as Add&gt;::Output: Mul,\n{\n    let t = x + x;\n    &amp;t * &amp;t\n}\n</code></pre>\n\n<p>Results in the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:6:5\n  |\n6 |     &amp;&lt;&amp;'a T as Add&gt;::Output: Mul,\n  |     ^ expected lifetime parameter\n</code></pre>\n\n<p><strong>Attempt #2</strong> (alright, I'll add a lifetime specifier):</p>\n\n<pre><code>fn double_and_square&lt;'a, 'b, T&gt;(x: &amp;'a T) -&gt; &lt;&amp;'b &lt;&amp;'a T as Add&gt;::Output as Mul&gt;::Output\nwhere\n    &amp;'a T: Add,\n    &amp;'b &lt;&amp;'a T as Add&gt;::Output: Mul,\n{\n    let t = x + x;\n    &amp;t * &amp;t\n}\n</code></pre>\n\n<p>Results in the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n --&gt; src/main.rs:8:13\n  |\n8 |     let t = x + x;\n  |             ^\n  |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the function body at 3:1...\n --&gt; src/main.rs:3:1\n  |\n3 | / fn double_and_square&lt;'a, 'b, T&gt;(x: &amp;'a T) -&gt; &lt;&amp;'b &lt;&amp;'a T as Add&gt;::Output as Mul&gt;::Output\n4 | | where\n5 | |     &amp;'a T: Add,\n6 | |     &amp;'b &lt;&amp;'a T as Add&gt;::Output: Mul,\n... |\n9 | |     &amp;t * &amp;t\n10| | }\n  | |_^\nnote: ...so that expression is assignable (expected &amp;T, found &amp;'a T)\n --&gt; src/main.rs:8:13\n  |\n8 |     let t = x + x;\n  |             ^\nnote: but, the lifetime must be valid for the lifetime 'b as defined on the function body at 3:1...\n --&gt; src/main.rs:3:1\n  |\n3 | / fn double_and_square&lt;'a, 'b, T&gt;(x: &amp;'a T) -&gt; &lt;&amp;'b &lt;&amp;'a T as Add&gt;::Output as Mul&gt;::Output\n4 | | where\n5 | |     &amp;'a T: Add,\n6 | |     &amp;'b &lt;&amp;'a T as Add&gt;::Output: Mul,\n... |\n9 | |     &amp;t * &amp;t\n10| | }\n  | |_^\nnote: ...so that the type `&lt;&amp;T as std::ops::Add&lt;&amp;'a T&gt;&gt;::Output` is not borrowed for too long\n --&gt; src/main.rs:9:10\n  |\n9 |     &amp;t * &amp;t\n  |          ^^\n\nerror[E0490]: a value of type `&lt;&amp;T as std::ops::Add&lt;&amp;'a T&gt;&gt;::Output` is borrowed for too long\n --&gt; src/main.rs:9:10\n  |\n9 |     &amp;t * &amp;t\n  |          ^^\n  |\nnote: the type is valid for the lifetime 'b as defined on the function body at 3:1\n --&gt; src/main.rs:3:1\n  |\n3 | / fn double_and_square&lt;'a, 'b, T&gt;(x: &amp;'a T) -&gt; &lt;&amp;'b &lt;&amp;'a T as Add&gt;::Output as Mul&gt;::Output\n4 | | where\n5 | |     &amp;'a T: Add,\n6 | |     &amp;'b &lt;&amp;'a T as Add&gt;::Output: Mul,\n... |\n9 | |     &amp;t * &amp;t\n10| | }\n  | |_^\nnote: but the borrow lasts for the lifetime 'a as defined on the function body at 3:1\n --&gt; src/main.rs:3:1\n  |\n3 | / fn double_and_square&lt;'a, 'b, T&gt;(x: &amp;'a T) -&gt; &lt;&amp;'b &lt;&amp;'a T as Add&gt;::Output as Mul&gt;::Output\n4 | | where\n5 | |     &amp;'a T: Add,\n6 | |     &amp;'b &lt;&amp;'a T as Add&gt;::Output: Mul,\n... |\n9 | |     &amp;t * &amp;t\n10| | }\n  | |_^\n</code></pre>\n\n<p>The way that I read <code>the lifetime must be valid for the lifetime 'b as defined on the function body</code> tells me the compiler thinks <code>'b</code> is supposed to live as long as or longer than the whole function body, whereas I just want it to mean \"any lifetime\".</p>\n\n<p>Is what I'm trying to do even possible in Rust? If not, are there any proposed changes I should watch that will make it possible?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521320676, "post_id": 49340618, "comment_id": 85683880, "body": "<a href=\"https://stackoverflow.com/q/28512394/155423\">How to lookup from and insert into a HashMap efficiently?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1672, "user_id": 1115876, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/dee3033759b820a3df9f7437d3a9fe31?s=128&d=identicon&r=PG", "display_name": "QuinnFreedman", "link": "https://stackoverflow.com/users/1115876/quinnfreedman"}, "is_accepted": false, "score": 0, "last_activity_date": 1521320738, "last_edit_date": 1521320738, "creation_date": 1521313169, "answer_id": 49340756, "question_id": 49340618, "link": "https://stackoverflow.com/questions/49340618/idiomatic-way-to-cache-resources-in-rust/49340756#49340756", "title": "Idiomatic way to cache resources in Rust", "body": "<p>I figured out that returning a borrow was only giving me an error because I passed in two borrowed references to the function and it didn't know which one the return was borrowing from. Adding lifetime parameters made it work. My function now looks like this:</p>\n\n<pre><code>pub fn load_spritesheet&lt;'a&gt;(\n    spritesheets: &amp;'a mut HashMap&lt;String, Texture&gt;,\n    file: &amp;String,\n) -&gt; Option&lt;&amp;'a Texture&gt; {\n    if !spritesheets.contains_key(file) {\n        if let Some(texture) = load_texture(\n            &amp;vec![\"dynamic_entities\", \"spritesheets\"],\n            file.as_str(),\n            &amp;TextureSettings::new(),\n        ) {\n            spritesheets.insert(file.clone(), texture);\n        }\n    }\n    spritesheets.get(file)\n}\n</code></pre>\n\n<p>As for the reference in the struct, I just implemented a getter method that calls <code>load_spritesheet</code> every frame. Not ideal, but works for now.</p>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 6, "last_activity_date": 1521320616, "last_edit_date": 1521320616, "creation_date": 1521313429, "answer_id": 49340789, "question_id": 49340618, "link": "https://stackoverflow.com/questions/49340618/idiomatic-way-to-cache-resources-in-rust/49340789#49340789", "title": "Idiomatic way to cache resources in Rust", "body": "<p>This is what <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html\" rel=\"noreferrer\"><code>std::collections::hash_map::Entry</code></a> is for:</p>\n\n<blockquote>\n  <p>A view into a single entry in a map, which may either be vacant or occupied.</p>\n</blockquote>\n\n<pre><code>match hashmap_cache.entry(key) {\n    Entry::Vacant(entry) =&gt; *entry.insert(value),\n    Entry::Occupied(entry) =&gt; *entry.get(),\n}\n</code></pre>\n\n<p>If the entry is vacant, the value is inserted into the cache, otherwise the value is received from the cache.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=8c751400f6a815287b48b1efcbe77b68&amp;version=stable\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 1672, "user_id": 1115876, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/dee3033759b820a3df9f7437d3a9fe31?s=128&d=identicon&r=PG", "display_name": "QuinnFreedman", "link": "https://stackoverflow.com/users/1115876/quinnfreedman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1026, "favorite_count": 2, "accepted_answer_id": 49340789, "answer_count": 2, "score": 4, "last_activity_date": 1521320738, "creation_date": 1521312412, "question_id": 49340618, "link": "https://stackoverflow.com/questions/49340618/idiomatic-way-to-cache-resources-in-rust", "title": "Idiomatic way to cache resources in Rust", "body": "<p>I am new to Rust and I'm working on a game with the Piston engine to wet my feet.</p>\n\n<p>I want to render a bunch of entities using sprite sheets, but a lot of entities might share a sprite sheet so I would like to only load and store one copy of each file.</p>\n\n<p>In pseudo code, my approach is basically like this:</p>\n\n<pre><code>fn get_spritesheet(hashmap_cache, file):\n    if file not in hashmap_cache:\n        hashmap_cache[file] = load_image_file(file)\n\n    return hashmap_cache[file]\n</code></pre>\n\n<p>Then maybe something like:</p>\n\n<pre><code>//These 'sprite' fileds point to the same image in memory\nlet player1 = Entity { sprite: get_spritesheet(cache, \"player.png\") };\nlet player2 = Entity { sprite: get_spritesheet(cache, \"player.png\") }; \n</code></pre>\n\n<p>However, I am running in to a lot of barriers with Rust's ownership system (probably because I just don't understand it). </p>\n\n<p>As far as I can tell, I want the cahe/hashmap to \"own\" the image resources. Specifically, then, returning references (as in the <code>get_spritesheet</code> function) seems to be weird. Also, is it possible for a struct to not own all its members? I think it is but I was confused about how to do that.</p>\n"}, {"tags": ["rust", "ownership", "ownership-semantics"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521308137, "post_id": 49339843, "comment_id": 85679902, "body": "You probably want to use <code>&amp;Trait</code> in your <code>partial_eq</code>; <code>&amp;Box</code> has unneeded double indirection."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1521308533, "creation_date": 1521308533, "answer_id": 49339948, "question_id": 49339843, "link": "https://stackoverflow.com/questions/49339843/cannot-move-out-of-borrowed-content-on-enum-containing-a-boxed-trait-object-when/49339948#49339948", "title": "Cannot move out of borrowed content on enum containing a boxed trait object when deriving PartialEq", "body": "<p>Expanding the automatically-derived implementation of <code>PartialEq</code> presents a better error message:</p>\n\n<pre><code>impl ::std::cmp::PartialEq for Enum {\n    #[inline]\n    fn eq(&amp;self, __arg_0: &amp;Enum) -&gt; bool {\n        match (&amp;*self, &amp;*__arg_0) {\n            (&amp;Enum::Trait(ref __self_0), &amp;Enum::Trait(ref __arg_1_0)) =&gt; {\n                true &amp;&amp; (*__self_0) == (*__arg_1_0)\n            }\n        }\n    }\n    #[inline]\n    fn ne(&amp;self, __arg_0: &amp;Enum) -&gt; bool {\n        match (&amp;*self, &amp;*__arg_0) {\n            (&amp;Enum::Trait(ref __self_0), &amp;Enum::Trait(ref __arg_1_0)) =&gt; {\n                false || (*__self_0) != (*__arg_1_0)\n            }\n        }\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:21:40\n   |\n21 |                 true &amp;&amp; (*__self_0) == (*__arg_1_0)\n   |                                        ^^^^^^^^^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:29:41\n   |\n29 |                 false || (*__self_0) != (*__arg_1_0)\n   |                                         ^^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>This is tracked as Rust issues <a href=\"https://github.com/rust-lang/rust/issues/31740\" rel=\"nofollow noreferrer\">31740</a> and <a href=\"https://github.com/rust-lang/rust/issues/39128\" rel=\"nofollow noreferrer\">39128</a>.</p>\n\n<p>You will likely need to implement <code>PartialEq</code> for this type yourself as well.</p>\n"}], "owner": {"reputation": 43, "user_id": 8768584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/069c62a4681f179676fbe558c0fca400?s=128&d=identicon&r=PG&f=1", "display_name": "Zack", "link": "https://stackoverflow.com/users/8768584/zack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "accepted_answer_id": 49339948, "answer_count": 1, "score": 3, "last_activity_date": 1521308533, "creation_date": 1521307934, "last_edit_date": 1521308029, "question_id": 49339843, "link": "https://stackoverflow.com/questions/49339843/cannot-move-out-of-borrowed-content-on-enum-containing-a-boxed-trait-object-when", "title": "Cannot move out of borrowed content on enum containing a boxed trait object when deriving PartialEq", "body": "<p>I'm trying to write an enum deriving <code>PartialEq</code> which contains a trait object which does so manually. I used the solution <a href=\"https://users.rust-lang.org/t/solved-is-it-possible-to-clone-a-boxed-trait-object/1714/2\" rel=\"nofollow noreferrer\">here</a> in order to force implementors of <code>Trait</code> to write an equality method. This fails to compile:</p>\n\n<pre><code>trait Trait {\n    fn partial_eq(&amp;self, rhs: &amp;Box&lt;Trait&gt;) -&gt; bool;\n}\n\nimpl PartialEq for Box&lt;Trait&gt; {\n    fn eq(&amp;self, rhs: &amp;Box&lt;Trait&gt;) -&gt; bool {\n        self.partial_eq(rhs)\n    }\n}\n\n#[derive(PartialEq)]\nenum Enum {\n    Trait(Box&lt;Trait&gt;),\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:13:11\n   |\n13 |     Trait(Box&lt;Trait&gt;),\n   |           ^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>This only compiles when I manually <code>impl PartialEq for Enum</code>. Why is this the case?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 566, "user_id": 1711103, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/359ab9c43c475e8a2563c8b2957df903?s=128&d=identicon&r=PG", "display_name": "Andrew Rondeau", "link": "https://stackoverflow.com/users/1711103/andrew-rondeau"}, "edited": false, "score": 0, "creation_date": 1607531022, "post_id": 49339072, "comment_id": 115303375, "body": "What&#39;s really strange is that error.to_string() encloses the message in quotes. This makes testing awkward."}], "answers": [{"comments": [{"owner": {"reputation": 399, "user_id": 8532064, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/74ec4cb855fc0dce8376bbeb11141819?s=128&d=identicon&r=PG", "display_name": "aravk33", "link": "https://stackoverflow.com/users/8532064/aravk33"}, "edited": false, "score": 0, "creation_date": 1576068021, "post_id": 49339309, "comment_id": 104777297, "body": "OP can get <code>PermissionDenied</code> by doing <code>error.kind()</code>, which should give <a href=\"https://doc.rust-lang.org/std/io/enum.ErrorKind.html#variant.PermissionDenied\" rel=\"nofollow noreferrer\"><code>std::io::ErrorKind::PermissionDenied</code></a>, though this does not give the message field."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1521304736, "creation_date": 1521304736, "answer_id": 49339309, "question_id": 49339072, "link": "https://stackoverflow.com/questions/49339072/how-can-i-get-the-message-string-from-stdioerror/49339309#49339309", "title": "How can I get the message string from std::io::Error?", "body": "<p>I don't think there's anything that will get you exactly \"Permission denied\". The closest I know of is the <code>Display</code> implementation of the <code>Error</code>, which still includes the underlying error code:</p>\n\n<pre><code>use std::fs::File;\nuse std::error::Error;\n\nfn main() {\n    let error = File::open(\"/does-not-exist\").unwrap_err();\n\n    println!(\"{:?}\", error);\n    // Error { repr: Os { code: 2, message: \"No such file or directory\" } }\n\n    println!(\"{}\", error);\n    // No such file or directory (os error 2)\n\n    println!(\"{}\", error.description());\n    // entity not found\n}\n</code></pre>\n\n<p>If this is suitable, you can use <code>error.to_string()</code>.</p>\n\n<hr>\n\n<p>The standard library gets this string from <code>sys::os</code>, which gets defined based on the platform. For example, <a href=\"https://github.com/rust-lang/rust/blob/1.24.1/src/libstd/sys/unix/os.rs#L88\" rel=\"noreferrer\">on UNIX-like platforms, it uses <code>strerror_r</code></a>. This function does not appear to be exposed in any public fashion, however.</p>\n"}], "owner": {"reputation": 2359, "user_id": 1837084, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/67dya.jpg?s=128&g=1", "display_name": "Oleg Antonyan", "link": "https://stackoverflow.com/users/1837084/oleg-antonyan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 681, "favorite_count": 1, "accepted_answer_id": 49339309, "answer_count": 1, "score": 5, "last_activity_date": 1521304736, "creation_date": 1521303334, "last_edit_date": 1521304255, "question_id": 49339072, "link": "https://stackoverflow.com/questions/49339072/how-can-i-get-the-message-string-from-stdioerror", "title": "How can I get the message string from std::io::Error?", "body": "<p>This works:</p>\n\n<pre><code>format!(\"{:?}\", error)) \n// Os { code: 13, kind: PermissionDenied, message: \"Permission denied\" }\n</code></pre>\n\n<p>But I want only the <code>message</code> field, not the full debug print. How do I get it?</p>\n\n<pre><code>error.message // unknown field\nerror.message() // no method named `message` found for type `std::io::Error` in the current scope\n</code></pre>\n"}, {"tags": ["linked-list", "rust", "singly-linked-list"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521305879, "post_id": 49339476, "comment_id": 85679109, "body": "Your <code>match</code> should be an <code>if let</code>."}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1521306647, "post_id": 49339476, "comment_id": 85679402, "body": "Won&#39;t the recursion be a problem for big lists? Unless the compiler is smart enough to convert it to tail recursive calls, which doesn&#39;t seem probable."}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1521307017, "post_id": 49339476, "comment_id": 85679552, "body": "Yes, that&#39;s a basic tradeoff between recursion and looping."}], "tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 0, "last_activity_date": 1521305690, "creation_date": 1521305690, "answer_id": 49339476, "question_id": 49337968, "link": "https://stackoverflow.com/questions/49337968/how-do-i-keep-a-mutable-reference-to-the-last-node-while-building-a-linked-list/49339476#49339476", "title": "How do I keep a mutable reference to the last node while building a linked list?", "body": "<p>I'm not sure you can do it in a loop.  The borrow checker might not be smart enough.  You can do it with recursion though.</p>\n\n<pre><code>impl&lt;T&gt; List&lt;T&gt; {\n    pub fn from_iterator(i: &amp;mut Iterator&lt;Item = T&gt;) -&gt; Self {\n        let mut list = List { list: None };\n        Self::append_from_iterator(&amp;mut list.list, i);\n        list\n    }\n    pub fn append_from_iterator(list: &amp;mut Node&lt;T&gt;, i: &amp;mut Iterator&lt;Item = T&gt;) {\n        match i.next() {\n            Some(x) =&gt; {\n                let mut singleton = Box::new(Link {\n                    head: x,\n                    tail: None,\n                });\n                Self::append_from_iterator(&amp;mut singleton.tail, i);\n                *list = Some(singleton);\n            }, \n            None =&gt; (),\n        }\n\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=df0f9bafca02357e30f11796cadaa069&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1521309991, "post_id": 49339802, "comment_id": 85680567, "body": "Could you please also elaborate on the <code>&amp;mut Iterator</code> comment and more optimized code? Is my intuition correct that using generics the compiler can specialize the function for different iterators?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1521327696, "post_id": 49339802, "comment_id": 85685723, "body": "@PetrPudl&#225;k does <a href=\"https://stackoverflow.com/q/45151770/155423\">What is the difference between &lt;T: Trait&gt; Box&lt;T&gt; and &amp;Trait / Box&lt;Trait&gt;?</a> answer your question?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1521307693, "creation_date": 1521307693, "answer_id": 49339802, "question_id": 49337968, "link": "https://stackoverflow.com/questions/49337968/how-do-i-keep-a-mutable-reference-to-the-last-node-while-building-a-linked-list/49339802#49339802", "title": "How do I keep a mutable reference to the last node while building a linked list?", "body": "<p>As described in <a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>, you can explicitly transfer ownership of the mutable reference using <code>{}</code>:</p>\n\n<pre><code>impl&lt;T&gt; List&lt;T&gt; {\n    pub fn from_iterator&lt;I&gt;(i: I) -&gt; Self\n    where\n        I: IntoIterator&lt;Item = T&gt;,\n    {\n        let mut list = List { list: None };\n        {\n            let mut last: &amp;mut Node&lt;T&gt; = &amp;mut list.list;\n\n            for x in i {\n                let singleton = Box::new(Link {\n                    head: x,\n                    tail: None,\n                });\n                *last = Some(singleton);\n\n                last = &amp;mut {last}.as_mut().unwrap().tail;\n            }\n        }\n        list\n    }\n}\n</code></pre>\n\n<p>I also removed the trait object (<code>&amp;mut Iterator</code>) in favor of a generic. This allows for more optimized code (although with a linked list it's probably not worth it).</p>\n\n<p>It's unfortunate that the <code>unwrap</code> is needed. Even though the <code>Link</code> is placed on the heap, making the address stable, the compiler does not perform that level of lifetime tracking. One <em>could</em> use <code>unsafe</code> code based on this external knowledge, but I don't know that it's worth it here.</p>\n"}], "owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "accepted_answer_id": 49339802, "answer_count": 2, "score": 2, "last_activity_date": 1521307693, "creation_date": 1521296706, "last_edit_date": 1521297883, "question_id": 49337968, "link": "https://stackoverflow.com/questions/49337968/how-do-i-keep-a-mutable-reference-to-the-last-node-while-building-a-linked-list", "title": "How do I keep a mutable reference to the last node while building a linked list?", "body": "<p>I'm trying to implement building a singly-linked list from an <code>Iterator</code>, keeping the order of elements.</p>\n\n<p>The structure is defined as:</p>\n\n<pre><code>#[derive(Debug)]\nstruct List&lt;T&gt; {\n    list: Node&lt;T&gt;,\n}\n\ntype Node&lt;T&gt; = Option&lt;Box&lt;Link&lt;T&gt;&gt;&gt;;\n\n#[derive(Debug)]\nstruct Link&lt;T&gt; {\n    head: T,\n    tail: Node&lt;T&gt;,\n}\n</code></pre>\n\n<p>I was thinking of keeping a mutable reference to the end of the list and expanding it while iterating. However, I couldn't figure out how this could be done. The (non-working) idea was:</p>\n\n<pre><code>impl&lt;T&gt; List&lt;T&gt; {\n    pub fn from_iterator(i: &amp;mut Iterator&lt;Item = T&gt;) -&gt; Self {\n        let mut list = List { list: None };\n        {\n            let mut last: &amp;mut Node&lt;T&gt; = &amp;mut list.list;\n            for x in i {\n                let singleton = Box::new(Link {\n                    head: x,\n                    tail: None,\n                });\n                *last = Some(singleton);\n                // --&gt; I aim for something like the line below. Of course\n                // 'singleton' can't be accessed at this point, but even if I\n                // match on *last to retrieve it, still I couldn't figure out how\n                // to properly reference the new tail.\n                // last = &amp;mut singleton.tail;\n            }\n        }\n        list\n    }\n}\n</code></pre>\n\n<p>It'd be possible to just build the list in reverse and then reverse it afterwards with the same time complexity, but I was curious if the above approach is ever possible in Rust.</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1521299170, "last_edit_date": 1521299170, "creation_date": 1521298578, "answer_id": 49338270, "question_id": 49336549, "link": "https://stackoverflow.com/questions/49336549/generic-function-with-traits-to-read-a-number-complaining-about-error-trait/49338270#49338270", "title": "Generic function with traits to read a number complaining about Error trait", "body": "<p>The error message tells you what to do:</p>\n\n<pre><code>consider adding a `where &lt;F as std::str::FromStr&gt;::Err: std::error::Error` bound\n</code></pre>\n\n<p>Following the suggestion, but using a simpler syntax:</p>\n\n<pre><code>fn read_number&lt;F&gt;(prompt: &amp;str) -&gt; Result&lt;F, Box&lt;Error&gt;&gt;\nwhere\n    F: FromStr,\n    F::Err: std::error::Error,\n</code></pre>\n\n<p>This leads to another error which also tells you what to do:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the associated type `&lt;F as std::str::FromStr&gt;::Err` may not live long enough\n  --&gt; src/main.rs:20:8\n   |\n20 |     Ok(guess.trim().parse()?)\n   |        ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider adding an explicit lifetime bound `&lt;F as std::str::FromStr&gt;::Err: 'static`...\nnote: ...so that the type `&lt;F as std::str::FromStr&gt;::Err` will meet its required lifetime bounds\n  --&gt; src/main.rs:20:8\n   |\n20 |     Ok(guess.trim().parse()?)\n   |        ^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Following the suggestion and adding it to our existing restriction:</p>\n\n<pre><code>fn read_number&lt;F&gt;(prompt: &amp;str) -&gt; Result&lt;F, Box&lt;Error&gt;&gt;\nwhere\n    F: FromStr,\n    F::Err: std::error::Error + 'static,\n</code></pre>\n\n<p>You'll then get the same errors for the <code>read_until_number</code> function. Repeating the same process, you end up with:</p>\n\n<pre><code>use std::error::Error;\nuse std::io;\nuse std::io::Write;\nuse std::str::FromStr;\n\nfn read_number&lt;F&gt;(prompt: &amp;str) -&gt; Result&lt;F, Box&lt;Error&gt;&gt;\nwhere\n    F: FromStr,\n    F::Err: std::error::Error + 'static,\n{\n    let mut guess = String::new();\n    let mut sout = io::stdout();\n\n    sout.write(prompt.as_bytes())?;\n\n    sout.flush()?;\n\n    io::stdin().read_line(&amp;mut guess)?;\n\n    Ok(guess.trim().parse()?)\n}\n\nfn read_until_number&lt;F&gt;(prompt: &amp;str) -&gt; F\nwhere\n    F: FromStr,\n    F::Err: std::error::Error + 'static,\n{\n    loop {\n        match read_number(prompt) {\n            Ok(num) =&gt; break num,\n            Err(_) =&gt; println!(\"Please enter valid number.\"),\n        };\n    }\n}\n\nfn main() {\n    let x: u32 = read_until_number(\"Enter integer:\\n\");\n    let y: f32 = read_until_number(\"Enter float:\\n\");\n    println!(\"You entered this integer: {} and this float: {}\", x, y);\n}\n</code></pre>\n\n<hr>\n\n<p>Why is this needed? </p>\n\n<ol>\n<li><p>The <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#impl-From%3CE%3E\" rel=\"nofollow noreferrer\">implementation of <code>From</code> for <code>Box&lt;Error&gt;</code></a> requires that the type implement <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\"><code>std::error::Error</code></a>, but the trait <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" rel=\"nofollow noreferrer\"><code>FromStr</code></a> does not have that restriction on the associated <code>Err</code> type. You have to add the restriction to your function to be able to perform the conversion.</p></li>\n<li><p>By default, a trait object in argument position has an implicit <code>'static</code> bound, the same as if you had done <code>Box&lt;Error + 'static&gt;</code>. You <em>could</em> change <code>read_number</code> to use more nuanced lifetimes, but you couldn't change <code>read_until_number</code> since the error has to live outside of the function:</p>\n\n<pre><code>fn read_number&lt;'a, F&gt;(prompt: &amp;'a str) -&gt; Result&lt;F, Box&lt;Error + 'a&gt;&gt;\nwhere\n    F: FromStr,\n    F::Err: std::error::Error + 'a,\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 49338270, "answer_count": 1, "score": 0, "last_activity_date": 1521299170, "creation_date": 1521293224, "last_edit_date": 1521298215, "question_id": 49336549, "link": "https://stackoverflow.com/questions/49336549/generic-function-with-traits-to-read-a-number-complaining-about-error-trait", "title": "Generic function with traits to read a number complaining about Error trait", "body": "<p>I am trying to make a generic function to read a number from stdin:</p>\n\n<pre><code>use std::error::Error;\nuse std::io;\nuse std::io::Write;\nuse std::str::FromStr;\n\nfn read_number&lt;F: FromStr&gt;(prompt: &amp;str) -&gt; Result&lt;F, Box&lt;Error&gt;&gt; {\n    let mut guess = String::new();\n    let mut sout = io::stdout();\n\n    sout.write(prompt.as_bytes())?;\n\n    sout.flush()?;\n\n    io::stdin().read_line(&amp;mut guess)?;\n\n    Ok(guess.trim().parse()?)\n}\n\nfn read_until_number&lt;F: FromStr&gt;(prompt: &amp;str) -&gt; F {\n    loop {\n        match read_number(prompt) {\n            Ok(num) =&gt; break num,\n            Err(_) =&gt; println!(\"Please enter valid number.\"),\n        };\n    }\n}\n\nfn main() {\n    let x: u32 = read_until_number(\"Enter integer:\\n\");\n    let y: f32 = read_until_number(\"Enter float:\\n\");\n    println!(\"You entered this integer: {} and this float: {}\", x, y);\n}\n</code></pre>\n\n<p>It's not working; I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&lt;F as std::str::FromStr&gt;::Err: std::error::Error` is not satisfied\n  --&gt; src/main.rs:16:8\n   |\n16 |     Ok(guess.trim().parse()?)\n   |        ^^^^^^^^^^^^^^^^^^^^^ the trait `std::error::Error` is not implemented for `&lt;F as std::str::FromStr&gt;::Err`\n   |\n   = help: consider adding a `where &lt;F as std::str::FromStr&gt;::Err: std::error::Error` bound\n   = note: required because of the requirements on the impl of `std::convert::From&lt;&lt;F as std::str::FromStr&gt;::Err&gt;` for `std::boxed::Box&lt;std::error::Error&gt;`\n   = note: required by `std::convert::From::from`\n</code></pre>\n"}, {"tags": ["reference", "rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "is_accepted": false, "score": 0, "last_activity_date": 1521292005, "creation_date": 1521292005, "answer_id": 49336354, "question_id": 49336005, "link": "https://stackoverflow.com/questions/49336005/how-to-create-a-factory-function-where-the-data-youre-creating-requires-referen/49336354#49336354", "title": "How to create a factory function where the data you&#39;re creating requires references?", "body": "<p>One possibility seems to be to use enums instead of traits for polymorphism.</p>\n\n<p>For this example that would be:</p>\n\n<pre><code>enum Shape2 {\n    Rectangle { width: f32, height: f32 },\n    Circle { radius: f32 }\n}\nfn area(shape: Shape2) -&gt; f32 {\n    match shape {\n        Shape2::Rectangle {width, height} =&gt; width * height,\n        Shape2::Circle  {radius} =&gt; (std::f32::consts::PI * radius).powf(2f32)\n    }\n}\nstruct Shape2Collection {\n    shapes: Vec&lt;Shape2&gt;\n}\n\nfn make_shapes2(needRectangle: bool, multiplier: f32) -&gt; Shape2Collection {\n    let rect = Shape2::Rectangle {\n        width: 42.0 * multiplier,\n        height: 24.0 * multiplier\n    };\n    let circle = Shape2::Circle {\n        radius: 42.0 * multiplier\n    };\n\n    match needRectangle {\n        true =&gt; Shape2Collection {\n            shapes: vec![rect, circle]\n        },\n        false =&gt; Shape2Collection {\n            shapes: vec![circle]\n        },\n    }\n}\n</code></pre>\n\n<p>The downside of this is that your implementations aren't methods anymore, but are functions, and that your implementations are smushed together in the same function.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1521297633, "creation_date": 1521297633, "answer_id": 49338111, "question_id": 49336005, "link": "https://stackoverflow.com/questions/49336005/how-to-create-a-factory-function-where-the-data-youre-creating-requires-referen/49338111#49338111", "title": "How to create a factory function where the data you&#39;re creating requires references?", "body": "<p>You simply <a href=\"https://stackoverflow.com/q/32682876/155423\">cannot return a reference to a variable created in a function</a>.</p>\n\n<blockquote>\n  <p>Important: traits are of unknown size, and so must be passed around as a reference</p>\n</blockquote>\n\n<p>This isn't strictly true. They must be passed around via some kind of indirection, but a reference (<code>&amp;</code>) isn't the only kind of indirection that a <em>trait object</em> can use. There's also boxed trait objects:</p>\n\n<pre><code>struct ShapeCollection {\n    shapes: Vec&lt;Box&lt;Shape&gt;&gt;,\n}\n\nfn make_shapes(need_rectangle: bool, multiplier: f32) -&gt; ShapeCollection {\n    let rect = Rectangle {\n        width: 42.0 * multiplier,\n        height: 24.0 * multiplier,\n    };\n    let circle = Circle {\n        radius: 42.0 * multiplier,\n    };\n\n    match need_rectangle {\n        true =&gt; ShapeCollection {\n            shapes: vec![Box::new(rect), Box::new(circle)],\n        },\n        false =&gt; ShapeCollection {\n            shapes: vec![Box::new(circle)],\n        },\n    }\n}\n</code></pre>\n\n<p>In 99.9% of the cases, a function signature with a lifetime that's only in the return position can never work (or doesn't do what you want) and should <em>always</em> give you pause:</p>\n\n<pre><code>fn make_shapes&lt;'a&gt;(need_rectangle: bool, multiplier: f32) -&gt; ShapeCollection&lt;'a&gt;\n</code></pre>\n\n<p>Note that the Rust style is <code>snake_case</code>, so I've renamed <code>need_rectangle</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27567849/155423\">What makes something a &quot;trait object&quot;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></li>\n</ul>\n"}], "owner": {"reputation": 50921, "user_id": 1666, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG", "display_name": "SCdF", "link": "https://stackoverflow.com/users/1666/scdf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 367, "favorite_count": 0, "accepted_answer_id": 49338111, "answer_count": 2, "score": 2, "last_activity_date": 1521327355, "creation_date": 1521289651, "last_edit_date": 1521327355, "question_id": 49336005, "link": "https://stackoverflow.com/questions/49336005/how-to-create-a-factory-function-where-the-data-youre-creating-requires-referen", "title": "How to create a factory function where the data you&#39;re creating requires references?", "body": "<p>There are situations where you want a factory function to create some data, but for whatever reasons the data you return <em>must</em> contain references. This does not seem possible because you cannot return references from functions.</p>\n\n<p>Let's look at the following example code:</p>\n\n<pre><code>// Important: traits are of unknown size, and so must be passed around \n// as a reference\ntrait Shape {\n    fn area(&amp;self) -&gt; f32;\n}\n// As seen here.\nstruct ShapeCollection&lt;'a&gt; {\n    shapes: Vec&lt;&amp;'a Shape&gt;\n}\n\n// This function needs to return a ShapeCollection, but since the\n// data structure requires references to work, it seems impossible!\nfn make_shapes&lt;'a&gt;(needRectangle: bool, multiplier: f32) -&gt; ShapeCollection&lt;'a&gt; {\n    let rect = Rectangle {\n        width: 42.0 * multiplier,\n        height: 24.0 * multiplier\n    };\n    let circle = Circle {\n        radius: 42.0 * multiplier\n    };\n\n    match needRectangle {\n        true =&gt; ShapeCollection {\n            shapes: vec![&amp;rect, &amp;circle]\n        },\n        false =&gt; ShapeCollection {\n            shapes: vec![&amp;circle]\n        },\n    }\n}\n// ^ This function won't compile because rect and circle do not\n//   life long enough, and the compiler dies at this point\n\n// Impls if you're interested / want to compile, but not that important\nstruct Rectangle {\n    width: f32,\n    height: f32\n}\nimpl Shape for Rectangle {\n    fn area(&amp;self) -&gt; f32 {\n        self.width * self.height\n    }\n}\nstruct Circle {\n    radius: f32\n}\nimpl Shape for Circle {\n    fn area(&amp;self) -&gt; f32 {\n        (std::f32::consts::PI * self.radius).powf(2f32)\n    }\n}\n</code></pre>\n\n<p>This is a simplified example built out of a more complex code I am writing. The gist of the issue is two conflating requirements:</p>\n\n<ul>\n<li>I need polymorphism. Since I'm using traits for this, and traits are not sized, the <code>Vec</code> must contain references not values</li>\n<li>I need a factory function. Since I want to generate this list of objects from multiple parts of my code but with different parameters, it makes sense to make a function that encapsulates that, instead of copying and pasting logic around</li>\n</ul>\n\n<p><strong>How can I solve both of these requirements in Rust?</strong></p>\n\n<p>The two choices seems to be:</p>\n\n<ul>\n<li>Do something else to achieve polymorphism, something that is allowed to be passed around as a value</li>\n<li>De-duplicate multiple code blocks in some way that <em>isn't</em> creating a parameterised function</li>\n</ul>\n"}, {"tags": ["xpath", "rust"], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 5905289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61f6209e8b0eb106e3bd7568aaa3eeb7?s=128&d=identicon&r=PG", "display_name": "memborg", "link": "https://stackoverflow.com/users/5905289/memborg"}, "edited": false, "score": 0, "creation_date": 1521362635, "post_id": 49338007, "comment_id": 85691814, "body": "That helped and thanks for the elaborated answer. Nice touch with <code>doucment_order</code>, but the order of elements in my case is less important."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1521297005, "creation_date": 1521297005, "answer_id": 49338007, "question_id": 49334454, "link": "https://stackoverflow.com/questions/49334454/how-do-i-use-sxd-xpath-to-iterate-over-a-nodeset-and-print-out-every-value/49338007#49338007", "title": "How do I use SXD-XPath to iterate over a nodeset and print out every value?", "body": "<p><a href=\"https://docs.rs/sxd-xpath/0.4.1/sxd_xpath/struct.XPath.html#method.evaluate\" rel=\"noreferrer\"><code>XPath::evaluate</code></a> returns a <code>Value</code>:</p>\n\n<pre><code>fn evaluate&lt;'d, N&gt;(\n    &amp;self,\n    context: &amp;Context&lt;'d&gt;,\n    node: N,\n) -&gt; Result&lt;Value&lt;'d&gt;, ExecutionError&gt;\nwhere\n    N: Into&lt;Node&lt;'d&gt;&gt;,\n</code></pre>\n\n<p>A <a href=\"https://docs.rs/sxd-xpath/0.4.1/sxd_xpath/enum.Value.html\" rel=\"noreferrer\"><code>Value</code></a> is an enumeration of the possible values of an XPath (a number, a boolean, a string, or a nodeset). In your case, you are interested in a nodeset, so you will want to match on that variant:</p>\n\n<pre><code>if let Value::Nodeset(nodes) = value {\n    // ...\n}\n</code></pre>\n\n<p><a href=\"https://docs.rs/sxd-xpath/0.4.1/sxd_xpath/nodeset/struct.Nodeset.html\" rel=\"noreferrer\"><code>Nodeset</code></a> implements <code>IntoIterator</code>, so you can use it in a <code>for</code> loop:</p>\n\n<pre><code>for node in nodes {\n    // ...\n}\n</code></pre>\n\n<p>Each yielded value will be a <a href=\"https://docs.rs/sxd-xpath/0.4.1/sxd_xpath/nodeset/enum.Node.html\" rel=\"noreferrer\"><code>Node</code></a>. This is an enumeration of all the different types of nodes in an XML document. You are interested in <code>Element</code>s. If <em>all</em> you care about is the string value of the element, you can use <a href=\"https://docs.rs/sxd-xpath/0.4.1/sxd_xpath/nodeset/enum.Node.html#method.string_value\" rel=\"noreferrer\"><code>Node::string_value</code></a>. This hides away any complexities of multiple child nodes each with their own text:</p>\n\n<pre><code>println!(\"{}\", node.string_value());\n</code></pre>\n\n<p>Put all together:</p>\n\n<pre><code>if let Value::Nodeset(nodes) = value {\n    for node in nodes {\n        println!(\"{}\", node.string_value());\n    }\n}\n</code></pre>\n\n<p>A <code>Nodeset</code> doesn't have a guaranteed order, so if you want the nodes in the order that they come from in the document, you can call <a href=\"https://docs.rs/sxd-xpath/0.4.1/sxd_xpath/nodeset/struct.Nodeset.html#method.document_order\" rel=\"noreferrer\"><code>Nodeset::document_order</code></a>:</p>\n\n<pre><code>if let Value::Nodeset(nodes) = value {\n    for node in nodes.document_order() {\n        println!(\"{}\", node.string_value());\n    }\n}\n</code></pre>\n\n<p><strong>Disclaimer</strong>: I am the author of SXD-Document and SXD-XPath</p>\n"}], "owner": {"reputation": 45, "user_id": 5905289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61f6209e8b0eb106e3bd7568aaa3eeb7?s=128&d=identicon&r=PG", "display_name": "memborg", "link": "https://stackoverflow.com/users/5905289/memborg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 302, "favorite_count": 1, "accepted_answer_id": 49338007, "answer_count": 1, "score": 3, "last_activity_date": 1521297992, "creation_date": 1521278815, "last_edit_date": 1521297992, "question_id": 49334454, "link": "https://stackoverflow.com/questions/49334454/how-do-i-use-sxd-xpath-to-iterate-over-a-nodeset-and-print-out-every-value", "title": "How do I use SXD-XPath to iterate over a nodeset and print out every value?", "body": "<p>I\u2019ve been trying to query XML with the <a href=\"https://crates.io/crates/sxd-xpath\" rel=\"nofollow noreferrer\">sxd-xpath crate</a> and I can\u2019t seem to figure out how to handle a nodeset.</p>\n\n<p>Crate and using</p>\n\n<pre><code>extern crate sxd_document;\nextern crate sxd_xpath;\n\nuse sxd_document::parser;\nuse sxd_xpath::{Factory, Context, Value};\n</code></pre>\n\n<p>Actual code</p>\n\n<pre><code>let package = parser::parse(\"&lt;feed&gt;&lt;title&gt;hest&lt;/title&gt;&lt;title&gt;hest2&lt;/title&gt;&lt;title&gt;hest3&lt;/title&gt;&lt;title&gt;hest4&lt;/title&gt;&lt;/feed&gt;\").expect(\"failed to parse XML\");\nlet document = package.as_document();\n\nlet factory = Factory::new();\nlet xpath = factory.build(\"/feed/title\").expect(\"Could not compile XPath\");\nlet xpath = xpath.expect(\"No XPath was compiled\");\n\nlet context = Context::new();\n\nlet value = xpath.evaluate(&amp;context, document.root()).expect(\"XPath evaluation failed\");\n</code></pre>\n\n<p>I would like to iterate over every node and print out the value of <code>&lt;title&gt;</code>, but I do not understand how to do it.</p>\n\n<p>I\u2019m fairly new in the Rust world, coming from C# and Python.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1521265758, "post_id": 49331975, "comment_id": 85667685, "body": "Why not just use <code>push</code>? If you need to keep the first vector, just use <code>clone()</code>, bind it to a variable, and then push to that. If you can&#39;t use <code>clone</code>, and can&#39;t consume <code>color</code>, then the odds are that this syntax sugar wouldn&#39;t work even if it was implemented. If dynamic resizing is an issue, <code>let color_with_alpha = Vec::with_capacity(color.len() + 1);</code>"}, {"owner": {"reputation": 1726, "user_id": 1429658, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/fecbd8a5bea71e1103c82bcc4eb16237?s=128&d=identicon&r=PG", "display_name": "Litty", "link": "https://stackoverflow.com/users/1429658/litty"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1521266056, "post_id": 49331975, "comment_id": 85667727, "body": "@BHustus <code>color</code> is an <a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"nofollow noreferrer\">Array</a>, not a <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">Vector</a>."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1521266143, "post_id": 49331975, "comment_id": 85667740, "body": "Wow, I actually forgot that Rust has standard arrays, hah. Sorry."}], "answers": [{"comments": [{"owner": {"reputation": 1726, "user_id": 1429658, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/fecbd8a5bea71e1103c82bcc4eb16237?s=128&d=identicon&r=PG", "display_name": "Litty", "link": "https://stackoverflow.com/users/1429658/litty"}, "edited": false, "score": 0, "creation_date": 1521257354, "post_id": 49332047, "comment_id": 85666398, "body": "If I can ask these kinds a different way I&#39;m open to your thoughts, but yeah, I guess that&#39;s kind of how these questions go :) Thanks for the insight."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1521255386, "last_edit_date": 1521255386, "creation_date": 1521255023, "answer_id": 49332047, "question_id": 49331975, "link": "https://stackoverflow.com/questions/49331975/does-rust-have-syntax-sugar-for-creating-an-array-with-an-appended-element/49332047#49332047", "title": "Does Rust have syntax sugar for creating an array with an appended element?", "body": "<p>No, there is no such syntax.</p>\n\n<p>It's always hard to <em>prove</em> a negative, but I've implemented a <a href=\"https://github.com/shepmaster/fuzzy-pickles\" rel=\"nofollow noreferrer\">parser of Rust code</a> and I've used Rust for over 3 years; I've never encountered any such syntax. </p>\n\n<hr>\n\n<p>The closest I can imagine would be to implement a trait for array of various sizes. This is complicated because you cannot move out of non-<code>Copy</code> arrays. Since there's no generic integers, you'd have to implement this trait for every size of array you needed.</p>\n\n<pre><code>trait ArrayAppend&lt;T&gt; {\n    type Output;\n    fn append(self, val: T) -&gt; Self::Output;\n}\n\nimpl&lt;T: Copy&gt; ArrayAppend&lt;T&gt; for [T; 3] {\n    type Output = [T; 4];\n\n    fn append(self, val: T) -&gt; Self::Output {\n        [self[0], self[1], self[2], val]\n    }\n}\n\nfn main() {\n    let color = [0.25, 0.25, 0.25];\n    let color2 = color.append(1.0);\n}\n</code></pre>\n"}], "owner": {"reputation": 1726, "user_id": 1429658, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/fecbd8a5bea71e1103c82bcc4eb16237?s=128&d=identicon&r=PG", "display_name": "Litty", "link": "https://stackoverflow.com/users/1429658/litty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "accepted_answer_id": 49332047, "answer_count": 1, "score": 2, "last_activity_date": 1521255386, "creation_date": 1521254176, "last_edit_date": 1521255060, "question_id": 49331975, "link": "https://stackoverflow.com/questions/49331975/does-rust-have-syntax-sugar-for-creating-an-array-with-an-appended-element", "title": "Does Rust have syntax sugar for creating an array with an appended element?", "body": "<p>I have a 3-element array:</p>\n\n<pre><code>let color = [0.25, 0.25, 0.25];\n</code></pre>\n\n<p>I'd like to turn it into a 4-element array, which would be the 3-element array plus one appended element:</p>\n\n<pre><code>let color_with_alpha = [color[0], color[1], color[2], 1.0];\n</code></pre>\n\n<p>I know Rust has some cool syntax sugar for a lot of things; is there something for this? Something like:</p>\n\n<pre><code>let color_with_alpha = [color, 1.0];\n</code></pre>\n\n<p>I've read about the <a href=\"https://doc.rust-lang.org/std/macro.concat.html\" rel=\"nofollow noreferrer\"><code>concat</code> macro</a> but that seems to only create string slices. I would imagine there's a vector-based solution but I don't require the dynamic sizing.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 1, "creation_date": 1521238403, "post_id": 49329634, "comment_id": 85662536, "body": "It&#39;s worth noting that, for this <i>specific</i> example, it may be clearer to do <code>let h = get_image_type()</code> and then <code>match h</code> which doesn&#39;t return anything, unless there&#39;s some change made in the <code>match</code> block. As the second example stands, it seems redundant. This is still a good example of the <code>@</code> variable-binding syntax."}], "tags": [], "owner": {"reputation": 1455, "user_id": 6073823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iK5jZ.jpg?s=128&g=1", "display_name": "S&#248;ren Mortensen", "link": "https://stackoverflow.com/users/6073823/s%c3%b8ren-mortensen"}, "is_accepted": true, "score": 12, "last_activity_date": 1521250888, "last_edit_date": 1521250888, "creation_date": 1521234939, "answer_id": 49329634, "question_id": 49329586, "link": "https://stackoverflow.com/questions/49329586/is-there-a-way-to-match-two-enum-variants-and-also-bind-the-matched-variant-to-a/49329634#49329634", "title": "Is there a way to match two enum variants and also bind the matched variant to a variable?", "body": "<p>It looks like you are asking how to bind the value inside the first case. If so, you can use this:</p>\n\n<pre><code>match get_image_type() {\n    // use @ to bind a name to the value\n    Some(h @ ImageType::Png) | Some(h @ ImageType::Jpeg) =&gt; {\n        // Lots of shared code that does something with `h`\n    },\n    Some(ImageType::Tiff) =&gt; { ... },\n    None =&gt; { ... }\n}\n</code></pre>\n\n<p>If you want to also get the bound value outside of the <code>match</code> statement, you can use the following:</p>\n\n<pre><code>let matched = match get_image_type() {\n    Some(h @ ImageType::Png) | Some(h @ ImageType::Jpeg) =&gt; {\n        // Lots of shared code that does something with `h`\n        Some(h)\n    },\n    Some(h @ ImageType::Tiff) =&gt; {\n        // ...\n        Some(h)\n    },\n    None =&gt; {\n        // ...\n        None\n    },\n};\n</code></pre>\n\n<p>In that case, though, it might be better to simply <code>let h = get_image_type()</code> first, and then <code>match h</code> (thanks to <a href=\"https://stackoverflow.com/questions/49329586/is-there-a-way-to-match-two-enum-variants-and-also-bind-the-matched-variant-to-a/49329634#comment85662536_49329634\">BHustus</a>).</p>\n\n<p>Note the use of the <code>h @ &lt;value&gt;</code> syntax to bind the variable name <code>h</code> to the matched value (<a href=\"https://stackoverflow.com/a/40962017/6073823\">source</a>).</p>\n"}], "owner": {"reputation": 20458, "user_id": 122087, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/431c64e3e3fd0c892ad2a7e4150cf63e?s=128&d=identicon&r=PG", "display_name": "Paul A Jungwirth", "link": "https://stackoverflow.com/users/122087/paul-a-jungwirth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1379, "favorite_count": 0, "accepted_answer_id": 49329634, "answer_count": 1, "score": 9, "last_activity_date": 1521250888, "creation_date": 1521234694, "last_edit_date": 1521246893, "question_id": 49329586, "link": "https://stackoverflow.com/questions/49329586/is-there-a-way-to-match-two-enum-variants-and-also-bind-the-matched-variant-to-a", "title": "Is there a way to match two enum variants and also bind the matched variant to a variable?", "body": "<p>I have this enum:</p>\n\n<pre><code>enum ImageType {\n    Png,\n    Jpeg,\n    Tiff,\n}\n</code></pre>\n\n<p>Is there any way to match one of the first two, and also bind the matched value to a variable? For example:</p>\n\n<pre><code>match get_image_type() {\n    Some(h: ImageType::Png) | Some(h: ImageType::Jpeg) =&gt; {\n        // Lots of shared code\n        // that does something with `h`\n    },\n    Some(ImageType::Tiff) =&gt; { ... },\n    None =&gt; { ... },\n}\n</code></pre>\n\n<p>That syntax doesn't work, but is there any that does?</p>\n"}, {"tags": ["arrays", "vector", "rust"], "comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1521229796, "post_id": 49328371, "comment_id": 85658849, "body": "Might be a duplicate of <a href=\"https://stackoverflow.com/questions/31360993/what-is-the-proper-way-to-initialize-a-fixed-length-array\" title=\"what is the proper way to initialize a fixed length array\">stackoverflow.com/questions/31360993/&hellip;</a> and <a href=\"https://stackoverflow.com/questions/44182269/initialize-array-holding-struct-more-efficiently\" title=\"initialize array holding struct more efficiently\">stackoverflow.com/questions/44182269/&hellip;</a>."}, {"owner": {"reputation": 43, "user_id": 5542874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8be7a2d7b18f51990dc392a1c7594117?s=128&d=identicon&r=PG&f=1", "display_name": "Fireant", "link": "https://stackoverflow.com/users/5542874/fireant"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1521229897, "post_id": 49328371, "comment_id": 85658892, "body": "Not a duplicate of <a href=\"https://stackoverflow.com/questions/31360993/what-is-the-proper-way-to-initialize-a-fixed-length-array\" title=\"what is the proper way to initialize a fixed length array\">stackoverflow.com/questions/31360993/&hellip;</a>, however it can serve as part of the solution, albeit using unsafe keyword. That said I would be surprised if there was not a simpler more elegant solution"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1521230807, "post_id": 49328371, "comment_id": 85659380, "body": "Without dynamic length (alloca) arrays are less useful on their own, you&#39;d usually see some kind of higher-level structure used (<a href=\"https://github.com/servo/rust-smallvec\" rel=\"nofollow noreferrer\">github.com/servo/rust-smallvec</a> ?) instead. I&#39;d expect a more ergonomic solution to arise when the dynamic length arrays appear."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 2, "creation_date": 1521231155, "post_id": 49328371, "comment_id": 85659547, "body": "To make the question more specific: should it support arrays of a specific length, or any length? It is evidently not trivial to write a safe and simple interface for this operation. For a single array length like <code>[T; 3]</code>, there will be simple solutions."}, {"owner": {"reputation": 43, "user_id": 5542874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8be7a2d7b18f51990dc392a1c7594117?s=128&d=identicon&r=PG&f=1", "display_name": "Fireant", "link": "https://stackoverflow.com/users/5542874/fireant"}, "edited": false, "score": 0, "creation_date": 1521231389, "post_id": 49328371, "comment_id": 85659646, "body": "Yes, fixed length array is intended and wanted while dynamic length is not. In an API fixed length array specifies contract for the shape of the data passed. For example function create_triangle will take fixed length array of 3 points because triangle is defined by 3 points. It cannot take array of points of any other length.  So I suppose that one could say that array length adds additional information about the usage (which also means that the length does not need to be verified at runtime)"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1521231682, "last_edit_date": 1521231682, "creation_date": 1521231327, "answer_id": 49328860, "question_id": 49328371, "link": "https://stackoverflow.com/questions/49328371/how-to-convert-a-vec-into-an-array-without-copying-the-elements/49328860#49328860", "title": "How to convert a Vec into an array without copying the elements?", "body": "<p>Doing this correctly is exceedingly difficult. The problem lies in properly handling a panic when there's a partially uninitialized array. If the type inside the array implements <code>Drop</code>, then it would access uninitialized memory, causing undefined behavior.</p>\n\n<p>The easiest, safest way is to use <a href=\"https://crates.io/crates/arrayvec\" rel=\"nofollow noreferrer\">arrayvec</a>:</p>\n\n<pre><code>extern crate arrayvec;\n\nuse arrayvec::ArrayVec;\n\n#[derive(Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let points = vec![\n        Point { x: 1, y: 2 },\n        Point { x: 3, y: 4 },\n        Point { x: 5, y: 6 },\n    ];\n\n    let array: ArrayVec&lt;_&gt; = points.into_iter().collect();\n    let array: [Point; 3] = array.into_inner().unwrap();\n    println!(\"{:?}\", array);\n}\n</code></pre>\n\n<p>Beware this only works for <a href=\"https://docs.rs/arrayvec/0.4.7/arrayvec/trait.Array.html\" rel=\"nofollow noreferrer\">specific sizes of arrays</a> because Rust does not yet have generic integers. <a href=\"https://docs.rs/arrayvec/0.4.7/arrayvec/struct.ArrayVec.html#method.into_inner\" rel=\"nofollow noreferrer\"><code>into_inner</code></a> also has a performance warning you should pay attention to.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/q/31360993/155423\">What is the proper way to initialize a fixed length array?</a> (especially <a href=\"https://stackoverflow.com/a/41592218/155423\">this answer</a>)</p></li>\n<li><p><a href=\"https://stackoverflow.com/q/29784502/155423\">Convert vectors to arrays and back</a>, which inadvertently wrote code that worked without copies, but does not explicitly claim it was on purpose</p></li>\n<li><p><a href=\"https://stackoverflow.com/q/25428920/155423\">How to get a slice as an array in Rust?</a></p></li>\n<li><a href=\"https://stackoverflow.com/q/29570607/155423\">Is there a good way to convert a Vec&lt;T&gt; to an array?</a></li>\n<li><a href=\"https://stackoverflow.com/q/37668886/155423\">Slice to fixed-size array</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": false, "score": 1, "last_activity_date": 1521232542, "creation_date": 1521232542, "answer_id": 49329128, "question_id": 49328371, "link": "https://stackoverflow.com/questions/49328371/how-to-convert-a-vec-into-an-array-without-copying-the-elements/49329128#49329128", "title": "How to convert a Vec into an array without copying the elements?", "body": "<p>Just for fun, here are examples that shows that safe Rust gives us ways of doing it for small specific sizes, for example like this:</p>\n\n<pre><code>/// Return the array inside Some(_), or None if there were too few elements\npub fn take_array3&lt;T&gt;(v: &amp;mut Vec&lt;T&gt;) -&gt; Option&lt;[T; 3]&gt; {\n    let mut iter = v.drain(..);\n    if let (Some(x), Some(y), Some(z))\n        = (iter.next(), iter.next(), iter.next())\n    {\n        return Some([x, y, z]);\n    }\n    None\n}\n\n/// Convert a Vec of length 3 to an array.\n///\n/// Panics if the Vec is not of the exact required length\npub fn into_array3&lt;T&gt;(mut v: Vec&lt;T&gt;) -&gt; [T; 3] {\n    assert_eq!(v.len(), 3);\n    let z = v.remove(2);\n    let y = v.remove(1);\n    let x = v.remove(0);\n    [x, y, z]\n}\n</code></pre>\n\n<p>The basic ways of having a <code>Vec</code> give you back ownership of its elements are <code>remove</code>, <code>pop</code>, <code>drain</code>, <code>into_iter</code>, etc.</p>\n"}, {"tags": [], "owner": {"reputation": 738, "user_id": 1454335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/990c962afbdf66ff3793cfc8a7fa121d?s=128&d=identicon&r=PG", "display_name": "Erik Arvidsson", "link": "https://stackoverflow.com/users/1454335/erik-arvidsson"}, "is_accepted": false, "score": 1, "last_activity_date": 1602353399, "creation_date": 1602353399, "answer_id": 64296707, "question_id": 49328371, "link": "https://stackoverflow.com/questions/49328371/how-to-convert-a-vec-into-an-array-without-copying-the-elements/64296707#64296707", "title": "How to convert a Vec into an array without copying the elements?", "body": "<p>There is also <code>try_into</code>?</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::convert::TryInto;\n\n#[derive(Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let v: Vec&lt;Point&gt; = vec![Point { x: 1, y: 1 }, Point { x: 2, y: 2 }];\n    let a: &amp;[Point; 2] = v[..].try_into().unwrap();\n    println!(&quot;{:?}&quot;, a);\n}\n</code></pre>\n<p>It borrows immutably so the Vec is not consumed.</p>\n"}], "owner": {"reputation": 43, "user_id": 5542874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8be7a2d7b18f51990dc392a1c7594117?s=128&d=identicon&r=PG&f=1", "display_name": "Fireant", "link": "https://stackoverflow.com/users/5542874/fireant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3973, "favorite_count": 0, "accepted_answer_id": 49328860, "answer_count": 3, "score": 4, "last_activity_date": 1602353399, "creation_date": 1521229239, "last_edit_date": 1521230658, "question_id": 49328371, "link": "https://stackoverflow.com/questions/49328371/how-to-convert-a-vec-into-an-array-without-copying-the-elements", "title": "How to convert a Vec into an array without copying the elements?", "body": "<p>I have a <code>Vec</code> of nontrivial types with a size I am certain of. I need to convert this into fixed size array. Ideally I would like to do this</p>\n\n<ol>\n<li>without copying the data over - I would like to consume the <code>Vec</code></li>\n<li>without preinitializing the array with zero data because that would be a waste of CPU cycles</li>\n</ol>\n\n<p>Question written as code:</p>\n\n<pre><code>struct Point {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let points = vec![\n        Point { x: 1, y: 2 },\n        Point { x: 3, y: 4 },\n        Point { x: 5, y: 6 },\n    ];\n\n    // I would like this to be an array of points\n    let array: [Point; 3] = ???;\n}\n</code></pre>\n\n<p>This seems like a trivial issue, however I have not been able to find satisfactory solution in <code>Vec</code> docs, slicing sections of Rust Books or by Googling. Only thing that I found is to first initialize the array with zero data and later copy all elements over from <code>Vec</code>, however this does not satisfy my requirements.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521214670, "post_id": 49324359, "comment_id": 85650419, "body": "The duplicate applied to your situation: <code>println!(&quot;a1 equals a2 is: {}&quot;, &amp;a1[..] == &amp;a2[..]);</code>"}], "owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 229, "favorite_count": 0, "closed_date": 1521214320, "answer_count": 0, "score": 2, "last_activity_date": 1521214334, "creation_date": 1521214119, "last_edit_date": 1521214334, "question_id": 49324359, "link": "https://stackoverflow.com/questions/49324359/how-can-i-check-if-two-large-arrays-are-equal", "closed_reason": "Duplicate", "title": "How can I check if two large arrays are equal?", "body": "<p>How can I check if 2 <code>[u8; 256]</code> arrays are equal (i.e. all elements are the same)? The compiler tells me that <code>PartialEq</code> isn't implemented, but if I try to implement it then it tells me the type isn't defined in the crate.</p>\n\n<pre><code>fn main() {\n    let a1: [u8; 256] = [0; 256];\n    let a2: [u8; 256] = [0; 256];\n\n    println!(\"a1 equals a2 is: {}\", a1 == a2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=cd5f6015ca6da7973ec0d334fb987c8f&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `==` cannot be applied to type `[u8; 256]`\n --&gt; src/main.rs:5:37\n  |\n5 |     println!(\"a1 equals a2 is: {}\", a1 == a2);\n  |                                     ^^^^^^^^\n  |\n  = note: an implementation of `std::cmp::PartialEq` might be missing for `[u8; 256]`\n</code></pre>\n\n<p>This works for smaller sized arrays so it's really confusing me.</p>\n"}, {"tags": ["rust", "private", "traits"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 9, "last_activity_date": 1521210282, "last_edit_date": 1521210282, "creation_date": 1521201100, "answer_id": 49320138, "question_id": 49319935, "link": "https://stackoverflow.com/questions/49319935/how-can-i-avoid-a-function-name-clash-while-implementing-a-trait/49320138#49320138", "title": "How can I avoid a function name clash while implementing a trait?", "body": "<p>You can use the <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation\" rel=\"noreferrer\">fully-qualified syntax</a> to disambiguate which method is to be used:</p>\n\n<pre><code>impl ExampleTrait for Example {\n    fn test(&amp;self) {\n        Example::test(self) // no more ambiguity\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 280, "user_id": 4035669, "user_type": "registered", "profile_image": "https://graph.facebook.com/1583135483/picture?type=large", "display_name": "Markus Knecht", "link": "https://stackoverflow.com/users/4035669/markus-knecht"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 648, "favorite_count": 0, "closed_date": 1521210312, "accepted_answer_id": 49320138, "answer_count": 1, "score": 4, "last_activity_date": 1521210282, "creation_date": 1521200428, "last_edit_date": 1521201248, "question_id": 49319935, "link": "https://stackoverflow.com/questions/49319935/how-can-i-avoid-a-function-name-clash-while-implementing-a-trait", "closed_reason": "Duplicate", "title": "How can I avoid a function name clash while implementing a trait?", "body": "<p>I have a struct with an implementation that has a function which accesses the private state of the struct.</p>\n\n<pre><code>struct Example {...}\n\nimpl Example {\n    fn test(&amp;self) -&gt; .. {...}\n}\n</code></pre>\n\n<p>Somewhere else in another module there exists another trait:</p>\n\n<pre><code>trait ExampleTrait {\n    fn test(&amp;self) -&gt; .. {...}\n}\n</code></pre>\n\n<p>Now I would like to implement <code>ExampleTrait</code> for the <code>Example</code> struct and to forward the test method to the test <code>impl</code> for the struct.</p>\n\n<p>The following code:</p>\n\n<pre><code>impl ExampleTrait for Example {\n    fn test(&amp;self) -&gt; .. {\n        self.test()\n    }\n}\n</code></pre>\n\n<p>Is obviously an infinite recursive call. I cannot just repeat the body of the original test as I do not have access to the private state of <code>Example</code> here.</p>\n\n<p>Is there another way to do this except for renaming one function or making fields in <code>Example</code> public?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 2, "creation_date": 1521186197, "post_id": 49315047, "comment_id": 85632218, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust&#39;s `String` and `str`?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 118, "user_id": 5674657, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QHAzp.jpg?s=128&g=1", "display_name": "Minijackson", "link": "https://stackoverflow.com/users/5674657/minijackson"}, "is_accepted": true, "score": 9, "last_activity_date": 1521211490, "last_edit_date": 1521211490, "creation_date": 1521191154, "answer_id": 49316765, "question_id": 49315047, "link": "https://stackoverflow.com/questions/49315047/how-does-a-reference-to-a-string-become-a-string-slice/49316765#49316765", "title": "How does a reference to a String become a string slice?", "body": "<p>You have just witnessed the <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code></a> trait. This trait has three uses:</p>\n\n<ul>\n<li>Conversion to another type when dereferencing (the <code>*</code> operator)</li>\n<li>Automatic conversion if necessary (coercion) when borrowing</li>\n<li>You can call methods of another type directly.</li>\n</ul>\n\n<p>In your case, because <code>String</code> implements <code>Deref&lt;Target = str&gt;</code> this means that <code>&amp;s</code> is coerced into a <code>&amp;str</code>.</p>\n\n<p>More info <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#deref\" rel=\"noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1531, "favorite_count": 0, "accepted_answer_id": 49316765, "answer_count": 1, "score": 4, "last_activity_date": 1521211490, "creation_date": 1521184338, "last_edit_date": 1521211330, "question_id": 49315047, "link": "https://stackoverflow.com/questions/49315047/how-does-a-reference-to-a-string-become-a-string-slice", "title": "How does a reference to a String become a string slice?", "body": "<p>I'm trying to understand the concept of strings and string slices.</p>\n\n<pre><code>fn say_hello_slice(slice: &amp;str) {\n    println!(\"Hey {}\", slice);\n}\n\nfn say_hello_string(string: &amp;String) {\n    println!(\"{:?}\", string);\n}\n\nfn print_int(int_ref: &amp;i32) {\n    println!(\"{:?}\", int_ref);\n}\n\nfn main() {\n    let slice: &amp;str = \"you\";\n    let s: String = String::from(\"String\");\n    say_hello_slice(slice);\n    say_hello_slice(&amp;s);\n\n    let number: i32 = 12345;\n    print_int(&amp;number);\n\n    say_hello_string(&amp;s);\n}\n</code></pre>\n\n<p>This program gives the below output when I compile and run:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Hey you\nHey String\n12345\n\"String\"\n</code></pre>\n\n<p>I understand that when <code>&amp;</code> is added to the binding it becomes a reference to its binding type. For example, <code>&amp;</code> to <code>number</code> in above program becomes <code>&amp;i32</code>.</p>\n\n<p>I don't understand how it works when I add <code>&amp;</code> to <code>String</code> and it becomes <code>&amp;str</code>.</p>\n"}, {"tags": ["rust", "clap"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1521190658, "creation_date": 1521190658, "answer_id": 49316606, "question_id": 49314122, "link": "https://stackoverflow.com/questions/49314122/using-multiple-values-of-an-argument-in-clap/49316606#49316606", "title": "Using multiple values of an argument in Clap", "body": "<p>You can do it by using the <a href=\"https://docs.rs/clap/2.31.1/clap/struct.ArgMatches.html#method.values_of\" rel=\"nofollow noreferrer\"><code>values_of</code></a> method:</p>\n\n<pre><code>let dir_names: Vec&lt;&amp;str&gt; = m.values_of(\"output\").unwrap().collect();\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 7518018, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c6554d378bb5a8b20092e85d26350f5?s=128&d=identicon&r=PG&f=1", "display_name": "ka s", "link": "https://stackoverflow.com/users/7518018/ka-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 648, "favorite_count": 0, "accepted_answer_id": 49316606, "answer_count": 1, "score": 1, "last_activity_date": 1521210722, "creation_date": 1521180017, "last_edit_date": 1521210722, "question_id": 49314122, "link": "https://stackoverflow.com/questions/49314122/using-multiple-values-of-an-argument-in-clap", "title": "Using multiple values of an argument in Clap", "body": "<p>I am using Clap and my YAML file has the following:</p>\n\n<pre><code>args:\n- DIRECTORY\n    help: one or more directories\n    required: true\n    multiple: true\n</code></pre>\n\n<p>In my main.rs, I want to get the name of each of the directory passed as an argument and do something like </p>\n\n<pre><code>dir_names.push(name_of_the_directory);\n</code></pre>\n\n<p>where <code>dir_names</code> is a vector and <code>name_of_the_directory</code> is a string slice. </p>\n\n<p>How do I proceed?</p>\n"}, {"tags": ["memory-management", "rust", "destructor"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1521210893, "post_id": 49313782, "comment_id": 85647767, "body": "You don&#39;t even have to look at the source. The <a href=\"https://doc.rust-lang.org/std/mem/fn.drop.html\" rel=\"nofollow noreferrer\">documentation for <code>drop</code></a> literally has the source code of the function embedded in it."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 9, "last_activity_date": 1521178361, "creation_date": 1521178361, "answer_id": 49313782, "question_id": 49313676, "link": "https://stackoverflow.com/questions/49313676/is-this-a-valid-implementation-of-stdmemdrop/49313782#49313782", "title": "Is this a valid implementation of `std::mem::drop`?", "body": "<p>Let's take a look at the <a href=\"https://github.com/rust-lang/rust/blob/a7170b0412d1baa4e30cb31d1ea326617021f086/src/libcore/mem.rs#L785-L787\" rel=\"noreferrer\">source</a>:</p>\n\n<pre><code>#[inline]\n#[stable(feature = \"rust1\", since = \"1.0.0\")]\npub fn drop&lt;T&gt;(_x: T) { }\n</code></pre>\n\n<p><code>#[inline]</code> gives a hint to the compiler that the function should be inlined. <code>#[stable]</code> is used by the standard library to mark APIs that are available on the stable channel. Otherwise, it's really just an empty function! When <code>_x</code> goes out of scope as <code>drop</code> returns, its destructor is run; there is no other way to perform cleanup tasks implicitly in Rust.</p>\n"}], "owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 49313782, "answer_count": 1, "score": 2, "last_activity_date": 1521210820, "creation_date": 1521177672, "last_edit_date": 1521210820, "question_id": 49313676, "link": "https://stackoverflow.com/questions/49313676/is-this-a-valid-implementation-of-stdmemdrop", "title": "Is this a valid implementation of `std::mem::drop`?", "body": "<p>According to <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-03-drop.html\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em>, ch15-03</a>, <code>std::mem::drop</code> takes an object, receives its ownership, and calls its <code>drop</code> function.</p>\n\n<p>That's what this code does:</p>\n\n<pre><code>fn my_drop&lt;T&gt;(x: T) {}\n\nfn main() {\n    let x = 5;\n    let y = &amp;x;\n    let mut z = 4;\n\n    let v = vec![3, 4, 2, 5, 3, 5];\n\n    my_drop(v);\n}\n</code></pre>\n\n<p>Is this what <code>std::mem::drop</code> does? Does it perform any other cleanup tasks other than these?</p>\n"}, {"tags": ["rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 29, "last_activity_date": 1521761317, "last_edit_date": 1521761317, "creation_date": 1521177723, "answer_id": 49313680, "question_id": 49312600, "link": "https://stackoverflow.com/questions/49312600/how-do-i-serialize-or-deserialize-an-arct-in-serde/49313680#49313680", "title": "How do I serialize or deserialize an Arc&lt;T&gt; in Serde?", "body": "<p>Serde provides implementations of <code>Serialize</code> and <code>Deserialize</code> for <code>Arc&lt;T&gt;</code> and <code>Rc&lt;T&gt;</code>, but only if the <code>rc</code> feature is enabled.</p>\n\n<p>There's a comment on <a href=\"https://serde.rs/feature-flags.html#-features-rc\" rel=\"noreferrer\">Serde's reference website</a> explaining why:</p>\n\n<blockquote>\n  <p>Opt into impls for <code>Rc&lt;T&gt;</code> and <code>Arc&lt;T&gt;</code>. Serializing and deserializing these types does not preserve identity and may result in multiple copies of the same data. Be sure that this is what you want before enabling this feature.</p>\n</blockquote>\n\n<p>To enable the <code>rc</code> feature, you need to ask for it in your own <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nserde = { version = \"1.0\", features = [\"rc\"] }\n</code></pre>\n"}], "owner": {"reputation": 746, "user_id": 2480711, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2cf2031176ea40b5be577a9a1b025ada?s=128&d=identicon&r=PG", "display_name": "dempzorz", "link": "https://stackoverflow.com/users/2480711/dempzorz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3201, "favorite_count": 1, "accepted_answer_id": 49313680, "answer_count": 1, "score": 17, "last_activity_date": 1521761317, "creation_date": 1521170087, "last_edit_date": 1521211048, "question_id": 49312600, "link": "https://stackoverflow.com/questions/49312600/how-do-i-serialize-or-deserialize-an-arct-in-serde", "title": "How do I serialize or deserialize an Arc&lt;T&gt; in Serde?", "body": "<p>I have a struct that contains children of its own type.  These children are wrapped in <code>Arc</code>s, and I'm getting issues when calling <code>serde_json::to_string</code> on it. My struct is:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\npub struct Category {\n    pub id: i32,\n    pub name: String,\n    pub parent_id: i32,\n    pub children: Vec&lt;Arc&lt;Category&gt;&gt;,\n}\n</code></pre>\n\n<p>This produces the error <code>the trait 'serde::Serialize' is not implemented for 'std::sync::Arc&lt;db::queries::categories::Category&gt;'</code> I've tried a few different approaches to get serialization working, such as:</p>\n\n<pre><code>#[serde(serialize_with = \"arc_category_vec\")]\npub children: Vec&lt;Arc&lt;Category&gt;&gt;\n</code></pre>\n\n\n\n<pre><code>fn arc_category_vec&lt;S&gt;(value: &amp;Vec&lt;Arc&lt;Category&gt;&gt;, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\nwhere\n    S: Serializer,\n{\n    let mut seq = serializer.serialize_seq(Some(value.len()))?;\n    for e in value {\n        seq.serialize_element(e.as_ref())?;\n    }\n    seq.end()\n}\n</code></pre>\n\n<p>This doesn't help as I get the same error.  I also tried:</p>\n\n<pre><code>impl Serialize for Arc&lt;Category&gt; {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where\n        S: Serializer,\n    {\n        let mut state = serializer.serialize_struct(\"Category\", 4)?;\n\n        state.serialize_field(\"id\", &amp;self.id)?;\n        state.serialize_field(\"name\", &amp;self.name)?;\n        state.serialize_field(\"parent_id\", &amp;self.parent_id)?;\n        state.serialize_field(\"children\", &amp;self.children)?;\n        state.end();\n    }\n}\n</code></pre>\n\n<p>but that gives the error <code>impl doesn't use types inside crate</code></p>\n\n<p>I could probably live without deserialization, since serialization is more important at this point.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1521169299, "last_edit_date": 1521169299, "creation_date": 1521165072, "answer_id": 49312019, "question_id": 49311954, "link": "https://stackoverflow.com/questions/49311954/how-can-min-by-key-or-max-by-key-be-used-with-references-to-a-value-created-duri/49312019#49312019", "title": "How can min_by_key or max_by_key be used with references to a value created during iteration?", "body": "<p>They cannot. As values flow through iterator adapters, they are moved. Moving a value causes any references to it to be invalidated. You are attempting to take a reference to a value that only exists in the iterator pipeline; the reference cannot live long enough. This is equivalent to this basic example:</p>\n\n<pre><code>(0..9).map(|x| &amp;x)\n</code></pre>\n\n<p>You will need to use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.min_by\" rel=\"nofollow noreferrer\"><code>Iterator::min_by</code></a>:</p>\n\n<pre><code>v.iter().map(|i| (X(*i),)).min_by(|a, b| a.0.cmp(&amp;b.0));\n</code></pre>\n\n<p>This works because the returned value from the closure is an <code>Ordering</code> with no references to the original values.</p>\n"}], "owner": {"reputation": 992, "user_id": 2221217, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4fd7b569b6ff5ecb0df3b710ef0e06d3?s=128&d=identicon&r=PG", "display_name": "Rub&#233;n Dur&#225; Tar&#237;", "link": "https://stackoverflow.com/users/2221217/rub%c3%a9n-dur%c3%a1-tar%c3%ad"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 907, "favorite_count": 1, "accepted_answer_id": 49312019, "answer_count": 1, "score": 1, "last_activity_date": 1521169299, "creation_date": 1521164559, "last_edit_date": 1521165097, "question_id": 49311954, "link": "https://stackoverflow.com/questions/49311954/how-can-min-by-key-or-max-by-key-be-used-with-references-to-a-value-created-duri", "title": "How can min_by_key or max_by_key be used with references to a value created during iteration?", "body": "<p>I have an iterator that maps over some values, creating tuples on the way. I need to get the maximum by one of the elements on the tuple (<strong>which is not <code>Copy</code></strong>), but interior references are getting in the way (as <a href=\"https://github.com/rust-lang/rust/issues/27724\" rel=\"nofollow noreferrer\">was expected when it got stabilised</a>).</p>\n\n<p>How can I make something like this work?</p>\n\n<pre><code>// Not a Copy type!\n#[derive(Ord, PartialOrd, Eq, PartialEq)]\nstruct t(i8);\n\nfn main() {\n    // This works\n    let v = vec![(t(0),), (t(1),)];\n    v.iter().min_by_key(|v| &amp;v.0);\n\n    // This doesn't\n    let v = vec![0, 1];\n    v.iter().map(|i| (t(*i),)).min_by_key(|v| &amp;v.0);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=540af072a396722a50fa9c3704d6a248&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:12:47\n   |\n12 |     v.iter().map(|i| (t(*i),)).min_by_key(|v| &amp;v.0);\n   |                                               ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 12:43...\n  --&gt; src/main.rs:12:43\n   |\n12 |     v.iter().map(|i| (t(*i),)).min_by_key(|v| &amp;v.0);\n   |                                           ^^^^^^^^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:12:47\n   |\n12 |     v.iter().map(|i| (t(*i),)).min_by_key(|v| &amp;v.0);\n   |                                               ^^^^\nnote: but, the lifetime must be valid for the method call at 12:5...\n  --&gt; src/main.rs:12:5\n   |\n12 |     v.iter().map(|i| (t(*i),)).min_by_key(|v| &amp;v.0);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that a type/lifetime parameter is in scope here\n  --&gt; src/main.rs:12:5\n   |\n12 |     v.iter().map(|i| (t(*i),)).min_by_key(|v| &amp;v.0);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 9500033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7b5f7e0658d647ac9145ce26926697d?s=128&d=identicon&r=PG&f=1", "display_name": "fontar", "link": "https://stackoverflow.com/users/9500033/fontar"}, "edited": false, "score": 0, "creation_date": 1521217486, "post_id": 49309949, "comment_id": 85652263, "body": "Thank you, Yes I had a simple program I wrote in Perl. I was translating it step by step and found this problem. I know it would enter in an infinite loop, the stop conditions were missing yet."}], "tags": [], "owner": {"reputation": 13169, "user_id": 967945, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/47244a17f72cee237f57f4c4b9613ea1?s=128&d=identicon&r=PG", "display_name": "Dan Hulme", "link": "https://stackoverflow.com/users/967945/dan-hulme"}, "is_accepted": false, "score": 6, "last_activity_date": 1521151266, "creation_date": 1521151266, "answer_id": 49309949, "question_id": 49309847, "link": "https://stackoverflow.com/questions/49309847/how-can-i-solve-use-of-moved-value-and-which-does-not-implement-the-copy-tr/49309949#49309949", "title": "How can I solve &quot;use of moved value&quot; and &quot;which does not implement the `Copy` trait&quot;?", "body": "<p>The fix for this particular problem is to <em>borrow</em> the <code>Vec</code> you're iterating over instead of moving it:</p>\n\n<pre><code>for element_index in &amp;additions {\n    let addition_aux = values[*element_index];\n    addition = addition_aux + addition;\n}\n</code></pre>\n\n<p>but your code has other problems. You never change <code>additions</code> by adding or removing elements, so your <code>while additions.len() &gt; 0</code> will never terminate. I hope this is because you haven't finished and wanted to work out how to fix the immediate problem before writing the rest of the function.</p>\n\n<p>For now, you might benefit from re-reading <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch04-00-understanding-ownership.html\" rel=\"noreferrer\">the chapter of the Rust Book about ownership, moves, and borrowing</a>.</p>\n"}], "owner": {"reputation": 71, "user_id": 9500033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7b5f7e0658d647ac9145ce26926697d?s=128&d=identicon&r=PG&f=1", "display_name": "fontar", "link": "https://stackoverflow.com/users/9500033/fontar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7480, "favorite_count": 1, "answer_count": 1, "score": 7, "last_activity_date": 1521151287, "creation_date": 1521150765, "last_edit_date": 1521151287, "question_id": 49309847, "link": "https://stackoverflow.com/questions/49309847/how-can-i-solve-use-of-moved-value-and-which-does-not-implement-the-copy-tr", "title": "How can I solve &quot;use of moved value&quot; and &quot;which does not implement the `Copy` trait&quot;?", "body": "<p>I'm trying to read the values from a vector and use the values as indexes to perform an addition:</p>\n\n<pre><code>fn main() {\n    let objetive = 3126.59;\n\n    // 27\n    let values: Vec&lt;f64&gt; = vec![\n        2817.42, 2162.17, 3756.57, 2817.42, -2817.42, 946.9, 2817.42, 964.42, 795.43, 3756.57,\n        139.34, 903.58, -3756.57, 939.14, 828.04, 1120.04, 604.03, 3354.74, 2748.06, 1470.8,\n        4695.71, 71.11, 2391.48, 331.29, 1214.69, 863.52, 7810.01,\n    ];\n\n    let values_number = values.len();\n    let values_index_max = values_number - 1;\n\n    let mut additions: Vec&lt;usize&gt; = vec![0];\n\n    println!(\"{:?}\", values_number);\n\n    while additions.len() &gt; 0 {\n        let mut addition: f64 = 0.0;\n        let mut saltar: i32 = 0;\n\n        // Sumar valores en additions\n        for element_index in additions {\n            let addition_aux = values[element_index];\n            addition = addition_aux + addition;\n        }\n    }\n}\n</code></pre>\n\n<p>I get the following error. How can I solve it?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `additions`\n  --&gt; src/main.rs:18:11\n   |\n18 |     while additions.len() &gt; 0 {\n   |           ^^^^^^^^^ value used here after move\n...\n23 |         for element_index in additions {\n   |                              --------- value moved here\n   |\n   = note: move occurs because `additions` has type `std::vec::Vec&lt;usize&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `additions`\n  --&gt; src/main.rs:23:30\n   |\n23 |         for element_index in additions {\n   |                              ^^^^^^^^^ value moved here in previous iteration of loop\n   |\n   = note: move occurs because `additions` has type `std::vec::Vec&lt;usize&gt;`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["mysql", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1521256408, "last_edit_date": 1521256408, "creation_date": 1521151051, "answer_id": 49309907, "question_id": 49309497, "link": "https://stackoverflow.com/questions/49309497/how-can-i-enclose-a-mysqlconn-in-a-lazy-static-macro/49309907#49309907", "title": "How can I enclose a mysql::Conn in a lazy_static macro?", "body": "<p>Your code works just fine... on macOS. I believe this to be <a href=\"https://github.com/blackbeam/rust-mysql-simple/issues/135\" rel=\"nofollow noreferrer\">a bug with the \nimplementation of the MySQL crate</a>, and the author agreed, fixing the bug in less than a day. You should be able to just upgrade the crate and use your original code.</p>\n\n<hr>\n\n<p>As a temporary workaround, you can wrap the <code>Conn</code> in a <code>Mutex</code>:</p>\n\n<pre><code>use mysql::*;\nuse std::sync::Mutex;\n\nfn some_fn() {\n    lazy_static! {\n        static ref CONNECTION: Mutex&lt;Conn&gt; = Mutex::new(Conn::new(\"mysql://root:password@127.0.0.1:3306/mydb?prefer_socket=false\").unwrap());\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>if my program is not multithreaded and I use non-thread-safe types?</p>\n</blockquote>\n\n<p>I <em>always</em> recommend against using global variables, threads or not. Instead, create your <code>Conn</code> at the top of your program and pass references to it into all of your functions.</p>\n"}], "owner": {"reputation": 147, "user_id": 8940015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26dcc35052997268151655e9ab26d243?s=128&d=identicon&r=PG&f=1", "display_name": "mrbus2007", "link": "https://stackoverflow.com/users/8940015/mrbus2007"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 0, "accepted_answer_id": 49309907, "answer_count": 1, "score": 1, "last_activity_date": 1521256408, "creation_date": 1521149082, "last_edit_date": 1521151389, "question_id": 49309497, "link": "https://stackoverflow.com/questions/49309497/how-can-i-enclose-a-mysqlconn-in-a-lazy-static-macro", "title": "How can I enclose a mysql::Conn in a lazy_static macro?", "body": "<p>This code:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\nextern crate mysql;\n\nuse mysql::*;\n\nfn some_fn() {\n    lazy_static! {\n        static ref CONNECTION: Conn = Conn::new(\"mysql://root:password@127.0.0.1:3306/mydb?prefer_socket=false\").unwrap();\n    }\n}\n</code></pre>\n\n<p>generates a very long error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `*mut std::os::raw::c_void: std::marker::Sync` is not satisfied in `winapi::minwinbase::OVERLAPPED`\n  --&gt; src\\main.rs:8:5\n   |\n8  | /     lazy_static! {\n9  | |         static ref CONNECTION: Conn = Conn::new(\"mysql://root:password@127.0.0.1:3306/mydb?prefer_socket=false\").unwrap();\n10 | |     }\n   | |_____^ `*mut std::os::raw::c_void` cannot be shared between threads safely\n   |\n   = help: within `winapi::minwinbase::OVERLAPPED`, the trait `std::marker::Sync` is not implemented for `*mut std::os::raw::c_void`\n   = note: required because it appears within the type `winapi::minwinbase::OVERLAPPED`\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::ptr::Unique&lt;winapi::minwinbase::OVERLAPPED&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;winapi::minwinbase::OVERLAPPED&gt;`\n   = note: required because it appears within the type `named_pipe::Overlapped`\n   = note: required because it appears within the type `named_pipe::PipeClient`\n   = note: required because it appears within the type `std::option::Option&lt;named_pipe::PipeClient&gt;`\n   = note: required because it appears within the type `std::io::BufWriter&lt;named_pipe::PipeClient&gt;`\n   = note: required because it appears within the type `std::option::Option&lt;std::io::BufWriter&lt;named_pipe::PipeClient&gt;&gt;`\n   = note: required because it appears within the type `bufstream::InternalBufWriter&lt;named_pipe::PipeClient&gt;`\n   = note: required because it appears within the type `std::io::BufReader&lt;bufstream::InternalBufWriter&lt;named_pipe::PipeClient&gt;&gt;`\n   = note: required because it appears within the type `bufstream::BufStream&lt;named_pipe::PipeClient&gt;`\n   = note: required because it appears within the type `mysql::io::Stream`\n   = note: required because it appears within the type `std::option::Option&lt;mysql::io::Stream&gt;`\n   = note: required because it appears within the type `mysql::Conn`\n   = note: required by `lazy_static::lazy::Lazy`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>Is it because <code>mysql::Conn</code> is not intended to use in multithreaded apps?\nHow I can use lazy_static if my program is not multithreaded and I use non-thread-safe types?</p>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521133187, "post_id": 49304488, "comment_id": 85612554, "body": "So implementing <code>From&lt;U&gt; for V</code> allows me to use <code>val.into::&lt;U&gt;()</code>, where <code>val</code> is a <code>V</code>. Is it true the other way round? i.e. Does implementing <code>Into&lt;U&gt; for V</code> allow me to use <code>U::from(val)</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521133219, "post_id": 49304488, "comment_id": 85612584, "body": "@saga no; that would cause infinite loops."}, {"owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521133267, "post_id": 49304488, "comment_id": 85612616, "body": "<code>no; that would cause infinite loops.</code> Why? Isn&#39;t <code>val.into::&lt;U&gt;()</code> equivalent to <code>U::from(val)</code>?"}, {"owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521133973, "post_id": 49304488, "comment_id": 85613042, "body": "Yes, there is a <code>From&lt;Value&gt; for RpcObject</code> in the code. The code belongs to <code>xi-editor</code>. What I don&#39;t understand is why would symmetrical behaviour of <code>From</code> and <code>Into</code> would cause an infinite loop?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 1, "creation_date": 1521134990, "post_id": 49304488, "comment_id": 85613687, "body": "@saga Because there would be a blanket implementation of <code>From</code> that says &quot;go look at <code>Into</code>&quot; and a blanket implementation of <code>Into</code> that says &quot;go look at <code>From</code>&quot;. There would be nowhere you could actually implement any conversion logic, and the compiler would just cycle back and forth forever trying to figure out what implementation to use. <a href=\"https://play.rust-lang.org/?gist=526c991b8d2eb4d7debec73f6c005ec3&amp;version=stable\" rel=\"nofollow noreferrer\">Example</a>."}, {"owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521135362, "post_id": 49304488, "comment_id": 85613912, "body": "That shouldn&#39;t be very hard to resolve. The compiler should first check if there is a native implementation for conversion from one type to the other, and it should check for the other one only if that hasn&#39;t been implemented. Am I missing something here? Would it cause any other problem?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521136449, "post_id": 49304488, "comment_id": 85614545, "body": "@saga if you believe that you can improve the Rust compiler or language, you are certainly encouraged to do so, especially if you believe it to not be hard! Rust is <a href=\"https://github.com/rust-lang/rust\" rel=\"nofollow noreferrer\">open-source</a> and also has an <a href=\"https://github.com/rust-lang/rfcs/\" rel=\"nofollow noreferrer\">open RFC process</a>. However, I don&#39;t know what you mean by &quot;native&quot; implementation, all implementations are the same from my point of view, modulo the orphan rules."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1555011148, "last_edit_date": 1555011148, "creation_date": 1521130925, "answer_id": 49304488, "question_id": 49304346, "link": "https://stackoverflow.com/questions/49304346/what-does-the-valueinto-method-from-the-serde-json-crate-do/49304488#49304488", "title": "What does the Value::into method from the serde_json crate do?", "body": "<p><a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>Into</code></a> is a trait with the <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html#tymethod.into\" rel=\"nofollow noreferrer\">single method <code>into</code></a>. <code>Into</code> is implemented for every type that implements <a href=\"https://doc.rust-lang.org/std/convert/trait.From.html\" rel=\"nofollow noreferrer\"><code>From</code></a>:</p>\n\n<pre><code>impl&lt;T, U&gt; Into&lt;U&gt; for T\nwhere\n    U: From&lt;T&gt;, \n</code></pre>\n\n<p><a href=\"https://docs.rs/serde_json/1.0.11/serde_json/enum.Value.html\" rel=\"nofollow noreferrer\"><code>serde_json::Value</code></a> implements many different versions of <code>From</code></p>\n\n<pre><code>impl From&lt;i8&gt; for Value\nimpl From&lt;i16&gt; for Value\nimpl From&lt;i32&gt; for Value\nimpl From&lt;i64&gt; for Value\nimpl From&lt;isize&gt; for Value\nimpl From&lt;u8&gt; for Value\nimpl From&lt;u16&gt; for Value\nimpl From&lt;u32&gt; for Value\nimpl From&lt;u64&gt; for Value\nimpl From&lt;usize&gt; for Value\nimpl From&lt;f32&gt; for Value\nimpl From&lt;f64&gt; for Value\nimpl From&lt;bool&gt; for Value\nimpl From&lt;String&gt; for Value\nimpl&lt;'a&gt; From&lt;&amp;'a str&gt; for Value\nimpl&lt;'a&gt; From&lt;Cow&lt;'a, str&gt;&gt; for Value\nimpl From&lt;Map&lt;String, Value&gt;&gt; for Value\nimpl&lt;T: Into&lt;Value&gt;&gt; From&lt;Vec&lt;T&gt;&gt; for Value\nimpl&lt;'a, T: Clone + Into&lt;Value&gt;&gt; From&lt;&amp;'a [T]&gt; for Value\n</code></pre>\n\n<p>These two traits are used to provide conversions between types that cannot fail. The traits <a href=\"https://doc.rust-lang.org/std/convert/trait.TryFrom.html\" rel=\"nofollow noreferrer\"><code>TryFrom</code></a> and <a href=\"https://doc.rust-lang.org/std/convert/trait.TryInto.html\" rel=\"nofollow noreferrer\"><code>TryInto</code></a> allow for fallible conversions starting in Rust 1.34.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29812530/155423\">When should I implement std::convert::From vs std::convert::Into?</a></li>\n<li><a href=\"https://doc.rust-lang.org/beta/rust-by-example/conversion/from_into.html\" rel=\"nofollow noreferrer\"><code>From</code> and <code>Into</code> in <em>Rust by Example</em></a></li>\n</ul>\n\n<hr>\n\n<p>An astute reader will have noticed that what I showed above actually allows you to convert <em>to</em> a <code>serde_json::Value</code>. Technically, the original code converts to a <code>RpcObject</code> <em>from</em> a <code>Value</code>. Somewhere in your code there is <code>impl From&lt;serde_json::Value&gt; for RpcObject</code>, but since that implementation isn't provided, I can't link to any useful documentation for that, but the pattern is the same.</p>\n"}], "owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 49304488, "answer_count": 1, "score": 1, "last_activity_date": 1555011148, "creation_date": 1521130434, "last_edit_date": 1521130703, "question_id": 49304346, "link": "https://stackoverflow.com/questions/49304346/what-does-the-valueinto-method-from-the-serde-json-crate-do", "title": "What does the Value::into method from the serde_json crate do?", "body": "<p>This piece of code calls <code>val.into()</code> function where <code>val</code> is a <code>serde_json::Value</code> enum, but I can't find any description of <code>into</code> function in the Rust docs. </p>\n\n<pre><code>pub fn parse(&amp;self, s: &amp;str) -&gt; Result&lt;RpcObject, ReadError&gt; {\n    let val = serde_json::from_str::&lt;Value&gt;(&amp;s)?;\n    if !val.is_object() {\n        Err(ReadError::NotObject)\n    } else {\n        Ok(val.into())\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "symbols", "ffi", "lifetime"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1521124155, "post_id": 49300618, "comment_id": 85605957, "body": "Why do not you box them?"}, {"owner": {"reputation": 43, "user_id": 9198969, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-C0T1Ge4Ngf0/AAAAAAAAAAI/AAAAAAAAAdM/nDAUeCjwljs/photo.jpg?sz=128", "display_name": "Marco Napetti", "link": "https://stackoverflow.com/users/9198969/marco-napetti"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1521124712, "post_id": 49300618, "comment_id": 85606367, "body": "@Boiethios do you mean Arc&lt;Box&lt;Symbol&lt;&#39;a, extern...&gt;&gt;&gt; ? Or do you mean to use the Box only when inserting Symbol insite the Vec? But the type definition will still contain a lifetime..."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1521124946, "post_id": 49300618, "comment_id": 85606555, "body": "Oh, sorry, I didn&#39;t read the definition of <a href=\"https://docs.rs/dynamic_reload/0.3.0/dynamic_reload/struct.Symbol.html\" rel=\"nofollow noreferrer\"><code>Symbol</code></a>..."}], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 9198969, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-C0T1Ge4Ngf0/AAAAAAAAAAI/AAAAAAAAAdM/nDAUeCjwljs/photo.jpg?sz=128", "display_name": "Marco Napetti", "link": "https://stackoverflow.com/users/9198969/marco-napetti"}, "edited": false, "score": 0, "creation_date": 1521225824, "post_id": 49302889, "comment_id": 85656959, "body": "Thank you very much for your explanation"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1521128591, "last_edit_date": 1521128591, "creation_date": 1521126227, "answer_id": 49302889, "question_id": 49300618, "link": "https://stackoverflow.com/questions/49300618/how-to-store-a-reference-without-having-to-deal-with-lifetimes/49302889#49302889", "title": "How to store a reference without having to deal with lifetimes?", "body": "<blockquote>\n  <p>How to store a reference without having to deal with lifetimes?</p>\n</blockquote>\n\n<p>The answer in 98% of the cases is: <strong>you don't</strong>. Lifetimes are one of the biggest reasons to use Rust. Lifetimes enforce, <em>at compile time</em>, that your references will always refer to something that is valid. If you wish to \"ignore\" lifetimes, then perhaps Rust may not the best language to realize a particular design. You may need to pick a different language or design.</p>\n\n<blockquote>\n  <p>Is it a valid workaround to use <code>std::mem::transmute</code> to change <code>Symbol</code>'s lifetime to <code>'static</code>?</p>\n</blockquote>\n\n<p><code>transmute</code> is The Big Hammer, suitable for all sorts of good and bad ideas and implementations. I would encourage never using it directly, but instead wrapping it in a layer of abstraction that somehow helps you enforce the appropriate restrictions that make that particular transmute correct.</p>\n\n<p>If you choose to use <code>transmute</code>, you are assuming the <em>full responsibility</em> that the compiler previously had. It will be up to you to ensure that the reference is <strong>always</strong> valid, otherwise you are invoking undefined behavior and your program is allowed to do any number of Very Bad things.</p>\n\n<hr>\n\n<p>For your specific case, you <em>may</em> be able to use <a href=\"https://crates.io/crates/rental\" rel=\"noreferrer\">the Rental crate</a> to keep around \"the library\" and \"references into the library\" in a single struct that hides the lifetimes of the <code>Symbol</code>s. In fact, Rental uses <a href=\"https://crates.io/crates/libloading\" rel=\"noreferrer\">libloading</a> as the motivating example and libloading powers dynamic_reload. See\n<a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a> for more details and pitfalls.</p>\n\n<p>I'm not optimistic that this will work because <a href=\"https://docs.rs/dynamic_reload/0.3.0/dynamic_reload/struct.DynamicReload.html#method.update\" rel=\"noreferrer\"><code>DynamicReload::update</code></a> requires a <code>&amp;mut self</code>. During that method call, it could easily invalidate all of the existing references.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44912349/155423\">How can I avoid a ripple effect from changing a concrete struct to generic?</a></li>\n</ul>\n"}], "owner": {"reputation": 43, "user_id": 9198969, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-C0T1Ge4Ngf0/AAAAAAAAAAI/AAAAAAAAAdM/nDAUeCjwljs/photo.jpg?sz=128", "display_name": "Marco Napetti", "link": "https://stackoverflow.com/users/9198969/marco-napetti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 624, "favorite_count": 0, "accepted_answer_id": 49302889, "answer_count": 1, "score": 4, "last_activity_date": 1521128591, "creation_date": 1521120247, "last_edit_date": 1521125050, "question_id": 49300618, "link": "https://stackoverflow.com/questions/49300618/how-to-store-a-reference-without-having-to-deal-with-lifetimes", "title": "How to store a reference without having to deal with lifetimes?", "body": "<p>As suggested by <a href=\"https://github.com/emoon/dynamic_reload\" rel=\"nofollow noreferrer\">the <code>dynamic_reload</code> crate's example</a>, I collected <code>Symbol</code>s instead of extracting them every time, but <code>Symbol</code> requires a lifetime. Using a lifetime changes method signatures and breaks the compatibility with method <code>DynamicReload::update</code>.</p>\n\n<p>Is it a valid workaround to use <code>std::mem::transmute</code> to change <code>Symbol</code>'s lifetime to <code>'static</code>?</p>\n\n<pre><code>extern crate dynamic_reload;\n\nuse dynamic_reload::{DynamicReload, Lib, Symbol, Search, PlatformName, UpdateState};\nuse std::sync::Arc;\nuse std::time::Duration;\nuse std::thread;\nuse std::mem::transmute;\n\nstruct Plugins {\n    plugins: Vec&lt;(Arc&lt;Lib&gt;, Arc&lt;Symbol&lt;'static, extern \"C\" fn() -&gt; i32&gt;&gt;)&gt;,\n}\n\nimpl Plugins {\n    fn add_plugin(&amp;mut self, plugin: &amp;Arc&lt;Lib&gt;) {\n        match unsafe { plugin.lib.get(b\"shared_fun\\0\") } {\n            Ok(temp) =&gt; {\n                let f: Symbol&lt;extern \"C\" fn() -&gt; i32&gt; = temp;\n                self.plugins.push((plugin.clone(), Arc::new(unsafe { transmute(f) })));\n            },\n            Err(e) =&gt; println!(\"Failed to load symbol: {:?}\", e),\n        }\n    }\n\n    fn unload_plugins(&amp;mut self, lib: &amp;Arc&lt;Lib&gt;) {\n        for i in (0..self.plugins.len()).rev() {\n            if &amp;self.plugins[i].0 == lib {\n                self.plugins.swap_remove(i);\n            }\n        }\n    }\n\n    fn reload_plugin(&amp;mut self, lib: &amp;Arc&lt;Lib&gt;) {\n        Self::add_plugin(self, lib);\n    }\n\n    // called when a lib needs to be reloaded.\n    fn reload_callback(&amp;mut self, state: UpdateState, lib: Option&lt;&amp;Arc&lt;Lib&gt;&gt;) {\n        match state {\n            UpdateState::Before =&gt; Self::unload_plugins(self, lib.unwrap()),\n            UpdateState::After =&gt; Self::reload_plugin(self, lib.unwrap()),\n            UpdateState::ReloadFailed(_) =&gt; println!(\"Failed to reload\"),\n        }\n    }\n}\n\nfn main() {\n    let mut plugs = Plugins { plugins: Vec::new() };\n\n    // Setup the reload handler. A temporary directory will be created inside the target/debug\n    // where plugins will be loaded from. That is because on some OS:es loading a shared lib\n    // will lock the file so we can't overwrite it so this works around that issue.\n    let mut reload_handler = DynamicReload::new(Some(vec![\"target/debug\"]),\n                                                Some(\"target/debug\"),\n                                                Search::Default);\n\n    // test_shared is generated in build.rs\n    match reload_handler.add_library(\"test_shared\", PlatformName::Yes) {\n        Ok(lib) =&gt; plugs.add_plugin(&amp;lib),\n        Err(e) =&gt; {\n            println!(\"Unable to load dynamic lib, err {:?}\", e);\n            return;\n        }\n    }\n\n    //\n    // While this is running (printing a number) change return value in file src/test_shared.rs\n    // build the project with cargo build and notice that this code will now return the new value\n    //\n    loop {\n        reload_handler.update(Plugins::reload_callback, &amp;mut plugs);\n\n        if plugs.plugins.len() &gt; 0 {\n            let fun = &amp;plugs.plugins[0].1;\n            println!(\"Value {}\", fun());\n        }\n\n        // Wait for 0.5 sec\n        thread::sleep(Duration::from_millis(500));\n    }\n}\n</code></pre>\n\n<p>I still have to keep <code>Arc&lt;Lib&gt;</code> inside the vector because <code>Symbol</code> doesn't implement <code>PartialEq</code>.</p>\n"}, {"tags": ["vector", "rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521119720, "post_id": 49300331, "comment_id": 85602502, "body": "What is the scope of <code>v.iter_mut()</code> in the 4th line?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521119744, "post_id": 49300331, "comment_id": 85602519, "body": "@saga the body of the <code>for</code> loop."}, {"owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521119888, "post_id": 49300331, "comment_id": 85602632, "body": "so we have to make use of nested scopes to deal with this restriction of rust, am I right?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521120010, "post_id": 49300331, "comment_id": 85602717, "body": "@saga in case of such loops I&#39;d say it&#39;s just the conventional and easy way, but in general yes - nested scopes can solve different borrow-checker issues."}, {"owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 0, "creation_date": 1521123937, "post_id": 49300331, "comment_id": 85605790, "body": "<code>I&#39;d say it&#39;s just the conventional and easy way</code> Are there other possible ways?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "edited": false, "score": 1, "creation_date": 1521124283, "post_id": 49300331, "comment_id": 85606052, "body": "@saga of course; you could, for instance, write <code>for j in 0..v.len()</code> and then refer to <code>v[j]</code> instead of <code>*j</code>."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 6, "last_activity_date": 1521119682, "last_edit_date": 1521119682, "creation_date": 1521119380, "answer_id": 49300331, "question_id": 49300241, "link": "https://stackoverflow.com/questions/49300241/how-to-increment-every-number-in-a-vector-without-the-error-cannot-borrow-as-mu/49300331#49300331", "title": "How to increment every number in a vector without the error &quot;cannot borrow as mutable more than once at a time&quot;?", "body": "<p>Don't store the mutable iterator; use it directly in the loop instead:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![2, 3, 1, 4, 2, 5];\n\n    for j in v.iter_mut() { // or for j in &amp;mut v\n        *j += 1;\n        println!(\"{}\", j);\n    }\n\n    println!(\"{:?}\", &amp;v); // note that I dropped mut here; it's not needed\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1521124942, "creation_date": 1521124942, "answer_id": 49302397, "question_id": 49300241, "link": "https://stackoverflow.com/questions/49300241/how-to-increment-every-number-in-a-vector-without-the-error-cannot-borrow-as-mu/49302397#49302397", "title": "How to increment every number in a vector without the error &quot;cannot borrow as mutable more than once at a time&quot;?", "body": "<p>Your code will work as-is in a future version of Rust thanks to <em>non-lexical lifetimes</em>:</p>\n\n<pre><code>#![feature(nll)]\n\nfn main() {\n    let mut v = vec![2, 3, 1, 4, 2, 5];\n    let i = v.iter_mut();\n    for j in i {\n        *j += 1;\n        println!(\"{}\", j);\n    }\n    println!(\"{:?}\", &amp;mut v);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=2645a333347ceeac807e1319a032d041&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 4874, "user_id": 10392256, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-AW7Hl1mMbAo/AAAAAAAAAAI/AAAAAAAAAD0/bfECoQpKQ3M/photo.jpg?sz=128", "display_name": "han solo", "link": "https://stackoverflow.com/users/10392256/han-solo"}, "is_accepted": false, "score": 0, "last_activity_date": 1590931750, "creation_date": 1590931750, "answer_id": 62116955, "question_id": 49300241, "link": "https://stackoverflow.com/questions/49300241/how-to-increment-every-number-in-a-vector-without-the-error-cannot-borrow-as-mu/62116955#62116955", "title": "How to increment every number in a vector without the error &quot;cannot borrow as mutable more than once at a time&quot;?", "body": "<p>You call also just use <code>map</code> and <code>collect</code> like,</p>\n\n<pre><code>&gt;&gt; let mut v = vec![5,1,4,2,3];\n&gt;&gt; v.iter_mut().map(|x| *x += 1).collect::&lt;Vec&lt;_&gt;&gt;();\n&gt;&gt; v\n[6, 2, 5, 3, 4]\n</code></pre>\n"}], "owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 383, "favorite_count": 0, "accepted_answer_id": 49300331, "answer_count": 3, "score": 2, "last_activity_date": 1590931750, "creation_date": 1521119091, "last_edit_date": 1521124704, "question_id": 49300241, "link": "https://stackoverflow.com/questions/49300241/how-to-increment-every-number-in-a-vector-without-the-error-cannot-borrow-as-mu", "title": "How to increment every number in a vector without the error &quot;cannot borrow as mutable more than once at a time&quot;?", "body": "<p>This code is supposed to increment each value in a vector by 1:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![2, 3, 1, 4, 2, 5];\n    let i = v.iter_mut();\n    for j in i {\n        *j += 1;\n        println!(\"{}\", j);\n    }\n    println!(\"{:?}\", &amp;mut v);\n}\n</code></pre>\n\n<p>It doesn't work because of the borrowing rules of Rust:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `v` as mutable more than once at a time\n --&gt; src/main.rs:8:27\n  |\n3 |     let i = v.iter_mut();\n  |             - first mutable borrow occurs here\n...\n8 |     println!(\"{:?}\", &amp;mut v);\n  |                           ^ second mutable borrow occurs here\n9 | }\n  | - first borrow ends here\n</code></pre>\n\n<p>How can I accomplish this task?</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1521129993, "post_id": 49299043, "comment_id": 85610418, "body": "Why did you put the type parameter on the trait in the first place, as opposed to on the method?"}, {"owner": {"reputation": 91, "user_id": 4175307, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80a9089fa5897c2c829bd9f232fd276f?s=128&d=identicon&r=PG&f=1", "display_name": "adahn", "link": "https://stackoverflow.com/users/4175307/adahn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521130429, "post_id": 49299043, "comment_id": 85610706, "body": "If I put it on the method, I won&#39;t be able to use <code>Action</code> as trait object."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1521144542, "post_id": 49299043, "comment_id": 85618815, "body": "Part of the answer is that <a href=\"https://stackoverflow.com/questions/45273361/wrong-inferred-lifetime-due-to-associated-type/45274404#45274404\">traits are invariant</a> over their arguments."}, {"owner": {"reputation": 91, "user_id": 4175307, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80a9089fa5897c2c829bd9f232fd276f?s=128&d=identicon&r=PG&f=1", "display_name": "adahn", "link": "https://stackoverflow.com/users/4175307/adahn"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1521365728, "post_id": 49299043, "comment_id": 85692499, "body": "@trentcl I&#39;ve read the text about variance and now have very vague understanding of it. However, I still have no idea how to apply the concept to my problem. Any help?"}], "answers": [{"tags": [], "owner": {"reputation": 91, "user_id": 4175307, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80a9089fa5897c2c829bd9f232fd276f?s=128&d=identicon&r=PG&f=1", "display_name": "adahn", "link": "https://stackoverflow.com/users/4175307/adahn"}, "is_accepted": true, "score": 1, "last_activity_date": 1524452863, "last_edit_date": 1524452863, "creation_date": 1521447637, "answer_id": 49358441, "question_id": 49299043, "link": "https://stackoverflow.com/questions/49299043/the-parameter-type-c-may-not-live-long-enough-when-it-doesnt-need-to/49358441#49358441", "title": "&quot;The parameter type `C` may not live long enough&quot;, when it doesn&#39;t need to", "body": "<p>I've found the solution:</p>\n\n<pre><code>// Generic system\n\ntrait Context {}\n\ntrait Action&lt;C: Context&gt; {\n    fn run(&amp;self, context: &amp;mut C);\n}\n\nstruct ActionsContainer&lt;A&gt; {\n    actions: Vec&lt;Box&lt;A&gt;&gt;,\n}\n\nstruct System&lt;'a, A: 'a&gt; {\n    actions: &amp;'a ActionsContainer&lt;A&gt;,\n}\n\nimpl&lt;'a, A&gt; System&lt;'a, A&gt; {\n    fn run&lt;C&gt;(&amp;self, c: &amp;mut C)\n    where\n        C: Context,\n        A: Action&lt;C&gt;,\n    {\n        self.actions.actions[0].run(c);\n    }\n}\n\n// Implementation\n\nstruct ContextImpl&lt;'a&gt; {\n    x: &amp;'a i32,\n    y: i32,\n}\n\nimpl&lt;'a&gt; Context for ContextImpl&lt;'a&gt; {}\n\nstruct ActionImpl {}\n\nimpl&lt;'a&gt; Action&lt;ContextImpl&lt;'a&gt;&gt; for ActionImpl {\n    fn run(&amp;self, c: &amp;mut ContextImpl) {\n        println!(\"Action!\");\n        c.y = *c.x;\n    }\n}\n\n// usage\nfn main() {\n    let container = ActionsContainer {\n        actions: vec![Box::new(ActionImpl {})],\n    };\n\n    {\n        let system = System {\n            actions: &amp;container,\n        };\n\n        {\n            let x = 8;\n            let mut context = ContextImpl { x: &amp;x, y: 0 };\n\n            system.run(&amp;mut context);\n\n            assert_eq!(context.y, *context.x)\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=8750fb2a2daccd45c2054ce6d26d08db&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Rust always assumes that traits mentioned in generic struct will be stored in that struct (hence my lifetime problems). If you are not intending to store the trait, do not mention it in struct definition. Instead, use more general bounds, and clarify them on the method, which defines appropriate lifetime.</p>\n"}], "owner": {"reputation": 91, "user_id": 4175307, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80a9089fa5897c2c829bd9f232fd276f?s=128&d=identicon&r=PG&f=1", "display_name": "adahn", "link": "https://stackoverflow.com/users/4175307/adahn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 352, "favorite_count": 0, "accepted_answer_id": 49358441, "answer_count": 1, "score": 2, "last_activity_date": 1524452863, "creation_date": 1521115488, "last_edit_date": 1521126416, "question_id": 49299043, "link": "https://stackoverflow.com/questions/49299043/the-parameter-type-c-may-not-live-long-enough-when-it-doesnt-need-to", "title": "&quot;The parameter type `C` may not live long enough&quot;, when it doesn&#39;t need to", "body": "<p>I'm writing very basic AI system in Rust. It's main components are:</p>\n\n<ul>\n<li><code>Action</code>s, which can be implemented by library user, for specific use,</li>\n<li>Generic <code>Context</code>, which is passed to all actions, and only needs to live during the action execution,</li>\n<li><code>ActionsContainer</code>, which \"globally\" stores all possible actions,</li>\n<li><code>System</code>, which chooses the correct action and runs it. There are many systems, one for each agent. However, they share the same set of behaviours, so they all reference a common <code>ActionsContainer</code>.</li>\n</ul>\n\n<p>Here is a minimum example which illustrates my problem.</p>\n\n<pre><code>// Generic system\n\ntrait Context {}\n\ntrait Action&lt;C: Context&gt; {\n    fn run(&amp;self, context: &amp;mut C);\n}\n\nstruct ActionsContainer&lt;C: Context&gt; {\n    actions: Vec&lt;Box&lt;Action&lt;C&gt;&gt;&gt;,\n}\n\nstruct System&lt;'a, C: Context&gt; {\n    actions: &amp;'a ActionsContainer&lt;C&gt;,\n}\n\nimpl&lt;'a, C: Context&gt; System&lt;'a, C&gt; {\n    fn run(&amp;self, c: &amp;mut C) {\n        self.actions.actions[0].run(c);\n    }\n}\n\n// Implementation\n\nstruct ContextImpl&lt;'a&gt; {\n    x: &amp;'a i32,\n    y: i32,\n}\n\nimpl&lt;'a&gt; Context for ContextImpl&lt;'a&gt; {}\n\nstruct ActionImpl {}\n\nimpl&lt;'a&gt; Action&lt;ContextImpl&lt;'a&gt;&gt; for ActionImpl {\n    fn run(&amp;self, c: &amp;mut ContextImpl) {\n        println!(\"Action!\");\n        c.y = c.x;\n    }\n}\n\n// usage\nfn main() {\n    let container = ActionsContainer {\n        actions: vec![Box::new(ActionImpl {})],\n    };\n\n    {\n        let system = System {\n            actions: &amp;container,\n        };\n\n        {\n            let x = 8;\n            let mut context = ContextImpl { x: &amp;x, y: 0 };\n\n            system.run(&amp;context);\n\n            assert_eq!(context.y, context.x)\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=2dd31bc7b85c6558afd981640f80cd8c&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0309]: the parameter type `C` may not live long enough\n  --&gt; src/main.rs:14:5\n   |\n13 | struct System&lt;'a, C: Context&gt; {\n   |                   -- help: consider adding an explicit lifetime bound `C: 'a`...\n14 |     actions: &amp;'a ActionsContainer&lt;C&gt;,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: ...so that the reference type `&amp;'a ActionsContainer&lt;C&gt;` does not outlive the data it points at\n  --&gt; src/main.rs:14:5\n   |\n14 |     actions: &amp;'a ActionsContainer&lt;C&gt;,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>However, <code>C</code> is not stored in <code>Action</code>. It only needs to live while <code>run</code> is executing. On the other hand, the <code>Action</code> does need to live as long as whole <code>System</code>. Is there any way to annotate this?</p>\n\n<p>I suspect, it has something to do with Higher-Rank Trait Bounds, but I don't see how to use them here.</p>\n\n<p>I've also tried to get rid of <code>Action</code> as a trait object and just use plain function references:</p>\n\n<pre><code>type Action&lt;C&gt; = fn(&amp;mut C);\n\nstruct ActionsContainer&lt;C: Context&gt; {\n    actions: Vec&lt;&amp;'static Action&lt;C&gt;&gt;,\n}\n</code></pre>\n\n<p>But the compiler error was pretty much the same.</p>\n"}, {"tags": ["c", "rust", "ffi", "sane"], "owner": {"reputation": 243, "user_id": 4011767, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba41c86519ceb89402d502b53d4ae9c2?s=128&d=identicon&r=PG&f=1", "display_name": "Jan", "link": "https://stackoverflow.com/users/4011767/jan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 126, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1521132178, "creation_date": 1521108648, "last_edit_date": 1521132178, "question_id": 49296649, "link": "https://stackoverflow.com/questions/49296649/invalid-argument-calling-sane-open-in-rust-through-ffi", "title": "&quot;invalid argument&quot; calling sane_open in Rust through FFI", "body": "<p>I'm trying to set up a Rust FFI for libsane, the Linux scanning library. Executing the <code>sane_open</code> function returns the error code <code>4</code> indicating an invalid argument. I believe it has something to do with my parameter declaration.</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>// If successful, places a new handle in *h\n// SANE_String_Const is const char* and SANE_Handle is void*\nSANE_Status sane_open(SANE_String_Const devname, SANE_Handle *h);\n</code></pre>\n\n<p>Bindgen generates the following:</p>\n\n<pre><code>pub type SANE_String_Const = *const ::std::os::raw::c_char\npub type SANE_Handle = *mut ::std::os::raw::c_void\npub fn sane_open(devname: SANE_String_Const, handle: *mut SANE_Handle) -&gt; SANE_Status;\n</code></pre>\n\n<p>Here is what I have done:</p>\n\n<pre><code>pub fn test_open() {\n    unsafe {\n        let mut version_code = 0;\n        let result = sane_init(&amp;mut version_code, None);\n        assert_eq!(result, SANE_Status_SANE_STATUS_GOOD);\n\n        let mut handle: SANE_Handle = std::ptr::null_mut();\n        let dev = CString::new(\"net1;dev0\").unwrap();\n        let result = sane_open(dev.as_ptr(), &amp;mut handle);\n        assert_eq!(result, SANE_Status_SANE_STATUS_GOOD);\n\n        sane_close(handle);\n        sane_exit();\n    }\n}\n</code></pre>\n\n<p>Note that <code>bindgen</code> generates an <code>Option&lt;_&gt;</code> type for the callback where <code>None</code> means passing <code>NULL</code>. My minimal working example in C works flawlessly:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>/* Link with -l sane */\n#include &lt;sane/sane.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n\nint main() {\n    SANE_Int version_code = 0;\n    assert(sane_init(&amp;version_code, NULL) == SANE_STATUS_GOOD);\n\n    SANE_Handle h;\n    SANE_Status r = sane_open(\"net1;dev0\", &amp;h);\n    printf(\"Result: %d\\n\", r);\n    if(r == 0)\n        sane_close(h);\n    sane_exit();\n}\n</code></pre>\n\n<p>What's wrong? Why does my Rust code behave differently?</p>\n"}, {"tags": ["scope", "rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1521128627, "last_edit_date": 1521128627, "creation_date": 1521095645, "answer_id": 49292933, "question_id": 49292404, "link": "https://stackoverflow.com/questions/49292404/why-do-generic-lifetimes-not-conform-to-the-smaller-lifetime-of-a-nested-scope/49292933#49292933", "title": "Why do generic lifetimes not conform to the smaller lifetime of a nested scope?", "body": "<p>That's only true when talking about lifetimes derived from borrowing local variables.  In this case, the relevant lifetime is the lifetime of the string data, which for string literals is <code>'static</code>.  In other words, the <code>&amp;str</code>s are pointing to data stored elsewhere (in the static data segment, specifically), so they don't interact with stack lifetimes at all.</p>\n\n<p>If we change the example slightly, we can induce the behaviour you're expecting:</p>\n\n<pre><code>fn main() {\n    let x = \"abcd\";\n    let result;\n    {\n        let y = \"qwerty\";\n        result = longest(&amp;x, &amp;y);\n    }\n    println!(\"The longest string is {}  \", result);\n\n}\n\nfn longest&lt;'a&gt;(x: &amp;'a &amp;'static str, y: &amp;'a &amp;'static str) -&gt; &amp;'a &amp;'static str {\n    if x.len() &gt; y.len() {\n        x\n    } else {\n        y\n    }\n}\n</code></pre>\n\n<p>Which fails to compile with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `y` does not live long enough\n  --&gt; src/main.rs:6:35\n   |\n6  |             result = longest(&amp;x, &amp;y);\n   |                                   ^ borrowed value does not live long enough\n7  |         }\n   |         - `y` dropped here while still borrowed\n...\n10 |     }\n   |     - borrowed value needs to live until here\n</code></pre>\n\n<p>This fails because <em>now</em> we're talking about borrows into the stack.</p>\n"}], "owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "accepted_answer_id": 49292933, "answer_count": 1, "score": 9, "last_activity_date": 1521128627, "creation_date": 1521093200, "last_edit_date": 1521128473, "question_id": 49292404, "link": "https://stackoverflow.com/questions/49292404/why-do-generic-lifetimes-not-conform-to-the-smaller-lifetime-of-a-nested-scope", "title": "Why do generic lifetimes not conform to the smaller lifetime of a nested scope?", "body": "<p>According to <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-annotations-in-function-signatures\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>:</p>\n\n<blockquote>\n  <p>Since scopes always nest, another way to say this is that the generic lifetime <code>'a</code> will get the concrete lifetime equal to the smaller of the lifetimes of <code>x</code> and <code>y</code>.</p>\n</blockquote>\n\n<pre><code>fn main() {\n    let x = \"abcd\";\n    let result;\n    {\n        let y = \"qwerty\";\n        result = longest(x, y);\n    }\n    println!(\"The longest string is {}  \", result);\n\n}\n\nfn longest&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str {\n    if x.len() &gt; y.len() {\n        x\n    } else {\n        y\n    }\n}\n</code></pre>\n\n<p>In the main function, \"the smaller of the lifetimes of x and y\" is the nested scope. This should be the lifetime of the value in <code>result</code> as well, but the result contains the correct value from outside of that nested scope.</p>\n\n<p>Why does this code work correctly?</p>\n"}, {"tags": ["rust", "hyper"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1521319492, "post_id": 49341058, "comment_id": 85683534, "body": "I don&#39;t understand how this addresses the original problem. This allows converting from Hyper&#39;s error to the user&#39;s error, but the problem is the other way around \u2014 the code needs to return Hyper&#39;s error and the user&#39;s error is being returned. Could you <a href=\"https://stackoverflow.com/posts/49341058/edit\">edit</a> your answer to show how this works in the context of the original code?"}, {"owner": {"reputation": 15, "user_id": 6458654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6578963d2e8c42b9559515a3ddbdb25?s=128&d=identicon&r=PG&f=1", "display_name": "jneuff", "link": "https://stackoverflow.com/users/6458654/jneuff"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521369729, "post_id": 49341058, "comment_id": 85693562, "body": "Reading the provided compiler error, I got it the other way round: I.e. the code needs to return the user&#39;s error type but actually returns Hyper&#39;s error type."}], "tags": [], "owner": {"reputation": 15, "user_id": 6458654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6578963d2e8c42b9559515a3ddbdb25?s=128&d=identicon&r=PG&f=1", "display_name": "jneuff", "link": "https://stackoverflow.com/users/6458654/jneuff"}, "is_accepted": false, "score": -3, "last_activity_date": 1521319410, "last_edit_date": 1521319410, "creation_date": 1521314892, "answer_id": 49341058, "question_id": 49290849, "link": "https://stackoverflow.com/questions/49290849/creating-a-hyper-service-with-custom-error-type/49341058#49341058", "title": "Creating a hyper service with custom error type", "body": "<p>You can implement the <a href=\"https://doc.rust-lang.org/std/convert/trait.From.html\" rel=\"nofollow noreferrer\"><code>std::convert::From</code></a> trait for your <code>Error</code> type. E.g. for the <code>hyper::Error</code> case:</p>\n\n<pre><code>impl From&lt;hyper::Error&gt; for Error {\n    fn from(error: hyper::Error) -&gt; Self {\n        Error::Request(error)\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3648, "user_id": 1118660, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/aaef8abaea3dc9d8ad119ceba8900aac?s=128&d=identicon&r=PG", "display_name": "Jason Watkins", "link": "https://stackoverflow.com/users/1118660/jason-watkins"}, "is_accepted": false, "score": 5, "last_activity_date": 1521344858, "creation_date": 1521344858, "answer_id": 49344300, "question_id": 49290849, "link": "https://stackoverflow.com/questions/49290849/creating-a-hyper-service-with-custom-error-type/49344300#49344300", "title": "Creating a hyper service with custom error type", "body": "<p>Because the ultimate goal of the server is to return a response to the user, I found an acceptable solution to be to create a <code>finalize</code> function that converts errors encountered while processing a request into correctly formed responses and treats those errors as non-errors from hyper's perspective. I will need to flesh this idea out some (e.g. By passing along hyper errors as errors), but I believe the basic idea is sound.</p>\n\n<p>The following code modifies the code in the question to do this:</p>\n\n<pre><code>extern crate diesel;\nextern crate futures;\nextern crate hyper;\n#[macro_use]\nextern crate serde_derive;\n\nuse futures::future::{ok, Future};\nuse hyper::StatusCode;\nuse hyper::server::{Request, Response, Service};\n\nfn main() {\n    let address = \"127.0.0.1:8080\".parse().unwrap();\n    let server = hyper::server::Http::new()\n        .bind(&amp;address, move || Ok(ApiService {}))\n        .unwrap();\n    server.run().unwrap();\n}\n\nfn finalize(result: Result&lt;Response, Error&gt;) -&gt; FutureResult&lt;Response, hyper::Error&gt; {\n    match result {\n        Ok(response) =&gt; ok(response),\n        Err(error) =&gt; {\n            let response_body =\n                json!({\"status\": 500, \"description\": error.description()}).to_string();\n            ok(Response::new()\n                .with_status(StatusCode::InternalServerError)\n                .with_header(ContentLength(response_body.len() as u64))\n                .with_body(response_body))\n        }\n    }\n}\n\npub struct ApiService;\n\nimpl Service for ApiService {\n    type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, request: Request) -&gt; Self::Future {\n        let response = Ok(Response::new().with_status(StatusCode::Ok));\n        Box::new(finalize(response))\n    }\n}\n\n#[derive(Debug)]\npub enum Error {\n    Request(hyper::Error),\n    DatabaseResult(diesel::result::Error),\n    DatabaseConnection(diesel::ConnectionError),\n    Other(String),\n}\n\n// omitted impl of Display, std::error::Error for brevity\n</code></pre>\n"}], "owner": {"reputation": 3648, "user_id": 1118660, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/aaef8abaea3dc9d8ad119ceba8900aac?s=128&d=identicon&r=PG", "display_name": "Jason Watkins", "link": "https://stackoverflow.com/users/1118660/jason-watkins"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1577, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1540950014, "creation_date": 1521082791, "last_edit_date": 1540950014, "question_id": 49290849, "link": "https://stackoverflow.com/questions/49290849/creating-a-hyper-service-with-custom-error-type", "title": "Creating a hyper service with custom error type", "body": "<p>I am trying to create a REST server using hyper. For robust error handling, I would prefer to have the service return a future with a custom error type that wraps hyper, Diesel, and other errors. Unfortunately, <code>hyper::Response</code> seems to hard-code a stream with error type <code>hyper::error::Error</code>, which conflicts with the error type I've defined for my service. I see a couple possible solutions:</p>\n\n<ol>\n<li><p>Make my service return my custom error type by modifying <code>hyper::Response</code>, which seems hard.</p></li>\n<li><p>Wrap non-hyper errors in a <code>hyper::error::Error</code>. This seems hacky.</p></li>\n<li><p>Something else. It seems like I'm missing the \"right\" way to do this.</p></li>\n</ol>\n\n<p>The following code shows what I think I want to do:</p>\n\n<pre><code>extern crate diesel;\nextern crate futures;\nextern crate hyper;\n\nuse futures::future::{ok, Future};\nuse hyper::StatusCode;\nuse hyper::server::{Request, Response, Service};\n\nfn main() {\n    let address = \"127.0.0.1:8080\".parse().unwrap();\n    let server = hyper::server::Http::new()\n        .bind(&amp;address, move || Ok(ApiService {}))\n        .unwrap();\n    server.run().unwrap();\n}\n\npub struct ApiService;\n\nimpl Service for ApiService {\n    type Request = Request;\n    type Response = Response;\n    type Error = Error;\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, request: Request) -&gt; Self::Future {\n        Box::new(ok(Response::new().with_status(StatusCode::Ok)))\n    }\n}\n\n#[derive(Debug)]\npub enum Error {\n    Request(hyper::Error),\n    DatabaseResult(diesel::result::Error),\n    DatabaseConnection(diesel::ConnectionError),\n    Other(String),\n}\n\n// omitted impl of Display, std::error::Error for brevity\n</code></pre>\n\n<p>This code results in a compiler error which I believe is because the <code>bind</code> function requires that the response type have a body that is a stream with error type <code>hyper::error::Error</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;ApiService as hyper::client::Service&gt;::Error == hyper::Error`\n  --&gt; src/main.rs:14:10\n   |\n14 |         .bind(&amp;address, move || Ok(ApiService {}))\n   |          ^^^^ expected enum `Error`, found enum `hyper::Error`\n   |\n   = note: expected type `Error`\n              found type `hyper::Error`\n</code></pre>\n"}, {"tags": ["rust", "clap"], "answers": [{"comments": [{"owner": {"reputation": 4305, "user_id": 1105235, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/08d89e5e8368e2554f2c97969e9230c8?s=128&d=identicon&r=PG", "display_name": "rpeshkov", "link": "https://stackoverflow.com/users/1105235/rpeshkov"}, "edited": false, "score": 0, "creation_date": 1521109665, "post_id": 49290687, "comment_id": 85595835, "body": "thanks for your answer. It works great! Also, thanks for the related answer. Found a lot of useful information there."}, {"owner": {"reputation": 29178, "user_id": 206720, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/394087ac877df47e3b54f03fe97df063?s=128&d=identicon&r=PG", "display_name": "Ondrej Slint&#225;k", "link": "https://stackoverflow.com/users/206720/ondrej-slint%c3%a1k"}, "edited": false, "score": 6, "creation_date": 1561296038, "post_id": 49290687, "comment_id": 100008581, "body": "Just note that: &quot;<code>Setting Arg::default_value</code> effectively disables this option as it will ensure that some argument is always present.&quot; <code>SubcommandRequiredElseHelp</code> might be a better option for some apps."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 32, "last_activity_date": 1521081323, "creation_date": 1521081323, "answer_id": 49290687, "question_id": 49290526, "link": "https://stackoverflow.com/questions/49290526/is-there-any-straightforward-way-for-clap-to-display-help-when-no-command-is-pro/49290687#49290687", "title": "Is there any straightforward way for Clap to display help when no command is provided?", "body": "<p>Use <a href=\"https://docs.rs/clap/2.31.1/clap/enum.AppSettings.html#variant.ArgRequiredElseHelp\" rel=\"noreferrer\"><code>clap::AppSettings::ArgRequiredElseHelp</code></a>:</p>\n\n<pre><code>App::new(\"myprog\")\n    .setting(AppSettings::ArgRequiredElseHelp)\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40951538/155423\">Method call on clap::App moving ownership more than once</a></li>\n</ul>\n"}], "owner": {"reputation": 4305, "user_id": 1105235, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/08d89e5e8368e2554f2c97969e9230c8?s=128&d=identicon&r=PG", "display_name": "rpeshkov", "link": "https://stackoverflow.com/users/1105235/rpeshkov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2737, "favorite_count": 4, "accepted_answer_id": 49290687, "answer_count": 1, "score": 26, "last_activity_date": 1521081323, "creation_date": 1521080201, "last_edit_date": 1521080595, "question_id": 49290526, "link": "https://stackoverflow.com/questions/49290526/is-there-any-straightforward-way-for-clap-to-display-help-when-no-command-is-pro", "title": "Is there any straightforward way for Clap to display help when no command is provided?", "body": "<p>I'm using <a href=\"https://crates.io/crates/clap\" rel=\"noreferrer\">the Clap crate</a> for parsing command line parameters. I've defined a subcommand <code>ls</code> that should list files. Clap also defines a <code>help</code> subcommand that displays information about the application and its usage.</p>\n\n<p>If no command is provided, nothing gets displayed at all, but I want the app to display help in that case.</p>\n\n<p>I've tried this code, which looks pretty straightforward, but it doesn't work:</p>\n\n<pre><code>extern crate clap;\n\nuse clap::{App, SubCommand};\n\nfn main() {\n    let mut app = App::new(\"myapp\")\n        .version(\"0.0.1\")\n        .about(\"My first CLI APP\")\n        .subcommand(SubCommand::with_name(\"ls\").about(\"List anything\"));\n    let matches = app.get_matches();\n\n    if let Some(cmd) = matches.subcommand_name() {\n        match cmd {\n            \"ls\" =&gt; println!(\"List something here\"),\n            _ =&gt; eprintln!(\"unknown command\"),\n        }\n    } else {\n        app.print_long_help();\n    }\n}\n</code></pre>\n\n<p>I get an error that <code>app</code> is used after move:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `app`\n  --&gt; src/main.rs:18:9\n   |\n10 |     let matches = app.get_matches();\n   |                   --- value moved here\n...\n18 |         app.print_long_help();\n   |         ^^^ value used here after move\n   |\n   = note: move occurs because `app` has type `clap::App&lt;'_, '_&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>Reading through the documentation of Clap, I've found that the <code>clap::ArgMatches</code> that's returned in <code>get_matches()</code> has a method <a href=\"https://docs.rs/clap/2.31.1/clap/struct.ArgMatches.html#method.usage\" rel=\"noreferrer\"><code>usage</code></a> that returns the string for usage part, but, unfortunately, only this part and nothing else.</p>\n"}]